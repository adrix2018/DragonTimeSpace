// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hero.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_hero_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_hero_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "object.pb.h"
#include "avatar.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_hero_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_hero_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[35]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hero_2eproto;
namespace hero {
class DnaItem;
class DnaItemDefaultTypeInternal;
extern DnaItemDefaultTypeInternal _DnaItem_default_instance_;
class Hero;
class HeroDefaultTypeInternal;
extern HeroDefaultTypeInternal _Hero_default_instance_;
class HeroAvatar;
class HeroAvatarDefaultTypeInternal;
extern HeroAvatarDefaultTypeInternal _HeroAvatar_default_instance_;
class HeroEvolution;
class HeroEvolutionDefaultTypeInternal;
extern HeroEvolutionDefaultTypeInternal _HeroEvolution_default_instance_;
class HeroScore;
class HeroScoreDefaultTypeInternal;
extern HeroScoreDefaultTypeInternal _HeroScore_default_instance_;
class HeroShow;
class HeroShowDefaultTypeInternal;
extern HeroShowDefaultTypeInternal _HeroShow_default_instance_;
class HeroSkill;
class HeroSkillDefaultTypeInternal;
extern HeroSkillDefaultTypeInternal _HeroSkill_default_instance_;
class HeroSkillItem;
class HeroSkillItemDefaultTypeInternal;
extern HeroSkillItemDefaultTypeInternal _HeroSkillItem_default_instance_;
class HeroTrain;
class HeroTrainDefaultTypeInternal;
extern HeroTrainDefaultTypeInternal _HeroTrain_default_instance_;
class Hole;
class HoleDefaultTypeInternal;
extern HoleDefaultTypeInternal _Hole_default_instance_;
class MSG_AllDnaPageInfo_CSC;
class MSG_AllDnaPageInfo_CSCDefaultTypeInternal;
extern MSG_AllDnaPageInfo_CSCDefaultTypeInternal _MSG_AllDnaPageInfo_CSC_default_instance_;
class MSG_DnaBagInfo_CSC;
class MSG_DnaBagInfo_CSCDefaultTypeInternal;
extern MSG_DnaBagInfo_CSCDefaultTypeInternal _MSG_DnaBagInfo_CSC_default_instance_;
class MSG_DnaPageInfo_CSC;
class MSG_DnaPageInfo_CSCDefaultTypeInternal;
extern MSG_DnaPageInfo_CSCDefaultTypeInternal _MSG_DnaPageInfo_CSC_default_instance_;
class MSG_NotifyAllHeros_SC;
class MSG_NotifyAllHeros_SCDefaultTypeInternal;
extern MSG_NotifyAllHeros_SCDefaultTypeInternal _MSG_NotifyAllHeros_SC_default_instance_;
class MSG_NotifyClientHeroScore_SC;
class MSG_NotifyClientHeroScore_SCDefaultTypeInternal;
extern MSG_NotifyClientHeroScore_SCDefaultTypeInternal _MSG_NotifyClientHeroScore_SC_default_instance_;
class MSG_NotifyHeroChange_SC;
class MSG_NotifyHeroChange_SCDefaultTypeInternal;
extern MSG_NotifyHeroChange_SCDefaultTypeInternal _MSG_NotifyHeroChange_SC_default_instance_;
class MSG_ReqBuySlot_SC;
class MSG_ReqBuySlot_SCDefaultTypeInternal;
extern MSG_ReqBuySlot_SCDefaultTypeInternal _MSG_ReqBuySlot_SC_default_instance_;
class MSG_ReqChangeCurDnaPage_CS;
class MSG_ReqChangeCurDnaPage_CSDefaultTypeInternal;
extern MSG_ReqChangeCurDnaPage_CSDefaultTypeInternal _MSG_ReqChangeCurDnaPage_CS_default_instance_;
class MSG_ReqCombineDnaInBag_CS;
class MSG_ReqCombineDnaInBag_CSDefaultTypeInternal;
extern MSG_ReqCombineDnaInBag_CSDefaultTypeInternal _MSG_ReqCombineDnaInBag_CS_default_instance_;
class MSG_ReqCombineDna_CS;
class MSG_ReqCombineDna_CSDefaultTypeInternal;
extern MSG_ReqCombineDna_CSDefaultTypeInternal _MSG_ReqCombineDna_CS_default_instance_;
class MSG_ReqHeroTrain_CS;
class MSG_ReqHeroTrain_CSDefaultTypeInternal;
extern MSG_ReqHeroTrain_CSDefaultTypeInternal _MSG_ReqHeroTrain_CS_default_instance_;
class MSG_ReqLevelupHeroSkill_CS;
class MSG_ReqLevelupHeroSkill_CSDefaultTypeInternal;
extern MSG_ReqLevelupHeroSkill_CSDefaultTypeInternal _MSG_ReqLevelupHeroSkill_CS_default_instance_;
class MSG_ReqLockUnlockHero_CS;
class MSG_ReqLockUnlockHero_CSDefaultTypeInternal;
extern MSG_ReqLockUnlockHero_CSDefaultTypeInternal _MSG_ReqLockUnlockHero_CS_default_instance_;
class MSG_ReqPutOffDna_CS;
class MSG_ReqPutOffDna_CSDefaultTypeInternal;
extern MSG_ReqPutOffDna_CSDefaultTypeInternal _MSG_ReqPutOffDna_CS_default_instance_;
class MSG_ReqPutOnDna_CS;
class MSG_ReqPutOnDna_CSDefaultTypeInternal;
extern MSG_ReqPutOnDna_CSDefaultTypeInternal _MSG_ReqPutOnDna_CS_default_instance_;
class MSG_ReqRiseStar_CS;
class MSG_ReqRiseStar_CSDefaultTypeInternal;
extern MSG_ReqRiseStar_CSDefaultTypeInternal _MSG_ReqRiseStar_CS_default_instance_;
class MSG_ReqSwitchHero_CS;
class MSG_ReqSwitchHero_CSDefaultTypeInternal;
extern MSG_ReqSwitchHero_CSDefaultTypeInternal _MSG_ReqSwitchHero_CS_default_instance_;
class MSG_ResponseSlotOpened_SC;
class MSG_ResponseSlotOpened_SCDefaultTypeInternal;
extern MSG_ResponseSlotOpened_SCDefaultTypeInternal _MSG_ResponseSlotOpened_SC_default_instance_;
class MSG_RetHeroTrain_SC;
class MSG_RetHeroTrain_SCDefaultTypeInternal;
extern MSG_RetHeroTrain_SCDefaultTypeInternal _MSG_RetHeroTrain_SC_default_instance_;
class MSG_RetLevelupHeroSkill_SC;
class MSG_RetLevelupHeroSkill_SCDefaultTypeInternal;
extern MSG_RetLevelupHeroSkill_SCDefaultTypeInternal _MSG_RetLevelupHeroSkill_SC_default_instance_;
class MSG_RetLockUnlockHero_SC;
class MSG_RetLockUnlockHero_SCDefaultTypeInternal;
extern MSG_RetLockUnlockHero_SCDefaultTypeInternal _MSG_RetLockUnlockHero_SC_default_instance_;
class MSG_RetRiseStar_SC;
class MSG_RetRiseStar_SCDefaultTypeInternal;
extern MSG_RetRiseStar_SCDefaultTypeInternal _MSG_RetRiseStar_SC_default_instance_;
class MSG_RetSwitchHero_SC;
class MSG_RetSwitchHero_SCDefaultTypeInternal;
extern MSG_RetSwitchHero_SCDefaultTypeInternal _MSG_RetSwitchHero_SC_default_instance_;
class MSG_SetMainHero_CSC;
class MSG_SetMainHero_CSCDefaultTypeInternal;
extern MSG_SetMainHero_CSCDefaultTypeInternal _MSG_SetMainHero_CSC_default_instance_;
class MSG_notifyRefreshHero_SC;
class MSG_notifyRefreshHero_SCDefaultTypeInternal;
extern MSG_notifyRefreshHero_SCDefaultTypeInternal _MSG_notifyRefreshHero_SC_default_instance_;
}  // namespace hero
PROTOBUF_NAMESPACE_OPEN
template<> ::hero::DnaItem* Arena::CreateMaybeMessage<::hero::DnaItem>(Arena*);
template<> ::hero::Hero* Arena::CreateMaybeMessage<::hero::Hero>(Arena*);
template<> ::hero::HeroAvatar* Arena::CreateMaybeMessage<::hero::HeroAvatar>(Arena*);
template<> ::hero::HeroEvolution* Arena::CreateMaybeMessage<::hero::HeroEvolution>(Arena*);
template<> ::hero::HeroScore* Arena::CreateMaybeMessage<::hero::HeroScore>(Arena*);
template<> ::hero::HeroShow* Arena::CreateMaybeMessage<::hero::HeroShow>(Arena*);
template<> ::hero::HeroSkill* Arena::CreateMaybeMessage<::hero::HeroSkill>(Arena*);
template<> ::hero::HeroSkillItem* Arena::CreateMaybeMessage<::hero::HeroSkillItem>(Arena*);
template<> ::hero::HeroTrain* Arena::CreateMaybeMessage<::hero::HeroTrain>(Arena*);
template<> ::hero::Hole* Arena::CreateMaybeMessage<::hero::Hole>(Arena*);
template<> ::hero::MSG_AllDnaPageInfo_CSC* Arena::CreateMaybeMessage<::hero::MSG_AllDnaPageInfo_CSC>(Arena*);
template<> ::hero::MSG_DnaBagInfo_CSC* Arena::CreateMaybeMessage<::hero::MSG_DnaBagInfo_CSC>(Arena*);
template<> ::hero::MSG_DnaPageInfo_CSC* Arena::CreateMaybeMessage<::hero::MSG_DnaPageInfo_CSC>(Arena*);
template<> ::hero::MSG_NotifyAllHeros_SC* Arena::CreateMaybeMessage<::hero::MSG_NotifyAllHeros_SC>(Arena*);
template<> ::hero::MSG_NotifyClientHeroScore_SC* Arena::CreateMaybeMessage<::hero::MSG_NotifyClientHeroScore_SC>(Arena*);
template<> ::hero::MSG_NotifyHeroChange_SC* Arena::CreateMaybeMessage<::hero::MSG_NotifyHeroChange_SC>(Arena*);
template<> ::hero::MSG_ReqBuySlot_SC* Arena::CreateMaybeMessage<::hero::MSG_ReqBuySlot_SC>(Arena*);
template<> ::hero::MSG_ReqChangeCurDnaPage_CS* Arena::CreateMaybeMessage<::hero::MSG_ReqChangeCurDnaPage_CS>(Arena*);
template<> ::hero::MSG_ReqCombineDnaInBag_CS* Arena::CreateMaybeMessage<::hero::MSG_ReqCombineDnaInBag_CS>(Arena*);
template<> ::hero::MSG_ReqCombineDna_CS* Arena::CreateMaybeMessage<::hero::MSG_ReqCombineDna_CS>(Arena*);
template<> ::hero::MSG_ReqHeroTrain_CS* Arena::CreateMaybeMessage<::hero::MSG_ReqHeroTrain_CS>(Arena*);
template<> ::hero::MSG_ReqLevelupHeroSkill_CS* Arena::CreateMaybeMessage<::hero::MSG_ReqLevelupHeroSkill_CS>(Arena*);
template<> ::hero::MSG_ReqLockUnlockHero_CS* Arena::CreateMaybeMessage<::hero::MSG_ReqLockUnlockHero_CS>(Arena*);
template<> ::hero::MSG_ReqPutOffDna_CS* Arena::CreateMaybeMessage<::hero::MSG_ReqPutOffDna_CS>(Arena*);
template<> ::hero::MSG_ReqPutOnDna_CS* Arena::CreateMaybeMessage<::hero::MSG_ReqPutOnDna_CS>(Arena*);
template<> ::hero::MSG_ReqRiseStar_CS* Arena::CreateMaybeMessage<::hero::MSG_ReqRiseStar_CS>(Arena*);
template<> ::hero::MSG_ReqSwitchHero_CS* Arena::CreateMaybeMessage<::hero::MSG_ReqSwitchHero_CS>(Arena*);
template<> ::hero::MSG_ResponseSlotOpened_SC* Arena::CreateMaybeMessage<::hero::MSG_ResponseSlotOpened_SC>(Arena*);
template<> ::hero::MSG_RetHeroTrain_SC* Arena::CreateMaybeMessage<::hero::MSG_RetHeroTrain_SC>(Arena*);
template<> ::hero::MSG_RetLevelupHeroSkill_SC* Arena::CreateMaybeMessage<::hero::MSG_RetLevelupHeroSkill_SC>(Arena*);
template<> ::hero::MSG_RetLockUnlockHero_SC* Arena::CreateMaybeMessage<::hero::MSG_RetLockUnlockHero_SC>(Arena*);
template<> ::hero::MSG_RetRiseStar_SC* Arena::CreateMaybeMessage<::hero::MSG_RetRiseStar_SC>(Arena*);
template<> ::hero::MSG_RetSwitchHero_SC* Arena::CreateMaybeMessage<::hero::MSG_RetSwitchHero_SC>(Arena*);
template<> ::hero::MSG_SetMainHero_CSC* Arena::CreateMaybeMessage<::hero::MSG_SetMainHero_CSC>(Arena*);
template<> ::hero::MSG_notifyRefreshHero_SC* Arena::CreateMaybeMessage<::hero::MSG_notifyRefreshHero_SC>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace hero {

enum DNAPage : int {
  NONE = 0,
  PAGE1 = 1,
  PAGE2 = 2,
  PAGE3 = 3,
  PAGE4 = 4,
  MAX = 5
};
bool DNAPage_IsValid(int value);
constexpr DNAPage DNAPage_MIN = NONE;
constexpr DNAPage DNAPage_MAX = MAX;
constexpr int DNAPage_ARRAYSIZE = DNAPage_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DNAPage_descriptor();
template<typename T>
inline const std::string& DNAPage_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DNAPage>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DNAPage_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DNAPage_descriptor(), enum_t_value);
}
inline bool DNAPage_Parse(
    const std::string& name, DNAPage* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DNAPage>(
    DNAPage_descriptor(), name, value);
}
enum DNASlotType : int {
  ATT = 0,
  DEF = 1,
  ALL = 2
};
bool DNASlotType_IsValid(int value);
constexpr DNASlotType DNASlotType_MIN = ATT;
constexpr DNASlotType DNASlotType_MAX = ALL;
constexpr int DNASlotType_ARRAYSIZE = DNASlotType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DNASlotType_descriptor();
template<typename T>
inline const std::string& DNASlotType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DNASlotType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DNASlotType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DNASlotType_descriptor(), enum_t_value);
}
inline bool DNASlotType_Parse(
    const std::string& name, DNASlotType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DNASlotType>(
    DNASlotType_descriptor(), name, value);
}
// ===================================================================

class Hero :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.Hero) */ {
 public:
  Hero();
  virtual ~Hero();

  Hero(const Hero& from);
  Hero(Hero&& from) noexcept
    : Hero() {
    *this = ::std::move(from);
  }

  inline Hero& operator=(const Hero& from) {
    CopyFrom(from);
    return *this;
  }
  inline Hero& operator=(Hero&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Hero& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Hero* internal_default_instance() {
    return reinterpret_cast<const Hero*>(
               &_Hero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Hero& a, Hero& b) {
    a.Swap(&b);
  }
  inline void Swap(Hero* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Hero* New() const final {
    return CreateMaybeMessage<Hero>(nullptr);
  }

  Hero* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Hero>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Hero& from);
  void MergeFrom(const Hero& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Hero* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.Hero";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kTrainFieldNumber = 8,
    kSkillFieldNumber = 9,
    kAvatarFieldNumber = 10,
    kEvolutionFieldNumber = 11,
    kShowFieldNumber = 12,
    kCardpackFieldNumber = 13,
    kBaseidFieldNumber = 2,
    kStarFieldNumber = 3,
    kBindFieldNumber = 4,
    kLockFieldNumber = 5,
    kRunepageidFieldNumber = 6,
    kScoreFieldNumber = 7,
    kTradetimeFieldNumber = 14,
    kLevelFieldNumber = 15,
    kExpFieldNumber = 16,
    kSelfCreatedFieldNumber = 17,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional .hero.HeroTrain train = 8;
  bool has_train() const;
  private:
  bool _internal_has_train() const;
  public:
  void clear_train();
  const ::hero::HeroTrain& train() const;
  ::hero::HeroTrain* release_train();
  ::hero::HeroTrain* mutable_train();
  void set_allocated_train(::hero::HeroTrain* train);
  private:
  const ::hero::HeroTrain& _internal_train() const;
  ::hero::HeroTrain* _internal_mutable_train();
  public:

  // optional .hero.HeroSkill skill = 9;
  bool has_skill() const;
  private:
  bool _internal_has_skill() const;
  public:
  void clear_skill();
  const ::hero::HeroSkill& skill() const;
  ::hero::HeroSkill* release_skill();
  ::hero::HeroSkill* mutable_skill();
  void set_allocated_skill(::hero::HeroSkill* skill);
  private:
  const ::hero::HeroSkill& _internal_skill() const;
  ::hero::HeroSkill* _internal_mutable_skill();
  public:

  // optional .hero.HeroAvatar avatar = 10;
  bool has_avatar() const;
  private:
  bool _internal_has_avatar() const;
  public:
  void clear_avatar();
  const ::hero::HeroAvatar& avatar() const;
  ::hero::HeroAvatar* release_avatar();
  ::hero::HeroAvatar* mutable_avatar();
  void set_allocated_avatar(::hero::HeroAvatar* avatar);
  private:
  const ::hero::HeroAvatar& _internal_avatar() const;
  ::hero::HeroAvatar* _internal_mutable_avatar();
  public:

  // optional .hero.HeroEvolution evolution = 11;
  bool has_evolution() const;
  private:
  bool _internal_has_evolution() const;
  public:
  void clear_evolution();
  const ::hero::HeroEvolution& evolution() const;
  ::hero::HeroEvolution* release_evolution();
  ::hero::HeroEvolution* mutable_evolution();
  void set_allocated_evolution(::hero::HeroEvolution* evolution);
  private:
  const ::hero::HeroEvolution& _internal_evolution() const;
  ::hero::HeroEvolution* _internal_mutable_evolution();
  public:

  // optional .hero.HeroShow show = 12;
  bool has_show() const;
  private:
  bool _internal_has_show() const;
  public:
  void clear_show();
  const ::hero::HeroShow& show() const;
  ::hero::HeroShow* release_show();
  ::hero::HeroShow* mutable_show();
  void set_allocated_show(::hero::HeroShow* show);
  private:
  const ::hero::HeroShow& _internal_show() const;
  ::hero::HeroShow* _internal_mutable_show();
  public:

  // optional .Obj.CardPackInfo cardpack = 13;
  bool has_cardpack() const;
  private:
  bool _internal_has_cardpack() const;
  public:
  void clear_cardpack();
  const ::Obj::CardPackInfo& cardpack() const;
  ::Obj::CardPackInfo* release_cardpack();
  ::Obj::CardPackInfo* mutable_cardpack();
  void set_allocated_cardpack(::Obj::CardPackInfo* cardpack);
  private:
  const ::Obj::CardPackInfo& _internal_cardpack() const;
  ::Obj::CardPackInfo* _internal_mutable_cardpack();
  public:

  // optional uint32 baseid = 2;
  bool has_baseid() const;
  private:
  bool _internal_has_baseid() const;
  public:
  void clear_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid() const;
  void set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseid() const;
  void _internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 star = 3;
  bool has_star() const;
  private:
  bool _internal_has_star() const;
  public:
  void clear_star();
  ::PROTOBUF_NAMESPACE_ID::uint32 star() const;
  void set_star(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_star() const;
  void _internal_set_star(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bind = 4;
  bool has_bind() const;
  private:
  bool _internal_has_bind() const;
  public:
  void clear_bind();
  ::PROTOBUF_NAMESPACE_ID::uint32 bind() const;
  void set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bind() const;
  void _internal_set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lock = 5;
  bool has_lock() const;
  private:
  bool _internal_has_lock() const;
  public:
  void clear_lock();
  ::PROTOBUF_NAMESPACE_ID::uint32 lock() const;
  void set_lock(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lock() const;
  void _internal_set_lock(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 runepageid = 6;
  bool has_runepageid() const;
  private:
  bool _internal_has_runepageid() const;
  public:
  void clear_runepageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 runepageid() const;
  void set_runepageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_runepageid() const;
  void _internal_set_runepageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 score = 7;
  bool has_score() const;
  private:
  bool _internal_has_score() const;
  public:
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tradetime = 14;
  bool has_tradetime() const;
  private:
  bool _internal_has_tradetime() const;
  public:
  void clear_tradetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 tradetime() const;
  void set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tradetime() const;
  void _internal_set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 15;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 exp = 16;
  bool has_exp() const;
  private:
  bool _internal_has_exp() const;
  public:
  void clear_exp();
  ::PROTOBUF_NAMESPACE_ID::uint64 exp() const;
  void set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_exp() const;
  void _internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool self_created = 17;
  bool has_self_created() const;
  private:
  bool _internal_has_self_created() const;
  public:
  void clear_self_created();
  bool self_created() const;
  void set_self_created(bool value);
  private:
  bool _internal_self_created() const;
  void _internal_set_self_created(bool value);
  public:

  // @@protoc_insertion_point(class_scope:hero.Hero)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::hero::HeroTrain* train_;
  ::hero::HeroSkill* skill_;
  ::hero::HeroAvatar* avatar_;
  ::hero::HeroEvolution* evolution_;
  ::hero::HeroShow* show_;
  ::Obj::CardPackInfo* cardpack_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 star_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bind_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lock_;
  ::PROTOBUF_NAMESPACE_ID::uint32 runepageid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 score_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tradetime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint64 exp_;
  bool self_created_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class HeroShow :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.HeroShow) */ {
 public:
  HeroShow();
  virtual ~HeroShow();

  HeroShow(const HeroShow& from);
  HeroShow(HeroShow&& from) noexcept
    : HeroShow() {
    *this = ::std::move(from);
  }

  inline HeroShow& operator=(const HeroShow& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeroShow& operator=(HeroShow&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HeroShow& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeroShow* internal_default_instance() {
    return reinterpret_cast<const HeroShow*>(
               &_HeroShow_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(HeroShow& a, HeroShow& b) {
    a.Swap(&b);
  }
  inline void Swap(HeroShow* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeroShow* New() const final {
    return CreateMaybeMessage<HeroShow>(nullptr);
  }

  HeroShow* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeroShow>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HeroShow& from);
  void MergeFrom(const HeroShow& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeroShow* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.HeroShow";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFacestyleFieldNumber = 1,
    kHairstyleFieldNumber = 2,
    kBodystyleFieldNumber = 3,
    kHaircolorFieldNumber = 4,
    kAntennaFieldNumber = 5,
  };
  // optional uint32 facestyle = 1;
  bool has_facestyle() const;
  private:
  bool _internal_has_facestyle() const;
  public:
  void clear_facestyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 facestyle() const;
  void set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_facestyle() const;
  void _internal_set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hairstyle = 2;
  bool has_hairstyle() const;
  private:
  bool _internal_has_hairstyle() const;
  public:
  void clear_hairstyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 hairstyle() const;
  void set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hairstyle() const;
  void _internal_set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bodystyle = 3;
  bool has_bodystyle() const;
  private:
  bool _internal_has_bodystyle() const;
  public:
  void clear_bodystyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 bodystyle() const;
  void set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bodystyle() const;
  void _internal_set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 haircolor = 4;
  bool has_haircolor() const;
  private:
  bool _internal_has_haircolor() const;
  public:
  void clear_haircolor();
  ::PROTOBUF_NAMESPACE_ID::uint32 haircolor() const;
  void set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_haircolor() const;
  void _internal_set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 antenna = 5;
  bool has_antenna() const;
  private:
  bool _internal_has_antenna() const;
  public:
  void clear_antenna();
  ::PROTOBUF_NAMESPACE_ID::uint32 antenna() const;
  void set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_antenna() const;
  void _internal_set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.HeroShow)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 facestyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hairstyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bodystyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 haircolor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 antenna_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class HeroTrain :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.HeroTrain) */ {
 public:
  HeroTrain();
  virtual ~HeroTrain();

  HeroTrain(const HeroTrain& from);
  HeroTrain(HeroTrain&& from) noexcept
    : HeroTrain() {
    *this = ::std::move(from);
  }

  inline HeroTrain& operator=(const HeroTrain& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeroTrain& operator=(HeroTrain&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HeroTrain& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeroTrain* internal_default_instance() {
    return reinterpret_cast<const HeroTrain*>(
               &_HeroTrain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(HeroTrain& a, HeroTrain& b) {
    a.Swap(&b);
  }
  inline void Swap(HeroTrain* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeroTrain* New() const final {
    return CreateMaybeMessage<HeroTrain>(nullptr);
  }

  HeroTrain* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeroTrain>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HeroTrain& from);
  void MergeFrom(const HeroTrain& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeroTrain* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.HeroTrain";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPdamageFieldNumber = 2,
    kMdamageFieldNumber = 3,
    kPdefenceFieldNumber = 4,
    kMdefenceFieldNumber = 5,
    kMaxhpFieldNumber = 6,
  };
  // optional uint32 pdamage = 2;
  bool has_pdamage() const;
  private:
  bool _internal_has_pdamage() const;
  public:
  void clear_pdamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdamage() const;
  void set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdamage() const;
  void _internal_set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 mdamage = 3;
  bool has_mdamage() const;
  private:
  bool _internal_has_mdamage() const;
  public:
  void clear_mdamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 mdamage() const;
  void set_mdamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mdamage() const;
  void _internal_set_mdamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pdefence = 4;
  bool has_pdefence() const;
  private:
  bool _internal_has_pdefence() const;
  public:
  void clear_pdefence();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdefence() const;
  void set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdefence() const;
  void _internal_set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 mdefence = 5;
  bool has_mdefence() const;
  private:
  bool _internal_has_mdefence() const;
  public:
  void clear_mdefence();
  ::PROTOBUF_NAMESPACE_ID::uint32 mdefence() const;
  void set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mdefence() const;
  void _internal_set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxhp = 6;
  bool has_maxhp() const;
  private:
  bool _internal_has_maxhp() const;
  public:
  void clear_maxhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp() const;
  void set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxhp() const;
  void _internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.HeroTrain)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mdamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdefence_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mdefence_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class HeroSkillItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.HeroSkillItem) */ {
 public:
  HeroSkillItem();
  virtual ~HeroSkillItem();

  HeroSkillItem(const HeroSkillItem& from);
  HeroSkillItem(HeroSkillItem&& from) noexcept
    : HeroSkillItem() {
    *this = ::std::move(from);
  }

  inline HeroSkillItem& operator=(const HeroSkillItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeroSkillItem& operator=(HeroSkillItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HeroSkillItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeroSkillItem* internal_default_instance() {
    return reinterpret_cast<const HeroSkillItem*>(
               &_HeroSkillItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(HeroSkillItem& a, HeroSkillItem& b) {
    a.Swap(&b);
  }
  inline void Swap(HeroSkillItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeroSkillItem* New() const final {
    return CreateMaybeMessage<HeroSkillItem>(nullptr);
  }

  HeroSkillItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeroSkillItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HeroSkillItem& from);
  void MergeFrom(const HeroSkillItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeroSkillItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.HeroSkillItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillbaseidFieldNumber = 1,
    kSkilllevelFieldNumber = 2,
    kSkillorgidFieldNumber = 3,
  };
  // optional uint32 skillbaseid = 1;
  bool has_skillbaseid() const;
  private:
  bool _internal_has_skillbaseid() const;
  public:
  void clear_skillbaseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillbaseid() const;
  void set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillbaseid() const;
  void _internal_set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skilllevel = 2;
  bool has_skilllevel() const;
  private:
  bool _internal_has_skilllevel() const;
  public:
  void clear_skilllevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 skilllevel() const;
  void set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skilllevel() const;
  void _internal_set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skillorgid = 3;
  bool has_skillorgid() const;
  private:
  bool _internal_has_skillorgid() const;
  public:
  void clear_skillorgid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillorgid() const;
  void set_skillorgid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillorgid() const;
  void _internal_set_skillorgid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.HeroSkillItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillbaseid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skilllevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillorgid_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class HeroSkill :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.HeroSkill) */ {
 public:
  HeroSkill();
  virtual ~HeroSkill();

  HeroSkill(const HeroSkill& from);
  HeroSkill(HeroSkill&& from) noexcept
    : HeroSkill() {
    *this = ::std::move(from);
  }

  inline HeroSkill& operator=(const HeroSkill& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeroSkill& operator=(HeroSkill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HeroSkill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeroSkill* internal_default_instance() {
    return reinterpret_cast<const HeroSkill*>(
               &_HeroSkill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(HeroSkill& a, HeroSkill& b) {
    a.Swap(&b);
  }
  inline void Swap(HeroSkill* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeroSkill* New() const final {
    return CreateMaybeMessage<HeroSkill>(nullptr);
  }

  HeroSkill* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeroSkill>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HeroSkill& from);
  void MergeFrom(const HeroSkill& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeroSkill* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.HeroSkill";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillFieldNumber = 1,
  };
  // repeated .hero.HeroSkillItem skill = 1;
  int skill_size() const;
  private:
  int _internal_skill_size() const;
  public:
  void clear_skill();
  ::hero::HeroSkillItem* mutable_skill(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::HeroSkillItem >*
      mutable_skill();
  private:
  const ::hero::HeroSkillItem& _internal_skill(int index) const;
  ::hero::HeroSkillItem* _internal_add_skill();
  public:
  const ::hero::HeroSkillItem& skill(int index) const;
  ::hero::HeroSkillItem* add_skill();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::HeroSkillItem >&
      skill() const;

  // @@protoc_insertion_point(class_scope:hero.HeroSkill)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::HeroSkillItem > skill_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class HeroAvatar :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.HeroAvatar) */ {
 public:
  HeroAvatar();
  virtual ~HeroAvatar();

  HeroAvatar(const HeroAvatar& from);
  HeroAvatar(HeroAvatar&& from) noexcept
    : HeroAvatar() {
    *this = ::std::move(from);
  }

  inline HeroAvatar& operator=(const HeroAvatar& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeroAvatar& operator=(HeroAvatar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HeroAvatar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeroAvatar* internal_default_instance() {
    return reinterpret_cast<const HeroAvatar*>(
               &_HeroAvatar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(HeroAvatar& a, HeroAvatar& b) {
    a.Swap(&b);
  }
  inline void Swap(HeroAvatar* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeroAvatar* New() const final {
    return CreateMaybeMessage<HeroAvatar>(nullptr);
  }

  HeroAvatar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeroAvatar>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HeroAvatar& from);
  void MergeFrom(const HeroAvatar& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeroAvatar* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.HeroAvatar";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvatarsFieldNumber = 1,
    kEquAvatarsFieldNumber = 2,
    kAttrAvatarFieldNumber = 3,
    kActiveAvatarFieldNumber = 4,
    kTranSkillFieldNumber = 5,
  };
  // repeated uint32 avatars = 1;
  int avatars_size() const;
  private:
  int _internal_avatars_size() const;
  public:
  void clear_avatars();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_avatars(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_avatars() const;
  void _internal_add_avatars(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_avatars();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 avatars(int index) const;
  void set_avatars(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_avatars(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      avatars() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_avatars();

  // repeated .avatar.AvatarPair equAvatars = 2;
  int equavatars_size() const;
  private:
  int _internal_equavatars_size() const;
  public:
  void clear_equavatars();
  ::avatar::AvatarPair* mutable_equavatars(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::avatar::AvatarPair >*
      mutable_equavatars();
  private:
  const ::avatar::AvatarPair& _internal_equavatars(int index) const;
  ::avatar::AvatarPair* _internal_add_equavatars();
  public:
  const ::avatar::AvatarPair& equavatars(int index) const;
  ::avatar::AvatarPair* add_equavatars();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::avatar::AvatarPair >&
      equavatars() const;

  // optional uint32 attrAvatar = 3;
  bool has_attravatar() const;
  private:
  bool _internal_has_attravatar() const;
  public:
  void clear_attravatar();
  ::PROTOBUF_NAMESPACE_ID::uint32 attravatar() const;
  void set_attravatar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attravatar() const;
  void _internal_set_attravatar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 activeAvatar = 4;
  bool has_activeavatar() const;
  private:
  bool _internal_has_activeavatar() const;
  public:
  void clear_activeavatar();
  ::PROTOBUF_NAMESPACE_ID::uint32 activeavatar() const;
  void set_activeavatar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_activeavatar() const;
  void _internal_set_activeavatar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tranSkill = 5;
  bool has_transkill() const;
  private:
  bool _internal_has_transkill() const;
  public:
  void clear_transkill();
  ::PROTOBUF_NAMESPACE_ID::uint32 transkill() const;
  void set_transkill(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_transkill() const;
  void _internal_set_transkill(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.HeroAvatar)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > avatars_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::avatar::AvatarPair > equavatars_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attravatar_;
  ::PROTOBUF_NAMESPACE_ID::uint32 activeavatar_;
  ::PROTOBUF_NAMESPACE_ID::uint32 transkill_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class HeroEvolution :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.HeroEvolution) */ {
 public:
  HeroEvolution();
  virtual ~HeroEvolution();

  HeroEvolution(const HeroEvolution& from);
  HeroEvolution(HeroEvolution&& from) noexcept
    : HeroEvolution() {
    *this = ::std::move(from);
  }

  inline HeroEvolution& operator=(const HeroEvolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeroEvolution& operator=(HeroEvolution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HeroEvolution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeroEvolution* internal_default_instance() {
    return reinterpret_cast<const HeroEvolution*>(
               &_HeroEvolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(HeroEvolution& a, HeroEvolution& b) {
    a.Swap(&b);
  }
  inline void Swap(HeroEvolution* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeroEvolution* New() const final {
    return CreateMaybeMessage<HeroEvolution>(nullptr);
  }

  HeroEvolution* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeroEvolution>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HeroEvolution& from);
  void MergeFrom(const HeroEvolution& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeroEvolution* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.HeroEvolution";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEvolutionsFieldNumber = 1,
  };
  // repeated uint32 evolutions = 1;
  int evolutions_size() const;
  private:
  int _internal_evolutions_size() const;
  public:
  void clear_evolutions();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_evolutions(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_evolutions() const;
  void _internal_add_evolutions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_evolutions();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 evolutions(int index) const;
  void set_evolutions(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_evolutions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      evolutions() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_evolutions();

  // @@protoc_insertion_point(class_scope:hero.HeroEvolution)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > evolutions_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSwitchHero_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqSwitchHero_CS) */ {
 public:
  MSG_ReqSwitchHero_CS();
  virtual ~MSG_ReqSwitchHero_CS();

  MSG_ReqSwitchHero_CS(const MSG_ReqSwitchHero_CS& from);
  MSG_ReqSwitchHero_CS(MSG_ReqSwitchHero_CS&& from) noexcept
    : MSG_ReqSwitchHero_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSwitchHero_CS& operator=(const MSG_ReqSwitchHero_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSwitchHero_CS& operator=(MSG_ReqSwitchHero_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSwitchHero_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSwitchHero_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSwitchHero_CS*>(
               &_MSG_ReqSwitchHero_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_ReqSwitchHero_CS& a, MSG_ReqSwitchHero_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSwitchHero_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSwitchHero_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSwitchHero_CS>(nullptr);
  }

  MSG_ReqSwitchHero_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSwitchHero_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSwitchHero_CS& from);
  void MergeFrom(const MSG_ReqSwitchHero_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSwitchHero_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqSwitchHero_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kToherothisidFieldNumber = 1,
  };
  // optional string toherothisid = 1;
  bool has_toherothisid() const;
  private:
  bool _internal_has_toherothisid() const;
  public:
  void clear_toherothisid();
  const std::string& toherothisid() const;
  void set_toherothisid(const std::string& value);
  void set_toherothisid(std::string&& value);
  void set_toherothisid(const char* value);
  void set_toherothisid(const char* value, size_t size);
  std::string* mutable_toherothisid();
  std::string* release_toherothisid();
  void set_allocated_toherothisid(std::string* toherothisid);
  private:
  const std::string& _internal_toherothisid() const;
  void _internal_set_toherothisid(const std::string& value);
  std::string* _internal_mutable_toherothisid();
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqSwitchHero_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr toherothisid_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetSwitchHero_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_RetSwitchHero_SC) */ {
 public:
  MSG_RetSwitchHero_SC();
  virtual ~MSG_RetSwitchHero_SC();

  MSG_RetSwitchHero_SC(const MSG_RetSwitchHero_SC& from);
  MSG_RetSwitchHero_SC(MSG_RetSwitchHero_SC&& from) noexcept
    : MSG_RetSwitchHero_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetSwitchHero_SC& operator=(const MSG_RetSwitchHero_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetSwitchHero_SC& operator=(MSG_RetSwitchHero_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetSwitchHero_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetSwitchHero_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetSwitchHero_SC*>(
               &_MSG_RetSwitchHero_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_RetSwitchHero_SC& a, MSG_RetSwitchHero_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetSwitchHero_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetSwitchHero_SC* New() const final {
    return CreateMaybeMessage<MSG_RetSwitchHero_SC>(nullptr);
  }

  MSG_RetSwitchHero_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetSwitchHero_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetSwitchHero_SC& from);
  void MergeFrom(const MSG_RetSwitchHero_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetSwitchHero_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_RetSwitchHero_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurheroFieldNumber = 2,
    kErrcodeFieldNumber = 1,
  };
  // optional string curhero = 2;
  bool has_curhero() const;
  private:
  bool _internal_has_curhero() const;
  public:
  void clear_curhero();
  const std::string& curhero() const;
  void set_curhero(const std::string& value);
  void set_curhero(std::string&& value);
  void set_curhero(const char* value);
  void set_curhero(const char* value, size_t size);
  std::string* mutable_curhero();
  std::string* release_curhero();
  void set_allocated_curhero(std::string* curhero);
  private:
  const std::string& _internal_curhero() const;
  void _internal_set_curhero(const std::string& value);
  std::string* _internal_mutable_curhero();
  public:

  // optional uint32 errcode = 1;
  bool has_errcode() const;
  private:
  bool _internal_has_errcode() const;
  public:
  void clear_errcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode() const;
  void set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errcode() const;
  void _internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_RetSwitchHero_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr curhero_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_NotifyAllHeros_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_NotifyAllHeros_SC) */ {
 public:
  MSG_NotifyAllHeros_SC();
  virtual ~MSG_NotifyAllHeros_SC();

  MSG_NotifyAllHeros_SC(const MSG_NotifyAllHeros_SC& from);
  MSG_NotifyAllHeros_SC(MSG_NotifyAllHeros_SC&& from) noexcept
    : MSG_NotifyAllHeros_SC() {
    *this = ::std::move(from);
  }

  inline MSG_NotifyAllHeros_SC& operator=(const MSG_NotifyAllHeros_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_NotifyAllHeros_SC& operator=(MSG_NotifyAllHeros_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_NotifyAllHeros_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_NotifyAllHeros_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_NotifyAllHeros_SC*>(
               &_MSG_NotifyAllHeros_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_NotifyAllHeros_SC& a, MSG_NotifyAllHeros_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_NotifyAllHeros_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_NotifyAllHeros_SC* New() const final {
    return CreateMaybeMessage<MSG_NotifyAllHeros_SC>(nullptr);
  }

  MSG_NotifyAllHeros_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_NotifyAllHeros_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_NotifyAllHeros_SC& from);
  void MergeFrom(const MSG_NotifyAllHeros_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_NotifyAllHeros_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_NotifyAllHeros_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroinfoFieldNumber = 1,
  };
  // repeated .hero.Hero heroinfo = 1;
  int heroinfo_size() const;
  private:
  int _internal_heroinfo_size() const;
  public:
  void clear_heroinfo();
  ::hero::Hero* mutable_heroinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >*
      mutable_heroinfo();
  private:
  const ::hero::Hero& _internal_heroinfo(int index) const;
  ::hero::Hero* _internal_add_heroinfo();
  public:
  const ::hero::Hero& heroinfo(int index) const;
  ::hero::Hero* add_heroinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >&
      heroinfo() const;

  // @@protoc_insertion_point(class_scope:hero.MSG_NotifyAllHeros_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero > heroinfo_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_NotifyHeroChange_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_NotifyHeroChange_SC) */ {
 public:
  MSG_NotifyHeroChange_SC();
  virtual ~MSG_NotifyHeroChange_SC();

  MSG_NotifyHeroChange_SC(const MSG_NotifyHeroChange_SC& from);
  MSG_NotifyHeroChange_SC(MSG_NotifyHeroChange_SC&& from) noexcept
    : MSG_NotifyHeroChange_SC() {
    *this = ::std::move(from);
  }

  inline MSG_NotifyHeroChange_SC& operator=(const MSG_NotifyHeroChange_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_NotifyHeroChange_SC& operator=(MSG_NotifyHeroChange_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_NotifyHeroChange_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_NotifyHeroChange_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_NotifyHeroChange_SC*>(
               &_MSG_NotifyHeroChange_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MSG_NotifyHeroChange_SC& a, MSG_NotifyHeroChange_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_NotifyHeroChange_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_NotifyHeroChange_SC* New() const final {
    return CreateMaybeMessage<MSG_NotifyHeroChange_SC>(nullptr);
  }

  MSG_NotifyHeroChange_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_NotifyHeroChange_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_NotifyHeroChange_SC& from);
  void MergeFrom(const MSG_NotifyHeroChange_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_NotifyHeroChange_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_NotifyHeroChange_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerolistFieldNumber = 2,
    kChangetypeFieldNumber = 1,
  };
  // repeated .hero.Hero herolist = 2;
  int herolist_size() const;
  private:
  int _internal_herolist_size() const;
  public:
  void clear_herolist();
  ::hero::Hero* mutable_herolist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >*
      mutable_herolist();
  private:
  const ::hero::Hero& _internal_herolist(int index) const;
  ::hero::Hero* _internal_add_herolist();
  public:
  const ::hero::Hero& herolist(int index) const;
  ::hero::Hero* add_herolist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >&
      herolist() const;

  // optional uint32 changetype = 1;
  bool has_changetype() const;
  private:
  bool _internal_has_changetype() const;
  public:
  void clear_changetype();
  ::PROTOBUF_NAMESPACE_ID::uint32 changetype() const;
  void set_changetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_changetype() const;
  void _internal_set_changetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_NotifyHeroChange_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero > herolist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 changetype_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqHeroTrain_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqHeroTrain_CS) */ {
 public:
  MSG_ReqHeroTrain_CS();
  virtual ~MSG_ReqHeroTrain_CS();

  MSG_ReqHeroTrain_CS(const MSG_ReqHeroTrain_CS& from);
  MSG_ReqHeroTrain_CS(MSG_ReqHeroTrain_CS&& from) noexcept
    : MSG_ReqHeroTrain_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqHeroTrain_CS& operator=(const MSG_ReqHeroTrain_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqHeroTrain_CS& operator=(MSG_ReqHeroTrain_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqHeroTrain_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqHeroTrain_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqHeroTrain_CS*>(
               &_MSG_ReqHeroTrain_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_ReqHeroTrain_CS& a, MSG_ReqHeroTrain_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqHeroTrain_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqHeroTrain_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqHeroTrain_CS>(nullptr);
  }

  MSG_ReqHeroTrain_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqHeroTrain_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqHeroTrain_CS& from);
  void MergeFrom(const MSG_ReqHeroTrain_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqHeroTrain_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqHeroTrain_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 1,
    kTraintimesFieldNumber = 2,
    kIsusewaterFieldNumber = 3,
  };
  // optional string herothisid = 1;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  const std::string& herothisid() const;
  void set_herothisid(const std::string& value);
  void set_herothisid(std::string&& value);
  void set_herothisid(const char* value);
  void set_herothisid(const char* value, size_t size);
  std::string* mutable_herothisid();
  std::string* release_herothisid();
  void set_allocated_herothisid(std::string* herothisid);
  private:
  const std::string& _internal_herothisid() const;
  void _internal_set_herothisid(const std::string& value);
  std::string* _internal_mutable_herothisid();
  public:

  // optional uint32 traintimes = 2;
  bool has_traintimes() const;
  private:
  bool _internal_has_traintimes() const;
  public:
  void clear_traintimes();
  ::PROTOBUF_NAMESPACE_ID::uint32 traintimes() const;
  void set_traintimes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_traintimes() const;
  void _internal_set_traintimes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool isusewater = 3;
  bool has_isusewater() const;
  private:
  bool _internal_has_isusewater() const;
  public:
  void clear_isusewater();
  bool isusewater() const;
  void set_isusewater(bool value);
  private:
  bool _internal_isusewater() const;
  void _internal_set_isusewater(bool value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqHeroTrain_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herothisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 traintimes_;
  bool isusewater_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetHeroTrain_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_RetHeroTrain_SC) */ {
 public:
  MSG_RetHeroTrain_SC();
  virtual ~MSG_RetHeroTrain_SC();

  MSG_RetHeroTrain_SC(const MSG_RetHeroTrain_SC& from);
  MSG_RetHeroTrain_SC(MSG_RetHeroTrain_SC&& from) noexcept
    : MSG_RetHeroTrain_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetHeroTrain_SC& operator=(const MSG_RetHeroTrain_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetHeroTrain_SC& operator=(MSG_RetHeroTrain_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetHeroTrain_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetHeroTrain_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetHeroTrain_SC*>(
               &_MSG_RetHeroTrain_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_RetHeroTrain_SC& a, MSG_RetHeroTrain_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetHeroTrain_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetHeroTrain_SC* New() const final {
    return CreateMaybeMessage<MSG_RetHeroTrain_SC>(nullptr);
  }

  MSG_RetHeroTrain_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetHeroTrain_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetHeroTrain_SC& from);
  void MergeFrom(const MSG_RetHeroTrain_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetHeroTrain_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_RetHeroTrain_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerocurinfoFieldNumber = 2,
    kErrcodeFieldNumber = 1,
  };
  // optional .hero.Hero herocurinfo = 2;
  bool has_herocurinfo() const;
  private:
  bool _internal_has_herocurinfo() const;
  public:
  void clear_herocurinfo();
  const ::hero::Hero& herocurinfo() const;
  ::hero::Hero* release_herocurinfo();
  ::hero::Hero* mutable_herocurinfo();
  void set_allocated_herocurinfo(::hero::Hero* herocurinfo);
  private:
  const ::hero::Hero& _internal_herocurinfo() const;
  ::hero::Hero* _internal_mutable_herocurinfo();
  public:

  // optional uint32 errcode = 1;
  bool has_errcode() const;
  private:
  bool _internal_has_errcode() const;
  public:
  void clear_errcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode() const;
  void set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errcode() const;
  void _internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_RetHeroTrain_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::hero::Hero* herocurinfo_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqLockUnlockHero_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqLockUnlockHero_CS) */ {
 public:
  MSG_ReqLockUnlockHero_CS();
  virtual ~MSG_ReqLockUnlockHero_CS();

  MSG_ReqLockUnlockHero_CS(const MSG_ReqLockUnlockHero_CS& from);
  MSG_ReqLockUnlockHero_CS(MSG_ReqLockUnlockHero_CS&& from) noexcept
    : MSG_ReqLockUnlockHero_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqLockUnlockHero_CS& operator=(const MSG_ReqLockUnlockHero_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqLockUnlockHero_CS& operator=(MSG_ReqLockUnlockHero_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqLockUnlockHero_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqLockUnlockHero_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqLockUnlockHero_CS*>(
               &_MSG_ReqLockUnlockHero_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_ReqLockUnlockHero_CS& a, MSG_ReqLockUnlockHero_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqLockUnlockHero_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqLockUnlockHero_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqLockUnlockHero_CS>(nullptr);
  }

  MSG_ReqLockUnlockHero_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqLockUnlockHero_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqLockUnlockHero_CS& from);
  void MergeFrom(const MSG_ReqLockUnlockHero_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqLockUnlockHero_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqLockUnlockHero_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 1,
    kLocktypeFieldNumber = 2,
  };
  // optional string herothisid = 1;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  const std::string& herothisid() const;
  void set_herothisid(const std::string& value);
  void set_herothisid(std::string&& value);
  void set_herothisid(const char* value);
  void set_herothisid(const char* value, size_t size);
  std::string* mutable_herothisid();
  std::string* release_herothisid();
  void set_allocated_herothisid(std::string* herothisid);
  private:
  const std::string& _internal_herothisid() const;
  void _internal_set_herothisid(const std::string& value);
  std::string* _internal_mutable_herothisid();
  public:

  // optional uint32 locktype = 2;
  bool has_locktype() const;
  private:
  bool _internal_has_locktype() const;
  public:
  void clear_locktype();
  ::PROTOBUF_NAMESPACE_ID::uint32 locktype() const;
  void set_locktype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_locktype() const;
  void _internal_set_locktype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqLockUnlockHero_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herothisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 locktype_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetLockUnlockHero_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_RetLockUnlockHero_SC) */ {
 public:
  MSG_RetLockUnlockHero_SC();
  virtual ~MSG_RetLockUnlockHero_SC();

  MSG_RetLockUnlockHero_SC(const MSG_RetLockUnlockHero_SC& from);
  MSG_RetLockUnlockHero_SC(MSG_RetLockUnlockHero_SC&& from) noexcept
    : MSG_RetLockUnlockHero_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetLockUnlockHero_SC& operator=(const MSG_RetLockUnlockHero_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetLockUnlockHero_SC& operator=(MSG_RetLockUnlockHero_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetLockUnlockHero_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetLockUnlockHero_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetLockUnlockHero_SC*>(
               &_MSG_RetLockUnlockHero_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MSG_RetLockUnlockHero_SC& a, MSG_RetLockUnlockHero_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetLockUnlockHero_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetLockUnlockHero_SC* New() const final {
    return CreateMaybeMessage<MSG_RetLockUnlockHero_SC>(nullptr);
  }

  MSG_RetLockUnlockHero_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetLockUnlockHero_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetLockUnlockHero_SC& from);
  void MergeFrom(const MSG_RetLockUnlockHero_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetLockUnlockHero_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_RetLockUnlockHero_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 2,
    kRetcodeFieldNumber = 1,
    kLocktypeFieldNumber = 3,
  };
  // optional string herothisid = 2;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  const std::string& herothisid() const;
  void set_herothisid(const std::string& value);
  void set_herothisid(std::string&& value);
  void set_herothisid(const char* value);
  void set_herothisid(const char* value, size_t size);
  std::string* mutable_herothisid();
  std::string* release_herothisid();
  void set_allocated_herothisid(std::string* herothisid);
  private:
  const std::string& _internal_herothisid() const;
  void _internal_set_herothisid(const std::string& value);
  std::string* _internal_mutable_herothisid();
  public:

  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 locktype = 3;
  bool has_locktype() const;
  private:
  bool _internal_has_locktype() const;
  public:
  void clear_locktype();
  ::PROTOBUF_NAMESPACE_ID::uint32 locktype() const;
  void set_locktype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_locktype() const;
  void _internal_set_locktype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_RetLockUnlockHero_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herothisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 locktype_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqLevelupHeroSkill_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqLevelupHeroSkill_CS) */ {
 public:
  MSG_ReqLevelupHeroSkill_CS();
  virtual ~MSG_ReqLevelupHeroSkill_CS();

  MSG_ReqLevelupHeroSkill_CS(const MSG_ReqLevelupHeroSkill_CS& from);
  MSG_ReqLevelupHeroSkill_CS(MSG_ReqLevelupHeroSkill_CS&& from) noexcept
    : MSG_ReqLevelupHeroSkill_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqLevelupHeroSkill_CS& operator=(const MSG_ReqLevelupHeroSkill_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqLevelupHeroSkill_CS& operator=(MSG_ReqLevelupHeroSkill_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqLevelupHeroSkill_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqLevelupHeroSkill_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqLevelupHeroSkill_CS*>(
               &_MSG_ReqLevelupHeroSkill_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MSG_ReqLevelupHeroSkill_CS& a, MSG_ReqLevelupHeroSkill_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqLevelupHeroSkill_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqLevelupHeroSkill_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqLevelupHeroSkill_CS>(nullptr);
  }

  MSG_ReqLevelupHeroSkill_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqLevelupHeroSkill_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqLevelupHeroSkill_CS& from);
  void MergeFrom(const MSG_ReqLevelupHeroSkill_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqLevelupHeroSkill_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqLevelupHeroSkill_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 1,
    kSkillbaseidFieldNumber = 2,
    kSkilllevelFieldNumber = 3,
  };
  // optional string herothisid = 1;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  const std::string& herothisid() const;
  void set_herothisid(const std::string& value);
  void set_herothisid(std::string&& value);
  void set_herothisid(const char* value);
  void set_herothisid(const char* value, size_t size);
  std::string* mutable_herothisid();
  std::string* release_herothisid();
  void set_allocated_herothisid(std::string* herothisid);
  private:
  const std::string& _internal_herothisid() const;
  void _internal_set_herothisid(const std::string& value);
  std::string* _internal_mutable_herothisid();
  public:

  // optional uint32 skillbaseid = 2;
  bool has_skillbaseid() const;
  private:
  bool _internal_has_skillbaseid() const;
  public:
  void clear_skillbaseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillbaseid() const;
  void set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillbaseid() const;
  void _internal_set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skilllevel = 3;
  bool has_skilllevel() const;
  private:
  bool _internal_has_skilllevel() const;
  public:
  void clear_skilllevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 skilllevel() const;
  void set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skilllevel() const;
  void _internal_set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqLevelupHeroSkill_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herothisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillbaseid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skilllevel_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetLevelupHeroSkill_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_RetLevelupHeroSkill_SC) */ {
 public:
  MSG_RetLevelupHeroSkill_SC();
  virtual ~MSG_RetLevelupHeroSkill_SC();

  MSG_RetLevelupHeroSkill_SC(const MSG_RetLevelupHeroSkill_SC& from);
  MSG_RetLevelupHeroSkill_SC(MSG_RetLevelupHeroSkill_SC&& from) noexcept
    : MSG_RetLevelupHeroSkill_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetLevelupHeroSkill_SC& operator=(const MSG_RetLevelupHeroSkill_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetLevelupHeroSkill_SC& operator=(MSG_RetLevelupHeroSkill_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetLevelupHeroSkill_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetLevelupHeroSkill_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetLevelupHeroSkill_SC*>(
               &_MSG_RetLevelupHeroSkill_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MSG_RetLevelupHeroSkill_SC& a, MSG_RetLevelupHeroSkill_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetLevelupHeroSkill_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetLevelupHeroSkill_SC* New() const final {
    return CreateMaybeMessage<MSG_RetLevelupHeroSkill_SC>(nullptr);
  }

  MSG_RetLevelupHeroSkill_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetLevelupHeroSkill_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetLevelupHeroSkill_SC& from);
  void MergeFrom(const MSG_RetLevelupHeroSkill_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetLevelupHeroSkill_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_RetLevelupHeroSkill_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 2,
    kRetcodeFieldNumber = 1,
    kSkillbaseidFieldNumber = 3,
    kSkilllevelFieldNumber = 4,
    kSkillorgidFieldNumber = 5,
  };
  // optional string herothisid = 2;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  const std::string& herothisid() const;
  void set_herothisid(const std::string& value);
  void set_herothisid(std::string&& value);
  void set_herothisid(const char* value);
  void set_herothisid(const char* value, size_t size);
  std::string* mutable_herothisid();
  std::string* release_herothisid();
  void set_allocated_herothisid(std::string* herothisid);
  private:
  const std::string& _internal_herothisid() const;
  void _internal_set_herothisid(const std::string& value);
  std::string* _internal_mutable_herothisid();
  public:

  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skillbaseid = 3;
  bool has_skillbaseid() const;
  private:
  bool _internal_has_skillbaseid() const;
  public:
  void clear_skillbaseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillbaseid() const;
  void set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillbaseid() const;
  void _internal_set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skilllevel = 4;
  bool has_skilllevel() const;
  private:
  bool _internal_has_skilllevel() const;
  public:
  void clear_skilllevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 skilllevel() const;
  void set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skilllevel() const;
  void _internal_set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skillorgid = 5;
  bool has_skillorgid() const;
  private:
  bool _internal_has_skillorgid() const;
  public:
  void clear_skillorgid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillorgid() const;
  void set_skillorgid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillorgid() const;
  void _internal_set_skillorgid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_RetLevelupHeroSkill_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herothisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillbaseid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skilllevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillorgid_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_notifyRefreshHero_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_notifyRefreshHero_SC) */ {
 public:
  MSG_notifyRefreshHero_SC();
  virtual ~MSG_notifyRefreshHero_SC();

  MSG_notifyRefreshHero_SC(const MSG_notifyRefreshHero_SC& from);
  MSG_notifyRefreshHero_SC(MSG_notifyRefreshHero_SC&& from) noexcept
    : MSG_notifyRefreshHero_SC() {
    *this = ::std::move(from);
  }

  inline MSG_notifyRefreshHero_SC& operator=(const MSG_notifyRefreshHero_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_notifyRefreshHero_SC& operator=(MSG_notifyRefreshHero_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_notifyRefreshHero_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_notifyRefreshHero_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_notifyRefreshHero_SC*>(
               &_MSG_notifyRefreshHero_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MSG_notifyRefreshHero_SC& a, MSG_notifyRefreshHero_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_notifyRefreshHero_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_notifyRefreshHero_SC* New() const final {
    return CreateMaybeMessage<MSG_notifyRefreshHero_SC>(nullptr);
  }

  MSG_notifyRefreshHero_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_notifyRefreshHero_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_notifyRefreshHero_SC& from);
  void MergeFrom(const MSG_notifyRefreshHero_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_notifyRefreshHero_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_notifyRefreshHero_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroinfoFieldNumber = 1,
  };
  // optional .hero.Hero heroinfo = 1;
  bool has_heroinfo() const;
  private:
  bool _internal_has_heroinfo() const;
  public:
  void clear_heroinfo();
  const ::hero::Hero& heroinfo() const;
  ::hero::Hero* release_heroinfo();
  ::hero::Hero* mutable_heroinfo();
  void set_allocated_heroinfo(::hero::Hero* heroinfo);
  private:
  const ::hero::Hero& _internal_heroinfo() const;
  ::hero::Hero* _internal_mutable_heroinfo();
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_notifyRefreshHero_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::hero::Hero* heroinfo_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqRiseStar_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqRiseStar_CS) */ {
 public:
  MSG_ReqRiseStar_CS();
  virtual ~MSG_ReqRiseStar_CS();

  MSG_ReqRiseStar_CS(const MSG_ReqRiseStar_CS& from);
  MSG_ReqRiseStar_CS(MSG_ReqRiseStar_CS&& from) noexcept
    : MSG_ReqRiseStar_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqRiseStar_CS& operator=(const MSG_ReqRiseStar_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqRiseStar_CS& operator=(MSG_ReqRiseStar_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqRiseStar_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqRiseStar_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqRiseStar_CS*>(
               &_MSG_ReqRiseStar_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MSG_ReqRiseStar_CS& a, MSG_ReqRiseStar_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqRiseStar_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqRiseStar_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqRiseStar_CS>(nullptr);
  }

  MSG_ReqRiseStar_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqRiseStar_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqRiseStar_CS& from);
  void MergeFrom(const MSG_ReqRiseStar_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqRiseStar_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqRiseStar_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourcethisidFieldNumber = 1,
    kCostthisidFieldNumber = 2,
  };
  // optional string sourcethisid = 1;
  bool has_sourcethisid() const;
  private:
  bool _internal_has_sourcethisid() const;
  public:
  void clear_sourcethisid();
  const std::string& sourcethisid() const;
  void set_sourcethisid(const std::string& value);
  void set_sourcethisid(std::string&& value);
  void set_sourcethisid(const char* value);
  void set_sourcethisid(const char* value, size_t size);
  std::string* mutable_sourcethisid();
  std::string* release_sourcethisid();
  void set_allocated_sourcethisid(std::string* sourcethisid);
  private:
  const std::string& _internal_sourcethisid() const;
  void _internal_set_sourcethisid(const std::string& value);
  std::string* _internal_mutable_sourcethisid();
  public:

  // optional string costthisid = 2;
  bool has_costthisid() const;
  private:
  bool _internal_has_costthisid() const;
  public:
  void clear_costthisid();
  const std::string& costthisid() const;
  void set_costthisid(const std::string& value);
  void set_costthisid(std::string&& value);
  void set_costthisid(const char* value);
  void set_costthisid(const char* value, size_t size);
  std::string* mutable_costthisid();
  std::string* release_costthisid();
  void set_allocated_costthisid(std::string* costthisid);
  private:
  const std::string& _internal_costthisid() const;
  void _internal_set_costthisid(const std::string& value);
  std::string* _internal_mutable_costthisid();
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqRiseStar_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sourcethisid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr costthisid_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRiseStar_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_RetRiseStar_SC) */ {
 public:
  MSG_RetRiseStar_SC();
  virtual ~MSG_RetRiseStar_SC();

  MSG_RetRiseStar_SC(const MSG_RetRiseStar_SC& from);
  MSG_RetRiseStar_SC(MSG_RetRiseStar_SC&& from) noexcept
    : MSG_RetRiseStar_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRiseStar_SC& operator=(const MSG_RetRiseStar_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRiseStar_SC& operator=(MSG_RetRiseStar_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRiseStar_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRiseStar_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRiseStar_SC*>(
               &_MSG_RetRiseStar_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MSG_RetRiseStar_SC& a, MSG_RetRiseStar_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRiseStar_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRiseStar_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRiseStar_SC>(nullptr);
  }

  MSG_RetRiseStar_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRiseStar_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRiseStar_SC& from);
  void MergeFrom(const MSG_RetRiseStar_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRiseStar_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_RetRiseStar_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourcethisidFieldNumber = 2,
    kCostthisidFieldNumber = 3,
    kRetcodeFieldNumber = 1,
  };
  // optional string sourcethisid = 2;
  bool has_sourcethisid() const;
  private:
  bool _internal_has_sourcethisid() const;
  public:
  void clear_sourcethisid();
  const std::string& sourcethisid() const;
  void set_sourcethisid(const std::string& value);
  void set_sourcethisid(std::string&& value);
  void set_sourcethisid(const char* value);
  void set_sourcethisid(const char* value, size_t size);
  std::string* mutable_sourcethisid();
  std::string* release_sourcethisid();
  void set_allocated_sourcethisid(std::string* sourcethisid);
  private:
  const std::string& _internal_sourcethisid() const;
  void _internal_set_sourcethisid(const std::string& value);
  std::string* _internal_mutable_sourcethisid();
  public:

  // optional string costthisid = 3;
  bool has_costthisid() const;
  private:
  bool _internal_has_costthisid() const;
  public:
  void clear_costthisid();
  const std::string& costthisid() const;
  void set_costthisid(const std::string& value);
  void set_costthisid(std::string&& value);
  void set_costthisid(const char* value);
  void set_costthisid(const char* value, size_t size);
  std::string* mutable_costthisid();
  std::string* release_costthisid();
  void set_allocated_costthisid(std::string* costthisid);
  private:
  const std::string& _internal_costthisid() const;
  void _internal_set_costthisid(const std::string& value);
  std::string* _internal_mutable_costthisid();
  public:

  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_RetRiseStar_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sourcethisid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr costthisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class DnaItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.DnaItem) */ {
 public:
  DnaItem();
  virtual ~DnaItem();

  DnaItem(const DnaItem& from);
  DnaItem(DnaItem&& from) noexcept
    : DnaItem() {
    *this = ::std::move(from);
  }

  inline DnaItem& operator=(const DnaItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline DnaItem& operator=(DnaItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DnaItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DnaItem* internal_default_instance() {
    return reinterpret_cast<const DnaItem*>(
               &_DnaItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(DnaItem& a, DnaItem& b) {
    a.Swap(&b);
  }
  inline void Swap(DnaItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DnaItem* New() const final {
    return CreateMaybeMessage<DnaItem>(nullptr);
  }

  DnaItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DnaItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DnaItem& from);
  void MergeFrom(const DnaItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DnaItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.DnaItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kLevelFieldNumber = 2,
    kNumFieldNumber = 3,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 2;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 num = 3;
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.DnaItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_DnaBagInfo_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_DnaBagInfo_CSC) */ {
 public:
  MSG_DnaBagInfo_CSC();
  virtual ~MSG_DnaBagInfo_CSC();

  MSG_DnaBagInfo_CSC(const MSG_DnaBagInfo_CSC& from);
  MSG_DnaBagInfo_CSC(MSG_DnaBagInfo_CSC&& from) noexcept
    : MSG_DnaBagInfo_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_DnaBagInfo_CSC& operator=(const MSG_DnaBagInfo_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_DnaBagInfo_CSC& operator=(MSG_DnaBagInfo_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_DnaBagInfo_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_DnaBagInfo_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_DnaBagInfo_CSC*>(
               &_MSG_DnaBagInfo_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MSG_DnaBagInfo_CSC& a, MSG_DnaBagInfo_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_DnaBagInfo_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_DnaBagInfo_CSC* New() const final {
    return CreateMaybeMessage<MSG_DnaBagInfo_CSC>(nullptr);
  }

  MSG_DnaBagInfo_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_DnaBagInfo_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_DnaBagInfo_CSC& from);
  void MergeFrom(const MSG_DnaBagInfo_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_DnaBagInfo_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_DnaBagInfo_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDatasFieldNumber = 1,
    kCurPageFieldNumber = 2,
  };
  // repeated .hero.DnaItem datas = 1;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::hero::DnaItem* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::DnaItem >*
      mutable_datas();
  private:
  const ::hero::DnaItem& _internal_datas(int index) const;
  ::hero::DnaItem* _internal_add_datas();
  public:
  const ::hero::DnaItem& datas(int index) const;
  ::hero::DnaItem* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::DnaItem >&
      datas() const;

  // optional .hero.DNAPage cur_page = 2;
  bool has_cur_page() const;
  private:
  bool _internal_has_cur_page() const;
  public:
  void clear_cur_page();
  ::hero::DNAPage cur_page() const;
  void set_cur_page(::hero::DNAPage value);
  private:
  ::hero::DNAPage _internal_cur_page() const;
  void _internal_set_cur_page(::hero::DNAPage value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_DnaBagInfo_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::DnaItem > datas_;
  int cur_page_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class Hole :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.Hole) */ {
 public:
  Hole();
  virtual ~Hole();

  Hole(const Hole& from);
  Hole(Hole&& from) noexcept
    : Hole() {
    *this = ::std::move(from);
  }

  inline Hole& operator=(const Hole& from) {
    CopyFrom(from);
    return *this;
  }
  inline Hole& operator=(Hole&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Hole& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Hole* internal_default_instance() {
    return reinterpret_cast<const Hole*>(
               &_Hole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(Hole& a, Hole& b) {
    a.Swap(&b);
  }
  inline void Swap(Hole* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Hole* New() const final {
    return CreateMaybeMessage<Hole>(nullptr);
  }

  Hole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Hole>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Hole& from);
  void MergeFrom(const Hole& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Hole* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.Hole";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosFieldNumber = 1,
    kIdFieldNumber = 2,
    kLevelFieldNumber = 3,
    kPageFieldNumber = 4,
    kTypeFieldNumber = 5,
  };
  // optional uint32 pos = 1;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  ::PROTOBUF_NAMESPACE_ID::uint32 pos() const;
  void set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pos() const;
  void _internal_set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 3;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .hero.DNAPage page = 4;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::hero::DNAPage page() const;
  void set_page(::hero::DNAPage value);
  private:
  ::hero::DNAPage _internal_page() const;
  void _internal_set_page(::hero::DNAPage value);
  public:

  // optional .hero.DNASlotType type = 5;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::hero::DNASlotType type() const;
  void set_type(::hero::DNASlotType value);
  private:
  ::hero::DNASlotType _internal_type() const;
  void _internal_set_type(::hero::DNASlotType value);
  public:

  // @@protoc_insertion_point(class_scope:hero.Hole)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  int page_;
  int type_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_DnaPageInfo_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_DnaPageInfo_CSC) */ {
 public:
  MSG_DnaPageInfo_CSC();
  virtual ~MSG_DnaPageInfo_CSC();

  MSG_DnaPageInfo_CSC(const MSG_DnaPageInfo_CSC& from);
  MSG_DnaPageInfo_CSC(MSG_DnaPageInfo_CSC&& from) noexcept
    : MSG_DnaPageInfo_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_DnaPageInfo_CSC& operator=(const MSG_DnaPageInfo_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_DnaPageInfo_CSC& operator=(MSG_DnaPageInfo_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_DnaPageInfo_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_DnaPageInfo_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_DnaPageInfo_CSC*>(
               &_MSG_DnaPageInfo_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(MSG_DnaPageInfo_CSC& a, MSG_DnaPageInfo_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_DnaPageInfo_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_DnaPageInfo_CSC* New() const final {
    return CreateMaybeMessage<MSG_DnaPageInfo_CSC>(nullptr);
  }

  MSG_DnaPageInfo_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_DnaPageInfo_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_DnaPageInfo_CSC& from);
  void MergeFrom(const MSG_DnaPageInfo_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_DnaPageInfo_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_DnaPageInfo_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttHolesFieldNumber = 2,
    kDefHolesFieldNumber = 3,
    kPageFieldNumber = 1,
    kAttOpenedNumFieldNumber = 4,
    kDefOpenedNumFieldNumber = 5,
  };
  // repeated .hero.Hole att_holes = 2;
  int att_holes_size() const;
  private:
  int _internal_att_holes_size() const;
  public:
  void clear_att_holes();
  ::hero::Hole* mutable_att_holes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hole >*
      mutable_att_holes();
  private:
  const ::hero::Hole& _internal_att_holes(int index) const;
  ::hero::Hole* _internal_add_att_holes();
  public:
  const ::hero::Hole& att_holes(int index) const;
  ::hero::Hole* add_att_holes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hole >&
      att_holes() const;

  // repeated .hero.Hole def_holes = 3;
  int def_holes_size() const;
  private:
  int _internal_def_holes_size() const;
  public:
  void clear_def_holes();
  ::hero::Hole* mutable_def_holes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hole >*
      mutable_def_holes();
  private:
  const ::hero::Hole& _internal_def_holes(int index) const;
  ::hero::Hole* _internal_add_def_holes();
  public:
  const ::hero::Hole& def_holes(int index) const;
  ::hero::Hole* add_def_holes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hole >&
      def_holes() const;

  // optional .hero.DNAPage page = 1;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::hero::DNAPage page() const;
  void set_page(::hero::DNAPage value);
  private:
  ::hero::DNAPage _internal_page() const;
  void _internal_set_page(::hero::DNAPage value);
  public:

  // optional uint32 att_opened_num = 4;
  bool has_att_opened_num() const;
  private:
  bool _internal_has_att_opened_num() const;
  public:
  void clear_att_opened_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 att_opened_num() const;
  void set_att_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_att_opened_num() const;
  void _internal_set_att_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 def_opened_num = 5;
  bool has_def_opened_num() const;
  private:
  bool _internal_has_def_opened_num() const;
  public:
  void clear_def_opened_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 def_opened_num() const;
  void set_def_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_def_opened_num() const;
  void _internal_set_def_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_DnaPageInfo_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hole > att_holes_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hole > def_holes_;
  int page_;
  ::PROTOBUF_NAMESPACE_ID::uint32 att_opened_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 def_opened_num_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqPutOnDna_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqPutOnDna_CS) */ {
 public:
  MSG_ReqPutOnDna_CS();
  virtual ~MSG_ReqPutOnDna_CS();

  MSG_ReqPutOnDna_CS(const MSG_ReqPutOnDna_CS& from);
  MSG_ReqPutOnDna_CS(MSG_ReqPutOnDna_CS&& from) noexcept
    : MSG_ReqPutOnDna_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqPutOnDna_CS& operator=(const MSG_ReqPutOnDna_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqPutOnDna_CS& operator=(MSG_ReqPutOnDna_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqPutOnDna_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqPutOnDna_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqPutOnDna_CS*>(
               &_MSG_ReqPutOnDna_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(MSG_ReqPutOnDna_CS& a, MSG_ReqPutOnDna_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqPutOnDna_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqPutOnDna_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqPutOnDna_CS>(nullptr);
  }

  MSG_ReqPutOnDna_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqPutOnDna_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqPutOnDna_CS& from);
  void MergeFrom(const MSG_ReqPutOnDna_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqPutOnDna_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqPutOnDna_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kPosFieldNumber = 2,
    kIdFieldNumber = 3,
    kLevelFieldNumber = 4,
    kTypeFieldNumber = 5,
  };
  // optional .hero.DNAPage page = 1;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::hero::DNAPage page() const;
  void set_page(::hero::DNAPage value);
  private:
  ::hero::DNAPage _internal_page() const;
  void _internal_set_page(::hero::DNAPage value);
  public:

  // optional uint32 pos = 2;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  ::PROTOBUF_NAMESPACE_ID::uint32 pos() const;
  void set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pos() const;
  void _internal_set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 id = 3;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 4;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .hero.DNASlotType type = 5;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::hero::DNASlotType type() const;
  void set_type(::hero::DNASlotType value);
  private:
  ::hero::DNASlotType _internal_type() const;
  void _internal_set_type(::hero::DNASlotType value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqPutOnDna_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int page_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  int type_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqPutOffDna_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqPutOffDna_CS) */ {
 public:
  MSG_ReqPutOffDna_CS();
  virtual ~MSG_ReqPutOffDna_CS();

  MSG_ReqPutOffDna_CS(const MSG_ReqPutOffDna_CS& from);
  MSG_ReqPutOffDna_CS(MSG_ReqPutOffDna_CS&& from) noexcept
    : MSG_ReqPutOffDna_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqPutOffDna_CS& operator=(const MSG_ReqPutOffDna_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqPutOffDna_CS& operator=(MSG_ReqPutOffDna_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqPutOffDna_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqPutOffDna_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqPutOffDna_CS*>(
               &_MSG_ReqPutOffDna_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(MSG_ReqPutOffDna_CS& a, MSG_ReqPutOffDna_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqPutOffDna_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqPutOffDna_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqPutOffDna_CS>(nullptr);
  }

  MSG_ReqPutOffDna_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqPutOffDna_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqPutOffDna_CS& from);
  void MergeFrom(const MSG_ReqPutOffDna_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqPutOffDna_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqPutOffDna_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kPosFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // optional .hero.DNAPage page = 1;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::hero::DNAPage page() const;
  void set_page(::hero::DNAPage value);
  private:
  ::hero::DNAPage _internal_page() const;
  void _internal_set_page(::hero::DNAPage value);
  public:

  // optional uint32 pos = 2;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  ::PROTOBUF_NAMESPACE_ID::uint32 pos() const;
  void set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pos() const;
  void _internal_set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .hero.DNASlotType type = 3;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::hero::DNASlotType type() const;
  void set_type(::hero::DNASlotType value);
  private:
  ::hero::DNASlotType _internal_type() const;
  void _internal_set_type(::hero::DNASlotType value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqPutOffDna_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int page_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pos_;
  int type_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqCombineDna_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqCombineDna_CS) */ {
 public:
  MSG_ReqCombineDna_CS();
  virtual ~MSG_ReqCombineDna_CS();

  MSG_ReqCombineDna_CS(const MSG_ReqCombineDna_CS& from);
  MSG_ReqCombineDna_CS(MSG_ReqCombineDna_CS&& from) noexcept
    : MSG_ReqCombineDna_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqCombineDna_CS& operator=(const MSG_ReqCombineDna_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqCombineDna_CS& operator=(MSG_ReqCombineDna_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqCombineDna_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqCombineDna_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqCombineDna_CS*>(
               &_MSG_ReqCombineDna_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(MSG_ReqCombineDna_CS& a, MSG_ReqCombineDna_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqCombineDna_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqCombineDna_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqCombineDna_CS>(nullptr);
  }

  MSG_ReqCombineDna_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqCombineDna_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqCombineDna_CS& from);
  void MergeFrom(const MSG_ReqCombineDna_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqCombineDna_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqCombineDna_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kPosFieldNumber = 2,
    kTypeFieldNumber = 3,
    kNumFieldNumber = 4,
  };
  // optional .hero.DNAPage page = 1;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::hero::DNAPage page() const;
  void set_page(::hero::DNAPage value);
  private:
  ::hero::DNAPage _internal_page() const;
  void _internal_set_page(::hero::DNAPage value);
  public:

  // optional uint32 pos = 2;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  ::PROTOBUF_NAMESPACE_ID::uint32 pos() const;
  void set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pos() const;
  void _internal_set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .hero.DNASlotType type = 3;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::hero::DNASlotType type() const;
  void set_type(::hero::DNASlotType value);
  private:
  ::hero::DNASlotType _internal_type() const;
  void _internal_set_type(::hero::DNASlotType value);
  public:

  // optional uint32 num = 4;
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqCombineDna_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int page_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pos_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqChangeCurDnaPage_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqChangeCurDnaPage_CS) */ {
 public:
  MSG_ReqChangeCurDnaPage_CS();
  virtual ~MSG_ReqChangeCurDnaPage_CS();

  MSG_ReqChangeCurDnaPage_CS(const MSG_ReqChangeCurDnaPage_CS& from);
  MSG_ReqChangeCurDnaPage_CS(MSG_ReqChangeCurDnaPage_CS&& from) noexcept
    : MSG_ReqChangeCurDnaPage_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqChangeCurDnaPage_CS& operator=(const MSG_ReqChangeCurDnaPage_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqChangeCurDnaPage_CS& operator=(MSG_ReqChangeCurDnaPage_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqChangeCurDnaPage_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqChangeCurDnaPage_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqChangeCurDnaPage_CS*>(
               &_MSG_ReqChangeCurDnaPage_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(MSG_ReqChangeCurDnaPage_CS& a, MSG_ReqChangeCurDnaPage_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqChangeCurDnaPage_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqChangeCurDnaPage_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqChangeCurDnaPage_CS>(nullptr);
  }

  MSG_ReqChangeCurDnaPage_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqChangeCurDnaPage_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqChangeCurDnaPage_CS& from);
  void MergeFrom(const MSG_ReqChangeCurDnaPage_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqChangeCurDnaPage_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqChangeCurDnaPage_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
  };
  // optional .hero.DNAPage page = 1;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::hero::DNAPage page() const;
  void set_page(::hero::DNAPage value);
  private:
  ::hero::DNAPage _internal_page() const;
  void _internal_set_page(::hero::DNAPage value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqChangeCurDnaPage_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int page_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqCombineDnaInBag_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqCombineDnaInBag_CS) */ {
 public:
  MSG_ReqCombineDnaInBag_CS();
  virtual ~MSG_ReqCombineDnaInBag_CS();

  MSG_ReqCombineDnaInBag_CS(const MSG_ReqCombineDnaInBag_CS& from);
  MSG_ReqCombineDnaInBag_CS(MSG_ReqCombineDnaInBag_CS&& from) noexcept
    : MSG_ReqCombineDnaInBag_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqCombineDnaInBag_CS& operator=(const MSG_ReqCombineDnaInBag_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqCombineDnaInBag_CS& operator=(MSG_ReqCombineDnaInBag_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqCombineDnaInBag_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqCombineDnaInBag_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqCombineDnaInBag_CS*>(
               &_MSG_ReqCombineDnaInBag_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(MSG_ReqCombineDnaInBag_CS& a, MSG_ReqCombineDnaInBag_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqCombineDnaInBag_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqCombineDnaInBag_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqCombineDnaInBag_CS>(nullptr);
  }

  MSG_ReqCombineDnaInBag_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqCombineDnaInBag_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqCombineDnaInBag_CS& from);
  void MergeFrom(const MSG_ReqCombineDnaInBag_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqCombineDnaInBag_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqCombineDnaInBag_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kLevelFieldNumber = 2,
    kNumFieldNumber = 3,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 2;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 num = 3;
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqCombineDnaInBag_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqBuySlot_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ReqBuySlot_SC) */ {
 public:
  MSG_ReqBuySlot_SC();
  virtual ~MSG_ReqBuySlot_SC();

  MSG_ReqBuySlot_SC(const MSG_ReqBuySlot_SC& from);
  MSG_ReqBuySlot_SC(MSG_ReqBuySlot_SC&& from) noexcept
    : MSG_ReqBuySlot_SC() {
    *this = ::std::move(from);
  }

  inline MSG_ReqBuySlot_SC& operator=(const MSG_ReqBuySlot_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqBuySlot_SC& operator=(MSG_ReqBuySlot_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqBuySlot_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqBuySlot_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqBuySlot_SC*>(
               &_MSG_ReqBuySlot_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(MSG_ReqBuySlot_SC& a, MSG_ReqBuySlot_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqBuySlot_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqBuySlot_SC* New() const final {
    return CreateMaybeMessage<MSG_ReqBuySlot_SC>(nullptr);
  }

  MSG_ReqBuySlot_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqBuySlot_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqBuySlot_SC& from);
  void MergeFrom(const MSG_ReqBuySlot_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqBuySlot_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ReqBuySlot_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // optional .hero.DNAPage page = 1;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::hero::DNAPage page() const;
  void set_page(::hero::DNAPage value);
  private:
  ::hero::DNAPage _internal_page() const;
  void _internal_set_page(::hero::DNAPage value);
  public:

  // optional .hero.DNASlotType type = 2;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::hero::DNASlotType type() const;
  void set_type(::hero::DNASlotType value);
  private:
  ::hero::DNASlotType _internal_type() const;
  void _internal_set_type(::hero::DNASlotType value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ReqBuySlot_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int page_;
  int type_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_ResponseSlotOpened_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_ResponseSlotOpened_SC) */ {
 public:
  MSG_ResponseSlotOpened_SC();
  virtual ~MSG_ResponseSlotOpened_SC();

  MSG_ResponseSlotOpened_SC(const MSG_ResponseSlotOpened_SC& from);
  MSG_ResponseSlotOpened_SC(MSG_ResponseSlotOpened_SC&& from) noexcept
    : MSG_ResponseSlotOpened_SC() {
    *this = ::std::move(from);
  }

  inline MSG_ResponseSlotOpened_SC& operator=(const MSG_ResponseSlotOpened_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ResponseSlotOpened_SC& operator=(MSG_ResponseSlotOpened_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ResponseSlotOpened_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ResponseSlotOpened_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_ResponseSlotOpened_SC*>(
               &_MSG_ResponseSlotOpened_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(MSG_ResponseSlotOpened_SC& a, MSG_ResponseSlotOpened_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ResponseSlotOpened_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ResponseSlotOpened_SC* New() const final {
    return CreateMaybeMessage<MSG_ResponseSlotOpened_SC>(nullptr);
  }

  MSG_ResponseSlotOpened_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ResponseSlotOpened_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ResponseSlotOpened_SC& from);
  void MergeFrom(const MSG_ResponseSlotOpened_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ResponseSlotOpened_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_ResponseSlotOpened_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kTypeFieldNumber = 2,
    kCurNumFieldNumber = 3,
  };
  // optional .hero.DNAPage page = 1;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::hero::DNAPage page() const;
  void set_page(::hero::DNAPage value);
  private:
  ::hero::DNAPage _internal_page() const;
  void _internal_set_page(::hero::DNAPage value);
  public:

  // optional .hero.DNASlotType type = 2;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::hero::DNASlotType type() const;
  void set_type(::hero::DNASlotType value);
  private:
  ::hero::DNASlotType _internal_type() const;
  void _internal_set_type(::hero::DNASlotType value);
  public:

  // optional uint32 cur_num = 3;
  bool has_cur_num() const;
  private:
  bool _internal_has_cur_num() const;
  public:
  void clear_cur_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_num() const;
  void set_cur_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cur_num() const;
  void _internal_set_cur_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_ResponseSlotOpened_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int page_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_num_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_AllDnaPageInfo_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_AllDnaPageInfo_CSC) */ {
 public:
  MSG_AllDnaPageInfo_CSC();
  virtual ~MSG_AllDnaPageInfo_CSC();

  MSG_AllDnaPageInfo_CSC(const MSG_AllDnaPageInfo_CSC& from);
  MSG_AllDnaPageInfo_CSC(MSG_AllDnaPageInfo_CSC&& from) noexcept
    : MSG_AllDnaPageInfo_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_AllDnaPageInfo_CSC& operator=(const MSG_AllDnaPageInfo_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_AllDnaPageInfo_CSC& operator=(MSG_AllDnaPageInfo_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_AllDnaPageInfo_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_AllDnaPageInfo_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_AllDnaPageInfo_CSC*>(
               &_MSG_AllDnaPageInfo_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(MSG_AllDnaPageInfo_CSC& a, MSG_AllDnaPageInfo_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_AllDnaPageInfo_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_AllDnaPageInfo_CSC* New() const final {
    return CreateMaybeMessage<MSG_AllDnaPageInfo_CSC>(nullptr);
  }

  MSG_AllDnaPageInfo_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_AllDnaPageInfo_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_AllDnaPageInfo_CSC& from);
  void MergeFrom(const MSG_AllDnaPageInfo_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_AllDnaPageInfo_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_AllDnaPageInfo_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPagesFieldNumber = 1,
  };
  // repeated .hero.MSG_DnaPageInfo_CSC pages = 1;
  int pages_size() const;
  private:
  int _internal_pages_size() const;
  public:
  void clear_pages();
  ::hero::MSG_DnaPageInfo_CSC* mutable_pages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::MSG_DnaPageInfo_CSC >*
      mutable_pages();
  private:
  const ::hero::MSG_DnaPageInfo_CSC& _internal_pages(int index) const;
  ::hero::MSG_DnaPageInfo_CSC* _internal_add_pages();
  public:
  const ::hero::MSG_DnaPageInfo_CSC& pages(int index) const;
  ::hero::MSG_DnaPageInfo_CSC* add_pages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::MSG_DnaPageInfo_CSC >&
      pages() const;

  // @@protoc_insertion_point(class_scope:hero.MSG_AllDnaPageInfo_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::MSG_DnaPageInfo_CSC > pages_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_SetMainHero_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_SetMainHero_CSC) */ {
 public:
  MSG_SetMainHero_CSC();
  virtual ~MSG_SetMainHero_CSC();

  MSG_SetMainHero_CSC(const MSG_SetMainHero_CSC& from);
  MSG_SetMainHero_CSC(MSG_SetMainHero_CSC&& from) noexcept
    : MSG_SetMainHero_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_SetMainHero_CSC& operator=(const MSG_SetMainHero_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_SetMainHero_CSC& operator=(MSG_SetMainHero_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_SetMainHero_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_SetMainHero_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_SetMainHero_CSC*>(
               &_MSG_SetMainHero_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(MSG_SetMainHero_CSC& a, MSG_SetMainHero_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_SetMainHero_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_SetMainHero_CSC* New() const final {
    return CreateMaybeMessage<MSG_SetMainHero_CSC>(nullptr);
  }

  MSG_SetMainHero_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_SetMainHero_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_SetMainHero_CSC& from);
  void MergeFrom(const MSG_SetMainHero_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_SetMainHero_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_SetMainHero_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 1,
    kOpcodeFieldNumber = 2,
    kErrorcodeFieldNumber = 3,
  };
  // optional uint64 herothisid = 1;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  ::PROTOBUF_NAMESPACE_ID::uint64 herothisid() const;
  void set_herothisid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_herothisid() const;
  void _internal_set_herothisid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 opcode = 2;
  bool has_opcode() const;
  private:
  bool _internal_has_opcode() const;
  public:
  void clear_opcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 opcode() const;
  void set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_opcode() const;
  void _internal_set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 errorcode = 3;
  bool has_errorcode() const;
  private:
  bool _internal_has_errorcode() const;
  public:
  void clear_errorcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errorcode() const;
  void set_errorcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errorcode() const;
  void _internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.MSG_SetMainHero_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 herothisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 opcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errorcode_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class HeroScore :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.HeroScore) */ {
 public:
  HeroScore();
  virtual ~HeroScore();

  HeroScore(const HeroScore& from);
  HeroScore(HeroScore&& from) noexcept
    : HeroScore() {
    *this = ::std::move(from);
  }

  inline HeroScore& operator=(const HeroScore& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeroScore& operator=(HeroScore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HeroScore& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeroScore* internal_default_instance() {
    return reinterpret_cast<const HeroScore*>(
               &_HeroScore_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(HeroScore& a, HeroScore& b) {
    a.Swap(&b);
  }
  inline void Swap(HeroScore* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeroScore* New() const final {
    return CreateMaybeMessage<HeroScore>(nullptr);
  }

  HeroScore* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeroScore>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HeroScore& from);
  void MergeFrom(const HeroScore& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeroScore* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.HeroScore";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kScoreFieldNumber = 2,
  };
  // optional uint64 thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  ::PROTOBUF_NAMESPACE_ID::uint64 thisid() const;
  void set_thisid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_thisid() const;
  void _internal_set_thisid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 score = 2;
  bool has_score() const;
  private:
  bool _internal_has_score() const;
  public:
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:hero.HeroScore)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 score_;
  friend struct ::TableStruct_hero_2eproto;
};
// -------------------------------------------------------------------

class MSG_NotifyClientHeroScore_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero.MSG_NotifyClientHeroScore_SC) */ {
 public:
  MSG_NotifyClientHeroScore_SC();
  virtual ~MSG_NotifyClientHeroScore_SC();

  MSG_NotifyClientHeroScore_SC(const MSG_NotifyClientHeroScore_SC& from);
  MSG_NotifyClientHeroScore_SC(MSG_NotifyClientHeroScore_SC&& from) noexcept
    : MSG_NotifyClientHeroScore_SC() {
    *this = ::std::move(from);
  }

  inline MSG_NotifyClientHeroScore_SC& operator=(const MSG_NotifyClientHeroScore_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_NotifyClientHeroScore_SC& operator=(MSG_NotifyClientHeroScore_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_NotifyClientHeroScore_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_NotifyClientHeroScore_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_NotifyClientHeroScore_SC*>(
               &_MSG_NotifyClientHeroScore_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(MSG_NotifyClientHeroScore_SC& a, MSG_NotifyClientHeroScore_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_NotifyClientHeroScore_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_NotifyClientHeroScore_SC* New() const final {
    return CreateMaybeMessage<MSG_NotifyClientHeroScore_SC>(nullptr);
  }

  MSG_NotifyClientHeroScore_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_NotifyClientHeroScore_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_NotifyClientHeroScore_SC& from);
  void MergeFrom(const MSG_NotifyClientHeroScore_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_NotifyClientHeroScore_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero.MSG_NotifyClientHeroScore_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hero_2eproto);
    return ::descriptor_table_hero_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScoresFieldNumber = 1,
  };
  // repeated .hero.HeroScore scores = 1;
  int scores_size() const;
  private:
  int _internal_scores_size() const;
  public:
  void clear_scores();
  ::hero::HeroScore* mutable_scores(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::HeroScore >*
      mutable_scores();
  private:
  const ::hero::HeroScore& _internal_scores(int index) const;
  ::hero::HeroScore* _internal_add_scores();
  public:
  const ::hero::HeroScore& scores(int index) const;
  ::hero::HeroScore* add_scores();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::HeroScore >&
      scores() const;

  // @@protoc_insertion_point(class_scope:hero.MSG_NotifyClientHeroScore_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::HeroScore > scores_;
  friend struct ::TableStruct_hero_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Hero

// optional string thisid = 1;
inline bool Hero::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Hero::has_thisid() const {
  return _internal_has_thisid();
}
inline void Hero::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Hero::thisid() const {
  // @@protoc_insertion_point(field_get:hero.Hero.thisid)
  return _internal_thisid();
}
inline void Hero::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:hero.Hero.thisid)
}
inline std::string* Hero::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:hero.Hero.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& Hero::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void Hero::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Hero::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.Hero.thisid)
}
inline void Hero::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.Hero.thisid)
}
inline void Hero::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.Hero.thisid)
}
inline std::string* Hero::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Hero::release_thisid() {
  // @@protoc_insertion_point(field_release:hero.Hero.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Hero::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:hero.Hero.thisid)
}

// optional uint32 baseid = 2;
inline bool Hero::_internal_has_baseid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool Hero::has_baseid() const {
  return _internal_has_baseid();
}
inline void Hero::clear_baseid() {
  baseid_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::_internal_baseid() const {
  return baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::baseid() const {
  // @@protoc_insertion_point(field_get:hero.Hero.baseid)
  return _internal_baseid();
}
inline void Hero::_internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  baseid_ = value;
}
inline void Hero::set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseid(value);
  // @@protoc_insertion_point(field_set:hero.Hero.baseid)
}

// optional uint32 star = 3;
inline bool Hero::_internal_has_star() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool Hero::has_star() const {
  return _internal_has_star();
}
inline void Hero::clear_star() {
  star_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::_internal_star() const {
  return star_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::star() const {
  // @@protoc_insertion_point(field_get:hero.Hero.star)
  return _internal_star();
}
inline void Hero::_internal_set_star(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  star_ = value;
}
inline void Hero::set_star(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_star(value);
  // @@protoc_insertion_point(field_set:hero.Hero.star)
}

// optional uint32 bind = 4;
inline bool Hero::_internal_has_bind() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool Hero::has_bind() const {
  return _internal_has_bind();
}
inline void Hero::clear_bind() {
  bind_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::_internal_bind() const {
  return bind_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::bind() const {
  // @@protoc_insertion_point(field_get:hero.Hero.bind)
  return _internal_bind();
}
inline void Hero::_internal_set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  bind_ = value;
}
inline void Hero::set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bind(value);
  // @@protoc_insertion_point(field_set:hero.Hero.bind)
}

// optional uint32 lock = 5;
inline bool Hero::_internal_has_lock() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool Hero::has_lock() const {
  return _internal_has_lock();
}
inline void Hero::clear_lock() {
  lock_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::_internal_lock() const {
  return lock_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::lock() const {
  // @@protoc_insertion_point(field_get:hero.Hero.lock)
  return _internal_lock();
}
inline void Hero::_internal_set_lock(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  lock_ = value;
}
inline void Hero::set_lock(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lock(value);
  // @@protoc_insertion_point(field_set:hero.Hero.lock)
}

// optional uint32 runepageid = 6;
inline bool Hero::_internal_has_runepageid() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool Hero::has_runepageid() const {
  return _internal_has_runepageid();
}
inline void Hero::clear_runepageid() {
  runepageid_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::_internal_runepageid() const {
  return runepageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::runepageid() const {
  // @@protoc_insertion_point(field_get:hero.Hero.runepageid)
  return _internal_runepageid();
}
inline void Hero::_internal_set_runepageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  runepageid_ = value;
}
inline void Hero::set_runepageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_runepageid(value);
  // @@protoc_insertion_point(field_set:hero.Hero.runepageid)
}

// optional uint32 score = 7;
inline bool Hero::_internal_has_score() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool Hero::has_score() const {
  return _internal_has_score();
}
inline void Hero::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::score() const {
  // @@protoc_insertion_point(field_get:hero.Hero.score)
  return _internal_score();
}
inline void Hero::_internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  score_ = value;
}
inline void Hero::set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:hero.Hero.score)
}

// optional .hero.HeroTrain train = 8;
inline bool Hero::_internal_has_train() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || train_ != nullptr);
  return value;
}
inline bool Hero::has_train() const {
  return _internal_has_train();
}
inline void Hero::clear_train() {
  if (train_ != nullptr) train_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::hero::HeroTrain& Hero::_internal_train() const {
  const ::hero::HeroTrain* p = train_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero::HeroTrain*>(
      &::hero::_HeroTrain_default_instance_);
}
inline const ::hero::HeroTrain& Hero::train() const {
  // @@protoc_insertion_point(field_get:hero.Hero.train)
  return _internal_train();
}
inline ::hero::HeroTrain* Hero::release_train() {
  // @@protoc_insertion_point(field_release:hero.Hero.train)
  _has_bits_[0] &= ~0x00000002u;
  ::hero::HeroTrain* temp = train_;
  train_ = nullptr;
  return temp;
}
inline ::hero::HeroTrain* Hero::_internal_mutable_train() {
  _has_bits_[0] |= 0x00000002u;
  if (train_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero::HeroTrain>(GetArenaNoVirtual());
    train_ = p;
  }
  return train_;
}
inline ::hero::HeroTrain* Hero::mutable_train() {
  // @@protoc_insertion_point(field_mutable:hero.Hero.train)
  return _internal_mutable_train();
}
inline void Hero::set_allocated_train(::hero::HeroTrain* train) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete train_;
  }
  if (train) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      train = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, train, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  train_ = train;
  // @@protoc_insertion_point(field_set_allocated:hero.Hero.train)
}

// optional .hero.HeroSkill skill = 9;
inline bool Hero::_internal_has_skill() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || skill_ != nullptr);
  return value;
}
inline bool Hero::has_skill() const {
  return _internal_has_skill();
}
inline void Hero::clear_skill() {
  if (skill_ != nullptr) skill_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::hero::HeroSkill& Hero::_internal_skill() const {
  const ::hero::HeroSkill* p = skill_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero::HeroSkill*>(
      &::hero::_HeroSkill_default_instance_);
}
inline const ::hero::HeroSkill& Hero::skill() const {
  // @@protoc_insertion_point(field_get:hero.Hero.skill)
  return _internal_skill();
}
inline ::hero::HeroSkill* Hero::release_skill() {
  // @@protoc_insertion_point(field_release:hero.Hero.skill)
  _has_bits_[0] &= ~0x00000004u;
  ::hero::HeroSkill* temp = skill_;
  skill_ = nullptr;
  return temp;
}
inline ::hero::HeroSkill* Hero::_internal_mutable_skill() {
  _has_bits_[0] |= 0x00000004u;
  if (skill_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero::HeroSkill>(GetArenaNoVirtual());
    skill_ = p;
  }
  return skill_;
}
inline ::hero::HeroSkill* Hero::mutable_skill() {
  // @@protoc_insertion_point(field_mutable:hero.Hero.skill)
  return _internal_mutable_skill();
}
inline void Hero::set_allocated_skill(::hero::HeroSkill* skill) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete skill_;
  }
  if (skill) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      skill = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, skill, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  skill_ = skill;
  // @@protoc_insertion_point(field_set_allocated:hero.Hero.skill)
}

// optional .hero.HeroAvatar avatar = 10;
inline bool Hero::_internal_has_avatar() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || avatar_ != nullptr);
  return value;
}
inline bool Hero::has_avatar() const {
  return _internal_has_avatar();
}
inline void Hero::clear_avatar() {
  if (avatar_ != nullptr) avatar_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::hero::HeroAvatar& Hero::_internal_avatar() const {
  const ::hero::HeroAvatar* p = avatar_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero::HeroAvatar*>(
      &::hero::_HeroAvatar_default_instance_);
}
inline const ::hero::HeroAvatar& Hero::avatar() const {
  // @@protoc_insertion_point(field_get:hero.Hero.avatar)
  return _internal_avatar();
}
inline ::hero::HeroAvatar* Hero::release_avatar() {
  // @@protoc_insertion_point(field_release:hero.Hero.avatar)
  _has_bits_[0] &= ~0x00000008u;
  ::hero::HeroAvatar* temp = avatar_;
  avatar_ = nullptr;
  return temp;
}
inline ::hero::HeroAvatar* Hero::_internal_mutable_avatar() {
  _has_bits_[0] |= 0x00000008u;
  if (avatar_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero::HeroAvatar>(GetArenaNoVirtual());
    avatar_ = p;
  }
  return avatar_;
}
inline ::hero::HeroAvatar* Hero::mutable_avatar() {
  // @@protoc_insertion_point(field_mutable:hero.Hero.avatar)
  return _internal_mutable_avatar();
}
inline void Hero::set_allocated_avatar(::hero::HeroAvatar* avatar) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete avatar_;
  }
  if (avatar) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      avatar = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, avatar, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  avatar_ = avatar;
  // @@protoc_insertion_point(field_set_allocated:hero.Hero.avatar)
}

// optional .hero.HeroEvolution evolution = 11;
inline bool Hero::_internal_has_evolution() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || evolution_ != nullptr);
  return value;
}
inline bool Hero::has_evolution() const {
  return _internal_has_evolution();
}
inline void Hero::clear_evolution() {
  if (evolution_ != nullptr) evolution_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::hero::HeroEvolution& Hero::_internal_evolution() const {
  const ::hero::HeroEvolution* p = evolution_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero::HeroEvolution*>(
      &::hero::_HeroEvolution_default_instance_);
}
inline const ::hero::HeroEvolution& Hero::evolution() const {
  // @@protoc_insertion_point(field_get:hero.Hero.evolution)
  return _internal_evolution();
}
inline ::hero::HeroEvolution* Hero::release_evolution() {
  // @@protoc_insertion_point(field_release:hero.Hero.evolution)
  _has_bits_[0] &= ~0x00000010u;
  ::hero::HeroEvolution* temp = evolution_;
  evolution_ = nullptr;
  return temp;
}
inline ::hero::HeroEvolution* Hero::_internal_mutable_evolution() {
  _has_bits_[0] |= 0x00000010u;
  if (evolution_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero::HeroEvolution>(GetArenaNoVirtual());
    evolution_ = p;
  }
  return evolution_;
}
inline ::hero::HeroEvolution* Hero::mutable_evolution() {
  // @@protoc_insertion_point(field_mutable:hero.Hero.evolution)
  return _internal_mutable_evolution();
}
inline void Hero::set_allocated_evolution(::hero::HeroEvolution* evolution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete evolution_;
  }
  if (evolution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      evolution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, evolution, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  evolution_ = evolution;
  // @@protoc_insertion_point(field_set_allocated:hero.Hero.evolution)
}

// optional .hero.HeroShow show = 12;
inline bool Hero::_internal_has_show() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || show_ != nullptr);
  return value;
}
inline bool Hero::has_show() const {
  return _internal_has_show();
}
inline void Hero::clear_show() {
  if (show_ != nullptr) show_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::hero::HeroShow& Hero::_internal_show() const {
  const ::hero::HeroShow* p = show_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero::HeroShow*>(
      &::hero::_HeroShow_default_instance_);
}
inline const ::hero::HeroShow& Hero::show() const {
  // @@protoc_insertion_point(field_get:hero.Hero.show)
  return _internal_show();
}
inline ::hero::HeroShow* Hero::release_show() {
  // @@protoc_insertion_point(field_release:hero.Hero.show)
  _has_bits_[0] &= ~0x00000020u;
  ::hero::HeroShow* temp = show_;
  show_ = nullptr;
  return temp;
}
inline ::hero::HeroShow* Hero::_internal_mutable_show() {
  _has_bits_[0] |= 0x00000020u;
  if (show_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero::HeroShow>(GetArenaNoVirtual());
    show_ = p;
  }
  return show_;
}
inline ::hero::HeroShow* Hero::mutable_show() {
  // @@protoc_insertion_point(field_mutable:hero.Hero.show)
  return _internal_mutable_show();
}
inline void Hero::set_allocated_show(::hero::HeroShow* show) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete show_;
  }
  if (show) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      show = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, show, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  show_ = show;
  // @@protoc_insertion_point(field_set_allocated:hero.Hero.show)
}

// optional .Obj.CardPackInfo cardpack = 13;
inline bool Hero::_internal_has_cardpack() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || cardpack_ != nullptr);
  return value;
}
inline bool Hero::has_cardpack() const {
  return _internal_has_cardpack();
}
inline const ::Obj::CardPackInfo& Hero::_internal_cardpack() const {
  const ::Obj::CardPackInfo* p = cardpack_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::CardPackInfo*>(
      &::Obj::_CardPackInfo_default_instance_);
}
inline const ::Obj::CardPackInfo& Hero::cardpack() const {
  // @@protoc_insertion_point(field_get:hero.Hero.cardpack)
  return _internal_cardpack();
}
inline ::Obj::CardPackInfo* Hero::release_cardpack() {
  // @@protoc_insertion_point(field_release:hero.Hero.cardpack)
  _has_bits_[0] &= ~0x00000040u;
  ::Obj::CardPackInfo* temp = cardpack_;
  cardpack_ = nullptr;
  return temp;
}
inline ::Obj::CardPackInfo* Hero::_internal_mutable_cardpack() {
  _has_bits_[0] |= 0x00000040u;
  if (cardpack_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::CardPackInfo>(GetArenaNoVirtual());
    cardpack_ = p;
  }
  return cardpack_;
}
inline ::Obj::CardPackInfo* Hero::mutable_cardpack() {
  // @@protoc_insertion_point(field_mutable:hero.Hero.cardpack)
  return _internal_mutable_cardpack();
}
inline void Hero::set_allocated_cardpack(::Obj::CardPackInfo* cardpack) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cardpack_);
  }
  if (cardpack) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cardpack = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cardpack, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  cardpack_ = cardpack;
  // @@protoc_insertion_point(field_set_allocated:hero.Hero.cardpack)
}

// optional uint32 tradetime = 14;
inline bool Hero::_internal_has_tradetime() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool Hero::has_tradetime() const {
  return _internal_has_tradetime();
}
inline void Hero::clear_tradetime() {
  tradetime_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::_internal_tradetime() const {
  return tradetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::tradetime() const {
  // @@protoc_insertion_point(field_get:hero.Hero.tradetime)
  return _internal_tradetime();
}
inline void Hero::_internal_set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  tradetime_ = value;
}
inline void Hero::set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tradetime(value);
  // @@protoc_insertion_point(field_set:hero.Hero.tradetime)
}

// optional uint32 level = 15;
inline bool Hero::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool Hero::has_level() const {
  return _internal_has_level();
}
inline void Hero::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hero::level() const {
  // @@protoc_insertion_point(field_get:hero.Hero.level)
  return _internal_level();
}
inline void Hero::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  level_ = value;
}
inline void Hero::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:hero.Hero.level)
}

// optional uint64 exp = 16;
inline bool Hero::_internal_has_exp() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool Hero::has_exp() const {
  return _internal_has_exp();
}
inline void Hero::clear_exp() {
  exp_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Hero::_internal_exp() const {
  return exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Hero::exp() const {
  // @@protoc_insertion_point(field_get:hero.Hero.exp)
  return _internal_exp();
}
inline void Hero::_internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00008000u;
  exp_ = value;
}
inline void Hero::set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:hero.Hero.exp)
}

// optional bool self_created = 17;
inline bool Hero::_internal_has_self_created() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool Hero::has_self_created() const {
  return _internal_has_self_created();
}
inline void Hero::clear_self_created() {
  self_created_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool Hero::_internal_self_created() const {
  return self_created_;
}
inline bool Hero::self_created() const {
  // @@protoc_insertion_point(field_get:hero.Hero.self_created)
  return _internal_self_created();
}
inline void Hero::_internal_set_self_created(bool value) {
  _has_bits_[0] |= 0x00010000u;
  self_created_ = value;
}
inline void Hero::set_self_created(bool value) {
  _internal_set_self_created(value);
  // @@protoc_insertion_point(field_set:hero.Hero.self_created)
}

// -------------------------------------------------------------------

// HeroShow

// optional uint32 facestyle = 1;
inline bool HeroShow::_internal_has_facestyle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool HeroShow::has_facestyle() const {
  return _internal_has_facestyle();
}
inline void HeroShow::clear_facestyle() {
  facestyle_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroShow::_internal_facestyle() const {
  return facestyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroShow::facestyle() const {
  // @@protoc_insertion_point(field_get:hero.HeroShow.facestyle)
  return _internal_facestyle();
}
inline void HeroShow::_internal_set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  facestyle_ = value;
}
inline void HeroShow::set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_facestyle(value);
  // @@protoc_insertion_point(field_set:hero.HeroShow.facestyle)
}

// optional uint32 hairstyle = 2;
inline bool HeroShow::_internal_has_hairstyle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool HeroShow::has_hairstyle() const {
  return _internal_has_hairstyle();
}
inline void HeroShow::clear_hairstyle() {
  hairstyle_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroShow::_internal_hairstyle() const {
  return hairstyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroShow::hairstyle() const {
  // @@protoc_insertion_point(field_get:hero.HeroShow.hairstyle)
  return _internal_hairstyle();
}
inline void HeroShow::_internal_set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hairstyle_ = value;
}
inline void HeroShow::set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hairstyle(value);
  // @@protoc_insertion_point(field_set:hero.HeroShow.hairstyle)
}

// optional uint32 bodystyle = 3;
inline bool HeroShow::_internal_has_bodystyle() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool HeroShow::has_bodystyle() const {
  return _internal_has_bodystyle();
}
inline void HeroShow::clear_bodystyle() {
  bodystyle_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroShow::_internal_bodystyle() const {
  return bodystyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroShow::bodystyle() const {
  // @@protoc_insertion_point(field_get:hero.HeroShow.bodystyle)
  return _internal_bodystyle();
}
inline void HeroShow::_internal_set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  bodystyle_ = value;
}
inline void HeroShow::set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bodystyle(value);
  // @@protoc_insertion_point(field_set:hero.HeroShow.bodystyle)
}

// optional uint32 haircolor = 4;
inline bool HeroShow::_internal_has_haircolor() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool HeroShow::has_haircolor() const {
  return _internal_has_haircolor();
}
inline void HeroShow::clear_haircolor() {
  haircolor_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroShow::_internal_haircolor() const {
  return haircolor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroShow::haircolor() const {
  // @@protoc_insertion_point(field_get:hero.HeroShow.haircolor)
  return _internal_haircolor();
}
inline void HeroShow::_internal_set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  haircolor_ = value;
}
inline void HeroShow::set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_haircolor(value);
  // @@protoc_insertion_point(field_set:hero.HeroShow.haircolor)
}

// optional uint32 antenna = 5;
inline bool HeroShow::_internal_has_antenna() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool HeroShow::has_antenna() const {
  return _internal_has_antenna();
}
inline void HeroShow::clear_antenna() {
  antenna_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroShow::_internal_antenna() const {
  return antenna_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroShow::antenna() const {
  // @@protoc_insertion_point(field_get:hero.HeroShow.antenna)
  return _internal_antenna();
}
inline void HeroShow::_internal_set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  antenna_ = value;
}
inline void HeroShow::set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_antenna(value);
  // @@protoc_insertion_point(field_set:hero.HeroShow.antenna)
}

// -------------------------------------------------------------------

// HeroTrain

// optional uint32 pdamage = 2;
inline bool HeroTrain::_internal_has_pdamage() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool HeroTrain::has_pdamage() const {
  return _internal_has_pdamage();
}
inline void HeroTrain::clear_pdamage() {
  pdamage_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroTrain::_internal_pdamage() const {
  return pdamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroTrain::pdamage() const {
  // @@protoc_insertion_point(field_get:hero.HeroTrain.pdamage)
  return _internal_pdamage();
}
inline void HeroTrain::_internal_set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  pdamage_ = value;
}
inline void HeroTrain::set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdamage(value);
  // @@protoc_insertion_point(field_set:hero.HeroTrain.pdamage)
}

// optional uint32 mdamage = 3;
inline bool HeroTrain::_internal_has_mdamage() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool HeroTrain::has_mdamage() const {
  return _internal_has_mdamage();
}
inline void HeroTrain::clear_mdamage() {
  mdamage_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroTrain::_internal_mdamage() const {
  return mdamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroTrain::mdamage() const {
  // @@protoc_insertion_point(field_get:hero.HeroTrain.mdamage)
  return _internal_mdamage();
}
inline void HeroTrain::_internal_set_mdamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  mdamage_ = value;
}
inline void HeroTrain::set_mdamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mdamage(value);
  // @@protoc_insertion_point(field_set:hero.HeroTrain.mdamage)
}

// optional uint32 pdefence = 4;
inline bool HeroTrain::_internal_has_pdefence() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool HeroTrain::has_pdefence() const {
  return _internal_has_pdefence();
}
inline void HeroTrain::clear_pdefence() {
  pdefence_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroTrain::_internal_pdefence() const {
  return pdefence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroTrain::pdefence() const {
  // @@protoc_insertion_point(field_get:hero.HeroTrain.pdefence)
  return _internal_pdefence();
}
inline void HeroTrain::_internal_set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  pdefence_ = value;
}
inline void HeroTrain::set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdefence(value);
  // @@protoc_insertion_point(field_set:hero.HeroTrain.pdefence)
}

// optional uint32 mdefence = 5;
inline bool HeroTrain::_internal_has_mdefence() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool HeroTrain::has_mdefence() const {
  return _internal_has_mdefence();
}
inline void HeroTrain::clear_mdefence() {
  mdefence_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroTrain::_internal_mdefence() const {
  return mdefence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroTrain::mdefence() const {
  // @@protoc_insertion_point(field_get:hero.HeroTrain.mdefence)
  return _internal_mdefence();
}
inline void HeroTrain::_internal_set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  mdefence_ = value;
}
inline void HeroTrain::set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mdefence(value);
  // @@protoc_insertion_point(field_set:hero.HeroTrain.mdefence)
}

// optional uint32 maxhp = 6;
inline bool HeroTrain::_internal_has_maxhp() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool HeroTrain::has_maxhp() const {
  return _internal_has_maxhp();
}
inline void HeroTrain::clear_maxhp() {
  maxhp_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroTrain::_internal_maxhp() const {
  return maxhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroTrain::maxhp() const {
  // @@protoc_insertion_point(field_get:hero.HeroTrain.maxhp)
  return _internal_maxhp();
}
inline void HeroTrain::_internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  maxhp_ = value;
}
inline void HeroTrain::set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxhp(value);
  // @@protoc_insertion_point(field_set:hero.HeroTrain.maxhp)
}

// -------------------------------------------------------------------

// HeroSkillItem

// optional uint32 skillbaseid = 1;
inline bool HeroSkillItem::_internal_has_skillbaseid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool HeroSkillItem::has_skillbaseid() const {
  return _internal_has_skillbaseid();
}
inline void HeroSkillItem::clear_skillbaseid() {
  skillbaseid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroSkillItem::_internal_skillbaseid() const {
  return skillbaseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroSkillItem::skillbaseid() const {
  // @@protoc_insertion_point(field_get:hero.HeroSkillItem.skillbaseid)
  return _internal_skillbaseid();
}
inline void HeroSkillItem::_internal_set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  skillbaseid_ = value;
}
inline void HeroSkillItem::set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillbaseid(value);
  // @@protoc_insertion_point(field_set:hero.HeroSkillItem.skillbaseid)
}

// optional uint32 skilllevel = 2;
inline bool HeroSkillItem::_internal_has_skilllevel() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool HeroSkillItem::has_skilllevel() const {
  return _internal_has_skilllevel();
}
inline void HeroSkillItem::clear_skilllevel() {
  skilllevel_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroSkillItem::_internal_skilllevel() const {
  return skilllevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroSkillItem::skilllevel() const {
  // @@protoc_insertion_point(field_get:hero.HeroSkillItem.skilllevel)
  return _internal_skilllevel();
}
inline void HeroSkillItem::_internal_set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  skilllevel_ = value;
}
inline void HeroSkillItem::set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skilllevel(value);
  // @@protoc_insertion_point(field_set:hero.HeroSkillItem.skilllevel)
}

// optional uint32 skillorgid = 3;
inline bool HeroSkillItem::_internal_has_skillorgid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool HeroSkillItem::has_skillorgid() const {
  return _internal_has_skillorgid();
}
inline void HeroSkillItem::clear_skillorgid() {
  skillorgid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroSkillItem::_internal_skillorgid() const {
  return skillorgid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroSkillItem::skillorgid() const {
  // @@protoc_insertion_point(field_get:hero.HeroSkillItem.skillorgid)
  return _internal_skillorgid();
}
inline void HeroSkillItem::_internal_set_skillorgid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  skillorgid_ = value;
}
inline void HeroSkillItem::set_skillorgid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillorgid(value);
  // @@protoc_insertion_point(field_set:hero.HeroSkillItem.skillorgid)
}

// -------------------------------------------------------------------

// HeroSkill

// repeated .hero.HeroSkillItem skill = 1;
inline int HeroSkill::_internal_skill_size() const {
  return skill_.size();
}
inline int HeroSkill::skill_size() const {
  return _internal_skill_size();
}
inline void HeroSkill::clear_skill() {
  skill_.Clear();
}
inline ::hero::HeroSkillItem* HeroSkill::mutable_skill(int index) {
  // @@protoc_insertion_point(field_mutable:hero.HeroSkill.skill)
  return skill_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::HeroSkillItem >*
HeroSkill::mutable_skill() {
  // @@protoc_insertion_point(field_mutable_list:hero.HeroSkill.skill)
  return &skill_;
}
inline const ::hero::HeroSkillItem& HeroSkill::_internal_skill(int index) const {
  return skill_.Get(index);
}
inline const ::hero::HeroSkillItem& HeroSkill::skill(int index) const {
  // @@protoc_insertion_point(field_get:hero.HeroSkill.skill)
  return _internal_skill(index);
}
inline ::hero::HeroSkillItem* HeroSkill::_internal_add_skill() {
  return skill_.Add();
}
inline ::hero::HeroSkillItem* HeroSkill::add_skill() {
  // @@protoc_insertion_point(field_add:hero.HeroSkill.skill)
  return _internal_add_skill();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::HeroSkillItem >&
HeroSkill::skill() const {
  // @@protoc_insertion_point(field_list:hero.HeroSkill.skill)
  return skill_;
}

// -------------------------------------------------------------------

// HeroAvatar

// repeated uint32 avatars = 1;
inline int HeroAvatar::_internal_avatars_size() const {
  return avatars_.size();
}
inline int HeroAvatar::avatars_size() const {
  return _internal_avatars_size();
}
inline void HeroAvatar::clear_avatars() {
  avatars_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroAvatar::_internal_avatars(int index) const {
  return avatars_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroAvatar::avatars(int index) const {
  // @@protoc_insertion_point(field_get:hero.HeroAvatar.avatars)
  return _internal_avatars(index);
}
inline void HeroAvatar::set_avatars(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  avatars_.Set(index, value);
  // @@protoc_insertion_point(field_set:hero.HeroAvatar.avatars)
}
inline void HeroAvatar::_internal_add_avatars(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  avatars_.Add(value);
}
inline void HeroAvatar::add_avatars(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_avatars(value);
  // @@protoc_insertion_point(field_add:hero.HeroAvatar.avatars)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
HeroAvatar::_internal_avatars() const {
  return avatars_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
HeroAvatar::avatars() const {
  // @@protoc_insertion_point(field_list:hero.HeroAvatar.avatars)
  return _internal_avatars();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
HeroAvatar::_internal_mutable_avatars() {
  return &avatars_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
HeroAvatar::mutable_avatars() {
  // @@protoc_insertion_point(field_mutable_list:hero.HeroAvatar.avatars)
  return _internal_mutable_avatars();
}

// repeated .avatar.AvatarPair equAvatars = 2;
inline int HeroAvatar::_internal_equavatars_size() const {
  return equavatars_.size();
}
inline int HeroAvatar::equavatars_size() const {
  return _internal_equavatars_size();
}
inline ::avatar::AvatarPair* HeroAvatar::mutable_equavatars(int index) {
  // @@protoc_insertion_point(field_mutable:hero.HeroAvatar.equAvatars)
  return equavatars_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::avatar::AvatarPair >*
HeroAvatar::mutable_equavatars() {
  // @@protoc_insertion_point(field_mutable_list:hero.HeroAvatar.equAvatars)
  return &equavatars_;
}
inline const ::avatar::AvatarPair& HeroAvatar::_internal_equavatars(int index) const {
  return equavatars_.Get(index);
}
inline const ::avatar::AvatarPair& HeroAvatar::equavatars(int index) const {
  // @@protoc_insertion_point(field_get:hero.HeroAvatar.equAvatars)
  return _internal_equavatars(index);
}
inline ::avatar::AvatarPair* HeroAvatar::_internal_add_equavatars() {
  return equavatars_.Add();
}
inline ::avatar::AvatarPair* HeroAvatar::add_equavatars() {
  // @@protoc_insertion_point(field_add:hero.HeroAvatar.equAvatars)
  return _internal_add_equavatars();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::avatar::AvatarPair >&
HeroAvatar::equavatars() const {
  // @@protoc_insertion_point(field_list:hero.HeroAvatar.equAvatars)
  return equavatars_;
}

// optional uint32 attrAvatar = 3;
inline bool HeroAvatar::_internal_has_attravatar() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool HeroAvatar::has_attravatar() const {
  return _internal_has_attravatar();
}
inline void HeroAvatar::clear_attravatar() {
  attravatar_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroAvatar::_internal_attravatar() const {
  return attravatar_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroAvatar::attravatar() const {
  // @@protoc_insertion_point(field_get:hero.HeroAvatar.attrAvatar)
  return _internal_attravatar();
}
inline void HeroAvatar::_internal_set_attravatar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  attravatar_ = value;
}
inline void HeroAvatar::set_attravatar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attravatar(value);
  // @@protoc_insertion_point(field_set:hero.HeroAvatar.attrAvatar)
}

// optional uint32 activeAvatar = 4;
inline bool HeroAvatar::_internal_has_activeavatar() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool HeroAvatar::has_activeavatar() const {
  return _internal_has_activeavatar();
}
inline void HeroAvatar::clear_activeavatar() {
  activeavatar_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroAvatar::_internal_activeavatar() const {
  return activeavatar_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroAvatar::activeavatar() const {
  // @@protoc_insertion_point(field_get:hero.HeroAvatar.activeAvatar)
  return _internal_activeavatar();
}
inline void HeroAvatar::_internal_set_activeavatar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  activeavatar_ = value;
}
inline void HeroAvatar::set_activeavatar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_activeavatar(value);
  // @@protoc_insertion_point(field_set:hero.HeroAvatar.activeAvatar)
}

// optional uint32 tranSkill = 5;
inline bool HeroAvatar::_internal_has_transkill() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool HeroAvatar::has_transkill() const {
  return _internal_has_transkill();
}
inline void HeroAvatar::clear_transkill() {
  transkill_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroAvatar::_internal_transkill() const {
  return transkill_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroAvatar::transkill() const {
  // @@protoc_insertion_point(field_get:hero.HeroAvatar.tranSkill)
  return _internal_transkill();
}
inline void HeroAvatar::_internal_set_transkill(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  transkill_ = value;
}
inline void HeroAvatar::set_transkill(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_transkill(value);
  // @@protoc_insertion_point(field_set:hero.HeroAvatar.tranSkill)
}

// -------------------------------------------------------------------

// HeroEvolution

// repeated uint32 evolutions = 1;
inline int HeroEvolution::_internal_evolutions_size() const {
  return evolutions_.size();
}
inline int HeroEvolution::evolutions_size() const {
  return _internal_evolutions_size();
}
inline void HeroEvolution::clear_evolutions() {
  evolutions_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroEvolution::_internal_evolutions(int index) const {
  return evolutions_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroEvolution::evolutions(int index) const {
  // @@protoc_insertion_point(field_get:hero.HeroEvolution.evolutions)
  return _internal_evolutions(index);
}
inline void HeroEvolution::set_evolutions(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  evolutions_.Set(index, value);
  // @@protoc_insertion_point(field_set:hero.HeroEvolution.evolutions)
}
inline void HeroEvolution::_internal_add_evolutions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  evolutions_.Add(value);
}
inline void HeroEvolution::add_evolutions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_evolutions(value);
  // @@protoc_insertion_point(field_add:hero.HeroEvolution.evolutions)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
HeroEvolution::_internal_evolutions() const {
  return evolutions_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
HeroEvolution::evolutions() const {
  // @@protoc_insertion_point(field_list:hero.HeroEvolution.evolutions)
  return _internal_evolutions();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
HeroEvolution::_internal_mutable_evolutions() {
  return &evolutions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
HeroEvolution::mutable_evolutions() {
  // @@protoc_insertion_point(field_mutable_list:hero.HeroEvolution.evolutions)
  return _internal_mutable_evolutions();
}

// -------------------------------------------------------------------

// MSG_ReqSwitchHero_CS

// optional string toherothisid = 1;
inline bool MSG_ReqSwitchHero_CS::_internal_has_toherothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSwitchHero_CS::has_toherothisid() const {
  return _internal_has_toherothisid();
}
inline void MSG_ReqSwitchHero_CS::clear_toherothisid() {
  toherothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqSwitchHero_CS::toherothisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqSwitchHero_CS.toherothisid)
  return _internal_toherothisid();
}
inline void MSG_ReqSwitchHero_CS::set_toherothisid(const std::string& value) {
  _internal_set_toherothisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqSwitchHero_CS.toherothisid)
}
inline std::string* MSG_ReqSwitchHero_CS::mutable_toherothisid() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_ReqSwitchHero_CS.toherothisid)
  return _internal_mutable_toherothisid();
}
inline const std::string& MSG_ReqSwitchHero_CS::_internal_toherothisid() const {
  return toherothisid_.GetNoArena();
}
inline void MSG_ReqSwitchHero_CS::_internal_set_toherothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  toherothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqSwitchHero_CS::set_toherothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  toherothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_ReqSwitchHero_CS.toherothisid)
}
inline void MSG_ReqSwitchHero_CS::set_toherothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  toherothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_ReqSwitchHero_CS.toherothisid)
}
inline void MSG_ReqSwitchHero_CS::set_toherothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  toherothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_ReqSwitchHero_CS.toherothisid)
}
inline std::string* MSG_ReqSwitchHero_CS::_internal_mutable_toherothisid() {
  _has_bits_[0] |= 0x00000001u;
  return toherothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqSwitchHero_CS::release_toherothisid() {
  // @@protoc_insertion_point(field_release:hero.MSG_ReqSwitchHero_CS.toherothisid)
  if (!_internal_has_toherothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return toherothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqSwitchHero_CS::set_allocated_toherothisid(std::string* toherothisid) {
  if (toherothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  toherothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), toherothisid);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_ReqSwitchHero_CS.toherothisid)
}

// -------------------------------------------------------------------

// MSG_RetSwitchHero_SC

// optional uint32 errcode = 1;
inline bool MSG_RetSwitchHero_SC::_internal_has_errcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetSwitchHero_SC::has_errcode() const {
  return _internal_has_errcode();
}
inline void MSG_RetSwitchHero_SC::clear_errcode() {
  errcode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSwitchHero_SC::_internal_errcode() const {
  return errcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSwitchHero_SC::errcode() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetSwitchHero_SC.errcode)
  return _internal_errcode();
}
inline void MSG_RetSwitchHero_SC::_internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  errcode_ = value;
}
inline void MSG_RetSwitchHero_SC::set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errcode(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetSwitchHero_SC.errcode)
}

// optional string curhero = 2;
inline bool MSG_RetSwitchHero_SC::_internal_has_curhero() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetSwitchHero_SC::has_curhero() const {
  return _internal_has_curhero();
}
inline void MSG_RetSwitchHero_SC::clear_curhero() {
  curhero_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_RetSwitchHero_SC::curhero() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetSwitchHero_SC.curhero)
  return _internal_curhero();
}
inline void MSG_RetSwitchHero_SC::set_curhero(const std::string& value) {
  _internal_set_curhero(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetSwitchHero_SC.curhero)
}
inline std::string* MSG_RetSwitchHero_SC::mutable_curhero() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_RetSwitchHero_SC.curhero)
  return _internal_mutable_curhero();
}
inline const std::string& MSG_RetSwitchHero_SC::_internal_curhero() const {
  return curhero_.GetNoArena();
}
inline void MSG_RetSwitchHero_SC::_internal_set_curhero(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  curhero_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_RetSwitchHero_SC::set_curhero(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  curhero_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_RetSwitchHero_SC.curhero)
}
inline void MSG_RetSwitchHero_SC::set_curhero(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  curhero_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_RetSwitchHero_SC.curhero)
}
inline void MSG_RetSwitchHero_SC::set_curhero(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  curhero_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_RetSwitchHero_SC.curhero)
}
inline std::string* MSG_RetSwitchHero_SC::_internal_mutable_curhero() {
  _has_bits_[0] |= 0x00000001u;
  return curhero_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_RetSwitchHero_SC::release_curhero() {
  // @@protoc_insertion_point(field_release:hero.MSG_RetSwitchHero_SC.curhero)
  if (!_internal_has_curhero()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return curhero_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_RetSwitchHero_SC::set_allocated_curhero(std::string* curhero) {
  if (curhero != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  curhero_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), curhero);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_RetSwitchHero_SC.curhero)
}

// -------------------------------------------------------------------

// MSG_NotifyAllHeros_SC

// repeated .hero.Hero heroinfo = 1;
inline int MSG_NotifyAllHeros_SC::_internal_heroinfo_size() const {
  return heroinfo_.size();
}
inline int MSG_NotifyAllHeros_SC::heroinfo_size() const {
  return _internal_heroinfo_size();
}
inline void MSG_NotifyAllHeros_SC::clear_heroinfo() {
  heroinfo_.Clear();
}
inline ::hero::Hero* MSG_NotifyAllHeros_SC::mutable_heroinfo(int index) {
  // @@protoc_insertion_point(field_mutable:hero.MSG_NotifyAllHeros_SC.heroinfo)
  return heroinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >*
MSG_NotifyAllHeros_SC::mutable_heroinfo() {
  // @@protoc_insertion_point(field_mutable_list:hero.MSG_NotifyAllHeros_SC.heroinfo)
  return &heroinfo_;
}
inline const ::hero::Hero& MSG_NotifyAllHeros_SC::_internal_heroinfo(int index) const {
  return heroinfo_.Get(index);
}
inline const ::hero::Hero& MSG_NotifyAllHeros_SC::heroinfo(int index) const {
  // @@protoc_insertion_point(field_get:hero.MSG_NotifyAllHeros_SC.heroinfo)
  return _internal_heroinfo(index);
}
inline ::hero::Hero* MSG_NotifyAllHeros_SC::_internal_add_heroinfo() {
  return heroinfo_.Add();
}
inline ::hero::Hero* MSG_NotifyAllHeros_SC::add_heroinfo() {
  // @@protoc_insertion_point(field_add:hero.MSG_NotifyAllHeros_SC.heroinfo)
  return _internal_add_heroinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >&
MSG_NotifyAllHeros_SC::heroinfo() const {
  // @@protoc_insertion_point(field_list:hero.MSG_NotifyAllHeros_SC.heroinfo)
  return heroinfo_;
}

// -------------------------------------------------------------------

// MSG_NotifyHeroChange_SC

// optional uint32 changetype = 1;
inline bool MSG_NotifyHeroChange_SC::_internal_has_changetype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_NotifyHeroChange_SC::has_changetype() const {
  return _internal_has_changetype();
}
inline void MSG_NotifyHeroChange_SC::clear_changetype() {
  changetype_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyHeroChange_SC::_internal_changetype() const {
  return changetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyHeroChange_SC::changetype() const {
  // @@protoc_insertion_point(field_get:hero.MSG_NotifyHeroChange_SC.changetype)
  return _internal_changetype();
}
inline void MSG_NotifyHeroChange_SC::_internal_set_changetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  changetype_ = value;
}
inline void MSG_NotifyHeroChange_SC::set_changetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_changetype(value);
  // @@protoc_insertion_point(field_set:hero.MSG_NotifyHeroChange_SC.changetype)
}

// repeated .hero.Hero herolist = 2;
inline int MSG_NotifyHeroChange_SC::_internal_herolist_size() const {
  return herolist_.size();
}
inline int MSG_NotifyHeroChange_SC::herolist_size() const {
  return _internal_herolist_size();
}
inline void MSG_NotifyHeroChange_SC::clear_herolist() {
  herolist_.Clear();
}
inline ::hero::Hero* MSG_NotifyHeroChange_SC::mutable_herolist(int index) {
  // @@protoc_insertion_point(field_mutable:hero.MSG_NotifyHeroChange_SC.herolist)
  return herolist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >*
MSG_NotifyHeroChange_SC::mutable_herolist() {
  // @@protoc_insertion_point(field_mutable_list:hero.MSG_NotifyHeroChange_SC.herolist)
  return &herolist_;
}
inline const ::hero::Hero& MSG_NotifyHeroChange_SC::_internal_herolist(int index) const {
  return herolist_.Get(index);
}
inline const ::hero::Hero& MSG_NotifyHeroChange_SC::herolist(int index) const {
  // @@protoc_insertion_point(field_get:hero.MSG_NotifyHeroChange_SC.herolist)
  return _internal_herolist(index);
}
inline ::hero::Hero* MSG_NotifyHeroChange_SC::_internal_add_herolist() {
  return herolist_.Add();
}
inline ::hero::Hero* MSG_NotifyHeroChange_SC::add_herolist() {
  // @@protoc_insertion_point(field_add:hero.MSG_NotifyHeroChange_SC.herolist)
  return _internal_add_herolist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >&
MSG_NotifyHeroChange_SC::herolist() const {
  // @@protoc_insertion_point(field_list:hero.MSG_NotifyHeroChange_SC.herolist)
  return herolist_;
}

// -------------------------------------------------------------------

// MSG_ReqHeroTrain_CS

// optional string herothisid = 1;
inline bool MSG_ReqHeroTrain_CS::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqHeroTrain_CS::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void MSG_ReqHeroTrain_CS::clear_herothisid() {
  herothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqHeroTrain_CS::herothisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqHeroTrain_CS.herothisid)
  return _internal_herothisid();
}
inline void MSG_ReqHeroTrain_CS::set_herothisid(const std::string& value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqHeroTrain_CS.herothisid)
}
inline std::string* MSG_ReqHeroTrain_CS::mutable_herothisid() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_ReqHeroTrain_CS.herothisid)
  return _internal_mutable_herothisid();
}
inline const std::string& MSG_ReqHeroTrain_CS::_internal_herothisid() const {
  return herothisid_.GetNoArena();
}
inline void MSG_ReqHeroTrain_CS::_internal_set_herothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqHeroTrain_CS::set_herothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_ReqHeroTrain_CS.herothisid)
}
inline void MSG_ReqHeroTrain_CS::set_herothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_ReqHeroTrain_CS.herothisid)
}
inline void MSG_ReqHeroTrain_CS::set_herothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_ReqHeroTrain_CS.herothisid)
}
inline std::string* MSG_ReqHeroTrain_CS::_internal_mutable_herothisid() {
  _has_bits_[0] |= 0x00000001u;
  return herothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqHeroTrain_CS::release_herothisid() {
  // @@protoc_insertion_point(field_release:hero.MSG_ReqHeroTrain_CS.herothisid)
  if (!_internal_has_herothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return herothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqHeroTrain_CS::set_allocated_herothisid(std::string* herothisid) {
  if (herothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herothisid);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_ReqHeroTrain_CS.herothisid)
}

// optional uint32 traintimes = 2;
inline bool MSG_ReqHeroTrain_CS::_internal_has_traintimes() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqHeroTrain_CS::has_traintimes() const {
  return _internal_has_traintimes();
}
inline void MSG_ReqHeroTrain_CS::clear_traintimes() {
  traintimes_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqHeroTrain_CS::_internal_traintimes() const {
  return traintimes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqHeroTrain_CS::traintimes() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqHeroTrain_CS.traintimes)
  return _internal_traintimes();
}
inline void MSG_ReqHeroTrain_CS::_internal_set_traintimes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  traintimes_ = value;
}
inline void MSG_ReqHeroTrain_CS::set_traintimes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_traintimes(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqHeroTrain_CS.traintimes)
}

// optional bool isusewater = 3;
inline bool MSG_ReqHeroTrain_CS::_internal_has_isusewater() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqHeroTrain_CS::has_isusewater() const {
  return _internal_has_isusewater();
}
inline void MSG_ReqHeroTrain_CS::clear_isusewater() {
  isusewater_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool MSG_ReqHeroTrain_CS::_internal_isusewater() const {
  return isusewater_;
}
inline bool MSG_ReqHeroTrain_CS::isusewater() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqHeroTrain_CS.isusewater)
  return _internal_isusewater();
}
inline void MSG_ReqHeroTrain_CS::_internal_set_isusewater(bool value) {
  _has_bits_[0] |= 0x00000004u;
  isusewater_ = value;
}
inline void MSG_ReqHeroTrain_CS::set_isusewater(bool value) {
  _internal_set_isusewater(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqHeroTrain_CS.isusewater)
}

// -------------------------------------------------------------------

// MSG_RetHeroTrain_SC

// optional uint32 errcode = 1;
inline bool MSG_RetHeroTrain_SC::_internal_has_errcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetHeroTrain_SC::has_errcode() const {
  return _internal_has_errcode();
}
inline void MSG_RetHeroTrain_SC::clear_errcode() {
  errcode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHeroTrain_SC::_internal_errcode() const {
  return errcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHeroTrain_SC::errcode() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetHeroTrain_SC.errcode)
  return _internal_errcode();
}
inline void MSG_RetHeroTrain_SC::_internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  errcode_ = value;
}
inline void MSG_RetHeroTrain_SC::set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errcode(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetHeroTrain_SC.errcode)
}

// optional .hero.Hero herocurinfo = 2;
inline bool MSG_RetHeroTrain_SC::_internal_has_herocurinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || herocurinfo_ != nullptr);
  return value;
}
inline bool MSG_RetHeroTrain_SC::has_herocurinfo() const {
  return _internal_has_herocurinfo();
}
inline void MSG_RetHeroTrain_SC::clear_herocurinfo() {
  if (herocurinfo_ != nullptr) herocurinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::hero::Hero& MSG_RetHeroTrain_SC::_internal_herocurinfo() const {
  const ::hero::Hero* p = herocurinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero::Hero*>(
      &::hero::_Hero_default_instance_);
}
inline const ::hero::Hero& MSG_RetHeroTrain_SC::herocurinfo() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetHeroTrain_SC.herocurinfo)
  return _internal_herocurinfo();
}
inline ::hero::Hero* MSG_RetHeroTrain_SC::release_herocurinfo() {
  // @@protoc_insertion_point(field_release:hero.MSG_RetHeroTrain_SC.herocurinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::hero::Hero* temp = herocurinfo_;
  herocurinfo_ = nullptr;
  return temp;
}
inline ::hero::Hero* MSG_RetHeroTrain_SC::_internal_mutable_herocurinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (herocurinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero::Hero>(GetArenaNoVirtual());
    herocurinfo_ = p;
  }
  return herocurinfo_;
}
inline ::hero::Hero* MSG_RetHeroTrain_SC::mutable_herocurinfo() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_RetHeroTrain_SC.herocurinfo)
  return _internal_mutable_herocurinfo();
}
inline void MSG_RetHeroTrain_SC::set_allocated_herocurinfo(::hero::Hero* herocurinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete herocurinfo_;
  }
  if (herocurinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      herocurinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, herocurinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herocurinfo_ = herocurinfo;
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_RetHeroTrain_SC.herocurinfo)
}

// -------------------------------------------------------------------

// MSG_ReqLockUnlockHero_CS

// optional string herothisid = 1;
inline bool MSG_ReqLockUnlockHero_CS::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqLockUnlockHero_CS::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void MSG_ReqLockUnlockHero_CS::clear_herothisid() {
  herothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqLockUnlockHero_CS::herothisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqLockUnlockHero_CS.herothisid)
  return _internal_herothisid();
}
inline void MSG_ReqLockUnlockHero_CS::set_herothisid(const std::string& value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqLockUnlockHero_CS.herothisid)
}
inline std::string* MSG_ReqLockUnlockHero_CS::mutable_herothisid() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_ReqLockUnlockHero_CS.herothisid)
  return _internal_mutable_herothisid();
}
inline const std::string& MSG_ReqLockUnlockHero_CS::_internal_herothisid() const {
  return herothisid_.GetNoArena();
}
inline void MSG_ReqLockUnlockHero_CS::_internal_set_herothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqLockUnlockHero_CS::set_herothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_ReqLockUnlockHero_CS.herothisid)
}
inline void MSG_ReqLockUnlockHero_CS::set_herothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_ReqLockUnlockHero_CS.herothisid)
}
inline void MSG_ReqLockUnlockHero_CS::set_herothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_ReqLockUnlockHero_CS.herothisid)
}
inline std::string* MSG_ReqLockUnlockHero_CS::_internal_mutable_herothisid() {
  _has_bits_[0] |= 0x00000001u;
  return herothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqLockUnlockHero_CS::release_herothisid() {
  // @@protoc_insertion_point(field_release:hero.MSG_ReqLockUnlockHero_CS.herothisid)
  if (!_internal_has_herothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return herothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqLockUnlockHero_CS::set_allocated_herothisid(std::string* herothisid) {
  if (herothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herothisid);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_ReqLockUnlockHero_CS.herothisid)
}

// optional uint32 locktype = 2;
inline bool MSG_ReqLockUnlockHero_CS::_internal_has_locktype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqLockUnlockHero_CS::has_locktype() const {
  return _internal_has_locktype();
}
inline void MSG_ReqLockUnlockHero_CS::clear_locktype() {
  locktype_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqLockUnlockHero_CS::_internal_locktype() const {
  return locktype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqLockUnlockHero_CS::locktype() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqLockUnlockHero_CS.locktype)
  return _internal_locktype();
}
inline void MSG_ReqLockUnlockHero_CS::_internal_set_locktype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  locktype_ = value;
}
inline void MSG_ReqLockUnlockHero_CS::set_locktype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_locktype(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqLockUnlockHero_CS.locktype)
}

// -------------------------------------------------------------------

// MSG_RetLockUnlockHero_SC

// optional uint32 retcode = 1;
inline bool MSG_RetLockUnlockHero_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetLockUnlockHero_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetLockUnlockHero_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLockUnlockHero_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLockUnlockHero_SC::retcode() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetLockUnlockHero_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetLockUnlockHero_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  retcode_ = value;
}
inline void MSG_RetLockUnlockHero_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetLockUnlockHero_SC.retcode)
}

// optional string herothisid = 2;
inline bool MSG_RetLockUnlockHero_SC::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetLockUnlockHero_SC::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void MSG_RetLockUnlockHero_SC::clear_herothisid() {
  herothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_RetLockUnlockHero_SC::herothisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetLockUnlockHero_SC.herothisid)
  return _internal_herothisid();
}
inline void MSG_RetLockUnlockHero_SC::set_herothisid(const std::string& value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetLockUnlockHero_SC.herothisid)
}
inline std::string* MSG_RetLockUnlockHero_SC::mutable_herothisid() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_RetLockUnlockHero_SC.herothisid)
  return _internal_mutable_herothisid();
}
inline const std::string& MSG_RetLockUnlockHero_SC::_internal_herothisid() const {
  return herothisid_.GetNoArena();
}
inline void MSG_RetLockUnlockHero_SC::_internal_set_herothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_RetLockUnlockHero_SC::set_herothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_RetLockUnlockHero_SC.herothisid)
}
inline void MSG_RetLockUnlockHero_SC::set_herothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_RetLockUnlockHero_SC.herothisid)
}
inline void MSG_RetLockUnlockHero_SC::set_herothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_RetLockUnlockHero_SC.herothisid)
}
inline std::string* MSG_RetLockUnlockHero_SC::_internal_mutable_herothisid() {
  _has_bits_[0] |= 0x00000001u;
  return herothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_RetLockUnlockHero_SC::release_herothisid() {
  // @@protoc_insertion_point(field_release:hero.MSG_RetLockUnlockHero_SC.herothisid)
  if (!_internal_has_herothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return herothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_RetLockUnlockHero_SC::set_allocated_herothisid(std::string* herothisid) {
  if (herothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herothisid);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_RetLockUnlockHero_SC.herothisid)
}

// optional uint32 locktype = 3;
inline bool MSG_RetLockUnlockHero_SC::_internal_has_locktype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetLockUnlockHero_SC::has_locktype() const {
  return _internal_has_locktype();
}
inline void MSG_RetLockUnlockHero_SC::clear_locktype() {
  locktype_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLockUnlockHero_SC::_internal_locktype() const {
  return locktype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLockUnlockHero_SC::locktype() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetLockUnlockHero_SC.locktype)
  return _internal_locktype();
}
inline void MSG_RetLockUnlockHero_SC::_internal_set_locktype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  locktype_ = value;
}
inline void MSG_RetLockUnlockHero_SC::set_locktype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_locktype(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetLockUnlockHero_SC.locktype)
}

// -------------------------------------------------------------------

// MSG_ReqLevelupHeroSkill_CS

// optional string herothisid = 1;
inline bool MSG_ReqLevelupHeroSkill_CS::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqLevelupHeroSkill_CS::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void MSG_ReqLevelupHeroSkill_CS::clear_herothisid() {
  herothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqLevelupHeroSkill_CS::herothisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqLevelupHeroSkill_CS.herothisid)
  return _internal_herothisid();
}
inline void MSG_ReqLevelupHeroSkill_CS::set_herothisid(const std::string& value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqLevelupHeroSkill_CS.herothisid)
}
inline std::string* MSG_ReqLevelupHeroSkill_CS::mutable_herothisid() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_ReqLevelupHeroSkill_CS.herothisid)
  return _internal_mutable_herothisid();
}
inline const std::string& MSG_ReqLevelupHeroSkill_CS::_internal_herothisid() const {
  return herothisid_.GetNoArena();
}
inline void MSG_ReqLevelupHeroSkill_CS::_internal_set_herothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqLevelupHeroSkill_CS::set_herothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_ReqLevelupHeroSkill_CS.herothisid)
}
inline void MSG_ReqLevelupHeroSkill_CS::set_herothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_ReqLevelupHeroSkill_CS.herothisid)
}
inline void MSG_ReqLevelupHeroSkill_CS::set_herothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_ReqLevelupHeroSkill_CS.herothisid)
}
inline std::string* MSG_ReqLevelupHeroSkill_CS::_internal_mutable_herothisid() {
  _has_bits_[0] |= 0x00000001u;
  return herothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqLevelupHeroSkill_CS::release_herothisid() {
  // @@protoc_insertion_point(field_release:hero.MSG_ReqLevelupHeroSkill_CS.herothisid)
  if (!_internal_has_herothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return herothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqLevelupHeroSkill_CS::set_allocated_herothisid(std::string* herothisid) {
  if (herothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herothisid);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_ReqLevelupHeroSkill_CS.herothisid)
}

// optional uint32 skillbaseid = 2;
inline bool MSG_ReqLevelupHeroSkill_CS::_internal_has_skillbaseid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqLevelupHeroSkill_CS::has_skillbaseid() const {
  return _internal_has_skillbaseid();
}
inline void MSG_ReqLevelupHeroSkill_CS::clear_skillbaseid() {
  skillbaseid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqLevelupHeroSkill_CS::_internal_skillbaseid() const {
  return skillbaseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqLevelupHeroSkill_CS::skillbaseid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqLevelupHeroSkill_CS.skillbaseid)
  return _internal_skillbaseid();
}
inline void MSG_ReqLevelupHeroSkill_CS::_internal_set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  skillbaseid_ = value;
}
inline void MSG_ReqLevelupHeroSkill_CS::set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillbaseid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqLevelupHeroSkill_CS.skillbaseid)
}

// optional uint32 skilllevel = 3;
inline bool MSG_ReqLevelupHeroSkill_CS::_internal_has_skilllevel() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqLevelupHeroSkill_CS::has_skilllevel() const {
  return _internal_has_skilllevel();
}
inline void MSG_ReqLevelupHeroSkill_CS::clear_skilllevel() {
  skilllevel_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqLevelupHeroSkill_CS::_internal_skilllevel() const {
  return skilllevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqLevelupHeroSkill_CS::skilllevel() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqLevelupHeroSkill_CS.skilllevel)
  return _internal_skilllevel();
}
inline void MSG_ReqLevelupHeroSkill_CS::_internal_set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  skilllevel_ = value;
}
inline void MSG_ReqLevelupHeroSkill_CS::set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skilllevel(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqLevelupHeroSkill_CS.skilllevel)
}

// -------------------------------------------------------------------

// MSG_RetLevelupHeroSkill_SC

// optional uint32 retcode = 1;
inline bool MSG_RetLevelupHeroSkill_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetLevelupHeroSkill_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetLevelupHeroSkill_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLevelupHeroSkill_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLevelupHeroSkill_SC::retcode() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetLevelupHeroSkill_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetLevelupHeroSkill_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  retcode_ = value;
}
inline void MSG_RetLevelupHeroSkill_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetLevelupHeroSkill_SC.retcode)
}

// optional string herothisid = 2;
inline bool MSG_RetLevelupHeroSkill_SC::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetLevelupHeroSkill_SC::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void MSG_RetLevelupHeroSkill_SC::clear_herothisid() {
  herothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_RetLevelupHeroSkill_SC::herothisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetLevelupHeroSkill_SC.herothisid)
  return _internal_herothisid();
}
inline void MSG_RetLevelupHeroSkill_SC::set_herothisid(const std::string& value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetLevelupHeroSkill_SC.herothisid)
}
inline std::string* MSG_RetLevelupHeroSkill_SC::mutable_herothisid() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_RetLevelupHeroSkill_SC.herothisid)
  return _internal_mutable_herothisid();
}
inline const std::string& MSG_RetLevelupHeroSkill_SC::_internal_herothisid() const {
  return herothisid_.GetNoArena();
}
inline void MSG_RetLevelupHeroSkill_SC::_internal_set_herothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_RetLevelupHeroSkill_SC::set_herothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_RetLevelupHeroSkill_SC.herothisid)
}
inline void MSG_RetLevelupHeroSkill_SC::set_herothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_RetLevelupHeroSkill_SC.herothisid)
}
inline void MSG_RetLevelupHeroSkill_SC::set_herothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_RetLevelupHeroSkill_SC.herothisid)
}
inline std::string* MSG_RetLevelupHeroSkill_SC::_internal_mutable_herothisid() {
  _has_bits_[0] |= 0x00000001u;
  return herothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_RetLevelupHeroSkill_SC::release_herothisid() {
  // @@protoc_insertion_point(field_release:hero.MSG_RetLevelupHeroSkill_SC.herothisid)
  if (!_internal_has_herothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return herothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_RetLevelupHeroSkill_SC::set_allocated_herothisid(std::string* herothisid) {
  if (herothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herothisid);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_RetLevelupHeroSkill_SC.herothisid)
}

// optional uint32 skillbaseid = 3;
inline bool MSG_RetLevelupHeroSkill_SC::_internal_has_skillbaseid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetLevelupHeroSkill_SC::has_skillbaseid() const {
  return _internal_has_skillbaseid();
}
inline void MSG_RetLevelupHeroSkill_SC::clear_skillbaseid() {
  skillbaseid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLevelupHeroSkill_SC::_internal_skillbaseid() const {
  return skillbaseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLevelupHeroSkill_SC::skillbaseid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetLevelupHeroSkill_SC.skillbaseid)
  return _internal_skillbaseid();
}
inline void MSG_RetLevelupHeroSkill_SC::_internal_set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  skillbaseid_ = value;
}
inline void MSG_RetLevelupHeroSkill_SC::set_skillbaseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillbaseid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetLevelupHeroSkill_SC.skillbaseid)
}

// optional uint32 skilllevel = 4;
inline bool MSG_RetLevelupHeroSkill_SC::_internal_has_skilllevel() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RetLevelupHeroSkill_SC::has_skilllevel() const {
  return _internal_has_skilllevel();
}
inline void MSG_RetLevelupHeroSkill_SC::clear_skilllevel() {
  skilllevel_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLevelupHeroSkill_SC::_internal_skilllevel() const {
  return skilllevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLevelupHeroSkill_SC::skilllevel() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetLevelupHeroSkill_SC.skilllevel)
  return _internal_skilllevel();
}
inline void MSG_RetLevelupHeroSkill_SC::_internal_set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  skilllevel_ = value;
}
inline void MSG_RetLevelupHeroSkill_SC::set_skilllevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skilllevel(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetLevelupHeroSkill_SC.skilllevel)
}

// optional uint32 skillorgid = 5;
inline bool MSG_RetLevelupHeroSkill_SC::_internal_has_skillorgid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_RetLevelupHeroSkill_SC::has_skillorgid() const {
  return _internal_has_skillorgid();
}
inline void MSG_RetLevelupHeroSkill_SC::clear_skillorgid() {
  skillorgid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLevelupHeroSkill_SC::_internal_skillorgid() const {
  return skillorgid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetLevelupHeroSkill_SC::skillorgid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetLevelupHeroSkill_SC.skillorgid)
  return _internal_skillorgid();
}
inline void MSG_RetLevelupHeroSkill_SC::_internal_set_skillorgid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  skillorgid_ = value;
}
inline void MSG_RetLevelupHeroSkill_SC::set_skillorgid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillorgid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetLevelupHeroSkill_SC.skillorgid)
}

// -------------------------------------------------------------------

// MSG_notifyRefreshHero_SC

// optional .hero.Hero heroinfo = 1;
inline bool MSG_notifyRefreshHero_SC::_internal_has_heroinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || heroinfo_ != nullptr);
  return value;
}
inline bool MSG_notifyRefreshHero_SC::has_heroinfo() const {
  return _internal_has_heroinfo();
}
inline void MSG_notifyRefreshHero_SC::clear_heroinfo() {
  if (heroinfo_ != nullptr) heroinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::hero::Hero& MSG_notifyRefreshHero_SC::_internal_heroinfo() const {
  const ::hero::Hero* p = heroinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero::Hero*>(
      &::hero::_Hero_default_instance_);
}
inline const ::hero::Hero& MSG_notifyRefreshHero_SC::heroinfo() const {
  // @@protoc_insertion_point(field_get:hero.MSG_notifyRefreshHero_SC.heroinfo)
  return _internal_heroinfo();
}
inline ::hero::Hero* MSG_notifyRefreshHero_SC::release_heroinfo() {
  // @@protoc_insertion_point(field_release:hero.MSG_notifyRefreshHero_SC.heroinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::hero::Hero* temp = heroinfo_;
  heroinfo_ = nullptr;
  return temp;
}
inline ::hero::Hero* MSG_notifyRefreshHero_SC::_internal_mutable_heroinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (heroinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero::Hero>(GetArenaNoVirtual());
    heroinfo_ = p;
  }
  return heroinfo_;
}
inline ::hero::Hero* MSG_notifyRefreshHero_SC::mutable_heroinfo() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_notifyRefreshHero_SC.heroinfo)
  return _internal_mutable_heroinfo();
}
inline void MSG_notifyRefreshHero_SC::set_allocated_heroinfo(::hero::Hero* heroinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete heroinfo_;
  }
  if (heroinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      heroinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heroinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  heroinfo_ = heroinfo;
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_notifyRefreshHero_SC.heroinfo)
}

// -------------------------------------------------------------------

// MSG_ReqRiseStar_CS

// optional string sourcethisid = 1;
inline bool MSG_ReqRiseStar_CS::_internal_has_sourcethisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqRiseStar_CS::has_sourcethisid() const {
  return _internal_has_sourcethisid();
}
inline void MSG_ReqRiseStar_CS::clear_sourcethisid() {
  sourcethisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqRiseStar_CS::sourcethisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqRiseStar_CS.sourcethisid)
  return _internal_sourcethisid();
}
inline void MSG_ReqRiseStar_CS::set_sourcethisid(const std::string& value) {
  _internal_set_sourcethisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqRiseStar_CS.sourcethisid)
}
inline std::string* MSG_ReqRiseStar_CS::mutable_sourcethisid() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_ReqRiseStar_CS.sourcethisid)
  return _internal_mutable_sourcethisid();
}
inline const std::string& MSG_ReqRiseStar_CS::_internal_sourcethisid() const {
  return sourcethisid_.GetNoArena();
}
inline void MSG_ReqRiseStar_CS::_internal_set_sourcethisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  sourcethisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqRiseStar_CS::set_sourcethisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  sourcethisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_ReqRiseStar_CS.sourcethisid)
}
inline void MSG_ReqRiseStar_CS::set_sourcethisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  sourcethisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_ReqRiseStar_CS.sourcethisid)
}
inline void MSG_ReqRiseStar_CS::set_sourcethisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  sourcethisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_ReqRiseStar_CS.sourcethisid)
}
inline std::string* MSG_ReqRiseStar_CS::_internal_mutable_sourcethisid() {
  _has_bits_[0] |= 0x00000001u;
  return sourcethisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqRiseStar_CS::release_sourcethisid() {
  // @@protoc_insertion_point(field_release:hero.MSG_ReqRiseStar_CS.sourcethisid)
  if (!_internal_has_sourcethisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return sourcethisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqRiseStar_CS::set_allocated_sourcethisid(std::string* sourcethisid) {
  if (sourcethisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sourcethisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sourcethisid);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_ReqRiseStar_CS.sourcethisid)
}

// optional string costthisid = 2;
inline bool MSG_ReqRiseStar_CS::_internal_has_costthisid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqRiseStar_CS::has_costthisid() const {
  return _internal_has_costthisid();
}
inline void MSG_ReqRiseStar_CS::clear_costthisid() {
  costthisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_ReqRiseStar_CS::costthisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqRiseStar_CS.costthisid)
  return _internal_costthisid();
}
inline void MSG_ReqRiseStar_CS::set_costthisid(const std::string& value) {
  _internal_set_costthisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqRiseStar_CS.costthisid)
}
inline std::string* MSG_ReqRiseStar_CS::mutable_costthisid() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_ReqRiseStar_CS.costthisid)
  return _internal_mutable_costthisid();
}
inline const std::string& MSG_ReqRiseStar_CS::_internal_costthisid() const {
  return costthisid_.GetNoArena();
}
inline void MSG_ReqRiseStar_CS::_internal_set_costthisid(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  costthisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqRiseStar_CS::set_costthisid(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  costthisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_ReqRiseStar_CS.costthisid)
}
inline void MSG_ReqRiseStar_CS::set_costthisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  costthisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_ReqRiseStar_CS.costthisid)
}
inline void MSG_ReqRiseStar_CS::set_costthisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  costthisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_ReqRiseStar_CS.costthisid)
}
inline std::string* MSG_ReqRiseStar_CS::_internal_mutable_costthisid() {
  _has_bits_[0] |= 0x00000002u;
  return costthisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqRiseStar_CS::release_costthisid() {
  // @@protoc_insertion_point(field_release:hero.MSG_ReqRiseStar_CS.costthisid)
  if (!_internal_has_costthisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return costthisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqRiseStar_CS::set_allocated_costthisid(std::string* costthisid) {
  if (costthisid != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  costthisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), costthisid);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_ReqRiseStar_CS.costthisid)
}

// -------------------------------------------------------------------

// MSG_RetRiseStar_SC

// optional uint32 retcode = 1;
inline bool MSG_RetRiseStar_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetRiseStar_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetRiseStar_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRiseStar_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRiseStar_SC::retcode() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetRiseStar_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetRiseStar_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  retcode_ = value;
}
inline void MSG_RetRiseStar_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetRiseStar_SC.retcode)
}

// optional string sourcethisid = 2;
inline bool MSG_RetRiseStar_SC::_internal_has_sourcethisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetRiseStar_SC::has_sourcethisid() const {
  return _internal_has_sourcethisid();
}
inline void MSG_RetRiseStar_SC::clear_sourcethisid() {
  sourcethisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_RetRiseStar_SC::sourcethisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetRiseStar_SC.sourcethisid)
  return _internal_sourcethisid();
}
inline void MSG_RetRiseStar_SC::set_sourcethisid(const std::string& value) {
  _internal_set_sourcethisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetRiseStar_SC.sourcethisid)
}
inline std::string* MSG_RetRiseStar_SC::mutable_sourcethisid() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_RetRiseStar_SC.sourcethisid)
  return _internal_mutable_sourcethisid();
}
inline const std::string& MSG_RetRiseStar_SC::_internal_sourcethisid() const {
  return sourcethisid_.GetNoArena();
}
inline void MSG_RetRiseStar_SC::_internal_set_sourcethisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  sourcethisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_RetRiseStar_SC::set_sourcethisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  sourcethisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_RetRiseStar_SC.sourcethisid)
}
inline void MSG_RetRiseStar_SC::set_sourcethisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  sourcethisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_RetRiseStar_SC.sourcethisid)
}
inline void MSG_RetRiseStar_SC::set_sourcethisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  sourcethisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_RetRiseStar_SC.sourcethisid)
}
inline std::string* MSG_RetRiseStar_SC::_internal_mutable_sourcethisid() {
  _has_bits_[0] |= 0x00000001u;
  return sourcethisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_RetRiseStar_SC::release_sourcethisid() {
  // @@protoc_insertion_point(field_release:hero.MSG_RetRiseStar_SC.sourcethisid)
  if (!_internal_has_sourcethisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return sourcethisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_RetRiseStar_SC::set_allocated_sourcethisid(std::string* sourcethisid) {
  if (sourcethisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sourcethisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sourcethisid);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_RetRiseStar_SC.sourcethisid)
}

// optional string costthisid = 3;
inline bool MSG_RetRiseStar_SC::_internal_has_costthisid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetRiseStar_SC::has_costthisid() const {
  return _internal_has_costthisid();
}
inline void MSG_RetRiseStar_SC::clear_costthisid() {
  costthisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_RetRiseStar_SC::costthisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_RetRiseStar_SC.costthisid)
  return _internal_costthisid();
}
inline void MSG_RetRiseStar_SC::set_costthisid(const std::string& value) {
  _internal_set_costthisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_RetRiseStar_SC.costthisid)
}
inline std::string* MSG_RetRiseStar_SC::mutable_costthisid() {
  // @@protoc_insertion_point(field_mutable:hero.MSG_RetRiseStar_SC.costthisid)
  return _internal_mutable_costthisid();
}
inline const std::string& MSG_RetRiseStar_SC::_internal_costthisid() const {
  return costthisid_.GetNoArena();
}
inline void MSG_RetRiseStar_SC::_internal_set_costthisid(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  costthisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_RetRiseStar_SC::set_costthisid(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  costthisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hero.MSG_RetRiseStar_SC.costthisid)
}
inline void MSG_RetRiseStar_SC::set_costthisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  costthisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hero.MSG_RetRiseStar_SC.costthisid)
}
inline void MSG_RetRiseStar_SC::set_costthisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  costthisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hero.MSG_RetRiseStar_SC.costthisid)
}
inline std::string* MSG_RetRiseStar_SC::_internal_mutable_costthisid() {
  _has_bits_[0] |= 0x00000002u;
  return costthisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_RetRiseStar_SC::release_costthisid() {
  // @@protoc_insertion_point(field_release:hero.MSG_RetRiseStar_SC.costthisid)
  if (!_internal_has_costthisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return costthisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_RetRiseStar_SC::set_allocated_costthisid(std::string* costthisid) {
  if (costthisid != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  costthisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), costthisid);
  // @@protoc_insertion_point(field_set_allocated:hero.MSG_RetRiseStar_SC.costthisid)
}

// -------------------------------------------------------------------

// DnaItem

// optional uint32 id = 1;
inline bool DnaItem::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DnaItem::has_id() const {
  return _internal_has_id();
}
inline void DnaItem::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DnaItem::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DnaItem::id() const {
  // @@protoc_insertion_point(field_get:hero.DnaItem.id)
  return _internal_id();
}
inline void DnaItem::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void DnaItem::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:hero.DnaItem.id)
}

// optional uint32 level = 2;
inline bool DnaItem::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DnaItem::has_level() const {
  return _internal_has_level();
}
inline void DnaItem::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DnaItem::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DnaItem::level() const {
  // @@protoc_insertion_point(field_get:hero.DnaItem.level)
  return _internal_level();
}
inline void DnaItem::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  level_ = value;
}
inline void DnaItem::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:hero.DnaItem.level)
}

// optional uint32 num = 3;
inline bool DnaItem::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool DnaItem::has_num() const {
  return _internal_has_num();
}
inline void DnaItem::clear_num() {
  num_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DnaItem::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DnaItem::num() const {
  // @@protoc_insertion_point(field_get:hero.DnaItem.num)
  return _internal_num();
}
inline void DnaItem::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_ = value;
}
inline void DnaItem::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:hero.DnaItem.num)
}

// -------------------------------------------------------------------

// MSG_DnaBagInfo_CSC

// repeated .hero.DnaItem datas = 1;
inline int MSG_DnaBagInfo_CSC::_internal_datas_size() const {
  return datas_.size();
}
inline int MSG_DnaBagInfo_CSC::datas_size() const {
  return _internal_datas_size();
}
inline void MSG_DnaBagInfo_CSC::clear_datas() {
  datas_.Clear();
}
inline ::hero::DnaItem* MSG_DnaBagInfo_CSC::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:hero.MSG_DnaBagInfo_CSC.datas)
  return datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::DnaItem >*
MSG_DnaBagInfo_CSC::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:hero.MSG_DnaBagInfo_CSC.datas)
  return &datas_;
}
inline const ::hero::DnaItem& MSG_DnaBagInfo_CSC::_internal_datas(int index) const {
  return datas_.Get(index);
}
inline const ::hero::DnaItem& MSG_DnaBagInfo_CSC::datas(int index) const {
  // @@protoc_insertion_point(field_get:hero.MSG_DnaBagInfo_CSC.datas)
  return _internal_datas(index);
}
inline ::hero::DnaItem* MSG_DnaBagInfo_CSC::_internal_add_datas() {
  return datas_.Add();
}
inline ::hero::DnaItem* MSG_DnaBagInfo_CSC::add_datas() {
  // @@protoc_insertion_point(field_add:hero.MSG_DnaBagInfo_CSC.datas)
  return _internal_add_datas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::DnaItem >&
MSG_DnaBagInfo_CSC::datas() const {
  // @@protoc_insertion_point(field_list:hero.MSG_DnaBagInfo_CSC.datas)
  return datas_;
}

// optional .hero.DNAPage cur_page = 2;
inline bool MSG_DnaBagInfo_CSC::_internal_has_cur_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_DnaBagInfo_CSC::has_cur_page() const {
  return _internal_has_cur_page();
}
inline void MSG_DnaBagInfo_CSC::clear_cur_page() {
  cur_page_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::hero::DNAPage MSG_DnaBagInfo_CSC::_internal_cur_page() const {
  return static_cast< ::hero::DNAPage >(cur_page_);
}
inline ::hero::DNAPage MSG_DnaBagInfo_CSC::cur_page() const {
  // @@protoc_insertion_point(field_get:hero.MSG_DnaBagInfo_CSC.cur_page)
  return _internal_cur_page();
}
inline void MSG_DnaBagInfo_CSC::_internal_set_cur_page(::hero::DNAPage value) {
  assert(::hero::DNAPage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  cur_page_ = value;
}
inline void MSG_DnaBagInfo_CSC::set_cur_page(::hero::DNAPage value) {
  _internal_set_cur_page(value);
  // @@protoc_insertion_point(field_set:hero.MSG_DnaBagInfo_CSC.cur_page)
}

// -------------------------------------------------------------------

// Hole

// optional uint32 pos = 1;
inline bool Hole::_internal_has_pos() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Hole::has_pos() const {
  return _internal_has_pos();
}
inline void Hole::clear_pos() {
  pos_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hole::_internal_pos() const {
  return pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hole::pos() const {
  // @@protoc_insertion_point(field_get:hero.Hole.pos)
  return _internal_pos();
}
inline void Hole::_internal_set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  pos_ = value;
}
inline void Hole::set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pos(value);
  // @@protoc_insertion_point(field_set:hero.Hole.pos)
}

// optional uint32 id = 2;
inline bool Hole::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Hole::has_id() const {
  return _internal_has_id();
}
inline void Hole::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hole::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hole::id() const {
  // @@protoc_insertion_point(field_get:hero.Hole.id)
  return _internal_id();
}
inline void Hole::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void Hole::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:hero.Hole.id)
}

// optional uint32 level = 3;
inline bool Hole::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Hole::has_level() const {
  return _internal_has_level();
}
inline void Hole::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hole::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Hole::level() const {
  // @@protoc_insertion_point(field_get:hero.Hole.level)
  return _internal_level();
}
inline void Hole::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  level_ = value;
}
inline void Hole::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:hero.Hole.level)
}

// optional .hero.DNAPage page = 4;
inline bool Hole::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool Hole::has_page() const {
  return _internal_has_page();
}
inline void Hole::clear_page() {
  page_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::hero::DNAPage Hole::_internal_page() const {
  return static_cast< ::hero::DNAPage >(page_);
}
inline ::hero::DNAPage Hole::page() const {
  // @@protoc_insertion_point(field_get:hero.Hole.page)
  return _internal_page();
}
inline void Hole::_internal_set_page(::hero::DNAPage value) {
  assert(::hero::DNAPage_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  page_ = value;
}
inline void Hole::set_page(::hero::DNAPage value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:hero.Hole.page)
}

// optional .hero.DNASlotType type = 5;
inline bool Hole::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool Hole::has_type() const {
  return _internal_has_type();
}
inline void Hole::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::hero::DNASlotType Hole::_internal_type() const {
  return static_cast< ::hero::DNASlotType >(type_);
}
inline ::hero::DNASlotType Hole::type() const {
  // @@protoc_insertion_point(field_get:hero.Hole.type)
  return _internal_type();
}
inline void Hole::_internal_set_type(::hero::DNASlotType value) {
  assert(::hero::DNASlotType_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  type_ = value;
}
inline void Hole::set_type(::hero::DNASlotType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:hero.Hole.type)
}

// -------------------------------------------------------------------

// MSG_DnaPageInfo_CSC

// optional .hero.DNAPage page = 1;
inline bool MSG_DnaPageInfo_CSC::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_DnaPageInfo_CSC::has_page() const {
  return _internal_has_page();
}
inline void MSG_DnaPageInfo_CSC::clear_page() {
  page_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::hero::DNAPage MSG_DnaPageInfo_CSC::_internal_page() const {
  return static_cast< ::hero::DNAPage >(page_);
}
inline ::hero::DNAPage MSG_DnaPageInfo_CSC::page() const {
  // @@protoc_insertion_point(field_get:hero.MSG_DnaPageInfo_CSC.page)
  return _internal_page();
}
inline void MSG_DnaPageInfo_CSC::_internal_set_page(::hero::DNAPage value) {
  assert(::hero::DNAPage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  page_ = value;
}
inline void MSG_DnaPageInfo_CSC::set_page(::hero::DNAPage value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:hero.MSG_DnaPageInfo_CSC.page)
}

// repeated .hero.Hole att_holes = 2;
inline int MSG_DnaPageInfo_CSC::_internal_att_holes_size() const {
  return att_holes_.size();
}
inline int MSG_DnaPageInfo_CSC::att_holes_size() const {
  return _internal_att_holes_size();
}
inline void MSG_DnaPageInfo_CSC::clear_att_holes() {
  att_holes_.Clear();
}
inline ::hero::Hole* MSG_DnaPageInfo_CSC::mutable_att_holes(int index) {
  // @@protoc_insertion_point(field_mutable:hero.MSG_DnaPageInfo_CSC.att_holes)
  return att_holes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hole >*
MSG_DnaPageInfo_CSC::mutable_att_holes() {
  // @@protoc_insertion_point(field_mutable_list:hero.MSG_DnaPageInfo_CSC.att_holes)
  return &att_holes_;
}
inline const ::hero::Hole& MSG_DnaPageInfo_CSC::_internal_att_holes(int index) const {
  return att_holes_.Get(index);
}
inline const ::hero::Hole& MSG_DnaPageInfo_CSC::att_holes(int index) const {
  // @@protoc_insertion_point(field_get:hero.MSG_DnaPageInfo_CSC.att_holes)
  return _internal_att_holes(index);
}
inline ::hero::Hole* MSG_DnaPageInfo_CSC::_internal_add_att_holes() {
  return att_holes_.Add();
}
inline ::hero::Hole* MSG_DnaPageInfo_CSC::add_att_holes() {
  // @@protoc_insertion_point(field_add:hero.MSG_DnaPageInfo_CSC.att_holes)
  return _internal_add_att_holes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hole >&
MSG_DnaPageInfo_CSC::att_holes() const {
  // @@protoc_insertion_point(field_list:hero.MSG_DnaPageInfo_CSC.att_holes)
  return att_holes_;
}

// repeated .hero.Hole def_holes = 3;
inline int MSG_DnaPageInfo_CSC::_internal_def_holes_size() const {
  return def_holes_.size();
}
inline int MSG_DnaPageInfo_CSC::def_holes_size() const {
  return _internal_def_holes_size();
}
inline void MSG_DnaPageInfo_CSC::clear_def_holes() {
  def_holes_.Clear();
}
inline ::hero::Hole* MSG_DnaPageInfo_CSC::mutable_def_holes(int index) {
  // @@protoc_insertion_point(field_mutable:hero.MSG_DnaPageInfo_CSC.def_holes)
  return def_holes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hole >*
MSG_DnaPageInfo_CSC::mutable_def_holes() {
  // @@protoc_insertion_point(field_mutable_list:hero.MSG_DnaPageInfo_CSC.def_holes)
  return &def_holes_;
}
inline const ::hero::Hole& MSG_DnaPageInfo_CSC::_internal_def_holes(int index) const {
  return def_holes_.Get(index);
}
inline const ::hero::Hole& MSG_DnaPageInfo_CSC::def_holes(int index) const {
  // @@protoc_insertion_point(field_get:hero.MSG_DnaPageInfo_CSC.def_holes)
  return _internal_def_holes(index);
}
inline ::hero::Hole* MSG_DnaPageInfo_CSC::_internal_add_def_holes() {
  return def_holes_.Add();
}
inline ::hero::Hole* MSG_DnaPageInfo_CSC::add_def_holes() {
  // @@protoc_insertion_point(field_add:hero.MSG_DnaPageInfo_CSC.def_holes)
  return _internal_add_def_holes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hole >&
MSG_DnaPageInfo_CSC::def_holes() const {
  // @@protoc_insertion_point(field_list:hero.MSG_DnaPageInfo_CSC.def_holes)
  return def_holes_;
}

// optional uint32 att_opened_num = 4;
inline bool MSG_DnaPageInfo_CSC::_internal_has_att_opened_num() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_DnaPageInfo_CSC::has_att_opened_num() const {
  return _internal_has_att_opened_num();
}
inline void MSG_DnaPageInfo_CSC::clear_att_opened_num() {
  att_opened_num_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_DnaPageInfo_CSC::_internal_att_opened_num() const {
  return att_opened_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_DnaPageInfo_CSC::att_opened_num() const {
  // @@protoc_insertion_point(field_get:hero.MSG_DnaPageInfo_CSC.att_opened_num)
  return _internal_att_opened_num();
}
inline void MSG_DnaPageInfo_CSC::_internal_set_att_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  att_opened_num_ = value;
}
inline void MSG_DnaPageInfo_CSC::set_att_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_att_opened_num(value);
  // @@protoc_insertion_point(field_set:hero.MSG_DnaPageInfo_CSC.att_opened_num)
}

// optional uint32 def_opened_num = 5;
inline bool MSG_DnaPageInfo_CSC::_internal_has_def_opened_num() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_DnaPageInfo_CSC::has_def_opened_num() const {
  return _internal_has_def_opened_num();
}
inline void MSG_DnaPageInfo_CSC::clear_def_opened_num() {
  def_opened_num_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_DnaPageInfo_CSC::_internal_def_opened_num() const {
  return def_opened_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_DnaPageInfo_CSC::def_opened_num() const {
  // @@protoc_insertion_point(field_get:hero.MSG_DnaPageInfo_CSC.def_opened_num)
  return _internal_def_opened_num();
}
inline void MSG_DnaPageInfo_CSC::_internal_set_def_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  def_opened_num_ = value;
}
inline void MSG_DnaPageInfo_CSC::set_def_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_def_opened_num(value);
  // @@protoc_insertion_point(field_set:hero.MSG_DnaPageInfo_CSC.def_opened_num)
}

// -------------------------------------------------------------------

// MSG_ReqPutOnDna_CS

// optional .hero.DNAPage page = 1;
inline bool MSG_ReqPutOnDna_CS::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqPutOnDna_CS::has_page() const {
  return _internal_has_page();
}
inline void MSG_ReqPutOnDna_CS::clear_page() {
  page_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::hero::DNAPage MSG_ReqPutOnDna_CS::_internal_page() const {
  return static_cast< ::hero::DNAPage >(page_);
}
inline ::hero::DNAPage MSG_ReqPutOnDna_CS::page() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqPutOnDna_CS.page)
  return _internal_page();
}
inline void MSG_ReqPutOnDna_CS::_internal_set_page(::hero::DNAPage value) {
  assert(::hero::DNAPage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  page_ = value;
}
inline void MSG_ReqPutOnDna_CS::set_page(::hero::DNAPage value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqPutOnDna_CS.page)
}

// optional uint32 pos = 2;
inline bool MSG_ReqPutOnDna_CS::_internal_has_pos() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqPutOnDna_CS::has_pos() const {
  return _internal_has_pos();
}
inline void MSG_ReqPutOnDna_CS::clear_pos() {
  pos_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOnDna_CS::_internal_pos() const {
  return pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOnDna_CS::pos() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqPutOnDna_CS.pos)
  return _internal_pos();
}
inline void MSG_ReqPutOnDna_CS::_internal_set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pos_ = value;
}
inline void MSG_ReqPutOnDna_CS::set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pos(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqPutOnDna_CS.pos)
}

// optional uint32 id = 3;
inline bool MSG_ReqPutOnDna_CS::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqPutOnDna_CS::has_id() const {
  return _internal_has_id();
}
inline void MSG_ReqPutOnDna_CS::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOnDna_CS::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOnDna_CS::id() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqPutOnDna_CS.id)
  return _internal_id();
}
inline void MSG_ReqPutOnDna_CS::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  id_ = value;
}
inline void MSG_ReqPutOnDna_CS::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqPutOnDna_CS.id)
}

// optional uint32 level = 4;
inline bool MSG_ReqPutOnDna_CS::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqPutOnDna_CS::has_level() const {
  return _internal_has_level();
}
inline void MSG_ReqPutOnDna_CS::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOnDna_CS::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOnDna_CS::level() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqPutOnDna_CS.level)
  return _internal_level();
}
inline void MSG_ReqPutOnDna_CS::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  level_ = value;
}
inline void MSG_ReqPutOnDna_CS::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqPutOnDna_CS.level)
}

// optional .hero.DNASlotType type = 5;
inline bool MSG_ReqPutOnDna_CS::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_ReqPutOnDna_CS::has_type() const {
  return _internal_has_type();
}
inline void MSG_ReqPutOnDna_CS::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::hero::DNASlotType MSG_ReqPutOnDna_CS::_internal_type() const {
  return static_cast< ::hero::DNASlotType >(type_);
}
inline ::hero::DNASlotType MSG_ReqPutOnDna_CS::type() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqPutOnDna_CS.type)
  return _internal_type();
}
inline void MSG_ReqPutOnDna_CS::_internal_set_type(::hero::DNASlotType value) {
  assert(::hero::DNASlotType_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  type_ = value;
}
inline void MSG_ReqPutOnDna_CS::set_type(::hero::DNASlotType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqPutOnDna_CS.type)
}

// -------------------------------------------------------------------

// MSG_ReqPutOffDna_CS

// optional .hero.DNAPage page = 1;
inline bool MSG_ReqPutOffDna_CS::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqPutOffDna_CS::has_page() const {
  return _internal_has_page();
}
inline void MSG_ReqPutOffDna_CS::clear_page() {
  page_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::hero::DNAPage MSG_ReqPutOffDna_CS::_internal_page() const {
  return static_cast< ::hero::DNAPage >(page_);
}
inline ::hero::DNAPage MSG_ReqPutOffDna_CS::page() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqPutOffDna_CS.page)
  return _internal_page();
}
inline void MSG_ReqPutOffDna_CS::_internal_set_page(::hero::DNAPage value) {
  assert(::hero::DNAPage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  page_ = value;
}
inline void MSG_ReqPutOffDna_CS::set_page(::hero::DNAPage value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqPutOffDna_CS.page)
}

// optional uint32 pos = 2;
inline bool MSG_ReqPutOffDna_CS::_internal_has_pos() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqPutOffDna_CS::has_pos() const {
  return _internal_has_pos();
}
inline void MSG_ReqPutOffDna_CS::clear_pos() {
  pos_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOffDna_CS::_internal_pos() const {
  return pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOffDna_CS::pos() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqPutOffDna_CS.pos)
  return _internal_pos();
}
inline void MSG_ReqPutOffDna_CS::_internal_set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pos_ = value;
}
inline void MSG_ReqPutOffDna_CS::set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pos(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqPutOffDna_CS.pos)
}

// optional .hero.DNASlotType type = 3;
inline bool MSG_ReqPutOffDna_CS::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqPutOffDna_CS::has_type() const {
  return _internal_has_type();
}
inline void MSG_ReqPutOffDna_CS::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::hero::DNASlotType MSG_ReqPutOffDna_CS::_internal_type() const {
  return static_cast< ::hero::DNASlotType >(type_);
}
inline ::hero::DNASlotType MSG_ReqPutOffDna_CS::type() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqPutOffDna_CS.type)
  return _internal_type();
}
inline void MSG_ReqPutOffDna_CS::_internal_set_type(::hero::DNASlotType value) {
  assert(::hero::DNASlotType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
}
inline void MSG_ReqPutOffDna_CS::set_type(::hero::DNASlotType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqPutOffDna_CS.type)
}

// -------------------------------------------------------------------

// MSG_ReqCombineDna_CS

// optional .hero.DNAPage page = 1;
inline bool MSG_ReqCombineDna_CS::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqCombineDna_CS::has_page() const {
  return _internal_has_page();
}
inline void MSG_ReqCombineDna_CS::clear_page() {
  page_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::hero::DNAPage MSG_ReqCombineDna_CS::_internal_page() const {
  return static_cast< ::hero::DNAPage >(page_);
}
inline ::hero::DNAPage MSG_ReqCombineDna_CS::page() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqCombineDna_CS.page)
  return _internal_page();
}
inline void MSG_ReqCombineDna_CS::_internal_set_page(::hero::DNAPage value) {
  assert(::hero::DNAPage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  page_ = value;
}
inline void MSG_ReqCombineDna_CS::set_page(::hero::DNAPage value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqCombineDna_CS.page)
}

// optional uint32 pos = 2;
inline bool MSG_ReqCombineDna_CS::_internal_has_pos() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqCombineDna_CS::has_pos() const {
  return _internal_has_pos();
}
inline void MSG_ReqCombineDna_CS::clear_pos() {
  pos_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCombineDna_CS::_internal_pos() const {
  return pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCombineDna_CS::pos() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqCombineDna_CS.pos)
  return _internal_pos();
}
inline void MSG_ReqCombineDna_CS::_internal_set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pos_ = value;
}
inline void MSG_ReqCombineDna_CS::set_pos(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pos(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqCombineDna_CS.pos)
}

// optional .hero.DNASlotType type = 3;
inline bool MSG_ReqCombineDna_CS::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqCombineDna_CS::has_type() const {
  return _internal_has_type();
}
inline void MSG_ReqCombineDna_CS::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::hero::DNASlotType MSG_ReqCombineDna_CS::_internal_type() const {
  return static_cast< ::hero::DNASlotType >(type_);
}
inline ::hero::DNASlotType MSG_ReqCombineDna_CS::type() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqCombineDna_CS.type)
  return _internal_type();
}
inline void MSG_ReqCombineDna_CS::_internal_set_type(::hero::DNASlotType value) {
  assert(::hero::DNASlotType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
}
inline void MSG_ReqCombineDna_CS::set_type(::hero::DNASlotType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqCombineDna_CS.type)
}

// optional uint32 num = 4;
inline bool MSG_ReqCombineDna_CS::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqCombineDna_CS::has_num() const {
  return _internal_has_num();
}
inline void MSG_ReqCombineDna_CS::clear_num() {
  num_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCombineDna_CS::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCombineDna_CS::num() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqCombineDna_CS.num)
  return _internal_num();
}
inline void MSG_ReqCombineDna_CS::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  num_ = value;
}
inline void MSG_ReqCombineDna_CS::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqCombineDna_CS.num)
}

// -------------------------------------------------------------------

// MSG_ReqChangeCurDnaPage_CS

// optional .hero.DNAPage page = 1;
inline bool MSG_ReqChangeCurDnaPage_CS::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqChangeCurDnaPage_CS::has_page() const {
  return _internal_has_page();
}
inline void MSG_ReqChangeCurDnaPage_CS::clear_page() {
  page_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::hero::DNAPage MSG_ReqChangeCurDnaPage_CS::_internal_page() const {
  return static_cast< ::hero::DNAPage >(page_);
}
inline ::hero::DNAPage MSG_ReqChangeCurDnaPage_CS::page() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqChangeCurDnaPage_CS.page)
  return _internal_page();
}
inline void MSG_ReqChangeCurDnaPage_CS::_internal_set_page(::hero::DNAPage value) {
  assert(::hero::DNAPage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  page_ = value;
}
inline void MSG_ReqChangeCurDnaPage_CS::set_page(::hero::DNAPage value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqChangeCurDnaPage_CS.page)
}

// -------------------------------------------------------------------

// MSG_ReqCombineDnaInBag_CS

// optional uint32 id = 1;
inline bool MSG_ReqCombineDnaInBag_CS::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqCombineDnaInBag_CS::has_id() const {
  return _internal_has_id();
}
inline void MSG_ReqCombineDnaInBag_CS::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCombineDnaInBag_CS::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCombineDnaInBag_CS::id() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqCombineDnaInBag_CS.id)
  return _internal_id();
}
inline void MSG_ReqCombineDnaInBag_CS::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void MSG_ReqCombineDnaInBag_CS::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqCombineDnaInBag_CS.id)
}

// optional uint32 level = 2;
inline bool MSG_ReqCombineDnaInBag_CS::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqCombineDnaInBag_CS::has_level() const {
  return _internal_has_level();
}
inline void MSG_ReqCombineDnaInBag_CS::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCombineDnaInBag_CS::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCombineDnaInBag_CS::level() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqCombineDnaInBag_CS.level)
  return _internal_level();
}
inline void MSG_ReqCombineDnaInBag_CS::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  level_ = value;
}
inline void MSG_ReqCombineDnaInBag_CS::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqCombineDnaInBag_CS.level)
}

// optional uint32 num = 3;
inline bool MSG_ReqCombineDnaInBag_CS::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqCombineDnaInBag_CS::has_num() const {
  return _internal_has_num();
}
inline void MSG_ReqCombineDnaInBag_CS::clear_num() {
  num_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCombineDnaInBag_CS::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCombineDnaInBag_CS::num() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqCombineDnaInBag_CS.num)
  return _internal_num();
}
inline void MSG_ReqCombineDnaInBag_CS::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_ = value;
}
inline void MSG_ReqCombineDnaInBag_CS::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqCombineDnaInBag_CS.num)
}

// -------------------------------------------------------------------

// MSG_ReqBuySlot_SC

// optional .hero.DNAPage page = 1;
inline bool MSG_ReqBuySlot_SC::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqBuySlot_SC::has_page() const {
  return _internal_has_page();
}
inline void MSG_ReqBuySlot_SC::clear_page() {
  page_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::hero::DNAPage MSG_ReqBuySlot_SC::_internal_page() const {
  return static_cast< ::hero::DNAPage >(page_);
}
inline ::hero::DNAPage MSG_ReqBuySlot_SC::page() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqBuySlot_SC.page)
  return _internal_page();
}
inline void MSG_ReqBuySlot_SC::_internal_set_page(::hero::DNAPage value) {
  assert(::hero::DNAPage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  page_ = value;
}
inline void MSG_ReqBuySlot_SC::set_page(::hero::DNAPage value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqBuySlot_SC.page)
}

// optional .hero.DNASlotType type = 2;
inline bool MSG_ReqBuySlot_SC::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqBuySlot_SC::has_type() const {
  return _internal_has_type();
}
inline void MSG_ReqBuySlot_SC::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::hero::DNASlotType MSG_ReqBuySlot_SC::_internal_type() const {
  return static_cast< ::hero::DNASlotType >(type_);
}
inline ::hero::DNASlotType MSG_ReqBuySlot_SC::type() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ReqBuySlot_SC.type)
  return _internal_type();
}
inline void MSG_ReqBuySlot_SC::_internal_set_type(::hero::DNASlotType value) {
  assert(::hero::DNASlotType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void MSG_ReqBuySlot_SC::set_type(::hero::DNASlotType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ReqBuySlot_SC.type)
}

// -------------------------------------------------------------------

// MSG_ResponseSlotOpened_SC

// optional .hero.DNAPage page = 1;
inline bool MSG_ResponseSlotOpened_SC::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ResponseSlotOpened_SC::has_page() const {
  return _internal_has_page();
}
inline void MSG_ResponseSlotOpened_SC::clear_page() {
  page_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::hero::DNAPage MSG_ResponseSlotOpened_SC::_internal_page() const {
  return static_cast< ::hero::DNAPage >(page_);
}
inline ::hero::DNAPage MSG_ResponseSlotOpened_SC::page() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ResponseSlotOpened_SC.page)
  return _internal_page();
}
inline void MSG_ResponseSlotOpened_SC::_internal_set_page(::hero::DNAPage value) {
  assert(::hero::DNAPage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  page_ = value;
}
inline void MSG_ResponseSlotOpened_SC::set_page(::hero::DNAPage value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ResponseSlotOpened_SC.page)
}

// optional .hero.DNASlotType type = 2;
inline bool MSG_ResponseSlotOpened_SC::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ResponseSlotOpened_SC::has_type() const {
  return _internal_has_type();
}
inline void MSG_ResponseSlotOpened_SC::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::hero::DNASlotType MSG_ResponseSlotOpened_SC::_internal_type() const {
  return static_cast< ::hero::DNASlotType >(type_);
}
inline ::hero::DNASlotType MSG_ResponseSlotOpened_SC::type() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ResponseSlotOpened_SC.type)
  return _internal_type();
}
inline void MSG_ResponseSlotOpened_SC::_internal_set_type(::hero::DNASlotType value) {
  assert(::hero::DNASlotType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void MSG_ResponseSlotOpened_SC::set_type(::hero::DNASlotType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ResponseSlotOpened_SC.type)
}

// optional uint32 cur_num = 3;
inline bool MSG_ResponseSlotOpened_SC::_internal_has_cur_num() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ResponseSlotOpened_SC::has_cur_num() const {
  return _internal_has_cur_num();
}
inline void MSG_ResponseSlotOpened_SC::clear_cur_num() {
  cur_num_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ResponseSlotOpened_SC::_internal_cur_num() const {
  return cur_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ResponseSlotOpened_SC::cur_num() const {
  // @@protoc_insertion_point(field_get:hero.MSG_ResponseSlotOpened_SC.cur_num)
  return _internal_cur_num();
}
inline void MSG_ResponseSlotOpened_SC::_internal_set_cur_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  cur_num_ = value;
}
inline void MSG_ResponseSlotOpened_SC::set_cur_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cur_num(value);
  // @@protoc_insertion_point(field_set:hero.MSG_ResponseSlotOpened_SC.cur_num)
}

// -------------------------------------------------------------------

// MSG_AllDnaPageInfo_CSC

// repeated .hero.MSG_DnaPageInfo_CSC pages = 1;
inline int MSG_AllDnaPageInfo_CSC::_internal_pages_size() const {
  return pages_.size();
}
inline int MSG_AllDnaPageInfo_CSC::pages_size() const {
  return _internal_pages_size();
}
inline void MSG_AllDnaPageInfo_CSC::clear_pages() {
  pages_.Clear();
}
inline ::hero::MSG_DnaPageInfo_CSC* MSG_AllDnaPageInfo_CSC::mutable_pages(int index) {
  // @@protoc_insertion_point(field_mutable:hero.MSG_AllDnaPageInfo_CSC.pages)
  return pages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::MSG_DnaPageInfo_CSC >*
MSG_AllDnaPageInfo_CSC::mutable_pages() {
  // @@protoc_insertion_point(field_mutable_list:hero.MSG_AllDnaPageInfo_CSC.pages)
  return &pages_;
}
inline const ::hero::MSG_DnaPageInfo_CSC& MSG_AllDnaPageInfo_CSC::_internal_pages(int index) const {
  return pages_.Get(index);
}
inline const ::hero::MSG_DnaPageInfo_CSC& MSG_AllDnaPageInfo_CSC::pages(int index) const {
  // @@protoc_insertion_point(field_get:hero.MSG_AllDnaPageInfo_CSC.pages)
  return _internal_pages(index);
}
inline ::hero::MSG_DnaPageInfo_CSC* MSG_AllDnaPageInfo_CSC::_internal_add_pages() {
  return pages_.Add();
}
inline ::hero::MSG_DnaPageInfo_CSC* MSG_AllDnaPageInfo_CSC::add_pages() {
  // @@protoc_insertion_point(field_add:hero.MSG_AllDnaPageInfo_CSC.pages)
  return _internal_add_pages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::MSG_DnaPageInfo_CSC >&
MSG_AllDnaPageInfo_CSC::pages() const {
  // @@protoc_insertion_point(field_list:hero.MSG_AllDnaPageInfo_CSC.pages)
  return pages_;
}

// -------------------------------------------------------------------

// MSG_SetMainHero_CSC

// optional uint64 herothisid = 1;
inline bool MSG_SetMainHero_CSC::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_SetMainHero_CSC::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void MSG_SetMainHero_CSC::clear_herothisid() {
  herothisid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_SetMainHero_CSC::_internal_herothisid() const {
  return herothisid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_SetMainHero_CSC::herothisid() const {
  // @@protoc_insertion_point(field_get:hero.MSG_SetMainHero_CSC.herothisid)
  return _internal_herothisid();
}
inline void MSG_SetMainHero_CSC::_internal_set_herothisid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_ = value;
}
inline void MSG_SetMainHero_CSC::set_herothisid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:hero.MSG_SetMainHero_CSC.herothisid)
}

// optional uint32 opcode = 2;
inline bool MSG_SetMainHero_CSC::_internal_has_opcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_SetMainHero_CSC::has_opcode() const {
  return _internal_has_opcode();
}
inline void MSG_SetMainHero_CSC::clear_opcode() {
  opcode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_SetMainHero_CSC::_internal_opcode() const {
  return opcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_SetMainHero_CSC::opcode() const {
  // @@protoc_insertion_point(field_get:hero.MSG_SetMainHero_CSC.opcode)
  return _internal_opcode();
}
inline void MSG_SetMainHero_CSC::_internal_set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  opcode_ = value;
}
inline void MSG_SetMainHero_CSC::set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_opcode(value);
  // @@protoc_insertion_point(field_set:hero.MSG_SetMainHero_CSC.opcode)
}

// optional uint32 errorcode = 3;
inline bool MSG_SetMainHero_CSC::_internal_has_errorcode() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_SetMainHero_CSC::has_errorcode() const {
  return _internal_has_errorcode();
}
inline void MSG_SetMainHero_CSC::clear_errorcode() {
  errorcode_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_SetMainHero_CSC::_internal_errorcode() const {
  return errorcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_SetMainHero_CSC::errorcode() const {
  // @@protoc_insertion_point(field_get:hero.MSG_SetMainHero_CSC.errorcode)
  return _internal_errorcode();
}
inline void MSG_SetMainHero_CSC::_internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  errorcode_ = value;
}
inline void MSG_SetMainHero_CSC::set_errorcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:hero.MSG_SetMainHero_CSC.errorcode)
}

// -------------------------------------------------------------------

// HeroScore

// optional uint64 thisid = 1;
inline bool HeroScore::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool HeroScore::has_thisid() const {
  return _internal_has_thisid();
}
inline void HeroScore::clear_thisid() {
  thisid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HeroScore::_internal_thisid() const {
  return thisid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HeroScore::thisid() const {
  // @@protoc_insertion_point(field_get:hero.HeroScore.thisid)
  return _internal_thisid();
}
inline void HeroScore::_internal_set_thisid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_ = value;
}
inline void HeroScore::set_thisid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:hero.HeroScore.thisid)
}

// optional uint32 score = 2;
inline bool HeroScore::_internal_has_score() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool HeroScore::has_score() const {
  return _internal_has_score();
}
inline void HeroScore::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroScore::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeroScore::score() const {
  // @@protoc_insertion_point(field_get:hero.HeroScore.score)
  return _internal_score();
}
inline void HeroScore::_internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  score_ = value;
}
inline void HeroScore::set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:hero.HeroScore.score)
}

// -------------------------------------------------------------------

// MSG_NotifyClientHeroScore_SC

// repeated .hero.HeroScore scores = 1;
inline int MSG_NotifyClientHeroScore_SC::_internal_scores_size() const {
  return scores_.size();
}
inline int MSG_NotifyClientHeroScore_SC::scores_size() const {
  return _internal_scores_size();
}
inline void MSG_NotifyClientHeroScore_SC::clear_scores() {
  scores_.Clear();
}
inline ::hero::HeroScore* MSG_NotifyClientHeroScore_SC::mutable_scores(int index) {
  // @@protoc_insertion_point(field_mutable:hero.MSG_NotifyClientHeroScore_SC.scores)
  return scores_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::HeroScore >*
MSG_NotifyClientHeroScore_SC::mutable_scores() {
  // @@protoc_insertion_point(field_mutable_list:hero.MSG_NotifyClientHeroScore_SC.scores)
  return &scores_;
}
inline const ::hero::HeroScore& MSG_NotifyClientHeroScore_SC::_internal_scores(int index) const {
  return scores_.Get(index);
}
inline const ::hero::HeroScore& MSG_NotifyClientHeroScore_SC::scores(int index) const {
  // @@protoc_insertion_point(field_get:hero.MSG_NotifyClientHeroScore_SC.scores)
  return _internal_scores(index);
}
inline ::hero::HeroScore* MSG_NotifyClientHeroScore_SC::_internal_add_scores() {
  return scores_.Add();
}
inline ::hero::HeroScore* MSG_NotifyClientHeroScore_SC::add_scores() {
  // @@protoc_insertion_point(field_add:hero.MSG_NotifyClientHeroScore_SC.scores)
  return _internal_add_scores();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::HeroScore >&
MSG_NotifyClientHeroScore_SC::scores() const {
  // @@protoc_insertion_point(field_list:hero.MSG_NotifyClientHeroScore_SC.scores)
  return scores_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace hero

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::hero::DNAPage> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hero::DNAPage>() {
  return ::hero::DNAPage_descriptor();
}
template <> struct is_proto_enum< ::hero::DNASlotType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hero::DNASlotType>() {
  return ::hero::DNASlotType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_hero_2eproto
