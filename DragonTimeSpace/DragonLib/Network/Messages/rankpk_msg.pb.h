// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rankpk_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_rankpk_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_rankpk_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_enum.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_rankpk_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_rankpk_5fmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[39]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rankpk_5fmsg_2eproto;
namespace rankpk_msg {
class MSG_GoToBattle_SC;
class MSG_GoToBattle_SCDefaultTypeInternal;
extern MSG_GoToBattle_SCDefaultTypeInternal _MSG_GoToBattle_SC_default_instance_;
class MSG_RankPkReqPrepare_CS;
class MSG_RankPkReqPrepare_CSDefaultTypeInternal;
extern MSG_RankPkReqPrepare_CSDefaultTypeInternal _MSG_RankPkReqPrepare_CS_default_instance_;
class MSG_RankPkReqPrepare_SC;
class MSG_RankPkReqPrepare_SCDefaultTypeInternal;
extern MSG_RankPkReqPrepare_SCDefaultTypeInternal _MSG_RankPkReqPrepare_SC_default_instance_;
class MSG_ReqChoosePrepared_CS;
class MSG_ReqChoosePrepared_CSDefaultTypeInternal;
extern MSG_ReqChoosePrepared_CSDefaultTypeInternal _MSG_ReqChoosePrepared_CS_default_instance_;
class MSG_ReqGetSeasonRewards_CS;
class MSG_ReqGetSeasonRewards_CSDefaultTypeInternal;
extern MSG_ReqGetSeasonRewards_CSDefaultTypeInternal _MSG_ReqGetSeasonRewards_CS_default_instance_;
class MSG_ReqRankPKCurStage_CS;
class MSG_ReqRankPKCurStage_CSDefaultTypeInternal;
extern MSG_ReqRankPKCurStage_CSDefaultTypeInternal _MSG_ReqRankPKCurStage_CS_default_instance_;
class MSG_ReqRankPKList_CS;
class MSG_ReqRankPKList_CSDefaultTypeInternal;
extern MSG_ReqRankPKList_CSDefaultTypeInternal _MSG_ReqRankPKList_CS_default_instance_;
class MSG_ReqRewardsEveryday_CS;
class MSG_ReqRewardsEveryday_CSDefaultTypeInternal;
extern MSG_ReqRewardsEveryday_CSDefaultTypeInternal _MSG_ReqRewardsEveryday_CS_default_instance_;
class MSG_Req_CancelMatch_CS;
class MSG_Req_CancelMatch_CSDefaultTypeInternal;
extern MSG_Req_CancelMatch_CSDefaultTypeInternal _MSG_Req_CancelMatch_CS_default_instance_;
class MSG_Req_GotoBattle_CS;
class MSG_Req_GotoBattle_CSDefaultTypeInternal;
extern MSG_Req_GotoBattle_CSDefaultTypeInternal _MSG_Req_GotoBattle_CS_default_instance_;
class MSG_Req_MatchMemberInfo_CS;
class MSG_Req_MatchMemberInfo_CSDefaultTypeInternal;
extern MSG_Req_MatchMemberInfo_CSDefaultTypeInternal _MSG_Req_MatchMemberInfo_CS_default_instance_;
class MSG_Req_StartMatch_CS;
class MSG_Req_StartMatch_CSDefaultTypeInternal;
extern MSG_Req_StartMatch_CSDefaultTypeInternal _MSG_Req_StartMatch_CS_default_instance_;
class MSG_RetChoosePrepared_SC;
class MSG_RetChoosePrepared_SCDefaultTypeInternal;
extern MSG_RetChoosePrepared_SCDefaultTypeInternal _MSG_RetChoosePrepared_SC_default_instance_;
class MSG_RetFightCountDown_SC;
class MSG_RetFightCountDown_SCDefaultTypeInternal;
extern MSG_RetFightCountDown_SCDefaultTypeInternal _MSG_RetFightCountDown_SC_default_instance_;
class MSG_RetFightFinish_SC;
class MSG_RetFightFinish_SCDefaultTypeInternal;
extern MSG_RetFightFinish_SCDefaultTypeInternal _MSG_RetFightFinish_SC_default_instance_;
class MSG_RetGetSeasonRewards_SC;
class MSG_RetGetSeasonRewards_SCDefaultTypeInternal;
extern MSG_RetGetSeasonRewards_SCDefaultTypeInternal _MSG_RetGetSeasonRewards_SC_default_instance_;
class MSG_RetMemPkPrepared_SC;
class MSG_RetMemPkPrepared_SCDefaultTypeInternal;
extern MSG_RetMemPkPrepared_SCDefaultTypeInternal _MSG_RetMemPkPrepared_SC_default_instance_;
class MSG_RetPKGeneralConfig_SC;
class MSG_RetPKGeneralConfig_SCDefaultTypeInternal;
extern MSG_RetPKGeneralConfig_SCDefaultTypeInternal _MSG_RetPKGeneralConfig_SC_default_instance_;
class MSG_RetPreparedNum_SC;
class MSG_RetPreparedNum_SCDefaultTypeInternal;
extern MSG_RetPreparedNum_SCDefaultTypeInternal _MSG_RetPreparedNum_SC_default_instance_;
class MSG_RetRankPKCurStage_SC;
class MSG_RetRankPKCurStage_SCDefaultTypeInternal;
extern MSG_RetRankPKCurStage_SCDefaultTypeInternal _MSG_RetRankPKCurStage_SC_default_instance_;
class MSG_RetRankPKHeroHistory_SC;
class MSG_RetRankPKHeroHistory_SCDefaultTypeInternal;
extern MSG_RetRankPKHeroHistory_SCDefaultTypeInternal _MSG_RetRankPKHeroHistory_SC_default_instance_;
class MSG_RetRankPKList_SC;
class MSG_RetRankPKList_SCDefaultTypeInternal;
extern MSG_RetRankPKList_SCDefaultTypeInternal _MSG_RetRankPKList_SC_default_instance_;
class MSG_RetRewardsEveryday_SC;
class MSG_RetRewardsEveryday_SCDefaultTypeInternal;
extern MSG_RetRewardsEveryday_SCDefaultTypeInternal _MSG_RetRewardsEveryday_SC_default_instance_;
class MSG_RetSpeedupFight_SC;
class MSG_RetSpeedupFight_SCDefaultTypeInternal;
extern MSG_RetSpeedupFight_SCDefaultTypeInternal _MSG_RetSpeedupFight_SC_default_instance_;
class MSG_RetStartFight_SC;
class MSG_RetStartFight_SCDefaultTypeInternal;
extern MSG_RetStartFight_SCDefaultTypeInternal _MSG_RetStartFight_SC_default_instance_;
class MSG_RetStartPrepare_SC;
class MSG_RetStartPrepare_SCDefaultTypeInternal;
extern MSG_RetStartPrepare_SCDefaultTypeInternal _MSG_RetStartPrepare_SC_default_instance_;
class MSG_RetTeamCurScore_SC;
class MSG_RetTeamCurScore_SCDefaultTypeInternal;
extern MSG_RetTeamCurScore_SCDefaultTypeInternal _MSG_RetTeamCurScore_SC_default_instance_;
class MSG_RetTeamLeftMemSize_SC;
class MSG_RetTeamLeftMemSize_SCDefaultTypeInternal;
extern MSG_RetTeamLeftMemSize_SCDefaultTypeInternal _MSG_RetTeamLeftMemSize_SC_default_instance_;
class MSG_RetUserRankStar_SC;
class MSG_RetUserRankStar_SCDefaultTypeInternal;
extern MSG_RetUserRankStar_SCDefaultTypeInternal _MSG_RetUserRankStar_SC_default_instance_;
class MSG_Ret_CancelMatch_SC;
class MSG_Ret_CancelMatch_SCDefaultTypeInternal;
extern MSG_Ret_CancelMatch_SCDefaultTypeInternal _MSG_Ret_CancelMatch_SC_default_instance_;
class MSG_Ret_MatchMemberInfo_SC;
class MSG_Ret_MatchMemberInfo_SCDefaultTypeInternal;
extern MSG_Ret_MatchMemberInfo_SCDefaultTypeInternal _MSG_Ret_MatchMemberInfo_SC_default_instance_;
class MSG_Ret_MatchResult_SC;
class MSG_Ret_MatchResult_SCDefaultTypeInternal;
extern MSG_Ret_MatchResult_SCDefaultTypeInternal _MSG_Ret_MatchResult_SC_default_instance_;
class MSG_Ret_StartMatch_SC;
class MSG_Ret_StartMatch_SCDefaultTypeInternal;
extern MSG_Ret_StartMatch_SCDefaultTypeInternal _MSG_Ret_StartMatch_SC_default_instance_;
class PkRewards;
class PkRewardsDefaultTypeInternal;
extern PkRewardsDefaultTypeInternal _PkRewards_default_instance_;
class RankPKHero;
class RankPKHeroDefaultTypeInternal;
extern RankPKHeroDefaultTypeInternal _RankPKHero_default_instance_;
class RankPKListItem;
class RankPKListItemDefaultTypeInternal;
extern RankPKListItemDefaultTypeInternal _RankPKListItem_default_instance_;
class RankPKResult;
class RankPKResultDefaultTypeInternal;
extern RankPKResultDefaultTypeInternal _RankPKResult_default_instance_;
class RewardsNumber;
class RewardsNumberDefaultTypeInternal;
extern RewardsNumberDefaultTypeInternal _RewardsNumber_default_instance_;
class UserRankPkInfo;
class UserRankPkInfoDefaultTypeInternal;
extern UserRankPkInfoDefaultTypeInternal _UserRankPkInfo_default_instance_;
}  // namespace rankpk_msg
PROTOBUF_NAMESPACE_OPEN
template<> ::rankpk_msg::MSG_GoToBattle_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_GoToBattle_SC>(Arena*);
template<> ::rankpk_msg::MSG_RankPkReqPrepare_CS* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RankPkReqPrepare_CS>(Arena*);
template<> ::rankpk_msg::MSG_RankPkReqPrepare_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RankPkReqPrepare_SC>(Arena*);
template<> ::rankpk_msg::MSG_ReqChoosePrepared_CS* Arena::CreateMaybeMessage<::rankpk_msg::MSG_ReqChoosePrepared_CS>(Arena*);
template<> ::rankpk_msg::MSG_ReqGetSeasonRewards_CS* Arena::CreateMaybeMessage<::rankpk_msg::MSG_ReqGetSeasonRewards_CS>(Arena*);
template<> ::rankpk_msg::MSG_ReqRankPKCurStage_CS* Arena::CreateMaybeMessage<::rankpk_msg::MSG_ReqRankPKCurStage_CS>(Arena*);
template<> ::rankpk_msg::MSG_ReqRankPKList_CS* Arena::CreateMaybeMessage<::rankpk_msg::MSG_ReqRankPKList_CS>(Arena*);
template<> ::rankpk_msg::MSG_ReqRewardsEveryday_CS* Arena::CreateMaybeMessage<::rankpk_msg::MSG_ReqRewardsEveryday_CS>(Arena*);
template<> ::rankpk_msg::MSG_Req_CancelMatch_CS* Arena::CreateMaybeMessage<::rankpk_msg::MSG_Req_CancelMatch_CS>(Arena*);
template<> ::rankpk_msg::MSG_Req_GotoBattle_CS* Arena::CreateMaybeMessage<::rankpk_msg::MSG_Req_GotoBattle_CS>(Arena*);
template<> ::rankpk_msg::MSG_Req_MatchMemberInfo_CS* Arena::CreateMaybeMessage<::rankpk_msg::MSG_Req_MatchMemberInfo_CS>(Arena*);
template<> ::rankpk_msg::MSG_Req_StartMatch_CS* Arena::CreateMaybeMessage<::rankpk_msg::MSG_Req_StartMatch_CS>(Arena*);
template<> ::rankpk_msg::MSG_RetChoosePrepared_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetChoosePrepared_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetFightCountDown_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetFightCountDown_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetFightFinish_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetFightFinish_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetGetSeasonRewards_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetGetSeasonRewards_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetMemPkPrepared_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetMemPkPrepared_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetPKGeneralConfig_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetPKGeneralConfig_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetPreparedNum_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetPreparedNum_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetRankPKCurStage_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetRankPKCurStage_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetRankPKHeroHistory_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetRankPKHeroHistory_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetRankPKList_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetRankPKList_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetRewardsEveryday_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetRewardsEveryday_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetSpeedupFight_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetSpeedupFight_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetStartFight_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetStartFight_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetStartPrepare_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetStartPrepare_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetTeamCurScore_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetTeamCurScore_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetTeamLeftMemSize_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetTeamLeftMemSize_SC>(Arena*);
template<> ::rankpk_msg::MSG_RetUserRankStar_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_RetUserRankStar_SC>(Arena*);
template<> ::rankpk_msg::MSG_Ret_CancelMatch_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_Ret_CancelMatch_SC>(Arena*);
template<> ::rankpk_msg::MSG_Ret_MatchMemberInfo_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_Ret_MatchMemberInfo_SC>(Arena*);
template<> ::rankpk_msg::MSG_Ret_MatchResult_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_Ret_MatchResult_SC>(Arena*);
template<> ::rankpk_msg::MSG_Ret_StartMatch_SC* Arena::CreateMaybeMessage<::rankpk_msg::MSG_Ret_StartMatch_SC>(Arena*);
template<> ::rankpk_msg::PkRewards* Arena::CreateMaybeMessage<::rankpk_msg::PkRewards>(Arena*);
template<> ::rankpk_msg::RankPKHero* Arena::CreateMaybeMessage<::rankpk_msg::RankPKHero>(Arena*);
template<> ::rankpk_msg::RankPKListItem* Arena::CreateMaybeMessage<::rankpk_msg::RankPKListItem>(Arena*);
template<> ::rankpk_msg::RankPKResult* Arena::CreateMaybeMessage<::rankpk_msg::RankPKResult>(Arena*);
template<> ::rankpk_msg::RewardsNumber* Arena::CreateMaybeMessage<::rankpk_msg::RewardsNumber>(Arena*);
template<> ::rankpk_msg::UserRankPkInfo* Arena::CreateMaybeMessage<::rankpk_msg::UserRankPkInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace rankpk_msg {

enum RankPKListType : int {
  RankPKListType_All = 0,
  RankPKListType_Friend = 1
};
bool RankPKListType_IsValid(int value);
constexpr RankPKListType RankPKListType_MIN = RankPKListType_All;
constexpr RankPKListType RankPKListType_MAX = RankPKListType_Friend;
constexpr int RankPKListType_ARRAYSIZE = RankPKListType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RankPKListType_descriptor();
template<typename T>
inline const std::string& RankPKListType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RankPKListType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RankPKListType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RankPKListType_descriptor(), enum_t_value);
}
inline bool RankPKListType_Parse(
    const std::string& name, RankPKListType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RankPKListType>(
    RankPKListType_descriptor(), name, value);
}
// ===================================================================

class UserRankPkInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.UserRankPkInfo) */ {
 public:
  UserRankPkInfo();
  virtual ~UserRankPkInfo();

  UserRankPkInfo(const UserRankPkInfo& from);
  UserRankPkInfo(UserRankPkInfo&& from) noexcept
    : UserRankPkInfo() {
    *this = ::std::move(from);
  }

  inline UserRankPkInfo& operator=(const UserRankPkInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserRankPkInfo& operator=(UserRankPkInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserRankPkInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserRankPkInfo* internal_default_instance() {
    return reinterpret_cast<const UserRankPkInfo*>(
               &_UserRankPkInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UserRankPkInfo& a, UserRankPkInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(UserRankPkInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserRankPkInfo* New() const final {
    return CreateMaybeMessage<UserRankPkInfo>(nullptr);
  }

  UserRankPkInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserRankPkInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserRankPkInfo& from);
  void MergeFrom(const UserRankPkInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserRankPkInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.UserRankPkInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kCharidFieldNumber = 1,
    kHeroidFieldNumber = 3,
    kFightFieldNumber = 4,
    kRankLevelFieldNumber = 5,
    kRankStarFieldNumber = 6,
    kRankFieldNumber = 7,
    kHideScoreFieldNumber = 8,
    kAllBattlesFieldNumber = 9,
    kSuccessBattlesFieldNumber = 10,
    kBattleScoreFieldNumber = 11,
    kSeansonBattlesFieldNumber = 12,
    kBestRankLevelFieldNumber = 13,
    kBestRankFieldNumber = 14,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint32 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint32 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 heroid = 3;
  bool has_heroid() const;
  private:
  bool _internal_has_heroid() const;
  public:
  void clear_heroid();
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid() const;
  void set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_heroid() const;
  void _internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 fight = 4;
  bool has_fight() const;
  private:
  bool _internal_has_fight() const;
  public:
  void clear_fight();
  ::PROTOBUF_NAMESPACE_ID::uint32 fight() const;
  void set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fight() const;
  void _internal_set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rank_level = 5;
  bool has_rank_level() const;
  private:
  bool _internal_has_rank_level() const;
  public:
  void clear_rank_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 rank_level() const;
  void set_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rank_level() const;
  void _internal_set_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rank_star = 6;
  bool has_rank_star() const;
  private:
  bool _internal_has_rank_star() const;
  public:
  void clear_rank_star();
  ::PROTOBUF_NAMESPACE_ID::uint32 rank_star() const;
  void set_rank_star(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rank_star() const;
  void _internal_set_rank_star(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rank = 7;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  ::PROTOBUF_NAMESPACE_ID::uint32 rank() const;
  void set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rank() const;
  void _internal_set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hide_score = 8;
  bool has_hide_score() const;
  private:
  bool _internal_has_hide_score() const;
  public:
  void clear_hide_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 hide_score() const;
  void set_hide_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hide_score() const;
  void _internal_set_hide_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 all_battles = 9;
  bool has_all_battles() const;
  private:
  bool _internal_has_all_battles() const;
  public:
  void clear_all_battles();
  ::PROTOBUF_NAMESPACE_ID::uint32 all_battles() const;
  void set_all_battles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_all_battles() const;
  void _internal_set_all_battles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 success_battles = 10;
  bool has_success_battles() const;
  private:
  bool _internal_has_success_battles() const;
  public:
  void clear_success_battles();
  ::PROTOBUF_NAMESPACE_ID::uint32 success_battles() const;
  void set_success_battles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_success_battles() const;
  void _internal_set_success_battles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 battle_score = 11;
  bool has_battle_score() const;
  private:
  bool _internal_has_battle_score() const;
  public:
  void clear_battle_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 battle_score() const;
  void set_battle_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_battle_score() const;
  void _internal_set_battle_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 seanson_battles = 12;
  bool has_seanson_battles() const;
  private:
  bool _internal_has_seanson_battles() const;
  public:
  void clear_seanson_battles();
  ::PROTOBUF_NAMESPACE_ID::uint32 seanson_battles() const;
  void set_seanson_battles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seanson_battles() const;
  void _internal_set_seanson_battles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 best_rank_level = 13;
  bool has_best_rank_level() const;
  private:
  bool _internal_has_best_rank_level() const;
  public:
  void clear_best_rank_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 best_rank_level() const;
  void set_best_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_best_rank_level() const;
  void _internal_set_best_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 best_rank = 14;
  bool has_best_rank() const;
  private:
  bool _internal_has_best_rank() const;
  public:
  void clear_best_rank();
  ::PROTOBUF_NAMESPACE_ID::uint32 best_rank() const;
  void set_best_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_best_rank() const;
  void _internal_set_best_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.UserRankPkInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fight_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rank_level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rank_star_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rank_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hide_score_;
  ::PROTOBUF_NAMESPACE_ID::uint32 all_battles_;
  ::PROTOBUF_NAMESPACE_ID::uint32 success_battles_;
  ::PROTOBUF_NAMESPACE_ID::uint32 battle_score_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seanson_battles_;
  ::PROTOBUF_NAMESPACE_ID::uint32 best_rank_level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 best_rank_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_MatchMemberInfo_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_Req_MatchMemberInfo_CS) */ {
 public:
  MSG_Req_MatchMemberInfo_CS();
  virtual ~MSG_Req_MatchMemberInfo_CS();

  MSG_Req_MatchMemberInfo_CS(const MSG_Req_MatchMemberInfo_CS& from);
  MSG_Req_MatchMemberInfo_CS(MSG_Req_MatchMemberInfo_CS&& from) noexcept
    : MSG_Req_MatchMemberInfo_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_MatchMemberInfo_CS& operator=(const MSG_Req_MatchMemberInfo_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_MatchMemberInfo_CS& operator=(MSG_Req_MatchMemberInfo_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_MatchMemberInfo_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_MatchMemberInfo_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_MatchMemberInfo_CS*>(
               &_MSG_Req_MatchMemberInfo_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MSG_Req_MatchMemberInfo_CS& a, MSG_Req_MatchMemberInfo_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_MatchMemberInfo_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_MatchMemberInfo_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_MatchMemberInfo_CS>(nullptr);
  }

  MSG_Req_MatchMemberInfo_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_MatchMemberInfo_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_MatchMemberInfo_CS& from);
  void MergeFrom(const MSG_Req_MatchMemberInfo_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_MatchMemberInfo_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_Req_MatchMemberInfo_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_Req_MatchMemberInfo_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MatchMemberInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_Ret_MatchMemberInfo_SC) */ {
 public:
  MSG_Ret_MatchMemberInfo_SC();
  virtual ~MSG_Ret_MatchMemberInfo_SC();

  MSG_Ret_MatchMemberInfo_SC(const MSG_Ret_MatchMemberInfo_SC& from);
  MSG_Ret_MatchMemberInfo_SC(MSG_Ret_MatchMemberInfo_SC&& from) noexcept
    : MSG_Ret_MatchMemberInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MatchMemberInfo_SC& operator=(const MSG_Ret_MatchMemberInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MatchMemberInfo_SC& operator=(MSG_Ret_MatchMemberInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MatchMemberInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MatchMemberInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MatchMemberInfo_SC*>(
               &_MSG_Ret_MatchMemberInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MSG_Ret_MatchMemberInfo_SC& a, MSG_Ret_MatchMemberInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MatchMemberInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MatchMemberInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MatchMemberInfo_SC>(nullptr);
  }

  MSG_Ret_MatchMemberInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MatchMemberInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MatchMemberInfo_SC& from);
  void MergeFrom(const MSG_Ret_MatchMemberInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MatchMemberInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_Ret_MatchMemberInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMembersFieldNumber = 1,
    kLeaderidFieldNumber = 2,
    kSeasonIdFieldNumber = 3,
    kStartTimeFieldNumber = 4,
    kEndTimeFieldNumber = 5,
    kLeftdaysFieldNumber = 6,
  };
  // repeated .rankpk_msg.UserRankPkInfo members = 1;
  int members_size() const;
  private:
  int _internal_members_size() const;
  public:
  void clear_members();
  ::rankpk_msg::UserRankPkInfo* mutable_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::UserRankPkInfo >*
      mutable_members();
  private:
  const ::rankpk_msg::UserRankPkInfo& _internal_members(int index) const;
  ::rankpk_msg::UserRankPkInfo* _internal_add_members();
  public:
  const ::rankpk_msg::UserRankPkInfo& members(int index) const;
  ::rankpk_msg::UserRankPkInfo* add_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::UserRankPkInfo >&
      members() const;

  // optional uint64 leaderid = 2;
  bool has_leaderid() const;
  private:
  bool _internal_has_leaderid() const;
  public:
  void clear_leaderid();
  ::PROTOBUF_NAMESPACE_ID::uint64 leaderid() const;
  void set_leaderid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_leaderid() const;
  void _internal_set_leaderid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 season_id = 3;
  bool has_season_id() const;
  private:
  bool _internal_has_season_id() const;
  public:
  void clear_season_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 season_id() const;
  void set_season_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_season_id() const;
  void _internal_set_season_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 start_time = 4;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_time() const;
  void set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_time() const;
  void _internal_set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 end_time = 5;
  bool has_end_time() const;
  private:
  bool _internal_has_end_time() const;
  public:
  void clear_end_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 end_time() const;
  void set_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_end_time() const;
  void _internal_set_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 leftdays = 6;
  bool has_leftdays() const;
  private:
  bool _internal_has_leftdays() const;
  public:
  void clear_leftdays();
  ::PROTOBUF_NAMESPACE_ID::uint32 leftdays() const;
  void set_leftdays(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_leftdays() const;
  void _internal_set_leftdays(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_Ret_MatchMemberInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::UserRankPkInfo > members_;
  ::PROTOBUF_NAMESPACE_ID::uint64 leaderid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 season_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 end_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 leftdays_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_StartMatch_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_Req_StartMatch_CS) */ {
 public:
  MSG_Req_StartMatch_CS();
  virtual ~MSG_Req_StartMatch_CS();

  MSG_Req_StartMatch_CS(const MSG_Req_StartMatch_CS& from);
  MSG_Req_StartMatch_CS(MSG_Req_StartMatch_CS&& from) noexcept
    : MSG_Req_StartMatch_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_StartMatch_CS& operator=(const MSG_Req_StartMatch_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_StartMatch_CS& operator=(MSG_Req_StartMatch_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_StartMatch_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_StartMatch_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_StartMatch_CS*>(
               &_MSG_Req_StartMatch_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MSG_Req_StartMatch_CS& a, MSG_Req_StartMatch_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_StartMatch_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_StartMatch_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_StartMatch_CS>(nullptr);
  }

  MSG_Req_StartMatch_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_StartMatch_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_StartMatch_CS& from);
  void MergeFrom(const MSG_Req_StartMatch_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_StartMatch_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_Req_StartMatch_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_Req_StartMatch_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_StartMatch_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_Ret_StartMatch_SC) */ {
 public:
  MSG_Ret_StartMatch_SC();
  virtual ~MSG_Ret_StartMatch_SC();

  MSG_Ret_StartMatch_SC(const MSG_Ret_StartMatch_SC& from);
  MSG_Ret_StartMatch_SC(MSG_Ret_StartMatch_SC&& from) noexcept
    : MSG_Ret_StartMatch_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_StartMatch_SC& operator=(const MSG_Ret_StartMatch_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_StartMatch_SC& operator=(MSG_Ret_StartMatch_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_StartMatch_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_StartMatch_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_StartMatch_SC*>(
               &_MSG_Ret_StartMatch_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MSG_Ret_StartMatch_SC& a, MSG_Ret_StartMatch_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_StartMatch_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_StartMatch_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_StartMatch_SC>(nullptr);
  }

  MSG_Ret_StartMatch_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_StartMatch_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_StartMatch_SC& from);
  void MergeFrom(const MSG_Ret_StartMatch_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_StartMatch_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_Ret_StartMatch_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_Ret_StartMatch_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_CancelMatch_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_Req_CancelMatch_CS) */ {
 public:
  MSG_Req_CancelMatch_CS();
  virtual ~MSG_Req_CancelMatch_CS();

  MSG_Req_CancelMatch_CS(const MSG_Req_CancelMatch_CS& from);
  MSG_Req_CancelMatch_CS(MSG_Req_CancelMatch_CS&& from) noexcept
    : MSG_Req_CancelMatch_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_CancelMatch_CS& operator=(const MSG_Req_CancelMatch_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_CancelMatch_CS& operator=(MSG_Req_CancelMatch_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_CancelMatch_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_CancelMatch_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_CancelMatch_CS*>(
               &_MSG_Req_CancelMatch_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MSG_Req_CancelMatch_CS& a, MSG_Req_CancelMatch_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_CancelMatch_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_CancelMatch_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_CancelMatch_CS>(nullptr);
  }

  MSG_Req_CancelMatch_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_CancelMatch_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_CancelMatch_CS& from);
  void MergeFrom(const MSG_Req_CancelMatch_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_CancelMatch_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_Req_CancelMatch_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_Req_CancelMatch_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_CancelMatch_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_Ret_CancelMatch_SC) */ {
 public:
  MSG_Ret_CancelMatch_SC();
  virtual ~MSG_Ret_CancelMatch_SC();

  MSG_Ret_CancelMatch_SC(const MSG_Ret_CancelMatch_SC& from);
  MSG_Ret_CancelMatch_SC(MSG_Ret_CancelMatch_SC&& from) noexcept
    : MSG_Ret_CancelMatch_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_CancelMatch_SC& operator=(const MSG_Ret_CancelMatch_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_CancelMatch_SC& operator=(MSG_Ret_CancelMatch_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_CancelMatch_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_CancelMatch_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_CancelMatch_SC*>(
               &_MSG_Ret_CancelMatch_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MSG_Ret_CancelMatch_SC& a, MSG_Ret_CancelMatch_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_CancelMatch_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_CancelMatch_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_CancelMatch_SC>(nullptr);
  }

  MSG_Ret_CancelMatch_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_CancelMatch_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_CancelMatch_SC& from);
  void MergeFrom(const MSG_Ret_CancelMatch_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_CancelMatch_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_Ret_CancelMatch_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_Ret_CancelMatch_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RankPkReqPrepare_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RankPkReqPrepare_CS) */ {
 public:
  MSG_RankPkReqPrepare_CS();
  virtual ~MSG_RankPkReqPrepare_CS();

  MSG_RankPkReqPrepare_CS(const MSG_RankPkReqPrepare_CS& from);
  MSG_RankPkReqPrepare_CS(MSG_RankPkReqPrepare_CS&& from) noexcept
    : MSG_RankPkReqPrepare_CS() {
    *this = ::std::move(from);
  }

  inline MSG_RankPkReqPrepare_CS& operator=(const MSG_RankPkReqPrepare_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RankPkReqPrepare_CS& operator=(MSG_RankPkReqPrepare_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RankPkReqPrepare_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RankPkReqPrepare_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_RankPkReqPrepare_CS*>(
               &_MSG_RankPkReqPrepare_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_RankPkReqPrepare_CS& a, MSG_RankPkReqPrepare_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RankPkReqPrepare_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RankPkReqPrepare_CS* New() const final {
    return CreateMaybeMessage<MSG_RankPkReqPrepare_CS>(nullptr);
  }

  MSG_RankPkReqPrepare_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RankPkReqPrepare_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RankPkReqPrepare_CS& from);
  void MergeFrom(const MSG_RankPkReqPrepare_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RankPkReqPrepare_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RankPkReqPrepare_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RankPkReqPrepare_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RankPkReqPrepare_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RankPkReqPrepare_SC) */ {
 public:
  MSG_RankPkReqPrepare_SC();
  virtual ~MSG_RankPkReqPrepare_SC();

  MSG_RankPkReqPrepare_SC(const MSG_RankPkReqPrepare_SC& from);
  MSG_RankPkReqPrepare_SC(MSG_RankPkReqPrepare_SC&& from) noexcept
    : MSG_RankPkReqPrepare_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RankPkReqPrepare_SC& operator=(const MSG_RankPkReqPrepare_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RankPkReqPrepare_SC& operator=(MSG_RankPkReqPrepare_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RankPkReqPrepare_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RankPkReqPrepare_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RankPkReqPrepare_SC*>(
               &_MSG_RankPkReqPrepare_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_RankPkReqPrepare_SC& a, MSG_RankPkReqPrepare_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RankPkReqPrepare_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RankPkReqPrepare_SC* New() const final {
    return CreateMaybeMessage<MSG_RankPkReqPrepare_SC>(nullptr);
  }

  MSG_RankPkReqPrepare_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RankPkReqPrepare_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RankPkReqPrepare_SC& from);
  void MergeFrom(const MSG_RankPkReqPrepare_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RankPkReqPrepare_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RankPkReqPrepare_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadystateFieldNumber = 1,
    kReadynumFieldNumber = 2,
    kTotalnumFieldNumber = 3,
    kLefttimeFieldNumber = 4,
    kEnemyreadynumFieldNumber = 5,
    kEnemytotalnumFieldNumber = 6,
  };
  // required uint32 readystate = 1;
  bool has_readystate() const;
  private:
  bool _internal_has_readystate() const;
  public:
  void clear_readystate();
  ::PROTOBUF_NAMESPACE_ID::uint32 readystate() const;
  void set_readystate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_readystate() const;
  void _internal_set_readystate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 readynum = 2;
  bool has_readynum() const;
  private:
  bool _internal_has_readynum() const;
  public:
  void clear_readynum();
  ::PROTOBUF_NAMESPACE_ID::uint32 readynum() const;
  void set_readynum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_readynum() const;
  void _internal_set_readynum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 totalnum = 3;
  bool has_totalnum() const;
  private:
  bool _internal_has_totalnum() const;
  public:
  void clear_totalnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 totalnum() const;
  void set_totalnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_totalnum() const;
  void _internal_set_totalnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lefttime = 4;
  bool has_lefttime() const;
  private:
  bool _internal_has_lefttime() const;
  public:
  void clear_lefttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 lefttime() const;
  void set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lefttime() const;
  void _internal_set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 enemyreadynum = 5;
  bool has_enemyreadynum() const;
  private:
  bool _internal_has_enemyreadynum() const;
  public:
  void clear_enemyreadynum();
  ::PROTOBUF_NAMESPACE_ID::uint32 enemyreadynum() const;
  void set_enemyreadynum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_enemyreadynum() const;
  void _internal_set_enemyreadynum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 enemytotalnum = 6;
  bool has_enemytotalnum() const;
  private:
  bool _internal_has_enemytotalnum() const;
  public:
  void clear_enemytotalnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 enemytotalnum() const;
  void set_enemytotalnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_enemytotalnum() const;
  void _internal_set_enemytotalnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RankPkReqPrepare_SC)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 readystate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 readynum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 totalnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lefttime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 enemyreadynum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 enemytotalnum_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_GoToBattle_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_GoToBattle_SC) */ {
 public:
  MSG_GoToBattle_SC();
  virtual ~MSG_GoToBattle_SC();

  MSG_GoToBattle_SC(const MSG_GoToBattle_SC& from);
  MSG_GoToBattle_SC(MSG_GoToBattle_SC&& from) noexcept
    : MSG_GoToBattle_SC() {
    *this = ::std::move(from);
  }

  inline MSG_GoToBattle_SC& operator=(const MSG_GoToBattle_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_GoToBattle_SC& operator=(MSG_GoToBattle_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_GoToBattle_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_GoToBattle_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_GoToBattle_SC*>(
               &_MSG_GoToBattle_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_GoToBattle_SC& a, MSG_GoToBattle_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_GoToBattle_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_GoToBattle_SC* New() const final {
    return CreateMaybeMessage<MSG_GoToBattle_SC>(nullptr);
  }

  MSG_GoToBattle_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_GoToBattle_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_GoToBattle_SC& from);
  void MergeFrom(const MSG_GoToBattle_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_GoToBattle_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_GoToBattle_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_GoToBattle_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MatchResult_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_Ret_MatchResult_SC) */ {
 public:
  MSG_Ret_MatchResult_SC();
  virtual ~MSG_Ret_MatchResult_SC();

  MSG_Ret_MatchResult_SC(const MSG_Ret_MatchResult_SC& from);
  MSG_Ret_MatchResult_SC(MSG_Ret_MatchResult_SC&& from) noexcept
    : MSG_Ret_MatchResult_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MatchResult_SC& operator=(const MSG_Ret_MatchResult_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MatchResult_SC& operator=(MSG_Ret_MatchResult_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MatchResult_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MatchResult_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MatchResult_SC*>(
               &_MSG_Ret_MatchResult_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MSG_Ret_MatchResult_SC& a, MSG_Ret_MatchResult_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MatchResult_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MatchResult_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MatchResult_SC>(nullptr);
  }

  MSG_Ret_MatchResult_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MatchResult_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MatchResult_SC& from);
  void MergeFrom(const MSG_Ret_MatchResult_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MatchResult_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_Ret_MatchResult_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
    kLefttimeFieldNumber = 2,
    kTotalnumFieldNumber = 3,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lefttime = 2;
  bool has_lefttime() const;
  private:
  bool _internal_has_lefttime() const;
  public:
  void clear_lefttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 lefttime() const;
  void set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lefttime() const;
  void _internal_set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 totalnum = 3;
  bool has_totalnum() const;
  private:
  bool _internal_has_totalnum() const;
  public:
  void clear_totalnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 totalnum() const;
  void set_totalnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_totalnum() const;
  void _internal_set_totalnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_Ret_MatchResult_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lefttime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 totalnum_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GotoBattle_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_Req_GotoBattle_CS) */ {
 public:
  MSG_Req_GotoBattle_CS();
  virtual ~MSG_Req_GotoBattle_CS();

  MSG_Req_GotoBattle_CS(const MSG_Req_GotoBattle_CS& from);
  MSG_Req_GotoBattle_CS(MSG_Req_GotoBattle_CS&& from) noexcept
    : MSG_Req_GotoBattle_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GotoBattle_CS& operator=(const MSG_Req_GotoBattle_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GotoBattle_CS& operator=(MSG_Req_GotoBattle_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GotoBattle_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GotoBattle_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GotoBattle_CS*>(
               &_MSG_Req_GotoBattle_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_Req_GotoBattle_CS& a, MSG_Req_GotoBattle_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GotoBattle_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GotoBattle_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GotoBattle_CS>(nullptr);
  }

  MSG_Req_GotoBattle_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GotoBattle_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GotoBattle_CS& from);
  void MergeFrom(const MSG_Req_GotoBattle_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GotoBattle_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_Req_GotoBattle_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_Req_GotoBattle_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetStartPrepare_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetStartPrepare_SC) */ {
 public:
  MSG_RetStartPrepare_SC();
  virtual ~MSG_RetStartPrepare_SC();

  MSG_RetStartPrepare_SC(const MSG_RetStartPrepare_SC& from);
  MSG_RetStartPrepare_SC(MSG_RetStartPrepare_SC&& from) noexcept
    : MSG_RetStartPrepare_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetStartPrepare_SC& operator=(const MSG_RetStartPrepare_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetStartPrepare_SC& operator=(MSG_RetStartPrepare_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetStartPrepare_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetStartPrepare_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetStartPrepare_SC*>(
               &_MSG_RetStartPrepare_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_RetStartPrepare_SC& a, MSG_RetStartPrepare_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetStartPrepare_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetStartPrepare_SC* New() const final {
    return CreateMaybeMessage<MSG_RetStartPrepare_SC>(nullptr);
  }

  MSG_RetStartPrepare_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetStartPrepare_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetStartPrepare_SC& from);
  void MergeFrom(const MSG_RetStartPrepare_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetStartPrepare_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetStartPrepare_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDurationFieldNumber = 1,
  };
  // optional uint32 duration = 1;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetStartPrepare_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqChoosePrepared_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_ReqChoosePrepared_CS) */ {
 public:
  MSG_ReqChoosePrepared_CS();
  virtual ~MSG_ReqChoosePrepared_CS();

  MSG_ReqChoosePrepared_CS(const MSG_ReqChoosePrepared_CS& from);
  MSG_ReqChoosePrepared_CS(MSG_ReqChoosePrepared_CS&& from) noexcept
    : MSG_ReqChoosePrepared_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqChoosePrepared_CS& operator=(const MSG_ReqChoosePrepared_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqChoosePrepared_CS& operator=(MSG_ReqChoosePrepared_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqChoosePrepared_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqChoosePrepared_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqChoosePrepared_CS*>(
               &_MSG_ReqChoosePrepared_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_ReqChoosePrepared_CS& a, MSG_ReqChoosePrepared_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqChoosePrepared_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqChoosePrepared_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqChoosePrepared_CS>(nullptr);
  }

  MSG_ReqChoosePrepared_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqChoosePrepared_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqChoosePrepared_CS& from);
  void MergeFrom(const MSG_ReqChoosePrepared_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqChoosePrepared_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_ReqChoosePrepared_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_ReqChoosePrepared_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetChoosePrepared_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetChoosePrepared_SC) */ {
 public:
  MSG_RetChoosePrepared_SC();
  virtual ~MSG_RetChoosePrepared_SC();

  MSG_RetChoosePrepared_SC(const MSG_RetChoosePrepared_SC& from);
  MSG_RetChoosePrepared_SC(MSG_RetChoosePrepared_SC&& from) noexcept
    : MSG_RetChoosePrepared_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetChoosePrepared_SC& operator=(const MSG_RetChoosePrepared_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetChoosePrepared_SC& operator=(MSG_RetChoosePrepared_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetChoosePrepared_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetChoosePrepared_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetChoosePrepared_SC*>(
               &_MSG_RetChoosePrepared_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MSG_RetChoosePrepared_SC& a, MSG_RetChoosePrepared_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetChoosePrepared_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetChoosePrepared_SC* New() const final {
    return CreateMaybeMessage<MSG_RetChoosePrepared_SC>(nullptr);
  }

  MSG_RetChoosePrepared_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetChoosePrepared_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetChoosePrepared_SC& from);
  void MergeFrom(const MSG_RetChoosePrepared_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetChoosePrepared_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetChoosePrepared_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrcodeFieldNumber = 1,
  };
  // optional uint32 errcode = 1;
  bool has_errcode() const;
  private:
  bool _internal_has_errcode() const;
  public:
  void clear_errcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode() const;
  void set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errcode() const;
  void _internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetChoosePrepared_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetFightCountDown_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetFightCountDown_SC) */ {
 public:
  MSG_RetFightCountDown_SC();
  virtual ~MSG_RetFightCountDown_SC();

  MSG_RetFightCountDown_SC(const MSG_RetFightCountDown_SC& from);
  MSG_RetFightCountDown_SC(MSG_RetFightCountDown_SC&& from) noexcept
    : MSG_RetFightCountDown_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetFightCountDown_SC& operator=(const MSG_RetFightCountDown_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetFightCountDown_SC& operator=(MSG_RetFightCountDown_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetFightCountDown_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetFightCountDown_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetFightCountDown_SC*>(
               &_MSG_RetFightCountDown_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MSG_RetFightCountDown_SC& a, MSG_RetFightCountDown_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetFightCountDown_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetFightCountDown_SC* New() const final {
    return CreateMaybeMessage<MSG_RetFightCountDown_SC>(nullptr);
  }

  MSG_RetFightCountDown_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetFightCountDown_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetFightCountDown_SC& from);
  void MergeFrom(const MSG_RetFightCountDown_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetFightCountDown_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetFightCountDown_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDurationFieldNumber = 1,
  };
  // optional uint32 duration = 1;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetFightCountDown_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetStartFight_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetStartFight_SC) */ {
 public:
  MSG_RetStartFight_SC();
  virtual ~MSG_RetStartFight_SC();

  MSG_RetStartFight_SC(const MSG_RetStartFight_SC& from);
  MSG_RetStartFight_SC(MSG_RetStartFight_SC&& from) noexcept
    : MSG_RetStartFight_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetStartFight_SC& operator=(const MSG_RetStartFight_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetStartFight_SC& operator=(MSG_RetStartFight_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetStartFight_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetStartFight_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetStartFight_SC*>(
               &_MSG_RetStartFight_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MSG_RetStartFight_SC& a, MSG_RetStartFight_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetStartFight_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetStartFight_SC* New() const final {
    return CreateMaybeMessage<MSG_RetStartFight_SC>(nullptr);
  }

  MSG_RetStartFight_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetStartFight_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetStartFight_SC& from);
  void MergeFrom(const MSG_RetStartFight_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetStartFight_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetStartFight_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScoreFieldNumber = 2,
    kDurationFieldNumber = 1,
  };
  // optional .rankpk_msg.MSG_RetTeamCurScore_SC score = 2;
  bool has_score() const;
  private:
  bool _internal_has_score() const;
  public:
  void clear_score();
  const ::rankpk_msg::MSG_RetTeamCurScore_SC& score() const;
  ::rankpk_msg::MSG_RetTeamCurScore_SC* release_score();
  ::rankpk_msg::MSG_RetTeamCurScore_SC* mutable_score();
  void set_allocated_score(::rankpk_msg::MSG_RetTeamCurScore_SC* score);
  private:
  const ::rankpk_msg::MSG_RetTeamCurScore_SC& _internal_score() const;
  ::rankpk_msg::MSG_RetTeamCurScore_SC* _internal_mutable_score();
  public:

  // optional uint32 duration = 1;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetStartFight_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::rankpk_msg::MSG_RetTeamCurScore_SC* score_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetSpeedupFight_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetSpeedupFight_SC) */ {
 public:
  MSG_RetSpeedupFight_SC();
  virtual ~MSG_RetSpeedupFight_SC();

  MSG_RetSpeedupFight_SC(const MSG_RetSpeedupFight_SC& from);
  MSG_RetSpeedupFight_SC(MSG_RetSpeedupFight_SC&& from) noexcept
    : MSG_RetSpeedupFight_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetSpeedupFight_SC& operator=(const MSG_RetSpeedupFight_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetSpeedupFight_SC& operator=(MSG_RetSpeedupFight_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetSpeedupFight_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetSpeedupFight_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetSpeedupFight_SC*>(
               &_MSG_RetSpeedupFight_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MSG_RetSpeedupFight_SC& a, MSG_RetSpeedupFight_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetSpeedupFight_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetSpeedupFight_SC* New() const final {
    return CreateMaybeMessage<MSG_RetSpeedupFight_SC>(nullptr);
  }

  MSG_RetSpeedupFight_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetSpeedupFight_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetSpeedupFight_SC& from);
  void MergeFrom(const MSG_RetSpeedupFight_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetSpeedupFight_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetSpeedupFight_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDurationFieldNumber = 1,
  };
  // optional uint32 duration = 1;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetSpeedupFight_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class RankPKResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.RankPKResult) */ {
 public:
  RankPKResult();
  virtual ~RankPKResult();

  RankPKResult(const RankPKResult& from);
  RankPKResult(RankPKResult&& from) noexcept
    : RankPKResult() {
    *this = ::std::move(from);
  }

  inline RankPKResult& operator=(const RankPKResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline RankPKResult& operator=(RankPKResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RankPKResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RankPKResult* internal_default_instance() {
    return reinterpret_cast<const RankPKResult*>(
               &_RankPKResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(RankPKResult& a, RankPKResult& b) {
    a.Swap(&b);
  }
  inline void Swap(RankPKResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RankPKResult* New() const final {
    return CreateMaybeMessage<RankPKResult>(nullptr);
  }

  RankPKResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RankPKResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RankPKResult& from);
  void MergeFrom(const RankPKResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RankPKResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.RankPKResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kCharidFieldNumber = 1,
    kHeroidFieldNumber = 3,
    kCureFieldNumber = 4,
    kHurtFieldNumber = 5,
    kDeadFieldNumber = 6,
    kKillFieldNumber = 7,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint32 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint32 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 heroid = 3;
  bool has_heroid() const;
  private:
  bool _internal_has_heroid() const;
  public:
  void clear_heroid();
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid() const;
  void set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_heroid() const;
  void _internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cure = 4;
  bool has_cure() const;
  private:
  bool _internal_has_cure() const;
  public:
  void clear_cure();
  ::PROTOBUF_NAMESPACE_ID::uint32 cure() const;
  void set_cure(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cure() const;
  void _internal_set_cure(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hurt = 5;
  bool has_hurt() const;
  private:
  bool _internal_has_hurt() const;
  public:
  void clear_hurt();
  ::PROTOBUF_NAMESPACE_ID::uint32 hurt() const;
  void set_hurt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hurt() const;
  void _internal_set_hurt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dead = 6;
  bool has_dead() const;
  private:
  bool _internal_has_dead() const;
  public:
  void clear_dead();
  ::PROTOBUF_NAMESPACE_ID::uint32 dead() const;
  void set_dead(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dead() const;
  void _internal_set_dead(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 kill = 7;
  bool has_kill() const;
  private:
  bool _internal_has_kill() const;
  public:
  void clear_kill();
  ::PROTOBUF_NAMESPACE_ID::uint32 kill() const;
  void set_kill(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_kill() const;
  void _internal_set_kill(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.RankPKResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cure_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hurt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dead_;
  ::PROTOBUF_NAMESPACE_ID::uint32 kill_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetFightFinish_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetFightFinish_SC) */ {
 public:
  MSG_RetFightFinish_SC();
  virtual ~MSG_RetFightFinish_SC();

  MSG_RetFightFinish_SC(const MSG_RetFightFinish_SC& from);
  MSG_RetFightFinish_SC(MSG_RetFightFinish_SC&& from) noexcept
    : MSG_RetFightFinish_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetFightFinish_SC& operator=(const MSG_RetFightFinish_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetFightFinish_SC& operator=(MSG_RetFightFinish_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetFightFinish_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetFightFinish_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetFightFinish_SC*>(
               &_MSG_RetFightFinish_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MSG_RetFightFinish_SC& a, MSG_RetFightFinish_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetFightFinish_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetFightFinish_SC* New() const final {
    return CreateMaybeMessage<MSG_RetFightFinish_SC>(nullptr);
  }

  MSG_RetFightFinish_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetFightFinish_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetFightFinish_SC& from);
  void MergeFrom(const MSG_RetFightFinish_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetFightFinish_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetFightFinish_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRewardsFieldNumber = 3,
    kMeRankPKResultFieldNumber = 4,
    kEnemyRankPKResultFieldNumber = 5,
    kDurationFieldNumber = 1,
    kWinteamidFieldNumber = 2,
  };
  // repeated .rankpk_msg.RewardsNumber rewards = 3;
  int rewards_size() const;
  private:
  int _internal_rewards_size() const;
  public:
  void clear_rewards();
  ::rankpk_msg::RewardsNumber* mutable_rewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RewardsNumber >*
      mutable_rewards();
  private:
  const ::rankpk_msg::RewardsNumber& _internal_rewards(int index) const;
  ::rankpk_msg::RewardsNumber* _internal_add_rewards();
  public:
  const ::rankpk_msg::RewardsNumber& rewards(int index) const;
  ::rankpk_msg::RewardsNumber* add_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RewardsNumber >&
      rewards() const;

  // repeated .rankpk_msg.RankPKResult MeRankPKResult = 4;
  int merankpkresult_size() const;
  private:
  int _internal_merankpkresult_size() const;
  public:
  void clear_merankpkresult();
  ::rankpk_msg::RankPKResult* mutable_merankpkresult(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKResult >*
      mutable_merankpkresult();
  private:
  const ::rankpk_msg::RankPKResult& _internal_merankpkresult(int index) const;
  ::rankpk_msg::RankPKResult* _internal_add_merankpkresult();
  public:
  const ::rankpk_msg::RankPKResult& merankpkresult(int index) const;
  ::rankpk_msg::RankPKResult* add_merankpkresult();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKResult >&
      merankpkresult() const;

  // repeated .rankpk_msg.RankPKResult EnemyRankPKResult = 5;
  int enemyrankpkresult_size() const;
  private:
  int _internal_enemyrankpkresult_size() const;
  public:
  void clear_enemyrankpkresult();
  ::rankpk_msg::RankPKResult* mutable_enemyrankpkresult(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKResult >*
      mutable_enemyrankpkresult();
  private:
  const ::rankpk_msg::RankPKResult& _internal_enemyrankpkresult(int index) const;
  ::rankpk_msg::RankPKResult* _internal_add_enemyrankpkresult();
  public:
  const ::rankpk_msg::RankPKResult& enemyrankpkresult(int index) const;
  ::rankpk_msg::RankPKResult* add_enemyrankpkresult();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKResult >&
      enemyrankpkresult() const;

  // optional uint32 duration = 1;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 winteamid = 2;
  bool has_winteamid() const;
  private:
  bool _internal_has_winteamid() const;
  public:
  void clear_winteamid();
  ::PROTOBUF_NAMESPACE_ID::uint32 winteamid() const;
  void set_winteamid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_winteamid() const;
  void _internal_set_winteamid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetFightFinish_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RewardsNumber > rewards_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKResult > merankpkresult_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKResult > enemyrankpkresult_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 winteamid_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqGetSeasonRewards_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_ReqGetSeasonRewards_CS) */ {
 public:
  MSG_ReqGetSeasonRewards_CS();
  virtual ~MSG_ReqGetSeasonRewards_CS();

  MSG_ReqGetSeasonRewards_CS(const MSG_ReqGetSeasonRewards_CS& from);
  MSG_ReqGetSeasonRewards_CS(MSG_ReqGetSeasonRewards_CS&& from) noexcept
    : MSG_ReqGetSeasonRewards_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqGetSeasonRewards_CS& operator=(const MSG_ReqGetSeasonRewards_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqGetSeasonRewards_CS& operator=(MSG_ReqGetSeasonRewards_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqGetSeasonRewards_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqGetSeasonRewards_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqGetSeasonRewards_CS*>(
               &_MSG_ReqGetSeasonRewards_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MSG_ReqGetSeasonRewards_CS& a, MSG_ReqGetSeasonRewards_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqGetSeasonRewards_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqGetSeasonRewards_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqGetSeasonRewards_CS>(nullptr);
  }

  MSG_ReqGetSeasonRewards_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqGetSeasonRewards_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqGetSeasonRewards_CS& from);
  void MergeFrom(const MSG_ReqGetSeasonRewards_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqGetSeasonRewards_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_ReqGetSeasonRewards_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_ReqGetSeasonRewards_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetGetSeasonRewards_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetGetSeasonRewards_SC) */ {
 public:
  MSG_RetGetSeasonRewards_SC();
  virtual ~MSG_RetGetSeasonRewards_SC();

  MSG_RetGetSeasonRewards_SC(const MSG_RetGetSeasonRewards_SC& from);
  MSG_RetGetSeasonRewards_SC(MSG_RetGetSeasonRewards_SC&& from) noexcept
    : MSG_RetGetSeasonRewards_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetGetSeasonRewards_SC& operator=(const MSG_RetGetSeasonRewards_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetGetSeasonRewards_SC& operator=(MSG_RetGetSeasonRewards_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetGetSeasonRewards_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetGetSeasonRewards_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetGetSeasonRewards_SC*>(
               &_MSG_RetGetSeasonRewards_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MSG_RetGetSeasonRewards_SC& a, MSG_RetGetSeasonRewards_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetGetSeasonRewards_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetGetSeasonRewards_SC* New() const final {
    return CreateMaybeMessage<MSG_RetGetSeasonRewards_SC>(nullptr);
  }

  MSG_RetGetSeasonRewards_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetGetSeasonRewards_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetGetSeasonRewards_SC& from);
  void MergeFrom(const MSG_RetGetSeasonRewards_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetGetSeasonRewards_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetGetSeasonRewards_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeasonRewardsReceivedFieldNumber = 1,
  };
  // optional bool season_rewards_received = 1;
  bool has_season_rewards_received() const;
  private:
  bool _internal_has_season_rewards_received() const;
  public:
  void clear_season_rewards_received();
  bool season_rewards_received() const;
  void set_season_rewards_received(bool value);
  private:
  bool _internal_season_rewards_received() const;
  void _internal_set_season_rewards_received(bool value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetGetSeasonRewards_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool season_rewards_received_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRewardsEveryday_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetRewardsEveryday_SC) */ {
 public:
  MSG_RetRewardsEveryday_SC();
  virtual ~MSG_RetRewardsEveryday_SC();

  MSG_RetRewardsEveryday_SC(const MSG_RetRewardsEveryday_SC& from);
  MSG_RetRewardsEveryday_SC(MSG_RetRewardsEveryday_SC&& from) noexcept
    : MSG_RetRewardsEveryday_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRewardsEveryday_SC& operator=(const MSG_RetRewardsEveryday_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRewardsEveryday_SC& operator=(MSG_RetRewardsEveryday_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRewardsEveryday_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRewardsEveryday_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRewardsEveryday_SC*>(
               &_MSG_RetRewardsEveryday_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(MSG_RetRewardsEveryday_SC& a, MSG_RetRewardsEveryday_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRewardsEveryday_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRewardsEveryday_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRewardsEveryday_SC>(nullptr);
  }

  MSG_RetRewardsEveryday_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRewardsEveryday_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRewardsEveryday_SC& from);
  void MergeFrom(const MSG_RetRewardsEveryday_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRewardsEveryday_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetRewardsEveryday_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPkrewardsFieldNumber = 3,
    kBattleNumberFieldNumber = 1,
    kSuccessNumberFieldNumber = 2,
    kRemainderDayFieldNumber = 4,
    kRankLevelFieldNumber = 5,
    kRewardsReceivedFieldNumber = 6,
  };
  // repeated .rankpk_msg.PkRewards pkrewards = 3;
  int pkrewards_size() const;
  private:
  int _internal_pkrewards_size() const;
  public:
  void clear_pkrewards();
  ::rankpk_msg::PkRewards* mutable_pkrewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::PkRewards >*
      mutable_pkrewards();
  private:
  const ::rankpk_msg::PkRewards& _internal_pkrewards(int index) const;
  ::rankpk_msg::PkRewards* _internal_add_pkrewards();
  public:
  const ::rankpk_msg::PkRewards& pkrewards(int index) const;
  ::rankpk_msg::PkRewards* add_pkrewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::PkRewards >&
      pkrewards() const;

  // optional uint32 battle_number = 1;
  bool has_battle_number() const;
  private:
  bool _internal_has_battle_number() const;
  public:
  void clear_battle_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 battle_number() const;
  void set_battle_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_battle_number() const;
  void _internal_set_battle_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 success_number = 2;
  bool has_success_number() const;
  private:
  bool _internal_has_success_number() const;
  public:
  void clear_success_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 success_number() const;
  void set_success_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_success_number() const;
  void _internal_set_success_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 remainder_day = 4;
  bool has_remainder_day() const;
  private:
  bool _internal_has_remainder_day() const;
  public:
  void clear_remainder_day();
  ::PROTOBUF_NAMESPACE_ID::uint32 remainder_day() const;
  void set_remainder_day(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remainder_day() const;
  void _internal_set_remainder_day(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rank_level = 5;
  bool has_rank_level() const;
  private:
  bool _internal_has_rank_level() const;
  public:
  void clear_rank_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 rank_level() const;
  void set_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rank_level() const;
  void _internal_set_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool rewards_received = 6;
  bool has_rewards_received() const;
  private:
  bool _internal_has_rewards_received() const;
  public:
  void clear_rewards_received();
  bool rewards_received() const;
  void set_rewards_received(bool value);
  private:
  bool _internal_rewards_received() const;
  void _internal_set_rewards_received(bool value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetRewardsEveryday_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::PkRewards > pkrewards_;
  ::PROTOBUF_NAMESPACE_ID::uint32 battle_number_;
  ::PROTOBUF_NAMESPACE_ID::uint32 success_number_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remainder_day_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rank_level_;
  bool rewards_received_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqRewardsEveryday_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_ReqRewardsEveryday_CS) */ {
 public:
  MSG_ReqRewardsEveryday_CS();
  virtual ~MSG_ReqRewardsEveryday_CS();

  MSG_ReqRewardsEveryday_CS(const MSG_ReqRewardsEveryday_CS& from);
  MSG_ReqRewardsEveryday_CS(MSG_ReqRewardsEveryday_CS&& from) noexcept
    : MSG_ReqRewardsEveryday_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqRewardsEveryday_CS& operator=(const MSG_ReqRewardsEveryday_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqRewardsEveryday_CS& operator=(MSG_ReqRewardsEveryday_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqRewardsEveryday_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqRewardsEveryday_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqRewardsEveryday_CS*>(
               &_MSG_ReqRewardsEveryday_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(MSG_ReqRewardsEveryday_CS& a, MSG_ReqRewardsEveryday_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqRewardsEveryday_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqRewardsEveryday_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqRewardsEveryday_CS>(nullptr);
  }

  MSG_ReqRewardsEveryday_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqRewardsEveryday_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqRewardsEveryday_CS& from);
  void MergeFrom(const MSG_ReqRewardsEveryday_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqRewardsEveryday_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_ReqRewardsEveryday_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_ReqRewardsEveryday_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class PkRewards :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.PkRewards) */ {
 public:
  PkRewards();
  virtual ~PkRewards();

  PkRewards(const PkRewards& from);
  PkRewards(PkRewards&& from) noexcept
    : PkRewards() {
    *this = ::std::move(from);
  }

  inline PkRewards& operator=(const PkRewards& from) {
    CopyFrom(from);
    return *this;
  }
  inline PkRewards& operator=(PkRewards&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PkRewards& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PkRewards* internal_default_instance() {
    return reinterpret_cast<const PkRewards*>(
               &_PkRewards_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(PkRewards& a, PkRewards& b) {
    a.Swap(&b);
  }
  inline void Swap(PkRewards* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PkRewards* New() const final {
    return CreateMaybeMessage<PkRewards>(nullptr);
  }

  PkRewards* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PkRewards>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PkRewards& from);
  void MergeFrom(const PkRewards& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PkRewards* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.PkRewards";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRewardsFieldNumber = 3,
    kHeroidFieldNumber = 1,
    kTimeFieldNumber = 2,
    kPkresultFieldNumber = 4,
  };
  // repeated .rankpk_msg.RewardsNumber rewards = 3;
  int rewards_size() const;
  private:
  int _internal_rewards_size() const;
  public:
  void clear_rewards();
  ::rankpk_msg::RewardsNumber* mutable_rewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RewardsNumber >*
      mutable_rewards();
  private:
  const ::rankpk_msg::RewardsNumber& _internal_rewards(int index) const;
  ::rankpk_msg::RewardsNumber* _internal_add_rewards();
  public:
  const ::rankpk_msg::RewardsNumber& rewards(int index) const;
  ::rankpk_msg::RewardsNumber* add_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RewardsNumber >&
      rewards() const;

  // optional uint32 heroid = 1;
  bool has_heroid() const;
  private:
  bool _internal_has_heroid() const;
  public:
  void clear_heroid();
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid() const;
  void set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_heroid() const;
  void _internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 time = 2;
  bool has_time() const;
  private:
  bool _internal_has_time() const;
  public:
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool pkresult = 4;
  bool has_pkresult() const;
  private:
  bool _internal_has_pkresult() const;
  public:
  void clear_pkresult();
  bool pkresult() const;
  void set_pkresult(bool value);
  private:
  bool _internal_pkresult() const;
  void _internal_set_pkresult(bool value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.PkRewards)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RewardsNumber > rewards_;
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_;
  bool pkresult_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class RewardsNumber :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.RewardsNumber) */ {
 public:
  RewardsNumber();
  virtual ~RewardsNumber();

  RewardsNumber(const RewardsNumber& from);
  RewardsNumber(RewardsNumber&& from) noexcept
    : RewardsNumber() {
    *this = ::std::move(from);
  }

  inline RewardsNumber& operator=(const RewardsNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline RewardsNumber& operator=(RewardsNumber&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RewardsNumber& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RewardsNumber* internal_default_instance() {
    return reinterpret_cast<const RewardsNumber*>(
               &_RewardsNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(RewardsNumber& a, RewardsNumber& b) {
    a.Swap(&b);
  }
  inline void Swap(RewardsNumber* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RewardsNumber* New() const final {
    return CreateMaybeMessage<RewardsNumber>(nullptr);
  }

  RewardsNumber* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RewardsNumber>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RewardsNumber& from);
  void MergeFrom(const RewardsNumber& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RewardsNumber* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.RewardsNumber";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectidFieldNumber = 1,
    kNumberFieldNumber = 2,
  };
  // optional uint32 objectid = 1;
  bool has_objectid() const;
  private:
  bool _internal_has_objectid() const;
  public:
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint32 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 number = 2;
  bool has_number() const;
  private:
  bool _internal_has_number() const;
  public:
  void clear_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 number() const;
  void set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_number() const;
  void _internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.RewardsNumber)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 objectid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 number_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class RankPKHero :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.RankPKHero) */ {
 public:
  RankPKHero();
  virtual ~RankPKHero();

  RankPKHero(const RankPKHero& from);
  RankPKHero(RankPKHero&& from) noexcept
    : RankPKHero() {
    *this = ::std::move(from);
  }

  inline RankPKHero& operator=(const RankPKHero& from) {
    CopyFrom(from);
    return *this;
  }
  inline RankPKHero& operator=(RankPKHero&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RankPKHero& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RankPKHero* internal_default_instance() {
    return reinterpret_cast<const RankPKHero*>(
               &_RankPKHero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(RankPKHero& a, RankPKHero& b) {
    a.Swap(&b);
  }
  inline void Swap(RankPKHero* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RankPKHero* New() const final {
    return CreateMaybeMessage<RankPKHero>(nullptr);
  }

  RankPKHero* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RankPKHero>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RankPKHero& from);
  void MergeFrom(const RankPKHero& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RankPKHero* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.RankPKHero";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroidFieldNumber = 1,
    kLastusetimeFieldNumber = 2,
  };
  // optional uint32 heroid = 1;
  bool has_heroid() const;
  private:
  bool _internal_has_heroid() const;
  public:
  void clear_heroid();
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid() const;
  void set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_heroid() const;
  void _internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lastusetime = 2;
  bool has_lastusetime() const;
  private:
  bool _internal_has_lastusetime() const;
  public:
  void clear_lastusetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 lastusetime() const;
  void set_lastusetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lastusetime() const;
  void _internal_set_lastusetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.RankPKHero)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lastusetime_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRankPKHeroHistory_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetRankPKHeroHistory_SC) */ {
 public:
  MSG_RetRankPKHeroHistory_SC();
  virtual ~MSG_RetRankPKHeroHistory_SC();

  MSG_RetRankPKHeroHistory_SC(const MSG_RetRankPKHeroHistory_SC& from);
  MSG_RetRankPKHeroHistory_SC(MSG_RetRankPKHeroHistory_SC&& from) noexcept
    : MSG_RetRankPKHeroHistory_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRankPKHeroHistory_SC& operator=(const MSG_RetRankPKHeroHistory_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRankPKHeroHistory_SC& operator=(MSG_RetRankPKHeroHistory_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRankPKHeroHistory_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRankPKHeroHistory_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRankPKHeroHistory_SC*>(
               &_MSG_RetRankPKHeroHistory_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(MSG_RetRankPKHeroHistory_SC& a, MSG_RetRankPKHeroHistory_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRankPKHeroHistory_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRankPKHeroHistory_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRankPKHeroHistory_SC>(nullptr);
  }

  MSG_RetRankPKHeroHistory_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRankPKHeroHistory_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRankPKHeroHistory_SC& from);
  void MergeFrom(const MSG_RetRankPKHeroHistory_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRankPKHeroHistory_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetRankPKHeroHistory_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerosFieldNumber = 1,
  };
  // repeated .rankpk_msg.RankPKHero heros = 1;
  int heros_size() const;
  private:
  int _internal_heros_size() const;
  public:
  void clear_heros();
  ::rankpk_msg::RankPKHero* mutable_heros(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKHero >*
      mutable_heros();
  private:
  const ::rankpk_msg::RankPKHero& _internal_heros(int index) const;
  ::rankpk_msg::RankPKHero* _internal_add_heros();
  public:
  const ::rankpk_msg::RankPKHero& heros(int index) const;
  ::rankpk_msg::RankPKHero* add_heros();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKHero >&
      heros() const;

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetRankPKHeroHistory_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKHero > heros_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetUserRankStar_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetUserRankStar_SC) */ {
 public:
  MSG_RetUserRankStar_SC();
  virtual ~MSG_RetUserRankStar_SC();

  MSG_RetUserRankStar_SC(const MSG_RetUserRankStar_SC& from);
  MSG_RetUserRankStar_SC(MSG_RetUserRankStar_SC&& from) noexcept
    : MSG_RetUserRankStar_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetUserRankStar_SC& operator=(const MSG_RetUserRankStar_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetUserRankStar_SC& operator=(MSG_RetUserRankStar_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetUserRankStar_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetUserRankStar_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetUserRankStar_SC*>(
               &_MSG_RetUserRankStar_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(MSG_RetUserRankStar_SC& a, MSG_RetUserRankStar_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetUserRankStar_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetUserRankStar_SC* New() const final {
    return CreateMaybeMessage<MSG_RetUserRankStar_SC>(nullptr);
  }

  MSG_RetUserRankStar_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetUserRankStar_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetUserRankStar_SC& from);
  void MergeFrom(const MSG_RetUserRankStar_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetUserRankStar_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetUserRankStar_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
    kRankFieldNumber = 2,
  };
  // optional uint64 uid = 1;
  bool has_uid() const;
  private:
  bool _internal_has_uid() const;
  public:
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 rank = 2;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  ::PROTOBUF_NAMESPACE_ID::uint32 rank() const;
  void set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rank() const;
  void _internal_set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetUserRankStar_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rank_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetTeamLeftMemSize_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetTeamLeftMemSize_SC) */ {
 public:
  MSG_RetTeamLeftMemSize_SC();
  virtual ~MSG_RetTeamLeftMemSize_SC();

  MSG_RetTeamLeftMemSize_SC(const MSG_RetTeamLeftMemSize_SC& from);
  MSG_RetTeamLeftMemSize_SC(MSG_RetTeamLeftMemSize_SC&& from) noexcept
    : MSG_RetTeamLeftMemSize_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetTeamLeftMemSize_SC& operator=(const MSG_RetTeamLeftMemSize_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetTeamLeftMemSize_SC& operator=(MSG_RetTeamLeftMemSize_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetTeamLeftMemSize_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetTeamLeftMemSize_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetTeamLeftMemSize_SC*>(
               &_MSG_RetTeamLeftMemSize_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(MSG_RetTeamLeftMemSize_SC& a, MSG_RetTeamLeftMemSize_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetTeamLeftMemSize_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetTeamLeftMemSize_SC* New() const final {
    return CreateMaybeMessage<MSG_RetTeamLeftMemSize_SC>(nullptr);
  }

  MSG_RetTeamLeftMemSize_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetTeamLeftMemSize_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetTeamLeftMemSize_SC& from);
  void MergeFrom(const MSG_RetTeamLeftMemSize_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetTeamLeftMemSize_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetTeamLeftMemSize_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeam1IdFieldNumber = 1,
    kTeam1LeftFieldNumber = 2,
    kTeam2IdFieldNumber = 3,
    kTeam2LeftFieldNumber = 4,
  };
  // optional uint32 team1id = 1;
  bool has_team1id() const;
  private:
  bool _internal_has_team1id() const;
  public:
  void clear_team1id();
  ::PROTOBUF_NAMESPACE_ID::uint32 team1id() const;
  void set_team1id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team1id() const;
  void _internal_set_team1id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 team1left = 2;
  bool has_team1left() const;
  private:
  bool _internal_has_team1left() const;
  public:
  void clear_team1left();
  ::PROTOBUF_NAMESPACE_ID::uint32 team1left() const;
  void set_team1left(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team1left() const;
  void _internal_set_team1left(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 team2id = 3;
  bool has_team2id() const;
  private:
  bool _internal_has_team2id() const;
  public:
  void clear_team2id();
  ::PROTOBUF_NAMESPACE_ID::uint32 team2id() const;
  void set_team2id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team2id() const;
  void _internal_set_team2id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 team2left = 4;
  bool has_team2left() const;
  private:
  bool _internal_has_team2left() const;
  public:
  void clear_team2left();
  ::PROTOBUF_NAMESPACE_ID::uint32 team2left() const;
  void set_team2left(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team2left() const;
  void _internal_set_team2left(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetTeamLeftMemSize_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team1id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team1left_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team2id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team2left_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqRankPKCurStage_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_ReqRankPKCurStage_CS) */ {
 public:
  MSG_ReqRankPKCurStage_CS();
  virtual ~MSG_ReqRankPKCurStage_CS();

  MSG_ReqRankPKCurStage_CS(const MSG_ReqRankPKCurStage_CS& from);
  MSG_ReqRankPKCurStage_CS(MSG_ReqRankPKCurStage_CS&& from) noexcept
    : MSG_ReqRankPKCurStage_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqRankPKCurStage_CS& operator=(const MSG_ReqRankPKCurStage_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqRankPKCurStage_CS& operator=(MSG_ReqRankPKCurStage_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqRankPKCurStage_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqRankPKCurStage_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqRankPKCurStage_CS*>(
               &_MSG_ReqRankPKCurStage_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(MSG_ReqRankPKCurStage_CS& a, MSG_ReqRankPKCurStage_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqRankPKCurStage_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqRankPKCurStage_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqRankPKCurStage_CS>(nullptr);
  }

  MSG_ReqRankPKCurStage_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqRankPKCurStage_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqRankPKCurStage_CS& from);
  void MergeFrom(const MSG_ReqRankPKCurStage_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqRankPKCurStage_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_ReqRankPKCurStage_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_ReqRankPKCurStage_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRankPKCurStage_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetRankPKCurStage_SC) */ {
 public:
  MSG_RetRankPKCurStage_SC();
  virtual ~MSG_RetRankPKCurStage_SC();

  MSG_RetRankPKCurStage_SC(const MSG_RetRankPKCurStage_SC& from);
  MSG_RetRankPKCurStage_SC(MSG_RetRankPKCurStage_SC&& from) noexcept
    : MSG_RetRankPKCurStage_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRankPKCurStage_SC& operator=(const MSG_RetRankPKCurStage_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRankPKCurStage_SC& operator=(MSG_RetRankPKCurStage_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRankPKCurStage_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRankPKCurStage_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRankPKCurStage_SC*>(
               &_MSG_RetRankPKCurStage_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(MSG_RetRankPKCurStage_SC& a, MSG_RetRankPKCurStage_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRankPKCurStage_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRankPKCurStage_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRankPKCurStage_SC>(nullptr);
  }

  MSG_RetRankPKCurStage_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRankPKCurStage_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRankPKCurStage_SC& from);
  void MergeFrom(const MSG_RetRankPKCurStage_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRankPKCurStage_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetRankPKCurStage_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScoreFieldNumber = 3,
    kCurstageFieldNumber = 1,
    kDurationFieldNumber = 2,
  };
  // optional .rankpk_msg.MSG_RetTeamCurScore_SC score = 3;
  bool has_score() const;
  private:
  bool _internal_has_score() const;
  public:
  void clear_score();
  const ::rankpk_msg::MSG_RetTeamCurScore_SC& score() const;
  ::rankpk_msg::MSG_RetTeamCurScore_SC* release_score();
  ::rankpk_msg::MSG_RetTeamCurScore_SC* mutable_score();
  void set_allocated_score(::rankpk_msg::MSG_RetTeamCurScore_SC* score);
  private:
  const ::rankpk_msg::MSG_RetTeamCurScore_SC& _internal_score() const;
  ::rankpk_msg::MSG_RetTeamCurScore_SC* _internal_mutable_score();
  public:

  // required .msg.StageType curstage = 1;
  bool has_curstage() const;
  private:
  bool _internal_has_curstage() const;
  public:
  void clear_curstage();
  ::msg::StageType curstage() const;
  void set_curstage(::msg::StageType value);
  private:
  ::msg::StageType _internal_curstage() const;
  void _internal_set_curstage(::msg::StageType value);
  public:

  // optional uint32 duration = 2;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetRankPKCurStage_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::rankpk_msg::MSG_RetTeamCurScore_SC* score_;
  int curstage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetPreparedNum_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetPreparedNum_SC) */ {
 public:
  MSG_RetPreparedNum_SC();
  virtual ~MSG_RetPreparedNum_SC();

  MSG_RetPreparedNum_SC(const MSG_RetPreparedNum_SC& from);
  MSG_RetPreparedNum_SC(MSG_RetPreparedNum_SC&& from) noexcept
    : MSG_RetPreparedNum_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetPreparedNum_SC& operator=(const MSG_RetPreparedNum_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetPreparedNum_SC& operator=(MSG_RetPreparedNum_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetPreparedNum_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetPreparedNum_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetPreparedNum_SC*>(
               &_MSG_RetPreparedNum_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(MSG_RetPreparedNum_SC& a, MSG_RetPreparedNum_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetPreparedNum_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetPreparedNum_SC* New() const final {
    return CreateMaybeMessage<MSG_RetPreparedNum_SC>(nullptr);
  }

  MSG_RetPreparedNum_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetPreparedNum_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetPreparedNum_SC& from);
  void MergeFrom(const MSG_RetPreparedNum_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetPreparedNum_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetPreparedNum_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurnumFieldNumber = 1,
    kAllnumFieldNumber = 2,
  };
  // optional uint32 curnum = 1;
  bool has_curnum() const;
  private:
  bool _internal_has_curnum() const;
  public:
  void clear_curnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 curnum() const;
  void set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curnum() const;
  void _internal_set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 allnum = 2;
  bool has_allnum() const;
  private:
  bool _internal_has_allnum() const;
  public:
  void clear_allnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 allnum() const;
  void set_allnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_allnum() const;
  void _internal_set_allnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetPreparedNum_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 allnum_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetMemPkPrepared_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetMemPkPrepared_SC) */ {
 public:
  MSG_RetMemPkPrepared_SC();
  virtual ~MSG_RetMemPkPrepared_SC();

  MSG_RetMemPkPrepared_SC(const MSG_RetMemPkPrepared_SC& from);
  MSG_RetMemPkPrepared_SC(MSG_RetMemPkPrepared_SC&& from) noexcept
    : MSG_RetMemPkPrepared_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetMemPkPrepared_SC& operator=(const MSG_RetMemPkPrepared_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetMemPkPrepared_SC& operator=(MSG_RetMemPkPrepared_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetMemPkPrepared_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetMemPkPrepared_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetMemPkPrepared_SC*>(
               &_MSG_RetMemPkPrepared_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(MSG_RetMemPkPrepared_SC& a, MSG_RetMemPkPrepared_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetMemPkPrepared_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetMemPkPrepared_SC* New() const final {
    return CreateMaybeMessage<MSG_RetMemPkPrepared_SC>(nullptr);
  }

  MSG_RetMemPkPrepared_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetMemPkPrepared_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetMemPkPrepared_SC& from);
  void MergeFrom(const MSG_RetMemPkPrepared_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetMemPkPrepared_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetMemPkPrepared_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemidFieldNumber = 1,
    kHeroidFieldNumber = 2,
  };
  // optional uint64 memid = 1;
  bool has_memid() const;
  private:
  bool _internal_has_memid() const;
  public:
  void clear_memid();
  ::PROTOBUF_NAMESPACE_ID::uint64 memid() const;
  void set_memid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_memid() const;
  void _internal_set_memid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 heroid = 2;
  bool has_heroid() const;
  private:
  bool _internal_has_heroid() const;
  public:
  void clear_heroid();
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid() const;
  void set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_heroid() const;
  void _internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetMemPkPrepared_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 memid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetPKGeneralConfig_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetPKGeneralConfig_SC) */ {
 public:
  MSG_RetPKGeneralConfig_SC();
  virtual ~MSG_RetPKGeneralConfig_SC();

  MSG_RetPKGeneralConfig_SC(const MSG_RetPKGeneralConfig_SC& from);
  MSG_RetPKGeneralConfig_SC(MSG_RetPKGeneralConfig_SC&& from) noexcept
    : MSG_RetPKGeneralConfig_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetPKGeneralConfig_SC& operator=(const MSG_RetPKGeneralConfig_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetPKGeneralConfig_SC& operator=(MSG_RetPKGeneralConfig_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetPKGeneralConfig_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetPKGeneralConfig_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetPKGeneralConfig_SC*>(
               &_MSG_RetPKGeneralConfig_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(MSG_RetPKGeneralConfig_SC& a, MSG_RetPKGeneralConfig_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetPKGeneralConfig_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetPKGeneralConfig_SC* New() const final {
    return CreateMaybeMessage<MSG_RetPKGeneralConfig_SC>(nullptr);
  }

  MSG_RetPKGeneralConfig_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetPKGeneralConfig_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetPKGeneralConfig_SC& from);
  void MergeFrom(const MSG_RetPKGeneralConfig_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetPKGeneralConfig_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetPKGeneralConfig_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeampknumFieldNumber = 1,
  };
  // optional uint32 teampknum = 1;
  bool has_teampknum() const;
  private:
  bool _internal_has_teampknum() const;
  public:
  void clear_teampknum();
  ::PROTOBUF_NAMESPACE_ID::uint32 teampknum() const;
  void set_teampknum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_teampknum() const;
  void _internal_set_teampknum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetPKGeneralConfig_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 teampknum_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetTeamCurScore_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetTeamCurScore_SC) */ {
 public:
  MSG_RetTeamCurScore_SC();
  virtual ~MSG_RetTeamCurScore_SC();

  MSG_RetTeamCurScore_SC(const MSG_RetTeamCurScore_SC& from);
  MSG_RetTeamCurScore_SC(MSG_RetTeamCurScore_SC&& from) noexcept
    : MSG_RetTeamCurScore_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetTeamCurScore_SC& operator=(const MSG_RetTeamCurScore_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetTeamCurScore_SC& operator=(MSG_RetTeamCurScore_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetTeamCurScore_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetTeamCurScore_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetTeamCurScore_SC*>(
               &_MSG_RetTeamCurScore_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(MSG_RetTeamCurScore_SC& a, MSG_RetTeamCurScore_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetTeamCurScore_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetTeamCurScore_SC* New() const final {
    return CreateMaybeMessage<MSG_RetTeamCurScore_SC>(nullptr);
  }

  MSG_RetTeamCurScore_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetTeamCurScore_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetTeamCurScore_SC& from);
  void MergeFrom(const MSG_RetTeamCurScore_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetTeamCurScore_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetTeamCurScore_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeam1IdFieldNumber = 1,
    kTeam1ScoreFieldNumber = 2,
    kTeam2IdFieldNumber = 3,
    kTeam2ScoreFieldNumber = 4,
  };
  // optional uint32 team1id = 1;
  bool has_team1id() const;
  private:
  bool _internal_has_team1id() const;
  public:
  void clear_team1id();
  ::PROTOBUF_NAMESPACE_ID::uint32 team1id() const;
  void set_team1id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team1id() const;
  void _internal_set_team1id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 team1score = 2;
  bool has_team1score() const;
  private:
  bool _internal_has_team1score() const;
  public:
  void clear_team1score();
  ::PROTOBUF_NAMESPACE_ID::uint32 team1score() const;
  void set_team1score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team1score() const;
  void _internal_set_team1score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 team2id = 3;
  bool has_team2id() const;
  private:
  bool _internal_has_team2id() const;
  public:
  void clear_team2id();
  ::PROTOBUF_NAMESPACE_ID::uint32 team2id() const;
  void set_team2id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team2id() const;
  void _internal_set_team2id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 team2score = 4;
  bool has_team2score() const;
  private:
  bool _internal_has_team2score() const;
  public:
  void clear_team2score();
  ::PROTOBUF_NAMESPACE_ID::uint32 team2score() const;
  void set_team2score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team2score() const;
  void _internal_set_team2score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetTeamCurScore_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team1id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team1score_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team2id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team2score_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class RankPKListItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.RankPKListItem) */ {
 public:
  RankPKListItem();
  virtual ~RankPKListItem();

  RankPKListItem(const RankPKListItem& from);
  RankPKListItem(RankPKListItem&& from) noexcept
    : RankPKListItem() {
    *this = ::std::move(from);
  }

  inline RankPKListItem& operator=(const RankPKListItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline RankPKListItem& operator=(RankPKListItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RankPKListItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RankPKListItem* internal_default_instance() {
    return reinterpret_cast<const RankPKListItem*>(
               &_RankPKListItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(RankPKListItem& a, RankPKListItem& b) {
    a.Swap(&b);
  }
  inline void Swap(RankPKListItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RankPKListItem* New() const final {
    return CreateMaybeMessage<RankPKListItem>(nullptr);
  }

  RankPKListItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RankPKListItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RankPKListItem& from);
  void MergeFrom(const RankPKListItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RankPKListItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.RankPKListItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kGuildnameFieldNumber = 5,
    kCharidFieldNumber = 2,
    kPositionFieldNumber = 1,
    kRanklevelFieldNumber = 4,
    kWinbattleFieldNumber = 6,
    kWinrateFieldNumber = 7,
  };
  // optional string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string guildname = 5;
  bool has_guildname() const;
  private:
  bool _internal_has_guildname() const;
  public:
  void clear_guildname();
  const std::string& guildname() const;
  void set_guildname(const std::string& value);
  void set_guildname(std::string&& value);
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  std::string* mutable_guildname();
  std::string* release_guildname();
  void set_allocated_guildname(std::string* guildname);
  private:
  const std::string& _internal_guildname() const;
  void _internal_set_guildname(const std::string& value);
  std::string* _internal_mutable_guildname();
  public:

  // optional uint64 charid = 2;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 position = 1;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  ::PROTOBUF_NAMESPACE_ID::uint32 position() const;
  void set_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_position() const;
  void _internal_set_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ranklevel = 4;
  bool has_ranklevel() const;
  private:
  bool _internal_has_ranklevel() const;
  public:
  void clear_ranklevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 ranklevel() const;
  void set_ranklevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ranklevel() const;
  void _internal_set_ranklevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 winbattle = 6;
  bool has_winbattle() const;
  private:
  bool _internal_has_winbattle() const;
  public:
  void clear_winbattle();
  ::PROTOBUF_NAMESPACE_ID::uint32 winbattle() const;
  void set_winbattle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_winbattle() const;
  void _internal_set_winbattle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 winrate = 7;
  bool has_winrate() const;
  private:
  bool _internal_has_winrate() const;
  public:
  void clear_winrate();
  ::PROTOBUF_NAMESPACE_ID::uint32 winrate() const;
  void set_winrate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_winrate() const;
  void _internal_set_winrate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.RankPKListItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guildname_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 position_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ranklevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 winbattle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 winrate_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqRankPKList_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_ReqRankPKList_CS) */ {
 public:
  MSG_ReqRankPKList_CS();
  virtual ~MSG_ReqRankPKList_CS();

  MSG_ReqRankPKList_CS(const MSG_ReqRankPKList_CS& from);
  MSG_ReqRankPKList_CS(MSG_ReqRankPKList_CS&& from) noexcept
    : MSG_ReqRankPKList_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqRankPKList_CS& operator=(const MSG_ReqRankPKList_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqRankPKList_CS& operator=(MSG_ReqRankPKList_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqRankPKList_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqRankPKList_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqRankPKList_CS*>(
               &_MSG_ReqRankPKList_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(MSG_ReqRankPKList_CS& a, MSG_ReqRankPKList_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqRankPKList_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqRankPKList_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqRankPKList_CS>(nullptr);
  }

  MSG_ReqRankPKList_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqRankPKList_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqRankPKList_CS& from);
  void MergeFrom(const MSG_ReqRankPKList_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqRankPKList_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_ReqRankPKList_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
  };
  // optional .rankpk_msg.RankPKListType type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::rankpk_msg::RankPKListType type() const;
  void set_type(::rankpk_msg::RankPKListType value);
  private:
  ::rankpk_msg::RankPKListType _internal_type() const;
  void _internal_set_type(::rankpk_msg::RankPKListType value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_ReqRankPKList_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int type_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRankPKList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rankpk_msg.MSG_RetRankPKList_SC) */ {
 public:
  MSG_RetRankPKList_SC();
  virtual ~MSG_RetRankPKList_SC();

  MSG_RetRankPKList_SC(const MSG_RetRankPKList_SC& from);
  MSG_RetRankPKList_SC(MSG_RetRankPKList_SC&& from) noexcept
    : MSG_RetRankPKList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRankPKList_SC& operator=(const MSG_RetRankPKList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRankPKList_SC& operator=(MSG_RetRankPKList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRankPKList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRankPKList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRankPKList_SC*>(
               &_MSG_RetRankPKList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(MSG_RetRankPKList_SC& a, MSG_RetRankPKList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRankPKList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRankPKList_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRankPKList_SC>(nullptr);
  }

  MSG_RetRankPKList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRankPKList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRankPKList_SC& from);
  void MergeFrom(const MSG_RetRankPKList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRankPKList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rankpk_msg.MSG_RetRankPKList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rankpk_5fmsg_2eproto);
    return ::descriptor_table_rankpk_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3,
    kTypeFieldNumber = 1,
    kMypositionFieldNumber = 2,
  };
  // repeated .rankpk_msg.RankPKListItem data = 3;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::rankpk_msg::RankPKListItem* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKListItem >*
      mutable_data();
  private:
  const ::rankpk_msg::RankPKListItem& _internal_data(int index) const;
  ::rankpk_msg::RankPKListItem* _internal_add_data();
  public:
  const ::rankpk_msg::RankPKListItem& data(int index) const;
  ::rankpk_msg::RankPKListItem* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKListItem >&
      data() const;

  // optional .rankpk_msg.RankPKListType type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::rankpk_msg::RankPKListType type() const;
  void set_type(::rankpk_msg::RankPKListType value);
  private:
  ::rankpk_msg::RankPKListType _internal_type() const;
  void _internal_set_type(::rankpk_msg::RankPKListType value);
  public:

  // optional uint32 myposition = 2;
  bool has_myposition() const;
  private:
  bool _internal_has_myposition() const;
  public:
  void clear_myposition();
  ::PROTOBUF_NAMESPACE_ID::uint32 myposition() const;
  void set_myposition(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_myposition() const;
  void _internal_set_myposition(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rankpk_msg.MSG_RetRankPKList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKListItem > data_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 myposition_;
  friend struct ::TableStruct_rankpk_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserRankPkInfo

// optional uint32 charid = 1;
inline bool UserRankPkInfo::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_charid() const {
  return _internal_has_charid();
}
inline void UserRankPkInfo::clear_charid() {
  charid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::charid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.charid)
  return _internal_charid();
}
inline void UserRankPkInfo::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  charid_ = value;
}
inline void UserRankPkInfo::set_charid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.charid)
}

// optional string name = 2;
inline bool UserRankPkInfo::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_name() const {
  return _internal_has_name();
}
inline void UserRankPkInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserRankPkInfo::name() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.name)
  return _internal_name();
}
inline void UserRankPkInfo::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.name)
}
inline std::string* UserRankPkInfo::mutable_name() {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.UserRankPkInfo.name)
  return _internal_mutable_name();
}
inline const std::string& UserRankPkInfo::_internal_name() const {
  return name_.GetNoArena();
}
inline void UserRankPkInfo::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UserRankPkInfo::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rankpk_msg.UserRankPkInfo.name)
}
inline void UserRankPkInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rankpk_msg.UserRankPkInfo.name)
}
inline void UserRankPkInfo::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rankpk_msg.UserRankPkInfo.name)
}
inline std::string* UserRankPkInfo::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UserRankPkInfo::release_name() {
  // @@protoc_insertion_point(field_release:rankpk_msg.UserRankPkInfo.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UserRankPkInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:rankpk_msg.UserRankPkInfo.name)
}

// optional uint32 heroid = 3;
inline bool UserRankPkInfo::_internal_has_heroid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_heroid() const {
  return _internal_has_heroid();
}
inline void UserRankPkInfo::clear_heroid() {
  heroid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_heroid() const {
  return heroid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::heroid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.heroid)
  return _internal_heroid();
}
inline void UserRankPkInfo::_internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  heroid_ = value;
}
inline void UserRankPkInfo::set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.heroid)
}

// optional uint32 fight = 4;
inline bool UserRankPkInfo::_internal_has_fight() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_fight() const {
  return _internal_has_fight();
}
inline void UserRankPkInfo::clear_fight() {
  fight_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_fight() const {
  return fight_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::fight() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.fight)
  return _internal_fight();
}
inline void UserRankPkInfo::_internal_set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  fight_ = value;
}
inline void UserRankPkInfo::set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fight(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.fight)
}

// optional uint32 rank_level = 5;
inline bool UserRankPkInfo::_internal_has_rank_level() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_rank_level() const {
  return _internal_has_rank_level();
}
inline void UserRankPkInfo::clear_rank_level() {
  rank_level_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_rank_level() const {
  return rank_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::rank_level() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.rank_level)
  return _internal_rank_level();
}
inline void UserRankPkInfo::_internal_set_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  rank_level_ = value;
}
inline void UserRankPkInfo::set_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rank_level(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.rank_level)
}

// optional uint32 rank_star = 6;
inline bool UserRankPkInfo::_internal_has_rank_star() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_rank_star() const {
  return _internal_has_rank_star();
}
inline void UserRankPkInfo::clear_rank_star() {
  rank_star_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_rank_star() const {
  return rank_star_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::rank_star() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.rank_star)
  return _internal_rank_star();
}
inline void UserRankPkInfo::_internal_set_rank_star(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  rank_star_ = value;
}
inline void UserRankPkInfo::set_rank_star(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rank_star(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.rank_star)
}

// optional uint32 rank = 7;
inline bool UserRankPkInfo::_internal_has_rank() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_rank() const {
  return _internal_has_rank();
}
inline void UserRankPkInfo::clear_rank() {
  rank_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_rank() const {
  return rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::rank() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.rank)
  return _internal_rank();
}
inline void UserRankPkInfo::_internal_set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  rank_ = value;
}
inline void UserRankPkInfo::set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.rank)
}

// optional uint32 hide_score = 8;
inline bool UserRankPkInfo::_internal_has_hide_score() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_hide_score() const {
  return _internal_has_hide_score();
}
inline void UserRankPkInfo::clear_hide_score() {
  hide_score_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_hide_score() const {
  return hide_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::hide_score() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.hide_score)
  return _internal_hide_score();
}
inline void UserRankPkInfo::_internal_set_hide_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  hide_score_ = value;
}
inline void UserRankPkInfo::set_hide_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hide_score(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.hide_score)
}

// optional uint32 all_battles = 9;
inline bool UserRankPkInfo::_internal_has_all_battles() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_all_battles() const {
  return _internal_has_all_battles();
}
inline void UserRankPkInfo::clear_all_battles() {
  all_battles_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_all_battles() const {
  return all_battles_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::all_battles() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.all_battles)
  return _internal_all_battles();
}
inline void UserRankPkInfo::_internal_set_all_battles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  all_battles_ = value;
}
inline void UserRankPkInfo::set_all_battles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_all_battles(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.all_battles)
}

// optional uint32 success_battles = 10;
inline bool UserRankPkInfo::_internal_has_success_battles() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_success_battles() const {
  return _internal_has_success_battles();
}
inline void UserRankPkInfo::clear_success_battles() {
  success_battles_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_success_battles() const {
  return success_battles_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::success_battles() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.success_battles)
  return _internal_success_battles();
}
inline void UserRankPkInfo::_internal_set_success_battles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  success_battles_ = value;
}
inline void UserRankPkInfo::set_success_battles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_success_battles(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.success_battles)
}

// optional uint32 battle_score = 11;
inline bool UserRankPkInfo::_internal_has_battle_score() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_battle_score() const {
  return _internal_has_battle_score();
}
inline void UserRankPkInfo::clear_battle_score() {
  battle_score_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_battle_score() const {
  return battle_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::battle_score() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.battle_score)
  return _internal_battle_score();
}
inline void UserRankPkInfo::_internal_set_battle_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  battle_score_ = value;
}
inline void UserRankPkInfo::set_battle_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_battle_score(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.battle_score)
}

// optional uint32 seanson_battles = 12;
inline bool UserRankPkInfo::_internal_has_seanson_battles() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_seanson_battles() const {
  return _internal_has_seanson_battles();
}
inline void UserRankPkInfo::clear_seanson_battles() {
  seanson_battles_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_seanson_battles() const {
  return seanson_battles_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::seanson_battles() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.seanson_battles)
  return _internal_seanson_battles();
}
inline void UserRankPkInfo::_internal_set_seanson_battles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  seanson_battles_ = value;
}
inline void UserRankPkInfo::set_seanson_battles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seanson_battles(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.seanson_battles)
}

// optional uint32 best_rank_level = 13;
inline bool UserRankPkInfo::_internal_has_best_rank_level() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_best_rank_level() const {
  return _internal_has_best_rank_level();
}
inline void UserRankPkInfo::clear_best_rank_level() {
  best_rank_level_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_best_rank_level() const {
  return best_rank_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::best_rank_level() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.best_rank_level)
  return _internal_best_rank_level();
}
inline void UserRankPkInfo::_internal_set_best_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  best_rank_level_ = value;
}
inline void UserRankPkInfo::set_best_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_best_rank_level(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.best_rank_level)
}

// optional uint32 best_rank = 14;
inline bool UserRankPkInfo::_internal_has_best_rank() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool UserRankPkInfo::has_best_rank() const {
  return _internal_has_best_rank();
}
inline void UserRankPkInfo::clear_best_rank() {
  best_rank_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::_internal_best_rank() const {
  return best_rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserRankPkInfo::best_rank() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.UserRankPkInfo.best_rank)
  return _internal_best_rank();
}
inline void UserRankPkInfo::_internal_set_best_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  best_rank_ = value;
}
inline void UserRankPkInfo::set_best_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_best_rank(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.UserRankPkInfo.best_rank)
}

// -------------------------------------------------------------------

// MSG_Req_MatchMemberInfo_CS

// -------------------------------------------------------------------

// MSG_Ret_MatchMemberInfo_SC

// repeated .rankpk_msg.UserRankPkInfo members = 1;
inline int MSG_Ret_MatchMemberInfo_SC::_internal_members_size() const {
  return members_.size();
}
inline int MSG_Ret_MatchMemberInfo_SC::members_size() const {
  return _internal_members_size();
}
inline void MSG_Ret_MatchMemberInfo_SC::clear_members() {
  members_.Clear();
}
inline ::rankpk_msg::UserRankPkInfo* MSG_Ret_MatchMemberInfo_SC::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.members)
  return members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::UserRankPkInfo >*
MSG_Ret_MatchMemberInfo_SC::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.members)
  return &members_;
}
inline const ::rankpk_msg::UserRankPkInfo& MSG_Ret_MatchMemberInfo_SC::_internal_members(int index) const {
  return members_.Get(index);
}
inline const ::rankpk_msg::UserRankPkInfo& MSG_Ret_MatchMemberInfo_SC::members(int index) const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.members)
  return _internal_members(index);
}
inline ::rankpk_msg::UserRankPkInfo* MSG_Ret_MatchMemberInfo_SC::_internal_add_members() {
  return members_.Add();
}
inline ::rankpk_msg::UserRankPkInfo* MSG_Ret_MatchMemberInfo_SC::add_members() {
  // @@protoc_insertion_point(field_add:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.members)
  return _internal_add_members();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::UserRankPkInfo >&
MSG_Ret_MatchMemberInfo_SC::members() const {
  // @@protoc_insertion_point(field_list:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.members)
  return members_;
}

// optional uint64 leaderid = 2;
inline bool MSG_Ret_MatchMemberInfo_SC::_internal_has_leaderid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_MatchMemberInfo_SC::has_leaderid() const {
  return _internal_has_leaderid();
}
inline void MSG_Ret_MatchMemberInfo_SC::clear_leaderid() {
  leaderid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MatchMemberInfo_SC::_internal_leaderid() const {
  return leaderid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MatchMemberInfo_SC::leaderid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.leaderid)
  return _internal_leaderid();
}
inline void MSG_Ret_MatchMemberInfo_SC::_internal_set_leaderid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  leaderid_ = value;
}
inline void MSG_Ret_MatchMemberInfo_SC::set_leaderid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_leaderid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.leaderid)
}

// optional uint32 season_id = 3;
inline bool MSG_Ret_MatchMemberInfo_SC::_internal_has_season_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_MatchMemberInfo_SC::has_season_id() const {
  return _internal_has_season_id();
}
inline void MSG_Ret_MatchMemberInfo_SC::clear_season_id() {
  season_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchMemberInfo_SC::_internal_season_id() const {
  return season_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchMemberInfo_SC::season_id() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.season_id)
  return _internal_season_id();
}
inline void MSG_Ret_MatchMemberInfo_SC::_internal_set_season_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  season_id_ = value;
}
inline void MSG_Ret_MatchMemberInfo_SC::set_season_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_season_id(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.season_id)
}

// optional uint32 start_time = 4;
inline bool MSG_Ret_MatchMemberInfo_SC::_internal_has_start_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_MatchMemberInfo_SC::has_start_time() const {
  return _internal_has_start_time();
}
inline void MSG_Ret_MatchMemberInfo_SC::clear_start_time() {
  start_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchMemberInfo_SC::_internal_start_time() const {
  return start_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchMemberInfo_SC::start_time() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.start_time)
  return _internal_start_time();
}
inline void MSG_Ret_MatchMemberInfo_SC::_internal_set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  start_time_ = value;
}
inline void MSG_Ret_MatchMemberInfo_SC::set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.start_time)
}

// optional uint32 end_time = 5;
inline bool MSG_Ret_MatchMemberInfo_SC::_internal_has_end_time() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_MatchMemberInfo_SC::has_end_time() const {
  return _internal_has_end_time();
}
inline void MSG_Ret_MatchMemberInfo_SC::clear_end_time() {
  end_time_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchMemberInfo_SC::_internal_end_time() const {
  return end_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchMemberInfo_SC::end_time() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.end_time)
  return _internal_end_time();
}
inline void MSG_Ret_MatchMemberInfo_SC::_internal_set_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  end_time_ = value;
}
inline void MSG_Ret_MatchMemberInfo_SC::set_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_end_time(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.end_time)
}

// optional uint32 leftdays = 6;
inline bool MSG_Ret_MatchMemberInfo_SC::_internal_has_leftdays() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_MatchMemberInfo_SC::has_leftdays() const {
  return _internal_has_leftdays();
}
inline void MSG_Ret_MatchMemberInfo_SC::clear_leftdays() {
  leftdays_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchMemberInfo_SC::_internal_leftdays() const {
  return leftdays_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchMemberInfo_SC::leftdays() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.leftdays)
  return _internal_leftdays();
}
inline void MSG_Ret_MatchMemberInfo_SC::_internal_set_leftdays(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  leftdays_ = value;
}
inline void MSG_Ret_MatchMemberInfo_SC::set_leftdays(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_leftdays(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_Ret_MatchMemberInfo_SC.leftdays)
}

// -------------------------------------------------------------------

// MSG_Req_StartMatch_CS

// -------------------------------------------------------------------

// MSG_Ret_StartMatch_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_StartMatch_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_StartMatch_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_StartMatch_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_StartMatch_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_StartMatch_SC::retcode() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_StartMatch_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_StartMatch_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_StartMatch_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_Ret_StartMatch_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Req_CancelMatch_CS

// -------------------------------------------------------------------

// MSG_Ret_CancelMatch_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_CancelMatch_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_CancelMatch_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_CancelMatch_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_CancelMatch_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_CancelMatch_SC::retcode() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_CancelMatch_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_CancelMatch_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_CancelMatch_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_Ret_CancelMatch_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_RankPkReqPrepare_CS

// -------------------------------------------------------------------

// MSG_RankPkReqPrepare_SC

// required uint32 readystate = 1;
inline bool MSG_RankPkReqPrepare_SC::_internal_has_readystate() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RankPkReqPrepare_SC::has_readystate() const {
  return _internal_has_readystate();
}
inline void MSG_RankPkReqPrepare_SC::clear_readystate() {
  readystate_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::_internal_readystate() const {
  return readystate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::readystate() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RankPkReqPrepare_SC.readystate)
  return _internal_readystate();
}
inline void MSG_RankPkReqPrepare_SC::_internal_set_readystate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  readystate_ = value;
}
inline void MSG_RankPkReqPrepare_SC::set_readystate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_readystate(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RankPkReqPrepare_SC.readystate)
}

// required uint32 readynum = 2;
inline bool MSG_RankPkReqPrepare_SC::_internal_has_readynum() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RankPkReqPrepare_SC::has_readynum() const {
  return _internal_has_readynum();
}
inline void MSG_RankPkReqPrepare_SC::clear_readynum() {
  readynum_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::_internal_readynum() const {
  return readynum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::readynum() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RankPkReqPrepare_SC.readynum)
  return _internal_readynum();
}
inline void MSG_RankPkReqPrepare_SC::_internal_set_readynum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  readynum_ = value;
}
inline void MSG_RankPkReqPrepare_SC::set_readynum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_readynum(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RankPkReqPrepare_SC.readynum)
}

// required uint32 totalnum = 3;
inline bool MSG_RankPkReqPrepare_SC::_internal_has_totalnum() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RankPkReqPrepare_SC::has_totalnum() const {
  return _internal_has_totalnum();
}
inline void MSG_RankPkReqPrepare_SC::clear_totalnum() {
  totalnum_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::_internal_totalnum() const {
  return totalnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::totalnum() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RankPkReqPrepare_SC.totalnum)
  return _internal_totalnum();
}
inline void MSG_RankPkReqPrepare_SC::_internal_set_totalnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  totalnum_ = value;
}
inline void MSG_RankPkReqPrepare_SC::set_totalnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_totalnum(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RankPkReqPrepare_SC.totalnum)
}

// optional uint32 lefttime = 4;
inline bool MSG_RankPkReqPrepare_SC::_internal_has_lefttime() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RankPkReqPrepare_SC::has_lefttime() const {
  return _internal_has_lefttime();
}
inline void MSG_RankPkReqPrepare_SC::clear_lefttime() {
  lefttime_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::_internal_lefttime() const {
  return lefttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::lefttime() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RankPkReqPrepare_SC.lefttime)
  return _internal_lefttime();
}
inline void MSG_RankPkReqPrepare_SC::_internal_set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  lefttime_ = value;
}
inline void MSG_RankPkReqPrepare_SC::set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lefttime(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RankPkReqPrepare_SC.lefttime)
}

// optional uint32 enemyreadynum = 5;
inline bool MSG_RankPkReqPrepare_SC::_internal_has_enemyreadynum() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_RankPkReqPrepare_SC::has_enemyreadynum() const {
  return _internal_has_enemyreadynum();
}
inline void MSG_RankPkReqPrepare_SC::clear_enemyreadynum() {
  enemyreadynum_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::_internal_enemyreadynum() const {
  return enemyreadynum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::enemyreadynum() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RankPkReqPrepare_SC.enemyreadynum)
  return _internal_enemyreadynum();
}
inline void MSG_RankPkReqPrepare_SC::_internal_set_enemyreadynum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  enemyreadynum_ = value;
}
inline void MSG_RankPkReqPrepare_SC::set_enemyreadynum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_enemyreadynum(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RankPkReqPrepare_SC.enemyreadynum)
}

// optional uint32 enemytotalnum = 6;
inline bool MSG_RankPkReqPrepare_SC::_internal_has_enemytotalnum() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_RankPkReqPrepare_SC::has_enemytotalnum() const {
  return _internal_has_enemytotalnum();
}
inline void MSG_RankPkReqPrepare_SC::clear_enemytotalnum() {
  enemytotalnum_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::_internal_enemytotalnum() const {
  return enemytotalnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RankPkReqPrepare_SC::enemytotalnum() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RankPkReqPrepare_SC.enemytotalnum)
  return _internal_enemytotalnum();
}
inline void MSG_RankPkReqPrepare_SC::_internal_set_enemytotalnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  enemytotalnum_ = value;
}
inline void MSG_RankPkReqPrepare_SC::set_enemytotalnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_enemytotalnum(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RankPkReqPrepare_SC.enemytotalnum)
}

// -------------------------------------------------------------------

// MSG_GoToBattle_SC

// optional uint32 retcode = 1;
inline bool MSG_GoToBattle_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_GoToBattle_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_GoToBattle_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_GoToBattle_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_GoToBattle_SC::retcode() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_GoToBattle_SC.retcode)
  return _internal_retcode();
}
inline void MSG_GoToBattle_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_GoToBattle_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_GoToBattle_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Ret_MatchResult_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_MatchResult_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_MatchResult_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_MatchResult_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchResult_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchResult_SC::retcode() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_MatchResult_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_MatchResult_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_MatchResult_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_Ret_MatchResult_SC.retcode)
}

// optional uint32 lefttime = 2;
inline bool MSG_Ret_MatchResult_SC::_internal_has_lefttime() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_MatchResult_SC::has_lefttime() const {
  return _internal_has_lefttime();
}
inline void MSG_Ret_MatchResult_SC::clear_lefttime() {
  lefttime_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchResult_SC::_internal_lefttime() const {
  return lefttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchResult_SC::lefttime() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_MatchResult_SC.lefttime)
  return _internal_lefttime();
}
inline void MSG_Ret_MatchResult_SC::_internal_set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  lefttime_ = value;
}
inline void MSG_Ret_MatchResult_SC::set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lefttime(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_Ret_MatchResult_SC.lefttime)
}

// optional uint32 totalnum = 3;
inline bool MSG_Ret_MatchResult_SC::_internal_has_totalnum() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_MatchResult_SC::has_totalnum() const {
  return _internal_has_totalnum();
}
inline void MSG_Ret_MatchResult_SC::clear_totalnum() {
  totalnum_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchResult_SC::_internal_totalnum() const {
  return totalnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MatchResult_SC::totalnum() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_Ret_MatchResult_SC.totalnum)
  return _internal_totalnum();
}
inline void MSG_Ret_MatchResult_SC::_internal_set_totalnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  totalnum_ = value;
}
inline void MSG_Ret_MatchResult_SC::set_totalnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_totalnum(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_Ret_MatchResult_SC.totalnum)
}

// -------------------------------------------------------------------

// MSG_Req_GotoBattle_CS

// -------------------------------------------------------------------

// MSG_RetStartPrepare_SC

// optional uint32 duration = 1;
inline bool MSG_RetStartPrepare_SC::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetStartPrepare_SC::has_duration() const {
  return _internal_has_duration();
}
inline void MSG_RetStartPrepare_SC::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetStartPrepare_SC::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetStartPrepare_SC::duration() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetStartPrepare_SC.duration)
  return _internal_duration();
}
inline void MSG_RetStartPrepare_SC::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  duration_ = value;
}
inline void MSG_RetStartPrepare_SC::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetStartPrepare_SC.duration)
}

// -------------------------------------------------------------------

// MSG_ReqChoosePrepared_CS

// -------------------------------------------------------------------

// MSG_RetChoosePrepared_SC

// optional uint32 errcode = 1;
inline bool MSG_RetChoosePrepared_SC::_internal_has_errcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetChoosePrepared_SC::has_errcode() const {
  return _internal_has_errcode();
}
inline void MSG_RetChoosePrepared_SC::clear_errcode() {
  errcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetChoosePrepared_SC::_internal_errcode() const {
  return errcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetChoosePrepared_SC::errcode() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetChoosePrepared_SC.errcode)
  return _internal_errcode();
}
inline void MSG_RetChoosePrepared_SC::_internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  errcode_ = value;
}
inline void MSG_RetChoosePrepared_SC::set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errcode(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetChoosePrepared_SC.errcode)
}

// -------------------------------------------------------------------

// MSG_RetFightCountDown_SC

// optional uint32 duration = 1;
inline bool MSG_RetFightCountDown_SC::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetFightCountDown_SC::has_duration() const {
  return _internal_has_duration();
}
inline void MSG_RetFightCountDown_SC::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetFightCountDown_SC::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetFightCountDown_SC::duration() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetFightCountDown_SC.duration)
  return _internal_duration();
}
inline void MSG_RetFightCountDown_SC::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  duration_ = value;
}
inline void MSG_RetFightCountDown_SC::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetFightCountDown_SC.duration)
}

// -------------------------------------------------------------------

// MSG_RetStartFight_SC

// optional uint32 duration = 1;
inline bool MSG_RetStartFight_SC::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetStartFight_SC::has_duration() const {
  return _internal_has_duration();
}
inline void MSG_RetStartFight_SC::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetStartFight_SC::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetStartFight_SC::duration() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetStartFight_SC.duration)
  return _internal_duration();
}
inline void MSG_RetStartFight_SC::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
}
inline void MSG_RetStartFight_SC::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetStartFight_SC.duration)
}

// optional .rankpk_msg.MSG_RetTeamCurScore_SC score = 2;
inline bool MSG_RetStartFight_SC::_internal_has_score() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || score_ != nullptr);
  return value;
}
inline bool MSG_RetStartFight_SC::has_score() const {
  return _internal_has_score();
}
inline void MSG_RetStartFight_SC::clear_score() {
  if (score_ != nullptr) score_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::rankpk_msg::MSG_RetTeamCurScore_SC& MSG_RetStartFight_SC::_internal_score() const {
  const ::rankpk_msg::MSG_RetTeamCurScore_SC* p = score_;
  return p != nullptr ? *p : *reinterpret_cast<const ::rankpk_msg::MSG_RetTeamCurScore_SC*>(
      &::rankpk_msg::_MSG_RetTeamCurScore_SC_default_instance_);
}
inline const ::rankpk_msg::MSG_RetTeamCurScore_SC& MSG_RetStartFight_SC::score() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetStartFight_SC.score)
  return _internal_score();
}
inline ::rankpk_msg::MSG_RetTeamCurScore_SC* MSG_RetStartFight_SC::release_score() {
  // @@protoc_insertion_point(field_release:rankpk_msg.MSG_RetStartFight_SC.score)
  _has_bits_[0] &= ~0x00000001u;
  ::rankpk_msg::MSG_RetTeamCurScore_SC* temp = score_;
  score_ = nullptr;
  return temp;
}
inline ::rankpk_msg::MSG_RetTeamCurScore_SC* MSG_RetStartFight_SC::_internal_mutable_score() {
  _has_bits_[0] |= 0x00000001u;
  if (score_ == nullptr) {
    auto* p = CreateMaybeMessage<::rankpk_msg::MSG_RetTeamCurScore_SC>(GetArenaNoVirtual());
    score_ = p;
  }
  return score_;
}
inline ::rankpk_msg::MSG_RetTeamCurScore_SC* MSG_RetStartFight_SC::mutable_score() {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.MSG_RetStartFight_SC.score)
  return _internal_mutable_score();
}
inline void MSG_RetStartFight_SC::set_allocated_score(::rankpk_msg::MSG_RetTeamCurScore_SC* score) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete score_;
  }
  if (score) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      score = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, score, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  score_ = score;
  // @@protoc_insertion_point(field_set_allocated:rankpk_msg.MSG_RetStartFight_SC.score)
}

// -------------------------------------------------------------------

// MSG_RetSpeedupFight_SC

// optional uint32 duration = 1;
inline bool MSG_RetSpeedupFight_SC::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetSpeedupFight_SC::has_duration() const {
  return _internal_has_duration();
}
inline void MSG_RetSpeedupFight_SC::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSpeedupFight_SC::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSpeedupFight_SC::duration() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetSpeedupFight_SC.duration)
  return _internal_duration();
}
inline void MSG_RetSpeedupFight_SC::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  duration_ = value;
}
inline void MSG_RetSpeedupFight_SC::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetSpeedupFight_SC.duration)
}

// -------------------------------------------------------------------

// RankPKResult

// optional uint32 charid = 1;
inline bool RankPKResult::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RankPKResult::has_charid() const {
  return _internal_has_charid();
}
inline void RankPKResult::clear_charid() {
  charid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::charid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKResult.charid)
  return _internal_charid();
}
inline void RankPKResult::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  charid_ = value;
}
inline void RankPKResult::set_charid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKResult.charid)
}

// optional string name = 2;
inline bool RankPKResult::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RankPKResult::has_name() const {
  return _internal_has_name();
}
inline void RankPKResult::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RankPKResult::name() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKResult.name)
  return _internal_name();
}
inline void RankPKResult::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKResult.name)
}
inline std::string* RankPKResult::mutable_name() {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.RankPKResult.name)
  return _internal_mutable_name();
}
inline const std::string& RankPKResult::_internal_name() const {
  return name_.GetNoArena();
}
inline void RankPKResult::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void RankPKResult::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rankpk_msg.RankPKResult.name)
}
inline void RankPKResult::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rankpk_msg.RankPKResult.name)
}
inline void RankPKResult::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rankpk_msg.RankPKResult.name)
}
inline std::string* RankPKResult::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RankPKResult::release_name() {
  // @@protoc_insertion_point(field_release:rankpk_msg.RankPKResult.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RankPKResult::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:rankpk_msg.RankPKResult.name)
}

// optional uint32 heroid = 3;
inline bool RankPKResult::_internal_has_heroid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool RankPKResult::has_heroid() const {
  return _internal_has_heroid();
}
inline void RankPKResult::clear_heroid() {
  heroid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::_internal_heroid() const {
  return heroid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::heroid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKResult.heroid)
  return _internal_heroid();
}
inline void RankPKResult::_internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  heroid_ = value;
}
inline void RankPKResult::set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKResult.heroid)
}

// optional uint32 cure = 4;
inline bool RankPKResult::_internal_has_cure() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool RankPKResult::has_cure() const {
  return _internal_has_cure();
}
inline void RankPKResult::clear_cure() {
  cure_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::_internal_cure() const {
  return cure_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::cure() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKResult.cure)
  return _internal_cure();
}
inline void RankPKResult::_internal_set_cure(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  cure_ = value;
}
inline void RankPKResult::set_cure(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cure(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKResult.cure)
}

// optional uint32 hurt = 5;
inline bool RankPKResult::_internal_has_hurt() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool RankPKResult::has_hurt() const {
  return _internal_has_hurt();
}
inline void RankPKResult::clear_hurt() {
  hurt_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::_internal_hurt() const {
  return hurt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::hurt() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKResult.hurt)
  return _internal_hurt();
}
inline void RankPKResult::_internal_set_hurt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  hurt_ = value;
}
inline void RankPKResult::set_hurt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hurt(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKResult.hurt)
}

// optional uint32 dead = 6;
inline bool RankPKResult::_internal_has_dead() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool RankPKResult::has_dead() const {
  return _internal_has_dead();
}
inline void RankPKResult::clear_dead() {
  dead_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::_internal_dead() const {
  return dead_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::dead() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKResult.dead)
  return _internal_dead();
}
inline void RankPKResult::_internal_set_dead(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  dead_ = value;
}
inline void RankPKResult::set_dead(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dead(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKResult.dead)
}

// optional uint32 kill = 7;
inline bool RankPKResult::_internal_has_kill() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool RankPKResult::has_kill() const {
  return _internal_has_kill();
}
inline void RankPKResult::clear_kill() {
  kill_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::_internal_kill() const {
  return kill_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKResult::kill() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKResult.kill)
  return _internal_kill();
}
inline void RankPKResult::_internal_set_kill(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  kill_ = value;
}
inline void RankPKResult::set_kill(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_kill(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKResult.kill)
}

// -------------------------------------------------------------------

// MSG_RetFightFinish_SC

// optional uint32 duration = 1;
inline bool MSG_RetFightFinish_SC::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetFightFinish_SC::has_duration() const {
  return _internal_has_duration();
}
inline void MSG_RetFightFinish_SC::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetFightFinish_SC::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetFightFinish_SC::duration() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetFightFinish_SC.duration)
  return _internal_duration();
}
inline void MSG_RetFightFinish_SC::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  duration_ = value;
}
inline void MSG_RetFightFinish_SC::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetFightFinish_SC.duration)
}

// optional uint32 winteamid = 2;
inline bool MSG_RetFightFinish_SC::_internal_has_winteamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetFightFinish_SC::has_winteamid() const {
  return _internal_has_winteamid();
}
inline void MSG_RetFightFinish_SC::clear_winteamid() {
  winteamid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetFightFinish_SC::_internal_winteamid() const {
  return winteamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetFightFinish_SC::winteamid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetFightFinish_SC.winteamid)
  return _internal_winteamid();
}
inline void MSG_RetFightFinish_SC::_internal_set_winteamid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  winteamid_ = value;
}
inline void MSG_RetFightFinish_SC::set_winteamid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_winteamid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetFightFinish_SC.winteamid)
}

// repeated .rankpk_msg.RewardsNumber rewards = 3;
inline int MSG_RetFightFinish_SC::_internal_rewards_size() const {
  return rewards_.size();
}
inline int MSG_RetFightFinish_SC::rewards_size() const {
  return _internal_rewards_size();
}
inline void MSG_RetFightFinish_SC::clear_rewards() {
  rewards_.Clear();
}
inline ::rankpk_msg::RewardsNumber* MSG_RetFightFinish_SC::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.MSG_RetFightFinish_SC.rewards)
  return rewards_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RewardsNumber >*
MSG_RetFightFinish_SC::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:rankpk_msg.MSG_RetFightFinish_SC.rewards)
  return &rewards_;
}
inline const ::rankpk_msg::RewardsNumber& MSG_RetFightFinish_SC::_internal_rewards(int index) const {
  return rewards_.Get(index);
}
inline const ::rankpk_msg::RewardsNumber& MSG_RetFightFinish_SC::rewards(int index) const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetFightFinish_SC.rewards)
  return _internal_rewards(index);
}
inline ::rankpk_msg::RewardsNumber* MSG_RetFightFinish_SC::_internal_add_rewards() {
  return rewards_.Add();
}
inline ::rankpk_msg::RewardsNumber* MSG_RetFightFinish_SC::add_rewards() {
  // @@protoc_insertion_point(field_add:rankpk_msg.MSG_RetFightFinish_SC.rewards)
  return _internal_add_rewards();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RewardsNumber >&
MSG_RetFightFinish_SC::rewards() const {
  // @@protoc_insertion_point(field_list:rankpk_msg.MSG_RetFightFinish_SC.rewards)
  return rewards_;
}

// repeated .rankpk_msg.RankPKResult MeRankPKResult = 4;
inline int MSG_RetFightFinish_SC::_internal_merankpkresult_size() const {
  return merankpkresult_.size();
}
inline int MSG_RetFightFinish_SC::merankpkresult_size() const {
  return _internal_merankpkresult_size();
}
inline void MSG_RetFightFinish_SC::clear_merankpkresult() {
  merankpkresult_.Clear();
}
inline ::rankpk_msg::RankPKResult* MSG_RetFightFinish_SC::mutable_merankpkresult(int index) {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.MSG_RetFightFinish_SC.MeRankPKResult)
  return merankpkresult_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKResult >*
MSG_RetFightFinish_SC::mutable_merankpkresult() {
  // @@protoc_insertion_point(field_mutable_list:rankpk_msg.MSG_RetFightFinish_SC.MeRankPKResult)
  return &merankpkresult_;
}
inline const ::rankpk_msg::RankPKResult& MSG_RetFightFinish_SC::_internal_merankpkresult(int index) const {
  return merankpkresult_.Get(index);
}
inline const ::rankpk_msg::RankPKResult& MSG_RetFightFinish_SC::merankpkresult(int index) const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetFightFinish_SC.MeRankPKResult)
  return _internal_merankpkresult(index);
}
inline ::rankpk_msg::RankPKResult* MSG_RetFightFinish_SC::_internal_add_merankpkresult() {
  return merankpkresult_.Add();
}
inline ::rankpk_msg::RankPKResult* MSG_RetFightFinish_SC::add_merankpkresult() {
  // @@protoc_insertion_point(field_add:rankpk_msg.MSG_RetFightFinish_SC.MeRankPKResult)
  return _internal_add_merankpkresult();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKResult >&
MSG_RetFightFinish_SC::merankpkresult() const {
  // @@protoc_insertion_point(field_list:rankpk_msg.MSG_RetFightFinish_SC.MeRankPKResult)
  return merankpkresult_;
}

// repeated .rankpk_msg.RankPKResult EnemyRankPKResult = 5;
inline int MSG_RetFightFinish_SC::_internal_enemyrankpkresult_size() const {
  return enemyrankpkresult_.size();
}
inline int MSG_RetFightFinish_SC::enemyrankpkresult_size() const {
  return _internal_enemyrankpkresult_size();
}
inline void MSG_RetFightFinish_SC::clear_enemyrankpkresult() {
  enemyrankpkresult_.Clear();
}
inline ::rankpk_msg::RankPKResult* MSG_RetFightFinish_SC::mutable_enemyrankpkresult(int index) {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.MSG_RetFightFinish_SC.EnemyRankPKResult)
  return enemyrankpkresult_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKResult >*
MSG_RetFightFinish_SC::mutable_enemyrankpkresult() {
  // @@protoc_insertion_point(field_mutable_list:rankpk_msg.MSG_RetFightFinish_SC.EnemyRankPKResult)
  return &enemyrankpkresult_;
}
inline const ::rankpk_msg::RankPKResult& MSG_RetFightFinish_SC::_internal_enemyrankpkresult(int index) const {
  return enemyrankpkresult_.Get(index);
}
inline const ::rankpk_msg::RankPKResult& MSG_RetFightFinish_SC::enemyrankpkresult(int index) const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetFightFinish_SC.EnemyRankPKResult)
  return _internal_enemyrankpkresult(index);
}
inline ::rankpk_msg::RankPKResult* MSG_RetFightFinish_SC::_internal_add_enemyrankpkresult() {
  return enemyrankpkresult_.Add();
}
inline ::rankpk_msg::RankPKResult* MSG_RetFightFinish_SC::add_enemyrankpkresult() {
  // @@protoc_insertion_point(field_add:rankpk_msg.MSG_RetFightFinish_SC.EnemyRankPKResult)
  return _internal_add_enemyrankpkresult();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKResult >&
MSG_RetFightFinish_SC::enemyrankpkresult() const {
  // @@protoc_insertion_point(field_list:rankpk_msg.MSG_RetFightFinish_SC.EnemyRankPKResult)
  return enemyrankpkresult_;
}

// -------------------------------------------------------------------

// MSG_ReqGetSeasonRewards_CS

// -------------------------------------------------------------------

// MSG_RetGetSeasonRewards_SC

// optional bool season_rewards_received = 1;
inline bool MSG_RetGetSeasonRewards_SC::_internal_has_season_rewards_received() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetGetSeasonRewards_SC::has_season_rewards_received() const {
  return _internal_has_season_rewards_received();
}
inline void MSG_RetGetSeasonRewards_SC::clear_season_rewards_received() {
  season_rewards_received_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_RetGetSeasonRewards_SC::_internal_season_rewards_received() const {
  return season_rewards_received_;
}
inline bool MSG_RetGetSeasonRewards_SC::season_rewards_received() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetGetSeasonRewards_SC.season_rewards_received)
  return _internal_season_rewards_received();
}
inline void MSG_RetGetSeasonRewards_SC::_internal_set_season_rewards_received(bool value) {
  _has_bits_[0] |= 0x00000001u;
  season_rewards_received_ = value;
}
inline void MSG_RetGetSeasonRewards_SC::set_season_rewards_received(bool value) {
  _internal_set_season_rewards_received(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetGetSeasonRewards_SC.season_rewards_received)
}

// -------------------------------------------------------------------

// MSG_RetRewardsEveryday_SC

// optional uint32 battle_number = 1;
inline bool MSG_RetRewardsEveryday_SC::_internal_has_battle_number() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetRewardsEveryday_SC::has_battle_number() const {
  return _internal_has_battle_number();
}
inline void MSG_RetRewardsEveryday_SC::clear_battle_number() {
  battle_number_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRewardsEveryday_SC::_internal_battle_number() const {
  return battle_number_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRewardsEveryday_SC::battle_number() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRewardsEveryday_SC.battle_number)
  return _internal_battle_number();
}
inline void MSG_RetRewardsEveryday_SC::_internal_set_battle_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  battle_number_ = value;
}
inline void MSG_RetRewardsEveryday_SC::set_battle_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_battle_number(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetRewardsEveryday_SC.battle_number)
}

// optional uint32 success_number = 2;
inline bool MSG_RetRewardsEveryday_SC::_internal_has_success_number() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetRewardsEveryday_SC::has_success_number() const {
  return _internal_has_success_number();
}
inline void MSG_RetRewardsEveryday_SC::clear_success_number() {
  success_number_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRewardsEveryday_SC::_internal_success_number() const {
  return success_number_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRewardsEveryday_SC::success_number() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRewardsEveryday_SC.success_number)
  return _internal_success_number();
}
inline void MSG_RetRewardsEveryday_SC::_internal_set_success_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  success_number_ = value;
}
inline void MSG_RetRewardsEveryday_SC::set_success_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_success_number(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetRewardsEveryday_SC.success_number)
}

// repeated .rankpk_msg.PkRewards pkrewards = 3;
inline int MSG_RetRewardsEveryday_SC::_internal_pkrewards_size() const {
  return pkrewards_.size();
}
inline int MSG_RetRewardsEveryday_SC::pkrewards_size() const {
  return _internal_pkrewards_size();
}
inline void MSG_RetRewardsEveryday_SC::clear_pkrewards() {
  pkrewards_.Clear();
}
inline ::rankpk_msg::PkRewards* MSG_RetRewardsEveryday_SC::mutable_pkrewards(int index) {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.MSG_RetRewardsEveryday_SC.pkrewards)
  return pkrewards_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::PkRewards >*
MSG_RetRewardsEveryday_SC::mutable_pkrewards() {
  // @@protoc_insertion_point(field_mutable_list:rankpk_msg.MSG_RetRewardsEveryday_SC.pkrewards)
  return &pkrewards_;
}
inline const ::rankpk_msg::PkRewards& MSG_RetRewardsEveryday_SC::_internal_pkrewards(int index) const {
  return pkrewards_.Get(index);
}
inline const ::rankpk_msg::PkRewards& MSG_RetRewardsEveryday_SC::pkrewards(int index) const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRewardsEveryday_SC.pkrewards)
  return _internal_pkrewards(index);
}
inline ::rankpk_msg::PkRewards* MSG_RetRewardsEveryday_SC::_internal_add_pkrewards() {
  return pkrewards_.Add();
}
inline ::rankpk_msg::PkRewards* MSG_RetRewardsEveryday_SC::add_pkrewards() {
  // @@protoc_insertion_point(field_add:rankpk_msg.MSG_RetRewardsEveryday_SC.pkrewards)
  return _internal_add_pkrewards();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::PkRewards >&
MSG_RetRewardsEveryday_SC::pkrewards() const {
  // @@protoc_insertion_point(field_list:rankpk_msg.MSG_RetRewardsEveryday_SC.pkrewards)
  return pkrewards_;
}

// optional uint32 remainder_day = 4;
inline bool MSG_RetRewardsEveryday_SC::_internal_has_remainder_day() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetRewardsEveryday_SC::has_remainder_day() const {
  return _internal_has_remainder_day();
}
inline void MSG_RetRewardsEveryday_SC::clear_remainder_day() {
  remainder_day_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRewardsEveryday_SC::_internal_remainder_day() const {
  return remainder_day_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRewardsEveryday_SC::remainder_day() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRewardsEveryday_SC.remainder_day)
  return _internal_remainder_day();
}
inline void MSG_RetRewardsEveryday_SC::_internal_set_remainder_day(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  remainder_day_ = value;
}
inline void MSG_RetRewardsEveryday_SC::set_remainder_day(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remainder_day(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetRewardsEveryday_SC.remainder_day)
}

// optional uint32 rank_level = 5;
inline bool MSG_RetRewardsEveryday_SC::_internal_has_rank_level() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RetRewardsEveryday_SC::has_rank_level() const {
  return _internal_has_rank_level();
}
inline void MSG_RetRewardsEveryday_SC::clear_rank_level() {
  rank_level_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRewardsEveryday_SC::_internal_rank_level() const {
  return rank_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRewardsEveryday_SC::rank_level() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRewardsEveryday_SC.rank_level)
  return _internal_rank_level();
}
inline void MSG_RetRewardsEveryday_SC::_internal_set_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  rank_level_ = value;
}
inline void MSG_RetRewardsEveryday_SC::set_rank_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rank_level(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetRewardsEveryday_SC.rank_level)
}

// optional bool rewards_received = 6;
inline bool MSG_RetRewardsEveryday_SC::_internal_has_rewards_received() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_RetRewardsEveryday_SC::has_rewards_received() const {
  return _internal_has_rewards_received();
}
inline void MSG_RetRewardsEveryday_SC::clear_rewards_received() {
  rewards_received_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool MSG_RetRewardsEveryday_SC::_internal_rewards_received() const {
  return rewards_received_;
}
inline bool MSG_RetRewardsEveryday_SC::rewards_received() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRewardsEveryday_SC.rewards_received)
  return _internal_rewards_received();
}
inline void MSG_RetRewardsEveryday_SC::_internal_set_rewards_received(bool value) {
  _has_bits_[0] |= 0x00000010u;
  rewards_received_ = value;
}
inline void MSG_RetRewardsEveryday_SC::set_rewards_received(bool value) {
  _internal_set_rewards_received(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetRewardsEveryday_SC.rewards_received)
}

// -------------------------------------------------------------------

// MSG_ReqRewardsEveryday_CS

// -------------------------------------------------------------------

// PkRewards

// optional uint32 heroid = 1;
inline bool PkRewards::_internal_has_heroid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PkRewards::has_heroid() const {
  return _internal_has_heroid();
}
inline void PkRewards::clear_heroid() {
  heroid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PkRewards::_internal_heroid() const {
  return heroid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PkRewards::heroid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.PkRewards.heroid)
  return _internal_heroid();
}
inline void PkRewards::_internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  heroid_ = value;
}
inline void PkRewards::set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.PkRewards.heroid)
}

// optional uint32 time = 2;
inline bool PkRewards::_internal_has_time() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PkRewards::has_time() const {
  return _internal_has_time();
}
inline void PkRewards::clear_time() {
  time_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PkRewards::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PkRewards::time() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.PkRewards.time)
  return _internal_time();
}
inline void PkRewards::_internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  time_ = value;
}
inline void PkRewards::set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.PkRewards.time)
}

// repeated .rankpk_msg.RewardsNumber rewards = 3;
inline int PkRewards::_internal_rewards_size() const {
  return rewards_.size();
}
inline int PkRewards::rewards_size() const {
  return _internal_rewards_size();
}
inline void PkRewards::clear_rewards() {
  rewards_.Clear();
}
inline ::rankpk_msg::RewardsNumber* PkRewards::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.PkRewards.rewards)
  return rewards_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RewardsNumber >*
PkRewards::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:rankpk_msg.PkRewards.rewards)
  return &rewards_;
}
inline const ::rankpk_msg::RewardsNumber& PkRewards::_internal_rewards(int index) const {
  return rewards_.Get(index);
}
inline const ::rankpk_msg::RewardsNumber& PkRewards::rewards(int index) const {
  // @@protoc_insertion_point(field_get:rankpk_msg.PkRewards.rewards)
  return _internal_rewards(index);
}
inline ::rankpk_msg::RewardsNumber* PkRewards::_internal_add_rewards() {
  return rewards_.Add();
}
inline ::rankpk_msg::RewardsNumber* PkRewards::add_rewards() {
  // @@protoc_insertion_point(field_add:rankpk_msg.PkRewards.rewards)
  return _internal_add_rewards();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RewardsNumber >&
PkRewards::rewards() const {
  // @@protoc_insertion_point(field_list:rankpk_msg.PkRewards.rewards)
  return rewards_;
}

// optional bool pkresult = 4;
inline bool PkRewards::_internal_has_pkresult() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PkRewards::has_pkresult() const {
  return _internal_has_pkresult();
}
inline void PkRewards::clear_pkresult() {
  pkresult_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool PkRewards::_internal_pkresult() const {
  return pkresult_;
}
inline bool PkRewards::pkresult() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.PkRewards.pkresult)
  return _internal_pkresult();
}
inline void PkRewards::_internal_set_pkresult(bool value) {
  _has_bits_[0] |= 0x00000004u;
  pkresult_ = value;
}
inline void PkRewards::set_pkresult(bool value) {
  _internal_set_pkresult(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.PkRewards.pkresult)
}

// -------------------------------------------------------------------

// RewardsNumber

// optional uint32 objectid = 1;
inline bool RewardsNumber::_internal_has_objectid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RewardsNumber::has_objectid() const {
  return _internal_has_objectid();
}
inline void RewardsNumber::clear_objectid() {
  objectid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RewardsNumber::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RewardsNumber::objectid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RewardsNumber.objectid)
  return _internal_objectid();
}
inline void RewardsNumber::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  objectid_ = value;
}
inline void RewardsNumber::set_objectid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RewardsNumber.objectid)
}

// optional uint32 number = 2;
inline bool RewardsNumber::_internal_has_number() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RewardsNumber::has_number() const {
  return _internal_has_number();
}
inline void RewardsNumber::clear_number() {
  number_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RewardsNumber::_internal_number() const {
  return number_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RewardsNumber::number() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RewardsNumber.number)
  return _internal_number();
}
inline void RewardsNumber::_internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  number_ = value;
}
inline void RewardsNumber::set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RewardsNumber.number)
}

// -------------------------------------------------------------------

// RankPKHero

// optional uint32 heroid = 1;
inline bool RankPKHero::_internal_has_heroid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RankPKHero::has_heroid() const {
  return _internal_has_heroid();
}
inline void RankPKHero::clear_heroid() {
  heroid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKHero::_internal_heroid() const {
  return heroid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKHero::heroid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKHero.heroid)
  return _internal_heroid();
}
inline void RankPKHero::_internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  heroid_ = value;
}
inline void RankPKHero::set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKHero.heroid)
}

// optional uint32 lastusetime = 2;
inline bool RankPKHero::_internal_has_lastusetime() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RankPKHero::has_lastusetime() const {
  return _internal_has_lastusetime();
}
inline void RankPKHero::clear_lastusetime() {
  lastusetime_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKHero::_internal_lastusetime() const {
  return lastusetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKHero::lastusetime() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKHero.lastusetime)
  return _internal_lastusetime();
}
inline void RankPKHero::_internal_set_lastusetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  lastusetime_ = value;
}
inline void RankPKHero::set_lastusetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lastusetime(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKHero.lastusetime)
}

// -------------------------------------------------------------------

// MSG_RetRankPKHeroHistory_SC

// repeated .rankpk_msg.RankPKHero heros = 1;
inline int MSG_RetRankPKHeroHistory_SC::_internal_heros_size() const {
  return heros_.size();
}
inline int MSG_RetRankPKHeroHistory_SC::heros_size() const {
  return _internal_heros_size();
}
inline void MSG_RetRankPKHeroHistory_SC::clear_heros() {
  heros_.Clear();
}
inline ::rankpk_msg::RankPKHero* MSG_RetRankPKHeroHistory_SC::mutable_heros(int index) {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.MSG_RetRankPKHeroHistory_SC.heros)
  return heros_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKHero >*
MSG_RetRankPKHeroHistory_SC::mutable_heros() {
  // @@protoc_insertion_point(field_mutable_list:rankpk_msg.MSG_RetRankPKHeroHistory_SC.heros)
  return &heros_;
}
inline const ::rankpk_msg::RankPKHero& MSG_RetRankPKHeroHistory_SC::_internal_heros(int index) const {
  return heros_.Get(index);
}
inline const ::rankpk_msg::RankPKHero& MSG_RetRankPKHeroHistory_SC::heros(int index) const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRankPKHeroHistory_SC.heros)
  return _internal_heros(index);
}
inline ::rankpk_msg::RankPKHero* MSG_RetRankPKHeroHistory_SC::_internal_add_heros() {
  return heros_.Add();
}
inline ::rankpk_msg::RankPKHero* MSG_RetRankPKHeroHistory_SC::add_heros() {
  // @@protoc_insertion_point(field_add:rankpk_msg.MSG_RetRankPKHeroHistory_SC.heros)
  return _internal_add_heros();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKHero >&
MSG_RetRankPKHeroHistory_SC::heros() const {
  // @@protoc_insertion_point(field_list:rankpk_msg.MSG_RetRankPKHeroHistory_SC.heros)
  return heros_;
}

// -------------------------------------------------------------------

// MSG_RetUserRankStar_SC

// optional uint64 uid = 1;
inline bool MSG_RetUserRankStar_SC::_internal_has_uid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetUserRankStar_SC::has_uid() const {
  return _internal_has_uid();
}
inline void MSG_RetUserRankStar_SC::clear_uid() {
  uid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_RetUserRankStar_SC::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_RetUserRankStar_SC::uid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetUserRankStar_SC.uid)
  return _internal_uid();
}
inline void MSG_RetUserRankStar_SC::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  uid_ = value;
}
inline void MSG_RetUserRankStar_SC::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetUserRankStar_SC.uid)
}

// optional uint32 rank = 2;
inline bool MSG_RetUserRankStar_SC::_internal_has_rank() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetUserRankStar_SC::has_rank() const {
  return _internal_has_rank();
}
inline void MSG_RetUserRankStar_SC::clear_rank() {
  rank_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetUserRankStar_SC::_internal_rank() const {
  return rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetUserRankStar_SC::rank() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetUserRankStar_SC.rank)
  return _internal_rank();
}
inline void MSG_RetUserRankStar_SC::_internal_set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  rank_ = value;
}
inline void MSG_RetUserRankStar_SC::set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetUserRankStar_SC.rank)
}

// -------------------------------------------------------------------

// MSG_RetTeamLeftMemSize_SC

// optional uint32 team1id = 1;
inline bool MSG_RetTeamLeftMemSize_SC::_internal_has_team1id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetTeamLeftMemSize_SC::has_team1id() const {
  return _internal_has_team1id();
}
inline void MSG_RetTeamLeftMemSize_SC::clear_team1id() {
  team1id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamLeftMemSize_SC::_internal_team1id() const {
  return team1id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamLeftMemSize_SC::team1id() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetTeamLeftMemSize_SC.team1id)
  return _internal_team1id();
}
inline void MSG_RetTeamLeftMemSize_SC::_internal_set_team1id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  team1id_ = value;
}
inline void MSG_RetTeamLeftMemSize_SC::set_team1id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team1id(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetTeamLeftMemSize_SC.team1id)
}

// optional uint32 team1left = 2;
inline bool MSG_RetTeamLeftMemSize_SC::_internal_has_team1left() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetTeamLeftMemSize_SC::has_team1left() const {
  return _internal_has_team1left();
}
inline void MSG_RetTeamLeftMemSize_SC::clear_team1left() {
  team1left_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamLeftMemSize_SC::_internal_team1left() const {
  return team1left_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamLeftMemSize_SC::team1left() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetTeamLeftMemSize_SC.team1left)
  return _internal_team1left();
}
inline void MSG_RetTeamLeftMemSize_SC::_internal_set_team1left(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  team1left_ = value;
}
inline void MSG_RetTeamLeftMemSize_SC::set_team1left(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team1left(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetTeamLeftMemSize_SC.team1left)
}

// optional uint32 team2id = 3;
inline bool MSG_RetTeamLeftMemSize_SC::_internal_has_team2id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetTeamLeftMemSize_SC::has_team2id() const {
  return _internal_has_team2id();
}
inline void MSG_RetTeamLeftMemSize_SC::clear_team2id() {
  team2id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamLeftMemSize_SC::_internal_team2id() const {
  return team2id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamLeftMemSize_SC::team2id() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetTeamLeftMemSize_SC.team2id)
  return _internal_team2id();
}
inline void MSG_RetTeamLeftMemSize_SC::_internal_set_team2id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  team2id_ = value;
}
inline void MSG_RetTeamLeftMemSize_SC::set_team2id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team2id(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetTeamLeftMemSize_SC.team2id)
}

// optional uint32 team2left = 4;
inline bool MSG_RetTeamLeftMemSize_SC::_internal_has_team2left() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RetTeamLeftMemSize_SC::has_team2left() const {
  return _internal_has_team2left();
}
inline void MSG_RetTeamLeftMemSize_SC::clear_team2left() {
  team2left_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamLeftMemSize_SC::_internal_team2left() const {
  return team2left_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamLeftMemSize_SC::team2left() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetTeamLeftMemSize_SC.team2left)
  return _internal_team2left();
}
inline void MSG_RetTeamLeftMemSize_SC::_internal_set_team2left(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  team2left_ = value;
}
inline void MSG_RetTeamLeftMemSize_SC::set_team2left(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team2left(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetTeamLeftMemSize_SC.team2left)
}

// -------------------------------------------------------------------

// MSG_ReqRankPKCurStage_CS

// -------------------------------------------------------------------

// MSG_RetRankPKCurStage_SC

// required .msg.StageType curstage = 1;
inline bool MSG_RetRankPKCurStage_SC::_internal_has_curstage() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetRankPKCurStage_SC::has_curstage() const {
  return _internal_has_curstage();
}
inline void MSG_RetRankPKCurStage_SC::clear_curstage() {
  curstage_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::msg::StageType MSG_RetRankPKCurStage_SC::_internal_curstage() const {
  return static_cast< ::msg::StageType >(curstage_);
}
inline ::msg::StageType MSG_RetRankPKCurStage_SC::curstage() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRankPKCurStage_SC.curstage)
  return _internal_curstage();
}
inline void MSG_RetRankPKCurStage_SC::_internal_set_curstage(::msg::StageType value) {
  assert(::msg::StageType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  curstage_ = value;
}
inline void MSG_RetRankPKCurStage_SC::set_curstage(::msg::StageType value) {
  _internal_set_curstage(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetRankPKCurStage_SC.curstage)
}

// optional uint32 duration = 2;
inline bool MSG_RetRankPKCurStage_SC::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetRankPKCurStage_SC::has_duration() const {
  return _internal_has_duration();
}
inline void MSG_RetRankPKCurStage_SC::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRankPKCurStage_SC::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRankPKCurStage_SC::duration() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRankPKCurStage_SC.duration)
  return _internal_duration();
}
inline void MSG_RetRankPKCurStage_SC::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  duration_ = value;
}
inline void MSG_RetRankPKCurStage_SC::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetRankPKCurStage_SC.duration)
}

// optional .rankpk_msg.MSG_RetTeamCurScore_SC score = 3;
inline bool MSG_RetRankPKCurStage_SC::_internal_has_score() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || score_ != nullptr);
  return value;
}
inline bool MSG_RetRankPKCurStage_SC::has_score() const {
  return _internal_has_score();
}
inline void MSG_RetRankPKCurStage_SC::clear_score() {
  if (score_ != nullptr) score_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::rankpk_msg::MSG_RetTeamCurScore_SC& MSG_RetRankPKCurStage_SC::_internal_score() const {
  const ::rankpk_msg::MSG_RetTeamCurScore_SC* p = score_;
  return p != nullptr ? *p : *reinterpret_cast<const ::rankpk_msg::MSG_RetTeamCurScore_SC*>(
      &::rankpk_msg::_MSG_RetTeamCurScore_SC_default_instance_);
}
inline const ::rankpk_msg::MSG_RetTeamCurScore_SC& MSG_RetRankPKCurStage_SC::score() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRankPKCurStage_SC.score)
  return _internal_score();
}
inline ::rankpk_msg::MSG_RetTeamCurScore_SC* MSG_RetRankPKCurStage_SC::release_score() {
  // @@protoc_insertion_point(field_release:rankpk_msg.MSG_RetRankPKCurStage_SC.score)
  _has_bits_[0] &= ~0x00000001u;
  ::rankpk_msg::MSG_RetTeamCurScore_SC* temp = score_;
  score_ = nullptr;
  return temp;
}
inline ::rankpk_msg::MSG_RetTeamCurScore_SC* MSG_RetRankPKCurStage_SC::_internal_mutable_score() {
  _has_bits_[0] |= 0x00000001u;
  if (score_ == nullptr) {
    auto* p = CreateMaybeMessage<::rankpk_msg::MSG_RetTeamCurScore_SC>(GetArenaNoVirtual());
    score_ = p;
  }
  return score_;
}
inline ::rankpk_msg::MSG_RetTeamCurScore_SC* MSG_RetRankPKCurStage_SC::mutable_score() {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.MSG_RetRankPKCurStage_SC.score)
  return _internal_mutable_score();
}
inline void MSG_RetRankPKCurStage_SC::set_allocated_score(::rankpk_msg::MSG_RetTeamCurScore_SC* score) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete score_;
  }
  if (score) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      score = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, score, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  score_ = score;
  // @@protoc_insertion_point(field_set_allocated:rankpk_msg.MSG_RetRankPKCurStage_SC.score)
}

// -------------------------------------------------------------------

// MSG_RetPreparedNum_SC

// optional uint32 curnum = 1;
inline bool MSG_RetPreparedNum_SC::_internal_has_curnum() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetPreparedNum_SC::has_curnum() const {
  return _internal_has_curnum();
}
inline void MSG_RetPreparedNum_SC::clear_curnum() {
  curnum_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetPreparedNum_SC::_internal_curnum() const {
  return curnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetPreparedNum_SC::curnum() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetPreparedNum_SC.curnum)
  return _internal_curnum();
}
inline void MSG_RetPreparedNum_SC::_internal_set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  curnum_ = value;
}
inline void MSG_RetPreparedNum_SC::set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curnum(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetPreparedNum_SC.curnum)
}

// optional uint32 allnum = 2;
inline bool MSG_RetPreparedNum_SC::_internal_has_allnum() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetPreparedNum_SC::has_allnum() const {
  return _internal_has_allnum();
}
inline void MSG_RetPreparedNum_SC::clear_allnum() {
  allnum_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetPreparedNum_SC::_internal_allnum() const {
  return allnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetPreparedNum_SC::allnum() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetPreparedNum_SC.allnum)
  return _internal_allnum();
}
inline void MSG_RetPreparedNum_SC::_internal_set_allnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  allnum_ = value;
}
inline void MSG_RetPreparedNum_SC::set_allnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_allnum(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetPreparedNum_SC.allnum)
}

// -------------------------------------------------------------------

// MSG_RetMemPkPrepared_SC

// optional uint64 memid = 1;
inline bool MSG_RetMemPkPrepared_SC::_internal_has_memid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetMemPkPrepared_SC::has_memid() const {
  return _internal_has_memid();
}
inline void MSG_RetMemPkPrepared_SC::clear_memid() {
  memid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_RetMemPkPrepared_SC::_internal_memid() const {
  return memid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_RetMemPkPrepared_SC::memid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetMemPkPrepared_SC.memid)
  return _internal_memid();
}
inline void MSG_RetMemPkPrepared_SC::_internal_set_memid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  memid_ = value;
}
inline void MSG_RetMemPkPrepared_SC::set_memid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_memid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetMemPkPrepared_SC.memid)
}

// optional uint32 heroid = 2;
inline bool MSG_RetMemPkPrepared_SC::_internal_has_heroid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetMemPkPrepared_SC::has_heroid() const {
  return _internal_has_heroid();
}
inline void MSG_RetMemPkPrepared_SC::clear_heroid() {
  heroid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetMemPkPrepared_SC::_internal_heroid() const {
  return heroid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetMemPkPrepared_SC::heroid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetMemPkPrepared_SC.heroid)
  return _internal_heroid();
}
inline void MSG_RetMemPkPrepared_SC::_internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  heroid_ = value;
}
inline void MSG_RetMemPkPrepared_SC::set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetMemPkPrepared_SC.heroid)
}

// -------------------------------------------------------------------

// MSG_RetPKGeneralConfig_SC

// optional uint32 teampknum = 1;
inline bool MSG_RetPKGeneralConfig_SC::_internal_has_teampknum() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetPKGeneralConfig_SC::has_teampknum() const {
  return _internal_has_teampknum();
}
inline void MSG_RetPKGeneralConfig_SC::clear_teampknum() {
  teampknum_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetPKGeneralConfig_SC::_internal_teampknum() const {
  return teampknum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetPKGeneralConfig_SC::teampknum() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetPKGeneralConfig_SC.teampknum)
  return _internal_teampknum();
}
inline void MSG_RetPKGeneralConfig_SC::_internal_set_teampknum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  teampknum_ = value;
}
inline void MSG_RetPKGeneralConfig_SC::set_teampknum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_teampknum(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetPKGeneralConfig_SC.teampknum)
}

// -------------------------------------------------------------------

// MSG_RetTeamCurScore_SC

// optional uint32 team1id = 1;
inline bool MSG_RetTeamCurScore_SC::_internal_has_team1id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetTeamCurScore_SC::has_team1id() const {
  return _internal_has_team1id();
}
inline void MSG_RetTeamCurScore_SC::clear_team1id() {
  team1id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamCurScore_SC::_internal_team1id() const {
  return team1id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamCurScore_SC::team1id() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetTeamCurScore_SC.team1id)
  return _internal_team1id();
}
inline void MSG_RetTeamCurScore_SC::_internal_set_team1id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  team1id_ = value;
}
inline void MSG_RetTeamCurScore_SC::set_team1id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team1id(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetTeamCurScore_SC.team1id)
}

// optional uint32 team1score = 2;
inline bool MSG_RetTeamCurScore_SC::_internal_has_team1score() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetTeamCurScore_SC::has_team1score() const {
  return _internal_has_team1score();
}
inline void MSG_RetTeamCurScore_SC::clear_team1score() {
  team1score_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamCurScore_SC::_internal_team1score() const {
  return team1score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamCurScore_SC::team1score() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetTeamCurScore_SC.team1score)
  return _internal_team1score();
}
inline void MSG_RetTeamCurScore_SC::_internal_set_team1score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  team1score_ = value;
}
inline void MSG_RetTeamCurScore_SC::set_team1score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team1score(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetTeamCurScore_SC.team1score)
}

// optional uint32 team2id = 3;
inline bool MSG_RetTeamCurScore_SC::_internal_has_team2id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetTeamCurScore_SC::has_team2id() const {
  return _internal_has_team2id();
}
inline void MSG_RetTeamCurScore_SC::clear_team2id() {
  team2id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamCurScore_SC::_internal_team2id() const {
  return team2id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamCurScore_SC::team2id() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetTeamCurScore_SC.team2id)
  return _internal_team2id();
}
inline void MSG_RetTeamCurScore_SC::_internal_set_team2id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  team2id_ = value;
}
inline void MSG_RetTeamCurScore_SC::set_team2id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team2id(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetTeamCurScore_SC.team2id)
}

// optional uint32 team2score = 4;
inline bool MSG_RetTeamCurScore_SC::_internal_has_team2score() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RetTeamCurScore_SC::has_team2score() const {
  return _internal_has_team2score();
}
inline void MSG_RetTeamCurScore_SC::clear_team2score() {
  team2score_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamCurScore_SC::_internal_team2score() const {
  return team2score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTeamCurScore_SC::team2score() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetTeamCurScore_SC.team2score)
  return _internal_team2score();
}
inline void MSG_RetTeamCurScore_SC::_internal_set_team2score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  team2score_ = value;
}
inline void MSG_RetTeamCurScore_SC::set_team2score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team2score(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetTeamCurScore_SC.team2score)
}

// -------------------------------------------------------------------

// RankPKListItem

// optional uint32 position = 1;
inline bool RankPKListItem::_internal_has_position() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool RankPKListItem::has_position() const {
  return _internal_has_position();
}
inline void RankPKListItem::clear_position() {
  position_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKListItem::_internal_position() const {
  return position_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKListItem::position() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKListItem.position)
  return _internal_position();
}
inline void RankPKListItem::_internal_set_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  position_ = value;
}
inline void RankPKListItem::set_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_position(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKListItem.position)
}

// optional uint64 charid = 2;
inline bool RankPKListItem::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool RankPKListItem::has_charid() const {
  return _internal_has_charid();
}
inline void RankPKListItem::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RankPKListItem::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RankPKListItem::charid() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKListItem.charid)
  return _internal_charid();
}
inline void RankPKListItem::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  charid_ = value;
}
inline void RankPKListItem::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKListItem.charid)
}

// optional string name = 3;
inline bool RankPKListItem::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RankPKListItem::has_name() const {
  return _internal_has_name();
}
inline void RankPKListItem::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RankPKListItem::name() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKListItem.name)
  return _internal_name();
}
inline void RankPKListItem::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKListItem.name)
}
inline std::string* RankPKListItem::mutable_name() {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.RankPKListItem.name)
  return _internal_mutable_name();
}
inline const std::string& RankPKListItem::_internal_name() const {
  return name_.GetNoArena();
}
inline void RankPKListItem::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void RankPKListItem::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rankpk_msg.RankPKListItem.name)
}
inline void RankPKListItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rankpk_msg.RankPKListItem.name)
}
inline void RankPKListItem::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rankpk_msg.RankPKListItem.name)
}
inline std::string* RankPKListItem::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RankPKListItem::release_name() {
  // @@protoc_insertion_point(field_release:rankpk_msg.RankPKListItem.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RankPKListItem::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:rankpk_msg.RankPKListItem.name)
}

// optional uint32 ranklevel = 4;
inline bool RankPKListItem::_internal_has_ranklevel() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool RankPKListItem::has_ranklevel() const {
  return _internal_has_ranklevel();
}
inline void RankPKListItem::clear_ranklevel() {
  ranklevel_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKListItem::_internal_ranklevel() const {
  return ranklevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKListItem::ranklevel() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKListItem.ranklevel)
  return _internal_ranklevel();
}
inline void RankPKListItem::_internal_set_ranklevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  ranklevel_ = value;
}
inline void RankPKListItem::set_ranklevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ranklevel(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKListItem.ranklevel)
}

// optional string guildname = 5;
inline bool RankPKListItem::_internal_has_guildname() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RankPKListItem::has_guildname() const {
  return _internal_has_guildname();
}
inline void RankPKListItem::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& RankPKListItem::guildname() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKListItem.guildname)
  return _internal_guildname();
}
inline void RankPKListItem::set_guildname(const std::string& value) {
  _internal_set_guildname(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKListItem.guildname)
}
inline std::string* RankPKListItem::mutable_guildname() {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.RankPKListItem.guildname)
  return _internal_mutable_guildname();
}
inline const std::string& RankPKListItem::_internal_guildname() const {
  return guildname_.GetNoArena();
}
inline void RankPKListItem::_internal_set_guildname(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void RankPKListItem::set_guildname(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  guildname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rankpk_msg.RankPKListItem.guildname)
}
inline void RankPKListItem::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rankpk_msg.RankPKListItem.guildname)
}
inline void RankPKListItem::set_guildname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rankpk_msg.RankPKListItem.guildname)
}
inline std::string* RankPKListItem::_internal_mutable_guildname() {
  _has_bits_[0] |= 0x00000002u;
  return guildname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RankPKListItem::release_guildname() {
  // @@protoc_insertion_point(field_release:rankpk_msg.RankPKListItem.guildname)
  if (!_internal_has_guildname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return guildname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RankPKListItem::set_allocated_guildname(std::string* guildname) {
  if (guildname != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  guildname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:rankpk_msg.RankPKListItem.guildname)
}

// optional uint32 winbattle = 6;
inline bool RankPKListItem::_internal_has_winbattle() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool RankPKListItem::has_winbattle() const {
  return _internal_has_winbattle();
}
inline void RankPKListItem::clear_winbattle() {
  winbattle_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKListItem::_internal_winbattle() const {
  return winbattle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKListItem::winbattle() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKListItem.winbattle)
  return _internal_winbattle();
}
inline void RankPKListItem::_internal_set_winbattle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  winbattle_ = value;
}
inline void RankPKListItem::set_winbattle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_winbattle(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKListItem.winbattle)
}

// optional uint32 winrate = 7;
inline bool RankPKListItem::_internal_has_winrate() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool RankPKListItem::has_winrate() const {
  return _internal_has_winrate();
}
inline void RankPKListItem::clear_winrate() {
  winrate_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKListItem::_internal_winrate() const {
  return winrate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RankPKListItem::winrate() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.RankPKListItem.winrate)
  return _internal_winrate();
}
inline void RankPKListItem::_internal_set_winrate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  winrate_ = value;
}
inline void RankPKListItem::set_winrate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_winrate(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.RankPKListItem.winrate)
}

// -------------------------------------------------------------------

// MSG_ReqRankPKList_CS

// optional .rankpk_msg.RankPKListType type = 1;
inline bool MSG_ReqRankPKList_CS::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqRankPKList_CS::has_type() const {
  return _internal_has_type();
}
inline void MSG_ReqRankPKList_CS::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::rankpk_msg::RankPKListType MSG_ReqRankPKList_CS::_internal_type() const {
  return static_cast< ::rankpk_msg::RankPKListType >(type_);
}
inline ::rankpk_msg::RankPKListType MSG_ReqRankPKList_CS::type() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_ReqRankPKList_CS.type)
  return _internal_type();
}
inline void MSG_ReqRankPKList_CS::_internal_set_type(::rankpk_msg::RankPKListType value) {
  assert(::rankpk_msg::RankPKListType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
}
inline void MSG_ReqRankPKList_CS::set_type(::rankpk_msg::RankPKListType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_ReqRankPKList_CS.type)
}

// -------------------------------------------------------------------

// MSG_RetRankPKList_SC

// optional .rankpk_msg.RankPKListType type = 1;
inline bool MSG_RetRankPKList_SC::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetRankPKList_SC::has_type() const {
  return _internal_has_type();
}
inline void MSG_RetRankPKList_SC::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::rankpk_msg::RankPKListType MSG_RetRankPKList_SC::_internal_type() const {
  return static_cast< ::rankpk_msg::RankPKListType >(type_);
}
inline ::rankpk_msg::RankPKListType MSG_RetRankPKList_SC::type() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRankPKList_SC.type)
  return _internal_type();
}
inline void MSG_RetRankPKList_SC::_internal_set_type(::rankpk_msg::RankPKListType value) {
  assert(::rankpk_msg::RankPKListType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
}
inline void MSG_RetRankPKList_SC::set_type(::rankpk_msg::RankPKListType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetRankPKList_SC.type)
}

// optional uint32 myposition = 2;
inline bool MSG_RetRankPKList_SC::_internal_has_myposition() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetRankPKList_SC::has_myposition() const {
  return _internal_has_myposition();
}
inline void MSG_RetRankPKList_SC::clear_myposition() {
  myposition_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRankPKList_SC::_internal_myposition() const {
  return myposition_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRankPKList_SC::myposition() const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRankPKList_SC.myposition)
  return _internal_myposition();
}
inline void MSG_RetRankPKList_SC::_internal_set_myposition(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  myposition_ = value;
}
inline void MSG_RetRankPKList_SC::set_myposition(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_myposition(value);
  // @@protoc_insertion_point(field_set:rankpk_msg.MSG_RetRankPKList_SC.myposition)
}

// repeated .rankpk_msg.RankPKListItem data = 3;
inline int MSG_RetRankPKList_SC::_internal_data_size() const {
  return data_.size();
}
inline int MSG_RetRankPKList_SC::data_size() const {
  return _internal_data_size();
}
inline void MSG_RetRankPKList_SC::clear_data() {
  data_.Clear();
}
inline ::rankpk_msg::RankPKListItem* MSG_RetRankPKList_SC::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:rankpk_msg.MSG_RetRankPKList_SC.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKListItem >*
MSG_RetRankPKList_SC::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:rankpk_msg.MSG_RetRankPKList_SC.data)
  return &data_;
}
inline const ::rankpk_msg::RankPKListItem& MSG_RetRankPKList_SC::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::rankpk_msg::RankPKListItem& MSG_RetRankPKList_SC::data(int index) const {
  // @@protoc_insertion_point(field_get:rankpk_msg.MSG_RetRankPKList_SC.data)
  return _internal_data(index);
}
inline ::rankpk_msg::RankPKListItem* MSG_RetRankPKList_SC::_internal_add_data() {
  return data_.Add();
}
inline ::rankpk_msg::RankPKListItem* MSG_RetRankPKList_SC::add_data() {
  // @@protoc_insertion_point(field_add:rankpk_msg.MSG_RetRankPKList_SC.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rankpk_msg::RankPKListItem >&
MSG_RetRankPKList_SC::data() const {
  // @@protoc_insertion_point(field_list:rankpk_msg.MSG_RetRankPKList_SC.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace rankpk_msg

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::rankpk_msg::RankPKListType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rankpk_msg::RankPKListType>() {
  return ::rankpk_msg::RankPKListType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_rankpk_5fmsg_2eproto
