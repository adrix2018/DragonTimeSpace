// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: textmodel.proto

#include "textmodel.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_textmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TextModelContentProto_textmodel_2eproto;
namespace TextModelpackage {
class TextModelContentProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TextModelContentProto> _instance;
} _TextModelContentProto_default_instance_;
class TextModelContentListProtoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TextModelContentListProto> _instance;
} _TextModelContentListProto_default_instance_;
}  // namespace TextModelpackage
static void InitDefaultsscc_info_TextModelContentListProto_textmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TextModelpackage::_TextModelContentListProto_default_instance_;
    new (ptr) ::TextModelpackage::TextModelContentListProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TextModelpackage::TextModelContentListProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TextModelContentListProto_textmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TextModelContentListProto_textmodel_2eproto}, {
      &scc_info_TextModelContentProto_textmodel_2eproto.base,}};

static void InitDefaultsscc_info_TextModelContentProto_textmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TextModelpackage::_TextModelContentProto_default_instance_;
    new (ptr) ::TextModelpackage::TextModelContentProto();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TextModelpackage::TextModelContentProto::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TextModelContentProto_textmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TextModelContentProto_textmodel_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_textmodel_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_textmodel_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_textmodel_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_textmodel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::TextModelpackage::TextModelContentProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TextModelpackage::TextModelContentProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TextModelpackage::TextModelContentProto, modelbegin_),
  PROTOBUF_FIELD_OFFSET(::TextModelpackage::TextModelContentProto, modelend_),
  PROTOBUF_FIELD_OFFSET(::TextModelpackage::TextModelContentProto, fontsize_),
  PROTOBUF_FIELD_OFFSET(::TextModelpackage::TextModelContentProto, fontname_),
  0,
  1,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::TextModelpackage::TextModelContentListProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::TextModelpackage::TextModelContentListProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TextModelpackage::TextModelContentListProto, key_),
  PROTOBUF_FIELD_OFFSET(::TextModelpackage::TextModelContentListProto, modellist_),
  ~0u,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::TextModelpackage::TextModelContentProto)},
  { 13, 20, sizeof(::TextModelpackage::TextModelContentListProto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TextModelpackage::_TextModelContentProto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TextModelpackage::_TextModelContentListProto_default_instance_),
};

const char descriptor_table_protodef_textmodel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017textmodel.proto\022\020TextModelpackage\"a\n\025T"
  "extModelContentProto\022\022\n\nmodelBegin\030\001 \001(\t"
  "\022\020\n\010modelEnd\030\002 \001(\t\022\020\n\010fontSize\030\003 \001(\r\022\020\n\010"
  "fontName\030\004 \001(\t\"d\n\031TextModelContentListPr"
  "oto\022\013\n\003key\030\001 \003(\t\022:\n\tmodelList\030\002 \003(\0132\'.Te"
  "xtModelpackage.TextModelContentProto"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_textmodel_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_textmodel_2eproto_sccs[2] = {
  &scc_info_TextModelContentListProto_textmodel_2eproto.base,
  &scc_info_TextModelContentProto_textmodel_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_textmodel_2eproto_once;
static bool descriptor_table_textmodel_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_textmodel_2eproto = {
  &descriptor_table_textmodel_2eproto_initialized, descriptor_table_protodef_textmodel_2eproto, "textmodel.proto", 236,
  &descriptor_table_textmodel_2eproto_once, descriptor_table_textmodel_2eproto_sccs, descriptor_table_textmodel_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_textmodel_2eproto::offsets,
  file_level_metadata_textmodel_2eproto, 2, file_level_enum_descriptors_textmodel_2eproto, file_level_service_descriptors_textmodel_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_textmodel_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_textmodel_2eproto)), true);
namespace TextModelpackage {

// ===================================================================

void TextModelContentProto::InitAsDefaultInstance() {
}
class TextModelContentProto::_Internal {
 public:
  using HasBits = decltype(std::declval<TextModelContentProto>()._has_bits_);
  static void set_has_modelbegin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_modelend(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fontsize(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_fontname(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

TextModelContentProto::TextModelContentProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TextModelpackage.TextModelContentProto)
}
TextModelContentProto::TextModelContentProto(const TextModelContentProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  modelbegin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_modelbegin()) {
    modelbegin_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.modelbegin_);
  }
  modelend_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_modelend()) {
    modelend_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.modelend_);
  }
  fontname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_fontname()) {
    fontname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fontname_);
  }
  fontsize_ = from.fontsize_;
  // @@protoc_insertion_point(copy_constructor:TextModelpackage.TextModelContentProto)
}

void TextModelContentProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TextModelContentProto_textmodel_2eproto.base);
  modelbegin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelend_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fontname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fontsize_ = 0u;
}

TextModelContentProto::~TextModelContentProto() {
  // @@protoc_insertion_point(destructor:TextModelpackage.TextModelContentProto)
  SharedDtor();
}

void TextModelContentProto::SharedDtor() {
  modelbegin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelend_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fontname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TextModelContentProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TextModelContentProto& TextModelContentProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TextModelContentProto_textmodel_2eproto.base);
  return *internal_default_instance();
}


void TextModelContentProto::Clear() {
// @@protoc_insertion_point(message_clear_start:TextModelpackage.TextModelContentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      modelbegin_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      modelend_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      fontname_.ClearNonDefaultToEmptyNoArena();
    }
  }
  fontsize_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TextModelContentProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string modelBegin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_modelbegin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TextModelpackage.TextModelContentProto.modelBegin");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string modelEnd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_modelend();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TextModelpackage.TextModelContentProto.modelEnd");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 fontSize = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_fontsize(&has_bits);
          fontsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string fontName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_fontname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TextModelpackage.TextModelContentProto.fontName");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TextModelContentProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TextModelpackage.TextModelContentProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string modelBegin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_modelbegin().data(), static_cast<int>(this->_internal_modelbegin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "TextModelpackage.TextModelContentProto.modelBegin");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_modelbegin(), target);
  }

  // optional string modelEnd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_modelend().data(), static_cast<int>(this->_internal_modelend().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "TextModelpackage.TextModelContentProto.modelEnd");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_modelend(), target);
  }

  // optional uint32 fontSize = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_fontsize(), target);
  }

  // optional string fontName = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_fontname().data(), static_cast<int>(this->_internal_fontname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "TextModelpackage.TextModelContentProto.fontName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_fontname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TextModelpackage.TextModelContentProto)
  return target;
}

size_t TextModelContentProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TextModelpackage.TextModelContentProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string modelBegin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_modelbegin());
    }

    // optional string modelEnd = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_modelend());
    }

    // optional string fontName = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_fontname());
    }

    // optional uint32 fontSize = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_fontsize());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextModelContentProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TextModelpackage.TextModelContentProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TextModelContentProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TextModelContentProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TextModelpackage.TextModelContentProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TextModelpackage.TextModelContentProto)
    MergeFrom(*source);
  }
}

void TextModelContentProto::MergeFrom(const TextModelContentProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TextModelpackage.TextModelContentProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      modelbegin_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.modelbegin_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      modelend_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.modelend_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      fontname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fontname_);
    }
    if (cached_has_bits & 0x00000008u) {
      fontsize_ = from.fontsize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TextModelContentProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TextModelpackage.TextModelContentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextModelContentProto::CopyFrom(const TextModelContentProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TextModelpackage.TextModelContentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextModelContentProto::IsInitialized() const {
  return true;
}

void TextModelContentProto::InternalSwap(TextModelContentProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  modelbegin_.Swap(&other->modelbegin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modelend_.Swap(&other->modelend_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fontname_.Swap(&other->fontname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(fontsize_, other->fontsize_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TextModelContentProto::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TextModelContentListProto::InitAsDefaultInstance() {
}
class TextModelContentListProto::_Internal {
 public:
  using HasBits = decltype(std::declval<TextModelContentListProto>()._has_bits_);
};

TextModelContentListProto::TextModelContentListProto()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TextModelpackage.TextModelContentListProto)
}
TextModelContentListProto::TextModelContentListProto(const TextModelContentListProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      key_(from.key_),
      modellist_(from.modellist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TextModelpackage.TextModelContentListProto)
}

void TextModelContentListProto::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TextModelContentListProto_textmodel_2eproto.base);
}

TextModelContentListProto::~TextModelContentListProto() {
  // @@protoc_insertion_point(destructor:TextModelpackage.TextModelContentListProto)
  SharedDtor();
}

void TextModelContentListProto::SharedDtor() {
}

void TextModelContentListProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TextModelContentListProto& TextModelContentListProto::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TextModelContentListProto_textmodel_2eproto.base);
  return *internal_default_instance();
}


void TextModelContentListProto::Clear() {
// @@protoc_insertion_point(message_clear_start:TextModelpackage.TextModelContentListProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.Clear();
  modellist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TextModelContentListProto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_key();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "TextModelpackage.TextModelContentListProto.key");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .TextModelpackage.TextModelContentProto modelList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_modellist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TextModelContentListProto::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TextModelpackage.TextModelContentListProto)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string key = 1;
  for (int i = 0, n = this->_internal_key_size(); i < n; i++) {
    const auto& s = this->_internal_key(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "TextModelpackage.TextModelContentListProto.key");
    target = stream->WriteString(1, s, target);
  }

  // repeated .TextModelpackage.TextModelContentProto modelList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_modellist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_modellist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TextModelpackage.TextModelContentListProto)
  return target;
}

size_t TextModelContentListProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TextModelpackage.TextModelContentListProto)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string key = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(key_.size());
  for (int i = 0, n = key_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      key_.Get(i));
  }

  // repeated .TextModelpackage.TextModelContentProto modelList = 2;
  total_size += 1UL * this->_internal_modellist_size();
  for (const auto& msg : this->modellist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextModelContentListProto::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TextModelpackage.TextModelContentListProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TextModelContentListProto* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TextModelContentListProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TextModelpackage.TextModelContentListProto)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TextModelpackage.TextModelContentListProto)
    MergeFrom(*source);
  }
}

void TextModelContentListProto::MergeFrom(const TextModelContentListProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TextModelpackage.TextModelContentListProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
  modellist_.MergeFrom(from.modellist_);
}

void TextModelContentListProto::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TextModelpackage.TextModelContentListProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextModelContentListProto::CopyFrom(const TextModelContentListProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TextModelpackage.TextModelContentListProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextModelContentListProto::IsInitialized() const {
  return true;
}

void TextModelContentListProto::InternalSwap(TextModelContentListProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.InternalSwap(&other->key_);
  modellist_.InternalSwap(&other->modellist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TextModelContentListProto::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace TextModelpackage
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TextModelpackage::TextModelContentProto* Arena::CreateMaybeMessage< ::TextModelpackage::TextModelContentProto >(Arena* arena) {
  return Arena::CreateInternal< ::TextModelpackage::TextModelContentProto >(arena);
}
template<> PROTOBUF_NOINLINE ::TextModelpackage::TextModelContentListProto* Arena::CreateMaybeMessage< ::TextModelpackage::TextModelContentListProto >(Arena* arena) {
  return Arena::CreateInternal< ::TextModelpackage::TextModelContentListProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
