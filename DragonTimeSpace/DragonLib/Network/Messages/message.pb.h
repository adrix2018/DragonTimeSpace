// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_message_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_message_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[100]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_2eproto;
namespace msg {
class AttributeData;
class AttributeDataDefaultTypeInternal;
extern AttributeDataDefaultTypeInternal _AttributeData_default_instance_;
class CharacterBaseData;
class CharacterBaseDataDefaultTypeInternal;
extern CharacterBaseDataDefaultTypeInternal _CharacterBaseData_default_instance_;
class CharacterFightData;
class CharacterFightDataDefaultTypeInternal;
extern CharacterFightDataDefaultTypeInternal _CharacterFightData_default_instance_;
class CharacterMainData;
class CharacterMainDataDefaultTypeInternal;
extern CharacterMainDataDefaultTypeInternal _CharacterMainData_default_instance_;
class CharacterMapData;
class CharacterMapDataDefaultTypeInternal;
extern CharacterMapDataDefaultTypeInternal _CharacterMapData_default_instance_;
class CharacterMapShow;
class CharacterMapShowDefaultTypeInternal;
extern CharacterMapShowDefaultTypeInternal _CharacterMapShow_default_instance_;
class EntryIDType;
class EntryIDTypeDefaultTypeInternal;
extern EntryIDTypeDefaultTypeInternal _EntryIDType_default_instance_;
class FloatMovePos;
class FloatMovePosDefaultTypeInternal;
extern FloatMovePosDefaultTypeInternal _FloatMovePos_default_instance_;
class FuncNpcData;
class FuncNpcDataDefaultTypeInternal;
extern FuncNpcDataDefaultTypeInternal _FuncNpcData_default_instance_;
class LineItem;
class LineItemDefaultTypeInternal;
extern LineItemDefaultTypeInternal _LineItem_default_instance_;
class MSG_ACCOUNT_SEC_PASSWD_SC;
class MSG_ACCOUNT_SEC_PASSWD_SCDefaultTypeInternal;
extern MSG_ACCOUNT_SEC_PASSWD_SCDefaultTypeInternal _MSG_ACCOUNT_SEC_PASSWD_SC_default_instance_;
class MSG_AttackTargetChange_SC;
class MSG_AttackTargetChange_SCDefaultTypeInternal;
extern MSG_AttackTargetChange_SCDefaultTypeInternal _MSG_AttackTargetChange_SC_default_instance_;
class MSG_ChangeName_CS;
class MSG_ChangeName_CSDefaultTypeInternal;
extern MSG_ChangeName_CSDefaultTypeInternal _MSG_ChangeName_CS_default_instance_;
class MSG_Create_Role_CS;
class MSG_Create_Role_CSDefaultTypeInternal;
extern MSG_Create_Role_CSDefaultTypeInternal _MSG_Create_Role_CS_default_instance_;
class MSG_DataCharacterMain_SC;
class MSG_DataCharacterMain_SCDefaultTypeInternal;
extern MSG_DataCharacterMain_SCDefaultTypeInternal _MSG_DataCharacterMain_SC_default_instance_;
class MSG_NEW_ROLE_CUTSCENE_SCS;
class MSG_NEW_ROLE_CUTSCENE_SCSDefaultTypeInternal;
extern MSG_NEW_ROLE_CUTSCENE_SCSDefaultTypeInternal _MSG_NEW_ROLE_CUTSCENE_SCS_default_instance_;
class MSG_NPCHatredList_SC;
class MSG_NPCHatredList_SCDefaultTypeInternal;
extern MSG_NPCHatredList_SCDefaultTypeInternal _MSG_NPCHatredList_SC_default_instance_;
class MSG_NoticeClientAllLines_SC;
class MSG_NoticeClientAllLines_SCDefaultTypeInternal;
extern MSG_NoticeClientAllLines_SCDefaultTypeInternal _MSG_NoticeClientAllLines_SC_default_instance_;
class MSG_NotifyAccountReuse;
class MSG_NotifyAccountReuseDefaultTypeInternal;
extern MSG_NotifyAccountReuseDefaultTypeInternal _MSG_NotifyAccountReuse_default_instance_;
class MSG_NotifyAntiAddict_SC;
class MSG_NotifyAntiAddict_SCDefaultTypeInternal;
extern MSG_NotifyAntiAddict_SCDefaultTypeInternal _MSG_NotifyAntiAddict_SC_default_instance_;
class MSG_Notify_SceneLoaded_CS;
class MSG_Notify_SceneLoaded_CSDefaultTypeInternal;
extern MSG_Notify_SceneLoaded_CSDefaultTypeInternal _MSG_Notify_SceneLoaded_CS_default_instance_;
class MSG_OnUserJump_CSC;
class MSG_OnUserJump_CSCDefaultTypeInternal;
extern MSG_OnUserJump_CSCDefaultTypeInternal _MSG_OnUserJump_CSC_default_instance_;
class MSG_ReqEntrySelectState_CS;
class MSG_ReqEntrySelectState_CSDefaultTypeInternal;
extern MSG_ReqEntrySelectState_CSDefaultTypeInternal _MSG_ReqEntrySelectState_CS_default_instance_;
class MSG_ReqHeroAttributeData_CS;
class MSG_ReqHeroAttributeData_CSDefaultTypeInternal;
extern MSG_ReqHeroAttributeData_CSDefaultTypeInternal _MSG_ReqHeroAttributeData_CS_default_instance_;
class MSG_ReqJumptoLeaderLine_CS;
class MSG_ReqJumptoLeaderLine_CSDefaultTypeInternal;
extern MSG_ReqJumptoLeaderLine_CSDefaultTypeInternal _MSG_ReqJumptoLeaderLine_CS_default_instance_;
class MSG_ReqQueryBalance_CS;
class MSG_ReqQueryBalance_CSDefaultTypeInternal;
extern MSG_ReqQueryBalance_CSDefaultTypeInternal _MSG_ReqQueryBalance_CS_default_instance_;
class MSG_ReqRecharge_CS;
class MSG_ReqRecharge_CSDefaultTypeInternal;
extern MSG_ReqRecharge_CSDefaultTypeInternal _MSG_ReqRecharge_CS_default_instance_;
class MSG_ReqUpdateAntiAddict_CS;
class MSG_ReqUpdateAntiAddict_CSDefaultTypeInternal;
extern MSG_ReqUpdateAntiAddict_CSDefaultTypeInternal _MSG_ReqUpdateAntiAddict_CS_default_instance_;
class MSG_Req_Back_to_Select_CS;
class MSG_Req_Back_to_Select_CSDefaultTypeInternal;
extern MSG_Req_Back_to_Select_CSDefaultTypeInternal _MSG_Req_Back_to_Select_CS_default_instance_;
class MSG_Req_Delete_Char_CSC;
class MSG_Req_Delete_Char_CSCDefaultTypeInternal;
extern MSG_Req_Delete_Char_CSCDefaultTypeInternal _MSG_Req_Delete_Char_CSC_default_instance_;
class MSG_Req_IS_NICKNAME_REPEATED_CSC;
class MSG_Req_IS_NICKNAME_REPEATED_CSCDefaultTypeInternal;
extern MSG_Req_IS_NICKNAME_REPEATED_CSCDefaultTypeInternal _MSG_Req_IS_NICKNAME_REPEATED_CSC_default_instance_;
class MSG_Req_Main_Data_CS;
class MSG_Req_Main_Data_CSDefaultTypeInternal;
extern MSG_Req_Main_Data_CSDefaultTypeInternal _MSG_Req_Main_Data_CS_default_instance_;
class MSG_Req_Move_CS;
class MSG_Req_Move_CSDefaultTypeInternal;
extern MSG_Req_Move_CSDefaultTypeInternal _MSG_Req_Move_CS_default_instance_;
class MSG_Req_Ping_CS;
class MSG_Req_Ping_CSDefaultTypeInternal;
extern MSG_Req_Ping_CSDefaultTypeInternal _MSG_Req_Ping_CS_default_instance_;
class MSG_Req_SelectCharToLogin_CS;
class MSG_Req_SelectCharToLogin_CSDefaultTypeInternal;
extern MSG_Req_SelectCharToLogin_CSDefaultTypeInternal _MSG_Req_SelectCharToLogin_CS_default_instance_;
class MSG_Req_Summon_Npc_CS;
class MSG_Req_Summon_Npc_CSDefaultTypeInternal;
extern MSG_Req_Summon_Npc_CSDefaultTypeInternal _MSG_Req_Summon_Npc_CS_default_instance_;
class MSG_Req_Syn_MoveState_CS;
class MSG_Req_Syn_MoveState_CSDefaultTypeInternal;
extern MSG_Req_Syn_MoveState_CSDefaultTypeInternal _MSG_Req_Syn_MoveState_CS_default_instance_;
class MSG_Req_TELE_PORT_CS;
class MSG_Req_TELE_PORT_CSDefaultTypeInternal;
extern MSG_Req_TELE_PORT_CSDefaultTypeInternal _MSG_Req_TELE_PORT_CS_default_instance_;
class MSG_Req_Test_Network_CS;
class MSG_Req_Test_Network_CSDefaultTypeInternal;
extern MSG_Req_Test_Network_CSDefaultTypeInternal _MSG_Req_Test_Network_CS_default_instance_;
class MSG_Req_Use_GM_CS;
class MSG_Req_Use_GM_CSDefaultTypeInternal;
extern MSG_Req_Use_GM_CSDefaultTypeInternal _MSG_Req_Use_GM_CS_default_instance_;
class MSG_Req_UserGameTime_SC;
class MSG_Req_UserGameTime_SCDefaultTypeInternal;
extern MSG_Req_UserGameTime_SCDefaultTypeInternal _MSG_Req_UserGameTime_SC_default_instance_;
class MSG_RetDiffLineOfLeader_SC;
class MSG_RetDiffLineOfLeader_SCDefaultTypeInternal;
extern MSG_RetDiffLineOfLeader_SCDefaultTypeInternal _MSG_RetDiffLineOfLeader_SC_default_instance_;
class MSG_RetEntrySelectState_SC;
class MSG_RetEntrySelectState_SCDefaultTypeInternal;
extern MSG_RetEntrySelectState_SCDefaultTypeInternal _MSG_RetEntrySelectState_SC_default_instance_;
class MSG_RetHeroAttributeData_SC;
class MSG_RetHeroAttributeData_SCDefaultTypeInternal;
extern MSG_RetHeroAttributeData_SCDefaultTypeInternal _MSG_RetHeroAttributeData_SC_default_instance_;
class MSG_RetHpMpToSelects_SC;
class MSG_RetHpMpToSelects_SCDefaultTypeInternal;
extern MSG_RetHpMpToSelects_SCDefaultTypeInternal _MSG_RetHpMpToSelects_SC_default_instance_;
class MSG_RetNinePlayerLevelUp_SC;
class MSG_RetNinePlayerLevelUp_SCDefaultTypeInternal;
extern MSG_RetNinePlayerLevelUp_SCDefaultTypeInternal _MSG_RetNinePlayerLevelUp_SC_default_instance_;
class MSG_RetNpcDir_SC;
class MSG_RetNpcDir_SCDefaultTypeInternal;
extern MSG_RetNpcDir_SCDefaultTypeInternal _MSG_RetNpcDir_SC_default_instance_;
class MSG_RetNpcWarpMove_SC;
class MSG_RetNpcWarpMove_SCDefaultTypeInternal;
extern MSG_RetNpcWarpMove_SCDefaultTypeInternal _MSG_RetNpcWarpMove_SC_default_instance_;
class MSG_RetQueryBalance_SC;
class MSG_RetQueryBalance_SCDefaultTypeInternal;
extern MSG_RetQueryBalance_SCDefaultTypeInternal _MSG_RetQueryBalance_SC_default_instance_;
class MSG_RetRecharge_SC;
class MSG_RetRecharge_SCDefaultTypeInternal;
extern MSG_RetRecharge_SCDefaultTypeInternal _MSG_RetRecharge_SC_default_instance_;
class MSG_Ret_ChangeName_SC;
class MSG_Ret_ChangeName_SCDefaultTypeInternal;
extern MSG_Ret_ChangeName_SCDefaultTypeInternal _MSG_Ret_ChangeName_SC_default_instance_;
class MSG_Ret_ClearState_SC;
class MSG_Ret_ClearState_SCDefaultTypeInternal;
extern MSG_Ret_ClearState_SCDefaultTypeInternal _MSG_Ret_ClearState_SC_default_instance_;
class MSG_Ret_Common_Error_SC;
class MSG_Ret_Common_Error_SCDefaultTypeInternal;
extern MSG_Ret_Common_Error_SCDefaultTypeInternal _MSG_Ret_Common_Error_SC_default_instance_;
class MSG_Ret_Common_Tips_SC;
class MSG_Ret_Common_Tips_SCDefaultTypeInternal;
extern MSG_Ret_Common_Tips_SCDefaultTypeInternal _MSG_Ret_Common_Tips_SC_default_instance_;
class MSG_Ret_Find_Path_End_SC;
class MSG_Ret_Find_Path_End_SCDefaultTypeInternal;
extern MSG_Ret_Find_Path_End_SCDefaultTypeInternal _MSG_Ret_Find_Path_End_SC_default_instance_;
class MSG_Ret_Find_Path_SC;
class MSG_Ret_Find_Path_SCDefaultTypeInternal;
extern MSG_Ret_Find_Path_SCDefaultTypeInternal _MSG_Ret_Find_Path_SC_default_instance_;
class MSG_Ret_GameTime_SC;
class MSG_Ret_GameTime_SCDefaultTypeInternal;
extern MSG_Ret_GameTime_SCDefaultTypeInternal _MSG_Ret_GameTime_SC_default_instance_;
class MSG_Ret_LoginOnReturnCharList_SC;
class MSG_Ret_LoginOnReturnCharList_SCDefaultTypeInternal;
extern MSG_Ret_LoginOnReturnCharList_SCDefaultTypeInternal _MSG_Ret_LoginOnReturnCharList_SC_default_instance_;
class MSG_Ret_MapScreenBatchRefreshNpc_SC;
class MSG_Ret_MapScreenBatchRefreshNpc_SCDefaultTypeInternal;
extern MSG_Ret_MapScreenBatchRefreshNpc_SCDefaultTypeInternal _MSG_Ret_MapScreenBatchRefreshNpc_SC_default_instance_;
class MSG_Ret_MapScreenBatchRemoveCharacter_SC;
class MSG_Ret_MapScreenBatchRemoveCharacter_SCDefaultTypeInternal;
extern MSG_Ret_MapScreenBatchRemoveCharacter_SCDefaultTypeInternal _MSG_Ret_MapScreenBatchRemoveCharacter_SC_default_instance_;
class MSG_Ret_MapScreenBatchRemoveNpc_SC;
class MSG_Ret_MapScreenBatchRemoveNpc_SCDefaultTypeInternal;
extern MSG_Ret_MapScreenBatchRemoveNpc_SCDefaultTypeInternal _MSG_Ret_MapScreenBatchRemoveNpc_SC_default_instance_;
class MSG_Ret_MapScreenFuncNpc_SC;
class MSG_Ret_MapScreenFuncNpc_SCDefaultTypeInternal;
extern MSG_Ret_MapScreenFuncNpc_SCDefaultTypeInternal _MSG_Ret_MapScreenFuncNpc_SC_default_instance_;
class MSG_Ret_MapScreenRefreshCharacter_SC;
class MSG_Ret_MapScreenRefreshCharacter_SCDefaultTypeInternal;
extern MSG_Ret_MapScreenRefreshCharacter_SCDefaultTypeInternal _MSG_Ret_MapScreenRefreshCharacter_SC_default_instance_;
class MSG_Ret_MapScreenRefreshNpc_SC;
class MSG_Ret_MapScreenRefreshNpc_SCDefaultTypeInternal;
extern MSG_Ret_MapScreenRefreshNpc_SCDefaultTypeInternal _MSG_Ret_MapScreenRefreshNpc_SC_default_instance_;
class MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC;
class MSG_Ret_MapScreenRemoveCharacterShowCorpse_SCDefaultTypeInternal;
extern MSG_Ret_MapScreenRemoveCharacterShowCorpse_SCDefaultTypeInternal _MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC_default_instance_;
class MSG_Ret_MapScreenRemoveCharacter_SC;
class MSG_Ret_MapScreenRemoveCharacter_SCDefaultTypeInternal;
extern MSG_Ret_MapScreenRemoveCharacter_SCDefaultTypeInternal _MSG_Ret_MapScreenRemoveCharacter_SC_default_instance_;
class MSG_Ret_MapScreenRemoveNpc_SC;
class MSG_Ret_MapScreenRemoveNpc_SCDefaultTypeInternal;
extern MSG_Ret_MapScreenRemoveNpc_SCDefaultTypeInternal _MSG_Ret_MapScreenRemoveNpc_SC_default_instance_;
class MSG_Ret_Move_Failed_SC;
class MSG_Ret_Move_Failed_SCDefaultTypeInternal;
extern MSG_Ret_Move_Failed_SCDefaultTypeInternal _MSG_Ret_Move_Failed_SC_default_instance_;
class MSG_Ret_Move_SC;
class MSG_Ret_Move_SCDefaultTypeInternal;
extern MSG_Ret_Move_SCDefaultTypeInternal _MSG_Ret_Move_SC_default_instance_;
class MSG_Ret_NineScreenRefreshPlayer_SC;
class MSG_Ret_NineScreenRefreshPlayer_SCDefaultTypeInternal;
extern MSG_Ret_NineScreenRefreshPlayer_SCDefaultTypeInternal _MSG_Ret_NineScreenRefreshPlayer_SC_default_instance_;
class MSG_Ret_NotifyUserKickout_SC;
class MSG_Ret_NotifyUserKickout_SCDefaultTypeInternal;
extern MSG_Ret_NotifyUserKickout_SCDefaultTypeInternal _MSG_Ret_NotifyUserKickout_SC_default_instance_;
class MSG_Ret_QueueInfo_SC;
class MSG_Ret_QueueInfo_SCDefaultTypeInternal;
extern MSG_Ret_QueueInfo_SCDefaultTypeInternal _MSG_Ret_QueueInfo_SC_default_instance_;
class MSG_Ret_RetNpcMove_SC;
class MSG_Ret_RetNpcMove_SCDefaultTypeInternal;
extern MSG_Ret_RetNpcMove_SCDefaultTypeInternal _MSG_Ret_RetNpcMove_SC_default_instance_;
class MSG_Ret_Rondom_Way_SC;
class MSG_Ret_Rondom_Way_SCDefaultTypeInternal;
extern MSG_Ret_Rondom_Way_SCDefaultTypeInternal _MSG_Ret_Rondom_Way_SC_default_instance_;
class MSG_Ret_ServerLoginFailed_SC;
class MSG_Ret_ServerLoginFailed_SCDefaultTypeInternal;
extern MSG_Ret_ServerLoginFailed_SCDefaultTypeInternal _MSG_Ret_ServerLoginFailed_SC_default_instance_;
class MSG_Ret_ServerTime_SC;
class MSG_Ret_ServerTime_SCDefaultTypeInternal;
extern MSG_Ret_ServerTime_SCDefaultTypeInternal _MSG_Ret_ServerTime_SC_default_instance_;
class MSG_Ret_SetState_SC;
class MSG_Ret_SetState_SCDefaultTypeInternal;
extern MSG_Ret_SetState_SCDefaultTypeInternal _MSG_Ret_SetState_SC_default_instance_;
class MSG_Ret_StateList_SC;
class MSG_Ret_StateList_SCDefaultTypeInternal;
extern MSG_Ret_StateList_SCDefaultTypeInternal _MSG_Ret_StateList_SC_default_instance_;
class MSG_Ret_UserGameTime_CS;
class MSG_Ret_UserGameTime_CSDefaultTypeInternal;
extern MSG_Ret_UserGameTime_CSDefaultTypeInternal _MSG_Ret_UserGameTime_CS_default_instance_;
class MSG_Ret_UserMapInfo_SC;
class MSG_Ret_UserMapInfo_SCDefaultTypeInternal;
extern MSG_Ret_UserMapInfo_SCDefaultTypeInternal _MSG_Ret_UserMapInfo_SC_default_instance_;
class MSG_Ret_VisibleNpcList_SC;
class MSG_Ret_VisibleNpcList_SCDefaultTypeInternal;
extern MSG_Ret_VisibleNpcList_SCDefaultTypeInternal _MSG_Ret_VisibleNpcList_SC_default_instance_;
class MSG_Ret_setTimeState_SC;
class MSG_Ret_setTimeState_SCDefaultTypeInternal;
extern MSG_Ret_setTimeState_SCDefaultTypeInternal _MSG_Ret_setTimeState_SC_default_instance_;
class MSG_START_CUTSCENE_SC;
class MSG_START_CUTSCENE_SCDefaultTypeInternal;
extern MSG_START_CUTSCENE_SCDefaultTypeInternal _MSG_START_CUTSCENE_SC_default_instance_;
class MSG_Server_Force_Move_SC;
class MSG_Server_Force_Move_SCDefaultTypeInternal;
extern MSG_Server_Force_Move_SCDefaultTypeInternal _MSG_Server_Force_Move_SC_default_instance_;
class MSG_SetChooseTarget_CS;
class MSG_SetChooseTarget_CSDefaultTypeInternal;
extern MSG_SetChooseTarget_CSDefaultTypeInternal _MSG_SetChooseTarget_CS_default_instance_;
class MSG_Show_Path_Way_End_CS;
class MSG_Show_Path_Way_End_CSDefaultTypeInternal;
extern MSG_Show_Path_Way_End_CSDefaultTypeInternal _MSG_Show_Path_Way_End_CS_default_instance_;
class MSG_USER_REQ_SETPASSWD_CS;
class MSG_USER_REQ_SETPASSWD_CSDefaultTypeInternal;
extern MSG_USER_REQ_SETPASSWD_CSDefaultTypeInternal _MSG_USER_REQ_SETPASSWD_CS_default_instance_;
class MSG_UpdateExpLevel_SC;
class MSG_UpdateExpLevel_SCDefaultTypeInternal;
extern MSG_UpdateExpLevel_SCDefaultTypeInternal _MSG_UpdateExpLevel_SC_default_instance_;
class MSG_Upload_Crash_Info;
class MSG_Upload_Crash_InfoDefaultTypeInternal;
extern MSG_Upload_Crash_InfoDefaultTypeInternal _MSG_Upload_Crash_Info_default_instance_;
class MSG_UserLoadingOk_CS;
class MSG_UserLoadingOk_CSDefaultTypeInternal;
extern MSG_UserLoadingOk_CSDefaultTypeInternal _MSG_UserLoadingOk_CS_default_instance_;
class MSG_UserReqChangeLine_CS;
class MSG_UserReqChangeLine_CSDefaultTypeInternal;
extern MSG_UserReqChangeLine_CSDefaultTypeInternal _MSG_UserReqChangeLine_CS_default_instance_;
class MSG_User_Drop_SCS;
class MSG_User_Drop_SCSDefaultTypeInternal;
extern MSG_User_Drop_SCSDefaultTypeInternal _MSG_User_Drop_SCS_default_instance_;
class MapNpcData;
class MapNpcDataDefaultTypeInternal;
extern MapNpcDataDefaultTypeInternal _MapNpcData_default_instance_;
class MapUserData;
class MapUserDataDefaultTypeInternal;
extern MapUserDataDefaultTypeInternal _MapUserData_default_instance_;
class MasterData;
class MasterDataDefaultTypeInternal;
extern MasterDataDefaultTypeInternal _MasterData_default_instance_;
class MoveData;
class MoveDataDefaultTypeInternal;
extern MoveDataDefaultTypeInternal _MoveData_default_instance_;
class NPC_HatredList;
class NPC_HatredListDefaultTypeInternal;
extern NPC_HatredListDefaultTypeInternal _NPC_HatredList_default_instance_;
class SelectUserInfo;
class SelectUserInfoDefaultTypeInternal;
extern SelectUserInfoDefaultTypeInternal _SelectUserInfo_default_instance_;
class StateItem;
class StateItemDefaultTypeInternal;
extern StateItemDefaultTypeInternal _StateItem_default_instance_;
class TempNpcInfo;
class TempNpcInfoDefaultTypeInternal;
extern TempNpcInfoDefaultTypeInternal _TempNpcInfo_default_instance_;
}  // namespace msg
PROTOBUF_NAMESPACE_OPEN
template<> ::msg::AttributeData* Arena::CreateMaybeMessage<::msg::AttributeData>(Arena*);
template<> ::msg::CharacterBaseData* Arena::CreateMaybeMessage<::msg::CharacterBaseData>(Arena*);
template<> ::msg::CharacterFightData* Arena::CreateMaybeMessage<::msg::CharacterFightData>(Arena*);
template<> ::msg::CharacterMainData* Arena::CreateMaybeMessage<::msg::CharacterMainData>(Arena*);
template<> ::msg::CharacterMapData* Arena::CreateMaybeMessage<::msg::CharacterMapData>(Arena*);
template<> ::msg::CharacterMapShow* Arena::CreateMaybeMessage<::msg::CharacterMapShow>(Arena*);
template<> ::msg::EntryIDType* Arena::CreateMaybeMessage<::msg::EntryIDType>(Arena*);
template<> ::msg::FloatMovePos* Arena::CreateMaybeMessage<::msg::FloatMovePos>(Arena*);
template<> ::msg::FuncNpcData* Arena::CreateMaybeMessage<::msg::FuncNpcData>(Arena*);
template<> ::msg::LineItem* Arena::CreateMaybeMessage<::msg::LineItem>(Arena*);
template<> ::msg::MSG_ACCOUNT_SEC_PASSWD_SC* Arena::CreateMaybeMessage<::msg::MSG_ACCOUNT_SEC_PASSWD_SC>(Arena*);
template<> ::msg::MSG_AttackTargetChange_SC* Arena::CreateMaybeMessage<::msg::MSG_AttackTargetChange_SC>(Arena*);
template<> ::msg::MSG_ChangeName_CS* Arena::CreateMaybeMessage<::msg::MSG_ChangeName_CS>(Arena*);
template<> ::msg::MSG_Create_Role_CS* Arena::CreateMaybeMessage<::msg::MSG_Create_Role_CS>(Arena*);
template<> ::msg::MSG_DataCharacterMain_SC* Arena::CreateMaybeMessage<::msg::MSG_DataCharacterMain_SC>(Arena*);
template<> ::msg::MSG_NEW_ROLE_CUTSCENE_SCS* Arena::CreateMaybeMessage<::msg::MSG_NEW_ROLE_CUTSCENE_SCS>(Arena*);
template<> ::msg::MSG_NPCHatredList_SC* Arena::CreateMaybeMessage<::msg::MSG_NPCHatredList_SC>(Arena*);
template<> ::msg::MSG_NoticeClientAllLines_SC* Arena::CreateMaybeMessage<::msg::MSG_NoticeClientAllLines_SC>(Arena*);
template<> ::msg::MSG_NotifyAccountReuse* Arena::CreateMaybeMessage<::msg::MSG_NotifyAccountReuse>(Arena*);
template<> ::msg::MSG_NotifyAntiAddict_SC* Arena::CreateMaybeMessage<::msg::MSG_NotifyAntiAddict_SC>(Arena*);
template<> ::msg::MSG_Notify_SceneLoaded_CS* Arena::CreateMaybeMessage<::msg::MSG_Notify_SceneLoaded_CS>(Arena*);
template<> ::msg::MSG_OnUserJump_CSC* Arena::CreateMaybeMessage<::msg::MSG_OnUserJump_CSC>(Arena*);
template<> ::msg::MSG_ReqEntrySelectState_CS* Arena::CreateMaybeMessage<::msg::MSG_ReqEntrySelectState_CS>(Arena*);
template<> ::msg::MSG_ReqHeroAttributeData_CS* Arena::CreateMaybeMessage<::msg::MSG_ReqHeroAttributeData_CS>(Arena*);
template<> ::msg::MSG_ReqJumptoLeaderLine_CS* Arena::CreateMaybeMessage<::msg::MSG_ReqJumptoLeaderLine_CS>(Arena*);
template<> ::msg::MSG_ReqQueryBalance_CS* Arena::CreateMaybeMessage<::msg::MSG_ReqQueryBalance_CS>(Arena*);
template<> ::msg::MSG_ReqRecharge_CS* Arena::CreateMaybeMessage<::msg::MSG_ReqRecharge_CS>(Arena*);
template<> ::msg::MSG_ReqUpdateAntiAddict_CS* Arena::CreateMaybeMessage<::msg::MSG_ReqUpdateAntiAddict_CS>(Arena*);
template<> ::msg::MSG_Req_Back_to_Select_CS* Arena::CreateMaybeMessage<::msg::MSG_Req_Back_to_Select_CS>(Arena*);
template<> ::msg::MSG_Req_Delete_Char_CSC* Arena::CreateMaybeMessage<::msg::MSG_Req_Delete_Char_CSC>(Arena*);
template<> ::msg::MSG_Req_IS_NICKNAME_REPEATED_CSC* Arena::CreateMaybeMessage<::msg::MSG_Req_IS_NICKNAME_REPEATED_CSC>(Arena*);
template<> ::msg::MSG_Req_Main_Data_CS* Arena::CreateMaybeMessage<::msg::MSG_Req_Main_Data_CS>(Arena*);
template<> ::msg::MSG_Req_Move_CS* Arena::CreateMaybeMessage<::msg::MSG_Req_Move_CS>(Arena*);
template<> ::msg::MSG_Req_Ping_CS* Arena::CreateMaybeMessage<::msg::MSG_Req_Ping_CS>(Arena*);
template<> ::msg::MSG_Req_SelectCharToLogin_CS* Arena::CreateMaybeMessage<::msg::MSG_Req_SelectCharToLogin_CS>(Arena*);
template<> ::msg::MSG_Req_Summon_Npc_CS* Arena::CreateMaybeMessage<::msg::MSG_Req_Summon_Npc_CS>(Arena*);
template<> ::msg::MSG_Req_Syn_MoveState_CS* Arena::CreateMaybeMessage<::msg::MSG_Req_Syn_MoveState_CS>(Arena*);
template<> ::msg::MSG_Req_TELE_PORT_CS* Arena::CreateMaybeMessage<::msg::MSG_Req_TELE_PORT_CS>(Arena*);
template<> ::msg::MSG_Req_Test_Network_CS* Arena::CreateMaybeMessage<::msg::MSG_Req_Test_Network_CS>(Arena*);
template<> ::msg::MSG_Req_Use_GM_CS* Arena::CreateMaybeMessage<::msg::MSG_Req_Use_GM_CS>(Arena*);
template<> ::msg::MSG_Req_UserGameTime_SC* Arena::CreateMaybeMessage<::msg::MSG_Req_UserGameTime_SC>(Arena*);
template<> ::msg::MSG_RetDiffLineOfLeader_SC* Arena::CreateMaybeMessage<::msg::MSG_RetDiffLineOfLeader_SC>(Arena*);
template<> ::msg::MSG_RetEntrySelectState_SC* Arena::CreateMaybeMessage<::msg::MSG_RetEntrySelectState_SC>(Arena*);
template<> ::msg::MSG_RetHeroAttributeData_SC* Arena::CreateMaybeMessage<::msg::MSG_RetHeroAttributeData_SC>(Arena*);
template<> ::msg::MSG_RetHpMpToSelects_SC* Arena::CreateMaybeMessage<::msg::MSG_RetHpMpToSelects_SC>(Arena*);
template<> ::msg::MSG_RetNinePlayerLevelUp_SC* Arena::CreateMaybeMessage<::msg::MSG_RetNinePlayerLevelUp_SC>(Arena*);
template<> ::msg::MSG_RetNpcDir_SC* Arena::CreateMaybeMessage<::msg::MSG_RetNpcDir_SC>(Arena*);
template<> ::msg::MSG_RetNpcWarpMove_SC* Arena::CreateMaybeMessage<::msg::MSG_RetNpcWarpMove_SC>(Arena*);
template<> ::msg::MSG_RetQueryBalance_SC* Arena::CreateMaybeMessage<::msg::MSG_RetQueryBalance_SC>(Arena*);
template<> ::msg::MSG_RetRecharge_SC* Arena::CreateMaybeMessage<::msg::MSG_RetRecharge_SC>(Arena*);
template<> ::msg::MSG_Ret_ChangeName_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_ChangeName_SC>(Arena*);
template<> ::msg::MSG_Ret_ClearState_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_ClearState_SC>(Arena*);
template<> ::msg::MSG_Ret_Common_Error_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_Common_Error_SC>(Arena*);
template<> ::msg::MSG_Ret_Common_Tips_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_Common_Tips_SC>(Arena*);
template<> ::msg::MSG_Ret_Find_Path_End_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_Find_Path_End_SC>(Arena*);
template<> ::msg::MSG_Ret_Find_Path_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_Find_Path_SC>(Arena*);
template<> ::msg::MSG_Ret_GameTime_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_GameTime_SC>(Arena*);
template<> ::msg::MSG_Ret_LoginOnReturnCharList_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_LoginOnReturnCharList_SC>(Arena*);
template<> ::msg::MSG_Ret_MapScreenBatchRefreshNpc_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_MapScreenBatchRefreshNpc_SC>(Arena*);
template<> ::msg::MSG_Ret_MapScreenBatchRemoveCharacter_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_MapScreenBatchRemoveCharacter_SC>(Arena*);
template<> ::msg::MSG_Ret_MapScreenBatchRemoveNpc_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_MapScreenBatchRemoveNpc_SC>(Arena*);
template<> ::msg::MSG_Ret_MapScreenFuncNpc_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_MapScreenFuncNpc_SC>(Arena*);
template<> ::msg::MSG_Ret_MapScreenRefreshCharacter_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_MapScreenRefreshCharacter_SC>(Arena*);
template<> ::msg::MSG_Ret_MapScreenRefreshNpc_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_MapScreenRefreshNpc_SC>(Arena*);
template<> ::msg::MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC>(Arena*);
template<> ::msg::MSG_Ret_MapScreenRemoveCharacter_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_MapScreenRemoveCharacter_SC>(Arena*);
template<> ::msg::MSG_Ret_MapScreenRemoveNpc_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_MapScreenRemoveNpc_SC>(Arena*);
template<> ::msg::MSG_Ret_Move_Failed_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_Move_Failed_SC>(Arena*);
template<> ::msg::MSG_Ret_Move_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_Move_SC>(Arena*);
template<> ::msg::MSG_Ret_NineScreenRefreshPlayer_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_NineScreenRefreshPlayer_SC>(Arena*);
template<> ::msg::MSG_Ret_NotifyUserKickout_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_NotifyUserKickout_SC>(Arena*);
template<> ::msg::MSG_Ret_QueueInfo_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_QueueInfo_SC>(Arena*);
template<> ::msg::MSG_Ret_RetNpcMove_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_RetNpcMove_SC>(Arena*);
template<> ::msg::MSG_Ret_Rondom_Way_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_Rondom_Way_SC>(Arena*);
template<> ::msg::MSG_Ret_ServerLoginFailed_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_ServerLoginFailed_SC>(Arena*);
template<> ::msg::MSG_Ret_ServerTime_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_ServerTime_SC>(Arena*);
template<> ::msg::MSG_Ret_SetState_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_SetState_SC>(Arena*);
template<> ::msg::MSG_Ret_StateList_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_StateList_SC>(Arena*);
template<> ::msg::MSG_Ret_UserGameTime_CS* Arena::CreateMaybeMessage<::msg::MSG_Ret_UserGameTime_CS>(Arena*);
template<> ::msg::MSG_Ret_UserMapInfo_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_UserMapInfo_SC>(Arena*);
template<> ::msg::MSG_Ret_VisibleNpcList_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_VisibleNpcList_SC>(Arena*);
template<> ::msg::MSG_Ret_setTimeState_SC* Arena::CreateMaybeMessage<::msg::MSG_Ret_setTimeState_SC>(Arena*);
template<> ::msg::MSG_START_CUTSCENE_SC* Arena::CreateMaybeMessage<::msg::MSG_START_CUTSCENE_SC>(Arena*);
template<> ::msg::MSG_Server_Force_Move_SC* Arena::CreateMaybeMessage<::msg::MSG_Server_Force_Move_SC>(Arena*);
template<> ::msg::MSG_SetChooseTarget_CS* Arena::CreateMaybeMessage<::msg::MSG_SetChooseTarget_CS>(Arena*);
template<> ::msg::MSG_Show_Path_Way_End_CS* Arena::CreateMaybeMessage<::msg::MSG_Show_Path_Way_End_CS>(Arena*);
template<> ::msg::MSG_USER_REQ_SETPASSWD_CS* Arena::CreateMaybeMessage<::msg::MSG_USER_REQ_SETPASSWD_CS>(Arena*);
template<> ::msg::MSG_UpdateExpLevel_SC* Arena::CreateMaybeMessage<::msg::MSG_UpdateExpLevel_SC>(Arena*);
template<> ::msg::MSG_Upload_Crash_Info* Arena::CreateMaybeMessage<::msg::MSG_Upload_Crash_Info>(Arena*);
template<> ::msg::MSG_UserLoadingOk_CS* Arena::CreateMaybeMessage<::msg::MSG_UserLoadingOk_CS>(Arena*);
template<> ::msg::MSG_UserReqChangeLine_CS* Arena::CreateMaybeMessage<::msg::MSG_UserReqChangeLine_CS>(Arena*);
template<> ::msg::MSG_User_Drop_SCS* Arena::CreateMaybeMessage<::msg::MSG_User_Drop_SCS>(Arena*);
template<> ::msg::MapNpcData* Arena::CreateMaybeMessage<::msg::MapNpcData>(Arena*);
template<> ::msg::MapUserData* Arena::CreateMaybeMessage<::msg::MapUserData>(Arena*);
template<> ::msg::MasterData* Arena::CreateMaybeMessage<::msg::MasterData>(Arena*);
template<> ::msg::MoveData* Arena::CreateMaybeMessage<::msg::MoveData>(Arena*);
template<> ::msg::NPC_HatredList* Arena::CreateMaybeMessage<::msg::NPC_HatredList>(Arena*);
template<> ::msg::SelectUserInfo* Arena::CreateMaybeMessage<::msg::SelectUserInfo>(Arena*);
template<> ::msg::StateItem* Arena::CreateMaybeMessage<::msg::StateItem>(Arena*);
template<> ::msg::TempNpcInfo* Arena::CreateMaybeMessage<::msg::TempNpcInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace msg {

enum ChooseTargetType : int {
  CHOOSE_TARGE_TTYPE_SET = 1,
  CHOOSE_TARGE_TTYPE_CANCEL = 2
};
bool ChooseTargetType_IsValid(int value);
constexpr ChooseTargetType ChooseTargetType_MIN = CHOOSE_TARGE_TTYPE_SET;
constexpr ChooseTargetType ChooseTargetType_MAX = CHOOSE_TARGE_TTYPE_CANCEL;
constexpr int ChooseTargetType_ARRAYSIZE = ChooseTargetType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChooseTargetType_descriptor();
template<typename T>
inline const std::string& ChooseTargetType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ChooseTargetType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ChooseTargetType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ChooseTargetType_descriptor(), enum_t_value);
}
inline bool ChooseTargetType_Parse(
    const std::string& name, ChooseTargetType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ChooseTargetType>(
    ChooseTargetType_descriptor(), name, value);
}
enum SEX : int {
  Male = 1,
  FEMALE = 2
};
bool SEX_IsValid(int value);
constexpr SEX SEX_MIN = Male;
constexpr SEX SEX_MAX = FEMALE;
constexpr int SEX_ARRAYSIZE = SEX_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SEX_descriptor();
template<typename T>
inline const std::string& SEX_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SEX>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SEX_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SEX_descriptor(), enum_t_value);
}
inline bool SEX_Parse(
    const std::string& name, SEX* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SEX>(
    SEX_descriptor(), name, value);
}
enum ERechargeReturnCode : int {
  BULLSHIT = 1
};
bool ERechargeReturnCode_IsValid(int value);
constexpr ERechargeReturnCode ERechargeReturnCode_MIN = BULLSHIT;
constexpr ERechargeReturnCode ERechargeReturnCode_MAX = BULLSHIT;
constexpr int ERechargeReturnCode_ARRAYSIZE = ERechargeReturnCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ERechargeReturnCode_descriptor();
template<typename T>
inline const std::string& ERechargeReturnCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ERechargeReturnCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ERechargeReturnCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ERechargeReturnCode_descriptor(), enum_t_value);
}
inline bool ERechargeReturnCode_Parse(
    const std::string& name, ERechargeReturnCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ERechargeReturnCode>(
    ERechargeReturnCode_descriptor(), name, value);
}
enum MapDataType : int {
  MAP_DATATYPE_USER = 1,
  MAP_DATATYPE_NPC = 2
};
bool MapDataType_IsValid(int value);
constexpr MapDataType MapDataType_MIN = MAP_DATATYPE_USER;
constexpr MapDataType MapDataType_MAX = MAP_DATATYPE_NPC;
constexpr int MapDataType_ARRAYSIZE = MapDataType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MapDataType_descriptor();
template<typename T>
inline const std::string& MapDataType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MapDataType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MapDataType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MapDataType_descriptor(), enum_t_value);
}
inline bool MapDataType_Parse(
    const std::string& name, MapDataType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MapDataType>(
    MapDataType_descriptor(), name, value);
}
// ===================================================================

class EntryIDType :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.EntryIDType) */ {
 public:
  EntryIDType();
  virtual ~EntryIDType();

  EntryIDType(const EntryIDType& from);
  EntryIDType(EntryIDType&& from) noexcept
    : EntryIDType() {
    *this = ::std::move(from);
  }

  inline EntryIDType& operator=(const EntryIDType& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntryIDType& operator=(EntryIDType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EntryIDType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EntryIDType* internal_default_instance() {
    return reinterpret_cast<const EntryIDType*>(
               &_EntryIDType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EntryIDType& a, EntryIDType& b) {
    a.Swap(&b);
  }
  inline void Swap(EntryIDType* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EntryIDType* New() const final {
    return CreateMaybeMessage<EntryIDType>(nullptr);
  }

  EntryIDType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EntryIDType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EntryIDType& from);
  void MergeFrom(const EntryIDType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EntryIDType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.EntryIDType";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // optional uint64 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 type = 2;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.EntryIDType)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class CharacterBaseData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.CharacterBaseData) */ {
 public:
  CharacterBaseData();
  virtual ~CharacterBaseData();

  CharacterBaseData(const CharacterBaseData& from);
  CharacterBaseData(CharacterBaseData&& from) noexcept
    : CharacterBaseData() {
    *this = ::std::move(from);
  }

  inline CharacterBaseData& operator=(const CharacterBaseData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharacterBaseData& operator=(CharacterBaseData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CharacterBaseData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharacterBaseData* internal_default_instance() {
    return reinterpret_cast<const CharacterBaseData*>(
               &_CharacterBaseData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CharacterBaseData& a, CharacterBaseData& b) {
    a.Swap(&b);
  }
  inline void Swap(CharacterBaseData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CharacterBaseData* New() const final {
    return CreateMaybeMessage<CharacterBaseData>(nullptr);
  }

  CharacterBaseData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CharacterBaseData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CharacterBaseData& from);
  void MergeFrom(const CharacterBaseData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharacterBaseData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.CharacterBaseData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 25,
    kExpFieldNumber = 2,
    kMoneyFieldNumber = 3,
    kWelpointFieldNumber = 4,
    kTilizhiFieldNumber = 5,
    kTypeFieldNumber = 6,
    kFamelevelFieldNumber = 7,
    kPositionFieldNumber = 8,
    kViplevelFieldNumber = 9,
    kPortFieldNumber = 10,
    kNextexpFieldNumber = 12,
    kLaststageFieldNumber = 11,
    kPkmodeFieldNumber = 13,
    kLevelFieldNumber = 14,
    kStoneFieldNumber = 15,
    kEdupointFieldNumber = 16,
    kCooppointFieldNumber = 17,
    kBluecrystalFieldNumber = 18,
    kBluecrystalincnumFieldNumber = 19,
    kPurplecrystalFieldNumber = 20,
    kPurplecrystalincnumFieldNumber = 21,
    kVigourpointFieldNumber = 22,
    kDoublepointFieldNumber = 23,
    kFamilyattFieldNumber = 24,
  };
  // optional string herothisid = 25;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  const std::string& herothisid() const;
  void set_herothisid(const std::string& value);
  void set_herothisid(std::string&& value);
  void set_herothisid(const char* value);
  void set_herothisid(const char* value, size_t size);
  std::string* mutable_herothisid();
  std::string* release_herothisid();
  void set_allocated_herothisid(std::string* herothisid);
  private:
  const std::string& _internal_herothisid() const;
  void _internal_set_herothisid(const std::string& value);
  std::string* _internal_mutable_herothisid();
  public:

  // optional uint64 exp = 2;
  bool has_exp() const;
  private:
  bool _internal_has_exp() const;
  public:
  void clear_exp();
  ::PROTOBUF_NAMESPACE_ID::uint64 exp() const;
  void set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_exp() const;
  void _internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 money = 3;
  bool has_money() const;
  private:
  bool _internal_has_money() const;
  public:
  void clear_money();
  ::PROTOBUF_NAMESPACE_ID::uint32 money() const;
  void set_money(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_money() const;
  void _internal_set_money(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 welpoint = 4;
  bool has_welpoint() const;
  private:
  bool _internal_has_welpoint() const;
  public:
  void clear_welpoint();
  ::PROTOBUF_NAMESPACE_ID::uint32 welpoint() const;
  void set_welpoint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_welpoint() const;
  void _internal_set_welpoint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tilizhi = 5;
  bool has_tilizhi() const;
  private:
  bool _internal_has_tilizhi() const;
  public:
  void clear_tilizhi();
  ::PROTOBUF_NAMESPACE_ID::uint32 tilizhi() const;
  void set_tilizhi(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tilizhi() const;
  void _internal_set_tilizhi(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 type = 6;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 famelevel = 7;
  bool has_famelevel() const;
  private:
  bool _internal_has_famelevel() const;
  public:
  void clear_famelevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 famelevel() const;
  void set_famelevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_famelevel() const;
  void _internal_set_famelevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 position = 8;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  ::PROTOBUF_NAMESPACE_ID::uint32 position() const;
  void set_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_position() const;
  void _internal_set_position(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 viplevel = 9;
  bool has_viplevel() const;
  private:
  bool _internal_has_viplevel() const;
  public:
  void clear_viplevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 viplevel() const;
  void set_viplevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_viplevel() const;
  void _internal_set_viplevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 port = 10;
  bool has_port() const;
  private:
  bool _internal_has_port() const;
  public:
  void clear_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 port() const;
  void set_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_port() const;
  void _internal_set_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 nextexp = 12;
  bool has_nextexp() const;
  private:
  bool _internal_has_nextexp() const;
  public:
  void clear_nextexp();
  ::PROTOBUF_NAMESPACE_ID::uint64 nextexp() const;
  void set_nextexp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_nextexp() const;
  void _internal_set_nextexp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 laststage = 11;
  bool has_laststage() const;
  private:
  bool _internal_has_laststage() const;
  public:
  void clear_laststage();
  ::PROTOBUF_NAMESPACE_ID::uint32 laststage() const;
  void set_laststage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_laststage() const;
  void _internal_set_laststage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pkmode = 13;
  bool has_pkmode() const;
  private:
  bool _internal_has_pkmode() const;
  public:
  void clear_pkmode();
  ::PROTOBUF_NAMESPACE_ID::uint32 pkmode() const;
  void set_pkmode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pkmode() const;
  void _internal_set_pkmode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 14;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 stone = 15;
  bool has_stone() const;
  private:
  bool _internal_has_stone() const;
  public:
  void clear_stone();
  ::PROTOBUF_NAMESPACE_ID::uint32 stone() const;
  void set_stone(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stone() const;
  void _internal_set_stone(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 edupoint = 16;
  bool has_edupoint() const;
  private:
  bool _internal_has_edupoint() const;
  public:
  void clear_edupoint();
  ::PROTOBUF_NAMESPACE_ID::uint32 edupoint() const;
  void set_edupoint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_edupoint() const;
  void _internal_set_edupoint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cooppoint = 17;
  bool has_cooppoint() const;
  private:
  bool _internal_has_cooppoint() const;
  public:
  void clear_cooppoint();
  ::PROTOBUF_NAMESPACE_ID::uint32 cooppoint() const;
  void set_cooppoint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cooppoint() const;
  void _internal_set_cooppoint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bluecrystal = 18;
  bool has_bluecrystal() const;
  private:
  bool _internal_has_bluecrystal() const;
  public:
  void clear_bluecrystal();
  ::PROTOBUF_NAMESPACE_ID::uint32 bluecrystal() const;
  void set_bluecrystal(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bluecrystal() const;
  void _internal_set_bluecrystal(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bluecrystalincnum = 19;
  bool has_bluecrystalincnum() const;
  private:
  bool _internal_has_bluecrystalincnum() const;
  public:
  void clear_bluecrystalincnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 bluecrystalincnum() const;
  void set_bluecrystalincnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bluecrystalincnum() const;
  void _internal_set_bluecrystalincnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 purplecrystal = 20;
  bool has_purplecrystal() const;
  private:
  bool _internal_has_purplecrystal() const;
  public:
  void clear_purplecrystal();
  ::PROTOBUF_NAMESPACE_ID::uint32 purplecrystal() const;
  void set_purplecrystal(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_purplecrystal() const;
  void _internal_set_purplecrystal(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 purplecrystalincnum = 21;
  bool has_purplecrystalincnum() const;
  private:
  bool _internal_has_purplecrystalincnum() const;
  public:
  void clear_purplecrystalincnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 purplecrystalincnum() const;
  void set_purplecrystalincnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_purplecrystalincnum() const;
  void _internal_set_purplecrystalincnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 vigourpoint = 22;
  bool has_vigourpoint() const;
  private:
  bool _internal_has_vigourpoint() const;
  public:
  void clear_vigourpoint();
  ::PROTOBUF_NAMESPACE_ID::uint32 vigourpoint() const;
  void set_vigourpoint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_vigourpoint() const;
  void _internal_set_vigourpoint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 doublepoint = 23;
  bool has_doublepoint() const;
  private:
  bool _internal_has_doublepoint() const;
  public:
  void clear_doublepoint();
  ::PROTOBUF_NAMESPACE_ID::uint32 doublepoint() const;
  void set_doublepoint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_doublepoint() const;
  void _internal_set_doublepoint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 familyatt = 24;
  bool has_familyatt() const;
  private:
  bool _internal_has_familyatt() const;
  public:
  void clear_familyatt();
  ::PROTOBUF_NAMESPACE_ID::uint32 familyatt() const;
  void set_familyatt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_familyatt() const;
  void _internal_set_familyatt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.CharacterBaseData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herothisid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 exp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 money_;
  ::PROTOBUF_NAMESPACE_ID::uint32 welpoint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tilizhi_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 famelevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 position_;
  ::PROTOBUF_NAMESPACE_ID::uint32 viplevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 port_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nextexp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 laststage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pkmode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stone_;
  ::PROTOBUF_NAMESPACE_ID::uint32 edupoint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cooppoint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bluecrystal_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bluecrystalincnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 purplecrystal_;
  ::PROTOBUF_NAMESPACE_ID::uint32 purplecrystalincnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 vigourpoint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 doublepoint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 familyatt_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class AttributeData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.AttributeData) */ {
 public:
  AttributeData();
  virtual ~AttributeData();

  AttributeData(const AttributeData& from);
  AttributeData(AttributeData&& from) noexcept
    : AttributeData() {
    *this = ::std::move(from);
  }

  inline AttributeData& operator=(const AttributeData& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttributeData& operator=(AttributeData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttributeData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttributeData* internal_default_instance() {
    return reinterpret_cast<const AttributeData*>(
               &_AttributeData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AttributeData& a, AttributeData& b) {
    a.Swap(&b);
  }
  inline void Swap(AttributeData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttributeData* New() const final {
    return CreateMaybeMessage<AttributeData>(nullptr);
  }

  AttributeData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttributeData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttributeData& from);
  void MergeFrom(const AttributeData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttributeData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.AttributeData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHpFieldNumber = 1,
    kMaxhpFieldNumber = 2,
    kStrFieldNumber = 3,
    kDexFieldNumber = 4,
    kIntelFieldNumber = 5,
    kPhyFieldNumber = 6,
    kMattFieldNumber = 7,
    kPattFieldNumber = 8,
    kMdefFieldNumber = 9,
    kPdefFieldNumber = 10,
    kBangFieldNumber = 11,
    kBangextradamageFieldNumber = 12,
    kToughnessFieldNumber = 13,
    kToughnessreducedamageFieldNumber = 14,
    kPenetrateFieldNumber = 15,
    kPenetrateextradamageFieldNumber = 16,
    kBlockFieldNumber = 17,
    kBlockreducedamageFieldNumber = 18,
    kAccurateFieldNumber = 19,
    kAccurateextradamageFieldNumber = 20,
    kHoldFieldNumber = 21,
    kHoldreducedamageFieldNumber = 22,
    kDeflectFieldNumber = 23,
    kDeflectreducedamageFieldNumber = 24,
    kDodgeFieldNumber = 25,
    kWeaponattFieldNumber = 26,
    kMpFieldNumber = 27,
    kMaxmpFieldNumber = 28,
    kHitFieldNumber = 29,
    kFiremasteryFieldNumber = 30,
    kIcemasteryFieldNumber = 31,
    kLightningmasteryFieldNumber = 32,
    kBrightmasteryFieldNumber = 33,
    kDarkmasteryFieldNumber = 34,
    kFireresistFieldNumber = 35,
    kIceresistFieldNumber = 36,
    kLightningresistFieldNumber = 37,
    kBrightresistFieldNumber = 38,
    kDarkresistFieldNumber = 39,
    kFirepenFieldNumber = 40,
    kIcepenFieldNumber = 41,
    kLightningpenFieldNumber = 42,
    kBrightpenFieldNumber = 43,
    kDarkpenFieldNumber = 44,
    kBlowintFieldNumber = 45,
    kKnockintFieldNumber = 46,
    kFloatintFieldNumber = 47,
    kSuperhitintFieldNumber = 48,
    kBlowresistFieldNumber = 49,
    kKnockresistFieldNumber = 50,
    kFloatresistFieldNumber = 51,
    kSuperhitresistFieldNumber = 52,
    kBlowdectimeFieldNumber = 53,
    kKnockdectimeFieldNumber = 54,
    kFloatdectimeFieldNumber = 55,
    kSuperhitdectimeFieldNumber = 56,
    kStiffaddtimeFieldNumber = 57,
    kStiffdectimeFieldNumber = 58,
  };
  // optional uint32 hp = 1;
  bool has_hp() const;
  private:
  bool _internal_has_hp() const;
  public:
  void clear_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 hp() const;
  void set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hp() const;
  void _internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxhp = 2;
  bool has_maxhp() const;
  private:
  bool _internal_has_maxhp() const;
  public:
  void clear_maxhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp() const;
  void set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxhp() const;
  void _internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 str = 3;
  bool has_str() const;
  private:
  bool _internal_has_str() const;
  public:
  void clear_str();
  ::PROTOBUF_NAMESPACE_ID::uint32 str() const;
  void set_str(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_str() const;
  void _internal_set_str(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dex = 4;
  bool has_dex() const;
  private:
  bool _internal_has_dex() const;
  public:
  void clear_dex();
  ::PROTOBUF_NAMESPACE_ID::uint32 dex() const;
  void set_dex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dex() const;
  void _internal_set_dex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 intel = 5;
  bool has_intel() const;
  private:
  bool _internal_has_intel() const;
  public:
  void clear_intel();
  ::PROTOBUF_NAMESPACE_ID::uint32 intel() const;
  void set_intel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_intel() const;
  void _internal_set_intel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 phy = 6;
  bool has_phy() const;
  private:
  bool _internal_has_phy() const;
  public:
  void clear_phy();
  ::PROTOBUF_NAMESPACE_ID::uint32 phy() const;
  void set_phy(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_phy() const;
  void _internal_set_phy(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 matt = 7;
  bool has_matt() const;
  private:
  bool _internal_has_matt() const;
  public:
  void clear_matt();
  ::PROTOBUF_NAMESPACE_ID::uint32 matt() const;
  void set_matt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matt() const;
  void _internal_set_matt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 patt = 8;
  bool has_patt() const;
  private:
  bool _internal_has_patt() const;
  public:
  void clear_patt();
  ::PROTOBUF_NAMESPACE_ID::uint32 patt() const;
  void set_patt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_patt() const;
  void _internal_set_patt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 mdef = 9;
  bool has_mdef() const;
  private:
  bool _internal_has_mdef() const;
  public:
  void clear_mdef();
  ::PROTOBUF_NAMESPACE_ID::uint32 mdef() const;
  void set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mdef() const;
  void _internal_set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pdef = 10;
  bool has_pdef() const;
  private:
  bool _internal_has_pdef() const;
  public:
  void clear_pdef();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdef() const;
  void set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdef() const;
  void _internal_set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bang = 11;
  bool has_bang() const;
  private:
  bool _internal_has_bang() const;
  public:
  void clear_bang();
  ::PROTOBUF_NAMESPACE_ID::uint32 bang() const;
  void set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bang() const;
  void _internal_set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bangextradamage = 12;
  bool has_bangextradamage() const;
  private:
  bool _internal_has_bangextradamage() const;
  public:
  void clear_bangextradamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 bangextradamage() const;
  void set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bangextradamage() const;
  void _internal_set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 toughness = 13;
  bool has_toughness() const;
  private:
  bool _internal_has_toughness() const;
  public:
  void clear_toughness();
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness() const;
  void set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_toughness() const;
  void _internal_set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 toughnessreducedamage = 14;
  bool has_toughnessreducedamage() const;
  private:
  bool _internal_has_toughnessreducedamage() const;
  public:
  void clear_toughnessreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 toughnessreducedamage() const;
  void set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_toughnessreducedamage() const;
  void _internal_set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 penetrate = 15;
  bool has_penetrate() const;
  private:
  bool _internal_has_penetrate() const;
  public:
  void clear_penetrate();
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrate() const;
  void set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_penetrate() const;
  void _internal_set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 penetrateextradamage = 16;
  bool has_penetrateextradamage() const;
  private:
  bool _internal_has_penetrateextradamage() const;
  public:
  void clear_penetrateextradamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrateextradamage() const;
  void set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_penetrateextradamage() const;
  void _internal_set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 block = 17;
  bool has_block() const;
  private:
  bool _internal_has_block() const;
  public:
  void clear_block();
  ::PROTOBUF_NAMESPACE_ID::uint32 block() const;
  void set_block(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_block() const;
  void _internal_set_block(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 blockreducedamage = 18;
  bool has_blockreducedamage() const;
  private:
  bool _internal_has_blockreducedamage() const;
  public:
  void clear_blockreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 blockreducedamage() const;
  void set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blockreducedamage() const;
  void _internal_set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 accurate = 19;
  bool has_accurate() const;
  private:
  bool _internal_has_accurate() const;
  public:
  void clear_accurate();
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate() const;
  void set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accurate() const;
  void _internal_set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 accurateextradamage = 20;
  bool has_accurateextradamage() const;
  private:
  bool _internal_has_accurateextradamage() const;
  public:
  void clear_accurateextradamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 accurateextradamage() const;
  void set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accurateextradamage() const;
  void _internal_set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hold = 21;
  bool has_hold() const;
  private:
  bool _internal_has_hold() const;
  public:
  void clear_hold();
  ::PROTOBUF_NAMESPACE_ID::uint32 hold() const;
  void set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hold() const;
  void _internal_set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 holdreducedamage = 22;
  bool has_holdreducedamage() const;
  private:
  bool _internal_has_holdreducedamage() const;
  public:
  void clear_holdreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 holdreducedamage() const;
  void set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_holdreducedamage() const;
  void _internal_set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 deflect = 23;
  bool has_deflect() const;
  private:
  bool _internal_has_deflect() const;
  public:
  void clear_deflect();
  ::PROTOBUF_NAMESPACE_ID::uint32 deflect() const;
  void set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deflect() const;
  void _internal_set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 deflectreducedamage = 24;
  bool has_deflectreducedamage() const;
  private:
  bool _internal_has_deflectreducedamage() const;
  public:
  void clear_deflectreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 deflectreducedamage() const;
  void set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deflectreducedamage() const;
  void _internal_set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dodge = 25;
  bool has_dodge() const;
  private:
  bool _internal_has_dodge() const;
  public:
  void clear_dodge();
  ::PROTOBUF_NAMESPACE_ID::uint32 dodge() const;
  void set_dodge(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dodge() const;
  void _internal_set_dodge(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 weaponatt = 26;
  bool has_weaponatt() const;
  private:
  bool _internal_has_weaponatt() const;
  public:
  void clear_weaponatt();
  ::PROTOBUF_NAMESPACE_ID::uint32 weaponatt() const;
  void set_weaponatt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_weaponatt() const;
  void _internal_set_weaponatt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 mp = 27;
  bool has_mp() const;
  private:
  bool _internal_has_mp() const;
  public:
  void clear_mp();
  ::PROTOBUF_NAMESPACE_ID::uint32 mp() const;
  void set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mp() const;
  void _internal_set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxmp = 28;
  bool has_maxmp() const;
  private:
  bool _internal_has_maxmp() const;
  public:
  void clear_maxmp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxmp() const;
  void set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxmp() const;
  void _internal_set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hit = 29;
  bool has_hit() const;
  private:
  bool _internal_has_hit() const;
  public:
  void clear_hit();
  ::PROTOBUF_NAMESPACE_ID::uint32 hit() const;
  void set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hit() const;
  void _internal_set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 firemastery = 30;
  bool has_firemastery() const;
  private:
  bool _internal_has_firemastery() const;
  public:
  void clear_firemastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 firemastery() const;
  void set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_firemastery() const;
  void _internal_set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 icemastery = 31;
  bool has_icemastery() const;
  private:
  bool _internal_has_icemastery() const;
  public:
  void clear_icemastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 icemastery() const;
  void set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_icemastery() const;
  void _internal_set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lightningmastery = 32;
  bool has_lightningmastery() const;
  private:
  bool _internal_has_lightningmastery() const;
  public:
  void clear_lightningmastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningmastery() const;
  void set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lightningmastery() const;
  void _internal_set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 brightmastery = 33;
  bool has_brightmastery() const;
  private:
  bool _internal_has_brightmastery() const;
  public:
  void clear_brightmastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 brightmastery() const;
  void set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brightmastery() const;
  void _internal_set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 darkmastery = 34;
  bool has_darkmastery() const;
  private:
  bool _internal_has_darkmastery() const;
  public:
  void clear_darkmastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 darkmastery() const;
  void set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_darkmastery() const;
  void _internal_set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 fireresist = 35;
  bool has_fireresist() const;
  private:
  bool _internal_has_fireresist() const;
  public:
  void clear_fireresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 fireresist() const;
  void set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fireresist() const;
  void _internal_set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 iceresist = 36;
  bool has_iceresist() const;
  private:
  bool _internal_has_iceresist() const;
  public:
  void clear_iceresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 iceresist() const;
  void set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_iceresist() const;
  void _internal_set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lightningresist = 37;
  bool has_lightningresist() const;
  private:
  bool _internal_has_lightningresist() const;
  public:
  void clear_lightningresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningresist() const;
  void set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lightningresist() const;
  void _internal_set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 brightresist = 38;
  bool has_brightresist() const;
  private:
  bool _internal_has_brightresist() const;
  public:
  void clear_brightresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 brightresist() const;
  void set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brightresist() const;
  void _internal_set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 darkresist = 39;
  bool has_darkresist() const;
  private:
  bool _internal_has_darkresist() const;
  public:
  void clear_darkresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 darkresist() const;
  void set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_darkresist() const;
  void _internal_set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 firepen = 40;
  bool has_firepen() const;
  private:
  bool _internal_has_firepen() const;
  public:
  void clear_firepen();
  ::PROTOBUF_NAMESPACE_ID::uint32 firepen() const;
  void set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_firepen() const;
  void _internal_set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 icepen = 41;
  bool has_icepen() const;
  private:
  bool _internal_has_icepen() const;
  public:
  void clear_icepen();
  ::PROTOBUF_NAMESPACE_ID::uint32 icepen() const;
  void set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_icepen() const;
  void _internal_set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lightningpen = 42;
  bool has_lightningpen() const;
  private:
  bool _internal_has_lightningpen() const;
  public:
  void clear_lightningpen();
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningpen() const;
  void set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lightningpen() const;
  void _internal_set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 brightpen = 43;
  bool has_brightpen() const;
  private:
  bool _internal_has_brightpen() const;
  public:
  void clear_brightpen();
  ::PROTOBUF_NAMESPACE_ID::uint32 brightpen() const;
  void set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brightpen() const;
  void _internal_set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 darkpen = 44;
  bool has_darkpen() const;
  private:
  bool _internal_has_darkpen() const;
  public:
  void clear_darkpen();
  ::PROTOBUF_NAMESPACE_ID::uint32 darkpen() const;
  void set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_darkpen() const;
  void _internal_set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 blowint = 45;
  bool has_blowint() const;
  private:
  bool _internal_has_blowint() const;
  public:
  void clear_blowint();
  ::PROTOBUF_NAMESPACE_ID::uint32 blowint() const;
  void set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blowint() const;
  void _internal_set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 knockint = 46;
  bool has_knockint() const;
  private:
  bool _internal_has_knockint() const;
  public:
  void clear_knockint();
  ::PROTOBUF_NAMESPACE_ID::uint32 knockint() const;
  void set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_knockint() const;
  void _internal_set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 floatint = 47;
  bool has_floatint() const;
  private:
  bool _internal_has_floatint() const;
  public:
  void clear_floatint();
  ::PROTOBUF_NAMESPACE_ID::uint32 floatint() const;
  void set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_floatint() const;
  void _internal_set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 superhitint = 48;
  bool has_superhitint() const;
  private:
  bool _internal_has_superhitint() const;
  public:
  void clear_superhitint();
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitint() const;
  void set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_superhitint() const;
  void _internal_set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 blowresist = 49;
  bool has_blowresist() const;
  private:
  bool _internal_has_blowresist() const;
  public:
  void clear_blowresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 blowresist() const;
  void set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blowresist() const;
  void _internal_set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 knockresist = 50;
  bool has_knockresist() const;
  private:
  bool _internal_has_knockresist() const;
  public:
  void clear_knockresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 knockresist() const;
  void set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_knockresist() const;
  void _internal_set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 floatresist = 51;
  bool has_floatresist() const;
  private:
  bool _internal_has_floatresist() const;
  public:
  void clear_floatresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 floatresist() const;
  void set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_floatresist() const;
  void _internal_set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 superhitresist = 52;
  bool has_superhitresist() const;
  private:
  bool _internal_has_superhitresist() const;
  public:
  void clear_superhitresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitresist() const;
  void set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_superhitresist() const;
  void _internal_set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 blowdectime = 53;
  bool has_blowdectime() const;
  private:
  bool _internal_has_blowdectime() const;
  public:
  void clear_blowdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 blowdectime() const;
  void set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blowdectime() const;
  void _internal_set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 knockdectime = 54;
  bool has_knockdectime() const;
  private:
  bool _internal_has_knockdectime() const;
  public:
  void clear_knockdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 knockdectime() const;
  void set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_knockdectime() const;
  void _internal_set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 floatdectime = 55;
  bool has_floatdectime() const;
  private:
  bool _internal_has_floatdectime() const;
  public:
  void clear_floatdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 floatdectime() const;
  void set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_floatdectime() const;
  void _internal_set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 superhitdectime = 56;
  bool has_superhitdectime() const;
  private:
  bool _internal_has_superhitdectime() const;
  public:
  void clear_superhitdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitdectime() const;
  void set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_superhitdectime() const;
  void _internal_set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 stiffaddtime = 57;
  bool has_stiffaddtime() const;
  private:
  bool _internal_has_stiffaddtime() const;
  public:
  void clear_stiffaddtime();
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffaddtime() const;
  void set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stiffaddtime() const;
  void _internal_set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 stiffdectime = 58;
  bool has_stiffdectime() const;
  private:
  bool _internal_has_stiffdectime() const;
  public:
  void clear_stiffdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffdectime() const;
  void set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stiffdectime() const;
  void _internal_set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.AttributeData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 str_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 intel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 phy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 patt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mdef_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdef_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bang_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bangextradamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness_;
  ::PROTOBUF_NAMESPACE_ID::uint32 toughnessreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrateextradamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 block_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blockreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accurateextradamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 holdreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deflect_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deflectreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dodge_;
  ::PROTOBUF_NAMESPACE_ID::uint32 weaponatt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxmp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 firemastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 icemastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningmastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brightmastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 darkmastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fireresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 iceresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brightresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 darkresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 firepen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 icepen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningpen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brightpen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 darkpen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blowint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 knockint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 floatint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blowresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 knockresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 floatresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blowdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 knockdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 floatdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffaddtime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffdectime_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class CharacterFightData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.CharacterFightData) */ {
 public:
  CharacterFightData();
  virtual ~CharacterFightData();

  CharacterFightData(const CharacterFightData& from);
  CharacterFightData(CharacterFightData&& from) noexcept
    : CharacterFightData() {
    *this = ::std::move(from);
  }

  inline CharacterFightData& operator=(const CharacterFightData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharacterFightData& operator=(CharacterFightData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CharacterFightData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharacterFightData* internal_default_instance() {
    return reinterpret_cast<const CharacterFightData*>(
               &_CharacterFightData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CharacterFightData& a, CharacterFightData& b) {
    a.Swap(&b);
  }
  inline void Swap(CharacterFightData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CharacterFightData* New() const final {
    return CreateMaybeMessage<CharacterFightData>(nullptr);
  }

  CharacterFightData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CharacterFightData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CharacterFightData& from);
  void MergeFrom(const CharacterFightData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharacterFightData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.CharacterFightData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurfightvalueFieldNumber = 1,
  };
  // optional uint32 curfightvalue = 1;
  bool has_curfightvalue() const;
  private:
  bool _internal_has_curfightvalue() const;
  public:
  void clear_curfightvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 curfightvalue() const;
  void set_curfightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curfightvalue() const;
  void _internal_set_curfightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.CharacterFightData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curfightvalue_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class CharacterMainData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.CharacterMainData) */ {
 public:
  CharacterMainData();
  virtual ~CharacterMainData();

  CharacterMainData(const CharacterMainData& from);
  CharacterMainData(CharacterMainData&& from) noexcept
    : CharacterMainData() {
    *this = ::std::move(from);
  }

  inline CharacterMainData& operator=(const CharacterMainData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharacterMainData& operator=(CharacterMainData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CharacterMainData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharacterMainData* internal_default_instance() {
    return reinterpret_cast<const CharacterMainData*>(
               &_CharacterMainData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CharacterMainData& a, CharacterMainData& b) {
    a.Swap(&b);
  }
  inline void Swap(CharacterMainData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CharacterMainData* New() const final {
    return CreateMaybeMessage<CharacterMainData>(nullptr);
  }

  CharacterMainData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CharacterMainData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CharacterMainData& from);
  void MergeFrom(const CharacterMainData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharacterMainData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.CharacterMainData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBasedataFieldNumber = 1,
    kAttridataFieldNumber = 2,
    kMapdataFieldNumber = 3,
    kFightdataFieldNumber = 4,
  };
  // optional .msg.CharacterBaseData basedata = 1;
  bool has_basedata() const;
  private:
  bool _internal_has_basedata() const;
  public:
  void clear_basedata();
  const ::msg::CharacterBaseData& basedata() const;
  ::msg::CharacterBaseData* release_basedata();
  ::msg::CharacterBaseData* mutable_basedata();
  void set_allocated_basedata(::msg::CharacterBaseData* basedata);
  private:
  const ::msg::CharacterBaseData& _internal_basedata() const;
  ::msg::CharacterBaseData* _internal_mutable_basedata();
  public:

  // optional .msg.AttributeData attridata = 2;
  bool has_attridata() const;
  private:
  bool _internal_has_attridata() const;
  public:
  void clear_attridata();
  const ::msg::AttributeData& attridata() const;
  ::msg::AttributeData* release_attridata();
  ::msg::AttributeData* mutable_attridata();
  void set_allocated_attridata(::msg::AttributeData* attridata);
  private:
  const ::msg::AttributeData& _internal_attridata() const;
  ::msg::AttributeData* _internal_mutable_attridata();
  public:

  // optional .msg.MapUserData mapdata = 3;
  bool has_mapdata() const;
  private:
  bool _internal_has_mapdata() const;
  public:
  void clear_mapdata();
  const ::msg::MapUserData& mapdata() const;
  ::msg::MapUserData* release_mapdata();
  ::msg::MapUserData* mutable_mapdata();
  void set_allocated_mapdata(::msg::MapUserData* mapdata);
  private:
  const ::msg::MapUserData& _internal_mapdata() const;
  ::msg::MapUserData* _internal_mutable_mapdata();
  public:

  // optional .msg.CharacterFightData fightdata = 4;
  bool has_fightdata() const;
  private:
  bool _internal_has_fightdata() const;
  public:
  void clear_fightdata();
  const ::msg::CharacterFightData& fightdata() const;
  ::msg::CharacterFightData* release_fightdata();
  ::msg::CharacterFightData* mutable_fightdata();
  void set_allocated_fightdata(::msg::CharacterFightData* fightdata);
  private:
  const ::msg::CharacterFightData& _internal_fightdata() const;
  ::msg::CharacterFightData* _internal_mutable_fightdata();
  public:

  // @@protoc_insertion_point(class_scope:msg.CharacterMainData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::CharacterBaseData* basedata_;
  ::msg::AttributeData* attridata_;
  ::msg::MapUserData* mapdata_;
  ::msg::CharacterFightData* fightdata_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class CharacterMapShow :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.CharacterMapShow) */ {
 public:
  CharacterMapShow();
  virtual ~CharacterMapShow();

  CharacterMapShow(const CharacterMapShow& from);
  CharacterMapShow(CharacterMapShow&& from) noexcept
    : CharacterMapShow() {
    *this = ::std::move(from);
  }

  inline CharacterMapShow& operator=(const CharacterMapShow& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharacterMapShow& operator=(CharacterMapShow&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CharacterMapShow& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharacterMapShow* internal_default_instance() {
    return reinterpret_cast<const CharacterMapShow*>(
               &_CharacterMapShow_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CharacterMapShow& a, CharacterMapShow& b) {
    a.Swap(&b);
  }
  inline void Swap(CharacterMapShow* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CharacterMapShow* New() const final {
    return CreateMaybeMessage<CharacterMapShow>(nullptr);
  }

  CharacterMapShow* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CharacterMapShow>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CharacterMapShow& from);
  void MergeFrom(const CharacterMapShow& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharacterMapShow* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.CharacterMapShow";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFaceFieldNumber = 1,
    kWeaponFieldNumber = 2,
    kCoatFieldNumber = 3,
    kOccupationFieldNumber = 4,
    kHeroidFieldNumber = 5,
    kFacestyleFieldNumber = 6,
    kHairstyleFieldNumber = 7,
    kHaircolorFieldNumber = 8,
    kAntennaFieldNumber = 9,
    kBodystyleFieldNumber = 10,
    kAvatarIdFieldNumber = 11,
  };
  // optional uint32 face = 1;
  bool has_face() const;
  private:
  bool _internal_has_face() const;
  public:
  void clear_face();
  ::PROTOBUF_NAMESPACE_ID::uint32 face() const;
  void set_face(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_face() const;
  void _internal_set_face(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 weapon = 2;
  bool has_weapon() const;
  private:
  bool _internal_has_weapon() const;
  public:
  void clear_weapon();
  ::PROTOBUF_NAMESPACE_ID::uint32 weapon() const;
  void set_weapon(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_weapon() const;
  void _internal_set_weapon(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 coat = 3;
  bool has_coat() const;
  private:
  bool _internal_has_coat() const;
  public:
  void clear_coat();
  ::PROTOBUF_NAMESPACE_ID::uint32 coat() const;
  void set_coat(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coat() const;
  void _internal_set_coat(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 occupation = 4;
  bool has_occupation() const;
  private:
  bool _internal_has_occupation() const;
  public:
  void clear_occupation();
  ::PROTOBUF_NAMESPACE_ID::uint32 occupation() const;
  void set_occupation(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_occupation() const;
  void _internal_set_occupation(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 heroid = 5;
  bool has_heroid() const;
  private:
  bool _internal_has_heroid() const;
  public:
  void clear_heroid();
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid() const;
  void set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_heroid() const;
  void _internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 facestyle = 6;
  bool has_facestyle() const;
  private:
  bool _internal_has_facestyle() const;
  public:
  void clear_facestyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 facestyle() const;
  void set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_facestyle() const;
  void _internal_set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hairstyle = 7;
  bool has_hairstyle() const;
  private:
  bool _internal_has_hairstyle() const;
  public:
  void clear_hairstyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 hairstyle() const;
  void set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hairstyle() const;
  void _internal_set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 haircolor = 8;
  bool has_haircolor() const;
  private:
  bool _internal_has_haircolor() const;
  public:
  void clear_haircolor();
  ::PROTOBUF_NAMESPACE_ID::uint32 haircolor() const;
  void set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_haircolor() const;
  void _internal_set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 antenna = 9;
  bool has_antenna() const;
  private:
  bool _internal_has_antenna() const;
  public:
  void clear_antenna();
  ::PROTOBUF_NAMESPACE_ID::uint32 antenna() const;
  void set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_antenna() const;
  void _internal_set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bodystyle = 10;
  bool has_bodystyle() const;
  private:
  bool _internal_has_bodystyle() const;
  public:
  void clear_bodystyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 bodystyle() const;
  void set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bodystyle() const;
  void _internal_set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 avatarId = 11;
  bool has_avatarid() const;
  private:
  bool _internal_has_avatarid() const;
  public:
  void clear_avatarid();
  ::PROTOBUF_NAMESPACE_ID::uint32 avatarid() const;
  void set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_avatarid() const;
  void _internal_set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.CharacterMapShow)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 face_;
  ::PROTOBUF_NAMESPACE_ID::uint32 weapon_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coat_;
  ::PROTOBUF_NAMESPACE_ID::uint32 occupation_;
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 facestyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hairstyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 haircolor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 antenna_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bodystyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 avatarid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class CharacterMapData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.CharacterMapData) */ {
 public:
  CharacterMapData();
  virtual ~CharacterMapData();

  CharacterMapData(const CharacterMapData& from);
  CharacterMapData(CharacterMapData&& from) noexcept
    : CharacterMapData() {
    *this = ::std::move(from);
  }

  inline CharacterMapData& operator=(const CharacterMapData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CharacterMapData& operator=(CharacterMapData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CharacterMapData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharacterMapData* internal_default_instance() {
    return reinterpret_cast<const CharacterMapData*>(
               &_CharacterMapData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CharacterMapData& a, CharacterMapData& b) {
    a.Swap(&b);
  }
  inline void Swap(CharacterMapData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CharacterMapData* New() const final {
    return CreateMaybeMessage<CharacterMapData>(nullptr);
  }

  CharacterMapData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CharacterMapData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CharacterMapData& from);
  void MergeFrom(const CharacterMapData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharacterMapData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.CharacterMapData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 7,
    kGuildnameFieldNumber = 11,
    kPosFieldNumber = 2,
    kLevelFieldNumber = 1,
    kDirFieldNumber = 3,
    kMovespeedFieldNumber = 4,
    kHpFieldNumber = 5,
    kMaxhpFieldNumber = 6,
    kTeamidFieldNumber = 8,
    kGuildidFieldNumber = 9,
    kCountryFieldNumber = 10,
  };
  // repeated .msg.StateItem states = 7;
  int states_size() const;
  private:
  int _internal_states_size() const;
  public:
  void clear_states();
  ::msg::StateItem* mutable_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >*
      mutable_states();
  private:
  const ::msg::StateItem& _internal_states(int index) const;
  ::msg::StateItem* _internal_add_states();
  public:
  const ::msg::StateItem& states(int index) const;
  ::msg::StateItem* add_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >&
      states() const;

  // optional string guildname = 11;
  bool has_guildname() const;
  private:
  bool _internal_has_guildname() const;
  public:
  void clear_guildname();
  const std::string& guildname() const;
  void set_guildname(const std::string& value);
  void set_guildname(std::string&& value);
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  std::string* mutable_guildname();
  std::string* release_guildname();
  void set_allocated_guildname(std::string* guildname);
  private:
  const std::string& _internal_guildname() const;
  void _internal_set_guildname(const std::string& value);
  std::string* _internal_mutable_guildname();
  public:

  // optional .msg.FloatMovePos pos = 2;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  const ::msg::FloatMovePos& pos() const;
  ::msg::FloatMovePos* release_pos();
  ::msg::FloatMovePos* mutable_pos();
  void set_allocated_pos(::msg::FloatMovePos* pos);
  private:
  const ::msg::FloatMovePos& _internal_pos() const;
  ::msg::FloatMovePos* _internal_mutable_pos();
  public:

  // optional uint32 level = 1;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dir = 3;
  bool has_dir() const;
  private:
  bool _internal_has_dir() const;
  public:
  void clear_dir();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir() const;
  void set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir() const;
  void _internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 movespeed = 4;
  bool has_movespeed() const;
  private:
  bool _internal_has_movespeed() const;
  public:
  void clear_movespeed();
  ::PROTOBUF_NAMESPACE_ID::uint32 movespeed() const;
  void set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_movespeed() const;
  void _internal_set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hp = 5;
  bool has_hp() const;
  private:
  bool _internal_has_hp() const;
  public:
  void clear_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 hp() const;
  void set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hp() const;
  void _internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxhp = 6;
  bool has_maxhp() const;
  private:
  bool _internal_has_maxhp() const;
  public:
  void clear_maxhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp() const;
  void set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxhp() const;
  void _internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 teamid = 8;
  bool has_teamid() const;
  private:
  bool _internal_has_teamid() const;
  public:
  void clear_teamid();
  ::PROTOBUF_NAMESPACE_ID::uint32 teamid() const;
  void set_teamid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_teamid() const;
  void _internal_set_teamid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 guildid = 9;
  bool has_guildid() const;
  private:
  bool _internal_has_guildid() const;
  public:
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 country = 10;
  bool has_country() const;
  private:
  bool _internal_has_country() const;
  public:
  void clear_country();
  ::PROTOBUF_NAMESPACE_ID::uint32 country() const;
  void set_country(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_country() const;
  void _internal_set_country(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.CharacterMapData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem > states_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guildname_;
  ::msg::FloatMovePos* pos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 movespeed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 teamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 country_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class StateItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.StateItem) */ {
 public:
  StateItem();
  virtual ~StateItem();

  StateItem(const StateItem& from);
  StateItem(StateItem&& from) noexcept
    : StateItem() {
    *this = ::std::move(from);
  }

  inline StateItem& operator=(const StateItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateItem& operator=(StateItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StateItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateItem* internal_default_instance() {
    return reinterpret_cast<const StateItem*>(
               &_StateItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(StateItem& a, StateItem& b) {
    a.Swap(&b);
  }
  inline void Swap(StateItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StateItem* New() const final {
    return CreateMaybeMessage<StateItem>(nullptr);
  }

  StateItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StateItem& from);
  void MergeFrom(const StateItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StateItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.StateItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEffectsFieldNumber = 7,
    kUniqidFieldNumber = 1,
    kLasttimeFieldNumber = 2,
    kOvertimeFieldNumber = 3,
    kSettimeFieldNumber = 4,
    kConfigtimeFieldNumber = 5,
    kSkilluuidFieldNumber = 6,
  };
  // repeated uint64 effects = 7;
  int effects_size() const;
  private:
  int _internal_effects_size() const;
  public:
  void clear_effects();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_effects(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_effects() const;
  void _internal_add_effects(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_effects();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 effects(int index) const;
  void set_effects(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_effects(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      effects() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_effects();

  // optional uint64 uniqid = 1;
  bool has_uniqid() const;
  private:
  bool _internal_has_uniqid() const;
  public:
  void clear_uniqid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uniqid() const;
  void set_uniqid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uniqid() const;
  void _internal_set_uniqid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 lasttime = 2;
  bool has_lasttime() const;
  private:
  bool _internal_has_lasttime() const;
  public:
  void clear_lasttime();
  ::PROTOBUF_NAMESPACE_ID::uint64 lasttime() const;
  void set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lasttime() const;
  void _internal_set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 overtime = 3;
  bool has_overtime() const;
  private:
  bool _internal_has_overtime() const;
  public:
  void clear_overtime();
  ::PROTOBUF_NAMESPACE_ID::uint64 overtime() const;
  void set_overtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_overtime() const;
  void _internal_set_overtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 settime = 4;
  bool has_settime() const;
  private:
  bool _internal_has_settime() const;
  public:
  void clear_settime();
  ::PROTOBUF_NAMESPACE_ID::uint64 settime() const;
  void set_settime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_settime() const;
  void _internal_set_settime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 configtime = 5;
  bool has_configtime() const;
  private:
  bool _internal_has_configtime() const;
  public:
  void clear_configtime();
  ::PROTOBUF_NAMESPACE_ID::uint64 configtime() const;
  void set_configtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_configtime() const;
  void _internal_set_configtime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 skilluuid = 6;
  bool has_skilluuid() const;
  private:
  bool _internal_has_skilluuid() const;
  public:
  void clear_skilluuid();
  ::PROTOBUF_NAMESPACE_ID::uint64 skilluuid() const;
  void set_skilluuid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_skilluuid() const;
  void _internal_set_skilluuid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.StateItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > effects_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uniqid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lasttime_;
  ::PROTOBUF_NAMESPACE_ID::uint64 overtime_;
  ::PROTOBUF_NAMESPACE_ID::uint64 settime_;
  ::PROTOBUF_NAMESPACE_ID::uint64 configtime_;
  ::PROTOBUF_NAMESPACE_ID::uint64 skilluuid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MapUserData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MapUserData) */ {
 public:
  MapUserData();
  virtual ~MapUserData();

  MapUserData(const MapUserData& from);
  MapUserData(MapUserData&& from) noexcept
    : MapUserData() {
    *this = ::std::move(from);
  }

  inline MapUserData& operator=(const MapUserData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapUserData& operator=(MapUserData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapUserData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapUserData* internal_default_instance() {
    return reinterpret_cast<const MapUserData*>(
               &_MapUserData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MapUserData& a, MapUserData& b) {
    a.Swap(&b);
  }
  inline void Swap(MapUserData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapUserData* New() const final {
    return CreateMaybeMessage<MapUserData>(nullptr);
  }

  MapUserData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapUserData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapUserData& from);
  void MergeFrom(const MapUserData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapUserData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MapUserData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kMapshowFieldNumber = 3,
    kBakheroFieldNumber = 4,
    kMapdataFieldNumber = 5,
    kCharidFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional .msg.CharacterMapShow mapshow = 3;
  bool has_mapshow() const;
  private:
  bool _internal_has_mapshow() const;
  public:
  void clear_mapshow();
  const ::msg::CharacterMapShow& mapshow() const;
  ::msg::CharacterMapShow* release_mapshow();
  ::msg::CharacterMapShow* mutable_mapshow();
  void set_allocated_mapshow(::msg::CharacterMapShow* mapshow);
  private:
  const ::msg::CharacterMapShow& _internal_mapshow() const;
  ::msg::CharacterMapShow* _internal_mutable_mapshow();
  public:

  // optional .msg.CharacterMapShow bakhero = 4;
  bool has_bakhero() const;
  private:
  bool _internal_has_bakhero() const;
  public:
  void clear_bakhero();
  const ::msg::CharacterMapShow& bakhero() const;
  ::msg::CharacterMapShow* release_bakhero();
  ::msg::CharacterMapShow* mutable_bakhero();
  void set_allocated_bakhero(::msg::CharacterMapShow* bakhero);
  private:
  const ::msg::CharacterMapShow& _internal_bakhero() const;
  ::msg::CharacterMapShow* _internal_mutable_bakhero();
  public:

  // optional .msg.CharacterMapData mapdata = 5;
  bool has_mapdata() const;
  private:
  bool _internal_has_mapdata() const;
  public:
  void clear_mapdata();
  const ::msg::CharacterMapData& mapdata() const;
  ::msg::CharacterMapData* release_mapdata();
  ::msg::CharacterMapData* mutable_mapdata();
  void set_allocated_mapdata(::msg::CharacterMapData* mapdata);
  private:
  const ::msg::CharacterMapData& _internal_mapdata() const;
  ::msg::CharacterMapData* _internal_mutable_mapdata();
  public:

  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MapUserData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::msg::CharacterMapShow* mapshow_;
  ::msg::CharacterMapShow* bakhero_;
  ::msg::CharacterMapData* mapdata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MasterData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MasterData) */ {
 public:
  MasterData();
  virtual ~MasterData();

  MasterData(const MasterData& from);
  MasterData(MasterData&& from) noexcept
    : MasterData() {
    *this = ::std::move(from);
  }

  inline MasterData& operator=(const MasterData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MasterData& operator=(MasterData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MasterData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MasterData* internal_default_instance() {
    return reinterpret_cast<const MasterData*>(
               &_MasterData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MasterData& a, MasterData& b) {
    a.Swap(&b);
  }
  inline void Swap(MasterData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MasterData* New() const final {
    return CreateMaybeMessage<MasterData>(nullptr);
  }

  MasterData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MasterData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MasterData& from);
  void MergeFrom(const MasterData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MasterData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MasterData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kIdtypeFieldNumber = 1,
    kGuildidFieldNumber = 4,
    kCountryFieldNumber = 3,
    kTeamidFieldNumber = 5,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional .msg.EntryIDType idtype = 1;
  bool has_idtype() const;
  private:
  bool _internal_has_idtype() const;
  public:
  void clear_idtype();
  const ::msg::EntryIDType& idtype() const;
  ::msg::EntryIDType* release_idtype();
  ::msg::EntryIDType* mutable_idtype();
  void set_allocated_idtype(::msg::EntryIDType* idtype);
  private:
  const ::msg::EntryIDType& _internal_idtype() const;
  ::msg::EntryIDType* _internal_mutable_idtype();
  public:

  // optional uint64 guildid = 4;
  bool has_guildid() const;
  private:
  bool _internal_has_guildid() const;
  public:
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 country = 3;
  bool has_country() const;
  private:
  bool _internal_has_country() const;
  public:
  void clear_country();
  ::PROTOBUF_NAMESPACE_ID::uint32 country() const;
  void set_country(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_country() const;
  void _internal_set_country(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 teamid = 5;
  bool has_teamid() const;
  private:
  bool _internal_has_teamid() const;
  public:
  void clear_teamid();
  ::PROTOBUF_NAMESPACE_ID::uint32 teamid() const;
  void set_teamid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_teamid() const;
  void _internal_set_teamid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MasterData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::msg::EntryIDType* idtype_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 country_;
  ::PROTOBUF_NAMESPACE_ID::uint32 teamid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MapNpcData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MapNpcData) */ {
 public:
  MapNpcData();
  virtual ~MapNpcData();

  MapNpcData(const MapNpcData& from);
  MapNpcData(MapNpcData&& from) noexcept
    : MapNpcData() {
    *this = ::std::move(from);
  }

  inline MapNpcData& operator=(const MapNpcData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapNpcData& operator=(MapNpcData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapNpcData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapNpcData* internal_default_instance() {
    return reinterpret_cast<const MapNpcData*>(
               &_MapNpcData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MapNpcData& a, MapNpcData& b) {
    a.Swap(&b);
  }
  inline void Swap(MapNpcData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapNpcData* New() const final {
    return CreateMaybeMessage<MapNpcData>(nullptr);
  }

  MapNpcData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapNpcData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapNpcData& from);
  void MergeFrom(const MapNpcData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapNpcData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MapNpcData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 13,
    kNameFieldNumber = 3,
    kTitlenameFieldNumber = 15,
    kPosFieldNumber = 6,
    kMasterFieldNumber = 11,
    kShowdataFieldNumber = 14,
    kHatredlistFieldNumber = 17,
    kTempidFieldNumber = 2,
    kBaseidFieldNumber = 1,
    kHpFieldNumber = 4,
    kMaxhpFieldNumber = 5,
    kDirFieldNumber = 8,
    kMovespeedFieldNumber = 9,
    kAttspeedFieldNumber = 10,
    kVisitFieldNumber = 12,
    kBirthFieldNumber = 16,
  };
  // repeated .msg.StateItem states = 13;
  int states_size() const;
  private:
  int _internal_states_size() const;
  public:
  void clear_states();
  ::msg::StateItem* mutable_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >*
      mutable_states();
  private:
  const ::msg::StateItem& _internal_states(int index) const;
  ::msg::StateItem* _internal_add_states();
  public:
  const ::msg::StateItem& states(int index) const;
  ::msg::StateItem* add_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >&
      states() const;

  // optional string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string titlename = 15;
  bool has_titlename() const;
  private:
  bool _internal_has_titlename() const;
  public:
  void clear_titlename();
  const std::string& titlename() const;
  void set_titlename(const std::string& value);
  void set_titlename(std::string&& value);
  void set_titlename(const char* value);
  void set_titlename(const char* value, size_t size);
  std::string* mutable_titlename();
  std::string* release_titlename();
  void set_allocated_titlename(std::string* titlename);
  private:
  const std::string& _internal_titlename() const;
  void _internal_set_titlename(const std::string& value);
  std::string* _internal_mutable_titlename();
  public:

  // optional .msg.FloatMovePos pos = 6;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  const ::msg::FloatMovePos& pos() const;
  ::msg::FloatMovePos* release_pos();
  ::msg::FloatMovePos* mutable_pos();
  void set_allocated_pos(::msg::FloatMovePos* pos);
  private:
  const ::msg::FloatMovePos& _internal_pos() const;
  ::msg::FloatMovePos* _internal_mutable_pos();
  public:

  // optional .msg.MasterData master = 11;
  bool has_master() const;
  private:
  bool _internal_has_master() const;
  public:
  void clear_master();
  const ::msg::MasterData& master() const;
  ::msg::MasterData* release_master();
  ::msg::MasterData* mutable_master();
  void set_allocated_master(::msg::MasterData* master);
  private:
  const ::msg::MasterData& _internal_master() const;
  ::msg::MasterData* _internal_mutable_master();
  public:

  // optional .msg.CharacterMapShow showdata = 14;
  bool has_showdata() const;
  private:
  bool _internal_has_showdata() const;
  public:
  void clear_showdata();
  const ::msg::CharacterMapShow& showdata() const;
  ::msg::CharacterMapShow* release_showdata();
  ::msg::CharacterMapShow* mutable_showdata();
  void set_allocated_showdata(::msg::CharacterMapShow* showdata);
  private:
  const ::msg::CharacterMapShow& _internal_showdata() const;
  ::msg::CharacterMapShow* _internal_mutable_showdata();
  public:

  // optional .msg.NPC_HatredList hatredlist = 17;
  bool has_hatredlist() const;
  private:
  bool _internal_has_hatredlist() const;
  public:
  void clear_hatredlist();
  const ::msg::NPC_HatredList& hatredlist() const;
  ::msg::NPC_HatredList* release_hatredlist();
  ::msg::NPC_HatredList* mutable_hatredlist();
  void set_allocated_hatredlist(::msg::NPC_HatredList* hatredlist);
  private:
  const ::msg::NPC_HatredList& _internal_hatredlist() const;
  ::msg::NPC_HatredList* _internal_mutable_hatredlist();
  public:

  // optional uint64 tempid = 2;
  bool has_tempid() const;
  private:
  bool _internal_has_tempid() const;
  public:
  void clear_tempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid() const;
  void set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tempid() const;
  void _internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 baseid = 1;
  bool has_baseid() const;
  private:
  bool _internal_has_baseid() const;
  public:
  void clear_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid() const;
  void set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseid() const;
  void _internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hp = 4;
  bool has_hp() const;
  private:
  bool _internal_has_hp() const;
  public:
  void clear_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 hp() const;
  void set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hp() const;
  void _internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxhp = 5;
  bool has_maxhp() const;
  private:
  bool _internal_has_maxhp() const;
  public:
  void clear_maxhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp() const;
  void set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxhp() const;
  void _internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dir = 8;
  bool has_dir() const;
  private:
  bool _internal_has_dir() const;
  public:
  void clear_dir();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir() const;
  void set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir() const;
  void _internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 movespeed = 9;
  bool has_movespeed() const;
  private:
  bool _internal_has_movespeed() const;
  public:
  void clear_movespeed();
  ::PROTOBUF_NAMESPACE_ID::uint32 movespeed() const;
  void set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_movespeed() const;
  void _internal_set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 attspeed = 10;
  bool has_attspeed() const;
  private:
  bool _internal_has_attspeed() const;
  public:
  void clear_attspeed();
  ::PROTOBUF_NAMESPACE_ID::uint32 attspeed() const;
  void set_attspeed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attspeed() const;
  void _internal_set_attspeed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 visit = 12;
  bool has_visit() const;
  private:
  bool _internal_has_visit() const;
  public:
  void clear_visit();
  ::PROTOBUF_NAMESPACE_ID::uint32 visit() const;
  void set_visit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_visit() const;
  void _internal_set_visit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool birth = 16 [default = false];
  bool has_birth() const;
  private:
  bool _internal_has_birth() const;
  public:
  void clear_birth();
  bool birth() const;
  void set_birth(bool value);
  private:
  bool _internal_birth() const;
  void _internal_set_birth(bool value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MapNpcData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem > states_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr titlename_;
  ::msg::FloatMovePos* pos_;
  ::msg::MasterData* master_;
  ::msg::CharacterMapShow* showdata_;
  ::msg::NPC_HatredList* hatredlist_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 movespeed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attspeed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 visit_;
  bool birth_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Create_Role_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Create_Role_CS) */ {
 public:
  MSG_Create_Role_CS();
  virtual ~MSG_Create_Role_CS();

  MSG_Create_Role_CS(const MSG_Create_Role_CS& from);
  MSG_Create_Role_CS(MSG_Create_Role_CS&& from) noexcept
    : MSG_Create_Role_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Create_Role_CS& operator=(const MSG_Create_Role_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Create_Role_CS& operator=(MSG_Create_Role_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Create_Role_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Create_Role_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Create_Role_CS*>(
               &_MSG_Create_Role_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_Create_Role_CS& a, MSG_Create_Role_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Create_Role_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Create_Role_CS* New() const final {
    return CreateMaybeMessage<MSG_Create_Role_CS>(nullptr);
  }

  MSG_Create_Role_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Create_Role_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Create_Role_CS& from);
  void MergeFrom(const MSG_Create_Role_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Create_Role_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Create_Role_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kOccupationFieldNumber = 2,
    kHeroidFieldNumber = 3,
    kFacestyleFieldNumber = 5,
    kHairstyleFieldNumber = 6,
    kHaircolorFieldNumber = 7,
    kAntennaFieldNumber = 8,
    kSexFieldNumber = 4,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint32 occupation = 2;
  bool has_occupation() const;
  private:
  bool _internal_has_occupation() const;
  public:
  void clear_occupation();
  ::PROTOBUF_NAMESPACE_ID::uint32 occupation() const;
  void set_occupation(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_occupation() const;
  void _internal_set_occupation(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 heroid = 3;
  bool has_heroid() const;
  private:
  bool _internal_has_heroid() const;
  public:
  void clear_heroid();
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid() const;
  void set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_heroid() const;
  void _internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 facestyle = 5;
  bool has_facestyle() const;
  private:
  bool _internal_has_facestyle() const;
  public:
  void clear_facestyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 facestyle() const;
  void set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_facestyle() const;
  void _internal_set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hairstyle = 6;
  bool has_hairstyle() const;
  private:
  bool _internal_has_hairstyle() const;
  public:
  void clear_hairstyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 hairstyle() const;
  void set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hairstyle() const;
  void _internal_set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 haircolor = 7;
  bool has_haircolor() const;
  private:
  bool _internal_has_haircolor() const;
  public:
  void clear_haircolor();
  ::PROTOBUF_NAMESPACE_ID::uint32 haircolor() const;
  void set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_haircolor() const;
  void _internal_set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 antenna = 8;
  bool has_antenna() const;
  private:
  bool _internal_has_antenna() const;
  public:
  void clear_antenna();
  ::PROTOBUF_NAMESPACE_ID::uint32 antenna() const;
  void set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_antenna() const;
  void _internal_set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .msg.SEX sex = 4;
  bool has_sex() const;
  private:
  bool _internal_has_sex() const;
  public:
  void clear_sex();
  ::msg::SEX sex() const;
  void set_sex(::msg::SEX value);
  private:
  ::msg::SEX _internal_sex() const;
  void _internal_set_sex(::msg::SEX value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Create_Role_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 occupation_;
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 facestyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hairstyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 haircolor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 antenna_;
  int sex_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_ChangeName_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_ChangeName_CS) */ {
 public:
  MSG_ChangeName_CS();
  virtual ~MSG_ChangeName_CS();

  MSG_ChangeName_CS(const MSG_ChangeName_CS& from);
  MSG_ChangeName_CS(MSG_ChangeName_CS&& from) noexcept
    : MSG_ChangeName_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ChangeName_CS& operator=(const MSG_ChangeName_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ChangeName_CS& operator=(MSG_ChangeName_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ChangeName_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ChangeName_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ChangeName_CS*>(
               &_MSG_ChangeName_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_ChangeName_CS& a, MSG_ChangeName_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ChangeName_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ChangeName_CS* New() const final {
    return CreateMaybeMessage<MSG_ChangeName_CS>(nullptr);
  }

  MSG_ChangeName_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ChangeName_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ChangeName_CS& from);
  void MergeFrom(const MSG_ChangeName_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ChangeName_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_ChangeName_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_ChangeName_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_ChangeName_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_ChangeName_SC) */ {
 public:
  MSG_Ret_ChangeName_SC();
  virtual ~MSG_Ret_ChangeName_SC();

  MSG_Ret_ChangeName_SC(const MSG_Ret_ChangeName_SC& from);
  MSG_Ret_ChangeName_SC(MSG_Ret_ChangeName_SC&& from) noexcept
    : MSG_Ret_ChangeName_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_ChangeName_SC& operator=(const MSG_Ret_ChangeName_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_ChangeName_SC& operator=(MSG_Ret_ChangeName_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_ChangeName_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_ChangeName_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_ChangeName_SC*>(
               &_MSG_Ret_ChangeName_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_Ret_ChangeName_SC& a, MSG_Ret_ChangeName_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_ChangeName_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_ChangeName_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_ChangeName_SC>(nullptr);
  }

  MSG_Ret_ChangeName_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_ChangeName_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_ChangeName_SC& from);
  void MergeFrom(const MSG_Ret_ChangeName_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_ChangeName_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_ChangeName_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional bool result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_ChangeName_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  bool result_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_DataCharacterMain_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_DataCharacterMain_SC) */ {
 public:
  MSG_DataCharacterMain_SC();
  virtual ~MSG_DataCharacterMain_SC();

  MSG_DataCharacterMain_SC(const MSG_DataCharacterMain_SC& from);
  MSG_DataCharacterMain_SC(MSG_DataCharacterMain_SC&& from) noexcept
    : MSG_DataCharacterMain_SC() {
    *this = ::std::move(from);
  }

  inline MSG_DataCharacterMain_SC& operator=(const MSG_DataCharacterMain_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_DataCharacterMain_SC& operator=(MSG_DataCharacterMain_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_DataCharacterMain_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_DataCharacterMain_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_DataCharacterMain_SC*>(
               &_MSG_DataCharacterMain_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MSG_DataCharacterMain_SC& a, MSG_DataCharacterMain_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_DataCharacterMain_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_DataCharacterMain_SC* New() const final {
    return CreateMaybeMessage<MSG_DataCharacterMain_SC>(nullptr);
  }

  MSG_DataCharacterMain_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_DataCharacterMain_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_DataCharacterMain_SC& from);
  void MergeFrom(const MSG_DataCharacterMain_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_DataCharacterMain_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_DataCharacterMain_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // optional .msg.CharacterMainData data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::msg::CharacterMainData& data() const;
  ::msg::CharacterMainData* release_data();
  ::msg::CharacterMainData* mutable_data();
  void set_allocated_data(::msg::CharacterMainData* data);
  private:
  const ::msg::CharacterMainData& _internal_data() const;
  ::msg::CharacterMainData* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_DataCharacterMain_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::CharacterMainData* data_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_Use_GM_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_Use_GM_CS) */ {
 public:
  MSG_Req_Use_GM_CS();
  virtual ~MSG_Req_Use_GM_CS();

  MSG_Req_Use_GM_CS(const MSG_Req_Use_GM_CS& from);
  MSG_Req_Use_GM_CS(MSG_Req_Use_GM_CS&& from) noexcept
    : MSG_Req_Use_GM_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_Use_GM_CS& operator=(const MSG_Req_Use_GM_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_Use_GM_CS& operator=(MSG_Req_Use_GM_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_Use_GM_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_Use_GM_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_Use_GM_CS*>(
               &_MSG_Req_Use_GM_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MSG_Req_Use_GM_CS& a, MSG_Req_Use_GM_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_Use_GM_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_Use_GM_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_Use_GM_CS>(nullptr);
  }

  MSG_Req_Use_GM_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_Use_GM_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_Use_GM_CS& from);
  void MergeFrom(const MSG_Req_Use_GM_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_Use_GM_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_Use_GM_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrcontentFieldNumber = 1,
  };
  // optional string strcontent = 1;
  bool has_strcontent() const;
  private:
  bool _internal_has_strcontent() const;
  public:
  void clear_strcontent();
  const std::string& strcontent() const;
  void set_strcontent(const std::string& value);
  void set_strcontent(std::string&& value);
  void set_strcontent(const char* value);
  void set_strcontent(const char* value, size_t size);
  std::string* mutable_strcontent();
  std::string* release_strcontent();
  void set_allocated_strcontent(std::string* strcontent);
  private:
  const std::string& _internal_strcontent() const;
  void _internal_set_strcontent(const std::string& value);
  std::string* _internal_mutable_strcontent();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_Use_GM_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strcontent_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_Common_Error_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_Common_Error_SC) */ {
 public:
  MSG_Ret_Common_Error_SC();
  virtual ~MSG_Ret_Common_Error_SC();

  MSG_Ret_Common_Error_SC(const MSG_Ret_Common_Error_SC& from);
  MSG_Ret_Common_Error_SC(MSG_Ret_Common_Error_SC&& from) noexcept
    : MSG_Ret_Common_Error_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_Common_Error_SC& operator=(const MSG_Ret_Common_Error_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_Common_Error_SC& operator=(MSG_Ret_Common_Error_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_Common_Error_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_Common_Error_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_Common_Error_SC*>(
               &_MSG_Ret_Common_Error_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MSG_Ret_Common_Error_SC& a, MSG_Ret_Common_Error_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_Common_Error_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_Common_Error_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_Common_Error_SC>(nullptr);
  }

  MSG_Ret_Common_Error_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_Common_Error_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_Common_Error_SC& from);
  void MergeFrom(const MSG_Ret_Common_Error_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_Common_Error_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_Common_Error_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorcodeFieldNumber = 1,
  };
  // optional uint32 errorcode = 1;
  bool has_errorcode() const;
  private:
  bool _internal_has_errorcode() const;
  public:
  void clear_errorcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errorcode() const;
  void set_errorcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errorcode() const;
  void _internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_Common_Error_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errorcode_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_Common_Tips_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_Common_Tips_SC) */ {
 public:
  MSG_Ret_Common_Tips_SC();
  virtual ~MSG_Ret_Common_Tips_SC();

  MSG_Ret_Common_Tips_SC(const MSG_Ret_Common_Tips_SC& from);
  MSG_Ret_Common_Tips_SC(MSG_Ret_Common_Tips_SC&& from) noexcept
    : MSG_Ret_Common_Tips_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_Common_Tips_SC& operator=(const MSG_Ret_Common_Tips_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_Common_Tips_SC& operator=(MSG_Ret_Common_Tips_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_Common_Tips_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_Common_Tips_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_Common_Tips_SC*>(
               &_MSG_Ret_Common_Tips_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MSG_Ret_Common_Tips_SC& a, MSG_Ret_Common_Tips_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_Common_Tips_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_Common_Tips_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_Common_Tips_SC>(nullptr);
  }

  MSG_Ret_Common_Tips_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_Common_Tips_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_Common_Tips_SC& from);
  void MergeFrom(const MSG_Ret_Common_Tips_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_Common_Tips_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_Common_Tips_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrcontentFieldNumber = 1,
  };
  // optional string strcontent = 1;
  bool has_strcontent() const;
  private:
  bool _internal_has_strcontent() const;
  public:
  void clear_strcontent();
  const std::string& strcontent() const;
  void set_strcontent(const std::string& value);
  void set_strcontent(std::string&& value);
  void set_strcontent(const char* value);
  void set_strcontent(const char* value, size_t size);
  std::string* mutable_strcontent();
  std::string* release_strcontent();
  void set_allocated_strcontent(std::string* strcontent);
  private:
  const std::string& _internal_strcontent() const;
  void _internal_set_strcontent(const std::string& value);
  std::string* _internal_mutable_strcontent();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_Common_Tips_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strcontent_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_Main_Data_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_Main_Data_CS) */ {
 public:
  MSG_Req_Main_Data_CS();
  virtual ~MSG_Req_Main_Data_CS();

  MSG_Req_Main_Data_CS(const MSG_Req_Main_Data_CS& from);
  MSG_Req_Main_Data_CS(MSG_Req_Main_Data_CS&& from) noexcept
    : MSG_Req_Main_Data_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_Main_Data_CS& operator=(const MSG_Req_Main_Data_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_Main_Data_CS& operator=(MSG_Req_Main_Data_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_Main_Data_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_Main_Data_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_Main_Data_CS*>(
               &_MSG_Req_Main_Data_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MSG_Req_Main_Data_CS& a, MSG_Req_Main_Data_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_Main_Data_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_Main_Data_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_Main_Data_CS>(nullptr);
  }

  MSG_Req_Main_Data_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_Main_Data_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_Main_Data_CS& from);
  void MergeFrom(const MSG_Req_Main_Data_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_Main_Data_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_Main_Data_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_Main_Data_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_Test_Network_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_Test_Network_CS) */ {
 public:
  MSG_Req_Test_Network_CS();
  virtual ~MSG_Req_Test_Network_CS();

  MSG_Req_Test_Network_CS(const MSG_Req_Test_Network_CS& from);
  MSG_Req_Test_Network_CS(MSG_Req_Test_Network_CS&& from) noexcept
    : MSG_Req_Test_Network_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_Test_Network_CS& operator=(const MSG_Req_Test_Network_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_Test_Network_CS& operator=(MSG_Req_Test_Network_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_Test_Network_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_Test_Network_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_Test_Network_CS*>(
               &_MSG_Req_Test_Network_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MSG_Req_Test_Network_CS& a, MSG_Req_Test_Network_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_Test_Network_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_Test_Network_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_Test_Network_CS>(nullptr);
  }

  MSG_Req_Test_Network_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_Test_Network_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_Test_Network_CS& from);
  void MergeFrom(const MSG_Req_Test_Network_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_Test_Network_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_Test_Network_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNum2FieldNumber = 3,
    kNameFieldNumber = 2,
    kNumFieldNumber = 1,
  };
  // repeated uint32 num2 = 3;
  int num2_size() const;
  private:
  int _internal_num2_size() const;
  public:
  void clear_num2();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num2(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_num2() const;
  void _internal_add_num2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_num2();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 num2(int index) const;
  void set_num2(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_num2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      num2() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_num2();

  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint32 num = 1;
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_Test_Network_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > num2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GameTime_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_GameTime_SC) */ {
 public:
  MSG_Ret_GameTime_SC();
  virtual ~MSG_Ret_GameTime_SC();

  MSG_Ret_GameTime_SC(const MSG_Ret_GameTime_SC& from);
  MSG_Ret_GameTime_SC(MSG_Ret_GameTime_SC&& from) noexcept
    : MSG_Ret_GameTime_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GameTime_SC& operator=(const MSG_Ret_GameTime_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GameTime_SC& operator=(MSG_Ret_GameTime_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GameTime_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GameTime_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GameTime_SC*>(
               &_MSG_Ret_GameTime_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MSG_Ret_GameTime_SC& a, MSG_Ret_GameTime_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GameTime_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GameTime_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GameTime_SC>(nullptr);
  }

  MSG_Ret_GameTime_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GameTime_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GameTime_SC& from);
  void MergeFrom(const MSG_Ret_GameTime_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GameTime_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_GameTime_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGametimeFieldNumber = 1,
  };
  // optional uint64 gametime = 1;
  bool has_gametime() const;
  private:
  bool _internal_has_gametime() const;
  public:
  void clear_gametime();
  ::PROTOBUF_NAMESPACE_ID::uint64 gametime() const;
  void set_gametime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gametime() const;
  void _internal_set_gametime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_GameTime_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gametime_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_UserGameTime_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_UserGameTime_SC) */ {
 public:
  MSG_Req_UserGameTime_SC();
  virtual ~MSG_Req_UserGameTime_SC();

  MSG_Req_UserGameTime_SC(const MSG_Req_UserGameTime_SC& from);
  MSG_Req_UserGameTime_SC(MSG_Req_UserGameTime_SC&& from) noexcept
    : MSG_Req_UserGameTime_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Req_UserGameTime_SC& operator=(const MSG_Req_UserGameTime_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_UserGameTime_SC& operator=(MSG_Req_UserGameTime_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_UserGameTime_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_UserGameTime_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_UserGameTime_SC*>(
               &_MSG_Req_UserGameTime_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MSG_Req_UserGameTime_SC& a, MSG_Req_UserGameTime_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_UserGameTime_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_UserGameTime_SC* New() const final {
    return CreateMaybeMessage<MSG_Req_UserGameTime_SC>(nullptr);
  }

  MSG_Req_UserGameTime_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_UserGameTime_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_UserGameTime_SC& from);
  void MergeFrom(const MSG_Req_UserGameTime_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_UserGameTime_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_UserGameTime_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_UserGameTime_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_UserGameTime_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_UserGameTime_CS) */ {
 public:
  MSG_Ret_UserGameTime_CS();
  virtual ~MSG_Ret_UserGameTime_CS();

  MSG_Ret_UserGameTime_CS(const MSG_Ret_UserGameTime_CS& from);
  MSG_Ret_UserGameTime_CS(MSG_Ret_UserGameTime_CS&& from) noexcept
    : MSG_Ret_UserGameTime_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_UserGameTime_CS& operator=(const MSG_Ret_UserGameTime_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_UserGameTime_CS& operator=(MSG_Ret_UserGameTime_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_UserGameTime_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_UserGameTime_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_UserGameTime_CS*>(
               &_MSG_Ret_UserGameTime_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(MSG_Ret_UserGameTime_CS& a, MSG_Ret_UserGameTime_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_UserGameTime_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_UserGameTime_CS* New() const final {
    return CreateMaybeMessage<MSG_Ret_UserGameTime_CS>(nullptr);
  }

  MSG_Ret_UserGameTime_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_UserGameTime_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_UserGameTime_CS& from);
  void MergeFrom(const MSG_Ret_UserGameTime_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_UserGameTime_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_UserGameTime_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGametimeFieldNumber = 2,
    kUsertempidFieldNumber = 1,
  };
  // optional uint64 gametime = 2;
  bool has_gametime() const;
  private:
  bool _internal_has_gametime() const;
  public:
  void clear_gametime();
  ::PROTOBUF_NAMESPACE_ID::uint64 gametime() const;
  void set_gametime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gametime() const;
  void _internal_set_gametime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 usertempid = 1;
  bool has_usertempid() const;
  private:
  bool _internal_has_usertempid() const;
  public:
  void clear_usertempid();
  ::PROTOBUF_NAMESPACE_ID::uint32 usertempid() const;
  void set_usertempid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_usertempid() const;
  void _internal_set_usertempid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_UserGameTime_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gametime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 usertempid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_ServerTime_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_ServerTime_SC) */ {
 public:
  MSG_Ret_ServerTime_SC();
  virtual ~MSG_Ret_ServerTime_SC();

  MSG_Ret_ServerTime_SC(const MSG_Ret_ServerTime_SC& from);
  MSG_Ret_ServerTime_SC(MSG_Ret_ServerTime_SC&& from) noexcept
    : MSG_Ret_ServerTime_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_ServerTime_SC& operator=(const MSG_Ret_ServerTime_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_ServerTime_SC& operator=(MSG_Ret_ServerTime_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_ServerTime_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_ServerTime_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_ServerTime_SC*>(
               &_MSG_Ret_ServerTime_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(MSG_Ret_ServerTime_SC& a, MSG_Ret_ServerTime_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_ServerTime_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_ServerTime_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_ServerTime_SC>(nullptr);
  }

  MSG_Ret_ServerTime_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_ServerTime_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_ServerTime_SC& from);
  void MergeFrom(const MSG_Ret_ServerTime_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_ServerTime_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_ServerTime_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServertimeFieldNumber = 1,
  };
  // optional uint64 servertime = 1;
  bool has_servertime() const;
  private:
  bool _internal_has_servertime() const;
  public:
  void clear_servertime();
  ::PROTOBUF_NAMESPACE_ID::uint64 servertime() const;
  void set_servertime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_servertime() const;
  void _internal_set_servertime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_ServerTime_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 servertime_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_NotifyUserKickout_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_NotifyUserKickout_SC) */ {
 public:
  MSG_Ret_NotifyUserKickout_SC();
  virtual ~MSG_Ret_NotifyUserKickout_SC();

  MSG_Ret_NotifyUserKickout_SC(const MSG_Ret_NotifyUserKickout_SC& from);
  MSG_Ret_NotifyUserKickout_SC(MSG_Ret_NotifyUserKickout_SC&& from) noexcept
    : MSG_Ret_NotifyUserKickout_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_NotifyUserKickout_SC& operator=(const MSG_Ret_NotifyUserKickout_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_NotifyUserKickout_SC& operator=(MSG_Ret_NotifyUserKickout_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_NotifyUserKickout_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_NotifyUserKickout_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_NotifyUserKickout_SC*>(
               &_MSG_Ret_NotifyUserKickout_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(MSG_Ret_NotifyUserKickout_SC& a, MSG_Ret_NotifyUserKickout_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_NotifyUserKickout_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_NotifyUserKickout_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_NotifyUserKickout_SC>(nullptr);
  }

  MSG_Ret_NotifyUserKickout_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_NotifyUserKickout_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_NotifyUserKickout_SC& from);
  void MergeFrom(const MSG_Ret_NotifyUserKickout_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_NotifyUserKickout_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_NotifyUserKickout_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_NotifyUserKickout_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_ServerLoginFailed_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_ServerLoginFailed_SC) */ {
 public:
  MSG_Ret_ServerLoginFailed_SC();
  virtual ~MSG_Ret_ServerLoginFailed_SC();

  MSG_Ret_ServerLoginFailed_SC(const MSG_Ret_ServerLoginFailed_SC& from);
  MSG_Ret_ServerLoginFailed_SC(MSG_Ret_ServerLoginFailed_SC&& from) noexcept
    : MSG_Ret_ServerLoginFailed_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_ServerLoginFailed_SC& operator=(const MSG_Ret_ServerLoginFailed_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_ServerLoginFailed_SC& operator=(MSG_Ret_ServerLoginFailed_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_ServerLoginFailed_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_ServerLoginFailed_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_ServerLoginFailed_SC*>(
               &_MSG_Ret_ServerLoginFailed_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(MSG_Ret_ServerLoginFailed_SC& a, MSG_Ret_ServerLoginFailed_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_ServerLoginFailed_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_ServerLoginFailed_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_ServerLoginFailed_SC>(nullptr);
  }

  MSG_Ret_ServerLoginFailed_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_ServerLoginFailed_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_ServerLoginFailed_SC& from);
  void MergeFrom(const MSG_Ret_ServerLoginFailed_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_ServerLoginFailed_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_ServerLoginFailed_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturncodeFieldNumber = 1,
  };
  // optional uint32 returncode = 1;
  bool has_returncode() const;
  private:
  bool _internal_has_returncode() const;
  public:
  void clear_returncode();
  ::PROTOBUF_NAMESPACE_ID::uint32 returncode() const;
  void set_returncode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_returncode() const;
  void _internal_set_returncode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_ServerLoginFailed_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 returncode_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_QueueInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_QueueInfo_SC) */ {
 public:
  MSG_Ret_QueueInfo_SC();
  virtual ~MSG_Ret_QueueInfo_SC();

  MSG_Ret_QueueInfo_SC(const MSG_Ret_QueueInfo_SC& from);
  MSG_Ret_QueueInfo_SC(MSG_Ret_QueueInfo_SC&& from) noexcept
    : MSG_Ret_QueueInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_QueueInfo_SC& operator=(const MSG_Ret_QueueInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_QueueInfo_SC& operator=(MSG_Ret_QueueInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_QueueInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_QueueInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_QueueInfo_SC*>(
               &_MSG_Ret_QueueInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(MSG_Ret_QueueInfo_SC& a, MSG_Ret_QueueInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_QueueInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_QueueInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_QueueInfo_SC>(nullptr);
  }

  MSG_Ret_QueueInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_QueueInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_QueueInfo_SC& from);
  void MergeFrom(const MSG_Ret_QueueInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_QueueInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_QueueInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQueueUserNumFieldNumber = 1,
    kQueueWaitTimeFieldNumber = 2,
  };
  // optional uint32 queue_user_num = 1;
  bool has_queue_user_num() const;
  private:
  bool _internal_has_queue_user_num() const;
  public:
  void clear_queue_user_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 queue_user_num() const;
  void set_queue_user_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_queue_user_num() const;
  void _internal_set_queue_user_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 queue_wait_time = 2;
  bool has_queue_wait_time() const;
  private:
  bool _internal_has_queue_wait_time() const;
  public:
  void clear_queue_wait_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 queue_wait_time() const;
  void set_queue_wait_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_queue_wait_time() const;
  void _internal_set_queue_wait_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_QueueInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 queue_user_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 queue_wait_time_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_UserMapInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_UserMapInfo_SC) */ {
 public:
  MSG_Ret_UserMapInfo_SC();
  virtual ~MSG_Ret_UserMapInfo_SC();

  MSG_Ret_UserMapInfo_SC(const MSG_Ret_UserMapInfo_SC& from);
  MSG_Ret_UserMapInfo_SC(MSG_Ret_UserMapInfo_SC&& from) noexcept
    : MSG_Ret_UserMapInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_UserMapInfo_SC& operator=(const MSG_Ret_UserMapInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_UserMapInfo_SC& operator=(MSG_Ret_UserMapInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_UserMapInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_UserMapInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_UserMapInfo_SC*>(
               &_MSG_Ret_UserMapInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(MSG_Ret_UserMapInfo_SC& a, MSG_Ret_UserMapInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_UserMapInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_UserMapInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_UserMapInfo_SC>(nullptr);
  }

  MSG_Ret_UserMapInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_UserMapInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_UserMapInfo_SC& from);
  void MergeFrom(const MSG_Ret_UserMapInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_UserMapInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_UserMapInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMapnameFieldNumber = 2,
    kFilenameFieldNumber = 3,
    kPosFieldNumber = 4,
    kMapidFieldNumber = 1,
    kLineidFieldNumber = 5,
    kCopymapidxFieldNumber = 6,
    kSubcopymapidxFieldNumber = 7,
    kSceneidFieldNumber = 8,
  };
  // optional string mapname = 2;
  bool has_mapname() const;
  private:
  bool _internal_has_mapname() const;
  public:
  void clear_mapname();
  const std::string& mapname() const;
  void set_mapname(const std::string& value);
  void set_mapname(std::string&& value);
  void set_mapname(const char* value);
  void set_mapname(const char* value, size_t size);
  std::string* mutable_mapname();
  std::string* release_mapname();
  void set_allocated_mapname(std::string* mapname);
  private:
  const std::string& _internal_mapname() const;
  void _internal_set_mapname(const std::string& value);
  std::string* _internal_mutable_mapname();
  public:

  // optional string filename = 3;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  void set_filename(const std::string& value);
  void set_filename(std::string&& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  std::string* mutable_filename();
  std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional .msg.FloatMovePos pos = 4;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  const ::msg::FloatMovePos& pos() const;
  ::msg::FloatMovePos* release_pos();
  ::msg::FloatMovePos* mutable_pos();
  void set_allocated_pos(::msg::FloatMovePos* pos);
  private:
  const ::msg::FloatMovePos& _internal_pos() const;
  ::msg::FloatMovePos* _internal_mutable_pos();
  public:

  // optional uint32 mapid = 1;
  bool has_mapid() const;
  private:
  bool _internal_has_mapid() const;
  public:
  void clear_mapid();
  ::PROTOBUF_NAMESPACE_ID::uint32 mapid() const;
  void set_mapid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mapid() const;
  void _internal_set_mapid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lineid = 5;
  bool has_lineid() const;
  private:
  bool _internal_has_lineid() const;
  public:
  void clear_lineid();
  ::PROTOBUF_NAMESPACE_ID::uint32 lineid() const;
  void set_lineid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lineid() const;
  void _internal_set_lineid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 copymapidx = 6;
  bool has_copymapidx() const;
  private:
  bool _internal_has_copymapidx() const;
  public:
  void clear_copymapidx();
  ::PROTOBUF_NAMESPACE_ID::uint32 copymapidx() const;
  void set_copymapidx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_copymapidx() const;
  void _internal_set_copymapidx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 subcopymapidx = 7;
  bool has_subcopymapidx() const;
  private:
  bool _internal_has_subcopymapidx() const;
  public:
  void clear_subcopymapidx();
  ::PROTOBUF_NAMESPACE_ID::uint32 subcopymapidx() const;
  void set_subcopymapidx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subcopymapidx() const;
  void _internal_set_subcopymapidx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 sceneid = 8;
  bool has_sceneid() const;
  private:
  bool _internal_has_sceneid() const;
  public:
  void clear_sceneid();
  ::PROTOBUF_NAMESPACE_ID::uint64 sceneid() const;
  void set_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sceneid() const;
  void _internal_set_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_UserMapInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mapname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::msg::FloatMovePos* pos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mapid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lineid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 copymapidx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subcopymapidx_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sceneid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_NineScreenRefreshPlayer_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_NineScreenRefreshPlayer_SC) */ {
 public:
  MSG_Ret_NineScreenRefreshPlayer_SC();
  virtual ~MSG_Ret_NineScreenRefreshPlayer_SC();

  MSG_Ret_NineScreenRefreshPlayer_SC(const MSG_Ret_NineScreenRefreshPlayer_SC& from);
  MSG_Ret_NineScreenRefreshPlayer_SC(MSG_Ret_NineScreenRefreshPlayer_SC&& from) noexcept
    : MSG_Ret_NineScreenRefreshPlayer_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_NineScreenRefreshPlayer_SC& operator=(const MSG_Ret_NineScreenRefreshPlayer_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_NineScreenRefreshPlayer_SC& operator=(MSG_Ret_NineScreenRefreshPlayer_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_NineScreenRefreshPlayer_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_NineScreenRefreshPlayer_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_NineScreenRefreshPlayer_SC*>(
               &_MSG_Ret_NineScreenRefreshPlayer_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(MSG_Ret_NineScreenRefreshPlayer_SC& a, MSG_Ret_NineScreenRefreshPlayer_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_NineScreenRefreshPlayer_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_NineScreenRefreshPlayer_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_NineScreenRefreshPlayer_SC>(nullptr);
  }

  MSG_Ret_NineScreenRefreshPlayer_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_NineScreenRefreshPlayer_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_NineScreenRefreshPlayer_SC& from);
  void MergeFrom(const MSG_Ret_NineScreenRefreshPlayer_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_NineScreenRefreshPlayer_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_NineScreenRefreshPlayer_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .msg.MapUserData data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::msg::MapUserData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MapUserData >*
      mutable_data();
  private:
  const ::msg::MapUserData& _internal_data(int index) const;
  ::msg::MapUserData* _internal_add_data();
  public:
  const ::msg::MapUserData& data(int index) const;
  ::msg::MapUserData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MapUserData >&
      data() const;

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_NineScreenRefreshPlayer_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MapUserData > data_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MapScreenRefreshCharacter_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_MapScreenRefreshCharacter_SC) */ {
 public:
  MSG_Ret_MapScreenRefreshCharacter_SC();
  virtual ~MSG_Ret_MapScreenRefreshCharacter_SC();

  MSG_Ret_MapScreenRefreshCharacter_SC(const MSG_Ret_MapScreenRefreshCharacter_SC& from);
  MSG_Ret_MapScreenRefreshCharacter_SC(MSG_Ret_MapScreenRefreshCharacter_SC&& from) noexcept
    : MSG_Ret_MapScreenRefreshCharacter_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MapScreenRefreshCharacter_SC& operator=(const MSG_Ret_MapScreenRefreshCharacter_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MapScreenRefreshCharacter_SC& operator=(MSG_Ret_MapScreenRefreshCharacter_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MapScreenRefreshCharacter_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MapScreenRefreshCharacter_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MapScreenRefreshCharacter_SC*>(
               &_MSG_Ret_MapScreenRefreshCharacter_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(MSG_Ret_MapScreenRefreshCharacter_SC& a, MSG_Ret_MapScreenRefreshCharacter_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MapScreenRefreshCharacter_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MapScreenRefreshCharacter_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenRefreshCharacter_SC>(nullptr);
  }

  MSG_Ret_MapScreenRefreshCharacter_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenRefreshCharacter_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MapScreenRefreshCharacter_SC& from);
  void MergeFrom(const MSG_Ret_MapScreenRefreshCharacter_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MapScreenRefreshCharacter_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_MapScreenRefreshCharacter_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // optional .msg.MapUserData data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::msg::MapUserData& data() const;
  ::msg::MapUserData* release_data();
  ::msg::MapUserData* mutable_data();
  void set_allocated_data(::msg::MapUserData* data);
  private:
  const ::msg::MapUserData& _internal_data() const;
  ::msg::MapUserData* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_MapScreenRefreshCharacter_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::MapUserData* data_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MapScreenRemoveCharacter_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_MapScreenRemoveCharacter_SC) */ {
 public:
  MSG_Ret_MapScreenRemoveCharacter_SC();
  virtual ~MSG_Ret_MapScreenRemoveCharacter_SC();

  MSG_Ret_MapScreenRemoveCharacter_SC(const MSG_Ret_MapScreenRemoveCharacter_SC& from);
  MSG_Ret_MapScreenRemoveCharacter_SC(MSG_Ret_MapScreenRemoveCharacter_SC&& from) noexcept
    : MSG_Ret_MapScreenRemoveCharacter_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MapScreenRemoveCharacter_SC& operator=(const MSG_Ret_MapScreenRemoveCharacter_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MapScreenRemoveCharacter_SC& operator=(MSG_Ret_MapScreenRemoveCharacter_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MapScreenRemoveCharacter_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MapScreenRemoveCharacter_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MapScreenRemoveCharacter_SC*>(
               &_MSG_Ret_MapScreenRemoveCharacter_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(MSG_Ret_MapScreenRemoveCharacter_SC& a, MSG_Ret_MapScreenRemoveCharacter_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MapScreenRemoveCharacter_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MapScreenRemoveCharacter_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenRemoveCharacter_SC>(nullptr);
  }

  MSG_Ret_MapScreenRemoveCharacter_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenRemoveCharacter_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MapScreenRemoveCharacter_SC& from);
  void MergeFrom(const MSG_Ret_MapScreenRemoveCharacter_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MapScreenRemoveCharacter_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_MapScreenRemoveCharacter_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharidFieldNumber = 1,
  };
  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_MapScreenRemoveCharacter_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC) */ {
 public:
  MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC();
  virtual ~MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC();

  MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC(const MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC& from);
  MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC(MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC&& from) noexcept
    : MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC& operator=(const MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC& operator=(MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC*>(
               &_MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC& a, MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC>(nullptr);
  }

  MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC& from);
  void MergeFrom(const MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharidFieldNumber = 1,
  };
  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MapScreenBatchRemoveCharacter_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_MapScreenBatchRemoveCharacter_SC) */ {
 public:
  MSG_Ret_MapScreenBatchRemoveCharacter_SC();
  virtual ~MSG_Ret_MapScreenBatchRemoveCharacter_SC();

  MSG_Ret_MapScreenBatchRemoveCharacter_SC(const MSG_Ret_MapScreenBatchRemoveCharacter_SC& from);
  MSG_Ret_MapScreenBatchRemoveCharacter_SC(MSG_Ret_MapScreenBatchRemoveCharacter_SC&& from) noexcept
    : MSG_Ret_MapScreenBatchRemoveCharacter_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MapScreenBatchRemoveCharacter_SC& operator=(const MSG_Ret_MapScreenBatchRemoveCharacter_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MapScreenBatchRemoveCharacter_SC& operator=(MSG_Ret_MapScreenBatchRemoveCharacter_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MapScreenBatchRemoveCharacter_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MapScreenBatchRemoveCharacter_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MapScreenBatchRemoveCharacter_SC*>(
               &_MSG_Ret_MapScreenBatchRemoveCharacter_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(MSG_Ret_MapScreenBatchRemoveCharacter_SC& a, MSG_Ret_MapScreenBatchRemoveCharacter_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MapScreenBatchRemoveCharacter_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MapScreenBatchRemoveCharacter_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenBatchRemoveCharacter_SC>(nullptr);
  }

  MSG_Ret_MapScreenBatchRemoveCharacter_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenBatchRemoveCharacter_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MapScreenBatchRemoveCharacter_SC& from);
  void MergeFrom(const MSG_Ret_MapScreenBatchRemoveCharacter_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MapScreenBatchRemoveCharacter_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_MapScreenBatchRemoveCharacter_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharidsFieldNumber = 1,
  };
  // repeated uint64 charids = 1;
  int charids_size() const;
  private:
  int _internal_charids_size() const;
  public:
  void clear_charids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_charids() const;
  void _internal_add_charids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_charids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 charids(int index) const;
  void set_charids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_charids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      charids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_charids();

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_MapScreenBatchRemoveCharacter_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > charids_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_StateList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_StateList_SC) */ {
 public:
  MSG_Ret_StateList_SC();
  virtual ~MSG_Ret_StateList_SC();

  MSG_Ret_StateList_SC(const MSG_Ret_StateList_SC& from);
  MSG_Ret_StateList_SC(MSG_Ret_StateList_SC&& from) noexcept
    : MSG_Ret_StateList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_StateList_SC& operator=(const MSG_Ret_StateList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_StateList_SC& operator=(MSG_Ret_StateList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_StateList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_StateList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_StateList_SC*>(
               &_MSG_Ret_StateList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(MSG_Ret_StateList_SC& a, MSG_Ret_StateList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_StateList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_StateList_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_StateList_SC>(nullptr);
  }

  MSG_Ret_StateList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_StateList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_StateList_SC& from);
  void MergeFrom(const MSG_Ret_StateList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_StateList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_StateList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 1,
  };
  // repeated .msg.StateItem states = 1;
  int states_size() const;
  private:
  int _internal_states_size() const;
  public:
  void clear_states();
  ::msg::StateItem* mutable_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >*
      mutable_states();
  private:
  const ::msg::StateItem& _internal_states(int index) const;
  ::msg::StateItem* _internal_add_states();
  public:
  const ::msg::StateItem& states(int index) const;
  ::msg::StateItem* add_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >&
      states() const;

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_StateList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem > states_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class FloatMovePos :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.FloatMovePos) */ {
 public:
  FloatMovePos();
  virtual ~FloatMovePos();

  FloatMovePos(const FloatMovePos& from);
  FloatMovePos(FloatMovePos&& from) noexcept
    : FloatMovePos() {
    *this = ::std::move(from);
  }

  inline FloatMovePos& operator=(const FloatMovePos& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatMovePos& operator=(FloatMovePos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FloatMovePos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatMovePos* internal_default_instance() {
    return reinterpret_cast<const FloatMovePos*>(
               &_FloatMovePos_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(FloatMovePos& a, FloatMovePos& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatMovePos* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FloatMovePos* New() const final {
    return CreateMaybeMessage<FloatMovePos>(nullptr);
  }

  FloatMovePos* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FloatMovePos>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FloatMovePos& from);
  void MergeFrom(const FloatMovePos& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatMovePos* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.FloatMovePos";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFxFieldNumber = 1,
    kFyFieldNumber = 2,
  };
  // optional float fx = 1;
  bool has_fx() const;
  private:
  bool _internal_has_fx() const;
  public:
  void clear_fx();
  float fx() const;
  void set_fx(float value);
  private:
  float _internal_fx() const;
  void _internal_set_fx(float value);
  public:

  // optional float fy = 2;
  bool has_fy() const;
  private:
  bool _internal_has_fy() const;
  public:
  void clear_fy();
  float fy() const;
  void set_fy(float value);
  private:
  float _internal_fy() const;
  void _internal_set_fy(float value);
  public:

  // @@protoc_insertion_point(class_scope:msg.FloatMovePos)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float fx_;
  float fy_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MoveData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MoveData) */ {
 public:
  MoveData();
  virtual ~MoveData();

  MoveData(const MoveData& from);
  MoveData(MoveData&& from) noexcept
    : MoveData() {
    *this = ::std::move(from);
  }

  inline MoveData& operator=(const MoveData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoveData& operator=(MoveData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MoveData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MoveData* internal_default_instance() {
    return reinterpret_cast<const MoveData*>(
               &_MoveData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(MoveData& a, MoveData& b) {
    a.Swap(&b);
  }
  inline void Swap(MoveData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MoveData* New() const final {
    return CreateMaybeMessage<MoveData>(nullptr);
  }

  MoveData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MoveData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MoveData& from);
  void MergeFrom(const MoveData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MoveData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosFieldNumber = 1,
    kDirFieldNumber = 4,
  };
  // optional .msg.FloatMovePos pos = 1;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  const ::msg::FloatMovePos& pos() const;
  ::msg::FloatMovePos* release_pos();
  ::msg::FloatMovePos* mutable_pos();
  void set_allocated_pos(::msg::FloatMovePos* pos);
  private:
  const ::msg::FloatMovePos& _internal_pos() const;
  ::msg::FloatMovePos* _internal_mutable_pos();
  public:

  // optional uint32 dir = 4;
  bool has_dir() const;
  private:
  bool _internal_has_dir() const;
  public:
  void clear_dir();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir() const;
  void set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir() const;
  void _internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MoveData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::FloatMovePos* pos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_Move_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_Move_CS) */ {
 public:
  MSG_Req_Move_CS();
  virtual ~MSG_Req_Move_CS();

  MSG_Req_Move_CS(const MSG_Req_Move_CS& from);
  MSG_Req_Move_CS(MSG_Req_Move_CS&& from) noexcept
    : MSG_Req_Move_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_Move_CS& operator=(const MSG_Req_Move_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_Move_CS& operator=(MSG_Req_Move_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_Move_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_Move_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_Move_CS*>(
               &_MSG_Req_Move_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(MSG_Req_Move_CS& a, MSG_Req_Move_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_Move_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_Move_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_Move_CS>(nullptr);
  }

  MSG_Req_Move_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_Move_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_Move_CS& from);
  void MergeFrom(const MSG_Req_Move_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_Move_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_Move_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMovedataFieldNumber = 2,
    kCharidFieldNumber = 1,
    kSteplenthFieldNumber = 3,
  };
  // repeated .msg.MoveData movedata = 2;
  int movedata_size() const;
  private:
  int _internal_movedata_size() const;
  public:
  void clear_movedata();
  ::msg::MoveData* mutable_movedata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >*
      mutable_movedata();
  private:
  const ::msg::MoveData& _internal_movedata(int index) const;
  ::msg::MoveData* _internal_add_movedata();
  public:
  const ::msg::MoveData& movedata(int index) const;
  ::msg::MoveData* add_movedata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >&
      movedata() const;

  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 steplenth = 3;
  bool has_steplenth() const;
  private:
  bool _internal_has_steplenth() const;
  public:
  void clear_steplenth();
  ::PROTOBUF_NAMESPACE_ID::uint32 steplenth() const;
  void set_steplenth(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_steplenth() const;
  void _internal_set_steplenth(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_Move_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData > movedata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 steplenth_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_Move_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_Move_SC) */ {
 public:
  MSG_Ret_Move_SC();
  virtual ~MSG_Ret_Move_SC();

  MSG_Ret_Move_SC(const MSG_Ret_Move_SC& from);
  MSG_Ret_Move_SC(MSG_Ret_Move_SC&& from) noexcept
    : MSG_Ret_Move_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_Move_SC& operator=(const MSG_Ret_Move_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_Move_SC& operator=(MSG_Ret_Move_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_Move_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_Move_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_Move_SC*>(
               &_MSG_Ret_Move_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(MSG_Ret_Move_SC& a, MSG_Ret_Move_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_Move_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_Move_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_Move_SC>(nullptr);
  }

  MSG_Ret_Move_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_Move_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_Move_SC& from);
  void MergeFrom(const MSG_Ret_Move_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_Move_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_Move_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMovedataFieldNumber = 2,
    kCharidFieldNumber = 1,
    kSteplengthFieldNumber = 3,
  };
  // repeated .msg.MoveData movedata = 2;
  int movedata_size() const;
  private:
  int _internal_movedata_size() const;
  public:
  void clear_movedata();
  ::msg::MoveData* mutable_movedata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >*
      mutable_movedata();
  private:
  const ::msg::MoveData& _internal_movedata(int index) const;
  ::msg::MoveData* _internal_add_movedata();
  public:
  const ::msg::MoveData& movedata(int index) const;
  ::msg::MoveData* add_movedata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >&
      movedata() const;

  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 steplength = 3;
  bool has_steplength() const;
  private:
  bool _internal_has_steplength() const;
  public:
  void clear_steplength();
  ::PROTOBUF_NAMESPACE_ID::uint32 steplength() const;
  void set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_steplength() const;
  void _internal_set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_Move_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData > movedata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 steplength_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_TELE_PORT_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_TELE_PORT_CS) */ {
 public:
  MSG_Req_TELE_PORT_CS();
  virtual ~MSG_Req_TELE_PORT_CS();

  MSG_Req_TELE_PORT_CS(const MSG_Req_TELE_PORT_CS& from);
  MSG_Req_TELE_PORT_CS(MSG_Req_TELE_PORT_CS&& from) noexcept
    : MSG_Req_TELE_PORT_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_TELE_PORT_CS& operator=(const MSG_Req_TELE_PORT_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_TELE_PORT_CS& operator=(MSG_Req_TELE_PORT_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_TELE_PORT_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_TELE_PORT_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_TELE_PORT_CS*>(
               &_MSG_Req_TELE_PORT_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(MSG_Req_TELE_PORT_CS& a, MSG_Req_TELE_PORT_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_TELE_PORT_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_TELE_PORT_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_TELE_PORT_CS>(nullptr);
  }

  MSG_Req_TELE_PORT_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_TELE_PORT_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_TELE_PORT_CS& from);
  void MergeFrom(const MSG_Req_TELE_PORT_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_TELE_PORT_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_TELE_PORT_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeleportidFieldNumber = 1,
  };
  // required uint64 teleportid = 1;
  bool has_teleportid() const;
  private:
  bool _internal_has_teleportid() const;
  public:
  void clear_teleportid();
  ::PROTOBUF_NAMESPACE_ID::uint64 teleportid() const;
  void set_teleportid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_teleportid() const;
  void _internal_set_teleportid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_TELE_PORT_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 teleportid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Server_Force_Move_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Server_Force_Move_SC) */ {
 public:
  MSG_Server_Force_Move_SC();
  virtual ~MSG_Server_Force_Move_SC();

  MSG_Server_Force_Move_SC(const MSG_Server_Force_Move_SC& from);
  MSG_Server_Force_Move_SC(MSG_Server_Force_Move_SC&& from) noexcept
    : MSG_Server_Force_Move_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Server_Force_Move_SC& operator=(const MSG_Server_Force_Move_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Server_Force_Move_SC& operator=(MSG_Server_Force_Move_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Server_Force_Move_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Server_Force_Move_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Server_Force_Move_SC*>(
               &_MSG_Server_Force_Move_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(MSG_Server_Force_Move_SC& a, MSG_Server_Force_Move_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Server_Force_Move_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Server_Force_Move_SC* New() const final {
    return CreateMaybeMessage<MSG_Server_Force_Move_SC>(nullptr);
  }

  MSG_Server_Force_Move_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Server_Force_Move_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Server_Force_Move_SC& from);
  void MergeFrom(const MSG_Server_Force_Move_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Server_Force_Move_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Server_Force_Move_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMovedataFieldNumber = 2,
    kCharidFieldNumber = 1,
    kSteplengthFieldNumber = 3,
  };
  // repeated .msg.MoveData movedata = 2;
  int movedata_size() const;
  private:
  int _internal_movedata_size() const;
  public:
  void clear_movedata();
  ::msg::MoveData* mutable_movedata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >*
      mutable_movedata();
  private:
  const ::msg::MoveData& _internal_movedata(int index) const;
  ::msg::MoveData* _internal_add_movedata();
  public:
  const ::msg::MoveData& movedata(int index) const;
  ::msg::MoveData* add_movedata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >&
      movedata() const;

  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 steplength = 3;
  bool has_steplength() const;
  private:
  bool _internal_has_steplength() const;
  public:
  void clear_steplength();
  ::PROTOBUF_NAMESPACE_ID::uint32 steplength() const;
  void set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_steplength() const;
  void _internal_set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Server_Force_Move_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData > movedata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 steplength_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_Move_Failed_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_Move_Failed_SC) */ {
 public:
  MSG_Ret_Move_Failed_SC();
  virtual ~MSG_Ret_Move_Failed_SC();

  MSG_Ret_Move_Failed_SC(const MSG_Ret_Move_Failed_SC& from);
  MSG_Ret_Move_Failed_SC(MSG_Ret_Move_Failed_SC&& from) noexcept
    : MSG_Ret_Move_Failed_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_Move_Failed_SC& operator=(const MSG_Ret_Move_Failed_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_Move_Failed_SC& operator=(MSG_Ret_Move_Failed_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_Move_Failed_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_Move_Failed_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_Move_Failed_SC*>(
               &_MSG_Ret_Move_Failed_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(MSG_Ret_Move_Failed_SC& a, MSG_Ret_Move_Failed_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_Move_Failed_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_Move_Failed_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_Move_Failed_SC>(nullptr);
  }

  MSG_Ret_Move_Failed_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_Move_Failed_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_Move_Failed_SC& from);
  void MergeFrom(const MSG_Ret_Move_Failed_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_Move_Failed_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_Move_Failed_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMovedataFieldNumber = 2,
    kCharidFieldNumber = 1,
    kSteplengthFieldNumber = 3,
  };
  // optional .msg.MoveData movedata = 2;
  bool has_movedata() const;
  private:
  bool _internal_has_movedata() const;
  public:
  void clear_movedata();
  const ::msg::MoveData& movedata() const;
  ::msg::MoveData* release_movedata();
  ::msg::MoveData* mutable_movedata();
  void set_allocated_movedata(::msg::MoveData* movedata);
  private:
  const ::msg::MoveData& _internal_movedata() const;
  ::msg::MoveData* _internal_mutable_movedata();
  public:

  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 steplength = 3;
  bool has_steplength() const;
  private:
  bool _internal_has_steplength() const;
  public:
  void clear_steplength();
  ::PROTOBUF_NAMESPACE_ID::uint32 steplength() const;
  void set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_steplength() const;
  void _internal_set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_Move_Failed_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::MoveData* movedata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 steplength_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_SetState_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_SetState_SC) */ {
 public:
  MSG_Ret_SetState_SC();
  virtual ~MSG_Ret_SetState_SC();

  MSG_Ret_SetState_SC(const MSG_Ret_SetState_SC& from);
  MSG_Ret_SetState_SC(MSG_Ret_SetState_SC&& from) noexcept
    : MSG_Ret_SetState_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_SetState_SC& operator=(const MSG_Ret_SetState_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_SetState_SC& operator=(MSG_Ret_SetState_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_SetState_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_SetState_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_SetState_SC*>(
               &_MSG_Ret_SetState_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(MSG_Ret_SetState_SC& a, MSG_Ret_SetState_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_SetState_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_SetState_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_SetState_SC>(nullptr);
  }

  MSG_Ret_SetState_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_SetState_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_SetState_SC& from);
  void MergeFrom(const MSG_Ret_SetState_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_SetState_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_SetState_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 3,
    kIdFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // repeated .msg.StateItem state = 3;
  int state_size() const;
  private:
  int _internal_state_size() const;
  public:
  void clear_state();
  ::msg::StateItem* mutable_state(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >*
      mutable_state();
  private:
  const ::msg::StateItem& _internal_state(int index) const;
  ::msg::StateItem* _internal_add_state();
  public:
  const ::msg::StateItem& state(int index) const;
  ::msg::StateItem* add_state();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >&
      state() const;

  // optional uint64 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_SetState_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem > state_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_ClearState_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_ClearState_SC) */ {
 public:
  MSG_Ret_ClearState_SC();
  virtual ~MSG_Ret_ClearState_SC();

  MSG_Ret_ClearState_SC(const MSG_Ret_ClearState_SC& from);
  MSG_Ret_ClearState_SC(MSG_Ret_ClearState_SC&& from) noexcept
    : MSG_Ret_ClearState_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_ClearState_SC& operator=(const MSG_Ret_ClearState_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_ClearState_SC& operator=(MSG_Ret_ClearState_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_ClearState_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_ClearState_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_ClearState_SC*>(
               &_MSG_Ret_ClearState_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(MSG_Ret_ClearState_SC& a, MSG_Ret_ClearState_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_ClearState_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_ClearState_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_ClearState_SC>(nullptr);
  }

  MSG_Ret_ClearState_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_ClearState_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_ClearState_SC& from);
  void MergeFrom(const MSG_Ret_ClearState_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_ClearState_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_ClearState_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 3,
    kIdFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // optional .msg.StateItem state = 3;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  const ::msg::StateItem& state() const;
  ::msg::StateItem* release_state();
  ::msg::StateItem* mutable_state();
  void set_allocated_state(::msg::StateItem* state);
  private:
  const ::msg::StateItem& _internal_state() const;
  ::msg::StateItem* _internal_mutable_state();
  public:

  // optional uint64 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_ClearState_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::StateItem* state_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MapScreenBatchRefreshNpc_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_MapScreenBatchRefreshNpc_SC) */ {
 public:
  MSG_Ret_MapScreenBatchRefreshNpc_SC();
  virtual ~MSG_Ret_MapScreenBatchRefreshNpc_SC();

  MSG_Ret_MapScreenBatchRefreshNpc_SC(const MSG_Ret_MapScreenBatchRefreshNpc_SC& from);
  MSG_Ret_MapScreenBatchRefreshNpc_SC(MSG_Ret_MapScreenBatchRefreshNpc_SC&& from) noexcept
    : MSG_Ret_MapScreenBatchRefreshNpc_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MapScreenBatchRefreshNpc_SC& operator=(const MSG_Ret_MapScreenBatchRefreshNpc_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MapScreenBatchRefreshNpc_SC& operator=(MSG_Ret_MapScreenBatchRefreshNpc_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MapScreenBatchRefreshNpc_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MapScreenBatchRefreshNpc_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MapScreenBatchRefreshNpc_SC*>(
               &_MSG_Ret_MapScreenBatchRefreshNpc_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(MSG_Ret_MapScreenBatchRefreshNpc_SC& a, MSG_Ret_MapScreenBatchRefreshNpc_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MapScreenBatchRefreshNpc_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MapScreenBatchRefreshNpc_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenBatchRefreshNpc_SC>(nullptr);
  }

  MSG_Ret_MapScreenBatchRefreshNpc_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenBatchRefreshNpc_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MapScreenBatchRefreshNpc_SC& from);
  void MergeFrom(const MSG_Ret_MapScreenBatchRefreshNpc_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MapScreenBatchRefreshNpc_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_MapScreenBatchRefreshNpc_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .msg.MapNpcData data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::msg::MapNpcData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MapNpcData >*
      mutable_data();
  private:
  const ::msg::MapNpcData& _internal_data(int index) const;
  ::msg::MapNpcData* _internal_add_data();
  public:
  const ::msg::MapNpcData& data(int index) const;
  ::msg::MapNpcData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MapNpcData >&
      data() const;

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_MapScreenBatchRefreshNpc_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MapNpcData > data_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MapScreenBatchRemoveNpc_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_MapScreenBatchRemoveNpc_SC) */ {
 public:
  MSG_Ret_MapScreenBatchRemoveNpc_SC();
  virtual ~MSG_Ret_MapScreenBatchRemoveNpc_SC();

  MSG_Ret_MapScreenBatchRemoveNpc_SC(const MSG_Ret_MapScreenBatchRemoveNpc_SC& from);
  MSG_Ret_MapScreenBatchRemoveNpc_SC(MSG_Ret_MapScreenBatchRemoveNpc_SC&& from) noexcept
    : MSG_Ret_MapScreenBatchRemoveNpc_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MapScreenBatchRemoveNpc_SC& operator=(const MSG_Ret_MapScreenBatchRemoveNpc_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MapScreenBatchRemoveNpc_SC& operator=(MSG_Ret_MapScreenBatchRemoveNpc_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MapScreenBatchRemoveNpc_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MapScreenBatchRemoveNpc_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MapScreenBatchRemoveNpc_SC*>(
               &_MSG_Ret_MapScreenBatchRemoveNpc_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(MSG_Ret_MapScreenBatchRemoveNpc_SC& a, MSG_Ret_MapScreenBatchRemoveNpc_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MapScreenBatchRemoveNpc_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MapScreenBatchRemoveNpc_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenBatchRemoveNpc_SC>(nullptr);
  }

  MSG_Ret_MapScreenBatchRemoveNpc_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenBatchRemoveNpc_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MapScreenBatchRemoveNpc_SC& from);
  void MergeFrom(const MSG_Ret_MapScreenBatchRemoveNpc_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MapScreenBatchRemoveNpc_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_MapScreenBatchRemoveNpc_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTempidsFieldNumber = 1,
  };
  // repeated uint64 tempids = 1;
  int tempids_size() const;
  private:
  int _internal_tempids_size() const;
  public:
  void clear_tempids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tempids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_tempids() const;
  void _internal_add_tempids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_tempids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 tempids(int index) const;
  void set_tempids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_tempids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      tempids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_tempids();

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_MapScreenBatchRemoveNpc_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > tempids_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MapScreenRefreshNpc_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_MapScreenRefreshNpc_SC) */ {
 public:
  MSG_Ret_MapScreenRefreshNpc_SC();
  virtual ~MSG_Ret_MapScreenRefreshNpc_SC();

  MSG_Ret_MapScreenRefreshNpc_SC(const MSG_Ret_MapScreenRefreshNpc_SC& from);
  MSG_Ret_MapScreenRefreshNpc_SC(MSG_Ret_MapScreenRefreshNpc_SC&& from) noexcept
    : MSG_Ret_MapScreenRefreshNpc_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MapScreenRefreshNpc_SC& operator=(const MSG_Ret_MapScreenRefreshNpc_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MapScreenRefreshNpc_SC& operator=(MSG_Ret_MapScreenRefreshNpc_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MapScreenRefreshNpc_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MapScreenRefreshNpc_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MapScreenRefreshNpc_SC*>(
               &_MSG_Ret_MapScreenRefreshNpc_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(MSG_Ret_MapScreenRefreshNpc_SC& a, MSG_Ret_MapScreenRefreshNpc_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MapScreenRefreshNpc_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MapScreenRefreshNpc_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenRefreshNpc_SC>(nullptr);
  }

  MSG_Ret_MapScreenRefreshNpc_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenRefreshNpc_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MapScreenRefreshNpc_SC& from);
  void MergeFrom(const MSG_Ret_MapScreenRefreshNpc_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MapScreenRefreshNpc_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_MapScreenRefreshNpc_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // optional .msg.MapNpcData data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::msg::MapNpcData& data() const;
  ::msg::MapNpcData* release_data();
  ::msg::MapNpcData* mutable_data();
  void set_allocated_data(::msg::MapNpcData* data);
  private:
  const ::msg::MapNpcData& _internal_data() const;
  ::msg::MapNpcData* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_MapScreenRefreshNpc_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::MapNpcData* data_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MapScreenRemoveNpc_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_MapScreenRemoveNpc_SC) */ {
 public:
  MSG_Ret_MapScreenRemoveNpc_SC();
  virtual ~MSG_Ret_MapScreenRemoveNpc_SC();

  MSG_Ret_MapScreenRemoveNpc_SC(const MSG_Ret_MapScreenRemoveNpc_SC& from);
  MSG_Ret_MapScreenRemoveNpc_SC(MSG_Ret_MapScreenRemoveNpc_SC&& from) noexcept
    : MSG_Ret_MapScreenRemoveNpc_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MapScreenRemoveNpc_SC& operator=(const MSG_Ret_MapScreenRemoveNpc_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MapScreenRemoveNpc_SC& operator=(MSG_Ret_MapScreenRemoveNpc_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MapScreenRemoveNpc_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MapScreenRemoveNpc_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MapScreenRemoveNpc_SC*>(
               &_MSG_Ret_MapScreenRemoveNpc_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(MSG_Ret_MapScreenRemoveNpc_SC& a, MSG_Ret_MapScreenRemoveNpc_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MapScreenRemoveNpc_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MapScreenRemoveNpc_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenRemoveNpc_SC>(nullptr);
  }

  MSG_Ret_MapScreenRemoveNpc_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenRemoveNpc_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MapScreenRemoveNpc_SC& from);
  void MergeFrom(const MSG_Ret_MapScreenRemoveNpc_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MapScreenRemoveNpc_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_MapScreenRemoveNpc_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTempidFieldNumber = 1,
  };
  // optional uint64 tempid = 1;
  bool has_tempid() const;
  private:
  bool _internal_has_tempid() const;
  public:
  void clear_tempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid() const;
  void set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tempid() const;
  void _internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_MapScreenRemoveNpc_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class FuncNpcData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.FuncNpcData) */ {
 public:
  FuncNpcData();
  virtual ~FuncNpcData();

  FuncNpcData(const FuncNpcData& from);
  FuncNpcData(FuncNpcData&& from) noexcept
    : FuncNpcData() {
    *this = ::std::move(from);
  }

  inline FuncNpcData& operator=(const FuncNpcData& from) {
    CopyFrom(from);
    return *this;
  }
  inline FuncNpcData& operator=(FuncNpcData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FuncNpcData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FuncNpcData* internal_default_instance() {
    return reinterpret_cast<const FuncNpcData*>(
               &_FuncNpcData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(FuncNpcData& a, FuncNpcData& b) {
    a.Swap(&b);
  }
  inline void Swap(FuncNpcData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FuncNpcData* New() const final {
    return CreateMaybeMessage<FuncNpcData>(nullptr);
  }

  FuncNpcData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FuncNpcData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FuncNpcData& from);
  void MergeFrom(const FuncNpcData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FuncNpcData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.FuncNpcData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTempidFieldNumber = 2,
    kBaseidFieldNumber = 1,
    kXFieldNumber = 3,
    kYFieldNumber = 4,
  };
  // optional uint64 tempid = 2;
  bool has_tempid() const;
  private:
  bool _internal_has_tempid() const;
  public:
  void clear_tempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid() const;
  void set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tempid() const;
  void _internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 baseid = 1;
  bool has_baseid() const;
  private:
  bool _internal_has_baseid() const;
  public:
  void clear_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid() const;
  void set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseid() const;
  void _internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 x = 3;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  ::PROTOBUF_NAMESPACE_ID::uint32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_x() const;
  void _internal_set_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 y = 4;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  ::PROTOBUF_NAMESPACE_ID::uint32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_y() const;
  void _internal_set_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.FuncNpcData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 x_;
  ::PROTOBUF_NAMESPACE_ID::uint32 y_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MapScreenFuncNpc_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_MapScreenFuncNpc_SC) */ {
 public:
  MSG_Ret_MapScreenFuncNpc_SC();
  virtual ~MSG_Ret_MapScreenFuncNpc_SC();

  MSG_Ret_MapScreenFuncNpc_SC(const MSG_Ret_MapScreenFuncNpc_SC& from);
  MSG_Ret_MapScreenFuncNpc_SC(MSG_Ret_MapScreenFuncNpc_SC&& from) noexcept
    : MSG_Ret_MapScreenFuncNpc_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MapScreenFuncNpc_SC& operator=(const MSG_Ret_MapScreenFuncNpc_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MapScreenFuncNpc_SC& operator=(MSG_Ret_MapScreenFuncNpc_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MapScreenFuncNpc_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MapScreenFuncNpc_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MapScreenFuncNpc_SC*>(
               &_MSG_Ret_MapScreenFuncNpc_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(MSG_Ret_MapScreenFuncNpc_SC& a, MSG_Ret_MapScreenFuncNpc_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MapScreenFuncNpc_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MapScreenFuncNpc_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenFuncNpc_SC>(nullptr);
  }

  MSG_Ret_MapScreenFuncNpc_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MapScreenFuncNpc_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MapScreenFuncNpc_SC& from);
  void MergeFrom(const MSG_Ret_MapScreenFuncNpc_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MapScreenFuncNpc_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_MapScreenFuncNpc_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .msg.FuncNpcData data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::msg::FuncNpcData* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::FuncNpcData >*
      mutable_data();
  private:
  const ::msg::FuncNpcData& _internal_data(int index) const;
  ::msg::FuncNpcData* _internal_add_data();
  public:
  const ::msg::FuncNpcData& data(int index) const;
  ::msg::FuncNpcData* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::FuncNpcData >&
      data() const;

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_MapScreenFuncNpc_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::FuncNpcData > data_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_RetNpcMove_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_RetNpcMove_SC) */ {
 public:
  MSG_Ret_RetNpcMove_SC();
  virtual ~MSG_Ret_RetNpcMove_SC();

  MSG_Ret_RetNpcMove_SC(const MSG_Ret_RetNpcMove_SC& from);
  MSG_Ret_RetNpcMove_SC(MSG_Ret_RetNpcMove_SC&& from) noexcept
    : MSG_Ret_RetNpcMove_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_RetNpcMove_SC& operator=(const MSG_Ret_RetNpcMove_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_RetNpcMove_SC& operator=(MSG_Ret_RetNpcMove_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_RetNpcMove_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_RetNpcMove_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_RetNpcMove_SC*>(
               &_MSG_Ret_RetNpcMove_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(MSG_Ret_RetNpcMove_SC& a, MSG_Ret_RetNpcMove_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_RetNpcMove_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_RetNpcMove_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_RetNpcMove_SC>(nullptr);
  }

  MSG_Ret_RetNpcMove_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_RetNpcMove_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_RetNpcMove_SC& from);
  void MergeFrom(const MSG_Ret_RetNpcMove_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_RetNpcMove_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_RetNpcMove_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMovedataFieldNumber = 2,
    kTempidFieldNumber = 1,
    kSpeedFieldNumber = 3,
  };
  // repeated .msg.MoveData movedata = 2;
  int movedata_size() const;
  private:
  int _internal_movedata_size() const;
  public:
  void clear_movedata();
  ::msg::MoveData* mutable_movedata(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >*
      mutable_movedata();
  private:
  const ::msg::MoveData& _internal_movedata(int index) const;
  ::msg::MoveData* _internal_add_movedata();
  public:
  const ::msg::MoveData& movedata(int index) const;
  ::msg::MoveData* add_movedata();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >&
      movedata() const;

  // optional uint64 tempid = 1;
  bool has_tempid() const;
  private:
  bool _internal_has_tempid() const;
  public:
  void clear_tempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid() const;
  void set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tempid() const;
  void _internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 speed = 3;
  bool has_speed() const;
  private:
  bool _internal_has_speed() const;
  public:
  void clear_speed();
  ::PROTOBUF_NAMESPACE_ID::uint32 speed() const;
  void set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_speed() const;
  void _internal_set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_RetNpcMove_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData > movedata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 speed_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetNpcWarpMove_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_RetNpcWarpMove_SC) */ {
 public:
  MSG_RetNpcWarpMove_SC();
  virtual ~MSG_RetNpcWarpMove_SC();

  MSG_RetNpcWarpMove_SC(const MSG_RetNpcWarpMove_SC& from);
  MSG_RetNpcWarpMove_SC(MSG_RetNpcWarpMove_SC&& from) noexcept
    : MSG_RetNpcWarpMove_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetNpcWarpMove_SC& operator=(const MSG_RetNpcWarpMove_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetNpcWarpMove_SC& operator=(MSG_RetNpcWarpMove_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetNpcWarpMove_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetNpcWarpMove_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetNpcWarpMove_SC*>(
               &_MSG_RetNpcWarpMove_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(MSG_RetNpcWarpMove_SC& a, MSG_RetNpcWarpMove_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetNpcWarpMove_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetNpcWarpMove_SC* New() const final {
    return CreateMaybeMessage<MSG_RetNpcWarpMove_SC>(nullptr);
  }

  MSG_RetNpcWarpMove_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetNpcWarpMove_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetNpcWarpMove_SC& from);
  void MergeFrom(const MSG_RetNpcWarpMove_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetNpcWarpMove_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_RetNpcWarpMove_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMovedataFieldNumber = 2,
    kTempidFieldNumber = 1,
  };
  // optional .msg.MoveData movedata = 2;
  bool has_movedata() const;
  private:
  bool _internal_has_movedata() const;
  public:
  void clear_movedata();
  const ::msg::MoveData& movedata() const;
  ::msg::MoveData* release_movedata();
  ::msg::MoveData* mutable_movedata();
  void set_allocated_movedata(::msg::MoveData* movedata);
  private:
  const ::msg::MoveData& _internal_movedata() const;
  ::msg::MoveData* _internal_mutable_movedata();
  public:

  // optional uint64 tempid = 1;
  bool has_tempid() const;
  private:
  bool _internal_has_tempid() const;
  public:
  void clear_tempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid() const;
  void set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tempid() const;
  void _internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_RetNpcWarpMove_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::MoveData* movedata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetNpcDir_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_RetNpcDir_SC) */ {
 public:
  MSG_RetNpcDir_SC();
  virtual ~MSG_RetNpcDir_SC();

  MSG_RetNpcDir_SC(const MSG_RetNpcDir_SC& from);
  MSG_RetNpcDir_SC(MSG_RetNpcDir_SC&& from) noexcept
    : MSG_RetNpcDir_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetNpcDir_SC& operator=(const MSG_RetNpcDir_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetNpcDir_SC& operator=(MSG_RetNpcDir_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetNpcDir_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetNpcDir_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetNpcDir_SC*>(
               &_MSG_RetNpcDir_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(MSG_RetNpcDir_SC& a, MSG_RetNpcDir_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetNpcDir_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetNpcDir_SC* New() const final {
    return CreateMaybeMessage<MSG_RetNpcDir_SC>(nullptr);
  }

  MSG_RetNpcDir_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetNpcDir_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetNpcDir_SC& from);
  void MergeFrom(const MSG_RetNpcDir_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetNpcDir_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_RetNpcDir_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTempidFieldNumber = 1,
    kDirFieldNumber = 2,
  };
  // optional uint64 tempid = 1;
  bool has_tempid() const;
  private:
  bool _internal_has_tempid() const;
  public:
  void clear_tempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid() const;
  void set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tempid() const;
  void _internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 dir = 2;
  bool has_dir() const;
  private:
  bool _internal_has_dir() const;
  public:
  void clear_dir();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir() const;
  void set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir() const;
  void _internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_RetNpcDir_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class TempNpcInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.TempNpcInfo) */ {
 public:
  TempNpcInfo();
  virtual ~TempNpcInfo();

  TempNpcInfo(const TempNpcInfo& from);
  TempNpcInfo(TempNpcInfo&& from) noexcept
    : TempNpcInfo() {
    *this = ::std::move(from);
  }

  inline TempNpcInfo& operator=(const TempNpcInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline TempNpcInfo& operator=(TempNpcInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TempNpcInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TempNpcInfo* internal_default_instance() {
    return reinterpret_cast<const TempNpcInfo*>(
               &_TempNpcInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(TempNpcInfo& a, TempNpcInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(TempNpcInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TempNpcInfo* New() const final {
    return CreateMaybeMessage<TempNpcInfo>(nullptr);
  }

  TempNpcInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TempNpcInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TempNpcInfo& from);
  void MergeFrom(const TempNpcInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TempNpcInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.TempNpcInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpcidFieldNumber = 1,
    kNumFieldNumber = 2,
    kScriptFieldNumber = 3,
  };
  // optional uint32 npcid = 1;
  bool has_npcid() const;
  private:
  bool _internal_has_npcid() const;
  public:
  void clear_npcid();
  ::PROTOBUF_NAMESPACE_ID::uint32 npcid() const;
  void set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_npcid() const;
  void _internal_set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 num = 2;
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 script = 3;
  bool has_script() const;
  private:
  bool _internal_has_script() const;
  public:
  void clear_script();
  ::PROTOBUF_NAMESPACE_ID::uint32 script() const;
  void set_script(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_script() const;
  void _internal_set_script(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.TempNpcInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 npcid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 script_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_Summon_Npc_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_Summon_Npc_CS) */ {
 public:
  MSG_Req_Summon_Npc_CS();
  virtual ~MSG_Req_Summon_Npc_CS();

  MSG_Req_Summon_Npc_CS(const MSG_Req_Summon_Npc_CS& from);
  MSG_Req_Summon_Npc_CS(MSG_Req_Summon_Npc_CS&& from) noexcept
    : MSG_Req_Summon_Npc_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_Summon_Npc_CS& operator=(const MSG_Req_Summon_Npc_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_Summon_Npc_CS& operator=(MSG_Req_Summon_Npc_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_Summon_Npc_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_Summon_Npc_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_Summon_Npc_CS*>(
               &_MSG_Req_Summon_Npc_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(MSG_Req_Summon_Npc_CS& a, MSG_Req_Summon_Npc_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_Summon_Npc_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_Summon_Npc_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_Summon_Npc_CS>(nullptr);
  }

  MSG_Req_Summon_Npc_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_Summon_Npc_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_Summon_Npc_CS& from);
  void MergeFrom(const MSG_Req_Summon_Npc_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_Summon_Npc_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_Summon_Npc_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpcsFieldNumber = 1,
  };
  // repeated .msg.TempNpcInfo npcs = 1;
  int npcs_size() const;
  private:
  int _internal_npcs_size() const;
  public:
  void clear_npcs();
  ::msg::TempNpcInfo* mutable_npcs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::TempNpcInfo >*
      mutable_npcs();
  private:
  const ::msg::TempNpcInfo& _internal_npcs(int index) const;
  ::msg::TempNpcInfo* _internal_add_npcs();
  public:
  const ::msg::TempNpcInfo& npcs(int index) const;
  ::msg::TempNpcInfo* add_npcs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::TempNpcInfo >&
      npcs() const;

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_Summon_Npc_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::TempNpcInfo > npcs_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_setTimeState_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_setTimeState_SC) */ {
 public:
  MSG_Ret_setTimeState_SC();
  virtual ~MSG_Ret_setTimeState_SC();

  MSG_Ret_setTimeState_SC(const MSG_Ret_setTimeState_SC& from);
  MSG_Ret_setTimeState_SC(MSG_Ret_setTimeState_SC&& from) noexcept
    : MSG_Ret_setTimeState_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_setTimeState_SC& operator=(const MSG_Ret_setTimeState_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_setTimeState_SC& operator=(MSG_Ret_setTimeState_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_setTimeState_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_setTimeState_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_setTimeState_SC*>(
               &_MSG_Ret_setTimeState_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(MSG_Ret_setTimeState_SC& a, MSG_Ret_setTimeState_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_setTimeState_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_setTimeState_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_setTimeState_SC>(nullptr);
  }

  MSG_Ret_setTimeState_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_setTimeState_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_setTimeState_SC& from);
  void MergeFrom(const MSG_Ret_setTimeState_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_setTimeState_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_setTimeState_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetFieldNumber = 1,
    kStateFieldNumber = 2,
    kMaxtimeFieldNumber = 3,
    kLefttimeFieldNumber = 4,
  };
  // optional .msg.EntryIDType target = 1;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  const ::msg::EntryIDType& target() const;
  ::msg::EntryIDType* release_target();
  ::msg::EntryIDType* mutable_target();
  void set_allocated_target(::msg::EntryIDType* target);
  private:
  const ::msg::EntryIDType& _internal_target() const;
  ::msg::EntryIDType* _internal_mutable_target();
  public:

  // optional uint32 state = 2;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxtime = 3;
  bool has_maxtime() const;
  private:
  bool _internal_has_maxtime() const;
  public:
  void clear_maxtime();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxtime() const;
  void set_maxtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxtime() const;
  void _internal_set_maxtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lefttime = 4;
  bool has_lefttime() const;
  private:
  bool _internal_has_lefttime() const;
  public:
  void clear_lefttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 lefttime() const;
  void set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lefttime() const;
  void _internal_set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_setTimeState_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::EntryIDType* target_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxtime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lefttime_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_Ping_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_Ping_CS) */ {
 public:
  MSG_Req_Ping_CS();
  virtual ~MSG_Req_Ping_CS();

  MSG_Req_Ping_CS(const MSG_Req_Ping_CS& from);
  MSG_Req_Ping_CS(MSG_Req_Ping_CS&& from) noexcept
    : MSG_Req_Ping_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_Ping_CS& operator=(const MSG_Req_Ping_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_Ping_CS& operator=(MSG_Req_Ping_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_Ping_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_Ping_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_Ping_CS*>(
               &_MSG_Req_Ping_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(MSG_Req_Ping_CS& a, MSG_Req_Ping_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_Ping_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_Ping_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_Ping_CS>(nullptr);
  }

  MSG_Req_Ping_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_Ping_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_Ping_CS& from);
  void MergeFrom(const MSG_Req_Ping_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_Ping_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_Ping_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_Ping_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_VisibleNpcList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_VisibleNpcList_SC) */ {
 public:
  MSG_Ret_VisibleNpcList_SC();
  virtual ~MSG_Ret_VisibleNpcList_SC();

  MSG_Ret_VisibleNpcList_SC(const MSG_Ret_VisibleNpcList_SC& from);
  MSG_Ret_VisibleNpcList_SC(MSG_Ret_VisibleNpcList_SC&& from) noexcept
    : MSG_Ret_VisibleNpcList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_VisibleNpcList_SC& operator=(const MSG_Ret_VisibleNpcList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_VisibleNpcList_SC& operator=(MSG_Ret_VisibleNpcList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_VisibleNpcList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_VisibleNpcList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_VisibleNpcList_SC*>(
               &_MSG_Ret_VisibleNpcList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(MSG_Ret_VisibleNpcList_SC& a, MSG_Ret_VisibleNpcList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_VisibleNpcList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_VisibleNpcList_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_VisibleNpcList_SC>(nullptr);
  }

  MSG_Ret_VisibleNpcList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_VisibleNpcList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_VisibleNpcList_SC& from);
  void MergeFrom(const MSG_Ret_VisibleNpcList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_VisibleNpcList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_VisibleNpcList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpcFieldNumber = 1,
  };
  // repeated uint32 npc = 1;
  int npc_size() const;
  private:
  int _internal_npc_size() const;
  public:
  void clear_npc();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_npc(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_npc() const;
  void _internal_add_npc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_npc();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 npc(int index) const;
  void set_npc(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_npc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      npc() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_npc();

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_VisibleNpcList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > npc_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetNinePlayerLevelUp_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_RetNinePlayerLevelUp_SC) */ {
 public:
  MSG_RetNinePlayerLevelUp_SC();
  virtual ~MSG_RetNinePlayerLevelUp_SC();

  MSG_RetNinePlayerLevelUp_SC(const MSG_RetNinePlayerLevelUp_SC& from);
  MSG_RetNinePlayerLevelUp_SC(MSG_RetNinePlayerLevelUp_SC&& from) noexcept
    : MSG_RetNinePlayerLevelUp_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetNinePlayerLevelUp_SC& operator=(const MSG_RetNinePlayerLevelUp_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetNinePlayerLevelUp_SC& operator=(MSG_RetNinePlayerLevelUp_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetNinePlayerLevelUp_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetNinePlayerLevelUp_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetNinePlayerLevelUp_SC*>(
               &_MSG_RetNinePlayerLevelUp_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(MSG_RetNinePlayerLevelUp_SC& a, MSG_RetNinePlayerLevelUp_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetNinePlayerLevelUp_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetNinePlayerLevelUp_SC* New() const final {
    return CreateMaybeMessage<MSG_RetNinePlayerLevelUp_SC>(nullptr);
  }

  MSG_RetNinePlayerLevelUp_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetNinePlayerLevelUp_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetNinePlayerLevelUp_SC& from);
  void MergeFrom(const MSG_RetNinePlayerLevelUp_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetNinePlayerLevelUp_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_RetNinePlayerLevelUp_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetFieldNumber = 1,
  };
  // optional .msg.EntryIDType target = 1;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  const ::msg::EntryIDType& target() const;
  ::msg::EntryIDType* release_target();
  ::msg::EntryIDType* mutable_target();
  void set_allocated_target(::msg::EntryIDType* target);
  private:
  const ::msg::EntryIDType& _internal_target() const;
  ::msg::EntryIDType* _internal_mutable_target();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_RetNinePlayerLevelUp_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::EntryIDType* target_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_UpdateExpLevel_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_UpdateExpLevel_SC) */ {
 public:
  MSG_UpdateExpLevel_SC();
  virtual ~MSG_UpdateExpLevel_SC();

  MSG_UpdateExpLevel_SC(const MSG_UpdateExpLevel_SC& from);
  MSG_UpdateExpLevel_SC(MSG_UpdateExpLevel_SC&& from) noexcept
    : MSG_UpdateExpLevel_SC() {
    *this = ::std::move(from);
  }

  inline MSG_UpdateExpLevel_SC& operator=(const MSG_UpdateExpLevel_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_UpdateExpLevel_SC& operator=(MSG_UpdateExpLevel_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_UpdateExpLevel_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_UpdateExpLevel_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_UpdateExpLevel_SC*>(
               &_MSG_UpdateExpLevel_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(MSG_UpdateExpLevel_SC& a, MSG_UpdateExpLevel_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_UpdateExpLevel_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_UpdateExpLevel_SC* New() const final {
    return CreateMaybeMessage<MSG_UpdateExpLevel_SC>(nullptr);
  }

  MSG_UpdateExpLevel_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_UpdateExpLevel_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_UpdateExpLevel_SC& from);
  void MergeFrom(const MSG_UpdateExpLevel_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_UpdateExpLevel_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_UpdateExpLevel_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurexpFieldNumber = 1,
    kCurlevelFieldNumber = 2,
    kMainheroThisidFieldNumber = 3,
    kMainheroExpFieldNumber = 4,
    kMainheroLvFieldNumber = 5,
  };
  // optional uint32 curexp = 1;
  bool has_curexp() const;
  private:
  bool _internal_has_curexp() const;
  public:
  void clear_curexp();
  ::PROTOBUF_NAMESPACE_ID::uint32 curexp() const;
  void set_curexp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curexp() const;
  void _internal_set_curexp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 curlevel = 2;
  bool has_curlevel() const;
  private:
  bool _internal_has_curlevel() const;
  public:
  void clear_curlevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 curlevel() const;
  void set_curlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curlevel() const;
  void _internal_set_curlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 mainhero_thisid = 3;
  bool has_mainhero_thisid() const;
  private:
  bool _internal_has_mainhero_thisid() const;
  public:
  void clear_mainhero_thisid();
  ::PROTOBUF_NAMESPACE_ID::uint64 mainhero_thisid() const;
  void set_mainhero_thisid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mainhero_thisid() const;
  void _internal_set_mainhero_thisid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 mainhero_exp = 4;
  bool has_mainhero_exp() const;
  private:
  bool _internal_has_mainhero_exp() const;
  public:
  void clear_mainhero_exp();
  ::PROTOBUF_NAMESPACE_ID::uint64 mainhero_exp() const;
  void set_mainhero_exp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mainhero_exp() const;
  void _internal_set_mainhero_exp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 mainhero_lv = 5;
  bool has_mainhero_lv() const;
  private:
  bool _internal_has_mainhero_lv() const;
  public:
  void clear_mainhero_lv();
  ::PROTOBUF_NAMESPACE_ID::uint32 mainhero_lv() const;
  void set_mainhero_lv(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mainhero_lv() const;
  void _internal_set_mainhero_lv(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_UpdateExpLevel_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curexp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curlevel_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mainhero_thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mainhero_exp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mainhero_lv_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_NotifyAntiAddict_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_NotifyAntiAddict_SC) */ {
 public:
  MSG_NotifyAntiAddict_SC();
  virtual ~MSG_NotifyAntiAddict_SC();

  MSG_NotifyAntiAddict_SC(const MSG_NotifyAntiAddict_SC& from);
  MSG_NotifyAntiAddict_SC(MSG_NotifyAntiAddict_SC&& from) noexcept
    : MSG_NotifyAntiAddict_SC() {
    *this = ::std::move(from);
  }

  inline MSG_NotifyAntiAddict_SC& operator=(const MSG_NotifyAntiAddict_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_NotifyAntiAddict_SC& operator=(MSG_NotifyAntiAddict_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_NotifyAntiAddict_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_NotifyAntiAddict_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_NotifyAntiAddict_SC*>(
               &_MSG_NotifyAntiAddict_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(MSG_NotifyAntiAddict_SC& a, MSG_NotifyAntiAddict_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_NotifyAntiAddict_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_NotifyAntiAddict_SC* New() const final {
    return CreateMaybeMessage<MSG_NotifyAntiAddict_SC>(nullptr);
  }

  MSG_NotifyAntiAddict_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_NotifyAntiAddict_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_NotifyAntiAddict_SC& from);
  void MergeFrom(const MSG_NotifyAntiAddict_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_NotifyAntiAddict_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_NotifyAntiAddict_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnlinelasttimeFieldNumber = 1,
    kIsAntiAddcitFieldNumber = 2,
    kIsLoginPushFieldNumber = 3,
  };
  // optional uint32 onlinelasttime = 1;
  bool has_onlinelasttime() const;
  private:
  bool _internal_has_onlinelasttime() const;
  public:
  void clear_onlinelasttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 onlinelasttime() const;
  void set_onlinelasttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_onlinelasttime() const;
  void _internal_set_onlinelasttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool isAntiAddcit = 2;
  bool has_isantiaddcit() const;
  private:
  bool _internal_has_isantiaddcit() const;
  public:
  void clear_isantiaddcit();
  bool isantiaddcit() const;
  void set_isantiaddcit(bool value);
  private:
  bool _internal_isantiaddcit() const;
  void _internal_set_isantiaddcit(bool value);
  public:

  // optional bool isLoginPush = 3;
  bool has_isloginpush() const;
  private:
  bool _internal_has_isloginpush() const;
  public:
  void clear_isloginpush();
  bool isloginpush() const;
  void set_isloginpush(bool value);
  private:
  bool _internal_isloginpush() const;
  void _internal_set_isloginpush(bool value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_NotifyAntiAddict_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 onlinelasttime_;
  bool isantiaddcit_;
  bool isloginpush_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqUpdateAntiAddict_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_ReqUpdateAntiAddict_CS) */ {
 public:
  MSG_ReqUpdateAntiAddict_CS();
  virtual ~MSG_ReqUpdateAntiAddict_CS();

  MSG_ReqUpdateAntiAddict_CS(const MSG_ReqUpdateAntiAddict_CS& from);
  MSG_ReqUpdateAntiAddict_CS(MSG_ReqUpdateAntiAddict_CS&& from) noexcept
    : MSG_ReqUpdateAntiAddict_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqUpdateAntiAddict_CS& operator=(const MSG_ReqUpdateAntiAddict_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqUpdateAntiAddict_CS& operator=(MSG_ReqUpdateAntiAddict_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqUpdateAntiAddict_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqUpdateAntiAddict_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqUpdateAntiAddict_CS*>(
               &_MSG_ReqUpdateAntiAddict_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(MSG_ReqUpdateAntiAddict_CS& a, MSG_ReqUpdateAntiAddict_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqUpdateAntiAddict_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqUpdateAntiAddict_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqUpdateAntiAddict_CS>(nullptr);
  }

  MSG_ReqUpdateAntiAddict_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqUpdateAntiAddict_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqUpdateAntiAddict_CS& from);
  void MergeFrom(const MSG_ReqUpdateAntiAddict_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqUpdateAntiAddict_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_ReqUpdateAntiAddict_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_ReqUpdateAntiAddict_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqEntrySelectState_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_ReqEntrySelectState_CS) */ {
 public:
  MSG_ReqEntrySelectState_CS();
  virtual ~MSG_ReqEntrySelectState_CS();

  MSG_ReqEntrySelectState_CS(const MSG_ReqEntrySelectState_CS& from);
  MSG_ReqEntrySelectState_CS(MSG_ReqEntrySelectState_CS&& from) noexcept
    : MSG_ReqEntrySelectState_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqEntrySelectState_CS& operator=(const MSG_ReqEntrySelectState_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqEntrySelectState_CS& operator=(MSG_ReqEntrySelectState_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqEntrySelectState_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqEntrySelectState_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqEntrySelectState_CS*>(
               &_MSG_ReqEntrySelectState_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(MSG_ReqEntrySelectState_CS& a, MSG_ReqEntrySelectState_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqEntrySelectState_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqEntrySelectState_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqEntrySelectState_CS>(nullptr);
  }

  MSG_ReqEntrySelectState_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqEntrySelectState_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqEntrySelectState_CS& from);
  void MergeFrom(const MSG_ReqEntrySelectState_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqEntrySelectState_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_ReqEntrySelectState_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOldoneFieldNumber = 1,
    kNewoneFieldNumber = 2,
  };
  // optional .msg.EntryIDType oldone = 1;
  bool has_oldone() const;
  private:
  bool _internal_has_oldone() const;
  public:
  void clear_oldone();
  const ::msg::EntryIDType& oldone() const;
  ::msg::EntryIDType* release_oldone();
  ::msg::EntryIDType* mutable_oldone();
  void set_allocated_oldone(::msg::EntryIDType* oldone);
  private:
  const ::msg::EntryIDType& _internal_oldone() const;
  ::msg::EntryIDType* _internal_mutable_oldone();
  public:

  // optional .msg.EntryIDType newone = 2;
  bool has_newone() const;
  private:
  bool _internal_has_newone() const;
  public:
  void clear_newone();
  const ::msg::EntryIDType& newone() const;
  ::msg::EntryIDType* release_newone();
  ::msg::EntryIDType* mutable_newone();
  void set_allocated_newone(::msg::EntryIDType* newone);
  private:
  const ::msg::EntryIDType& _internal_newone() const;
  ::msg::EntryIDType* _internal_mutable_newone();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_ReqEntrySelectState_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::EntryIDType* oldone_;
  ::msg::EntryIDType* newone_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetEntrySelectState_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_RetEntrySelectState_SC) */ {
 public:
  MSG_RetEntrySelectState_SC();
  virtual ~MSG_RetEntrySelectState_SC();

  MSG_RetEntrySelectState_SC(const MSG_RetEntrySelectState_SC& from);
  MSG_RetEntrySelectState_SC(MSG_RetEntrySelectState_SC&& from) noexcept
    : MSG_RetEntrySelectState_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetEntrySelectState_SC& operator=(const MSG_RetEntrySelectState_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetEntrySelectState_SC& operator=(MSG_RetEntrySelectState_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetEntrySelectState_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetEntrySelectState_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetEntrySelectState_SC*>(
               &_MSG_RetEntrySelectState_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(MSG_RetEntrySelectState_SC& a, MSG_RetEntrySelectState_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetEntrySelectState_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetEntrySelectState_SC* New() const final {
    return CreateMaybeMessage<MSG_RetEntrySelectState_SC>(nullptr);
  }

  MSG_RetEntrySelectState_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetEntrySelectState_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetEntrySelectState_SC& from);
  void MergeFrom(const MSG_RetEntrySelectState_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetEntrySelectState_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_RetEntrySelectState_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatesFieldNumber = 2,
    kChoosenFieldNumber = 1,
  };
  // repeated .msg.StateItem states = 2;
  int states_size() const;
  private:
  int _internal_states_size() const;
  public:
  void clear_states();
  ::msg::StateItem* mutable_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >*
      mutable_states();
  private:
  const ::msg::StateItem& _internal_states(int index) const;
  ::msg::StateItem* _internal_add_states();
  public:
  const ::msg::StateItem& states(int index) const;
  ::msg::StateItem* add_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >&
      states() const;

  // optional .msg.EntryIDType choosen = 1;
  bool has_choosen() const;
  private:
  bool _internal_has_choosen() const;
  public:
  void clear_choosen();
  const ::msg::EntryIDType& choosen() const;
  ::msg::EntryIDType* release_choosen();
  ::msg::EntryIDType* mutable_choosen();
  void set_allocated_choosen(::msg::EntryIDType* choosen);
  private:
  const ::msg::EntryIDType& _internal_choosen() const;
  ::msg::EntryIDType* _internal_mutable_choosen();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_RetEntrySelectState_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem > states_;
  ::msg::EntryIDType* choosen_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetHpMpToSelects_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_RetHpMpToSelects_SC) */ {
 public:
  MSG_RetHpMpToSelects_SC();
  virtual ~MSG_RetHpMpToSelects_SC();

  MSG_RetHpMpToSelects_SC(const MSG_RetHpMpToSelects_SC& from);
  MSG_RetHpMpToSelects_SC(MSG_RetHpMpToSelects_SC&& from) noexcept
    : MSG_RetHpMpToSelects_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetHpMpToSelects_SC& operator=(const MSG_RetHpMpToSelects_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetHpMpToSelects_SC& operator=(MSG_RetHpMpToSelects_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetHpMpToSelects_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetHpMpToSelects_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetHpMpToSelects_SC*>(
               &_MSG_RetHpMpToSelects_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(MSG_RetHpMpToSelects_SC& a, MSG_RetHpMpToSelects_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetHpMpToSelects_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetHpMpToSelects_SC* New() const final {
    return CreateMaybeMessage<MSG_RetHpMpToSelects_SC>(nullptr);
  }

  MSG_RetHpMpToSelects_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetHpMpToSelects_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetHpMpToSelects_SC& from);
  void MergeFrom(const MSG_RetHpMpToSelects_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetHpMpToSelects_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_RetHpMpToSelects_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChoosenFieldNumber = 1,
    kCurhpFieldNumber = 2,
    kMaxhpFieldNumber = 3,
    kCurmpFieldNumber = 4,
    kMaxmpFieldNumber = 5,
  };
  // optional .msg.EntryIDType choosen = 1;
  bool has_choosen() const;
  private:
  bool _internal_has_choosen() const;
  public:
  void clear_choosen();
  const ::msg::EntryIDType& choosen() const;
  ::msg::EntryIDType* release_choosen();
  ::msg::EntryIDType* mutable_choosen();
  void set_allocated_choosen(::msg::EntryIDType* choosen);
  private:
  const ::msg::EntryIDType& _internal_choosen() const;
  ::msg::EntryIDType* _internal_mutable_choosen();
  public:

  // optional uint32 curhp = 2;
  bool has_curhp() const;
  private:
  bool _internal_has_curhp() const;
  public:
  void clear_curhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 curhp() const;
  void set_curhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curhp() const;
  void _internal_set_curhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxhp = 3;
  bool has_maxhp() const;
  private:
  bool _internal_has_maxhp() const;
  public:
  void clear_maxhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp() const;
  void set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxhp() const;
  void _internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 curmp = 4;
  bool has_curmp() const;
  private:
  bool _internal_has_curmp() const;
  public:
  void clear_curmp();
  ::PROTOBUF_NAMESPACE_ID::uint32 curmp() const;
  void set_curmp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curmp() const;
  void _internal_set_curmp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxmp = 5;
  bool has_maxmp() const;
  private:
  bool _internal_has_maxmp() const;
  public:
  void clear_maxmp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxmp() const;
  void set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxmp() const;
  void _internal_set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_RetHpMpToSelects_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::EntryIDType* choosen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curhp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curmp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxmp_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqHeroAttributeData_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_ReqHeroAttributeData_CS) */ {
 public:
  MSG_ReqHeroAttributeData_CS();
  virtual ~MSG_ReqHeroAttributeData_CS();

  MSG_ReqHeroAttributeData_CS(const MSG_ReqHeroAttributeData_CS& from);
  MSG_ReqHeroAttributeData_CS(MSG_ReqHeroAttributeData_CS&& from) noexcept
    : MSG_ReqHeroAttributeData_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqHeroAttributeData_CS& operator=(const MSG_ReqHeroAttributeData_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqHeroAttributeData_CS& operator=(MSG_ReqHeroAttributeData_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqHeroAttributeData_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqHeroAttributeData_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqHeroAttributeData_CS*>(
               &_MSG_ReqHeroAttributeData_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(MSG_ReqHeroAttributeData_CS& a, MSG_ReqHeroAttributeData_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqHeroAttributeData_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqHeroAttributeData_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqHeroAttributeData_CS>(nullptr);
  }

  MSG_ReqHeroAttributeData_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqHeroAttributeData_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqHeroAttributeData_CS& from);
  void MergeFrom(const MSG_ReqHeroAttributeData_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqHeroAttributeData_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_ReqHeroAttributeData_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 1,
  };
  // optional string herothisid = 1;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  const std::string& herothisid() const;
  void set_herothisid(const std::string& value);
  void set_herothisid(std::string&& value);
  void set_herothisid(const char* value);
  void set_herothisid(const char* value, size_t size);
  std::string* mutable_herothisid();
  std::string* release_herothisid();
  void set_allocated_herothisid(std::string* herothisid);
  private:
  const std::string& _internal_herothisid() const;
  void _internal_set_herothisid(const std::string& value);
  std::string* _internal_mutable_herothisid();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_ReqHeroAttributeData_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herothisid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetHeroAttributeData_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_RetHeroAttributeData_SC) */ {
 public:
  MSG_RetHeroAttributeData_SC();
  virtual ~MSG_RetHeroAttributeData_SC();

  MSG_RetHeroAttributeData_SC(const MSG_RetHeroAttributeData_SC& from);
  MSG_RetHeroAttributeData_SC(MSG_RetHeroAttributeData_SC&& from) noexcept
    : MSG_RetHeroAttributeData_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetHeroAttributeData_SC& operator=(const MSG_RetHeroAttributeData_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetHeroAttributeData_SC& operator=(MSG_RetHeroAttributeData_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetHeroAttributeData_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetHeroAttributeData_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetHeroAttributeData_SC*>(
               &_MSG_RetHeroAttributeData_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(MSG_RetHeroAttributeData_SC& a, MSG_RetHeroAttributeData_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetHeroAttributeData_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetHeroAttributeData_SC* New() const final {
    return CreateMaybeMessage<MSG_RetHeroAttributeData_SC>(nullptr);
  }

  MSG_RetHeroAttributeData_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetHeroAttributeData_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetHeroAttributeData_SC& from);
  void MergeFrom(const MSG_RetHeroAttributeData_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetHeroAttributeData_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_RetHeroAttributeData_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 1,
    kDataFieldNumber = 2,
    kFightvalueFieldNumber = 3,
  };
  // optional string herothisid = 1;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  const std::string& herothisid() const;
  void set_herothisid(const std::string& value);
  void set_herothisid(std::string&& value);
  void set_herothisid(const char* value);
  void set_herothisid(const char* value, size_t size);
  std::string* mutable_herothisid();
  std::string* release_herothisid();
  void set_allocated_herothisid(std::string* herothisid);
  private:
  const std::string& _internal_herothisid() const;
  void _internal_set_herothisid(const std::string& value);
  std::string* _internal_mutable_herothisid();
  public:

  // optional .msg.AttributeData data = 2;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::msg::AttributeData& data() const;
  ::msg::AttributeData* release_data();
  ::msg::AttributeData* mutable_data();
  void set_allocated_data(::msg::AttributeData* data);
  private:
  const ::msg::AttributeData& _internal_data() const;
  ::msg::AttributeData* _internal_mutable_data();
  public:

  // optional uint32 fightvalue = 3;
  bool has_fightvalue() const;
  private:
  bool _internal_has_fightvalue() const;
  public:
  void clear_fightvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 fightvalue() const;
  void set_fightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fightvalue() const;
  void _internal_set_fightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_RetHeroAttributeData_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herothisid_;
  ::msg::AttributeData* data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fightvalue_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetDiffLineOfLeader_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_RetDiffLineOfLeader_SC) */ {
 public:
  MSG_RetDiffLineOfLeader_SC();
  virtual ~MSG_RetDiffLineOfLeader_SC();

  MSG_RetDiffLineOfLeader_SC(const MSG_RetDiffLineOfLeader_SC& from);
  MSG_RetDiffLineOfLeader_SC(MSG_RetDiffLineOfLeader_SC&& from) noexcept
    : MSG_RetDiffLineOfLeader_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetDiffLineOfLeader_SC& operator=(const MSG_RetDiffLineOfLeader_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetDiffLineOfLeader_SC& operator=(MSG_RetDiffLineOfLeader_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetDiffLineOfLeader_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetDiffLineOfLeader_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetDiffLineOfLeader_SC*>(
               &_MSG_RetDiffLineOfLeader_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(MSG_RetDiffLineOfLeader_SC& a, MSG_RetDiffLineOfLeader_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetDiffLineOfLeader_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetDiffLineOfLeader_SC* New() const final {
    return CreateMaybeMessage<MSG_RetDiffLineOfLeader_SC>(nullptr);
  }

  MSG_RetDiffLineOfLeader_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetDiffLineOfLeader_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetDiffLineOfLeader_SC& from);
  void MergeFrom(const MSG_RetDiffLineOfLeader_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetDiffLineOfLeader_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_RetDiffLineOfLeader_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_RetDiffLineOfLeader_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqJumptoLeaderLine_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_ReqJumptoLeaderLine_CS) */ {
 public:
  MSG_ReqJumptoLeaderLine_CS();
  virtual ~MSG_ReqJumptoLeaderLine_CS();

  MSG_ReqJumptoLeaderLine_CS(const MSG_ReqJumptoLeaderLine_CS& from);
  MSG_ReqJumptoLeaderLine_CS(MSG_ReqJumptoLeaderLine_CS&& from) noexcept
    : MSG_ReqJumptoLeaderLine_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqJumptoLeaderLine_CS& operator=(const MSG_ReqJumptoLeaderLine_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqJumptoLeaderLine_CS& operator=(MSG_ReqJumptoLeaderLine_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqJumptoLeaderLine_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqJumptoLeaderLine_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqJumptoLeaderLine_CS*>(
               &_MSG_ReqJumptoLeaderLine_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(MSG_ReqJumptoLeaderLine_CS& a, MSG_ReqJumptoLeaderLine_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqJumptoLeaderLine_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqJumptoLeaderLine_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqJumptoLeaderLine_CS>(nullptr);
  }

  MSG_ReqJumptoLeaderLine_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqJumptoLeaderLine_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqJumptoLeaderLine_CS& from);
  void MergeFrom(const MSG_ReqJumptoLeaderLine_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqJumptoLeaderLine_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_ReqJumptoLeaderLine_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_ReqJumptoLeaderLine_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class SelectUserInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.SelectUserInfo) */ {
 public:
  SelectUserInfo();
  virtual ~SelectUserInfo();

  SelectUserInfo(const SelectUserInfo& from);
  SelectUserInfo(SelectUserInfo&& from) noexcept
    : SelectUserInfo() {
    *this = ::std::move(from);
  }

  inline SelectUserInfo& operator=(const SelectUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SelectUserInfo& operator=(SelectUserInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SelectUserInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SelectUserInfo* internal_default_instance() {
    return reinterpret_cast<const SelectUserInfo*>(
               &_SelectUserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(SelectUserInfo& a, SelectUserInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SelectUserInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SelectUserInfo* New() const final {
    return CreateMaybeMessage<SelectUserInfo>(nullptr);
  }

  SelectUserInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SelectUserInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SelectUserInfo& from);
  void MergeFrom(const SelectUserInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SelectUserInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.SelectUserInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kMapnameFieldNumber = 16,
    kCharidFieldNumber = 1,
    kLevelFieldNumber = 3,
    kHeroidFieldNumber = 5,
    kCurheroidFieldNumber = 6,
    kDelTimeFieldNumber = 7,
    kOfflinetimeFieldNumber = 8,
    kFacestyleFieldNumber = 9,
    kHairstyleFieldNumber = 10,
    kHaircolorFieldNumber = 11,
    kBodystyleFieldNumber = 12,
    kAntennaFieldNumber = 13,
    kOnlinelasttimeFieldNumber = 14,
    kAddictpreuptimeFieldNumber = 15,
    kAvataridFieldNumber = 17,
    kSexFieldNumber = 4,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string mapname = 16;
  bool has_mapname() const;
  private:
  bool _internal_has_mapname() const;
  public:
  void clear_mapname();
  const std::string& mapname() const;
  void set_mapname(const std::string& value);
  void set_mapname(std::string&& value);
  void set_mapname(const char* value);
  void set_mapname(const char* value, size_t size);
  std::string* mutable_mapname();
  std::string* release_mapname();
  void set_allocated_mapname(std::string* mapname);
  private:
  const std::string& _internal_mapname() const;
  void _internal_set_mapname(const std::string& value);
  std::string* _internal_mutable_mapname();
  public:

  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 level = 3;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 heroid = 5;
  bool has_heroid() const;
  private:
  bool _internal_has_heroid() const;
  public:
  void clear_heroid();
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid() const;
  void set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_heroid() const;
  void _internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 curheroid = 6;
  bool has_curheroid() const;
  private:
  bool _internal_has_curheroid() const;
  public:
  void clear_curheroid();
  ::PROTOBUF_NAMESPACE_ID::uint32 curheroid() const;
  void set_curheroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curheroid() const;
  void _internal_set_curheroid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 delTime = 7;
  bool has_deltime() const;
  private:
  bool _internal_has_deltime() const;
  public:
  void clear_deltime();
  ::PROTOBUF_NAMESPACE_ID::uint32 deltime() const;
  void set_deltime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deltime() const;
  void _internal_set_deltime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 offlinetime = 8;
  bool has_offlinetime() const;
  private:
  bool _internal_has_offlinetime() const;
  public:
  void clear_offlinetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 offlinetime() const;
  void set_offlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offlinetime() const;
  void _internal_set_offlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 facestyle = 9;
  bool has_facestyle() const;
  private:
  bool _internal_has_facestyle() const;
  public:
  void clear_facestyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 facestyle() const;
  void set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_facestyle() const;
  void _internal_set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hairstyle = 10;
  bool has_hairstyle() const;
  private:
  bool _internal_has_hairstyle() const;
  public:
  void clear_hairstyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 hairstyle() const;
  void set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hairstyle() const;
  void _internal_set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 haircolor = 11;
  bool has_haircolor() const;
  private:
  bool _internal_has_haircolor() const;
  public:
  void clear_haircolor();
  ::PROTOBUF_NAMESPACE_ID::uint32 haircolor() const;
  void set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_haircolor() const;
  void _internal_set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bodystyle = 12;
  bool has_bodystyle() const;
  private:
  bool _internal_has_bodystyle() const;
  public:
  void clear_bodystyle();
  ::PROTOBUF_NAMESPACE_ID::uint32 bodystyle() const;
  void set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bodystyle() const;
  void _internal_set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 antenna = 13;
  bool has_antenna() const;
  private:
  bool _internal_has_antenna() const;
  public:
  void clear_antenna();
  ::PROTOBUF_NAMESPACE_ID::uint32 antenna() const;
  void set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_antenna() const;
  void _internal_set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 onlinelasttime = 14;
  bool has_onlinelasttime() const;
  private:
  bool _internal_has_onlinelasttime() const;
  public:
  void clear_onlinelasttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 onlinelasttime() const;
  void set_onlinelasttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_onlinelasttime() const;
  void _internal_set_onlinelasttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 addictpreuptime = 15;
  bool has_addictpreuptime() const;
  private:
  bool _internal_has_addictpreuptime() const;
  public:
  void clear_addictpreuptime();
  ::PROTOBUF_NAMESPACE_ID::uint32 addictpreuptime() const;
  void set_addictpreuptime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_addictpreuptime() const;
  void _internal_set_addictpreuptime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 avatarid = 17;
  bool has_avatarid() const;
  private:
  bool _internal_has_avatarid() const;
  public:
  void clear_avatarid();
  ::PROTOBUF_NAMESPACE_ID::uint32 avatarid() const;
  void set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_avatarid() const;
  void _internal_set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .msg.SEX sex = 4;
  bool has_sex() const;
  private:
  bool _internal_has_sex() const;
  public:
  void clear_sex();
  ::msg::SEX sex() const;
  void set_sex(::msg::SEX value);
  private:
  ::msg::SEX _internal_sex() const;
  void _internal_set_sex(::msg::SEX value);
  public:

  // @@protoc_insertion_point(class_scope:msg.SelectUserInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mapname_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 heroid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curheroid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deltime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offlinetime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 facestyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hairstyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 haircolor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bodystyle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 antenna_;
  ::PROTOBUF_NAMESPACE_ID::uint32 onlinelasttime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 addictpreuptime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 avatarid_;
  int sex_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_LoginOnReturnCharList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_LoginOnReturnCharList_SC) */ {
 public:
  MSG_Ret_LoginOnReturnCharList_SC();
  virtual ~MSG_Ret_LoginOnReturnCharList_SC();

  MSG_Ret_LoginOnReturnCharList_SC(const MSG_Ret_LoginOnReturnCharList_SC& from);
  MSG_Ret_LoginOnReturnCharList_SC(MSG_Ret_LoginOnReturnCharList_SC&& from) noexcept
    : MSG_Ret_LoginOnReturnCharList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_LoginOnReturnCharList_SC& operator=(const MSG_Ret_LoginOnReturnCharList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_LoginOnReturnCharList_SC& operator=(MSG_Ret_LoginOnReturnCharList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_LoginOnReturnCharList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_LoginOnReturnCharList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_LoginOnReturnCharList_SC*>(
               &_MSG_Ret_LoginOnReturnCharList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(MSG_Ret_LoginOnReturnCharList_SC& a, MSG_Ret_LoginOnReturnCharList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_LoginOnReturnCharList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_LoginOnReturnCharList_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_LoginOnReturnCharList_SC>(nullptr);
  }

  MSG_Ret_LoginOnReturnCharList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_LoginOnReturnCharList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_LoginOnReturnCharList_SC& from);
  void MergeFrom(const MSG_Ret_LoginOnReturnCharList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_LoginOnReturnCharList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_LoginOnReturnCharList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharListFieldNumber = 1,
  };
  // repeated .msg.SelectUserInfo charList = 1;
  int charlist_size() const;
  private:
  int _internal_charlist_size() const;
  public:
  void clear_charlist();
  ::msg::SelectUserInfo* mutable_charlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::SelectUserInfo >*
      mutable_charlist();
  private:
  const ::msg::SelectUserInfo& _internal_charlist(int index) const;
  ::msg::SelectUserInfo* _internal_add_charlist();
  public:
  const ::msg::SelectUserInfo& charlist(int index) const;
  ::msg::SelectUserInfo* add_charlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::SelectUserInfo >&
      charlist() const;

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_LoginOnReturnCharList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::SelectUserInfo > charlist_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_SelectCharToLogin_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_SelectCharToLogin_CS) */ {
 public:
  MSG_Req_SelectCharToLogin_CS();
  virtual ~MSG_Req_SelectCharToLogin_CS();

  MSG_Req_SelectCharToLogin_CS(const MSG_Req_SelectCharToLogin_CS& from);
  MSG_Req_SelectCharToLogin_CS(MSG_Req_SelectCharToLogin_CS&& from) noexcept
    : MSG_Req_SelectCharToLogin_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_SelectCharToLogin_CS& operator=(const MSG_Req_SelectCharToLogin_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_SelectCharToLogin_CS& operator=(MSG_Req_SelectCharToLogin_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_SelectCharToLogin_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_SelectCharToLogin_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_SelectCharToLogin_CS*>(
               &_MSG_Req_SelectCharToLogin_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(MSG_Req_SelectCharToLogin_CS& a, MSG_Req_SelectCharToLogin_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_SelectCharToLogin_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_SelectCharToLogin_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_SelectCharToLogin_CS>(nullptr);
  }

  MSG_Req_SelectCharToLogin_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_SelectCharToLogin_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_SelectCharToLogin_CS& from);
  void MergeFrom(const MSG_Req_SelectCharToLogin_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_SelectCharToLogin_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_SelectCharToLogin_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharidFieldNumber = 1,
  };
  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_SelectCharToLogin_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_IS_NICKNAME_REPEATED_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC) */ {
 public:
  MSG_Req_IS_NICKNAME_REPEATED_CSC();
  virtual ~MSG_Req_IS_NICKNAME_REPEATED_CSC();

  MSG_Req_IS_NICKNAME_REPEATED_CSC(const MSG_Req_IS_NICKNAME_REPEATED_CSC& from);
  MSG_Req_IS_NICKNAME_REPEATED_CSC(MSG_Req_IS_NICKNAME_REPEATED_CSC&& from) noexcept
    : MSG_Req_IS_NICKNAME_REPEATED_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_Req_IS_NICKNAME_REPEATED_CSC& operator=(const MSG_Req_IS_NICKNAME_REPEATED_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_IS_NICKNAME_REPEATED_CSC& operator=(MSG_Req_IS_NICKNAME_REPEATED_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_IS_NICKNAME_REPEATED_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_IS_NICKNAME_REPEATED_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_IS_NICKNAME_REPEATED_CSC*>(
               &_MSG_Req_IS_NICKNAME_REPEATED_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(MSG_Req_IS_NICKNAME_REPEATED_CSC& a, MSG_Req_IS_NICKNAME_REPEATED_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_IS_NICKNAME_REPEATED_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_IS_NICKNAME_REPEATED_CSC* New() const final {
    return CreateMaybeMessage<MSG_Req_IS_NICKNAME_REPEATED_CSC>(nullptr);
  }

  MSG_Req_IS_NICKNAME_REPEATED_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_IS_NICKNAME_REPEATED_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_IS_NICKNAME_REPEATED_CSC& from);
  void MergeFrom(const MSG_Req_IS_NICKNAME_REPEATED_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_IS_NICKNAME_REPEATED_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_IS_NICKNAME_REPEATED_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kRetFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint32 ret = 2;
  bool has_ret() const;
  private:
  bool _internal_has_ret() const;
  public:
  void clear_ret();
  ::PROTOBUF_NAMESPACE_ID::uint32 ret() const;
  void set_ret(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ret() const;
  void _internal_set_ret(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ret_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_Back_to_Select_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_Back_to_Select_CS) */ {
 public:
  MSG_Req_Back_to_Select_CS();
  virtual ~MSG_Req_Back_to_Select_CS();

  MSG_Req_Back_to_Select_CS(const MSG_Req_Back_to_Select_CS& from);
  MSG_Req_Back_to_Select_CS(MSG_Req_Back_to_Select_CS&& from) noexcept
    : MSG_Req_Back_to_Select_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_Back_to_Select_CS& operator=(const MSG_Req_Back_to_Select_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_Back_to_Select_CS& operator=(MSG_Req_Back_to_Select_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_Back_to_Select_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_Back_to_Select_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_Back_to_Select_CS*>(
               &_MSG_Req_Back_to_Select_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(MSG_Req_Back_to_Select_CS& a, MSG_Req_Back_to_Select_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_Back_to_Select_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_Back_to_Select_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_Back_to_Select_CS>(nullptr);
  }

  MSG_Req_Back_to_Select_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_Back_to_Select_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_Back_to_Select_CS& from);
  void MergeFrom(const MSG_Req_Back_to_Select_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_Back_to_Select_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_Back_to_Select_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_Back_to_Select_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_Delete_Char_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_Delete_Char_CSC) */ {
 public:
  MSG_Req_Delete_Char_CSC();
  virtual ~MSG_Req_Delete_Char_CSC();

  MSG_Req_Delete_Char_CSC(const MSG_Req_Delete_Char_CSC& from);
  MSG_Req_Delete_Char_CSC(MSG_Req_Delete_Char_CSC&& from) noexcept
    : MSG_Req_Delete_Char_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_Req_Delete_Char_CSC& operator=(const MSG_Req_Delete_Char_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_Delete_Char_CSC& operator=(MSG_Req_Delete_Char_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_Delete_Char_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_Delete_Char_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_Delete_Char_CSC*>(
               &_MSG_Req_Delete_Char_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(MSG_Req_Delete_Char_CSC& a, MSG_Req_Delete_Char_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_Delete_Char_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_Delete_Char_CSC* New() const final {
    return CreateMaybeMessage<MSG_Req_Delete_Char_CSC>(nullptr);
  }

  MSG_Req_Delete_Char_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_Delete_Char_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_Delete_Char_CSC& from);
  void MergeFrom(const MSG_Req_Delete_Char_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_Delete_Char_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_Delete_Char_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharidFieldNumber = 1,
    kOpcodeFieldNumber = 2,
    kRetcodeFieldNumber = 3,
  };
  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 opcode = 2;
  bool has_opcode() const;
  private:
  bool _internal_has_opcode() const;
  public:
  void clear_opcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 opcode() const;
  void set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_opcode() const;
  void _internal_set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 retcode = 3;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_Delete_Char_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 opcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_Syn_MoveState_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Req_Syn_MoveState_CS) */ {
 public:
  MSG_Req_Syn_MoveState_CS();
  virtual ~MSG_Req_Syn_MoveState_CS();

  MSG_Req_Syn_MoveState_CS(const MSG_Req_Syn_MoveState_CS& from);
  MSG_Req_Syn_MoveState_CS(MSG_Req_Syn_MoveState_CS&& from) noexcept
    : MSG_Req_Syn_MoveState_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_Syn_MoveState_CS& operator=(const MSG_Req_Syn_MoveState_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_Syn_MoveState_CS& operator=(MSG_Req_Syn_MoveState_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_Syn_MoveState_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_Syn_MoveState_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_Syn_MoveState_CS*>(
               &_MSG_Req_Syn_MoveState_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(MSG_Req_Syn_MoveState_CS& a, MSG_Req_Syn_MoveState_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_Syn_MoveState_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_Syn_MoveState_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_Syn_MoveState_CS>(nullptr);
  }

  MSG_Req_Syn_MoveState_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_Syn_MoveState_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_Syn_MoveState_CS& from);
  void MergeFrom(const MSG_Req_Syn_MoveState_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_Syn_MoveState_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Req_Syn_MoveState_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosFieldNumber = 9,
    kMoveStateFieldNumber = 1,
    kDirFieldNumber = 2,
    kDestxFieldNumber = 3,
    kDestyFieldNumber = 4,
    kMovespeedFieldNumber = 5,
    kStepFieldNumber = 6,
    kSrcxFieldNumber = 7,
    kSrcyFieldNumber = 8,
  };
  // repeated .msg.FloatMovePos pos = 9;
  int pos_size() const;
  private:
  int _internal_pos_size() const;
  public:
  void clear_pos();
  ::msg::FloatMovePos* mutable_pos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::FloatMovePos >*
      mutable_pos();
  private:
  const ::msg::FloatMovePos& _internal_pos(int index) const;
  ::msg::FloatMovePos* _internal_add_pos();
  public:
  const ::msg::FloatMovePos& pos(int index) const;
  ::msg::FloatMovePos* add_pos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::FloatMovePos >&
      pos() const;

  // optional uint32 move_state = 1;
  bool has_move_state() const;
  private:
  bool _internal_has_move_state() const;
  public:
  void clear_move_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 move_state() const;
  void set_move_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_move_state() const;
  void _internal_set_move_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dir = 2;
  bool has_dir() const;
  private:
  bool _internal_has_dir() const;
  public:
  void clear_dir();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir() const;
  void set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir() const;
  void _internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 destx = 3;
  bool has_destx() const;
  private:
  bool _internal_has_destx() const;
  public:
  void clear_destx();
  ::PROTOBUF_NAMESPACE_ID::uint32 destx() const;
  void set_destx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_destx() const;
  void _internal_set_destx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 desty = 4;
  bool has_desty() const;
  private:
  bool _internal_has_desty() const;
  public:
  void clear_desty();
  ::PROTOBUF_NAMESPACE_ID::uint32 desty() const;
  void set_desty(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_desty() const;
  void _internal_set_desty(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 movespeed = 5;
  bool has_movespeed() const;
  private:
  bool _internal_has_movespeed() const;
  public:
  void clear_movespeed();
  ::PROTOBUF_NAMESPACE_ID::uint32 movespeed() const;
  void set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_movespeed() const;
  void _internal_set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 step = 6;
  bool has_step() const;
  private:
  bool _internal_has_step() const;
  public:
  void clear_step();
  ::PROTOBUF_NAMESPACE_ID::uint32 step() const;
  void set_step(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_step() const;
  void _internal_set_step(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 srcx = 7;
  bool has_srcx() const;
  private:
  bool _internal_has_srcx() const;
  public:
  void clear_srcx();
  ::PROTOBUF_NAMESPACE_ID::uint32 srcx() const;
  void set_srcx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_srcx() const;
  void _internal_set_srcx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 srcy = 8;
  bool has_srcy() const;
  private:
  bool _internal_has_srcy() const;
  public:
  void clear_srcy();
  ::PROTOBUF_NAMESPACE_ID::uint32 srcy() const;
  void set_srcy(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_srcy() const;
  void _internal_set_srcy(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Req_Syn_MoveState_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::FloatMovePos > pos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 move_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 destx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 desty_;
  ::PROTOBUF_NAMESPACE_ID::uint32 movespeed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 step_;
  ::PROTOBUF_NAMESPACE_ID::uint32 srcx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 srcy_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_Find_Path_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_Find_Path_SC) */ {
 public:
  MSG_Ret_Find_Path_SC();
  virtual ~MSG_Ret_Find_Path_SC();

  MSG_Ret_Find_Path_SC(const MSG_Ret_Find_Path_SC& from);
  MSG_Ret_Find_Path_SC(MSG_Ret_Find_Path_SC&& from) noexcept
    : MSG_Ret_Find_Path_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_Find_Path_SC& operator=(const MSG_Ret_Find_Path_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_Find_Path_SC& operator=(MSG_Ret_Find_Path_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_Find_Path_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_Find_Path_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_Find_Path_SC*>(
               &_MSG_Ret_Find_Path_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(MSG_Ret_Find_Path_SC& a, MSG_Ret_Find_Path_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_Find_Path_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_Find_Path_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_Find_Path_SC>(nullptr);
  }

  MSG_Ret_Find_Path_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_Find_Path_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_Find_Path_SC& from);
  void MergeFrom(const MSG_Ret_Find_Path_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_Find_Path_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_Find_Path_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharidFieldNumber = 1,
    kGridindexFieldNumber = 2,
    kMoveresFieldNumber = 3,
  };
  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 gridindex = 2;
  bool has_gridindex() const;
  private:
  bool _internal_has_gridindex() const;
  public:
  void clear_gridindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 gridindex() const;
  void set_gridindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gridindex() const;
  void _internal_set_gridindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 moveres = 3;
  bool has_moveres() const;
  private:
  bool _internal_has_moveres() const;
  public:
  void clear_moveres();
  ::PROTOBUF_NAMESPACE_ID::uint32 moveres() const;
  void set_moveres(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_moveres() const;
  void _internal_set_moveres(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_Find_Path_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gridindex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 moveres_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_Rondom_Way_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_Rondom_Way_SC) */ {
 public:
  MSG_Ret_Rondom_Way_SC();
  virtual ~MSG_Ret_Rondom_Way_SC();

  MSG_Ret_Rondom_Way_SC(const MSG_Ret_Rondom_Way_SC& from);
  MSG_Ret_Rondom_Way_SC(MSG_Ret_Rondom_Way_SC&& from) noexcept
    : MSG_Ret_Rondom_Way_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_Rondom_Way_SC& operator=(const MSG_Ret_Rondom_Way_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_Rondom_Way_SC& operator=(MSG_Ret_Rondom_Way_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_Rondom_Way_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_Rondom_Way_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_Rondom_Way_SC*>(
               &_MSG_Ret_Rondom_Way_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(MSG_Ret_Rondom_Way_SC& a, MSG_Ret_Rondom_Way_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_Rondom_Way_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_Rondom_Way_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_Rondom_Way_SC>(nullptr);
  }

  MSG_Ret_Rondom_Way_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_Rondom_Way_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_Rondom_Way_SC& from);
  void MergeFrom(const MSG_Ret_Rondom_Way_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_Rondom_Way_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_Rondom_Way_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathinfoFieldNumber = 8,
    kZonecenterxFieldNumber = 1,
    kZonecenteryFieldNumber = 2,
    kZonewidthFieldNumber = 3,
    kZoneheightFieldNumber = 4,
    kGridwidthFieldNumber = 5,
    kGridheightFieldNumber = 6,
    kPathidFieldNumber = 7,
  };
  // optional string pathinfo = 8;
  bool has_pathinfo() const;
  private:
  bool _internal_has_pathinfo() const;
  public:
  void clear_pathinfo();
  const std::string& pathinfo() const;
  void set_pathinfo(const std::string& value);
  void set_pathinfo(std::string&& value);
  void set_pathinfo(const char* value);
  void set_pathinfo(const char* value, size_t size);
  std::string* mutable_pathinfo();
  std::string* release_pathinfo();
  void set_allocated_pathinfo(std::string* pathinfo);
  private:
  const std::string& _internal_pathinfo() const;
  void _internal_set_pathinfo(const std::string& value);
  std::string* _internal_mutable_pathinfo();
  public:

  // optional uint32 zonecenterx = 1;
  bool has_zonecenterx() const;
  private:
  bool _internal_has_zonecenterx() const;
  public:
  void clear_zonecenterx();
  ::PROTOBUF_NAMESPACE_ID::uint32 zonecenterx() const;
  void set_zonecenterx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_zonecenterx() const;
  void _internal_set_zonecenterx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 zonecentery = 2;
  bool has_zonecentery() const;
  private:
  bool _internal_has_zonecentery() const;
  public:
  void clear_zonecentery();
  ::PROTOBUF_NAMESPACE_ID::uint32 zonecentery() const;
  void set_zonecentery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_zonecentery() const;
  void _internal_set_zonecentery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 zonewidth = 3;
  bool has_zonewidth() const;
  private:
  bool _internal_has_zonewidth() const;
  public:
  void clear_zonewidth();
  ::PROTOBUF_NAMESPACE_ID::uint32 zonewidth() const;
  void set_zonewidth(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_zonewidth() const;
  void _internal_set_zonewidth(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 zoneheight = 4;
  bool has_zoneheight() const;
  private:
  bool _internal_has_zoneheight() const;
  public:
  void clear_zoneheight();
  ::PROTOBUF_NAMESPACE_ID::uint32 zoneheight() const;
  void set_zoneheight(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_zoneheight() const;
  void _internal_set_zoneheight(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gridwidth = 5;
  bool has_gridwidth() const;
  private:
  bool _internal_has_gridwidth() const;
  public:
  void clear_gridwidth();
  ::PROTOBUF_NAMESPACE_ID::uint32 gridwidth() const;
  void set_gridwidth(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gridwidth() const;
  void _internal_set_gridwidth(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gridheight = 6;
  bool has_gridheight() const;
  private:
  bool _internal_has_gridheight() const;
  public:
  void clear_gridheight();
  ::PROTOBUF_NAMESPACE_ID::uint32 gridheight() const;
  void set_gridheight(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gridheight() const;
  void _internal_set_gridheight(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pathid = 7;
  bool has_pathid() const;
  private:
  bool _internal_has_pathid() const;
  public:
  void clear_pathid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pathid() const;
  void set_pathid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pathid() const;
  void _internal_set_pathid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_Rondom_Way_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pathinfo_;
  ::PROTOBUF_NAMESPACE_ID::uint32 zonecenterx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 zonecentery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 zonewidth_;
  ::PROTOBUF_NAMESPACE_ID::uint32 zoneheight_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gridwidth_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gridheight_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pathid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_Find_Path_End_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Ret_Find_Path_End_SC) */ {
 public:
  MSG_Ret_Find_Path_End_SC();
  virtual ~MSG_Ret_Find_Path_End_SC();

  MSG_Ret_Find_Path_End_SC(const MSG_Ret_Find_Path_End_SC& from);
  MSG_Ret_Find_Path_End_SC(MSG_Ret_Find_Path_End_SC&& from) noexcept
    : MSG_Ret_Find_Path_End_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_Find_Path_End_SC& operator=(const MSG_Ret_Find_Path_End_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_Find_Path_End_SC& operator=(MSG_Ret_Find_Path_End_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_Find_Path_End_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_Find_Path_End_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_Find_Path_End_SC*>(
               &_MSG_Ret_Find_Path_End_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(MSG_Ret_Find_Path_End_SC& a, MSG_Ret_Find_Path_End_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_Find_Path_End_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_Find_Path_End_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_Find_Path_End_SC>(nullptr);
  }

  MSG_Ret_Find_Path_End_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_Find_Path_End_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_Find_Path_End_SC& from);
  void MergeFrom(const MSG_Ret_Find_Path_End_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_Find_Path_End_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Ret_Find_Path_End_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEndcodeFieldNumber = 1,
  };
  // optional uint32 endcode = 1;
  bool has_endcode() const;
  private:
  bool _internal_has_endcode() const;
  public:
  void clear_endcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 endcode() const;
  void set_endcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_endcode() const;
  void _internal_set_endcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Ret_Find_Path_End_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 endcode_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Show_Path_Way_End_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Show_Path_Way_End_CS) */ {
 public:
  MSG_Show_Path_Way_End_CS();
  virtual ~MSG_Show_Path_Way_End_CS();

  MSG_Show_Path_Way_End_CS(const MSG_Show_Path_Way_End_CS& from);
  MSG_Show_Path_Way_End_CS(MSG_Show_Path_Way_End_CS&& from) noexcept
    : MSG_Show_Path_Way_End_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Show_Path_Way_End_CS& operator=(const MSG_Show_Path_Way_End_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Show_Path_Way_End_CS& operator=(MSG_Show_Path_Way_End_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Show_Path_Way_End_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Show_Path_Way_End_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Show_Path_Way_End_CS*>(
               &_MSG_Show_Path_Way_End_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(MSG_Show_Path_Way_End_CS& a, MSG_Show_Path_Way_End_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Show_Path_Way_End_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Show_Path_Way_End_CS* New() const final {
    return CreateMaybeMessage<MSG_Show_Path_Way_End_CS>(nullptr);
  }

  MSG_Show_Path_Way_End_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Show_Path_Way_End_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Show_Path_Way_End_CS& from);
  void MergeFrom(const MSG_Show_Path_Way_End_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Show_Path_Way_End_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Show_Path_Way_End_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_Show_Path_Way_End_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class LineItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.LineItem) */ {
 public:
  LineItem();
  virtual ~LineItem();

  LineItem(const LineItem& from);
  LineItem(LineItem&& from) noexcept
    : LineItem() {
    *this = ::std::move(from);
  }

  inline LineItem& operator=(const LineItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline LineItem& operator=(LineItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LineItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LineItem* internal_default_instance() {
    return reinterpret_cast<const LineItem*>(
               &_LineItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(LineItem& a, LineItem& b) {
    a.Swap(&b);
  }
  inline void Swap(LineItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LineItem* New() const final {
    return CreateMaybeMessage<LineItem>(nullptr);
  }

  LineItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LineItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LineItem& from);
  void MergeFrom(const LineItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LineItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.LineItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kUserNumFieldNumber = 2,
  };
  // optional uint32 index = 1;
  bool has_index() const;
  private:
  bool _internal_has_index() const;
  public:
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 user_num = 2;
  bool has_user_num() const;
  private:
  bool _internal_has_user_num() const;
  public:
  void clear_user_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_num() const;
  void set_user_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_num() const;
  void _internal_set_user_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.LineItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_num_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_NoticeClientAllLines_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_NoticeClientAllLines_SC) */ {
 public:
  MSG_NoticeClientAllLines_SC();
  virtual ~MSG_NoticeClientAllLines_SC();

  MSG_NoticeClientAllLines_SC(const MSG_NoticeClientAllLines_SC& from);
  MSG_NoticeClientAllLines_SC(MSG_NoticeClientAllLines_SC&& from) noexcept
    : MSG_NoticeClientAllLines_SC() {
    *this = ::std::move(from);
  }

  inline MSG_NoticeClientAllLines_SC& operator=(const MSG_NoticeClientAllLines_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_NoticeClientAllLines_SC& operator=(MSG_NoticeClientAllLines_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_NoticeClientAllLines_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_NoticeClientAllLines_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_NoticeClientAllLines_SC*>(
               &_MSG_NoticeClientAllLines_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(MSG_NoticeClientAllLines_SC& a, MSG_NoticeClientAllLines_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_NoticeClientAllLines_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_NoticeClientAllLines_SC* New() const final {
    return CreateMaybeMessage<MSG_NoticeClientAllLines_SC>(nullptr);
  }

  MSG_NoticeClientAllLines_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_NoticeClientAllLines_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_NoticeClientAllLines_SC& from);
  void MergeFrom(const MSG_NoticeClientAllLines_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_NoticeClientAllLines_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_NoticeClientAllLines_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLinesFieldNumber = 1,
    kYourLineFieldNumber = 2,
  };
  // repeated .msg.LineItem lines = 1;
  int lines_size() const;
  private:
  int _internal_lines_size() const;
  public:
  void clear_lines();
  ::msg::LineItem* mutable_lines(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::LineItem >*
      mutable_lines();
  private:
  const ::msg::LineItem& _internal_lines(int index) const;
  ::msg::LineItem* _internal_add_lines();
  public:
  const ::msg::LineItem& lines(int index) const;
  ::msg::LineItem* add_lines();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::LineItem >&
      lines() const;

  // optional uint32 your_line = 2;
  bool has_your_line() const;
  private:
  bool _internal_has_your_line() const;
  public:
  void clear_your_line();
  ::PROTOBUF_NAMESPACE_ID::uint32 your_line() const;
  void set_your_line(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_your_line() const;
  void _internal_set_your_line(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_NoticeClientAllLines_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::LineItem > lines_;
  ::PROTOBUF_NAMESPACE_ID::uint32 your_line_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_UserReqChangeLine_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_UserReqChangeLine_CS) */ {
 public:
  MSG_UserReqChangeLine_CS();
  virtual ~MSG_UserReqChangeLine_CS();

  MSG_UserReqChangeLine_CS(const MSG_UserReqChangeLine_CS& from);
  MSG_UserReqChangeLine_CS(MSG_UserReqChangeLine_CS&& from) noexcept
    : MSG_UserReqChangeLine_CS() {
    *this = ::std::move(from);
  }

  inline MSG_UserReqChangeLine_CS& operator=(const MSG_UserReqChangeLine_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_UserReqChangeLine_CS& operator=(MSG_UserReqChangeLine_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_UserReqChangeLine_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_UserReqChangeLine_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_UserReqChangeLine_CS*>(
               &_MSG_UserReqChangeLine_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(MSG_UserReqChangeLine_CS& a, MSG_UserReqChangeLine_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_UserReqChangeLine_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_UserReqChangeLine_CS* New() const final {
    return CreateMaybeMessage<MSG_UserReqChangeLine_CS>(nullptr);
  }

  MSG_UserReqChangeLine_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_UserReqChangeLine_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_UserReqChangeLine_CS& from);
  void MergeFrom(const MSG_UserReqChangeLine_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_UserReqChangeLine_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_UserReqChangeLine_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLineidFieldNumber = 1,
  };
  // optional uint32 lineid = 1;
  bool has_lineid() const;
  private:
  bool _internal_has_lineid() const;
  public:
  void clear_lineid();
  ::PROTOBUF_NAMESPACE_ID::uint32 lineid() const;
  void set_lineid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lineid() const;
  void _internal_set_lineid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_UserReqChangeLine_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lineid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_OnUserJump_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_OnUserJump_CSC) */ {
 public:
  MSG_OnUserJump_CSC();
  virtual ~MSG_OnUserJump_CSC();

  MSG_OnUserJump_CSC(const MSG_OnUserJump_CSC& from);
  MSG_OnUserJump_CSC(MSG_OnUserJump_CSC&& from) noexcept
    : MSG_OnUserJump_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_OnUserJump_CSC& operator=(const MSG_OnUserJump_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_OnUserJump_CSC& operator=(MSG_OnUserJump_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_OnUserJump_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_OnUserJump_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_OnUserJump_CSC*>(
               &_MSG_OnUserJump_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(MSG_OnUserJump_CSC& a, MSG_OnUserJump_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_OnUserJump_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_OnUserJump_CSC* New() const final {
    return CreateMaybeMessage<MSG_OnUserJump_CSC>(nullptr);
  }

  MSG_OnUserJump_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_OnUserJump_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_OnUserJump_CSC& from);
  void MergeFrom(const MSG_OnUserJump_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_OnUserJump_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_OnUserJump_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
    kCharidFieldNumber = 2,
  };
  // optional .msg.MoveData data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::msg::MoveData& data() const;
  ::msg::MoveData* release_data();
  ::msg::MoveData* mutable_data();
  void set_allocated_data(::msg::MoveData* data);
  private:
  const ::msg::MoveData& _internal_data() const;
  ::msg::MoveData* _internal_mutable_data();
  public:

  // optional uint64 charid = 2;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_OnUserJump_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::MoveData* data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_NPCHatredList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_NPCHatredList_SC) */ {
 public:
  MSG_NPCHatredList_SC();
  virtual ~MSG_NPCHatredList_SC();

  MSG_NPCHatredList_SC(const MSG_NPCHatredList_SC& from);
  MSG_NPCHatredList_SC(MSG_NPCHatredList_SC&& from) noexcept
    : MSG_NPCHatredList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_NPCHatredList_SC& operator=(const MSG_NPCHatredList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_NPCHatredList_SC& operator=(MSG_NPCHatredList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_NPCHatredList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_NPCHatredList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_NPCHatredList_SC*>(
               &_MSG_NPCHatredList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(MSG_NPCHatredList_SC& a, MSG_NPCHatredList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_NPCHatredList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_NPCHatredList_SC* New() const final {
    return CreateMaybeMessage<MSG_NPCHatredList_SC>(nullptr);
  }

  MSG_NPCHatredList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_NPCHatredList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_NPCHatredList_SC& from);
  void MergeFrom(const MSG_NPCHatredList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_NPCHatredList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_NPCHatredList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnemytempidFieldNumber = 2,
    kNpctempidFieldNumber = 1,
  };
  // repeated uint64 enemytempid = 2;
  int enemytempid_size() const;
  private:
  int _internal_enemytempid_size() const;
  public:
  void clear_enemytempid();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_enemytempid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_enemytempid() const;
  void _internal_add_enemytempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_enemytempid();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 enemytempid(int index) const;
  void set_enemytempid(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_enemytempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      enemytempid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_enemytempid();

  // optional uint64 npctempid = 1;
  bool has_npctempid() const;
  private:
  bool _internal_has_npctempid() const;
  public:
  void clear_npctempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 npctempid() const;
  void set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_npctempid() const;
  void _internal_set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_NPCHatredList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > enemytempid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 npctempid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class NPC_HatredList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.NPC_HatredList) */ {
 public:
  NPC_HatredList();
  virtual ~NPC_HatredList();

  NPC_HatredList(const NPC_HatredList& from);
  NPC_HatredList(NPC_HatredList&& from) noexcept
    : NPC_HatredList() {
    *this = ::std::move(from);
  }

  inline NPC_HatredList& operator=(const NPC_HatredList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NPC_HatredList& operator=(NPC_HatredList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NPC_HatredList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NPC_HatredList* internal_default_instance() {
    return reinterpret_cast<const NPC_HatredList*>(
               &_NPC_HatredList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(NPC_HatredList& a, NPC_HatredList& b) {
    a.Swap(&b);
  }
  inline void Swap(NPC_HatredList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NPC_HatredList* New() const final {
    return CreateMaybeMessage<NPC_HatredList>(nullptr);
  }

  NPC_HatredList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NPC_HatredList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NPC_HatredList& from);
  void MergeFrom(const NPC_HatredList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NPC_HatredList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.NPC_HatredList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnemytempidFieldNumber = 2,
    kNpctempidFieldNumber = 1,
  };
  // repeated uint64 enemytempid = 2;
  int enemytempid_size() const;
  private:
  int _internal_enemytempid_size() const;
  public:
  void clear_enemytempid();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_enemytempid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_enemytempid() const;
  void _internal_add_enemytempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_enemytempid();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 enemytempid(int index) const;
  void set_enemytempid(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_enemytempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      enemytempid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_enemytempid();

  // optional uint64 npctempid = 1;
  bool has_npctempid() const;
  private:
  bool _internal_has_npctempid() const;
  public:
  void clear_npctempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 npctempid() const;
  void set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_npctempid() const;
  void _internal_set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.NPC_HatredList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > enemytempid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 npctempid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_ACCOUNT_SEC_PASSWD_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_ACCOUNT_SEC_PASSWD_SC) */ {
 public:
  MSG_ACCOUNT_SEC_PASSWD_SC();
  virtual ~MSG_ACCOUNT_SEC_PASSWD_SC();

  MSG_ACCOUNT_SEC_PASSWD_SC(const MSG_ACCOUNT_SEC_PASSWD_SC& from);
  MSG_ACCOUNT_SEC_PASSWD_SC(MSG_ACCOUNT_SEC_PASSWD_SC&& from) noexcept
    : MSG_ACCOUNT_SEC_PASSWD_SC() {
    *this = ::std::move(from);
  }

  inline MSG_ACCOUNT_SEC_PASSWD_SC& operator=(const MSG_ACCOUNT_SEC_PASSWD_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ACCOUNT_SEC_PASSWD_SC& operator=(MSG_ACCOUNT_SEC_PASSWD_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ACCOUNT_SEC_PASSWD_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ACCOUNT_SEC_PASSWD_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_ACCOUNT_SEC_PASSWD_SC*>(
               &_MSG_ACCOUNT_SEC_PASSWD_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(MSG_ACCOUNT_SEC_PASSWD_SC& a, MSG_ACCOUNT_SEC_PASSWD_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ACCOUNT_SEC_PASSWD_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ACCOUNT_SEC_PASSWD_SC* New() const final {
    return CreateMaybeMessage<MSG_ACCOUNT_SEC_PASSWD_SC>(nullptr);
  }

  MSG_ACCOUNT_SEC_PASSWD_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ACCOUNT_SEC_PASSWD_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ACCOUNT_SEC_PASSWD_SC& from);
  void MergeFrom(const MSG_ACCOUNT_SEC_PASSWD_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ACCOUNT_SEC_PASSWD_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_ACCOUNT_SEC_PASSWD_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecPasswdFieldNumber = 1,
    kIsonlineFieldNumber = 2,
  };
  // optional string sec_passwd = 1;
  bool has_sec_passwd() const;
  private:
  bool _internal_has_sec_passwd() const;
  public:
  void clear_sec_passwd();
  const std::string& sec_passwd() const;
  void set_sec_passwd(const std::string& value);
  void set_sec_passwd(std::string&& value);
  void set_sec_passwd(const char* value);
  void set_sec_passwd(const char* value, size_t size);
  std::string* mutable_sec_passwd();
  std::string* release_sec_passwd();
  void set_allocated_sec_passwd(std::string* sec_passwd);
  private:
  const std::string& _internal_sec_passwd() const;
  void _internal_set_sec_passwd(const std::string& value);
  std::string* _internal_mutable_sec_passwd();
  public:

  // optional bool isonline = 2;
  bool has_isonline() const;
  private:
  bool _internal_has_isonline() const;
  public:
  void clear_isonline();
  bool isonline() const;
  void set_isonline(bool value);
  private:
  bool _internal_isonline() const;
  void _internal_set_isonline(bool value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_ACCOUNT_SEC_PASSWD_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sec_passwd_;
  bool isonline_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_USER_REQ_SETPASSWD_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_USER_REQ_SETPASSWD_CS) */ {
 public:
  MSG_USER_REQ_SETPASSWD_CS();
  virtual ~MSG_USER_REQ_SETPASSWD_CS();

  MSG_USER_REQ_SETPASSWD_CS(const MSG_USER_REQ_SETPASSWD_CS& from);
  MSG_USER_REQ_SETPASSWD_CS(MSG_USER_REQ_SETPASSWD_CS&& from) noexcept
    : MSG_USER_REQ_SETPASSWD_CS() {
    *this = ::std::move(from);
  }

  inline MSG_USER_REQ_SETPASSWD_CS& operator=(const MSG_USER_REQ_SETPASSWD_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_USER_REQ_SETPASSWD_CS& operator=(MSG_USER_REQ_SETPASSWD_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_USER_REQ_SETPASSWD_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_USER_REQ_SETPASSWD_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_USER_REQ_SETPASSWD_CS*>(
               &_MSG_USER_REQ_SETPASSWD_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(MSG_USER_REQ_SETPASSWD_CS& a, MSG_USER_REQ_SETPASSWD_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_USER_REQ_SETPASSWD_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_USER_REQ_SETPASSWD_CS* New() const final {
    return CreateMaybeMessage<MSG_USER_REQ_SETPASSWD_CS>(nullptr);
  }

  MSG_USER_REQ_SETPASSWD_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_USER_REQ_SETPASSWD_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_USER_REQ_SETPASSWD_CS& from);
  void MergeFrom(const MSG_USER_REQ_SETPASSWD_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_USER_REQ_SETPASSWD_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_USER_REQ_SETPASSWD_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOldPasswdFieldNumber = 1,
    kNewPasswdFieldNumber = 2,
  };
  // optional string old_passwd = 1;
  bool has_old_passwd() const;
  private:
  bool _internal_has_old_passwd() const;
  public:
  void clear_old_passwd();
  const std::string& old_passwd() const;
  void set_old_passwd(const std::string& value);
  void set_old_passwd(std::string&& value);
  void set_old_passwd(const char* value);
  void set_old_passwd(const char* value, size_t size);
  std::string* mutable_old_passwd();
  std::string* release_old_passwd();
  void set_allocated_old_passwd(std::string* old_passwd);
  private:
  const std::string& _internal_old_passwd() const;
  void _internal_set_old_passwd(const std::string& value);
  std::string* _internal_mutable_old_passwd();
  public:

  // optional string new_passwd = 2;
  bool has_new_passwd() const;
  private:
  bool _internal_has_new_passwd() const;
  public:
  void clear_new_passwd();
  const std::string& new_passwd() const;
  void set_new_passwd(const std::string& value);
  void set_new_passwd(std::string&& value);
  void set_new_passwd(const char* value);
  void set_new_passwd(const char* value, size_t size);
  std::string* mutable_new_passwd();
  std::string* release_new_passwd();
  void set_allocated_new_passwd(std::string* new_passwd);
  private:
  const std::string& _internal_new_passwd() const;
  void _internal_set_new_passwd(const std::string& value);
  std::string* _internal_mutable_new_passwd();
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_USER_REQ_SETPASSWD_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr old_passwd_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr new_passwd_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_NEW_ROLE_CUTSCENE_SCS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_NEW_ROLE_CUTSCENE_SCS) */ {
 public:
  MSG_NEW_ROLE_CUTSCENE_SCS();
  virtual ~MSG_NEW_ROLE_CUTSCENE_SCS();

  MSG_NEW_ROLE_CUTSCENE_SCS(const MSG_NEW_ROLE_CUTSCENE_SCS& from);
  MSG_NEW_ROLE_CUTSCENE_SCS(MSG_NEW_ROLE_CUTSCENE_SCS&& from) noexcept
    : MSG_NEW_ROLE_CUTSCENE_SCS() {
    *this = ::std::move(from);
  }

  inline MSG_NEW_ROLE_CUTSCENE_SCS& operator=(const MSG_NEW_ROLE_CUTSCENE_SCS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_NEW_ROLE_CUTSCENE_SCS& operator=(MSG_NEW_ROLE_CUTSCENE_SCS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_NEW_ROLE_CUTSCENE_SCS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_NEW_ROLE_CUTSCENE_SCS* internal_default_instance() {
    return reinterpret_cast<const MSG_NEW_ROLE_CUTSCENE_SCS*>(
               &_MSG_NEW_ROLE_CUTSCENE_SCS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(MSG_NEW_ROLE_CUTSCENE_SCS& a, MSG_NEW_ROLE_CUTSCENE_SCS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_NEW_ROLE_CUTSCENE_SCS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_NEW_ROLE_CUTSCENE_SCS* New() const final {
    return CreateMaybeMessage<MSG_NEW_ROLE_CUTSCENE_SCS>(nullptr);
  }

  MSG_NEW_ROLE_CUTSCENE_SCS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_NEW_ROLE_CUTSCENE_SCS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_NEW_ROLE_CUTSCENE_SCS& from);
  void MergeFrom(const MSG_NEW_ROLE_CUTSCENE_SCS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_NEW_ROLE_CUTSCENE_SCS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_NEW_ROLE_CUTSCENE_SCS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_NEW_ROLE_CUTSCENE_SCS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_User_Drop_SCS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_User_Drop_SCS) */ {
 public:
  MSG_User_Drop_SCS();
  virtual ~MSG_User_Drop_SCS();

  MSG_User_Drop_SCS(const MSG_User_Drop_SCS& from);
  MSG_User_Drop_SCS(MSG_User_Drop_SCS&& from) noexcept
    : MSG_User_Drop_SCS() {
    *this = ::std::move(from);
  }

  inline MSG_User_Drop_SCS& operator=(const MSG_User_Drop_SCS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_User_Drop_SCS& operator=(MSG_User_Drop_SCS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_User_Drop_SCS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_User_Drop_SCS* internal_default_instance() {
    return reinterpret_cast<const MSG_User_Drop_SCS*>(
               &_MSG_User_Drop_SCS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(MSG_User_Drop_SCS& a, MSG_User_Drop_SCS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_User_Drop_SCS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_User_Drop_SCS* New() const final {
    return CreateMaybeMessage<MSG_User_Drop_SCS>(nullptr);
  }

  MSG_User_Drop_SCS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_User_Drop_SCS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_User_Drop_SCS& from);
  void MergeFrom(const MSG_User_Drop_SCS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_User_Drop_SCS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_User_Drop_SCS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharidFieldNumber = 1,
  };
  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_User_Drop_SCS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_START_CUTSCENE_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_START_CUTSCENE_SC) */ {
 public:
  MSG_START_CUTSCENE_SC();
  virtual ~MSG_START_CUTSCENE_SC();

  MSG_START_CUTSCENE_SC(const MSG_START_CUTSCENE_SC& from);
  MSG_START_CUTSCENE_SC(MSG_START_CUTSCENE_SC&& from) noexcept
    : MSG_START_CUTSCENE_SC() {
    *this = ::std::move(from);
  }

  inline MSG_START_CUTSCENE_SC& operator=(const MSG_START_CUTSCENE_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_START_CUTSCENE_SC& operator=(MSG_START_CUTSCENE_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_START_CUTSCENE_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_START_CUTSCENE_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_START_CUTSCENE_SC*>(
               &_MSG_START_CUTSCENE_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(MSG_START_CUTSCENE_SC& a, MSG_START_CUTSCENE_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_START_CUTSCENE_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_START_CUTSCENE_SC* New() const final {
    return CreateMaybeMessage<MSG_START_CUTSCENE_SC>(nullptr);
  }

  MSG_START_CUTSCENE_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_START_CUTSCENE_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_START_CUTSCENE_SC& from);
  void MergeFrom(const MSG_START_CUTSCENE_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_START_CUTSCENE_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_START_CUTSCENE_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnfinishFieldNumber = 2,
    kCutsceneidFieldNumber = 1,
  };
  // optional string onfinish = 2;
  bool has_onfinish() const;
  private:
  bool _internal_has_onfinish() const;
  public:
  void clear_onfinish();
  const std::string& onfinish() const;
  void set_onfinish(const std::string& value);
  void set_onfinish(std::string&& value);
  void set_onfinish(const char* value);
  void set_onfinish(const char* value, size_t size);
  std::string* mutable_onfinish();
  std::string* release_onfinish();
  void set_allocated_onfinish(std::string* onfinish);
  private:
  const std::string& _internal_onfinish() const;
  void _internal_set_onfinish(const std::string& value);
  std::string* _internal_mutable_onfinish();
  public:

  // optional uint32 cutsceneid = 1;
  bool has_cutsceneid() const;
  private:
  bool _internal_has_cutsceneid() const;
  public:
  void clear_cutsceneid();
  ::PROTOBUF_NAMESPACE_ID::uint32 cutsceneid() const;
  void set_cutsceneid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cutsceneid() const;
  void _internal_set_cutsceneid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_START_CUTSCENE_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr onfinish_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cutsceneid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_UserLoadingOk_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_UserLoadingOk_CS) */ {
 public:
  MSG_UserLoadingOk_CS();
  virtual ~MSG_UserLoadingOk_CS();

  MSG_UserLoadingOk_CS(const MSG_UserLoadingOk_CS& from);
  MSG_UserLoadingOk_CS(MSG_UserLoadingOk_CS&& from) noexcept
    : MSG_UserLoadingOk_CS() {
    *this = ::std::move(from);
  }

  inline MSG_UserLoadingOk_CS& operator=(const MSG_UserLoadingOk_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_UserLoadingOk_CS& operator=(MSG_UserLoadingOk_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_UserLoadingOk_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_UserLoadingOk_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_UserLoadingOk_CS*>(
               &_MSG_UserLoadingOk_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(MSG_UserLoadingOk_CS& a, MSG_UserLoadingOk_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_UserLoadingOk_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_UserLoadingOk_CS* New() const final {
    return CreateMaybeMessage<MSG_UserLoadingOk_CS>(nullptr);
  }

  MSG_UserLoadingOk_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_UserLoadingOk_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_UserLoadingOk_CS& from);
  void MergeFrom(const MSG_UserLoadingOk_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_UserLoadingOk_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_UserLoadingOk_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_UserLoadingOk_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqQueryBalance_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_ReqQueryBalance_CS) */ {
 public:
  MSG_ReqQueryBalance_CS();
  virtual ~MSG_ReqQueryBalance_CS();

  MSG_ReqQueryBalance_CS(const MSG_ReqQueryBalance_CS& from);
  MSG_ReqQueryBalance_CS(MSG_ReqQueryBalance_CS&& from) noexcept
    : MSG_ReqQueryBalance_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqQueryBalance_CS& operator=(const MSG_ReqQueryBalance_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqQueryBalance_CS& operator=(MSG_ReqQueryBalance_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqQueryBalance_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqQueryBalance_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqQueryBalance_CS*>(
               &_MSG_ReqQueryBalance_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(MSG_ReqQueryBalance_CS& a, MSG_ReqQueryBalance_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqQueryBalance_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqQueryBalance_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqQueryBalance_CS>(nullptr);
  }

  MSG_ReqQueryBalance_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqQueryBalance_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqQueryBalance_CS& from);
  void MergeFrom(const MSG_ReqQueryBalance_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqQueryBalance_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_ReqQueryBalance_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_ReqQueryBalance_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetQueryBalance_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_RetQueryBalance_SC) */ {
 public:
  MSG_RetQueryBalance_SC();
  virtual ~MSG_RetQueryBalance_SC();

  MSG_RetQueryBalance_SC(const MSG_RetQueryBalance_SC& from);
  MSG_RetQueryBalance_SC(MSG_RetQueryBalance_SC&& from) noexcept
    : MSG_RetQueryBalance_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetQueryBalance_SC& operator=(const MSG_RetQueryBalance_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetQueryBalance_SC& operator=(MSG_RetQueryBalance_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetQueryBalance_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetQueryBalance_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetQueryBalance_SC*>(
               &_MSG_RetQueryBalance_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(MSG_RetQueryBalance_SC& a, MSG_RetQueryBalance_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetQueryBalance_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetQueryBalance_SC* New() const final {
    return CreateMaybeMessage<MSG_RetQueryBalance_SC>(nullptr);
  }

  MSG_RetQueryBalance_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetQueryBalance_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetQueryBalance_SC& from);
  void MergeFrom(const MSG_RetQueryBalance_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetQueryBalance_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_RetQueryBalance_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBalanceFieldNumber = 2,
    kBonusFieldNumber = 3,
    kHadfilledFieldNumber = 4,
    kPoint2ToneFieldNumber = 5,
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 balance = 2;
  bool has_balance() const;
  private:
  bool _internal_has_balance() const;
  public:
  void clear_balance();
  ::PROTOBUF_NAMESPACE_ID::uint32 balance() const;
  void set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_balance() const;
  void _internal_set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bonus = 3;
  bool has_bonus() const;
  private:
  bool _internal_has_bonus() const;
  public:
  void clear_bonus();
  ::PROTOBUF_NAMESPACE_ID::uint32 bonus() const;
  void set_bonus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bonus() const;
  void _internal_set_bonus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hadfilled = 4;
  bool has_hadfilled() const;
  private:
  bool _internal_has_hadfilled() const;
  public:
  void clear_hadfilled();
  ::PROTOBUF_NAMESPACE_ID::uint32 hadfilled() const;
  void set_hadfilled(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hadfilled() const;
  void _internal_set_hadfilled(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 point2tone = 5;
  bool has_point2tone() const;
  private:
  bool _internal_has_point2tone() const;
  public:
  void clear_point2tone();
  ::PROTOBUF_NAMESPACE_ID::uint32 point2tone() const;
  void set_point2tone(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_point2tone() const;
  void _internal_set_point2tone(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .msg.ERechargeReturnCode retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::msg::ERechargeReturnCode retcode() const;
  void set_retcode(::msg::ERechargeReturnCode value);
  private:
  ::msg::ERechargeReturnCode _internal_retcode() const;
  void _internal_set_retcode(::msg::ERechargeReturnCode value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_RetQueryBalance_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bonus_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hadfilled_;
  ::PROTOBUF_NAMESPACE_ID::uint32 point2tone_;
  int retcode_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqRecharge_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_ReqRecharge_CS) */ {
 public:
  MSG_ReqRecharge_CS();
  virtual ~MSG_ReqRecharge_CS();

  MSG_ReqRecharge_CS(const MSG_ReqRecharge_CS& from);
  MSG_ReqRecharge_CS(MSG_ReqRecharge_CS&& from) noexcept
    : MSG_ReqRecharge_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqRecharge_CS& operator=(const MSG_ReqRecharge_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqRecharge_CS& operator=(MSG_ReqRecharge_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqRecharge_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqRecharge_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqRecharge_CS*>(
               &_MSG_ReqRecharge_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(MSG_ReqRecharge_CS& a, MSG_ReqRecharge_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqRecharge_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqRecharge_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqRecharge_CS>(nullptr);
  }

  MSG_ReqRecharge_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqRecharge_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqRecharge_CS& from);
  void MergeFrom(const MSG_ReqRecharge_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqRecharge_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_ReqRecharge_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // optional uint32 point = 1;
  bool has_point() const;
  private:
  bool _internal_has_point() const;
  public:
  void clear_point();
  ::PROTOBUF_NAMESPACE_ID::uint32 point() const;
  void set_point(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_point() const;
  void _internal_set_point(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 type = 2;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_ReqRecharge_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 point_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRecharge_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_RetRecharge_SC) */ {
 public:
  MSG_RetRecharge_SC();
  virtual ~MSG_RetRecharge_SC();

  MSG_RetRecharge_SC(const MSG_RetRecharge_SC& from);
  MSG_RetRecharge_SC(MSG_RetRecharge_SC&& from) noexcept
    : MSG_RetRecharge_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRecharge_SC& operator=(const MSG_RetRecharge_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRecharge_SC& operator=(MSG_RetRecharge_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRecharge_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRecharge_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRecharge_SC*>(
               &_MSG_RetRecharge_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(MSG_RetRecharge_SC& a, MSG_RetRecharge_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRecharge_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRecharge_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRecharge_SC>(nullptr);
  }

  MSG_RetRecharge_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRecharge_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRecharge_SC& from);
  void MergeFrom(const MSG_RetRecharge_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRecharge_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_RetRecharge_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointFieldNumber = 2,
    kBalanceFieldNumber = 3,
    kBonusFieldNumber = 4,
    kHadfilledFieldNumber = 5,
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 point = 2;
  bool has_point() const;
  private:
  bool _internal_has_point() const;
  public:
  void clear_point();
  ::PROTOBUF_NAMESPACE_ID::uint32 point() const;
  void set_point(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_point() const;
  void _internal_set_point(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 balance = 3;
  bool has_balance() const;
  private:
  bool _internal_has_balance() const;
  public:
  void clear_balance();
  ::PROTOBUF_NAMESPACE_ID::uint32 balance() const;
  void set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_balance() const;
  void _internal_set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bonus = 4;
  bool has_bonus() const;
  private:
  bool _internal_has_bonus() const;
  public:
  void clear_bonus();
  ::PROTOBUF_NAMESPACE_ID::uint32 bonus() const;
  void set_bonus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bonus() const;
  void _internal_set_bonus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hadfilled = 5;
  bool has_hadfilled() const;
  private:
  bool _internal_has_hadfilled() const;
  public:
  void clear_hadfilled();
  ::PROTOBUF_NAMESPACE_ID::uint32 hadfilled() const;
  void set_hadfilled(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hadfilled() const;
  void _internal_set_hadfilled(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .msg.ERechargeReturnCode retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::msg::ERechargeReturnCode retcode() const;
  void set_retcode(::msg::ERechargeReturnCode value);
  private:
  ::msg::ERechargeReturnCode _internal_retcode() const;
  void _internal_set_retcode(::msg::ERechargeReturnCode value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_RetRecharge_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 point_;
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bonus_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hadfilled_;
  int retcode_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_SetChooseTarget_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_SetChooseTarget_CS) */ {
 public:
  MSG_SetChooseTarget_CS();
  virtual ~MSG_SetChooseTarget_CS();

  MSG_SetChooseTarget_CS(const MSG_SetChooseTarget_CS& from);
  MSG_SetChooseTarget_CS(MSG_SetChooseTarget_CS&& from) noexcept
    : MSG_SetChooseTarget_CS() {
    *this = ::std::move(from);
  }

  inline MSG_SetChooseTarget_CS& operator=(const MSG_SetChooseTarget_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_SetChooseTarget_CS& operator=(MSG_SetChooseTarget_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_SetChooseTarget_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_SetChooseTarget_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_SetChooseTarget_CS*>(
               &_MSG_SetChooseTarget_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(MSG_SetChooseTarget_CS& a, MSG_SetChooseTarget_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_SetChooseTarget_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_SetChooseTarget_CS* New() const final {
    return CreateMaybeMessage<MSG_SetChooseTarget_CS>(nullptr);
  }

  MSG_SetChooseTarget_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_SetChooseTarget_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_SetChooseTarget_CS& from);
  void MergeFrom(const MSG_SetChooseTarget_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_SetChooseTarget_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_SetChooseTarget_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharidFieldNumber = 1,
    kChoosetypeFieldNumber = 2,
    kMapdatatypeFieldNumber = 3,
  };
  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional .msg.ChooseTargetType choosetype = 2;
  bool has_choosetype() const;
  private:
  bool _internal_has_choosetype() const;
  public:
  void clear_choosetype();
  ::msg::ChooseTargetType choosetype() const;
  void set_choosetype(::msg::ChooseTargetType value);
  private:
  ::msg::ChooseTargetType _internal_choosetype() const;
  void _internal_set_choosetype(::msg::ChooseTargetType value);
  public:

  // required .msg.MapDataType mapdatatype = 3;
  bool has_mapdatatype() const;
  private:
  bool _internal_has_mapdatatype() const;
  public:
  void clear_mapdatatype();
  ::msg::MapDataType mapdatatype() const;
  void set_mapdatatype(::msg::MapDataType value);
  private:
  ::msg::MapDataType _internal_mapdatatype() const;
  void _internal_set_mapdatatype(::msg::MapDataType value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_SetChooseTarget_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  int choosetype_;
  int mapdatatype_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_AttackTargetChange_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_AttackTargetChange_SC) */ {
 public:
  MSG_AttackTargetChange_SC();
  virtual ~MSG_AttackTargetChange_SC();

  MSG_AttackTargetChange_SC(const MSG_AttackTargetChange_SC& from);
  MSG_AttackTargetChange_SC(MSG_AttackTargetChange_SC&& from) noexcept
    : MSG_AttackTargetChange_SC() {
    *this = ::std::move(from);
  }

  inline MSG_AttackTargetChange_SC& operator=(const MSG_AttackTargetChange_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_AttackTargetChange_SC& operator=(MSG_AttackTargetChange_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_AttackTargetChange_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_AttackTargetChange_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_AttackTargetChange_SC*>(
               &_MSG_AttackTargetChange_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(MSG_AttackTargetChange_SC& a, MSG_AttackTargetChange_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_AttackTargetChange_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_AttackTargetChange_SC* New() const final {
    return CreateMaybeMessage<MSG_AttackTargetChange_SC>(nullptr);
  }

  MSG_AttackTargetChange_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_AttackTargetChange_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_AttackTargetChange_SC& from);
  void MergeFrom(const MSG_AttackTargetChange_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_AttackTargetChange_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_AttackTargetChange_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kCharidFieldNumber = 1,
    kLevelFieldNumber = 3,
    kHPFieldNumber = 4,
    kRelationFieldNumber = 5,
    kChoosetypeFieldNumber = 6,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint64 charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  ::PROTOBUF_NAMESPACE_ID::uint64 charid() const;
  void set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_charid() const;
  void _internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 level = 3;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 HP = 4;
  bool has_hp() const;
  private:
  bool _internal_has_hp() const;
  public:
  void clear_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 hp() const;
  void set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hp() const;
  void _internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 relation = 5;
  bool has_relation() const;
  private:
  bool _internal_has_relation() const;
  public:
  void clear_relation();
  ::PROTOBUF_NAMESPACE_ID::uint32 relation() const;
  void set_relation(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_relation() const;
  void _internal_set_relation(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .msg.ChooseTargetType choosetype = 6;
  bool has_choosetype() const;
  private:
  bool _internal_has_choosetype() const;
  public:
  void clear_choosetype();
  ::msg::ChooseTargetType choosetype() const;
  void set_choosetype(::msg::ChooseTargetType value);
  private:
  ::msg::ChooseTargetType _internal_choosetype() const;
  void _internal_set_choosetype(::msg::ChooseTargetType value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_AttackTargetChange_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 relation_;
  int choosetype_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_NotifyAccountReuse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_NotifyAccountReuse) */ {
 public:
  MSG_NotifyAccountReuse();
  virtual ~MSG_NotifyAccountReuse();

  MSG_NotifyAccountReuse(const MSG_NotifyAccountReuse& from);
  MSG_NotifyAccountReuse(MSG_NotifyAccountReuse&& from) noexcept
    : MSG_NotifyAccountReuse() {
    *this = ::std::move(from);
  }

  inline MSG_NotifyAccountReuse& operator=(const MSG_NotifyAccountReuse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_NotifyAccountReuse& operator=(MSG_NotifyAccountReuse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_NotifyAccountReuse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_NotifyAccountReuse* internal_default_instance() {
    return reinterpret_cast<const MSG_NotifyAccountReuse*>(
               &_MSG_NotifyAccountReuse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(MSG_NotifyAccountReuse& a, MSG_NotifyAccountReuse& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_NotifyAccountReuse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_NotifyAccountReuse* New() const final {
    return CreateMaybeMessage<MSG_NotifyAccountReuse>(nullptr);
  }

  MSG_NotifyAccountReuse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_NotifyAccountReuse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_NotifyAccountReuse& from);
  void MergeFrom(const MSG_NotifyAccountReuse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_NotifyAccountReuse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_NotifyAccountReuse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg.MSG_NotifyAccountReuse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Notify_SceneLoaded_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Notify_SceneLoaded_CS) */ {
 public:
  MSG_Notify_SceneLoaded_CS();
  virtual ~MSG_Notify_SceneLoaded_CS();

  MSG_Notify_SceneLoaded_CS(const MSG_Notify_SceneLoaded_CS& from);
  MSG_Notify_SceneLoaded_CS(MSG_Notify_SceneLoaded_CS&& from) noexcept
    : MSG_Notify_SceneLoaded_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Notify_SceneLoaded_CS& operator=(const MSG_Notify_SceneLoaded_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Notify_SceneLoaded_CS& operator=(MSG_Notify_SceneLoaded_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Notify_SceneLoaded_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Notify_SceneLoaded_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Notify_SceneLoaded_CS*>(
               &_MSG_Notify_SceneLoaded_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(MSG_Notify_SceneLoaded_CS& a, MSG_Notify_SceneLoaded_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Notify_SceneLoaded_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Notify_SceneLoaded_CS* New() const final {
    return CreateMaybeMessage<MSG_Notify_SceneLoaded_CS>(nullptr);
  }

  MSG_Notify_SceneLoaded_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Notify_SceneLoaded_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Notify_SceneLoaded_CS& from);
  void MergeFrom(const MSG_Notify_SceneLoaded_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Notify_SceneLoaded_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Notify_SceneLoaded_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneidFieldNumber = 1,
  };
  // optional uint64 sceneid = 1;
  bool has_sceneid() const;
  private:
  bool _internal_has_sceneid() const;
  public:
  void clear_sceneid();
  ::PROTOBUF_NAMESPACE_ID::uint64 sceneid() const;
  void set_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sceneid() const;
  void _internal_set_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Notify_SceneLoaded_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sceneid_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MSG_Upload_Crash_Info :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.MSG_Upload_Crash_Info) */ {
 public:
  MSG_Upload_Crash_Info();
  virtual ~MSG_Upload_Crash_Info();

  MSG_Upload_Crash_Info(const MSG_Upload_Crash_Info& from);
  MSG_Upload_Crash_Info(MSG_Upload_Crash_Info&& from) noexcept
    : MSG_Upload_Crash_Info() {
    *this = ::std::move(from);
  }

  inline MSG_Upload_Crash_Info& operator=(const MSG_Upload_Crash_Info& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Upload_Crash_Info& operator=(MSG_Upload_Crash_Info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Upload_Crash_Info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Upload_Crash_Info* internal_default_instance() {
    return reinterpret_cast<const MSG_Upload_Crash_Info*>(
               &_MSG_Upload_Crash_Info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(MSG_Upload_Crash_Info& a, MSG_Upload_Crash_Info& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Upload_Crash_Info* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Upload_Crash_Info* New() const final {
    return CreateMaybeMessage<MSG_Upload_Crash_Info>(nullptr);
  }

  MSG_Upload_Crash_Info* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Upload_Crash_Info>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Upload_Crash_Info& from);
  void MergeFrom(const MSG_Upload_Crash_Info& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Upload_Crash_Info* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.MSG_Upload_Crash_Info";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_2eproto);
    return ::descriptor_table_message_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCrashnumFieldNumber = 1,
  };
  // optional uint32 crashnum = 1;
  bool has_crashnum() const;
  private:
  bool _internal_has_crashnum() const;
  public:
  void clear_crashnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 crashnum() const;
  void set_crashnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_crashnum() const;
  void _internal_set_crashnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.MSG_Upload_Crash_Info)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 crashnum_;
  friend struct ::TableStruct_message_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EntryIDType

// optional uint64 id = 1;
inline bool EntryIDType::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool EntryIDType::has_id() const {
  return _internal_has_id();
}
inline void EntryIDType::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EntryIDType::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 EntryIDType::id() const {
  // @@protoc_insertion_point(field_get:msg.EntryIDType.id)
  return _internal_id();
}
inline void EntryIDType::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void EntryIDType::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:msg.EntryIDType.id)
}

// optional uint32 type = 2;
inline bool EntryIDType::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool EntryIDType::has_type() const {
  return _internal_has_type();
}
inline void EntryIDType::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EntryIDType::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EntryIDType::type() const {
  // @@protoc_insertion_point(field_get:msg.EntryIDType.type)
  return _internal_type();
}
inline void EntryIDType::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void EntryIDType::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:msg.EntryIDType.type)
}

// -------------------------------------------------------------------

// CharacterBaseData

// optional uint64 exp = 2;
inline bool CharacterBaseData::_internal_has_exp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CharacterBaseData::has_exp() const {
  return _internal_has_exp();
}
inline void CharacterBaseData::clear_exp() {
  exp_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharacterBaseData::_internal_exp() const {
  return exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharacterBaseData::exp() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.exp)
  return _internal_exp();
}
inline void CharacterBaseData::_internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  exp_ = value;
}
inline void CharacterBaseData::set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.exp)
}

// optional uint32 money = 3;
inline bool CharacterBaseData::_internal_has_money() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CharacterBaseData::has_money() const {
  return _internal_has_money();
}
inline void CharacterBaseData::clear_money() {
  money_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_money() const {
  return money_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::money() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.money)
  return _internal_money();
}
inline void CharacterBaseData::_internal_set_money(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  money_ = value;
}
inline void CharacterBaseData::set_money(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_money(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.money)
}

// optional uint32 welpoint = 4;
inline bool CharacterBaseData::_internal_has_welpoint() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CharacterBaseData::has_welpoint() const {
  return _internal_has_welpoint();
}
inline void CharacterBaseData::clear_welpoint() {
  welpoint_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_welpoint() const {
  return welpoint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::welpoint() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.welpoint)
  return _internal_welpoint();
}
inline void CharacterBaseData::_internal_set_welpoint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  welpoint_ = value;
}
inline void CharacterBaseData::set_welpoint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_welpoint(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.welpoint)
}

// optional uint32 tilizhi = 5;
inline bool CharacterBaseData::_internal_has_tilizhi() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CharacterBaseData::has_tilizhi() const {
  return _internal_has_tilizhi();
}
inline void CharacterBaseData::clear_tilizhi() {
  tilizhi_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_tilizhi() const {
  return tilizhi_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::tilizhi() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.tilizhi)
  return _internal_tilizhi();
}
inline void CharacterBaseData::_internal_set_tilizhi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  tilizhi_ = value;
}
inline void CharacterBaseData::set_tilizhi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tilizhi(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.tilizhi)
}

// optional uint32 type = 6;
inline bool CharacterBaseData::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CharacterBaseData::has_type() const {
  return _internal_has_type();
}
inline void CharacterBaseData::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::type() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.type)
  return _internal_type();
}
inline void CharacterBaseData::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  type_ = value;
}
inline void CharacterBaseData::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.type)
}

// optional uint32 famelevel = 7;
inline bool CharacterBaseData::_internal_has_famelevel() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CharacterBaseData::has_famelevel() const {
  return _internal_has_famelevel();
}
inline void CharacterBaseData::clear_famelevel() {
  famelevel_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_famelevel() const {
  return famelevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::famelevel() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.famelevel)
  return _internal_famelevel();
}
inline void CharacterBaseData::_internal_set_famelevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  famelevel_ = value;
}
inline void CharacterBaseData::set_famelevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_famelevel(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.famelevel)
}

// optional uint32 position = 8;
inline bool CharacterBaseData::_internal_has_position() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CharacterBaseData::has_position() const {
  return _internal_has_position();
}
inline void CharacterBaseData::clear_position() {
  position_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_position() const {
  return position_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::position() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.position)
  return _internal_position();
}
inline void CharacterBaseData::_internal_set_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  position_ = value;
}
inline void CharacterBaseData::set_position(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_position(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.position)
}

// optional uint32 viplevel = 9;
inline bool CharacterBaseData::_internal_has_viplevel() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CharacterBaseData::has_viplevel() const {
  return _internal_has_viplevel();
}
inline void CharacterBaseData::clear_viplevel() {
  viplevel_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_viplevel() const {
  return viplevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::viplevel() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.viplevel)
  return _internal_viplevel();
}
inline void CharacterBaseData::_internal_set_viplevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  viplevel_ = value;
}
inline void CharacterBaseData::set_viplevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_viplevel(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.viplevel)
}

// optional uint32 port = 10;
inline bool CharacterBaseData::_internal_has_port() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CharacterBaseData::has_port() const {
  return _internal_has_port();
}
inline void CharacterBaseData::clear_port() {
  port_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_port() const {
  return port_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::port() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.port)
  return _internal_port();
}
inline void CharacterBaseData::_internal_set_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  port_ = value;
}
inline void CharacterBaseData::set_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.port)
}

// optional uint32 laststage = 11;
inline bool CharacterBaseData::_internal_has_laststage() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CharacterBaseData::has_laststage() const {
  return _internal_has_laststage();
}
inline void CharacterBaseData::clear_laststage() {
  laststage_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_laststage() const {
  return laststage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::laststage() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.laststage)
  return _internal_laststage();
}
inline void CharacterBaseData::_internal_set_laststage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  laststage_ = value;
}
inline void CharacterBaseData::set_laststage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_laststage(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.laststage)
}

// optional uint64 nextexp = 12;
inline bool CharacterBaseData::_internal_has_nextexp() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CharacterBaseData::has_nextexp() const {
  return _internal_has_nextexp();
}
inline void CharacterBaseData::clear_nextexp() {
  nextexp_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharacterBaseData::_internal_nextexp() const {
  return nextexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharacterBaseData::nextexp() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.nextexp)
  return _internal_nextexp();
}
inline void CharacterBaseData::_internal_set_nextexp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000400u;
  nextexp_ = value;
}
inline void CharacterBaseData::set_nextexp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_nextexp(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.nextexp)
}

// optional uint32 pkmode = 13;
inline bool CharacterBaseData::_internal_has_pkmode() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_pkmode() const {
  return _internal_has_pkmode();
}
inline void CharacterBaseData::clear_pkmode() {
  pkmode_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_pkmode() const {
  return pkmode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::pkmode() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.pkmode)
  return _internal_pkmode();
}
inline void CharacterBaseData::_internal_set_pkmode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  pkmode_ = value;
}
inline void CharacterBaseData::set_pkmode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pkmode(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.pkmode)
}

// optional uint32 level = 14;
inline bool CharacterBaseData::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_level() const {
  return _internal_has_level();
}
inline void CharacterBaseData::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::level() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.level)
  return _internal_level();
}
inline void CharacterBaseData::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  level_ = value;
}
inline void CharacterBaseData::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.level)
}

// optional uint32 stone = 15;
inline bool CharacterBaseData::_internal_has_stone() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_stone() const {
  return _internal_has_stone();
}
inline void CharacterBaseData::clear_stone() {
  stone_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_stone() const {
  return stone_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::stone() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.stone)
  return _internal_stone();
}
inline void CharacterBaseData::_internal_set_stone(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  stone_ = value;
}
inline void CharacterBaseData::set_stone(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stone(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.stone)
}

// optional uint32 edupoint = 16;
inline bool CharacterBaseData::_internal_has_edupoint() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_edupoint() const {
  return _internal_has_edupoint();
}
inline void CharacterBaseData::clear_edupoint() {
  edupoint_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_edupoint() const {
  return edupoint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::edupoint() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.edupoint)
  return _internal_edupoint();
}
inline void CharacterBaseData::_internal_set_edupoint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  edupoint_ = value;
}
inline void CharacterBaseData::set_edupoint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_edupoint(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.edupoint)
}

// optional uint32 cooppoint = 17;
inline bool CharacterBaseData::_internal_has_cooppoint() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_cooppoint() const {
  return _internal_has_cooppoint();
}
inline void CharacterBaseData::clear_cooppoint() {
  cooppoint_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_cooppoint() const {
  return cooppoint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::cooppoint() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.cooppoint)
  return _internal_cooppoint();
}
inline void CharacterBaseData::_internal_set_cooppoint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  cooppoint_ = value;
}
inline void CharacterBaseData::set_cooppoint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cooppoint(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.cooppoint)
}

// optional uint32 bluecrystal = 18;
inline bool CharacterBaseData::_internal_has_bluecrystal() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_bluecrystal() const {
  return _internal_has_bluecrystal();
}
inline void CharacterBaseData::clear_bluecrystal() {
  bluecrystal_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_bluecrystal() const {
  return bluecrystal_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::bluecrystal() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.bluecrystal)
  return _internal_bluecrystal();
}
inline void CharacterBaseData::_internal_set_bluecrystal(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  bluecrystal_ = value;
}
inline void CharacterBaseData::set_bluecrystal(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bluecrystal(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.bluecrystal)
}

// optional uint32 bluecrystalincnum = 19;
inline bool CharacterBaseData::_internal_has_bluecrystalincnum() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_bluecrystalincnum() const {
  return _internal_has_bluecrystalincnum();
}
inline void CharacterBaseData::clear_bluecrystalincnum() {
  bluecrystalincnum_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_bluecrystalincnum() const {
  return bluecrystalincnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::bluecrystalincnum() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.bluecrystalincnum)
  return _internal_bluecrystalincnum();
}
inline void CharacterBaseData::_internal_set_bluecrystalincnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  bluecrystalincnum_ = value;
}
inline void CharacterBaseData::set_bluecrystalincnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bluecrystalincnum(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.bluecrystalincnum)
}

// optional uint32 purplecrystal = 20;
inline bool CharacterBaseData::_internal_has_purplecrystal() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_purplecrystal() const {
  return _internal_has_purplecrystal();
}
inline void CharacterBaseData::clear_purplecrystal() {
  purplecrystal_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_purplecrystal() const {
  return purplecrystal_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::purplecrystal() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.purplecrystal)
  return _internal_purplecrystal();
}
inline void CharacterBaseData::_internal_set_purplecrystal(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  purplecrystal_ = value;
}
inline void CharacterBaseData::set_purplecrystal(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_purplecrystal(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.purplecrystal)
}

// optional uint32 purplecrystalincnum = 21;
inline bool CharacterBaseData::_internal_has_purplecrystalincnum() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_purplecrystalincnum() const {
  return _internal_has_purplecrystalincnum();
}
inline void CharacterBaseData::clear_purplecrystalincnum() {
  purplecrystalincnum_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_purplecrystalincnum() const {
  return purplecrystalincnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::purplecrystalincnum() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.purplecrystalincnum)
  return _internal_purplecrystalincnum();
}
inline void CharacterBaseData::_internal_set_purplecrystalincnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  purplecrystalincnum_ = value;
}
inline void CharacterBaseData::set_purplecrystalincnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_purplecrystalincnum(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.purplecrystalincnum)
}

// optional uint32 vigourpoint = 22;
inline bool CharacterBaseData::_internal_has_vigourpoint() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_vigourpoint() const {
  return _internal_has_vigourpoint();
}
inline void CharacterBaseData::clear_vigourpoint() {
  vigourpoint_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_vigourpoint() const {
  return vigourpoint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::vigourpoint() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.vigourpoint)
  return _internal_vigourpoint();
}
inline void CharacterBaseData::_internal_set_vigourpoint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  vigourpoint_ = value;
}
inline void CharacterBaseData::set_vigourpoint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_vigourpoint(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.vigourpoint)
}

// optional uint32 doublepoint = 23;
inline bool CharacterBaseData::_internal_has_doublepoint() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_doublepoint() const {
  return _internal_has_doublepoint();
}
inline void CharacterBaseData::clear_doublepoint() {
  doublepoint_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_doublepoint() const {
  return doublepoint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::doublepoint() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.doublepoint)
  return _internal_doublepoint();
}
inline void CharacterBaseData::_internal_set_doublepoint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  doublepoint_ = value;
}
inline void CharacterBaseData::set_doublepoint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_doublepoint(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.doublepoint)
}

// optional uint32 familyatt = 24;
inline bool CharacterBaseData::_internal_has_familyatt() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool CharacterBaseData::has_familyatt() const {
  return _internal_has_familyatt();
}
inline void CharacterBaseData::clear_familyatt() {
  familyatt_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::_internal_familyatt() const {
  return familyatt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterBaseData::familyatt() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.familyatt)
  return _internal_familyatt();
}
inline void CharacterBaseData::_internal_set_familyatt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  familyatt_ = value;
}
inline void CharacterBaseData::set_familyatt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_familyatt(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.familyatt)
}

// optional string herothisid = 25;
inline bool CharacterBaseData::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CharacterBaseData::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void CharacterBaseData::clear_herothisid() {
  herothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CharacterBaseData::herothisid() const {
  // @@protoc_insertion_point(field_get:msg.CharacterBaseData.herothisid)
  return _internal_herothisid();
}
inline void CharacterBaseData::set_herothisid(const std::string& value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:msg.CharacterBaseData.herothisid)
}
inline std::string* CharacterBaseData::mutable_herothisid() {
  // @@protoc_insertion_point(field_mutable:msg.CharacterBaseData.herothisid)
  return _internal_mutable_herothisid();
}
inline const std::string& CharacterBaseData::_internal_herothisid() const {
  return herothisid_.GetNoArena();
}
inline void CharacterBaseData::_internal_set_herothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CharacterBaseData::set_herothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.CharacterBaseData.herothisid)
}
inline void CharacterBaseData::set_herothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.CharacterBaseData.herothisid)
}
inline void CharacterBaseData::set_herothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.CharacterBaseData.herothisid)
}
inline std::string* CharacterBaseData::_internal_mutable_herothisid() {
  _has_bits_[0] |= 0x00000001u;
  return herothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CharacterBaseData::release_herothisid() {
  // @@protoc_insertion_point(field_release:msg.CharacterBaseData.herothisid)
  if (!_internal_has_herothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return herothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CharacterBaseData::set_allocated_herothisid(std::string* herothisid) {
  if (herothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herothisid);
  // @@protoc_insertion_point(field_set_allocated:msg.CharacterBaseData.herothisid)
}

// -------------------------------------------------------------------

// AttributeData

// optional uint32 hp = 1;
inline bool AttributeData::_internal_has_hp() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AttributeData::has_hp() const {
  return _internal_has_hp();
}
inline void AttributeData::clear_hp() {
  hp_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_hp() const {
  return hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::hp() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.hp)
  return _internal_hp();
}
inline void AttributeData::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hp_ = value;
}
inline void AttributeData::set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.hp)
}

// optional uint32 maxhp = 2;
inline bool AttributeData::_internal_has_maxhp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AttributeData::has_maxhp() const {
  return _internal_has_maxhp();
}
inline void AttributeData::clear_maxhp() {
  maxhp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_maxhp() const {
  return maxhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::maxhp() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.maxhp)
  return _internal_maxhp();
}
inline void AttributeData::_internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  maxhp_ = value;
}
inline void AttributeData::set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxhp(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.maxhp)
}

// optional uint32 str = 3;
inline bool AttributeData::_internal_has_str() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool AttributeData::has_str() const {
  return _internal_has_str();
}
inline void AttributeData::clear_str() {
  str_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_str() const {
  return str_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::str() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.str)
  return _internal_str();
}
inline void AttributeData::_internal_set_str(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  str_ = value;
}
inline void AttributeData::set_str(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_str(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.str)
}

// optional uint32 dex = 4;
inline bool AttributeData::_internal_has_dex() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool AttributeData::has_dex() const {
  return _internal_has_dex();
}
inline void AttributeData::clear_dex() {
  dex_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_dex() const {
  return dex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::dex() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.dex)
  return _internal_dex();
}
inline void AttributeData::_internal_set_dex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  dex_ = value;
}
inline void AttributeData::set_dex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dex(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.dex)
}

// optional uint32 intel = 5;
inline bool AttributeData::_internal_has_intel() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool AttributeData::has_intel() const {
  return _internal_has_intel();
}
inline void AttributeData::clear_intel() {
  intel_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_intel() const {
  return intel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::intel() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.intel)
  return _internal_intel();
}
inline void AttributeData::_internal_set_intel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  intel_ = value;
}
inline void AttributeData::set_intel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_intel(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.intel)
}

// optional uint32 phy = 6;
inline bool AttributeData::_internal_has_phy() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool AttributeData::has_phy() const {
  return _internal_has_phy();
}
inline void AttributeData::clear_phy() {
  phy_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_phy() const {
  return phy_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::phy() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.phy)
  return _internal_phy();
}
inline void AttributeData::_internal_set_phy(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  phy_ = value;
}
inline void AttributeData::set_phy(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_phy(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.phy)
}

// optional uint32 matt = 7;
inline bool AttributeData::_internal_has_matt() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool AttributeData::has_matt() const {
  return _internal_has_matt();
}
inline void AttributeData::clear_matt() {
  matt_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_matt() const {
  return matt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::matt() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.matt)
  return _internal_matt();
}
inline void AttributeData::_internal_set_matt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  matt_ = value;
}
inline void AttributeData::set_matt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matt(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.matt)
}

// optional uint32 patt = 8;
inline bool AttributeData::_internal_has_patt() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool AttributeData::has_patt() const {
  return _internal_has_patt();
}
inline void AttributeData::clear_patt() {
  patt_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_patt() const {
  return patt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::patt() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.patt)
  return _internal_patt();
}
inline void AttributeData::_internal_set_patt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  patt_ = value;
}
inline void AttributeData::set_patt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_patt(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.patt)
}

// optional uint32 mdef = 9;
inline bool AttributeData::_internal_has_mdef() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool AttributeData::has_mdef() const {
  return _internal_has_mdef();
}
inline void AttributeData::clear_mdef() {
  mdef_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_mdef() const {
  return mdef_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::mdef() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.mdef)
  return _internal_mdef();
}
inline void AttributeData::_internal_set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  mdef_ = value;
}
inline void AttributeData::set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mdef(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.mdef)
}

// optional uint32 pdef = 10;
inline bool AttributeData::_internal_has_pdef() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool AttributeData::has_pdef() const {
  return _internal_has_pdef();
}
inline void AttributeData::clear_pdef() {
  pdef_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_pdef() const {
  return pdef_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::pdef() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.pdef)
  return _internal_pdef();
}
inline void AttributeData::_internal_set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  pdef_ = value;
}
inline void AttributeData::set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdef(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.pdef)
}

// optional uint32 bang = 11;
inline bool AttributeData::_internal_has_bang() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool AttributeData::has_bang() const {
  return _internal_has_bang();
}
inline void AttributeData::clear_bang() {
  bang_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_bang() const {
  return bang_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::bang() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.bang)
  return _internal_bang();
}
inline void AttributeData::_internal_set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  bang_ = value;
}
inline void AttributeData::set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bang(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.bang)
}

// optional uint32 bangextradamage = 12;
inline bool AttributeData::_internal_has_bangextradamage() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool AttributeData::has_bangextradamage() const {
  return _internal_has_bangextradamage();
}
inline void AttributeData::clear_bangextradamage() {
  bangextradamage_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_bangextradamage() const {
  return bangextradamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::bangextradamage() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.bangextradamage)
  return _internal_bangextradamage();
}
inline void AttributeData::_internal_set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  bangextradamage_ = value;
}
inline void AttributeData::set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bangextradamage(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.bangextradamage)
}

// optional uint32 toughness = 13;
inline bool AttributeData::_internal_has_toughness() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool AttributeData::has_toughness() const {
  return _internal_has_toughness();
}
inline void AttributeData::clear_toughness() {
  toughness_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_toughness() const {
  return toughness_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::toughness() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.toughness)
  return _internal_toughness();
}
inline void AttributeData::_internal_set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  toughness_ = value;
}
inline void AttributeData::set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_toughness(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.toughness)
}

// optional uint32 toughnessreducedamage = 14;
inline bool AttributeData::_internal_has_toughnessreducedamage() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool AttributeData::has_toughnessreducedamage() const {
  return _internal_has_toughnessreducedamage();
}
inline void AttributeData::clear_toughnessreducedamage() {
  toughnessreducedamage_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_toughnessreducedamage() const {
  return toughnessreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::toughnessreducedamage() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.toughnessreducedamage)
  return _internal_toughnessreducedamage();
}
inline void AttributeData::_internal_set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  toughnessreducedamage_ = value;
}
inline void AttributeData::set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_toughnessreducedamage(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.toughnessreducedamage)
}

// optional uint32 penetrate = 15;
inline bool AttributeData::_internal_has_penetrate() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool AttributeData::has_penetrate() const {
  return _internal_has_penetrate();
}
inline void AttributeData::clear_penetrate() {
  penetrate_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_penetrate() const {
  return penetrate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::penetrate() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.penetrate)
  return _internal_penetrate();
}
inline void AttributeData::_internal_set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  penetrate_ = value;
}
inline void AttributeData::set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_penetrate(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.penetrate)
}

// optional uint32 penetrateextradamage = 16;
inline bool AttributeData::_internal_has_penetrateextradamage() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool AttributeData::has_penetrateextradamage() const {
  return _internal_has_penetrateextradamage();
}
inline void AttributeData::clear_penetrateextradamage() {
  penetrateextradamage_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_penetrateextradamage() const {
  return penetrateextradamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::penetrateextradamage() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.penetrateextradamage)
  return _internal_penetrateextradamage();
}
inline void AttributeData::_internal_set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  penetrateextradamage_ = value;
}
inline void AttributeData::set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_penetrateextradamage(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.penetrateextradamage)
}

// optional uint32 block = 17;
inline bool AttributeData::_internal_has_block() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool AttributeData::has_block() const {
  return _internal_has_block();
}
inline void AttributeData::clear_block() {
  block_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_block() const {
  return block_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::block() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.block)
  return _internal_block();
}
inline void AttributeData::_internal_set_block(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  block_ = value;
}
inline void AttributeData::set_block(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_block(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.block)
}

// optional uint32 blockreducedamage = 18;
inline bool AttributeData::_internal_has_blockreducedamage() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool AttributeData::has_blockreducedamage() const {
  return _internal_has_blockreducedamage();
}
inline void AttributeData::clear_blockreducedamage() {
  blockreducedamage_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_blockreducedamage() const {
  return blockreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::blockreducedamage() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.blockreducedamage)
  return _internal_blockreducedamage();
}
inline void AttributeData::_internal_set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  blockreducedamage_ = value;
}
inline void AttributeData::set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blockreducedamage(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.blockreducedamage)
}

// optional uint32 accurate = 19;
inline bool AttributeData::_internal_has_accurate() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool AttributeData::has_accurate() const {
  return _internal_has_accurate();
}
inline void AttributeData::clear_accurate() {
  accurate_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_accurate() const {
  return accurate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::accurate() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.accurate)
  return _internal_accurate();
}
inline void AttributeData::_internal_set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  accurate_ = value;
}
inline void AttributeData::set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accurate(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.accurate)
}

// optional uint32 accurateextradamage = 20;
inline bool AttributeData::_internal_has_accurateextradamage() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool AttributeData::has_accurateextradamage() const {
  return _internal_has_accurateextradamage();
}
inline void AttributeData::clear_accurateextradamage() {
  accurateextradamage_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_accurateextradamage() const {
  return accurateextradamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::accurateextradamage() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.accurateextradamage)
  return _internal_accurateextradamage();
}
inline void AttributeData::_internal_set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  accurateextradamage_ = value;
}
inline void AttributeData::set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accurateextradamage(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.accurateextradamage)
}

// optional uint32 hold = 21;
inline bool AttributeData::_internal_has_hold() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool AttributeData::has_hold() const {
  return _internal_has_hold();
}
inline void AttributeData::clear_hold() {
  hold_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_hold() const {
  return hold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::hold() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.hold)
  return _internal_hold();
}
inline void AttributeData::_internal_set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  hold_ = value;
}
inline void AttributeData::set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hold(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.hold)
}

// optional uint32 holdreducedamage = 22;
inline bool AttributeData::_internal_has_holdreducedamage() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool AttributeData::has_holdreducedamage() const {
  return _internal_has_holdreducedamage();
}
inline void AttributeData::clear_holdreducedamage() {
  holdreducedamage_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_holdreducedamage() const {
  return holdreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::holdreducedamage() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.holdreducedamage)
  return _internal_holdreducedamage();
}
inline void AttributeData::_internal_set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  holdreducedamage_ = value;
}
inline void AttributeData::set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_holdreducedamage(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.holdreducedamage)
}

// optional uint32 deflect = 23;
inline bool AttributeData::_internal_has_deflect() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool AttributeData::has_deflect() const {
  return _internal_has_deflect();
}
inline void AttributeData::clear_deflect() {
  deflect_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_deflect() const {
  return deflect_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::deflect() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.deflect)
  return _internal_deflect();
}
inline void AttributeData::_internal_set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  deflect_ = value;
}
inline void AttributeData::set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deflect(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.deflect)
}

// optional uint32 deflectreducedamage = 24;
inline bool AttributeData::_internal_has_deflectreducedamage() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool AttributeData::has_deflectreducedamage() const {
  return _internal_has_deflectreducedamage();
}
inline void AttributeData::clear_deflectreducedamage() {
  deflectreducedamage_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_deflectreducedamage() const {
  return deflectreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::deflectreducedamage() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.deflectreducedamage)
  return _internal_deflectreducedamage();
}
inline void AttributeData::_internal_set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  deflectreducedamage_ = value;
}
inline void AttributeData::set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deflectreducedamage(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.deflectreducedamage)
}

// optional uint32 dodge = 25;
inline bool AttributeData::_internal_has_dodge() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool AttributeData::has_dodge() const {
  return _internal_has_dodge();
}
inline void AttributeData::clear_dodge() {
  dodge_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_dodge() const {
  return dodge_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::dodge() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.dodge)
  return _internal_dodge();
}
inline void AttributeData::_internal_set_dodge(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  dodge_ = value;
}
inline void AttributeData::set_dodge(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dodge(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.dodge)
}

// optional uint32 weaponatt = 26;
inline bool AttributeData::_internal_has_weaponatt() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool AttributeData::has_weaponatt() const {
  return _internal_has_weaponatt();
}
inline void AttributeData::clear_weaponatt() {
  weaponatt_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_weaponatt() const {
  return weaponatt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::weaponatt() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.weaponatt)
  return _internal_weaponatt();
}
inline void AttributeData::_internal_set_weaponatt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  weaponatt_ = value;
}
inline void AttributeData::set_weaponatt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_weaponatt(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.weaponatt)
}

// optional uint32 mp = 27;
inline bool AttributeData::_internal_has_mp() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool AttributeData::has_mp() const {
  return _internal_has_mp();
}
inline void AttributeData::clear_mp() {
  mp_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_mp() const {
  return mp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::mp() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.mp)
  return _internal_mp();
}
inline void AttributeData::_internal_set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  mp_ = value;
}
inline void AttributeData::set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mp(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.mp)
}

// optional uint32 maxmp = 28;
inline bool AttributeData::_internal_has_maxmp() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool AttributeData::has_maxmp() const {
  return _internal_has_maxmp();
}
inline void AttributeData::clear_maxmp() {
  maxmp_ = 0u;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_maxmp() const {
  return maxmp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::maxmp() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.maxmp)
  return _internal_maxmp();
}
inline void AttributeData::_internal_set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x08000000u;
  maxmp_ = value;
}
inline void AttributeData::set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxmp(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.maxmp)
}

// optional uint32 hit = 29;
inline bool AttributeData::_internal_has_hit() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool AttributeData::has_hit() const {
  return _internal_has_hit();
}
inline void AttributeData::clear_hit() {
  hit_ = 0u;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_hit() const {
  return hit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::hit() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.hit)
  return _internal_hit();
}
inline void AttributeData::_internal_set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x10000000u;
  hit_ = value;
}
inline void AttributeData::set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hit(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.hit)
}

// optional uint32 firemastery = 30;
inline bool AttributeData::_internal_has_firemastery() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool AttributeData::has_firemastery() const {
  return _internal_has_firemastery();
}
inline void AttributeData::clear_firemastery() {
  firemastery_ = 0u;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_firemastery() const {
  return firemastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::firemastery() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.firemastery)
  return _internal_firemastery();
}
inline void AttributeData::_internal_set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x20000000u;
  firemastery_ = value;
}
inline void AttributeData::set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_firemastery(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.firemastery)
}

// optional uint32 icemastery = 31;
inline bool AttributeData::_internal_has_icemastery() const {
  bool value = (_has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool AttributeData::has_icemastery() const {
  return _internal_has_icemastery();
}
inline void AttributeData::clear_icemastery() {
  icemastery_ = 0u;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_icemastery() const {
  return icemastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::icemastery() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.icemastery)
  return _internal_icemastery();
}
inline void AttributeData::_internal_set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x40000000u;
  icemastery_ = value;
}
inline void AttributeData::set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_icemastery(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.icemastery)
}

// optional uint32 lightningmastery = 32;
inline bool AttributeData::_internal_has_lightningmastery() const {
  bool value = (_has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline bool AttributeData::has_lightningmastery() const {
  return _internal_has_lightningmastery();
}
inline void AttributeData::clear_lightningmastery() {
  lightningmastery_ = 0u;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_lightningmastery() const {
  return lightningmastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::lightningmastery() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.lightningmastery)
  return _internal_lightningmastery();
}
inline void AttributeData::_internal_set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x80000000u;
  lightningmastery_ = value;
}
inline void AttributeData::set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lightningmastery(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.lightningmastery)
}

// optional uint32 brightmastery = 33;
inline bool AttributeData::_internal_has_brightmastery() const {
  bool value = (_has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline bool AttributeData::has_brightmastery() const {
  return _internal_has_brightmastery();
}
inline void AttributeData::clear_brightmastery() {
  brightmastery_ = 0u;
  _has_bits_[1] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_brightmastery() const {
  return brightmastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::brightmastery() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.brightmastery)
  return _internal_brightmastery();
}
inline void AttributeData::_internal_set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000001u;
  brightmastery_ = value;
}
inline void AttributeData::set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brightmastery(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.brightmastery)
}

// optional uint32 darkmastery = 34;
inline bool AttributeData::_internal_has_darkmastery() const {
  bool value = (_has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline bool AttributeData::has_darkmastery() const {
  return _internal_has_darkmastery();
}
inline void AttributeData::clear_darkmastery() {
  darkmastery_ = 0u;
  _has_bits_[1] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_darkmastery() const {
  return darkmastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::darkmastery() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.darkmastery)
  return _internal_darkmastery();
}
inline void AttributeData::_internal_set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000002u;
  darkmastery_ = value;
}
inline void AttributeData::set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_darkmastery(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.darkmastery)
}

// optional uint32 fireresist = 35;
inline bool AttributeData::_internal_has_fireresist() const {
  bool value = (_has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline bool AttributeData::has_fireresist() const {
  return _internal_has_fireresist();
}
inline void AttributeData::clear_fireresist() {
  fireresist_ = 0u;
  _has_bits_[1] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_fireresist() const {
  return fireresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::fireresist() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.fireresist)
  return _internal_fireresist();
}
inline void AttributeData::_internal_set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000004u;
  fireresist_ = value;
}
inline void AttributeData::set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fireresist(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.fireresist)
}

// optional uint32 iceresist = 36;
inline bool AttributeData::_internal_has_iceresist() const {
  bool value = (_has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline bool AttributeData::has_iceresist() const {
  return _internal_has_iceresist();
}
inline void AttributeData::clear_iceresist() {
  iceresist_ = 0u;
  _has_bits_[1] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_iceresist() const {
  return iceresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::iceresist() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.iceresist)
  return _internal_iceresist();
}
inline void AttributeData::_internal_set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000008u;
  iceresist_ = value;
}
inline void AttributeData::set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_iceresist(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.iceresist)
}

// optional uint32 lightningresist = 37;
inline bool AttributeData::_internal_has_lightningresist() const {
  bool value = (_has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline bool AttributeData::has_lightningresist() const {
  return _internal_has_lightningresist();
}
inline void AttributeData::clear_lightningresist() {
  lightningresist_ = 0u;
  _has_bits_[1] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_lightningresist() const {
  return lightningresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::lightningresist() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.lightningresist)
  return _internal_lightningresist();
}
inline void AttributeData::_internal_set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000010u;
  lightningresist_ = value;
}
inline void AttributeData::set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lightningresist(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.lightningresist)
}

// optional uint32 brightresist = 38;
inline bool AttributeData::_internal_has_brightresist() const {
  bool value = (_has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline bool AttributeData::has_brightresist() const {
  return _internal_has_brightresist();
}
inline void AttributeData::clear_brightresist() {
  brightresist_ = 0u;
  _has_bits_[1] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_brightresist() const {
  return brightresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::brightresist() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.brightresist)
  return _internal_brightresist();
}
inline void AttributeData::_internal_set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000020u;
  brightresist_ = value;
}
inline void AttributeData::set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brightresist(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.brightresist)
}

// optional uint32 darkresist = 39;
inline bool AttributeData::_internal_has_darkresist() const {
  bool value = (_has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline bool AttributeData::has_darkresist() const {
  return _internal_has_darkresist();
}
inline void AttributeData::clear_darkresist() {
  darkresist_ = 0u;
  _has_bits_[1] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_darkresist() const {
  return darkresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::darkresist() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.darkresist)
  return _internal_darkresist();
}
inline void AttributeData::_internal_set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000040u;
  darkresist_ = value;
}
inline void AttributeData::set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_darkresist(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.darkresist)
}

// optional uint32 firepen = 40;
inline bool AttributeData::_internal_has_firepen() const {
  bool value = (_has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline bool AttributeData::has_firepen() const {
  return _internal_has_firepen();
}
inline void AttributeData::clear_firepen() {
  firepen_ = 0u;
  _has_bits_[1] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_firepen() const {
  return firepen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::firepen() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.firepen)
  return _internal_firepen();
}
inline void AttributeData::_internal_set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000080u;
  firepen_ = value;
}
inline void AttributeData::set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_firepen(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.firepen)
}

// optional uint32 icepen = 41;
inline bool AttributeData::_internal_has_icepen() const {
  bool value = (_has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline bool AttributeData::has_icepen() const {
  return _internal_has_icepen();
}
inline void AttributeData::clear_icepen() {
  icepen_ = 0u;
  _has_bits_[1] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_icepen() const {
  return icepen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::icepen() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.icepen)
  return _internal_icepen();
}
inline void AttributeData::_internal_set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000100u;
  icepen_ = value;
}
inline void AttributeData::set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_icepen(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.icepen)
}

// optional uint32 lightningpen = 42;
inline bool AttributeData::_internal_has_lightningpen() const {
  bool value = (_has_bits_[1] & 0x00000200u) != 0;
  return value;
}
inline bool AttributeData::has_lightningpen() const {
  return _internal_has_lightningpen();
}
inline void AttributeData::clear_lightningpen() {
  lightningpen_ = 0u;
  _has_bits_[1] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_lightningpen() const {
  return lightningpen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::lightningpen() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.lightningpen)
  return _internal_lightningpen();
}
inline void AttributeData::_internal_set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000200u;
  lightningpen_ = value;
}
inline void AttributeData::set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lightningpen(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.lightningpen)
}

// optional uint32 brightpen = 43;
inline bool AttributeData::_internal_has_brightpen() const {
  bool value = (_has_bits_[1] & 0x00000400u) != 0;
  return value;
}
inline bool AttributeData::has_brightpen() const {
  return _internal_has_brightpen();
}
inline void AttributeData::clear_brightpen() {
  brightpen_ = 0u;
  _has_bits_[1] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_brightpen() const {
  return brightpen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::brightpen() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.brightpen)
  return _internal_brightpen();
}
inline void AttributeData::_internal_set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000400u;
  brightpen_ = value;
}
inline void AttributeData::set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brightpen(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.brightpen)
}

// optional uint32 darkpen = 44;
inline bool AttributeData::_internal_has_darkpen() const {
  bool value = (_has_bits_[1] & 0x00000800u) != 0;
  return value;
}
inline bool AttributeData::has_darkpen() const {
  return _internal_has_darkpen();
}
inline void AttributeData::clear_darkpen() {
  darkpen_ = 0u;
  _has_bits_[1] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_darkpen() const {
  return darkpen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::darkpen() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.darkpen)
  return _internal_darkpen();
}
inline void AttributeData::_internal_set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000800u;
  darkpen_ = value;
}
inline void AttributeData::set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_darkpen(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.darkpen)
}

// optional uint32 blowint = 45;
inline bool AttributeData::_internal_has_blowint() const {
  bool value = (_has_bits_[1] & 0x00001000u) != 0;
  return value;
}
inline bool AttributeData::has_blowint() const {
  return _internal_has_blowint();
}
inline void AttributeData::clear_blowint() {
  blowint_ = 0u;
  _has_bits_[1] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_blowint() const {
  return blowint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::blowint() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.blowint)
  return _internal_blowint();
}
inline void AttributeData::_internal_set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00001000u;
  blowint_ = value;
}
inline void AttributeData::set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blowint(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.blowint)
}

// optional uint32 knockint = 46;
inline bool AttributeData::_internal_has_knockint() const {
  bool value = (_has_bits_[1] & 0x00002000u) != 0;
  return value;
}
inline bool AttributeData::has_knockint() const {
  return _internal_has_knockint();
}
inline void AttributeData::clear_knockint() {
  knockint_ = 0u;
  _has_bits_[1] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_knockint() const {
  return knockint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::knockint() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.knockint)
  return _internal_knockint();
}
inline void AttributeData::_internal_set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00002000u;
  knockint_ = value;
}
inline void AttributeData::set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_knockint(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.knockint)
}

// optional uint32 floatint = 47;
inline bool AttributeData::_internal_has_floatint() const {
  bool value = (_has_bits_[1] & 0x00004000u) != 0;
  return value;
}
inline bool AttributeData::has_floatint() const {
  return _internal_has_floatint();
}
inline void AttributeData::clear_floatint() {
  floatint_ = 0u;
  _has_bits_[1] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_floatint() const {
  return floatint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::floatint() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.floatint)
  return _internal_floatint();
}
inline void AttributeData::_internal_set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00004000u;
  floatint_ = value;
}
inline void AttributeData::set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_floatint(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.floatint)
}

// optional uint32 superhitint = 48;
inline bool AttributeData::_internal_has_superhitint() const {
  bool value = (_has_bits_[1] & 0x00008000u) != 0;
  return value;
}
inline bool AttributeData::has_superhitint() const {
  return _internal_has_superhitint();
}
inline void AttributeData::clear_superhitint() {
  superhitint_ = 0u;
  _has_bits_[1] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_superhitint() const {
  return superhitint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::superhitint() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.superhitint)
  return _internal_superhitint();
}
inline void AttributeData::_internal_set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00008000u;
  superhitint_ = value;
}
inline void AttributeData::set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_superhitint(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.superhitint)
}

// optional uint32 blowresist = 49;
inline bool AttributeData::_internal_has_blowresist() const {
  bool value = (_has_bits_[1] & 0x00010000u) != 0;
  return value;
}
inline bool AttributeData::has_blowresist() const {
  return _internal_has_blowresist();
}
inline void AttributeData::clear_blowresist() {
  blowresist_ = 0u;
  _has_bits_[1] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_blowresist() const {
  return blowresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::blowresist() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.blowresist)
  return _internal_blowresist();
}
inline void AttributeData::_internal_set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00010000u;
  blowresist_ = value;
}
inline void AttributeData::set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blowresist(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.blowresist)
}

// optional uint32 knockresist = 50;
inline bool AttributeData::_internal_has_knockresist() const {
  bool value = (_has_bits_[1] & 0x00020000u) != 0;
  return value;
}
inline bool AttributeData::has_knockresist() const {
  return _internal_has_knockresist();
}
inline void AttributeData::clear_knockresist() {
  knockresist_ = 0u;
  _has_bits_[1] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_knockresist() const {
  return knockresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::knockresist() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.knockresist)
  return _internal_knockresist();
}
inline void AttributeData::_internal_set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00020000u;
  knockresist_ = value;
}
inline void AttributeData::set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_knockresist(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.knockresist)
}

// optional uint32 floatresist = 51;
inline bool AttributeData::_internal_has_floatresist() const {
  bool value = (_has_bits_[1] & 0x00040000u) != 0;
  return value;
}
inline bool AttributeData::has_floatresist() const {
  return _internal_has_floatresist();
}
inline void AttributeData::clear_floatresist() {
  floatresist_ = 0u;
  _has_bits_[1] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_floatresist() const {
  return floatresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::floatresist() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.floatresist)
  return _internal_floatresist();
}
inline void AttributeData::_internal_set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00040000u;
  floatresist_ = value;
}
inline void AttributeData::set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_floatresist(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.floatresist)
}

// optional uint32 superhitresist = 52;
inline bool AttributeData::_internal_has_superhitresist() const {
  bool value = (_has_bits_[1] & 0x00080000u) != 0;
  return value;
}
inline bool AttributeData::has_superhitresist() const {
  return _internal_has_superhitresist();
}
inline void AttributeData::clear_superhitresist() {
  superhitresist_ = 0u;
  _has_bits_[1] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_superhitresist() const {
  return superhitresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::superhitresist() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.superhitresist)
  return _internal_superhitresist();
}
inline void AttributeData::_internal_set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00080000u;
  superhitresist_ = value;
}
inline void AttributeData::set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_superhitresist(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.superhitresist)
}

// optional uint32 blowdectime = 53;
inline bool AttributeData::_internal_has_blowdectime() const {
  bool value = (_has_bits_[1] & 0x00100000u) != 0;
  return value;
}
inline bool AttributeData::has_blowdectime() const {
  return _internal_has_blowdectime();
}
inline void AttributeData::clear_blowdectime() {
  blowdectime_ = 0u;
  _has_bits_[1] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_blowdectime() const {
  return blowdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::blowdectime() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.blowdectime)
  return _internal_blowdectime();
}
inline void AttributeData::_internal_set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00100000u;
  blowdectime_ = value;
}
inline void AttributeData::set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blowdectime(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.blowdectime)
}

// optional uint32 knockdectime = 54;
inline bool AttributeData::_internal_has_knockdectime() const {
  bool value = (_has_bits_[1] & 0x00200000u) != 0;
  return value;
}
inline bool AttributeData::has_knockdectime() const {
  return _internal_has_knockdectime();
}
inline void AttributeData::clear_knockdectime() {
  knockdectime_ = 0u;
  _has_bits_[1] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_knockdectime() const {
  return knockdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::knockdectime() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.knockdectime)
  return _internal_knockdectime();
}
inline void AttributeData::_internal_set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00200000u;
  knockdectime_ = value;
}
inline void AttributeData::set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_knockdectime(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.knockdectime)
}

// optional uint32 floatdectime = 55;
inline bool AttributeData::_internal_has_floatdectime() const {
  bool value = (_has_bits_[1] & 0x00400000u) != 0;
  return value;
}
inline bool AttributeData::has_floatdectime() const {
  return _internal_has_floatdectime();
}
inline void AttributeData::clear_floatdectime() {
  floatdectime_ = 0u;
  _has_bits_[1] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_floatdectime() const {
  return floatdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::floatdectime() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.floatdectime)
  return _internal_floatdectime();
}
inline void AttributeData::_internal_set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00400000u;
  floatdectime_ = value;
}
inline void AttributeData::set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_floatdectime(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.floatdectime)
}

// optional uint32 superhitdectime = 56;
inline bool AttributeData::_internal_has_superhitdectime() const {
  bool value = (_has_bits_[1] & 0x00800000u) != 0;
  return value;
}
inline bool AttributeData::has_superhitdectime() const {
  return _internal_has_superhitdectime();
}
inline void AttributeData::clear_superhitdectime() {
  superhitdectime_ = 0u;
  _has_bits_[1] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_superhitdectime() const {
  return superhitdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::superhitdectime() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.superhitdectime)
  return _internal_superhitdectime();
}
inline void AttributeData::_internal_set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00800000u;
  superhitdectime_ = value;
}
inline void AttributeData::set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_superhitdectime(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.superhitdectime)
}

// optional uint32 stiffaddtime = 57;
inline bool AttributeData::_internal_has_stiffaddtime() const {
  bool value = (_has_bits_[1] & 0x01000000u) != 0;
  return value;
}
inline bool AttributeData::has_stiffaddtime() const {
  return _internal_has_stiffaddtime();
}
inline void AttributeData::clear_stiffaddtime() {
  stiffaddtime_ = 0u;
  _has_bits_[1] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_stiffaddtime() const {
  return stiffaddtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::stiffaddtime() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.stiffaddtime)
  return _internal_stiffaddtime();
}
inline void AttributeData::_internal_set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x01000000u;
  stiffaddtime_ = value;
}
inline void AttributeData::set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stiffaddtime(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.stiffaddtime)
}

// optional uint32 stiffdectime = 58;
inline bool AttributeData::_internal_has_stiffdectime() const {
  bool value = (_has_bits_[1] & 0x02000000u) != 0;
  return value;
}
inline bool AttributeData::has_stiffdectime() const {
  return _internal_has_stiffdectime();
}
inline void AttributeData::clear_stiffdectime() {
  stiffdectime_ = 0u;
  _has_bits_[1] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::_internal_stiffdectime() const {
  return stiffdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttributeData::stiffdectime() const {
  // @@protoc_insertion_point(field_get:msg.AttributeData.stiffdectime)
  return _internal_stiffdectime();
}
inline void AttributeData::_internal_set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x02000000u;
  stiffdectime_ = value;
}
inline void AttributeData::set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stiffdectime(value);
  // @@protoc_insertion_point(field_set:msg.AttributeData.stiffdectime)
}

// -------------------------------------------------------------------

// CharacterFightData

// optional uint32 curfightvalue = 1;
inline bool CharacterFightData::_internal_has_curfightvalue() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CharacterFightData::has_curfightvalue() const {
  return _internal_has_curfightvalue();
}
inline void CharacterFightData::clear_curfightvalue() {
  curfightvalue_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterFightData::_internal_curfightvalue() const {
  return curfightvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterFightData::curfightvalue() const {
  // @@protoc_insertion_point(field_get:msg.CharacterFightData.curfightvalue)
  return _internal_curfightvalue();
}
inline void CharacterFightData::_internal_set_curfightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  curfightvalue_ = value;
}
inline void CharacterFightData::set_curfightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curfightvalue(value);
  // @@protoc_insertion_point(field_set:msg.CharacterFightData.curfightvalue)
}

// -------------------------------------------------------------------

// CharacterMainData

// optional .msg.CharacterBaseData basedata = 1;
inline bool CharacterMainData::_internal_has_basedata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || basedata_ != nullptr);
  return value;
}
inline bool CharacterMainData::has_basedata() const {
  return _internal_has_basedata();
}
inline void CharacterMainData::clear_basedata() {
  if (basedata_ != nullptr) basedata_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::CharacterBaseData& CharacterMainData::_internal_basedata() const {
  const ::msg::CharacterBaseData* p = basedata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::CharacterBaseData*>(
      &::msg::_CharacterBaseData_default_instance_);
}
inline const ::msg::CharacterBaseData& CharacterMainData::basedata() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMainData.basedata)
  return _internal_basedata();
}
inline ::msg::CharacterBaseData* CharacterMainData::release_basedata() {
  // @@protoc_insertion_point(field_release:msg.CharacterMainData.basedata)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::CharacterBaseData* temp = basedata_;
  basedata_ = nullptr;
  return temp;
}
inline ::msg::CharacterBaseData* CharacterMainData::_internal_mutable_basedata() {
  _has_bits_[0] |= 0x00000001u;
  if (basedata_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::CharacterBaseData>(GetArenaNoVirtual());
    basedata_ = p;
  }
  return basedata_;
}
inline ::msg::CharacterBaseData* CharacterMainData::mutable_basedata() {
  // @@protoc_insertion_point(field_mutable:msg.CharacterMainData.basedata)
  return _internal_mutable_basedata();
}
inline void CharacterMainData::set_allocated_basedata(::msg::CharacterBaseData* basedata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete basedata_;
  }
  if (basedata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      basedata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, basedata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  basedata_ = basedata;
  // @@protoc_insertion_point(field_set_allocated:msg.CharacterMainData.basedata)
}

// optional .msg.AttributeData attridata = 2;
inline bool CharacterMainData::_internal_has_attridata() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || attridata_ != nullptr);
  return value;
}
inline bool CharacterMainData::has_attridata() const {
  return _internal_has_attridata();
}
inline void CharacterMainData::clear_attridata() {
  if (attridata_ != nullptr) attridata_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::msg::AttributeData& CharacterMainData::_internal_attridata() const {
  const ::msg::AttributeData* p = attridata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::AttributeData*>(
      &::msg::_AttributeData_default_instance_);
}
inline const ::msg::AttributeData& CharacterMainData::attridata() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMainData.attridata)
  return _internal_attridata();
}
inline ::msg::AttributeData* CharacterMainData::release_attridata() {
  // @@protoc_insertion_point(field_release:msg.CharacterMainData.attridata)
  _has_bits_[0] &= ~0x00000002u;
  ::msg::AttributeData* temp = attridata_;
  attridata_ = nullptr;
  return temp;
}
inline ::msg::AttributeData* CharacterMainData::_internal_mutable_attridata() {
  _has_bits_[0] |= 0x00000002u;
  if (attridata_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::AttributeData>(GetArenaNoVirtual());
    attridata_ = p;
  }
  return attridata_;
}
inline ::msg::AttributeData* CharacterMainData::mutable_attridata() {
  // @@protoc_insertion_point(field_mutable:msg.CharacterMainData.attridata)
  return _internal_mutable_attridata();
}
inline void CharacterMainData::set_allocated_attridata(::msg::AttributeData* attridata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attridata_;
  }
  if (attridata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attridata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, attridata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  attridata_ = attridata;
  // @@protoc_insertion_point(field_set_allocated:msg.CharacterMainData.attridata)
}

// optional .msg.MapUserData mapdata = 3;
inline bool CharacterMainData::_internal_has_mapdata() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || mapdata_ != nullptr);
  return value;
}
inline bool CharacterMainData::has_mapdata() const {
  return _internal_has_mapdata();
}
inline void CharacterMainData::clear_mapdata() {
  if (mapdata_ != nullptr) mapdata_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::msg::MapUserData& CharacterMainData::_internal_mapdata() const {
  const ::msg::MapUserData* p = mapdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::MapUserData*>(
      &::msg::_MapUserData_default_instance_);
}
inline const ::msg::MapUserData& CharacterMainData::mapdata() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMainData.mapdata)
  return _internal_mapdata();
}
inline ::msg::MapUserData* CharacterMainData::release_mapdata() {
  // @@protoc_insertion_point(field_release:msg.CharacterMainData.mapdata)
  _has_bits_[0] &= ~0x00000004u;
  ::msg::MapUserData* temp = mapdata_;
  mapdata_ = nullptr;
  return temp;
}
inline ::msg::MapUserData* CharacterMainData::_internal_mutable_mapdata() {
  _has_bits_[0] |= 0x00000004u;
  if (mapdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::MapUserData>(GetArenaNoVirtual());
    mapdata_ = p;
  }
  return mapdata_;
}
inline ::msg::MapUserData* CharacterMainData::mutable_mapdata() {
  // @@protoc_insertion_point(field_mutable:msg.CharacterMainData.mapdata)
  return _internal_mutable_mapdata();
}
inline void CharacterMainData::set_allocated_mapdata(::msg::MapUserData* mapdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mapdata_;
  }
  if (mapdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mapdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mapdata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  mapdata_ = mapdata;
  // @@protoc_insertion_point(field_set_allocated:msg.CharacterMainData.mapdata)
}

// optional .msg.CharacterFightData fightdata = 4;
inline bool CharacterMainData::_internal_has_fightdata() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || fightdata_ != nullptr);
  return value;
}
inline bool CharacterMainData::has_fightdata() const {
  return _internal_has_fightdata();
}
inline void CharacterMainData::clear_fightdata() {
  if (fightdata_ != nullptr) fightdata_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::msg::CharacterFightData& CharacterMainData::_internal_fightdata() const {
  const ::msg::CharacterFightData* p = fightdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::CharacterFightData*>(
      &::msg::_CharacterFightData_default_instance_);
}
inline const ::msg::CharacterFightData& CharacterMainData::fightdata() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMainData.fightdata)
  return _internal_fightdata();
}
inline ::msg::CharacterFightData* CharacterMainData::release_fightdata() {
  // @@protoc_insertion_point(field_release:msg.CharacterMainData.fightdata)
  _has_bits_[0] &= ~0x00000008u;
  ::msg::CharacterFightData* temp = fightdata_;
  fightdata_ = nullptr;
  return temp;
}
inline ::msg::CharacterFightData* CharacterMainData::_internal_mutable_fightdata() {
  _has_bits_[0] |= 0x00000008u;
  if (fightdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::CharacterFightData>(GetArenaNoVirtual());
    fightdata_ = p;
  }
  return fightdata_;
}
inline ::msg::CharacterFightData* CharacterMainData::mutable_fightdata() {
  // @@protoc_insertion_point(field_mutable:msg.CharacterMainData.fightdata)
  return _internal_mutable_fightdata();
}
inline void CharacterMainData::set_allocated_fightdata(::msg::CharacterFightData* fightdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fightdata_;
  }
  if (fightdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fightdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fightdata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  fightdata_ = fightdata;
  // @@protoc_insertion_point(field_set_allocated:msg.CharacterMainData.fightdata)
}

// -------------------------------------------------------------------

// CharacterMapShow

// optional uint32 face = 1;
inline bool CharacterMapShow::_internal_has_face() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CharacterMapShow::has_face() const {
  return _internal_has_face();
}
inline void CharacterMapShow::clear_face() {
  face_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_face() const {
  return face_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::face() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.face)
  return _internal_face();
}
inline void CharacterMapShow::_internal_set_face(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  face_ = value;
}
inline void CharacterMapShow::set_face(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_face(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.face)
}

// optional uint32 weapon = 2;
inline bool CharacterMapShow::_internal_has_weapon() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CharacterMapShow::has_weapon() const {
  return _internal_has_weapon();
}
inline void CharacterMapShow::clear_weapon() {
  weapon_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_weapon() const {
  return weapon_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::weapon() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.weapon)
  return _internal_weapon();
}
inline void CharacterMapShow::_internal_set_weapon(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  weapon_ = value;
}
inline void CharacterMapShow::set_weapon(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_weapon(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.weapon)
}

// optional uint32 coat = 3;
inline bool CharacterMapShow::_internal_has_coat() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CharacterMapShow::has_coat() const {
  return _internal_has_coat();
}
inline void CharacterMapShow::clear_coat() {
  coat_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_coat() const {
  return coat_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::coat() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.coat)
  return _internal_coat();
}
inline void CharacterMapShow::_internal_set_coat(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  coat_ = value;
}
inline void CharacterMapShow::set_coat(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coat(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.coat)
}

// optional uint32 occupation = 4;
inline bool CharacterMapShow::_internal_has_occupation() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CharacterMapShow::has_occupation() const {
  return _internal_has_occupation();
}
inline void CharacterMapShow::clear_occupation() {
  occupation_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_occupation() const {
  return occupation_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::occupation() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.occupation)
  return _internal_occupation();
}
inline void CharacterMapShow::_internal_set_occupation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  occupation_ = value;
}
inline void CharacterMapShow::set_occupation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_occupation(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.occupation)
}

// optional uint32 heroid = 5;
inline bool CharacterMapShow::_internal_has_heroid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CharacterMapShow::has_heroid() const {
  return _internal_has_heroid();
}
inline void CharacterMapShow::clear_heroid() {
  heroid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_heroid() const {
  return heroid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::heroid() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.heroid)
  return _internal_heroid();
}
inline void CharacterMapShow::_internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  heroid_ = value;
}
inline void CharacterMapShow::set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.heroid)
}

// optional uint32 facestyle = 6;
inline bool CharacterMapShow::_internal_has_facestyle() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CharacterMapShow::has_facestyle() const {
  return _internal_has_facestyle();
}
inline void CharacterMapShow::clear_facestyle() {
  facestyle_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_facestyle() const {
  return facestyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::facestyle() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.facestyle)
  return _internal_facestyle();
}
inline void CharacterMapShow::_internal_set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  facestyle_ = value;
}
inline void CharacterMapShow::set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_facestyle(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.facestyle)
}

// optional uint32 hairstyle = 7;
inline bool CharacterMapShow::_internal_has_hairstyle() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CharacterMapShow::has_hairstyle() const {
  return _internal_has_hairstyle();
}
inline void CharacterMapShow::clear_hairstyle() {
  hairstyle_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_hairstyle() const {
  return hairstyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::hairstyle() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.hairstyle)
  return _internal_hairstyle();
}
inline void CharacterMapShow::_internal_set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  hairstyle_ = value;
}
inline void CharacterMapShow::set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hairstyle(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.hairstyle)
}

// optional uint32 haircolor = 8;
inline bool CharacterMapShow::_internal_has_haircolor() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CharacterMapShow::has_haircolor() const {
  return _internal_has_haircolor();
}
inline void CharacterMapShow::clear_haircolor() {
  haircolor_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_haircolor() const {
  return haircolor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::haircolor() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.haircolor)
  return _internal_haircolor();
}
inline void CharacterMapShow::_internal_set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  haircolor_ = value;
}
inline void CharacterMapShow::set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_haircolor(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.haircolor)
}

// optional uint32 antenna = 9;
inline bool CharacterMapShow::_internal_has_antenna() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CharacterMapShow::has_antenna() const {
  return _internal_has_antenna();
}
inline void CharacterMapShow::clear_antenna() {
  antenna_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_antenna() const {
  return antenna_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::antenna() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.antenna)
  return _internal_antenna();
}
inline void CharacterMapShow::_internal_set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  antenna_ = value;
}
inline void CharacterMapShow::set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_antenna(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.antenna)
}

// optional uint32 bodystyle = 10;
inline bool CharacterMapShow::_internal_has_bodystyle() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CharacterMapShow::has_bodystyle() const {
  return _internal_has_bodystyle();
}
inline void CharacterMapShow::clear_bodystyle() {
  bodystyle_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_bodystyle() const {
  return bodystyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::bodystyle() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.bodystyle)
  return _internal_bodystyle();
}
inline void CharacterMapShow::_internal_set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  bodystyle_ = value;
}
inline void CharacterMapShow::set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bodystyle(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.bodystyle)
}

// optional uint32 avatarId = 11;
inline bool CharacterMapShow::_internal_has_avatarid() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CharacterMapShow::has_avatarid() const {
  return _internal_has_avatarid();
}
inline void CharacterMapShow::clear_avatarid() {
  avatarid_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::_internal_avatarid() const {
  return avatarid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapShow::avatarid() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapShow.avatarId)
  return _internal_avatarid();
}
inline void CharacterMapShow::_internal_set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  avatarid_ = value;
}
inline void CharacterMapShow::set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_avatarid(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapShow.avatarId)
}

// -------------------------------------------------------------------

// CharacterMapData

// optional uint32 level = 1;
inline bool CharacterMapData::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CharacterMapData::has_level() const {
  return _internal_has_level();
}
inline void CharacterMapData::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::level() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.level)
  return _internal_level();
}
inline void CharacterMapData::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  level_ = value;
}
inline void CharacterMapData::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapData.level)
}

// optional .msg.FloatMovePos pos = 2;
inline bool CharacterMapData::_internal_has_pos() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || pos_ != nullptr);
  return value;
}
inline bool CharacterMapData::has_pos() const {
  return _internal_has_pos();
}
inline void CharacterMapData::clear_pos() {
  if (pos_ != nullptr) pos_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::msg::FloatMovePos& CharacterMapData::_internal_pos() const {
  const ::msg::FloatMovePos* p = pos_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::FloatMovePos*>(
      &::msg::_FloatMovePos_default_instance_);
}
inline const ::msg::FloatMovePos& CharacterMapData::pos() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.pos)
  return _internal_pos();
}
inline ::msg::FloatMovePos* CharacterMapData::release_pos() {
  // @@protoc_insertion_point(field_release:msg.CharacterMapData.pos)
  _has_bits_[0] &= ~0x00000002u;
  ::msg::FloatMovePos* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::msg::FloatMovePos* CharacterMapData::_internal_mutable_pos() {
  _has_bits_[0] |= 0x00000002u;
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::FloatMovePos>(GetArenaNoVirtual());
    pos_ = p;
  }
  return pos_;
}
inline ::msg::FloatMovePos* CharacterMapData::mutable_pos() {
  // @@protoc_insertion_point(field_mutable:msg.CharacterMapData.pos)
  return _internal_mutable_pos();
}
inline void CharacterMapData::set_allocated_pos(::msg::FloatMovePos* pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pos_;
  }
  if (pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:msg.CharacterMapData.pos)
}

// optional uint32 dir = 3;
inline bool CharacterMapData::_internal_has_dir() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CharacterMapData::has_dir() const {
  return _internal_has_dir();
}
inline void CharacterMapData::clear_dir() {
  dir_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::_internal_dir() const {
  return dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::dir() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.dir)
  return _internal_dir();
}
inline void CharacterMapData::_internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  dir_ = value;
}
inline void CharacterMapData::set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapData.dir)
}

// optional uint32 movespeed = 4;
inline bool CharacterMapData::_internal_has_movespeed() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CharacterMapData::has_movespeed() const {
  return _internal_has_movespeed();
}
inline void CharacterMapData::clear_movespeed() {
  movespeed_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::_internal_movespeed() const {
  return movespeed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::movespeed() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.movespeed)
  return _internal_movespeed();
}
inline void CharacterMapData::_internal_set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  movespeed_ = value;
}
inline void CharacterMapData::set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_movespeed(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapData.movespeed)
}

// optional uint32 hp = 5;
inline bool CharacterMapData::_internal_has_hp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CharacterMapData::has_hp() const {
  return _internal_has_hp();
}
inline void CharacterMapData::clear_hp() {
  hp_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::_internal_hp() const {
  return hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::hp() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.hp)
  return _internal_hp();
}
inline void CharacterMapData::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  hp_ = value;
}
inline void CharacterMapData::set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapData.hp)
}

// optional uint32 maxhp = 6;
inline bool CharacterMapData::_internal_has_maxhp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CharacterMapData::has_maxhp() const {
  return _internal_has_maxhp();
}
inline void CharacterMapData::clear_maxhp() {
  maxhp_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::_internal_maxhp() const {
  return maxhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::maxhp() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.maxhp)
  return _internal_maxhp();
}
inline void CharacterMapData::_internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  maxhp_ = value;
}
inline void CharacterMapData::set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxhp(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapData.maxhp)
}

// repeated .msg.StateItem states = 7;
inline int CharacterMapData::_internal_states_size() const {
  return states_.size();
}
inline int CharacterMapData::states_size() const {
  return _internal_states_size();
}
inline void CharacterMapData::clear_states() {
  states_.Clear();
}
inline ::msg::StateItem* CharacterMapData::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:msg.CharacterMapData.states)
  return states_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >*
CharacterMapData::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:msg.CharacterMapData.states)
  return &states_;
}
inline const ::msg::StateItem& CharacterMapData::_internal_states(int index) const {
  return states_.Get(index);
}
inline const ::msg::StateItem& CharacterMapData::states(int index) const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.states)
  return _internal_states(index);
}
inline ::msg::StateItem* CharacterMapData::_internal_add_states() {
  return states_.Add();
}
inline ::msg::StateItem* CharacterMapData::add_states() {
  // @@protoc_insertion_point(field_add:msg.CharacterMapData.states)
  return _internal_add_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >&
CharacterMapData::states() const {
  // @@protoc_insertion_point(field_list:msg.CharacterMapData.states)
  return states_;
}

// optional uint32 teamid = 8;
inline bool CharacterMapData::_internal_has_teamid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CharacterMapData::has_teamid() const {
  return _internal_has_teamid();
}
inline void CharacterMapData::clear_teamid() {
  teamid_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::_internal_teamid() const {
  return teamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::teamid() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.teamid)
  return _internal_teamid();
}
inline void CharacterMapData::_internal_set_teamid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  teamid_ = value;
}
inline void CharacterMapData::set_teamid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_teamid(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapData.teamid)
}

// optional uint64 guildid = 9;
inline bool CharacterMapData::_internal_has_guildid() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CharacterMapData::has_guildid() const {
  return _internal_has_guildid();
}
inline void CharacterMapData::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharacterMapData::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CharacterMapData::guildid() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.guildid)
  return _internal_guildid();
}
inline void CharacterMapData::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  guildid_ = value;
}
inline void CharacterMapData::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapData.guildid)
}

// optional uint32 country = 10;
inline bool CharacterMapData::_internal_has_country() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CharacterMapData::has_country() const {
  return _internal_has_country();
}
inline void CharacterMapData::clear_country() {
  country_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::_internal_country() const {
  return country_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CharacterMapData::country() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.country)
  return _internal_country();
}
inline void CharacterMapData::_internal_set_country(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  country_ = value;
}
inline void CharacterMapData::set_country(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_country(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapData.country)
}

// optional string guildname = 11;
inline bool CharacterMapData::_internal_has_guildname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CharacterMapData::has_guildname() const {
  return _internal_has_guildname();
}
inline void CharacterMapData::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CharacterMapData::guildname() const {
  // @@protoc_insertion_point(field_get:msg.CharacterMapData.guildname)
  return _internal_guildname();
}
inline void CharacterMapData::set_guildname(const std::string& value) {
  _internal_set_guildname(value);
  // @@protoc_insertion_point(field_set:msg.CharacterMapData.guildname)
}
inline std::string* CharacterMapData::mutable_guildname() {
  // @@protoc_insertion_point(field_mutable:msg.CharacterMapData.guildname)
  return _internal_mutable_guildname();
}
inline const std::string& CharacterMapData::_internal_guildname() const {
  return guildname_.GetNoArena();
}
inline void CharacterMapData::_internal_set_guildname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CharacterMapData::set_guildname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.CharacterMapData.guildname)
}
inline void CharacterMapData::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.CharacterMapData.guildname)
}
inline void CharacterMapData::set_guildname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.CharacterMapData.guildname)
}
inline std::string* CharacterMapData::_internal_mutable_guildname() {
  _has_bits_[0] |= 0x00000001u;
  return guildname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CharacterMapData::release_guildname() {
  // @@protoc_insertion_point(field_release:msg.CharacterMapData.guildname)
  if (!_internal_has_guildname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return guildname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CharacterMapData::set_allocated_guildname(std::string* guildname) {
  if (guildname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guildname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:msg.CharacterMapData.guildname)
}

// -------------------------------------------------------------------

// StateItem

// optional uint64 uniqid = 1;
inline bool StateItem::_internal_has_uniqid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool StateItem::has_uniqid() const {
  return _internal_has_uniqid();
}
inline void StateItem::clear_uniqid() {
  uniqid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::_internal_uniqid() const {
  return uniqid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::uniqid() const {
  // @@protoc_insertion_point(field_get:msg.StateItem.uniqid)
  return _internal_uniqid();
}
inline void StateItem::_internal_set_uniqid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  uniqid_ = value;
}
inline void StateItem::set_uniqid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uniqid(value);
  // @@protoc_insertion_point(field_set:msg.StateItem.uniqid)
}

// optional uint64 lasttime = 2;
inline bool StateItem::_internal_has_lasttime() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool StateItem::has_lasttime() const {
  return _internal_has_lasttime();
}
inline void StateItem::clear_lasttime() {
  lasttime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::_internal_lasttime() const {
  return lasttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::lasttime() const {
  // @@protoc_insertion_point(field_get:msg.StateItem.lasttime)
  return _internal_lasttime();
}
inline void StateItem::_internal_set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  lasttime_ = value;
}
inline void StateItem::set_lasttime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lasttime(value);
  // @@protoc_insertion_point(field_set:msg.StateItem.lasttime)
}

// optional uint64 overtime = 3;
inline bool StateItem::_internal_has_overtime() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool StateItem::has_overtime() const {
  return _internal_has_overtime();
}
inline void StateItem::clear_overtime() {
  overtime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::_internal_overtime() const {
  return overtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::overtime() const {
  // @@protoc_insertion_point(field_get:msg.StateItem.overtime)
  return _internal_overtime();
}
inline void StateItem::_internal_set_overtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  overtime_ = value;
}
inline void StateItem::set_overtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_overtime(value);
  // @@protoc_insertion_point(field_set:msg.StateItem.overtime)
}

// optional uint64 settime = 4;
inline bool StateItem::_internal_has_settime() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool StateItem::has_settime() const {
  return _internal_has_settime();
}
inline void StateItem::clear_settime() {
  settime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::_internal_settime() const {
  return settime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::settime() const {
  // @@protoc_insertion_point(field_get:msg.StateItem.settime)
  return _internal_settime();
}
inline void StateItem::_internal_set_settime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  settime_ = value;
}
inline void StateItem::set_settime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_settime(value);
  // @@protoc_insertion_point(field_set:msg.StateItem.settime)
}

// optional uint64 configtime = 5;
inline bool StateItem::_internal_has_configtime() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool StateItem::has_configtime() const {
  return _internal_has_configtime();
}
inline void StateItem::clear_configtime() {
  configtime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::_internal_configtime() const {
  return configtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::configtime() const {
  // @@protoc_insertion_point(field_get:msg.StateItem.configtime)
  return _internal_configtime();
}
inline void StateItem::_internal_set_configtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  configtime_ = value;
}
inline void StateItem::set_configtime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_configtime(value);
  // @@protoc_insertion_point(field_set:msg.StateItem.configtime)
}

// optional uint64 skilluuid = 6;
inline bool StateItem::_internal_has_skilluuid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool StateItem::has_skilluuid() const {
  return _internal_has_skilluuid();
}
inline void StateItem::clear_skilluuid() {
  skilluuid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::_internal_skilluuid() const {
  return skilluuid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::skilluuid() const {
  // @@protoc_insertion_point(field_get:msg.StateItem.skilluuid)
  return _internal_skilluuid();
}
inline void StateItem::_internal_set_skilluuid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  skilluuid_ = value;
}
inline void StateItem::set_skilluuid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_skilluuid(value);
  // @@protoc_insertion_point(field_set:msg.StateItem.skilluuid)
}

// repeated uint64 effects = 7;
inline int StateItem::_internal_effects_size() const {
  return effects_.size();
}
inline int StateItem::effects_size() const {
  return _internal_effects_size();
}
inline void StateItem::clear_effects() {
  effects_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::_internal_effects(int index) const {
  return effects_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StateItem::effects(int index) const {
  // @@protoc_insertion_point(field_get:msg.StateItem.effects)
  return _internal_effects(index);
}
inline void StateItem::set_effects(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  effects_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.StateItem.effects)
}
inline void StateItem::_internal_add_effects(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  effects_.Add(value);
}
inline void StateItem::add_effects(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_effects(value);
  // @@protoc_insertion_point(field_add:msg.StateItem.effects)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
StateItem::_internal_effects() const {
  return effects_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
StateItem::effects() const {
  // @@protoc_insertion_point(field_list:msg.StateItem.effects)
  return _internal_effects();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
StateItem::_internal_mutable_effects() {
  return &effects_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
StateItem::mutable_effects() {
  // @@protoc_insertion_point(field_mutable_list:msg.StateItem.effects)
  return _internal_mutable_effects();
}

// -------------------------------------------------------------------

// MapUserData

// optional uint64 charid = 1;
inline bool MapUserData::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MapUserData::has_charid() const {
  return _internal_has_charid();
}
inline void MapUserData::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MapUserData::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MapUserData::charid() const {
  // @@protoc_insertion_point(field_get:msg.MapUserData.charid)
  return _internal_charid();
}
inline void MapUserData::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  charid_ = value;
}
inline void MapUserData::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MapUserData.charid)
}

// optional string name = 2;
inline bool MapUserData::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MapUserData::has_name() const {
  return _internal_has_name();
}
inline void MapUserData::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MapUserData::name() const {
  // @@protoc_insertion_point(field_get:msg.MapUserData.name)
  return _internal_name();
}
inline void MapUserData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:msg.MapUserData.name)
}
inline std::string* MapUserData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:msg.MapUserData.name)
  return _internal_mutable_name();
}
inline const std::string& MapUserData::_internal_name() const {
  return name_.GetNoArena();
}
inline void MapUserData::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MapUserData::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MapUserData.name)
}
inline void MapUserData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MapUserData.name)
}
inline void MapUserData::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MapUserData.name)
}
inline std::string* MapUserData::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MapUserData::release_name() {
  // @@protoc_insertion_point(field_release:msg.MapUserData.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MapUserData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.MapUserData.name)
}

// optional .msg.CharacterMapShow mapshow = 3;
inline bool MapUserData::_internal_has_mapshow() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || mapshow_ != nullptr);
  return value;
}
inline bool MapUserData::has_mapshow() const {
  return _internal_has_mapshow();
}
inline void MapUserData::clear_mapshow() {
  if (mapshow_ != nullptr) mapshow_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::msg::CharacterMapShow& MapUserData::_internal_mapshow() const {
  const ::msg::CharacterMapShow* p = mapshow_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::CharacterMapShow*>(
      &::msg::_CharacterMapShow_default_instance_);
}
inline const ::msg::CharacterMapShow& MapUserData::mapshow() const {
  // @@protoc_insertion_point(field_get:msg.MapUserData.mapshow)
  return _internal_mapshow();
}
inline ::msg::CharacterMapShow* MapUserData::release_mapshow() {
  // @@protoc_insertion_point(field_release:msg.MapUserData.mapshow)
  _has_bits_[0] &= ~0x00000002u;
  ::msg::CharacterMapShow* temp = mapshow_;
  mapshow_ = nullptr;
  return temp;
}
inline ::msg::CharacterMapShow* MapUserData::_internal_mutable_mapshow() {
  _has_bits_[0] |= 0x00000002u;
  if (mapshow_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::CharacterMapShow>(GetArenaNoVirtual());
    mapshow_ = p;
  }
  return mapshow_;
}
inline ::msg::CharacterMapShow* MapUserData::mutable_mapshow() {
  // @@protoc_insertion_point(field_mutable:msg.MapUserData.mapshow)
  return _internal_mutable_mapshow();
}
inline void MapUserData::set_allocated_mapshow(::msg::CharacterMapShow* mapshow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mapshow_;
  }
  if (mapshow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mapshow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mapshow, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  mapshow_ = mapshow;
  // @@protoc_insertion_point(field_set_allocated:msg.MapUserData.mapshow)
}

// optional .msg.CharacterMapShow bakhero = 4;
inline bool MapUserData::_internal_has_bakhero() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || bakhero_ != nullptr);
  return value;
}
inline bool MapUserData::has_bakhero() const {
  return _internal_has_bakhero();
}
inline void MapUserData::clear_bakhero() {
  if (bakhero_ != nullptr) bakhero_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::msg::CharacterMapShow& MapUserData::_internal_bakhero() const {
  const ::msg::CharacterMapShow* p = bakhero_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::CharacterMapShow*>(
      &::msg::_CharacterMapShow_default_instance_);
}
inline const ::msg::CharacterMapShow& MapUserData::bakhero() const {
  // @@protoc_insertion_point(field_get:msg.MapUserData.bakhero)
  return _internal_bakhero();
}
inline ::msg::CharacterMapShow* MapUserData::release_bakhero() {
  // @@protoc_insertion_point(field_release:msg.MapUserData.bakhero)
  _has_bits_[0] &= ~0x00000004u;
  ::msg::CharacterMapShow* temp = bakhero_;
  bakhero_ = nullptr;
  return temp;
}
inline ::msg::CharacterMapShow* MapUserData::_internal_mutable_bakhero() {
  _has_bits_[0] |= 0x00000004u;
  if (bakhero_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::CharacterMapShow>(GetArenaNoVirtual());
    bakhero_ = p;
  }
  return bakhero_;
}
inline ::msg::CharacterMapShow* MapUserData::mutable_bakhero() {
  // @@protoc_insertion_point(field_mutable:msg.MapUserData.bakhero)
  return _internal_mutable_bakhero();
}
inline void MapUserData::set_allocated_bakhero(::msg::CharacterMapShow* bakhero) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bakhero_;
  }
  if (bakhero) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bakhero = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bakhero, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  bakhero_ = bakhero;
  // @@protoc_insertion_point(field_set_allocated:msg.MapUserData.bakhero)
}

// optional .msg.CharacterMapData mapdata = 5;
inline bool MapUserData::_internal_has_mapdata() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || mapdata_ != nullptr);
  return value;
}
inline bool MapUserData::has_mapdata() const {
  return _internal_has_mapdata();
}
inline void MapUserData::clear_mapdata() {
  if (mapdata_ != nullptr) mapdata_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::msg::CharacterMapData& MapUserData::_internal_mapdata() const {
  const ::msg::CharacterMapData* p = mapdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::CharacterMapData*>(
      &::msg::_CharacterMapData_default_instance_);
}
inline const ::msg::CharacterMapData& MapUserData::mapdata() const {
  // @@protoc_insertion_point(field_get:msg.MapUserData.mapdata)
  return _internal_mapdata();
}
inline ::msg::CharacterMapData* MapUserData::release_mapdata() {
  // @@protoc_insertion_point(field_release:msg.MapUserData.mapdata)
  _has_bits_[0] &= ~0x00000008u;
  ::msg::CharacterMapData* temp = mapdata_;
  mapdata_ = nullptr;
  return temp;
}
inline ::msg::CharacterMapData* MapUserData::_internal_mutable_mapdata() {
  _has_bits_[0] |= 0x00000008u;
  if (mapdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::CharacterMapData>(GetArenaNoVirtual());
    mapdata_ = p;
  }
  return mapdata_;
}
inline ::msg::CharacterMapData* MapUserData::mutable_mapdata() {
  // @@protoc_insertion_point(field_mutable:msg.MapUserData.mapdata)
  return _internal_mutable_mapdata();
}
inline void MapUserData::set_allocated_mapdata(::msg::CharacterMapData* mapdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mapdata_;
  }
  if (mapdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mapdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mapdata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  mapdata_ = mapdata;
  // @@protoc_insertion_point(field_set_allocated:msg.MapUserData.mapdata)
}

// -------------------------------------------------------------------

// MasterData

// optional .msg.EntryIDType idtype = 1;
inline bool MasterData::_internal_has_idtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || idtype_ != nullptr);
  return value;
}
inline bool MasterData::has_idtype() const {
  return _internal_has_idtype();
}
inline void MasterData::clear_idtype() {
  if (idtype_ != nullptr) idtype_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::msg::EntryIDType& MasterData::_internal_idtype() const {
  const ::msg::EntryIDType* p = idtype_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MasterData::idtype() const {
  // @@protoc_insertion_point(field_get:msg.MasterData.idtype)
  return _internal_idtype();
}
inline ::msg::EntryIDType* MasterData::release_idtype() {
  // @@protoc_insertion_point(field_release:msg.MasterData.idtype)
  _has_bits_[0] &= ~0x00000002u;
  ::msg::EntryIDType* temp = idtype_;
  idtype_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MasterData::_internal_mutable_idtype() {
  _has_bits_[0] |= 0x00000002u;
  if (idtype_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    idtype_ = p;
  }
  return idtype_;
}
inline ::msg::EntryIDType* MasterData::mutable_idtype() {
  // @@protoc_insertion_point(field_mutable:msg.MasterData.idtype)
  return _internal_mutable_idtype();
}
inline void MasterData::set_allocated_idtype(::msg::EntryIDType* idtype) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete idtype_;
  }
  if (idtype) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      idtype = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, idtype, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  idtype_ = idtype;
  // @@protoc_insertion_point(field_set_allocated:msg.MasterData.idtype)
}

// optional string name = 2;
inline bool MasterData::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MasterData::has_name() const {
  return _internal_has_name();
}
inline void MasterData::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MasterData::name() const {
  // @@protoc_insertion_point(field_get:msg.MasterData.name)
  return _internal_name();
}
inline void MasterData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:msg.MasterData.name)
}
inline std::string* MasterData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:msg.MasterData.name)
  return _internal_mutable_name();
}
inline const std::string& MasterData::_internal_name() const {
  return name_.GetNoArena();
}
inline void MasterData::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MasterData::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MasterData.name)
}
inline void MasterData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MasterData.name)
}
inline void MasterData::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MasterData.name)
}
inline std::string* MasterData::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MasterData::release_name() {
  // @@protoc_insertion_point(field_release:msg.MasterData.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MasterData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.MasterData.name)
}

// optional uint32 country = 3;
inline bool MasterData::_internal_has_country() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MasterData::has_country() const {
  return _internal_has_country();
}
inline void MasterData::clear_country() {
  country_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MasterData::_internal_country() const {
  return country_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MasterData::country() const {
  // @@protoc_insertion_point(field_get:msg.MasterData.country)
  return _internal_country();
}
inline void MasterData::_internal_set_country(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  country_ = value;
}
inline void MasterData::set_country(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_country(value);
  // @@protoc_insertion_point(field_set:msg.MasterData.country)
}

// optional uint64 guildid = 4;
inline bool MasterData::_internal_has_guildid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MasterData::has_guildid() const {
  return _internal_has_guildid();
}
inline void MasterData::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MasterData::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MasterData::guildid() const {
  // @@protoc_insertion_point(field_get:msg.MasterData.guildid)
  return _internal_guildid();
}
inline void MasterData::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  guildid_ = value;
}
inline void MasterData::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:msg.MasterData.guildid)
}

// optional uint32 teamid = 5;
inline bool MasterData::_internal_has_teamid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MasterData::has_teamid() const {
  return _internal_has_teamid();
}
inline void MasterData::clear_teamid() {
  teamid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MasterData::_internal_teamid() const {
  return teamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MasterData::teamid() const {
  // @@protoc_insertion_point(field_get:msg.MasterData.teamid)
  return _internal_teamid();
}
inline void MasterData::_internal_set_teamid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  teamid_ = value;
}
inline void MasterData::set_teamid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_teamid(value);
  // @@protoc_insertion_point(field_set:msg.MasterData.teamid)
}

// -------------------------------------------------------------------

// MapNpcData

// optional uint32 baseid = 1;
inline bool MapNpcData::_internal_has_baseid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MapNpcData::has_baseid() const {
  return _internal_has_baseid();
}
inline void MapNpcData::clear_baseid() {
  baseid_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::_internal_baseid() const {
  return baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::baseid() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.baseid)
  return _internal_baseid();
}
inline void MapNpcData::_internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  baseid_ = value;
}
inline void MapNpcData::set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseid(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.baseid)
}

// optional uint64 tempid = 2;
inline bool MapNpcData::_internal_has_tempid() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MapNpcData::has_tempid() const {
  return _internal_has_tempid();
}
inline void MapNpcData::clear_tempid() {
  tempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MapNpcData::_internal_tempid() const {
  return tempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MapNpcData::tempid() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.tempid)
  return _internal_tempid();
}
inline void MapNpcData::_internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  tempid_ = value;
}
inline void MapNpcData::set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tempid(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.tempid)
}

// optional string name = 3;
inline bool MapNpcData::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MapNpcData::has_name() const {
  return _internal_has_name();
}
inline void MapNpcData::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MapNpcData::name() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.name)
  return _internal_name();
}
inline void MapNpcData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.name)
}
inline std::string* MapNpcData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:msg.MapNpcData.name)
  return _internal_mutable_name();
}
inline const std::string& MapNpcData::_internal_name() const {
  return name_.GetNoArena();
}
inline void MapNpcData::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MapNpcData::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MapNpcData.name)
}
inline void MapNpcData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MapNpcData.name)
}
inline void MapNpcData::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MapNpcData.name)
}
inline std::string* MapNpcData::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MapNpcData::release_name() {
  // @@protoc_insertion_point(field_release:msg.MapNpcData.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MapNpcData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.MapNpcData.name)
}

// optional uint32 hp = 4;
inline bool MapNpcData::_internal_has_hp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool MapNpcData::has_hp() const {
  return _internal_has_hp();
}
inline void MapNpcData::clear_hp() {
  hp_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::_internal_hp() const {
  return hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::hp() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.hp)
  return _internal_hp();
}
inline void MapNpcData::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  hp_ = value;
}
inline void MapNpcData::set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.hp)
}

// optional uint32 maxhp = 5;
inline bool MapNpcData::_internal_has_maxhp() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool MapNpcData::has_maxhp() const {
  return _internal_has_maxhp();
}
inline void MapNpcData::clear_maxhp() {
  maxhp_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::_internal_maxhp() const {
  return maxhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::maxhp() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.maxhp)
  return _internal_maxhp();
}
inline void MapNpcData::_internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  maxhp_ = value;
}
inline void MapNpcData::set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxhp(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.maxhp)
}

// optional .msg.FloatMovePos pos = 6;
inline bool MapNpcData::_internal_has_pos() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || pos_ != nullptr);
  return value;
}
inline bool MapNpcData::has_pos() const {
  return _internal_has_pos();
}
inline void MapNpcData::clear_pos() {
  if (pos_ != nullptr) pos_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::msg::FloatMovePos& MapNpcData::_internal_pos() const {
  const ::msg::FloatMovePos* p = pos_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::FloatMovePos*>(
      &::msg::_FloatMovePos_default_instance_);
}
inline const ::msg::FloatMovePos& MapNpcData::pos() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.pos)
  return _internal_pos();
}
inline ::msg::FloatMovePos* MapNpcData::release_pos() {
  // @@protoc_insertion_point(field_release:msg.MapNpcData.pos)
  _has_bits_[0] &= ~0x00000004u;
  ::msg::FloatMovePos* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::msg::FloatMovePos* MapNpcData::_internal_mutable_pos() {
  _has_bits_[0] |= 0x00000004u;
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::FloatMovePos>(GetArenaNoVirtual());
    pos_ = p;
  }
  return pos_;
}
inline ::msg::FloatMovePos* MapNpcData::mutable_pos() {
  // @@protoc_insertion_point(field_mutable:msg.MapNpcData.pos)
  return _internal_mutable_pos();
}
inline void MapNpcData::set_allocated_pos(::msg::FloatMovePos* pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pos_;
  }
  if (pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:msg.MapNpcData.pos)
}

// optional uint32 dir = 8;
inline bool MapNpcData::_internal_has_dir() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool MapNpcData::has_dir() const {
  return _internal_has_dir();
}
inline void MapNpcData::clear_dir() {
  dir_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::_internal_dir() const {
  return dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::dir() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.dir)
  return _internal_dir();
}
inline void MapNpcData::_internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  dir_ = value;
}
inline void MapNpcData::set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.dir)
}

// optional uint32 movespeed = 9;
inline bool MapNpcData::_internal_has_movespeed() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool MapNpcData::has_movespeed() const {
  return _internal_has_movespeed();
}
inline void MapNpcData::clear_movespeed() {
  movespeed_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::_internal_movespeed() const {
  return movespeed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::movespeed() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.movespeed)
  return _internal_movespeed();
}
inline void MapNpcData::_internal_set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  movespeed_ = value;
}
inline void MapNpcData::set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_movespeed(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.movespeed)
}

// optional uint32 attspeed = 10;
inline bool MapNpcData::_internal_has_attspeed() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool MapNpcData::has_attspeed() const {
  return _internal_has_attspeed();
}
inline void MapNpcData::clear_attspeed() {
  attspeed_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::_internal_attspeed() const {
  return attspeed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::attspeed() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.attspeed)
  return _internal_attspeed();
}
inline void MapNpcData::_internal_set_attspeed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  attspeed_ = value;
}
inline void MapNpcData::set_attspeed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attspeed(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.attspeed)
}

// optional .msg.MasterData master = 11;
inline bool MapNpcData::_internal_has_master() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || master_ != nullptr);
  return value;
}
inline bool MapNpcData::has_master() const {
  return _internal_has_master();
}
inline void MapNpcData::clear_master() {
  if (master_ != nullptr) master_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::msg::MasterData& MapNpcData::_internal_master() const {
  const ::msg::MasterData* p = master_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::MasterData*>(
      &::msg::_MasterData_default_instance_);
}
inline const ::msg::MasterData& MapNpcData::master() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.master)
  return _internal_master();
}
inline ::msg::MasterData* MapNpcData::release_master() {
  // @@protoc_insertion_point(field_release:msg.MapNpcData.master)
  _has_bits_[0] &= ~0x00000008u;
  ::msg::MasterData* temp = master_;
  master_ = nullptr;
  return temp;
}
inline ::msg::MasterData* MapNpcData::_internal_mutable_master() {
  _has_bits_[0] |= 0x00000008u;
  if (master_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::MasterData>(GetArenaNoVirtual());
    master_ = p;
  }
  return master_;
}
inline ::msg::MasterData* MapNpcData::mutable_master() {
  // @@protoc_insertion_point(field_mutable:msg.MapNpcData.master)
  return _internal_mutable_master();
}
inline void MapNpcData::set_allocated_master(::msg::MasterData* master) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete master_;
  }
  if (master) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      master = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, master, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  master_ = master;
  // @@protoc_insertion_point(field_set_allocated:msg.MapNpcData.master)
}

// optional uint32 visit = 12;
inline bool MapNpcData::_internal_has_visit() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool MapNpcData::has_visit() const {
  return _internal_has_visit();
}
inline void MapNpcData::clear_visit() {
  visit_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::_internal_visit() const {
  return visit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MapNpcData::visit() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.visit)
  return _internal_visit();
}
inline void MapNpcData::_internal_set_visit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  visit_ = value;
}
inline void MapNpcData::set_visit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_visit(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.visit)
}

// repeated .msg.StateItem states = 13;
inline int MapNpcData::_internal_states_size() const {
  return states_.size();
}
inline int MapNpcData::states_size() const {
  return _internal_states_size();
}
inline void MapNpcData::clear_states() {
  states_.Clear();
}
inline ::msg::StateItem* MapNpcData::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MapNpcData.states)
  return states_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >*
MapNpcData::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:msg.MapNpcData.states)
  return &states_;
}
inline const ::msg::StateItem& MapNpcData::_internal_states(int index) const {
  return states_.Get(index);
}
inline const ::msg::StateItem& MapNpcData::states(int index) const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.states)
  return _internal_states(index);
}
inline ::msg::StateItem* MapNpcData::_internal_add_states() {
  return states_.Add();
}
inline ::msg::StateItem* MapNpcData::add_states() {
  // @@protoc_insertion_point(field_add:msg.MapNpcData.states)
  return _internal_add_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >&
MapNpcData::states() const {
  // @@protoc_insertion_point(field_list:msg.MapNpcData.states)
  return states_;
}

// optional .msg.CharacterMapShow showdata = 14;
inline bool MapNpcData::_internal_has_showdata() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || showdata_ != nullptr);
  return value;
}
inline bool MapNpcData::has_showdata() const {
  return _internal_has_showdata();
}
inline void MapNpcData::clear_showdata() {
  if (showdata_ != nullptr) showdata_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::msg::CharacterMapShow& MapNpcData::_internal_showdata() const {
  const ::msg::CharacterMapShow* p = showdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::CharacterMapShow*>(
      &::msg::_CharacterMapShow_default_instance_);
}
inline const ::msg::CharacterMapShow& MapNpcData::showdata() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.showdata)
  return _internal_showdata();
}
inline ::msg::CharacterMapShow* MapNpcData::release_showdata() {
  // @@protoc_insertion_point(field_release:msg.MapNpcData.showdata)
  _has_bits_[0] &= ~0x00000010u;
  ::msg::CharacterMapShow* temp = showdata_;
  showdata_ = nullptr;
  return temp;
}
inline ::msg::CharacterMapShow* MapNpcData::_internal_mutable_showdata() {
  _has_bits_[0] |= 0x00000010u;
  if (showdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::CharacterMapShow>(GetArenaNoVirtual());
    showdata_ = p;
  }
  return showdata_;
}
inline ::msg::CharacterMapShow* MapNpcData::mutable_showdata() {
  // @@protoc_insertion_point(field_mutable:msg.MapNpcData.showdata)
  return _internal_mutable_showdata();
}
inline void MapNpcData::set_allocated_showdata(::msg::CharacterMapShow* showdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete showdata_;
  }
  if (showdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      showdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, showdata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  showdata_ = showdata;
  // @@protoc_insertion_point(field_set_allocated:msg.MapNpcData.showdata)
}

// optional string titlename = 15;
inline bool MapNpcData::_internal_has_titlename() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MapNpcData::has_titlename() const {
  return _internal_has_titlename();
}
inline void MapNpcData::clear_titlename() {
  titlename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MapNpcData::titlename() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.titlename)
  return _internal_titlename();
}
inline void MapNpcData::set_titlename(const std::string& value) {
  _internal_set_titlename(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.titlename)
}
inline std::string* MapNpcData::mutable_titlename() {
  // @@protoc_insertion_point(field_mutable:msg.MapNpcData.titlename)
  return _internal_mutable_titlename();
}
inline const std::string& MapNpcData::_internal_titlename() const {
  return titlename_.GetNoArena();
}
inline void MapNpcData::_internal_set_titlename(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  titlename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MapNpcData::set_titlename(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  titlename_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MapNpcData.titlename)
}
inline void MapNpcData::set_titlename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  titlename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MapNpcData.titlename)
}
inline void MapNpcData::set_titlename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  titlename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MapNpcData.titlename)
}
inline std::string* MapNpcData::_internal_mutable_titlename() {
  _has_bits_[0] |= 0x00000002u;
  return titlename_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MapNpcData::release_titlename() {
  // @@protoc_insertion_point(field_release:msg.MapNpcData.titlename)
  if (!_internal_has_titlename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return titlename_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MapNpcData::set_allocated_titlename(std::string* titlename) {
  if (titlename != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  titlename_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), titlename);
  // @@protoc_insertion_point(field_set_allocated:msg.MapNpcData.titlename)
}

// optional bool birth = 16 [default = false];
inline bool MapNpcData::_internal_has_birth() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool MapNpcData::has_birth() const {
  return _internal_has_birth();
}
inline void MapNpcData::clear_birth() {
  birth_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool MapNpcData::_internal_birth() const {
  return birth_;
}
inline bool MapNpcData::birth() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.birth)
  return _internal_birth();
}
inline void MapNpcData::_internal_set_birth(bool value) {
  _has_bits_[0] |= 0x00004000u;
  birth_ = value;
}
inline void MapNpcData::set_birth(bool value) {
  _internal_set_birth(value);
  // @@protoc_insertion_point(field_set:msg.MapNpcData.birth)
}

// optional .msg.NPC_HatredList hatredlist = 17;
inline bool MapNpcData::_internal_has_hatredlist() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || hatredlist_ != nullptr);
  return value;
}
inline bool MapNpcData::has_hatredlist() const {
  return _internal_has_hatredlist();
}
inline void MapNpcData::clear_hatredlist() {
  if (hatredlist_ != nullptr) hatredlist_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::msg::NPC_HatredList& MapNpcData::_internal_hatredlist() const {
  const ::msg::NPC_HatredList* p = hatredlist_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::NPC_HatredList*>(
      &::msg::_NPC_HatredList_default_instance_);
}
inline const ::msg::NPC_HatredList& MapNpcData::hatredlist() const {
  // @@protoc_insertion_point(field_get:msg.MapNpcData.hatredlist)
  return _internal_hatredlist();
}
inline ::msg::NPC_HatredList* MapNpcData::release_hatredlist() {
  // @@protoc_insertion_point(field_release:msg.MapNpcData.hatredlist)
  _has_bits_[0] &= ~0x00000020u;
  ::msg::NPC_HatredList* temp = hatredlist_;
  hatredlist_ = nullptr;
  return temp;
}
inline ::msg::NPC_HatredList* MapNpcData::_internal_mutable_hatredlist() {
  _has_bits_[0] |= 0x00000020u;
  if (hatredlist_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::NPC_HatredList>(GetArenaNoVirtual());
    hatredlist_ = p;
  }
  return hatredlist_;
}
inline ::msg::NPC_HatredList* MapNpcData::mutable_hatredlist() {
  // @@protoc_insertion_point(field_mutable:msg.MapNpcData.hatredlist)
  return _internal_mutable_hatredlist();
}
inline void MapNpcData::set_allocated_hatredlist(::msg::NPC_HatredList* hatredlist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete hatredlist_;
  }
  if (hatredlist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hatredlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hatredlist, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  hatredlist_ = hatredlist;
  // @@protoc_insertion_point(field_set_allocated:msg.MapNpcData.hatredlist)
}

// -------------------------------------------------------------------

// MSG_Create_Role_CS

// optional string name = 1;
inline bool MSG_Create_Role_CS::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Create_Role_CS::has_name() const {
  return _internal_has_name();
}
inline void MSG_Create_Role_CS::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Create_Role_CS::name() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Create_Role_CS.name)
  return _internal_name();
}
inline void MSG_Create_Role_CS::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Create_Role_CS.name)
}
inline std::string* MSG_Create_Role_CS::mutable_name() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Create_Role_CS.name)
  return _internal_mutable_name();
}
inline const std::string& MSG_Create_Role_CS::_internal_name() const {
  return name_.GetNoArena();
}
inline void MSG_Create_Role_CS::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Create_Role_CS::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_Create_Role_CS.name)
}
inline void MSG_Create_Role_CS::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_Create_Role_CS.name)
}
inline void MSG_Create_Role_CS::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_Create_Role_CS.name)
}
inline std::string* MSG_Create_Role_CS::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Create_Role_CS::release_name() {
  // @@protoc_insertion_point(field_release:msg.MSG_Create_Role_CS.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Create_Role_CS::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Create_Role_CS.name)
}

// optional uint32 occupation = 2;
inline bool MSG_Create_Role_CS::_internal_has_occupation() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Create_Role_CS::has_occupation() const {
  return _internal_has_occupation();
}
inline void MSG_Create_Role_CS::clear_occupation() {
  occupation_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::_internal_occupation() const {
  return occupation_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::occupation() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Create_Role_CS.occupation)
  return _internal_occupation();
}
inline void MSG_Create_Role_CS::_internal_set_occupation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  occupation_ = value;
}
inline void MSG_Create_Role_CS::set_occupation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_occupation(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Create_Role_CS.occupation)
}

// optional uint32 heroid = 3;
inline bool MSG_Create_Role_CS::_internal_has_heroid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Create_Role_CS::has_heroid() const {
  return _internal_has_heroid();
}
inline void MSG_Create_Role_CS::clear_heroid() {
  heroid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::_internal_heroid() const {
  return heroid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::heroid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Create_Role_CS.heroid)
  return _internal_heroid();
}
inline void MSG_Create_Role_CS::_internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  heroid_ = value;
}
inline void MSG_Create_Role_CS::set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Create_Role_CS.heroid)
}

// required .msg.SEX sex = 4;
inline bool MSG_Create_Role_CS::_internal_has_sex() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MSG_Create_Role_CS::has_sex() const {
  return _internal_has_sex();
}
inline void MSG_Create_Role_CS::clear_sex() {
  sex_ = 1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::msg::SEX MSG_Create_Role_CS::_internal_sex() const {
  return static_cast< ::msg::SEX >(sex_);
}
inline ::msg::SEX MSG_Create_Role_CS::sex() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Create_Role_CS.sex)
  return _internal_sex();
}
inline void MSG_Create_Role_CS::_internal_set_sex(::msg::SEX value) {
  assert(::msg::SEX_IsValid(value));
  _has_bits_[0] |= 0x00000080u;
  sex_ = value;
}
inline void MSG_Create_Role_CS::set_sex(::msg::SEX value) {
  _internal_set_sex(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Create_Role_CS.sex)
}

// optional uint32 facestyle = 5;
inline bool MSG_Create_Role_CS::_internal_has_facestyle() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Create_Role_CS::has_facestyle() const {
  return _internal_has_facestyle();
}
inline void MSG_Create_Role_CS::clear_facestyle() {
  facestyle_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::_internal_facestyle() const {
  return facestyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::facestyle() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Create_Role_CS.facestyle)
  return _internal_facestyle();
}
inline void MSG_Create_Role_CS::_internal_set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  facestyle_ = value;
}
inline void MSG_Create_Role_CS::set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_facestyle(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Create_Role_CS.facestyle)
}

// optional uint32 hairstyle = 6;
inline bool MSG_Create_Role_CS::_internal_has_hairstyle() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Create_Role_CS::has_hairstyle() const {
  return _internal_has_hairstyle();
}
inline void MSG_Create_Role_CS::clear_hairstyle() {
  hairstyle_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::_internal_hairstyle() const {
  return hairstyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::hairstyle() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Create_Role_CS.hairstyle)
  return _internal_hairstyle();
}
inline void MSG_Create_Role_CS::_internal_set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  hairstyle_ = value;
}
inline void MSG_Create_Role_CS::set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hairstyle(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Create_Role_CS.hairstyle)
}

// optional uint32 haircolor = 7;
inline bool MSG_Create_Role_CS::_internal_has_haircolor() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Create_Role_CS::has_haircolor() const {
  return _internal_has_haircolor();
}
inline void MSG_Create_Role_CS::clear_haircolor() {
  haircolor_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::_internal_haircolor() const {
  return haircolor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::haircolor() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Create_Role_CS.haircolor)
  return _internal_haircolor();
}
inline void MSG_Create_Role_CS::_internal_set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  haircolor_ = value;
}
inline void MSG_Create_Role_CS::set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_haircolor(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Create_Role_CS.haircolor)
}

// optional uint32 antenna = 8;
inline bool MSG_Create_Role_CS::_internal_has_antenna() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Create_Role_CS::has_antenna() const {
  return _internal_has_antenna();
}
inline void MSG_Create_Role_CS::clear_antenna() {
  antenna_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::_internal_antenna() const {
  return antenna_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Create_Role_CS::antenna() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Create_Role_CS.antenna)
  return _internal_antenna();
}
inline void MSG_Create_Role_CS::_internal_set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  antenna_ = value;
}
inline void MSG_Create_Role_CS::set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_antenna(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Create_Role_CS.antenna)
}

// -------------------------------------------------------------------

// MSG_ChangeName_CS

// optional string name = 1;
inline bool MSG_ChangeName_CS::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ChangeName_CS::has_name() const {
  return _internal_has_name();
}
inline void MSG_ChangeName_CS::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ChangeName_CS::name() const {
  // @@protoc_insertion_point(field_get:msg.MSG_ChangeName_CS.name)
  return _internal_name();
}
inline void MSG_ChangeName_CS::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:msg.MSG_ChangeName_CS.name)
}
inline std::string* MSG_ChangeName_CS::mutable_name() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_ChangeName_CS.name)
  return _internal_mutable_name();
}
inline const std::string& MSG_ChangeName_CS::_internal_name() const {
  return name_.GetNoArena();
}
inline void MSG_ChangeName_CS::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ChangeName_CS::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_ChangeName_CS.name)
}
inline void MSG_ChangeName_CS::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_ChangeName_CS.name)
}
inline void MSG_ChangeName_CS::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_ChangeName_CS.name)
}
inline std::string* MSG_ChangeName_CS::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ChangeName_CS::release_name() {
  // @@protoc_insertion_point(field_release:msg.MSG_ChangeName_CS.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ChangeName_CS::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_ChangeName_CS.name)
}

// -------------------------------------------------------------------

// MSG_Ret_ChangeName_SC

// optional string name = 1;
inline bool MSG_Ret_ChangeName_SC::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_ChangeName_SC::has_name() const {
  return _internal_has_name();
}
inline void MSG_Ret_ChangeName_SC::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_ChangeName_SC::name() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_ChangeName_SC.name)
  return _internal_name();
}
inline void MSG_Ret_ChangeName_SC::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_ChangeName_SC.name)
}
inline std::string* MSG_Ret_ChangeName_SC::mutable_name() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_ChangeName_SC.name)
  return _internal_mutable_name();
}
inline const std::string& MSG_Ret_ChangeName_SC::_internal_name() const {
  return name_.GetNoArena();
}
inline void MSG_Ret_ChangeName_SC::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_ChangeName_SC::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_Ret_ChangeName_SC.name)
}
inline void MSG_Ret_ChangeName_SC::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_Ret_ChangeName_SC.name)
}
inline void MSG_Ret_ChangeName_SC::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_Ret_ChangeName_SC.name)
}
inline std::string* MSG_Ret_ChangeName_SC::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_ChangeName_SC::release_name() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_ChangeName_SC.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_ChangeName_SC::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_ChangeName_SC.name)
}

// optional bool result = 2;
inline bool MSG_Ret_ChangeName_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_ChangeName_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_Ret_ChangeName_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Ret_ChangeName_SC::_internal_result() const {
  return result_;
}
inline bool MSG_Ret_ChangeName_SC::result() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_ChangeName_SC.result)
  return _internal_result();
}
inline void MSG_Ret_ChangeName_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void MSG_Ret_ChangeName_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_ChangeName_SC.result)
}

// -------------------------------------------------------------------

// MSG_DataCharacterMain_SC

// optional .msg.CharacterMainData data = 1;
inline bool MSG_DataCharacterMain_SC::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool MSG_DataCharacterMain_SC::has_data() const {
  return _internal_has_data();
}
inline void MSG_DataCharacterMain_SC::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::CharacterMainData& MSG_DataCharacterMain_SC::_internal_data() const {
  const ::msg::CharacterMainData* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::CharacterMainData*>(
      &::msg::_CharacterMainData_default_instance_);
}
inline const ::msg::CharacterMainData& MSG_DataCharacterMain_SC::data() const {
  // @@protoc_insertion_point(field_get:msg.MSG_DataCharacterMain_SC.data)
  return _internal_data();
}
inline ::msg::CharacterMainData* MSG_DataCharacterMain_SC::release_data() {
  // @@protoc_insertion_point(field_release:msg.MSG_DataCharacterMain_SC.data)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::CharacterMainData* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::msg::CharacterMainData* MSG_DataCharacterMain_SC::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::CharacterMainData>(GetArenaNoVirtual());
    data_ = p;
  }
  return data_;
}
inline ::msg::CharacterMainData* MSG_DataCharacterMain_SC::mutable_data() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_DataCharacterMain_SC.data)
  return _internal_mutable_data();
}
inline void MSG_DataCharacterMain_SC::set_allocated_data(::msg::CharacterMainData* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_DataCharacterMain_SC.data)
}

// -------------------------------------------------------------------

// MSG_Req_Use_GM_CS

// optional string strcontent = 1;
inline bool MSG_Req_Use_GM_CS::_internal_has_strcontent() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_Use_GM_CS::has_strcontent() const {
  return _internal_has_strcontent();
}
inline void MSG_Req_Use_GM_CS::clear_strcontent() {
  strcontent_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_Use_GM_CS::strcontent() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Use_GM_CS.strcontent)
  return _internal_strcontent();
}
inline void MSG_Req_Use_GM_CS::set_strcontent(const std::string& value) {
  _internal_set_strcontent(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Use_GM_CS.strcontent)
}
inline std::string* MSG_Req_Use_GM_CS::mutable_strcontent() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Req_Use_GM_CS.strcontent)
  return _internal_mutable_strcontent();
}
inline const std::string& MSG_Req_Use_GM_CS::_internal_strcontent() const {
  return strcontent_.GetNoArena();
}
inline void MSG_Req_Use_GM_CS::_internal_set_strcontent(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strcontent_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_Use_GM_CS::set_strcontent(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strcontent_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_Req_Use_GM_CS.strcontent)
}
inline void MSG_Req_Use_GM_CS::set_strcontent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strcontent_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_Req_Use_GM_CS.strcontent)
}
inline void MSG_Req_Use_GM_CS::set_strcontent(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strcontent_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_Req_Use_GM_CS.strcontent)
}
inline std::string* MSG_Req_Use_GM_CS::_internal_mutable_strcontent() {
  _has_bits_[0] |= 0x00000001u;
  return strcontent_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_Use_GM_CS::release_strcontent() {
  // @@protoc_insertion_point(field_release:msg.MSG_Req_Use_GM_CS.strcontent)
  if (!_internal_has_strcontent()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strcontent_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_Use_GM_CS::set_allocated_strcontent(std::string* strcontent) {
  if (strcontent != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strcontent_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strcontent);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Req_Use_GM_CS.strcontent)
}

// -------------------------------------------------------------------

// MSG_Ret_Common_Error_SC

// optional uint32 errorcode = 1;
inline bool MSG_Ret_Common_Error_SC::_internal_has_errorcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_Common_Error_SC::has_errorcode() const {
  return _internal_has_errorcode();
}
inline void MSG_Ret_Common_Error_SC::clear_errorcode() {
  errorcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Common_Error_SC::_internal_errorcode() const {
  return errorcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Common_Error_SC::errorcode() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Common_Error_SC.errorcode)
  return _internal_errorcode();
}
inline void MSG_Ret_Common_Error_SC::_internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  errorcode_ = value;
}
inline void MSG_Ret_Common_Error_SC::set_errorcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Common_Error_SC.errorcode)
}

// -------------------------------------------------------------------

// MSG_Ret_Common_Tips_SC

// optional string strcontent = 1;
inline bool MSG_Ret_Common_Tips_SC::_internal_has_strcontent() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_Common_Tips_SC::has_strcontent() const {
  return _internal_has_strcontent();
}
inline void MSG_Ret_Common_Tips_SC::clear_strcontent() {
  strcontent_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_Common_Tips_SC::strcontent() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Common_Tips_SC.strcontent)
  return _internal_strcontent();
}
inline void MSG_Ret_Common_Tips_SC::set_strcontent(const std::string& value) {
  _internal_set_strcontent(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Common_Tips_SC.strcontent)
}
inline std::string* MSG_Ret_Common_Tips_SC::mutable_strcontent() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_Common_Tips_SC.strcontent)
  return _internal_mutable_strcontent();
}
inline const std::string& MSG_Ret_Common_Tips_SC::_internal_strcontent() const {
  return strcontent_.GetNoArena();
}
inline void MSG_Ret_Common_Tips_SC::_internal_set_strcontent(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strcontent_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_Common_Tips_SC::set_strcontent(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  strcontent_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_Ret_Common_Tips_SC.strcontent)
}
inline void MSG_Ret_Common_Tips_SC::set_strcontent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  strcontent_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_Ret_Common_Tips_SC.strcontent)
}
inline void MSG_Ret_Common_Tips_SC::set_strcontent(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  strcontent_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_Ret_Common_Tips_SC.strcontent)
}
inline std::string* MSG_Ret_Common_Tips_SC::_internal_mutable_strcontent() {
  _has_bits_[0] |= 0x00000001u;
  return strcontent_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_Common_Tips_SC::release_strcontent() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_Common_Tips_SC.strcontent)
  if (!_internal_has_strcontent()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return strcontent_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_Common_Tips_SC::set_allocated_strcontent(std::string* strcontent) {
  if (strcontent != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strcontent_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strcontent);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_Common_Tips_SC.strcontent)
}

// -------------------------------------------------------------------

// MSG_Req_Main_Data_CS

// -------------------------------------------------------------------

// MSG_Req_Test_Network_CS

// optional uint32 num = 1;
inline bool MSG_Req_Test_Network_CS::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_Test_Network_CS::has_num() const {
  return _internal_has_num();
}
inline void MSG_Req_Test_Network_CS::clear_num() {
  num_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Test_Network_CS::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Test_Network_CS::num() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Test_Network_CS.num)
  return _internal_num();
}
inline void MSG_Req_Test_Network_CS::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_ = value;
}
inline void MSG_Req_Test_Network_CS::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Test_Network_CS.num)
}

// optional string name = 2;
inline bool MSG_Req_Test_Network_CS::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_Test_Network_CS::has_name() const {
  return _internal_has_name();
}
inline void MSG_Req_Test_Network_CS::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_Test_Network_CS::name() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Test_Network_CS.name)
  return _internal_name();
}
inline void MSG_Req_Test_Network_CS::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Test_Network_CS.name)
}
inline std::string* MSG_Req_Test_Network_CS::mutable_name() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Req_Test_Network_CS.name)
  return _internal_mutable_name();
}
inline const std::string& MSG_Req_Test_Network_CS::_internal_name() const {
  return name_.GetNoArena();
}
inline void MSG_Req_Test_Network_CS::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_Test_Network_CS::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_Req_Test_Network_CS.name)
}
inline void MSG_Req_Test_Network_CS::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_Req_Test_Network_CS.name)
}
inline void MSG_Req_Test_Network_CS::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_Req_Test_Network_CS.name)
}
inline std::string* MSG_Req_Test_Network_CS::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_Test_Network_CS::release_name() {
  // @@protoc_insertion_point(field_release:msg.MSG_Req_Test_Network_CS.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_Test_Network_CS::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Req_Test_Network_CS.name)
}

// repeated uint32 num2 = 3;
inline int MSG_Req_Test_Network_CS::_internal_num2_size() const {
  return num2_.size();
}
inline int MSG_Req_Test_Network_CS::num2_size() const {
  return _internal_num2_size();
}
inline void MSG_Req_Test_Network_CS::clear_num2() {
  num2_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Test_Network_CS::_internal_num2(int index) const {
  return num2_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Test_Network_CS::num2(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Test_Network_CS.num2)
  return _internal_num2(index);
}
inline void MSG_Req_Test_Network_CS::set_num2(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  num2_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Test_Network_CS.num2)
}
inline void MSG_Req_Test_Network_CS::_internal_add_num2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  num2_.Add(value);
}
inline void MSG_Req_Test_Network_CS::add_num2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_num2(value);
  // @@protoc_insertion_point(field_add:msg.MSG_Req_Test_Network_CS.num2)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_Req_Test_Network_CS::_internal_num2() const {
  return num2_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_Req_Test_Network_CS::num2() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Req_Test_Network_CS.num2)
  return _internal_num2();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_Req_Test_Network_CS::_internal_mutable_num2() {
  return &num2_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_Req_Test_Network_CS::mutable_num2() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Req_Test_Network_CS.num2)
  return _internal_mutable_num2();
}

// -------------------------------------------------------------------

// MSG_Ret_GameTime_SC

// optional uint64 gametime = 1;
inline bool MSG_Ret_GameTime_SC::_internal_has_gametime() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GameTime_SC::has_gametime() const {
  return _internal_has_gametime();
}
inline void MSG_Ret_GameTime_SC::clear_gametime() {
  gametime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_GameTime_SC::_internal_gametime() const {
  return gametime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_GameTime_SC::gametime() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_GameTime_SC.gametime)
  return _internal_gametime();
}
inline void MSG_Ret_GameTime_SC::_internal_set_gametime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  gametime_ = value;
}
inline void MSG_Ret_GameTime_SC::set_gametime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gametime(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_GameTime_SC.gametime)
}

// -------------------------------------------------------------------

// MSG_Req_UserGameTime_SC

// -------------------------------------------------------------------

// MSG_Ret_UserGameTime_CS

// optional uint32 usertempid = 1;
inline bool MSG_Ret_UserGameTime_CS::_internal_has_usertempid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_UserGameTime_CS::has_usertempid() const {
  return _internal_has_usertempid();
}
inline void MSG_Ret_UserGameTime_CS::clear_usertempid() {
  usertempid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserGameTime_CS::_internal_usertempid() const {
  return usertempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserGameTime_CS::usertempid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_UserGameTime_CS.usertempid)
  return _internal_usertempid();
}
inline void MSG_Ret_UserGameTime_CS::_internal_set_usertempid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  usertempid_ = value;
}
inline void MSG_Ret_UserGameTime_CS::set_usertempid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_usertempid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_UserGameTime_CS.usertempid)
}

// optional uint64 gametime = 2;
inline bool MSG_Ret_UserGameTime_CS::_internal_has_gametime() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_UserGameTime_CS::has_gametime() const {
  return _internal_has_gametime();
}
inline void MSG_Ret_UserGameTime_CS::clear_gametime() {
  gametime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_UserGameTime_CS::_internal_gametime() const {
  return gametime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_UserGameTime_CS::gametime() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_UserGameTime_CS.gametime)
  return _internal_gametime();
}
inline void MSG_Ret_UserGameTime_CS::_internal_set_gametime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  gametime_ = value;
}
inline void MSG_Ret_UserGameTime_CS::set_gametime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gametime(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_UserGameTime_CS.gametime)
}

// -------------------------------------------------------------------

// MSG_Ret_ServerTime_SC

// optional uint64 servertime = 1;
inline bool MSG_Ret_ServerTime_SC::_internal_has_servertime() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_ServerTime_SC::has_servertime() const {
  return _internal_has_servertime();
}
inline void MSG_Ret_ServerTime_SC::clear_servertime() {
  servertime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_ServerTime_SC::_internal_servertime() const {
  return servertime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_ServerTime_SC::servertime() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_ServerTime_SC.servertime)
  return _internal_servertime();
}
inline void MSG_Ret_ServerTime_SC::_internal_set_servertime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  servertime_ = value;
}
inline void MSG_Ret_ServerTime_SC::set_servertime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_servertime(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_ServerTime_SC.servertime)
}

// -------------------------------------------------------------------

// MSG_Ret_NotifyUserKickout_SC

// -------------------------------------------------------------------

// MSG_Ret_ServerLoginFailed_SC

// optional uint32 returncode = 1;
inline bool MSG_Ret_ServerLoginFailed_SC::_internal_has_returncode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_ServerLoginFailed_SC::has_returncode() const {
  return _internal_has_returncode();
}
inline void MSG_Ret_ServerLoginFailed_SC::clear_returncode() {
  returncode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_ServerLoginFailed_SC::_internal_returncode() const {
  return returncode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_ServerLoginFailed_SC::returncode() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_ServerLoginFailed_SC.returncode)
  return _internal_returncode();
}
inline void MSG_Ret_ServerLoginFailed_SC::_internal_set_returncode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  returncode_ = value;
}
inline void MSG_Ret_ServerLoginFailed_SC::set_returncode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_returncode(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_ServerLoginFailed_SC.returncode)
}

// -------------------------------------------------------------------

// MSG_Ret_QueueInfo_SC

// optional uint32 queue_user_num = 1;
inline bool MSG_Ret_QueueInfo_SC::_internal_has_queue_user_num() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_QueueInfo_SC::has_queue_user_num() const {
  return _internal_has_queue_user_num();
}
inline void MSG_Ret_QueueInfo_SC::clear_queue_user_num() {
  queue_user_num_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QueueInfo_SC::_internal_queue_user_num() const {
  return queue_user_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QueueInfo_SC::queue_user_num() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_QueueInfo_SC.queue_user_num)
  return _internal_queue_user_num();
}
inline void MSG_Ret_QueueInfo_SC::_internal_set_queue_user_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  queue_user_num_ = value;
}
inline void MSG_Ret_QueueInfo_SC::set_queue_user_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_queue_user_num(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_QueueInfo_SC.queue_user_num)
}

// optional uint32 queue_wait_time = 2;
inline bool MSG_Ret_QueueInfo_SC::_internal_has_queue_wait_time() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_QueueInfo_SC::has_queue_wait_time() const {
  return _internal_has_queue_wait_time();
}
inline void MSG_Ret_QueueInfo_SC::clear_queue_wait_time() {
  queue_wait_time_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QueueInfo_SC::_internal_queue_wait_time() const {
  return queue_wait_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QueueInfo_SC::queue_wait_time() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_QueueInfo_SC.queue_wait_time)
  return _internal_queue_wait_time();
}
inline void MSG_Ret_QueueInfo_SC::_internal_set_queue_wait_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  queue_wait_time_ = value;
}
inline void MSG_Ret_QueueInfo_SC::set_queue_wait_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_queue_wait_time(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_QueueInfo_SC.queue_wait_time)
}

// -------------------------------------------------------------------

// MSG_Ret_UserMapInfo_SC

// optional uint32 mapid = 1;
inline bool MSG_Ret_UserMapInfo_SC::_internal_has_mapid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_UserMapInfo_SC::has_mapid() const {
  return _internal_has_mapid();
}
inline void MSG_Ret_UserMapInfo_SC::clear_mapid() {
  mapid_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserMapInfo_SC::_internal_mapid() const {
  return mapid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserMapInfo_SC::mapid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_UserMapInfo_SC.mapid)
  return _internal_mapid();
}
inline void MSG_Ret_UserMapInfo_SC::_internal_set_mapid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  mapid_ = value;
}
inline void MSG_Ret_UserMapInfo_SC::set_mapid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mapid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_UserMapInfo_SC.mapid)
}

// optional string mapname = 2;
inline bool MSG_Ret_UserMapInfo_SC::_internal_has_mapname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_UserMapInfo_SC::has_mapname() const {
  return _internal_has_mapname();
}
inline void MSG_Ret_UserMapInfo_SC::clear_mapname() {
  mapname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_UserMapInfo_SC::mapname() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_UserMapInfo_SC.mapname)
  return _internal_mapname();
}
inline void MSG_Ret_UserMapInfo_SC::set_mapname(const std::string& value) {
  _internal_set_mapname(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_UserMapInfo_SC.mapname)
}
inline std::string* MSG_Ret_UserMapInfo_SC::mutable_mapname() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_UserMapInfo_SC.mapname)
  return _internal_mutable_mapname();
}
inline const std::string& MSG_Ret_UserMapInfo_SC::_internal_mapname() const {
  return mapname_.GetNoArena();
}
inline void MSG_Ret_UserMapInfo_SC::_internal_set_mapname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_UserMapInfo_SC::set_mapname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_Ret_UserMapInfo_SC.mapname)
}
inline void MSG_Ret_UserMapInfo_SC::set_mapname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_Ret_UserMapInfo_SC.mapname)
}
inline void MSG_Ret_UserMapInfo_SC::set_mapname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  mapname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_Ret_UserMapInfo_SC.mapname)
}
inline std::string* MSG_Ret_UserMapInfo_SC::_internal_mutable_mapname() {
  _has_bits_[0] |= 0x00000001u;
  return mapname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_UserMapInfo_SC::release_mapname() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_UserMapInfo_SC.mapname)
  if (!_internal_has_mapname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return mapname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_UserMapInfo_SC::set_allocated_mapname(std::string* mapname) {
  if (mapname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mapname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mapname);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_UserMapInfo_SC.mapname)
}

// optional string filename = 3;
inline bool MSG_Ret_UserMapInfo_SC::_internal_has_filename() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_UserMapInfo_SC::has_filename() const {
  return _internal_has_filename();
}
inline void MSG_Ret_UserMapInfo_SC::clear_filename() {
  filename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_Ret_UserMapInfo_SC::filename() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_UserMapInfo_SC.filename)
  return _internal_filename();
}
inline void MSG_Ret_UserMapInfo_SC::set_filename(const std::string& value) {
  _internal_set_filename(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_UserMapInfo_SC.filename)
}
inline std::string* MSG_Ret_UserMapInfo_SC::mutable_filename() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_UserMapInfo_SC.filename)
  return _internal_mutable_filename();
}
inline const std::string& MSG_Ret_UserMapInfo_SC::_internal_filename() const {
  return filename_.GetNoArena();
}
inline void MSG_Ret_UserMapInfo_SC::_internal_set_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_UserMapInfo_SC::set_filename(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_Ret_UserMapInfo_SC.filename)
}
inline void MSG_Ret_UserMapInfo_SC::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_Ret_UserMapInfo_SC.filename)
}
inline void MSG_Ret_UserMapInfo_SC::set_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_Ret_UserMapInfo_SC.filename)
}
inline std::string* MSG_Ret_UserMapInfo_SC::_internal_mutable_filename() {
  _has_bits_[0] |= 0x00000002u;
  return filename_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_UserMapInfo_SC::release_filename() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_UserMapInfo_SC.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return filename_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_UserMapInfo_SC::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  filename_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_UserMapInfo_SC.filename)
}

// optional .msg.FloatMovePos pos = 4;
inline bool MSG_Ret_UserMapInfo_SC::_internal_has_pos() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || pos_ != nullptr);
  return value;
}
inline bool MSG_Ret_UserMapInfo_SC::has_pos() const {
  return _internal_has_pos();
}
inline void MSG_Ret_UserMapInfo_SC::clear_pos() {
  if (pos_ != nullptr) pos_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::msg::FloatMovePos& MSG_Ret_UserMapInfo_SC::_internal_pos() const {
  const ::msg::FloatMovePos* p = pos_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::FloatMovePos*>(
      &::msg::_FloatMovePos_default_instance_);
}
inline const ::msg::FloatMovePos& MSG_Ret_UserMapInfo_SC::pos() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_UserMapInfo_SC.pos)
  return _internal_pos();
}
inline ::msg::FloatMovePos* MSG_Ret_UserMapInfo_SC::release_pos() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_UserMapInfo_SC.pos)
  _has_bits_[0] &= ~0x00000004u;
  ::msg::FloatMovePos* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::msg::FloatMovePos* MSG_Ret_UserMapInfo_SC::_internal_mutable_pos() {
  _has_bits_[0] |= 0x00000004u;
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::FloatMovePos>(GetArenaNoVirtual());
    pos_ = p;
  }
  return pos_;
}
inline ::msg::FloatMovePos* MSG_Ret_UserMapInfo_SC::mutable_pos() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_UserMapInfo_SC.pos)
  return _internal_mutable_pos();
}
inline void MSG_Ret_UserMapInfo_SC::set_allocated_pos(::msg::FloatMovePos* pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pos_;
  }
  if (pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_UserMapInfo_SC.pos)
}

// optional uint32 lineid = 5;
inline bool MSG_Ret_UserMapInfo_SC::_internal_has_lineid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_UserMapInfo_SC::has_lineid() const {
  return _internal_has_lineid();
}
inline void MSG_Ret_UserMapInfo_SC::clear_lineid() {
  lineid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserMapInfo_SC::_internal_lineid() const {
  return lineid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserMapInfo_SC::lineid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_UserMapInfo_SC.lineid)
  return _internal_lineid();
}
inline void MSG_Ret_UserMapInfo_SC::_internal_set_lineid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  lineid_ = value;
}
inline void MSG_Ret_UserMapInfo_SC::set_lineid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lineid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_UserMapInfo_SC.lineid)
}

// optional uint32 copymapidx = 6;
inline bool MSG_Ret_UserMapInfo_SC::_internal_has_copymapidx() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Ret_UserMapInfo_SC::has_copymapidx() const {
  return _internal_has_copymapidx();
}
inline void MSG_Ret_UserMapInfo_SC::clear_copymapidx() {
  copymapidx_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserMapInfo_SC::_internal_copymapidx() const {
  return copymapidx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserMapInfo_SC::copymapidx() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_UserMapInfo_SC.copymapidx)
  return _internal_copymapidx();
}
inline void MSG_Ret_UserMapInfo_SC::_internal_set_copymapidx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  copymapidx_ = value;
}
inline void MSG_Ret_UserMapInfo_SC::set_copymapidx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_copymapidx(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_UserMapInfo_SC.copymapidx)
}

// optional uint32 subcopymapidx = 7;
inline bool MSG_Ret_UserMapInfo_SC::_internal_has_subcopymapidx() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Ret_UserMapInfo_SC::has_subcopymapidx() const {
  return _internal_has_subcopymapidx();
}
inline void MSG_Ret_UserMapInfo_SC::clear_subcopymapidx() {
  subcopymapidx_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserMapInfo_SC::_internal_subcopymapidx() const {
  return subcopymapidx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserMapInfo_SC::subcopymapidx() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_UserMapInfo_SC.subcopymapidx)
  return _internal_subcopymapidx();
}
inline void MSG_Ret_UserMapInfo_SC::_internal_set_subcopymapidx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  subcopymapidx_ = value;
}
inline void MSG_Ret_UserMapInfo_SC::set_subcopymapidx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subcopymapidx(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_UserMapInfo_SC.subcopymapidx)
}

// optional uint64 sceneid = 8;
inline bool MSG_Ret_UserMapInfo_SC::_internal_has_sceneid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MSG_Ret_UserMapInfo_SC::has_sceneid() const {
  return _internal_has_sceneid();
}
inline void MSG_Ret_UserMapInfo_SC::clear_sceneid() {
  sceneid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_UserMapInfo_SC::_internal_sceneid() const {
  return sceneid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_UserMapInfo_SC::sceneid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_UserMapInfo_SC.sceneid)
  return _internal_sceneid();
}
inline void MSG_Ret_UserMapInfo_SC::_internal_set_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  sceneid_ = value;
}
inline void MSG_Ret_UserMapInfo_SC::set_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sceneid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_UserMapInfo_SC.sceneid)
}

// -------------------------------------------------------------------

// MSG_Ret_NineScreenRefreshPlayer_SC

// repeated .msg.MapUserData data = 1;
inline int MSG_Ret_NineScreenRefreshPlayer_SC::_internal_data_size() const {
  return data_.size();
}
inline int MSG_Ret_NineScreenRefreshPlayer_SC::data_size() const {
  return _internal_data_size();
}
inline void MSG_Ret_NineScreenRefreshPlayer_SC::clear_data() {
  data_.Clear();
}
inline ::msg::MapUserData* MSG_Ret_NineScreenRefreshPlayer_SC::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_NineScreenRefreshPlayer_SC.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MapUserData >*
MSG_Ret_NineScreenRefreshPlayer_SC::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_NineScreenRefreshPlayer_SC.data)
  return &data_;
}
inline const ::msg::MapUserData& MSG_Ret_NineScreenRefreshPlayer_SC::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::msg::MapUserData& MSG_Ret_NineScreenRefreshPlayer_SC::data(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_NineScreenRefreshPlayer_SC.data)
  return _internal_data(index);
}
inline ::msg::MapUserData* MSG_Ret_NineScreenRefreshPlayer_SC::_internal_add_data() {
  return data_.Add();
}
inline ::msg::MapUserData* MSG_Ret_NineScreenRefreshPlayer_SC::add_data() {
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_NineScreenRefreshPlayer_SC.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MapUserData >&
MSG_Ret_NineScreenRefreshPlayer_SC::data() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_NineScreenRefreshPlayer_SC.data)
  return data_;
}

// -------------------------------------------------------------------

// MSG_Ret_MapScreenRefreshCharacter_SC

// optional .msg.MapUserData data = 1;
inline bool MSG_Ret_MapScreenRefreshCharacter_SC::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool MSG_Ret_MapScreenRefreshCharacter_SC::has_data() const {
  return _internal_has_data();
}
inline void MSG_Ret_MapScreenRefreshCharacter_SC::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::MapUserData& MSG_Ret_MapScreenRefreshCharacter_SC::_internal_data() const {
  const ::msg::MapUserData* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::MapUserData*>(
      &::msg::_MapUserData_default_instance_);
}
inline const ::msg::MapUserData& MSG_Ret_MapScreenRefreshCharacter_SC::data() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_MapScreenRefreshCharacter_SC.data)
  return _internal_data();
}
inline ::msg::MapUserData* MSG_Ret_MapScreenRefreshCharacter_SC::release_data() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_MapScreenRefreshCharacter_SC.data)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::MapUserData* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::msg::MapUserData* MSG_Ret_MapScreenRefreshCharacter_SC::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::MapUserData>(GetArenaNoVirtual());
    data_ = p;
  }
  return data_;
}
inline ::msg::MapUserData* MSG_Ret_MapScreenRefreshCharacter_SC::mutable_data() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_MapScreenRefreshCharacter_SC.data)
  return _internal_mutable_data();
}
inline void MSG_Ret_MapScreenRefreshCharacter_SC::set_allocated_data(::msg::MapUserData* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_MapScreenRefreshCharacter_SC.data)
}

// -------------------------------------------------------------------

// MSG_Ret_MapScreenRemoveCharacter_SC

// optional uint64 charid = 1;
inline bool MSG_Ret_MapScreenRemoveCharacter_SC::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_MapScreenRemoveCharacter_SC::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_Ret_MapScreenRemoveCharacter_SC::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MapScreenRemoveCharacter_SC::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MapScreenRemoveCharacter_SC::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_MapScreenRemoveCharacter_SC.charid)
  return _internal_charid();
}
inline void MSG_Ret_MapScreenRemoveCharacter_SC::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  charid_ = value;
}
inline void MSG_Ret_MapScreenRemoveCharacter_SC::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_MapScreenRemoveCharacter_SC.charid)
}

// -------------------------------------------------------------------

// MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC

// optional uint64 charid = 1;
inline bool MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC.charid)
  return _internal_charid();
}
inline void MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  charid_ = value;
}
inline void MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_MapScreenRemoveCharacterShowCorpse_SC.charid)
}

// -------------------------------------------------------------------

// MSG_Ret_MapScreenBatchRemoveCharacter_SC

// repeated uint64 charids = 1;
inline int MSG_Ret_MapScreenBatchRemoveCharacter_SC::_internal_charids_size() const {
  return charids_.size();
}
inline int MSG_Ret_MapScreenBatchRemoveCharacter_SC::charids_size() const {
  return _internal_charids_size();
}
inline void MSG_Ret_MapScreenBatchRemoveCharacter_SC::clear_charids() {
  charids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MapScreenBatchRemoveCharacter_SC::_internal_charids(int index) const {
  return charids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MapScreenBatchRemoveCharacter_SC::charids(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_MapScreenBatchRemoveCharacter_SC.charids)
  return _internal_charids(index);
}
inline void MSG_Ret_MapScreenBatchRemoveCharacter_SC::set_charids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  charids_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_MapScreenBatchRemoveCharacter_SC.charids)
}
inline void MSG_Ret_MapScreenBatchRemoveCharacter_SC::_internal_add_charids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  charids_.Add(value);
}
inline void MSG_Ret_MapScreenBatchRemoveCharacter_SC::add_charids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_charids(value);
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_MapScreenBatchRemoveCharacter_SC.charids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
MSG_Ret_MapScreenBatchRemoveCharacter_SC::_internal_charids() const {
  return charids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
MSG_Ret_MapScreenBatchRemoveCharacter_SC::charids() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_MapScreenBatchRemoveCharacter_SC.charids)
  return _internal_charids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
MSG_Ret_MapScreenBatchRemoveCharacter_SC::_internal_mutable_charids() {
  return &charids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
MSG_Ret_MapScreenBatchRemoveCharacter_SC::mutable_charids() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_MapScreenBatchRemoveCharacter_SC.charids)
  return _internal_mutable_charids();
}

// -------------------------------------------------------------------

// MSG_Ret_StateList_SC

// repeated .msg.StateItem states = 1;
inline int MSG_Ret_StateList_SC::_internal_states_size() const {
  return states_.size();
}
inline int MSG_Ret_StateList_SC::states_size() const {
  return _internal_states_size();
}
inline void MSG_Ret_StateList_SC::clear_states() {
  states_.Clear();
}
inline ::msg::StateItem* MSG_Ret_StateList_SC::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_StateList_SC.states)
  return states_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >*
MSG_Ret_StateList_SC::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_StateList_SC.states)
  return &states_;
}
inline const ::msg::StateItem& MSG_Ret_StateList_SC::_internal_states(int index) const {
  return states_.Get(index);
}
inline const ::msg::StateItem& MSG_Ret_StateList_SC::states(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_StateList_SC.states)
  return _internal_states(index);
}
inline ::msg::StateItem* MSG_Ret_StateList_SC::_internal_add_states() {
  return states_.Add();
}
inline ::msg::StateItem* MSG_Ret_StateList_SC::add_states() {
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_StateList_SC.states)
  return _internal_add_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >&
MSG_Ret_StateList_SC::states() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_StateList_SC.states)
  return states_;
}

// -------------------------------------------------------------------

// FloatMovePos

// optional float fx = 1;
inline bool FloatMovePos::_internal_has_fx() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool FloatMovePos::has_fx() const {
  return _internal_has_fx();
}
inline void FloatMovePos::clear_fx() {
  fx_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float FloatMovePos::_internal_fx() const {
  return fx_;
}
inline float FloatMovePos::fx() const {
  // @@protoc_insertion_point(field_get:msg.FloatMovePos.fx)
  return _internal_fx();
}
inline void FloatMovePos::_internal_set_fx(float value) {
  _has_bits_[0] |= 0x00000001u;
  fx_ = value;
}
inline void FloatMovePos::set_fx(float value) {
  _internal_set_fx(value);
  // @@protoc_insertion_point(field_set:msg.FloatMovePos.fx)
}

// optional float fy = 2;
inline bool FloatMovePos::_internal_has_fy() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool FloatMovePos::has_fy() const {
  return _internal_has_fy();
}
inline void FloatMovePos::clear_fy() {
  fy_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float FloatMovePos::_internal_fy() const {
  return fy_;
}
inline float FloatMovePos::fy() const {
  // @@protoc_insertion_point(field_get:msg.FloatMovePos.fy)
  return _internal_fy();
}
inline void FloatMovePos::_internal_set_fy(float value) {
  _has_bits_[0] |= 0x00000002u;
  fy_ = value;
}
inline void FloatMovePos::set_fy(float value) {
  _internal_set_fy(value);
  // @@protoc_insertion_point(field_set:msg.FloatMovePos.fy)
}

// -------------------------------------------------------------------

// MoveData

// optional .msg.FloatMovePos pos = 1;
inline bool MoveData::_internal_has_pos() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || pos_ != nullptr);
  return value;
}
inline bool MoveData::has_pos() const {
  return _internal_has_pos();
}
inline void MoveData::clear_pos() {
  if (pos_ != nullptr) pos_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::FloatMovePos& MoveData::_internal_pos() const {
  const ::msg::FloatMovePos* p = pos_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::FloatMovePos*>(
      &::msg::_FloatMovePos_default_instance_);
}
inline const ::msg::FloatMovePos& MoveData::pos() const {
  // @@protoc_insertion_point(field_get:msg.MoveData.pos)
  return _internal_pos();
}
inline ::msg::FloatMovePos* MoveData::release_pos() {
  // @@protoc_insertion_point(field_release:msg.MoveData.pos)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::FloatMovePos* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::msg::FloatMovePos* MoveData::_internal_mutable_pos() {
  _has_bits_[0] |= 0x00000001u;
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::FloatMovePos>(GetArenaNoVirtual());
    pos_ = p;
  }
  return pos_;
}
inline ::msg::FloatMovePos* MoveData::mutable_pos() {
  // @@protoc_insertion_point(field_mutable:msg.MoveData.pos)
  return _internal_mutable_pos();
}
inline void MoveData::set_allocated_pos(::msg::FloatMovePos* pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pos_;
  }
  if (pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:msg.MoveData.pos)
}

// optional uint32 dir = 4;
inline bool MoveData::_internal_has_dir() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MoveData::has_dir() const {
  return _internal_has_dir();
}
inline void MoveData::clear_dir() {
  dir_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MoveData::_internal_dir() const {
  return dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MoveData::dir() const {
  // @@protoc_insertion_point(field_get:msg.MoveData.dir)
  return _internal_dir();
}
inline void MoveData::_internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  dir_ = value;
}
inline void MoveData::set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:msg.MoveData.dir)
}

// -------------------------------------------------------------------

// MSG_Req_Move_CS

// optional uint64 charid = 1;
inline bool MSG_Req_Move_CS::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_Move_CS::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_Req_Move_CS::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_Move_CS::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_Move_CS::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Move_CS.charid)
  return _internal_charid();
}
inline void MSG_Req_Move_CS::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  charid_ = value;
}
inline void MSG_Req_Move_CS::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Move_CS.charid)
}

// repeated .msg.MoveData movedata = 2;
inline int MSG_Req_Move_CS::_internal_movedata_size() const {
  return movedata_.size();
}
inline int MSG_Req_Move_CS::movedata_size() const {
  return _internal_movedata_size();
}
inline void MSG_Req_Move_CS::clear_movedata() {
  movedata_.Clear();
}
inline ::msg::MoveData* MSG_Req_Move_CS::mutable_movedata(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Req_Move_CS.movedata)
  return movedata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >*
MSG_Req_Move_CS::mutable_movedata() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Req_Move_CS.movedata)
  return &movedata_;
}
inline const ::msg::MoveData& MSG_Req_Move_CS::_internal_movedata(int index) const {
  return movedata_.Get(index);
}
inline const ::msg::MoveData& MSG_Req_Move_CS::movedata(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Move_CS.movedata)
  return _internal_movedata(index);
}
inline ::msg::MoveData* MSG_Req_Move_CS::_internal_add_movedata() {
  return movedata_.Add();
}
inline ::msg::MoveData* MSG_Req_Move_CS::add_movedata() {
  // @@protoc_insertion_point(field_add:msg.MSG_Req_Move_CS.movedata)
  return _internal_add_movedata();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >&
MSG_Req_Move_CS::movedata() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Req_Move_CS.movedata)
  return movedata_;
}

// optional uint32 steplenth = 3;
inline bool MSG_Req_Move_CS::_internal_has_steplenth() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_Move_CS::has_steplenth() const {
  return _internal_has_steplenth();
}
inline void MSG_Req_Move_CS::clear_steplenth() {
  steplenth_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Move_CS::_internal_steplenth() const {
  return steplenth_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Move_CS::steplenth() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Move_CS.steplenth)
  return _internal_steplenth();
}
inline void MSG_Req_Move_CS::_internal_set_steplenth(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  steplenth_ = value;
}
inline void MSG_Req_Move_CS::set_steplenth(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_steplenth(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Move_CS.steplenth)
}

// -------------------------------------------------------------------

// MSG_Ret_Move_SC

// optional uint64 charid = 1;
inline bool MSG_Ret_Move_SC::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_Move_SC::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_Ret_Move_SC::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_Move_SC::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_Move_SC::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Move_SC.charid)
  return _internal_charid();
}
inline void MSG_Ret_Move_SC::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  charid_ = value;
}
inline void MSG_Ret_Move_SC::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Move_SC.charid)
}

// repeated .msg.MoveData movedata = 2;
inline int MSG_Ret_Move_SC::_internal_movedata_size() const {
  return movedata_.size();
}
inline int MSG_Ret_Move_SC::movedata_size() const {
  return _internal_movedata_size();
}
inline void MSG_Ret_Move_SC::clear_movedata() {
  movedata_.Clear();
}
inline ::msg::MoveData* MSG_Ret_Move_SC::mutable_movedata(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_Move_SC.movedata)
  return movedata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >*
MSG_Ret_Move_SC::mutable_movedata() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_Move_SC.movedata)
  return &movedata_;
}
inline const ::msg::MoveData& MSG_Ret_Move_SC::_internal_movedata(int index) const {
  return movedata_.Get(index);
}
inline const ::msg::MoveData& MSG_Ret_Move_SC::movedata(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Move_SC.movedata)
  return _internal_movedata(index);
}
inline ::msg::MoveData* MSG_Ret_Move_SC::_internal_add_movedata() {
  return movedata_.Add();
}
inline ::msg::MoveData* MSG_Ret_Move_SC::add_movedata() {
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_Move_SC.movedata)
  return _internal_add_movedata();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >&
MSG_Ret_Move_SC::movedata() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_Move_SC.movedata)
  return movedata_;
}

// optional uint32 steplength = 3;
inline bool MSG_Ret_Move_SC::_internal_has_steplength() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_Move_SC::has_steplength() const {
  return _internal_has_steplength();
}
inline void MSG_Ret_Move_SC::clear_steplength() {
  steplength_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Move_SC::_internal_steplength() const {
  return steplength_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Move_SC::steplength() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Move_SC.steplength)
  return _internal_steplength();
}
inline void MSG_Ret_Move_SC::_internal_set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  steplength_ = value;
}
inline void MSG_Ret_Move_SC::set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_steplength(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Move_SC.steplength)
}

// -------------------------------------------------------------------

// MSG_Req_TELE_PORT_CS

// required uint64 teleportid = 1;
inline bool MSG_Req_TELE_PORT_CS::_internal_has_teleportid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_TELE_PORT_CS::has_teleportid() const {
  return _internal_has_teleportid();
}
inline void MSG_Req_TELE_PORT_CS::clear_teleportid() {
  teleportid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_TELE_PORT_CS::_internal_teleportid() const {
  return teleportid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_TELE_PORT_CS::teleportid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_TELE_PORT_CS.teleportid)
  return _internal_teleportid();
}
inline void MSG_Req_TELE_PORT_CS::_internal_set_teleportid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  teleportid_ = value;
}
inline void MSG_Req_TELE_PORT_CS::set_teleportid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_teleportid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_TELE_PORT_CS.teleportid)
}

// -------------------------------------------------------------------

// MSG_Server_Force_Move_SC

// optional uint64 charid = 1;
inline bool MSG_Server_Force_Move_SC::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Server_Force_Move_SC::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_Server_Force_Move_SC::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Server_Force_Move_SC::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Server_Force_Move_SC::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Server_Force_Move_SC.charid)
  return _internal_charid();
}
inline void MSG_Server_Force_Move_SC::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  charid_ = value;
}
inline void MSG_Server_Force_Move_SC::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Server_Force_Move_SC.charid)
}

// repeated .msg.MoveData movedata = 2;
inline int MSG_Server_Force_Move_SC::_internal_movedata_size() const {
  return movedata_.size();
}
inline int MSG_Server_Force_Move_SC::movedata_size() const {
  return _internal_movedata_size();
}
inline void MSG_Server_Force_Move_SC::clear_movedata() {
  movedata_.Clear();
}
inline ::msg::MoveData* MSG_Server_Force_Move_SC::mutable_movedata(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Server_Force_Move_SC.movedata)
  return movedata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >*
MSG_Server_Force_Move_SC::mutable_movedata() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Server_Force_Move_SC.movedata)
  return &movedata_;
}
inline const ::msg::MoveData& MSG_Server_Force_Move_SC::_internal_movedata(int index) const {
  return movedata_.Get(index);
}
inline const ::msg::MoveData& MSG_Server_Force_Move_SC::movedata(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Server_Force_Move_SC.movedata)
  return _internal_movedata(index);
}
inline ::msg::MoveData* MSG_Server_Force_Move_SC::_internal_add_movedata() {
  return movedata_.Add();
}
inline ::msg::MoveData* MSG_Server_Force_Move_SC::add_movedata() {
  // @@protoc_insertion_point(field_add:msg.MSG_Server_Force_Move_SC.movedata)
  return _internal_add_movedata();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >&
MSG_Server_Force_Move_SC::movedata() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Server_Force_Move_SC.movedata)
  return movedata_;
}

// optional uint32 steplength = 3;
inline bool MSG_Server_Force_Move_SC::_internal_has_steplength() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Server_Force_Move_SC::has_steplength() const {
  return _internal_has_steplength();
}
inline void MSG_Server_Force_Move_SC::clear_steplength() {
  steplength_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Server_Force_Move_SC::_internal_steplength() const {
  return steplength_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Server_Force_Move_SC::steplength() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Server_Force_Move_SC.steplength)
  return _internal_steplength();
}
inline void MSG_Server_Force_Move_SC::_internal_set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  steplength_ = value;
}
inline void MSG_Server_Force_Move_SC::set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_steplength(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Server_Force_Move_SC.steplength)
}

// -------------------------------------------------------------------

// MSG_Ret_Move_Failed_SC

// optional uint64 charid = 1;
inline bool MSG_Ret_Move_Failed_SC::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_Move_Failed_SC::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_Ret_Move_Failed_SC::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_Move_Failed_SC::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_Move_Failed_SC::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Move_Failed_SC.charid)
  return _internal_charid();
}
inline void MSG_Ret_Move_Failed_SC::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  charid_ = value;
}
inline void MSG_Ret_Move_Failed_SC::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Move_Failed_SC.charid)
}

// optional .msg.MoveData movedata = 2;
inline bool MSG_Ret_Move_Failed_SC::_internal_has_movedata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || movedata_ != nullptr);
  return value;
}
inline bool MSG_Ret_Move_Failed_SC::has_movedata() const {
  return _internal_has_movedata();
}
inline void MSG_Ret_Move_Failed_SC::clear_movedata() {
  if (movedata_ != nullptr) movedata_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::MoveData& MSG_Ret_Move_Failed_SC::_internal_movedata() const {
  const ::msg::MoveData* p = movedata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::MoveData*>(
      &::msg::_MoveData_default_instance_);
}
inline const ::msg::MoveData& MSG_Ret_Move_Failed_SC::movedata() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Move_Failed_SC.movedata)
  return _internal_movedata();
}
inline ::msg::MoveData* MSG_Ret_Move_Failed_SC::release_movedata() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_Move_Failed_SC.movedata)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::MoveData* temp = movedata_;
  movedata_ = nullptr;
  return temp;
}
inline ::msg::MoveData* MSG_Ret_Move_Failed_SC::_internal_mutable_movedata() {
  _has_bits_[0] |= 0x00000001u;
  if (movedata_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::MoveData>(GetArenaNoVirtual());
    movedata_ = p;
  }
  return movedata_;
}
inline ::msg::MoveData* MSG_Ret_Move_Failed_SC::mutable_movedata() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_Move_Failed_SC.movedata)
  return _internal_mutable_movedata();
}
inline void MSG_Ret_Move_Failed_SC::set_allocated_movedata(::msg::MoveData* movedata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete movedata_;
  }
  if (movedata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      movedata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, movedata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  movedata_ = movedata;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_Move_Failed_SC.movedata)
}

// optional uint32 steplength = 3;
inline bool MSG_Ret_Move_Failed_SC::_internal_has_steplength() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_Move_Failed_SC::has_steplength() const {
  return _internal_has_steplength();
}
inline void MSG_Ret_Move_Failed_SC::clear_steplength() {
  steplength_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Move_Failed_SC::_internal_steplength() const {
  return steplength_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Move_Failed_SC::steplength() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Move_Failed_SC.steplength)
  return _internal_steplength();
}
inline void MSG_Ret_Move_Failed_SC::_internal_set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  steplength_ = value;
}
inline void MSG_Ret_Move_Failed_SC::set_steplength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_steplength(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Move_Failed_SC.steplength)
}

// -------------------------------------------------------------------

// MSG_Ret_SetState_SC

// optional uint32 type = 1;
inline bool MSG_Ret_SetState_SC::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_SetState_SC::has_type() const {
  return _internal_has_type();
}
inline void MSG_Ret_SetState_SC::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SetState_SC::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SetState_SC::type() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_SetState_SC.type)
  return _internal_type();
}
inline void MSG_Ret_SetState_SC::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void MSG_Ret_SetState_SC::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_SetState_SC.type)
}

// optional uint64 id = 2;
inline bool MSG_Ret_SetState_SC::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_SetState_SC::has_id() const {
  return _internal_has_id();
}
inline void MSG_Ret_SetState_SC::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_SetState_SC::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_SetState_SC::id() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_SetState_SC.id)
  return _internal_id();
}
inline void MSG_Ret_SetState_SC::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void MSG_Ret_SetState_SC::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_SetState_SC.id)
}

// repeated .msg.StateItem state = 3;
inline int MSG_Ret_SetState_SC::_internal_state_size() const {
  return state_.size();
}
inline int MSG_Ret_SetState_SC::state_size() const {
  return _internal_state_size();
}
inline void MSG_Ret_SetState_SC::clear_state() {
  state_.Clear();
}
inline ::msg::StateItem* MSG_Ret_SetState_SC::mutable_state(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_SetState_SC.state)
  return state_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >*
MSG_Ret_SetState_SC::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_SetState_SC.state)
  return &state_;
}
inline const ::msg::StateItem& MSG_Ret_SetState_SC::_internal_state(int index) const {
  return state_.Get(index);
}
inline const ::msg::StateItem& MSG_Ret_SetState_SC::state(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_SetState_SC.state)
  return _internal_state(index);
}
inline ::msg::StateItem* MSG_Ret_SetState_SC::_internal_add_state() {
  return state_.Add();
}
inline ::msg::StateItem* MSG_Ret_SetState_SC::add_state() {
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_SetState_SC.state)
  return _internal_add_state();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >&
MSG_Ret_SetState_SC::state() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_SetState_SC.state)
  return state_;
}

// -------------------------------------------------------------------

// MSG_Ret_ClearState_SC

// optional uint32 type = 1;
inline bool MSG_Ret_ClearState_SC::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_ClearState_SC::has_type() const {
  return _internal_has_type();
}
inline void MSG_Ret_ClearState_SC::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_ClearState_SC::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_ClearState_SC::type() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_ClearState_SC.type)
  return _internal_type();
}
inline void MSG_Ret_ClearState_SC::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
}
inline void MSG_Ret_ClearState_SC::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_ClearState_SC.type)
}

// optional uint64 id = 2;
inline bool MSG_Ret_ClearState_SC::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_ClearState_SC::has_id() const {
  return _internal_has_id();
}
inline void MSG_Ret_ClearState_SC::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_ClearState_SC::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_ClearState_SC::id() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_ClearState_SC.id)
  return _internal_id();
}
inline void MSG_Ret_ClearState_SC::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void MSG_Ret_ClearState_SC::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_ClearState_SC.id)
}

// optional .msg.StateItem state = 3;
inline bool MSG_Ret_ClearState_SC::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || state_ != nullptr);
  return value;
}
inline bool MSG_Ret_ClearState_SC::has_state() const {
  return _internal_has_state();
}
inline void MSG_Ret_ClearState_SC::clear_state() {
  if (state_ != nullptr) state_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::StateItem& MSG_Ret_ClearState_SC::_internal_state() const {
  const ::msg::StateItem* p = state_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::StateItem*>(
      &::msg::_StateItem_default_instance_);
}
inline const ::msg::StateItem& MSG_Ret_ClearState_SC::state() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_ClearState_SC.state)
  return _internal_state();
}
inline ::msg::StateItem* MSG_Ret_ClearState_SC::release_state() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_ClearState_SC.state)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::StateItem* temp = state_;
  state_ = nullptr;
  return temp;
}
inline ::msg::StateItem* MSG_Ret_ClearState_SC::_internal_mutable_state() {
  _has_bits_[0] |= 0x00000001u;
  if (state_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::StateItem>(GetArenaNoVirtual());
    state_ = p;
  }
  return state_;
}
inline ::msg::StateItem* MSG_Ret_ClearState_SC::mutable_state() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_ClearState_SC.state)
  return _internal_mutable_state();
}
inline void MSG_Ret_ClearState_SC::set_allocated_state(::msg::StateItem* state) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete state_;
  }
  if (state) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      state = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_ClearState_SC.state)
}

// -------------------------------------------------------------------

// MSG_Ret_MapScreenBatchRefreshNpc_SC

// repeated .msg.MapNpcData data = 1;
inline int MSG_Ret_MapScreenBatchRefreshNpc_SC::_internal_data_size() const {
  return data_.size();
}
inline int MSG_Ret_MapScreenBatchRefreshNpc_SC::data_size() const {
  return _internal_data_size();
}
inline void MSG_Ret_MapScreenBatchRefreshNpc_SC::clear_data() {
  data_.Clear();
}
inline ::msg::MapNpcData* MSG_Ret_MapScreenBatchRefreshNpc_SC::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_MapScreenBatchRefreshNpc_SC.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MapNpcData >*
MSG_Ret_MapScreenBatchRefreshNpc_SC::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_MapScreenBatchRefreshNpc_SC.data)
  return &data_;
}
inline const ::msg::MapNpcData& MSG_Ret_MapScreenBatchRefreshNpc_SC::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::msg::MapNpcData& MSG_Ret_MapScreenBatchRefreshNpc_SC::data(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_MapScreenBatchRefreshNpc_SC.data)
  return _internal_data(index);
}
inline ::msg::MapNpcData* MSG_Ret_MapScreenBatchRefreshNpc_SC::_internal_add_data() {
  return data_.Add();
}
inline ::msg::MapNpcData* MSG_Ret_MapScreenBatchRefreshNpc_SC::add_data() {
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_MapScreenBatchRefreshNpc_SC.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MapNpcData >&
MSG_Ret_MapScreenBatchRefreshNpc_SC::data() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_MapScreenBatchRefreshNpc_SC.data)
  return data_;
}

// -------------------------------------------------------------------

// MSG_Ret_MapScreenBatchRemoveNpc_SC

// repeated uint64 tempids = 1;
inline int MSG_Ret_MapScreenBatchRemoveNpc_SC::_internal_tempids_size() const {
  return tempids_.size();
}
inline int MSG_Ret_MapScreenBatchRemoveNpc_SC::tempids_size() const {
  return _internal_tempids_size();
}
inline void MSG_Ret_MapScreenBatchRemoveNpc_SC::clear_tempids() {
  tempids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MapScreenBatchRemoveNpc_SC::_internal_tempids(int index) const {
  return tempids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MapScreenBatchRemoveNpc_SC::tempids(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_MapScreenBatchRemoveNpc_SC.tempids)
  return _internal_tempids(index);
}
inline void MSG_Ret_MapScreenBatchRemoveNpc_SC::set_tempids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  tempids_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_MapScreenBatchRemoveNpc_SC.tempids)
}
inline void MSG_Ret_MapScreenBatchRemoveNpc_SC::_internal_add_tempids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  tempids_.Add(value);
}
inline void MSG_Ret_MapScreenBatchRemoveNpc_SC::add_tempids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_tempids(value);
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_MapScreenBatchRemoveNpc_SC.tempids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
MSG_Ret_MapScreenBatchRemoveNpc_SC::_internal_tempids() const {
  return tempids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
MSG_Ret_MapScreenBatchRemoveNpc_SC::tempids() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_MapScreenBatchRemoveNpc_SC.tempids)
  return _internal_tempids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
MSG_Ret_MapScreenBatchRemoveNpc_SC::_internal_mutable_tempids() {
  return &tempids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
MSG_Ret_MapScreenBatchRemoveNpc_SC::mutable_tempids() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_MapScreenBatchRemoveNpc_SC.tempids)
  return _internal_mutable_tempids();
}

// -------------------------------------------------------------------

// MSG_Ret_MapScreenRefreshNpc_SC

// optional .msg.MapNpcData data = 1;
inline bool MSG_Ret_MapScreenRefreshNpc_SC::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool MSG_Ret_MapScreenRefreshNpc_SC::has_data() const {
  return _internal_has_data();
}
inline void MSG_Ret_MapScreenRefreshNpc_SC::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::MapNpcData& MSG_Ret_MapScreenRefreshNpc_SC::_internal_data() const {
  const ::msg::MapNpcData* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::MapNpcData*>(
      &::msg::_MapNpcData_default_instance_);
}
inline const ::msg::MapNpcData& MSG_Ret_MapScreenRefreshNpc_SC::data() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_MapScreenRefreshNpc_SC.data)
  return _internal_data();
}
inline ::msg::MapNpcData* MSG_Ret_MapScreenRefreshNpc_SC::release_data() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_MapScreenRefreshNpc_SC.data)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::MapNpcData* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::msg::MapNpcData* MSG_Ret_MapScreenRefreshNpc_SC::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::MapNpcData>(GetArenaNoVirtual());
    data_ = p;
  }
  return data_;
}
inline ::msg::MapNpcData* MSG_Ret_MapScreenRefreshNpc_SC::mutable_data() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_MapScreenRefreshNpc_SC.data)
  return _internal_mutable_data();
}
inline void MSG_Ret_MapScreenRefreshNpc_SC::set_allocated_data(::msg::MapNpcData* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_MapScreenRefreshNpc_SC.data)
}

// -------------------------------------------------------------------

// MSG_Ret_MapScreenRemoveNpc_SC

// optional uint64 tempid = 1;
inline bool MSG_Ret_MapScreenRemoveNpc_SC::_internal_has_tempid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_MapScreenRemoveNpc_SC::has_tempid() const {
  return _internal_has_tempid();
}
inline void MSG_Ret_MapScreenRemoveNpc_SC::clear_tempid() {
  tempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MapScreenRemoveNpc_SC::_internal_tempid() const {
  return tempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MapScreenRemoveNpc_SC::tempid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_MapScreenRemoveNpc_SC.tempid)
  return _internal_tempid();
}
inline void MSG_Ret_MapScreenRemoveNpc_SC::_internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  tempid_ = value;
}
inline void MSG_Ret_MapScreenRemoveNpc_SC::set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tempid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_MapScreenRemoveNpc_SC.tempid)
}

// -------------------------------------------------------------------

// FuncNpcData

// optional uint32 baseid = 1;
inline bool FuncNpcData::_internal_has_baseid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool FuncNpcData::has_baseid() const {
  return _internal_has_baseid();
}
inline void FuncNpcData::clear_baseid() {
  baseid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FuncNpcData::_internal_baseid() const {
  return baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FuncNpcData::baseid() const {
  // @@protoc_insertion_point(field_get:msg.FuncNpcData.baseid)
  return _internal_baseid();
}
inline void FuncNpcData::_internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  baseid_ = value;
}
inline void FuncNpcData::set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseid(value);
  // @@protoc_insertion_point(field_set:msg.FuncNpcData.baseid)
}

// optional uint64 tempid = 2;
inline bool FuncNpcData::_internal_has_tempid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool FuncNpcData::has_tempid() const {
  return _internal_has_tempid();
}
inline void FuncNpcData::clear_tempid() {
  tempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FuncNpcData::_internal_tempid() const {
  return tempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FuncNpcData::tempid() const {
  // @@protoc_insertion_point(field_get:msg.FuncNpcData.tempid)
  return _internal_tempid();
}
inline void FuncNpcData::_internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  tempid_ = value;
}
inline void FuncNpcData::set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tempid(value);
  // @@protoc_insertion_point(field_set:msg.FuncNpcData.tempid)
}

// optional uint32 x = 3;
inline bool FuncNpcData::_internal_has_x() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool FuncNpcData::has_x() const {
  return _internal_has_x();
}
inline void FuncNpcData::clear_x() {
  x_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FuncNpcData::_internal_x() const {
  return x_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FuncNpcData::x() const {
  // @@protoc_insertion_point(field_get:msg.FuncNpcData.x)
  return _internal_x();
}
inline void FuncNpcData::_internal_set_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  x_ = value;
}
inline void FuncNpcData::set_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:msg.FuncNpcData.x)
}

// optional uint32 y = 4;
inline bool FuncNpcData::_internal_has_y() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool FuncNpcData::has_y() const {
  return _internal_has_y();
}
inline void FuncNpcData::clear_y() {
  y_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FuncNpcData::_internal_y() const {
  return y_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FuncNpcData::y() const {
  // @@protoc_insertion_point(field_get:msg.FuncNpcData.y)
  return _internal_y();
}
inline void FuncNpcData::_internal_set_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  y_ = value;
}
inline void FuncNpcData::set_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:msg.FuncNpcData.y)
}

// -------------------------------------------------------------------

// MSG_Ret_MapScreenFuncNpc_SC

// repeated .msg.FuncNpcData data = 1;
inline int MSG_Ret_MapScreenFuncNpc_SC::_internal_data_size() const {
  return data_.size();
}
inline int MSG_Ret_MapScreenFuncNpc_SC::data_size() const {
  return _internal_data_size();
}
inline void MSG_Ret_MapScreenFuncNpc_SC::clear_data() {
  data_.Clear();
}
inline ::msg::FuncNpcData* MSG_Ret_MapScreenFuncNpc_SC::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_MapScreenFuncNpc_SC.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::FuncNpcData >*
MSG_Ret_MapScreenFuncNpc_SC::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_MapScreenFuncNpc_SC.data)
  return &data_;
}
inline const ::msg::FuncNpcData& MSG_Ret_MapScreenFuncNpc_SC::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::msg::FuncNpcData& MSG_Ret_MapScreenFuncNpc_SC::data(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_MapScreenFuncNpc_SC.data)
  return _internal_data(index);
}
inline ::msg::FuncNpcData* MSG_Ret_MapScreenFuncNpc_SC::_internal_add_data() {
  return data_.Add();
}
inline ::msg::FuncNpcData* MSG_Ret_MapScreenFuncNpc_SC::add_data() {
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_MapScreenFuncNpc_SC.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::FuncNpcData >&
MSG_Ret_MapScreenFuncNpc_SC::data() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_MapScreenFuncNpc_SC.data)
  return data_;
}

// -------------------------------------------------------------------

// MSG_Ret_RetNpcMove_SC

// optional uint64 tempid = 1;
inline bool MSG_Ret_RetNpcMove_SC::_internal_has_tempid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_RetNpcMove_SC::has_tempid() const {
  return _internal_has_tempid();
}
inline void MSG_Ret_RetNpcMove_SC::clear_tempid() {
  tempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_RetNpcMove_SC::_internal_tempid() const {
  return tempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_RetNpcMove_SC::tempid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_RetNpcMove_SC.tempid)
  return _internal_tempid();
}
inline void MSG_Ret_RetNpcMove_SC::_internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  tempid_ = value;
}
inline void MSG_Ret_RetNpcMove_SC::set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tempid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_RetNpcMove_SC.tempid)
}

// repeated .msg.MoveData movedata = 2;
inline int MSG_Ret_RetNpcMove_SC::_internal_movedata_size() const {
  return movedata_.size();
}
inline int MSG_Ret_RetNpcMove_SC::movedata_size() const {
  return _internal_movedata_size();
}
inline void MSG_Ret_RetNpcMove_SC::clear_movedata() {
  movedata_.Clear();
}
inline ::msg::MoveData* MSG_Ret_RetNpcMove_SC::mutable_movedata(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_RetNpcMove_SC.movedata)
  return movedata_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >*
MSG_Ret_RetNpcMove_SC::mutable_movedata() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_RetNpcMove_SC.movedata)
  return &movedata_;
}
inline const ::msg::MoveData& MSG_Ret_RetNpcMove_SC::_internal_movedata(int index) const {
  return movedata_.Get(index);
}
inline const ::msg::MoveData& MSG_Ret_RetNpcMove_SC::movedata(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_RetNpcMove_SC.movedata)
  return _internal_movedata(index);
}
inline ::msg::MoveData* MSG_Ret_RetNpcMove_SC::_internal_add_movedata() {
  return movedata_.Add();
}
inline ::msg::MoveData* MSG_Ret_RetNpcMove_SC::add_movedata() {
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_RetNpcMove_SC.movedata)
  return _internal_add_movedata();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::MoveData >&
MSG_Ret_RetNpcMove_SC::movedata() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_RetNpcMove_SC.movedata)
  return movedata_;
}

// optional uint32 speed = 3;
inline bool MSG_Ret_RetNpcMove_SC::_internal_has_speed() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_RetNpcMove_SC::has_speed() const {
  return _internal_has_speed();
}
inline void MSG_Ret_RetNpcMove_SC::clear_speed() {
  speed_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_RetNpcMove_SC::_internal_speed() const {
  return speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_RetNpcMove_SC::speed() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_RetNpcMove_SC.speed)
  return _internal_speed();
}
inline void MSG_Ret_RetNpcMove_SC::_internal_set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  speed_ = value;
}
inline void MSG_Ret_RetNpcMove_SC::set_speed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_RetNpcMove_SC.speed)
}

// -------------------------------------------------------------------

// MSG_RetNpcWarpMove_SC

// optional uint64 tempid = 1;
inline bool MSG_RetNpcWarpMove_SC::_internal_has_tempid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetNpcWarpMove_SC::has_tempid() const {
  return _internal_has_tempid();
}
inline void MSG_RetNpcWarpMove_SC::clear_tempid() {
  tempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_RetNpcWarpMove_SC::_internal_tempid() const {
  return tempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_RetNpcWarpMove_SC::tempid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetNpcWarpMove_SC.tempid)
  return _internal_tempid();
}
inline void MSG_RetNpcWarpMove_SC::_internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  tempid_ = value;
}
inline void MSG_RetNpcWarpMove_SC::set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tempid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetNpcWarpMove_SC.tempid)
}

// optional .msg.MoveData movedata = 2;
inline bool MSG_RetNpcWarpMove_SC::_internal_has_movedata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || movedata_ != nullptr);
  return value;
}
inline bool MSG_RetNpcWarpMove_SC::has_movedata() const {
  return _internal_has_movedata();
}
inline void MSG_RetNpcWarpMove_SC::clear_movedata() {
  if (movedata_ != nullptr) movedata_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::MoveData& MSG_RetNpcWarpMove_SC::_internal_movedata() const {
  const ::msg::MoveData* p = movedata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::MoveData*>(
      &::msg::_MoveData_default_instance_);
}
inline const ::msg::MoveData& MSG_RetNpcWarpMove_SC::movedata() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetNpcWarpMove_SC.movedata)
  return _internal_movedata();
}
inline ::msg::MoveData* MSG_RetNpcWarpMove_SC::release_movedata() {
  // @@protoc_insertion_point(field_release:msg.MSG_RetNpcWarpMove_SC.movedata)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::MoveData* temp = movedata_;
  movedata_ = nullptr;
  return temp;
}
inline ::msg::MoveData* MSG_RetNpcWarpMove_SC::_internal_mutable_movedata() {
  _has_bits_[0] |= 0x00000001u;
  if (movedata_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::MoveData>(GetArenaNoVirtual());
    movedata_ = p;
  }
  return movedata_;
}
inline ::msg::MoveData* MSG_RetNpcWarpMove_SC::mutable_movedata() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_RetNpcWarpMove_SC.movedata)
  return _internal_mutable_movedata();
}
inline void MSG_RetNpcWarpMove_SC::set_allocated_movedata(::msg::MoveData* movedata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete movedata_;
  }
  if (movedata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      movedata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, movedata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  movedata_ = movedata;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_RetNpcWarpMove_SC.movedata)
}

// -------------------------------------------------------------------

// MSG_RetNpcDir_SC

// optional uint64 tempid = 1;
inline bool MSG_RetNpcDir_SC::_internal_has_tempid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetNpcDir_SC::has_tempid() const {
  return _internal_has_tempid();
}
inline void MSG_RetNpcDir_SC::clear_tempid() {
  tempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_RetNpcDir_SC::_internal_tempid() const {
  return tempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_RetNpcDir_SC::tempid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetNpcDir_SC.tempid)
  return _internal_tempid();
}
inline void MSG_RetNpcDir_SC::_internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  tempid_ = value;
}
inline void MSG_RetNpcDir_SC::set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tempid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetNpcDir_SC.tempid)
}

// optional uint32 dir = 2;
inline bool MSG_RetNpcDir_SC::_internal_has_dir() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetNpcDir_SC::has_dir() const {
  return _internal_has_dir();
}
inline void MSG_RetNpcDir_SC::clear_dir() {
  dir_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetNpcDir_SC::_internal_dir() const {
  return dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetNpcDir_SC::dir() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetNpcDir_SC.dir)
  return _internal_dir();
}
inline void MSG_RetNpcDir_SC::_internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  dir_ = value;
}
inline void MSG_RetNpcDir_SC::set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetNpcDir_SC.dir)
}

// -------------------------------------------------------------------

// TempNpcInfo

// optional uint32 npcid = 1;
inline bool TempNpcInfo::_internal_has_npcid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TempNpcInfo::has_npcid() const {
  return _internal_has_npcid();
}
inline void TempNpcInfo::clear_npcid() {
  npcid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TempNpcInfo::_internal_npcid() const {
  return npcid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TempNpcInfo::npcid() const {
  // @@protoc_insertion_point(field_get:msg.TempNpcInfo.npcid)
  return _internal_npcid();
}
inline void TempNpcInfo::_internal_set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  npcid_ = value;
}
inline void TempNpcInfo::set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_npcid(value);
  // @@protoc_insertion_point(field_set:msg.TempNpcInfo.npcid)
}

// optional uint32 num = 2;
inline bool TempNpcInfo::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TempNpcInfo::has_num() const {
  return _internal_has_num();
}
inline void TempNpcInfo::clear_num() {
  num_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TempNpcInfo::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TempNpcInfo::num() const {
  // @@protoc_insertion_point(field_get:msg.TempNpcInfo.num)
  return _internal_num();
}
inline void TempNpcInfo::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_ = value;
}
inline void TempNpcInfo::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:msg.TempNpcInfo.num)
}

// optional uint32 script = 3;
inline bool TempNpcInfo::_internal_has_script() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TempNpcInfo::has_script() const {
  return _internal_has_script();
}
inline void TempNpcInfo::clear_script() {
  script_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TempNpcInfo::_internal_script() const {
  return script_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TempNpcInfo::script() const {
  // @@protoc_insertion_point(field_get:msg.TempNpcInfo.script)
  return _internal_script();
}
inline void TempNpcInfo::_internal_set_script(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  script_ = value;
}
inline void TempNpcInfo::set_script(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_script(value);
  // @@protoc_insertion_point(field_set:msg.TempNpcInfo.script)
}

// -------------------------------------------------------------------

// MSG_Req_Summon_Npc_CS

// repeated .msg.TempNpcInfo npcs = 1;
inline int MSG_Req_Summon_Npc_CS::_internal_npcs_size() const {
  return npcs_.size();
}
inline int MSG_Req_Summon_Npc_CS::npcs_size() const {
  return _internal_npcs_size();
}
inline void MSG_Req_Summon_Npc_CS::clear_npcs() {
  npcs_.Clear();
}
inline ::msg::TempNpcInfo* MSG_Req_Summon_Npc_CS::mutable_npcs(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Req_Summon_Npc_CS.npcs)
  return npcs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::TempNpcInfo >*
MSG_Req_Summon_Npc_CS::mutable_npcs() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Req_Summon_Npc_CS.npcs)
  return &npcs_;
}
inline const ::msg::TempNpcInfo& MSG_Req_Summon_Npc_CS::_internal_npcs(int index) const {
  return npcs_.Get(index);
}
inline const ::msg::TempNpcInfo& MSG_Req_Summon_Npc_CS::npcs(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Summon_Npc_CS.npcs)
  return _internal_npcs(index);
}
inline ::msg::TempNpcInfo* MSG_Req_Summon_Npc_CS::_internal_add_npcs() {
  return npcs_.Add();
}
inline ::msg::TempNpcInfo* MSG_Req_Summon_Npc_CS::add_npcs() {
  // @@protoc_insertion_point(field_add:msg.MSG_Req_Summon_Npc_CS.npcs)
  return _internal_add_npcs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::TempNpcInfo >&
MSG_Req_Summon_Npc_CS::npcs() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Req_Summon_Npc_CS.npcs)
  return npcs_;
}

// -------------------------------------------------------------------

// MSG_Ret_setTimeState_SC

// optional .msg.EntryIDType target = 1;
inline bool MSG_Ret_setTimeState_SC::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || target_ != nullptr);
  return value;
}
inline bool MSG_Ret_setTimeState_SC::has_target() const {
  return _internal_has_target();
}
inline void MSG_Ret_setTimeState_SC::clear_target() {
  if (target_ != nullptr) target_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::EntryIDType& MSG_Ret_setTimeState_SC::_internal_target() const {
  const ::msg::EntryIDType* p = target_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Ret_setTimeState_SC::target() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_setTimeState_SC.target)
  return _internal_target();
}
inline ::msg::EntryIDType* MSG_Ret_setTimeState_SC::release_target() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_setTimeState_SC.target)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = target_;
  target_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Ret_setTimeState_SC::_internal_mutable_target() {
  _has_bits_[0] |= 0x00000001u;
  if (target_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    target_ = p;
  }
  return target_;
}
inline ::msg::EntryIDType* MSG_Ret_setTimeState_SC::mutable_target() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_setTimeState_SC.target)
  return _internal_mutable_target();
}
inline void MSG_Ret_setTimeState_SC::set_allocated_target(::msg::EntryIDType* target) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete target_;
  }
  if (target) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_setTimeState_SC.target)
}

// optional uint32 state = 2;
inline bool MSG_Ret_setTimeState_SC::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_setTimeState_SC::has_state() const {
  return _internal_has_state();
}
inline void MSG_Ret_setTimeState_SC::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_setTimeState_SC::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_setTimeState_SC::state() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_setTimeState_SC.state)
  return _internal_state();
}
inline void MSG_Ret_setTimeState_SC::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  state_ = value;
}
inline void MSG_Ret_setTimeState_SC::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_setTimeState_SC.state)
}

// optional uint32 maxtime = 3;
inline bool MSG_Ret_setTimeState_SC::_internal_has_maxtime() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_setTimeState_SC::has_maxtime() const {
  return _internal_has_maxtime();
}
inline void MSG_Ret_setTimeState_SC::clear_maxtime() {
  maxtime_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_setTimeState_SC::_internal_maxtime() const {
  return maxtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_setTimeState_SC::maxtime() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_setTimeState_SC.maxtime)
  return _internal_maxtime();
}
inline void MSG_Ret_setTimeState_SC::_internal_set_maxtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  maxtime_ = value;
}
inline void MSG_Ret_setTimeState_SC::set_maxtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxtime(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_setTimeState_SC.maxtime)
}

// optional uint32 lefttime = 4;
inline bool MSG_Ret_setTimeState_SC::_internal_has_lefttime() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_setTimeState_SC::has_lefttime() const {
  return _internal_has_lefttime();
}
inline void MSG_Ret_setTimeState_SC::clear_lefttime() {
  lefttime_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_setTimeState_SC::_internal_lefttime() const {
  return lefttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_setTimeState_SC::lefttime() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_setTimeState_SC.lefttime)
  return _internal_lefttime();
}
inline void MSG_Ret_setTimeState_SC::_internal_set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  lefttime_ = value;
}
inline void MSG_Ret_setTimeState_SC::set_lefttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lefttime(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_setTimeState_SC.lefttime)
}

// -------------------------------------------------------------------

// MSG_Req_Ping_CS

// -------------------------------------------------------------------

// MSG_Ret_VisibleNpcList_SC

// repeated uint32 npc = 1;
inline int MSG_Ret_VisibleNpcList_SC::_internal_npc_size() const {
  return npc_.size();
}
inline int MSG_Ret_VisibleNpcList_SC::npc_size() const {
  return _internal_npc_size();
}
inline void MSG_Ret_VisibleNpcList_SC::clear_npc() {
  npc_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisibleNpcList_SC::_internal_npc(int index) const {
  return npc_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisibleNpcList_SC::npc(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_VisibleNpcList_SC.npc)
  return _internal_npc(index);
}
inline void MSG_Ret_VisibleNpcList_SC::set_npc(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  npc_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_VisibleNpcList_SC.npc)
}
inline void MSG_Ret_VisibleNpcList_SC::_internal_add_npc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  npc_.Add(value);
}
inline void MSG_Ret_VisibleNpcList_SC::add_npc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_npc(value);
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_VisibleNpcList_SC.npc)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_Ret_VisibleNpcList_SC::_internal_npc() const {
  return npc_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_Ret_VisibleNpcList_SC::npc() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_VisibleNpcList_SC.npc)
  return _internal_npc();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_Ret_VisibleNpcList_SC::_internal_mutable_npc() {
  return &npc_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_Ret_VisibleNpcList_SC::mutable_npc() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_VisibleNpcList_SC.npc)
  return _internal_mutable_npc();
}

// -------------------------------------------------------------------

// MSG_RetNinePlayerLevelUp_SC

// optional .msg.EntryIDType target = 1;
inline bool MSG_RetNinePlayerLevelUp_SC::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || target_ != nullptr);
  return value;
}
inline bool MSG_RetNinePlayerLevelUp_SC::has_target() const {
  return _internal_has_target();
}
inline void MSG_RetNinePlayerLevelUp_SC::clear_target() {
  if (target_ != nullptr) target_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::EntryIDType& MSG_RetNinePlayerLevelUp_SC::_internal_target() const {
  const ::msg::EntryIDType* p = target_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_RetNinePlayerLevelUp_SC::target() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetNinePlayerLevelUp_SC.target)
  return _internal_target();
}
inline ::msg::EntryIDType* MSG_RetNinePlayerLevelUp_SC::release_target() {
  // @@protoc_insertion_point(field_release:msg.MSG_RetNinePlayerLevelUp_SC.target)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = target_;
  target_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_RetNinePlayerLevelUp_SC::_internal_mutable_target() {
  _has_bits_[0] |= 0x00000001u;
  if (target_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    target_ = p;
  }
  return target_;
}
inline ::msg::EntryIDType* MSG_RetNinePlayerLevelUp_SC::mutable_target() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_RetNinePlayerLevelUp_SC.target)
  return _internal_mutable_target();
}
inline void MSG_RetNinePlayerLevelUp_SC::set_allocated_target(::msg::EntryIDType* target) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete target_;
  }
  if (target) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_RetNinePlayerLevelUp_SC.target)
}

// -------------------------------------------------------------------

// MSG_UpdateExpLevel_SC

// optional uint32 curexp = 1;
inline bool MSG_UpdateExpLevel_SC::_internal_has_curexp() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_UpdateExpLevel_SC::has_curexp() const {
  return _internal_has_curexp();
}
inline void MSG_UpdateExpLevel_SC::clear_curexp() {
  curexp_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_UpdateExpLevel_SC::_internal_curexp() const {
  return curexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_UpdateExpLevel_SC::curexp() const {
  // @@protoc_insertion_point(field_get:msg.MSG_UpdateExpLevel_SC.curexp)
  return _internal_curexp();
}
inline void MSG_UpdateExpLevel_SC::_internal_set_curexp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  curexp_ = value;
}
inline void MSG_UpdateExpLevel_SC::set_curexp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curexp(value);
  // @@protoc_insertion_point(field_set:msg.MSG_UpdateExpLevel_SC.curexp)
}

// optional uint32 curlevel = 2;
inline bool MSG_UpdateExpLevel_SC::_internal_has_curlevel() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_UpdateExpLevel_SC::has_curlevel() const {
  return _internal_has_curlevel();
}
inline void MSG_UpdateExpLevel_SC::clear_curlevel() {
  curlevel_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_UpdateExpLevel_SC::_internal_curlevel() const {
  return curlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_UpdateExpLevel_SC::curlevel() const {
  // @@protoc_insertion_point(field_get:msg.MSG_UpdateExpLevel_SC.curlevel)
  return _internal_curlevel();
}
inline void MSG_UpdateExpLevel_SC::_internal_set_curlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  curlevel_ = value;
}
inline void MSG_UpdateExpLevel_SC::set_curlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curlevel(value);
  // @@protoc_insertion_point(field_set:msg.MSG_UpdateExpLevel_SC.curlevel)
}

// optional uint64 mainhero_thisid = 3;
inline bool MSG_UpdateExpLevel_SC::_internal_has_mainhero_thisid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_UpdateExpLevel_SC::has_mainhero_thisid() const {
  return _internal_has_mainhero_thisid();
}
inline void MSG_UpdateExpLevel_SC::clear_mainhero_thisid() {
  mainhero_thisid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_UpdateExpLevel_SC::_internal_mainhero_thisid() const {
  return mainhero_thisid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_UpdateExpLevel_SC::mainhero_thisid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_UpdateExpLevel_SC.mainhero_thisid)
  return _internal_mainhero_thisid();
}
inline void MSG_UpdateExpLevel_SC::_internal_set_mainhero_thisid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  mainhero_thisid_ = value;
}
inline void MSG_UpdateExpLevel_SC::set_mainhero_thisid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mainhero_thisid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_UpdateExpLevel_SC.mainhero_thisid)
}

// optional uint64 mainhero_exp = 4;
inline bool MSG_UpdateExpLevel_SC::_internal_has_mainhero_exp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_UpdateExpLevel_SC::has_mainhero_exp() const {
  return _internal_has_mainhero_exp();
}
inline void MSG_UpdateExpLevel_SC::clear_mainhero_exp() {
  mainhero_exp_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_UpdateExpLevel_SC::_internal_mainhero_exp() const {
  return mainhero_exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_UpdateExpLevel_SC::mainhero_exp() const {
  // @@protoc_insertion_point(field_get:msg.MSG_UpdateExpLevel_SC.mainhero_exp)
  return _internal_mainhero_exp();
}
inline void MSG_UpdateExpLevel_SC::_internal_set_mainhero_exp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  mainhero_exp_ = value;
}
inline void MSG_UpdateExpLevel_SC::set_mainhero_exp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mainhero_exp(value);
  // @@protoc_insertion_point(field_set:msg.MSG_UpdateExpLevel_SC.mainhero_exp)
}

// optional uint32 mainhero_lv = 5;
inline bool MSG_UpdateExpLevel_SC::_internal_has_mainhero_lv() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_UpdateExpLevel_SC::has_mainhero_lv() const {
  return _internal_has_mainhero_lv();
}
inline void MSG_UpdateExpLevel_SC::clear_mainhero_lv() {
  mainhero_lv_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_UpdateExpLevel_SC::_internal_mainhero_lv() const {
  return mainhero_lv_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_UpdateExpLevel_SC::mainhero_lv() const {
  // @@protoc_insertion_point(field_get:msg.MSG_UpdateExpLevel_SC.mainhero_lv)
  return _internal_mainhero_lv();
}
inline void MSG_UpdateExpLevel_SC::_internal_set_mainhero_lv(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  mainhero_lv_ = value;
}
inline void MSG_UpdateExpLevel_SC::set_mainhero_lv(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mainhero_lv(value);
  // @@protoc_insertion_point(field_set:msg.MSG_UpdateExpLevel_SC.mainhero_lv)
}

// -------------------------------------------------------------------

// MSG_NotifyAntiAddict_SC

// optional uint32 onlinelasttime = 1;
inline bool MSG_NotifyAntiAddict_SC::_internal_has_onlinelasttime() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_NotifyAntiAddict_SC::has_onlinelasttime() const {
  return _internal_has_onlinelasttime();
}
inline void MSG_NotifyAntiAddict_SC::clear_onlinelasttime() {
  onlinelasttime_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyAntiAddict_SC::_internal_onlinelasttime() const {
  return onlinelasttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyAntiAddict_SC::onlinelasttime() const {
  // @@protoc_insertion_point(field_get:msg.MSG_NotifyAntiAddict_SC.onlinelasttime)
  return _internal_onlinelasttime();
}
inline void MSG_NotifyAntiAddict_SC::_internal_set_onlinelasttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  onlinelasttime_ = value;
}
inline void MSG_NotifyAntiAddict_SC::set_onlinelasttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_onlinelasttime(value);
  // @@protoc_insertion_point(field_set:msg.MSG_NotifyAntiAddict_SC.onlinelasttime)
}

// optional bool isAntiAddcit = 2;
inline bool MSG_NotifyAntiAddict_SC::_internal_has_isantiaddcit() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_NotifyAntiAddict_SC::has_isantiaddcit() const {
  return _internal_has_isantiaddcit();
}
inline void MSG_NotifyAntiAddict_SC::clear_isantiaddcit() {
  isantiaddcit_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_NotifyAntiAddict_SC::_internal_isantiaddcit() const {
  return isantiaddcit_;
}
inline bool MSG_NotifyAntiAddict_SC::isantiaddcit() const {
  // @@protoc_insertion_point(field_get:msg.MSG_NotifyAntiAddict_SC.isAntiAddcit)
  return _internal_isantiaddcit();
}
inline void MSG_NotifyAntiAddict_SC::_internal_set_isantiaddcit(bool value) {
  _has_bits_[0] |= 0x00000002u;
  isantiaddcit_ = value;
}
inline void MSG_NotifyAntiAddict_SC::set_isantiaddcit(bool value) {
  _internal_set_isantiaddcit(value);
  // @@protoc_insertion_point(field_set:msg.MSG_NotifyAntiAddict_SC.isAntiAddcit)
}

// optional bool isLoginPush = 3;
inline bool MSG_NotifyAntiAddict_SC::_internal_has_isloginpush() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_NotifyAntiAddict_SC::has_isloginpush() const {
  return _internal_has_isloginpush();
}
inline void MSG_NotifyAntiAddict_SC::clear_isloginpush() {
  isloginpush_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool MSG_NotifyAntiAddict_SC::_internal_isloginpush() const {
  return isloginpush_;
}
inline bool MSG_NotifyAntiAddict_SC::isloginpush() const {
  // @@protoc_insertion_point(field_get:msg.MSG_NotifyAntiAddict_SC.isLoginPush)
  return _internal_isloginpush();
}
inline void MSG_NotifyAntiAddict_SC::_internal_set_isloginpush(bool value) {
  _has_bits_[0] |= 0x00000004u;
  isloginpush_ = value;
}
inline void MSG_NotifyAntiAddict_SC::set_isloginpush(bool value) {
  _internal_set_isloginpush(value);
  // @@protoc_insertion_point(field_set:msg.MSG_NotifyAntiAddict_SC.isLoginPush)
}

// -------------------------------------------------------------------

// MSG_ReqUpdateAntiAddict_CS

// -------------------------------------------------------------------

// MSG_ReqEntrySelectState_CS

// optional .msg.EntryIDType oldone = 1;
inline bool MSG_ReqEntrySelectState_CS::_internal_has_oldone() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || oldone_ != nullptr);
  return value;
}
inline bool MSG_ReqEntrySelectState_CS::has_oldone() const {
  return _internal_has_oldone();
}
inline void MSG_ReqEntrySelectState_CS::clear_oldone() {
  if (oldone_ != nullptr) oldone_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::EntryIDType& MSG_ReqEntrySelectState_CS::_internal_oldone() const {
  const ::msg::EntryIDType* p = oldone_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_ReqEntrySelectState_CS::oldone() const {
  // @@protoc_insertion_point(field_get:msg.MSG_ReqEntrySelectState_CS.oldone)
  return _internal_oldone();
}
inline ::msg::EntryIDType* MSG_ReqEntrySelectState_CS::release_oldone() {
  // @@protoc_insertion_point(field_release:msg.MSG_ReqEntrySelectState_CS.oldone)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = oldone_;
  oldone_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_ReqEntrySelectState_CS::_internal_mutable_oldone() {
  _has_bits_[0] |= 0x00000001u;
  if (oldone_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    oldone_ = p;
  }
  return oldone_;
}
inline ::msg::EntryIDType* MSG_ReqEntrySelectState_CS::mutable_oldone() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_ReqEntrySelectState_CS.oldone)
  return _internal_mutable_oldone();
}
inline void MSG_ReqEntrySelectState_CS::set_allocated_oldone(::msg::EntryIDType* oldone) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete oldone_;
  }
  if (oldone) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      oldone = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldone, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  oldone_ = oldone;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_ReqEntrySelectState_CS.oldone)
}

// optional .msg.EntryIDType newone = 2;
inline bool MSG_ReqEntrySelectState_CS::_internal_has_newone() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || newone_ != nullptr);
  return value;
}
inline bool MSG_ReqEntrySelectState_CS::has_newone() const {
  return _internal_has_newone();
}
inline void MSG_ReqEntrySelectState_CS::clear_newone() {
  if (newone_ != nullptr) newone_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::msg::EntryIDType& MSG_ReqEntrySelectState_CS::_internal_newone() const {
  const ::msg::EntryIDType* p = newone_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_ReqEntrySelectState_CS::newone() const {
  // @@protoc_insertion_point(field_get:msg.MSG_ReqEntrySelectState_CS.newone)
  return _internal_newone();
}
inline ::msg::EntryIDType* MSG_ReqEntrySelectState_CS::release_newone() {
  // @@protoc_insertion_point(field_release:msg.MSG_ReqEntrySelectState_CS.newone)
  _has_bits_[0] &= ~0x00000002u;
  ::msg::EntryIDType* temp = newone_;
  newone_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_ReqEntrySelectState_CS::_internal_mutable_newone() {
  _has_bits_[0] |= 0x00000002u;
  if (newone_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    newone_ = p;
  }
  return newone_;
}
inline ::msg::EntryIDType* MSG_ReqEntrySelectState_CS::mutable_newone() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_ReqEntrySelectState_CS.newone)
  return _internal_mutable_newone();
}
inline void MSG_ReqEntrySelectState_CS::set_allocated_newone(::msg::EntryIDType* newone) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete newone_;
  }
  if (newone) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      newone = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newone, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  newone_ = newone;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_ReqEntrySelectState_CS.newone)
}

// -------------------------------------------------------------------

// MSG_RetEntrySelectState_SC

// optional .msg.EntryIDType choosen = 1;
inline bool MSG_RetEntrySelectState_SC::_internal_has_choosen() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || choosen_ != nullptr);
  return value;
}
inline bool MSG_RetEntrySelectState_SC::has_choosen() const {
  return _internal_has_choosen();
}
inline void MSG_RetEntrySelectState_SC::clear_choosen() {
  if (choosen_ != nullptr) choosen_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::EntryIDType& MSG_RetEntrySelectState_SC::_internal_choosen() const {
  const ::msg::EntryIDType* p = choosen_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_RetEntrySelectState_SC::choosen() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetEntrySelectState_SC.choosen)
  return _internal_choosen();
}
inline ::msg::EntryIDType* MSG_RetEntrySelectState_SC::release_choosen() {
  // @@protoc_insertion_point(field_release:msg.MSG_RetEntrySelectState_SC.choosen)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = choosen_;
  choosen_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_RetEntrySelectState_SC::_internal_mutable_choosen() {
  _has_bits_[0] |= 0x00000001u;
  if (choosen_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    choosen_ = p;
  }
  return choosen_;
}
inline ::msg::EntryIDType* MSG_RetEntrySelectState_SC::mutable_choosen() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_RetEntrySelectState_SC.choosen)
  return _internal_mutable_choosen();
}
inline void MSG_RetEntrySelectState_SC::set_allocated_choosen(::msg::EntryIDType* choosen) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete choosen_;
  }
  if (choosen) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      choosen = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, choosen, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  choosen_ = choosen;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_RetEntrySelectState_SC.choosen)
}

// repeated .msg.StateItem states = 2;
inline int MSG_RetEntrySelectState_SC::_internal_states_size() const {
  return states_.size();
}
inline int MSG_RetEntrySelectState_SC::states_size() const {
  return _internal_states_size();
}
inline void MSG_RetEntrySelectState_SC::clear_states() {
  states_.Clear();
}
inline ::msg::StateItem* MSG_RetEntrySelectState_SC::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_RetEntrySelectState_SC.states)
  return states_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >*
MSG_RetEntrySelectState_SC::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_RetEntrySelectState_SC.states)
  return &states_;
}
inline const ::msg::StateItem& MSG_RetEntrySelectState_SC::_internal_states(int index) const {
  return states_.Get(index);
}
inline const ::msg::StateItem& MSG_RetEntrySelectState_SC::states(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetEntrySelectState_SC.states)
  return _internal_states(index);
}
inline ::msg::StateItem* MSG_RetEntrySelectState_SC::_internal_add_states() {
  return states_.Add();
}
inline ::msg::StateItem* MSG_RetEntrySelectState_SC::add_states() {
  // @@protoc_insertion_point(field_add:msg.MSG_RetEntrySelectState_SC.states)
  return _internal_add_states();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::StateItem >&
MSG_RetEntrySelectState_SC::states() const {
  // @@protoc_insertion_point(field_list:msg.MSG_RetEntrySelectState_SC.states)
  return states_;
}

// -------------------------------------------------------------------

// MSG_RetHpMpToSelects_SC

// optional .msg.EntryIDType choosen = 1;
inline bool MSG_RetHpMpToSelects_SC::_internal_has_choosen() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || choosen_ != nullptr);
  return value;
}
inline bool MSG_RetHpMpToSelects_SC::has_choosen() const {
  return _internal_has_choosen();
}
inline void MSG_RetHpMpToSelects_SC::clear_choosen() {
  if (choosen_ != nullptr) choosen_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::EntryIDType& MSG_RetHpMpToSelects_SC::_internal_choosen() const {
  const ::msg::EntryIDType* p = choosen_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_RetHpMpToSelects_SC::choosen() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetHpMpToSelects_SC.choosen)
  return _internal_choosen();
}
inline ::msg::EntryIDType* MSG_RetHpMpToSelects_SC::release_choosen() {
  // @@protoc_insertion_point(field_release:msg.MSG_RetHpMpToSelects_SC.choosen)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = choosen_;
  choosen_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_RetHpMpToSelects_SC::_internal_mutable_choosen() {
  _has_bits_[0] |= 0x00000001u;
  if (choosen_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    choosen_ = p;
  }
  return choosen_;
}
inline ::msg::EntryIDType* MSG_RetHpMpToSelects_SC::mutable_choosen() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_RetHpMpToSelects_SC.choosen)
  return _internal_mutable_choosen();
}
inline void MSG_RetHpMpToSelects_SC::set_allocated_choosen(::msg::EntryIDType* choosen) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete choosen_;
  }
  if (choosen) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      choosen = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, choosen, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  choosen_ = choosen;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_RetHpMpToSelects_SC.choosen)
}

// optional uint32 curhp = 2;
inline bool MSG_RetHpMpToSelects_SC::_internal_has_curhp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetHpMpToSelects_SC::has_curhp() const {
  return _internal_has_curhp();
}
inline void MSG_RetHpMpToSelects_SC::clear_curhp() {
  curhp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHpMpToSelects_SC::_internal_curhp() const {
  return curhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHpMpToSelects_SC::curhp() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetHpMpToSelects_SC.curhp)
  return _internal_curhp();
}
inline void MSG_RetHpMpToSelects_SC::_internal_set_curhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  curhp_ = value;
}
inline void MSG_RetHpMpToSelects_SC::set_curhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curhp(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetHpMpToSelects_SC.curhp)
}

// optional uint32 maxhp = 3;
inline bool MSG_RetHpMpToSelects_SC::_internal_has_maxhp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetHpMpToSelects_SC::has_maxhp() const {
  return _internal_has_maxhp();
}
inline void MSG_RetHpMpToSelects_SC::clear_maxhp() {
  maxhp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHpMpToSelects_SC::_internal_maxhp() const {
  return maxhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHpMpToSelects_SC::maxhp() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetHpMpToSelects_SC.maxhp)
  return _internal_maxhp();
}
inline void MSG_RetHpMpToSelects_SC::_internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  maxhp_ = value;
}
inline void MSG_RetHpMpToSelects_SC::set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxhp(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetHpMpToSelects_SC.maxhp)
}

// optional uint32 curmp = 4;
inline bool MSG_RetHpMpToSelects_SC::_internal_has_curmp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RetHpMpToSelects_SC::has_curmp() const {
  return _internal_has_curmp();
}
inline void MSG_RetHpMpToSelects_SC::clear_curmp() {
  curmp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHpMpToSelects_SC::_internal_curmp() const {
  return curmp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHpMpToSelects_SC::curmp() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetHpMpToSelects_SC.curmp)
  return _internal_curmp();
}
inline void MSG_RetHpMpToSelects_SC::_internal_set_curmp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  curmp_ = value;
}
inline void MSG_RetHpMpToSelects_SC::set_curmp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curmp(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetHpMpToSelects_SC.curmp)
}

// optional uint32 maxmp = 5;
inline bool MSG_RetHpMpToSelects_SC::_internal_has_maxmp() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_RetHpMpToSelects_SC::has_maxmp() const {
  return _internal_has_maxmp();
}
inline void MSG_RetHpMpToSelects_SC::clear_maxmp() {
  maxmp_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHpMpToSelects_SC::_internal_maxmp() const {
  return maxmp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHpMpToSelects_SC::maxmp() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetHpMpToSelects_SC.maxmp)
  return _internal_maxmp();
}
inline void MSG_RetHpMpToSelects_SC::_internal_set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  maxmp_ = value;
}
inline void MSG_RetHpMpToSelects_SC::set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxmp(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetHpMpToSelects_SC.maxmp)
}

// -------------------------------------------------------------------

// MSG_ReqHeroAttributeData_CS

// optional string herothisid = 1;
inline bool MSG_ReqHeroAttributeData_CS::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqHeroAttributeData_CS::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void MSG_ReqHeroAttributeData_CS::clear_herothisid() {
  herothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqHeroAttributeData_CS::herothisid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_ReqHeroAttributeData_CS.herothisid)
  return _internal_herothisid();
}
inline void MSG_ReqHeroAttributeData_CS::set_herothisid(const std::string& value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_ReqHeroAttributeData_CS.herothisid)
}
inline std::string* MSG_ReqHeroAttributeData_CS::mutable_herothisid() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_ReqHeroAttributeData_CS.herothisid)
  return _internal_mutable_herothisid();
}
inline const std::string& MSG_ReqHeroAttributeData_CS::_internal_herothisid() const {
  return herothisid_.GetNoArena();
}
inline void MSG_ReqHeroAttributeData_CS::_internal_set_herothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqHeroAttributeData_CS::set_herothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_ReqHeroAttributeData_CS.herothisid)
}
inline void MSG_ReqHeroAttributeData_CS::set_herothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_ReqHeroAttributeData_CS.herothisid)
}
inline void MSG_ReqHeroAttributeData_CS::set_herothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_ReqHeroAttributeData_CS.herothisid)
}
inline std::string* MSG_ReqHeroAttributeData_CS::_internal_mutable_herothisid() {
  _has_bits_[0] |= 0x00000001u;
  return herothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqHeroAttributeData_CS::release_herothisid() {
  // @@protoc_insertion_point(field_release:msg.MSG_ReqHeroAttributeData_CS.herothisid)
  if (!_internal_has_herothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return herothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqHeroAttributeData_CS::set_allocated_herothisid(std::string* herothisid) {
  if (herothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herothisid);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_ReqHeroAttributeData_CS.herothisid)
}

// -------------------------------------------------------------------

// MSG_RetHeroAttributeData_SC

// optional string herothisid = 1;
inline bool MSG_RetHeroAttributeData_SC::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetHeroAttributeData_SC::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void MSG_RetHeroAttributeData_SC::clear_herothisid() {
  herothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_RetHeroAttributeData_SC::herothisid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetHeroAttributeData_SC.herothisid)
  return _internal_herothisid();
}
inline void MSG_RetHeroAttributeData_SC::set_herothisid(const std::string& value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetHeroAttributeData_SC.herothisid)
}
inline std::string* MSG_RetHeroAttributeData_SC::mutable_herothisid() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_RetHeroAttributeData_SC.herothisid)
  return _internal_mutable_herothisid();
}
inline const std::string& MSG_RetHeroAttributeData_SC::_internal_herothisid() const {
  return herothisid_.GetNoArena();
}
inline void MSG_RetHeroAttributeData_SC::_internal_set_herothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_RetHeroAttributeData_SC::set_herothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_RetHeroAttributeData_SC.herothisid)
}
inline void MSG_RetHeroAttributeData_SC::set_herothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_RetHeroAttributeData_SC.herothisid)
}
inline void MSG_RetHeroAttributeData_SC::set_herothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_RetHeroAttributeData_SC.herothisid)
}
inline std::string* MSG_RetHeroAttributeData_SC::_internal_mutable_herothisid() {
  _has_bits_[0] |= 0x00000001u;
  return herothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_RetHeroAttributeData_SC::release_herothisid() {
  // @@protoc_insertion_point(field_release:msg.MSG_RetHeroAttributeData_SC.herothisid)
  if (!_internal_has_herothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return herothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_RetHeroAttributeData_SC::set_allocated_herothisid(std::string* herothisid) {
  if (herothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herothisid);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_RetHeroAttributeData_SC.herothisid)
}

// optional .msg.AttributeData data = 2;
inline bool MSG_RetHeroAttributeData_SC::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool MSG_RetHeroAttributeData_SC::has_data() const {
  return _internal_has_data();
}
inline void MSG_RetHeroAttributeData_SC::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::msg::AttributeData& MSG_RetHeroAttributeData_SC::_internal_data() const {
  const ::msg::AttributeData* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::AttributeData*>(
      &::msg::_AttributeData_default_instance_);
}
inline const ::msg::AttributeData& MSG_RetHeroAttributeData_SC::data() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetHeroAttributeData_SC.data)
  return _internal_data();
}
inline ::msg::AttributeData* MSG_RetHeroAttributeData_SC::release_data() {
  // @@protoc_insertion_point(field_release:msg.MSG_RetHeroAttributeData_SC.data)
  _has_bits_[0] &= ~0x00000002u;
  ::msg::AttributeData* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::msg::AttributeData* MSG_RetHeroAttributeData_SC::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000002u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::AttributeData>(GetArenaNoVirtual());
    data_ = p;
  }
  return data_;
}
inline ::msg::AttributeData* MSG_RetHeroAttributeData_SC::mutable_data() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_RetHeroAttributeData_SC.data)
  return _internal_mutable_data();
}
inline void MSG_RetHeroAttributeData_SC::set_allocated_data(::msg::AttributeData* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_RetHeroAttributeData_SC.data)
}

// optional uint32 fightvalue = 3;
inline bool MSG_RetHeroAttributeData_SC::_internal_has_fightvalue() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetHeroAttributeData_SC::has_fightvalue() const {
  return _internal_has_fightvalue();
}
inline void MSG_RetHeroAttributeData_SC::clear_fightvalue() {
  fightvalue_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHeroAttributeData_SC::_internal_fightvalue() const {
  return fightvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetHeroAttributeData_SC::fightvalue() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetHeroAttributeData_SC.fightvalue)
  return _internal_fightvalue();
}
inline void MSG_RetHeroAttributeData_SC::_internal_set_fightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  fightvalue_ = value;
}
inline void MSG_RetHeroAttributeData_SC::set_fightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fightvalue(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetHeroAttributeData_SC.fightvalue)
}

// -------------------------------------------------------------------

// MSG_RetDiffLineOfLeader_SC

// -------------------------------------------------------------------

// MSG_ReqJumptoLeaderLine_CS

// -------------------------------------------------------------------

// SelectUserInfo

// optional uint64 charid = 1;
inline bool SelectUserInfo::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SelectUserInfo::has_charid() const {
  return _internal_has_charid();
}
inline void SelectUserInfo::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SelectUserInfo::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SelectUserInfo::charid() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.charid)
  return _internal_charid();
}
inline void SelectUserInfo::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  charid_ = value;
}
inline void SelectUserInfo::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.charid)
}

// optional string name = 2;
inline bool SelectUserInfo::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SelectUserInfo::has_name() const {
  return _internal_has_name();
}
inline void SelectUserInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SelectUserInfo::name() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.name)
  return _internal_name();
}
inline void SelectUserInfo::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.name)
}
inline std::string* SelectUserInfo::mutable_name() {
  // @@protoc_insertion_point(field_mutable:msg.SelectUserInfo.name)
  return _internal_mutable_name();
}
inline const std::string& SelectUserInfo::_internal_name() const {
  return name_.GetNoArena();
}
inline void SelectUserInfo::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SelectUserInfo::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.SelectUserInfo.name)
}
inline void SelectUserInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.SelectUserInfo.name)
}
inline void SelectUserInfo::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.SelectUserInfo.name)
}
inline std::string* SelectUserInfo::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SelectUserInfo::release_name() {
  // @@protoc_insertion_point(field_release:msg.SelectUserInfo.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SelectUserInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.SelectUserInfo.name)
}

// optional uint32 level = 3;
inline bool SelectUserInfo::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SelectUserInfo::has_level() const {
  return _internal_has_level();
}
inline void SelectUserInfo::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::level() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.level)
  return _internal_level();
}
inline void SelectUserInfo::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  level_ = value;
}
inline void SelectUserInfo::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.level)
}

// required .msg.SEX sex = 4;
inline bool SelectUserInfo::_internal_has_sex() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool SelectUserInfo::has_sex() const {
  return _internal_has_sex();
}
inline void SelectUserInfo::clear_sex() {
  sex_ = 1;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::msg::SEX SelectUserInfo::_internal_sex() const {
  return static_cast< ::msg::SEX >(sex_);
}
inline ::msg::SEX SelectUserInfo::sex() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.sex)
  return _internal_sex();
}
inline void SelectUserInfo::_internal_set_sex(::msg::SEX value) {
  assert(::msg::SEX_IsValid(value));
  _has_bits_[0] |= 0x00010000u;
  sex_ = value;
}
inline void SelectUserInfo::set_sex(::msg::SEX value) {
  _internal_set_sex(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.sex)
}

// optional uint32 heroid = 5;
inline bool SelectUserInfo::_internal_has_heroid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool SelectUserInfo::has_heroid() const {
  return _internal_has_heroid();
}
inline void SelectUserInfo::clear_heroid() {
  heroid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_heroid() const {
  return heroid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::heroid() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.heroid)
  return _internal_heroid();
}
inline void SelectUserInfo::_internal_set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  heroid_ = value;
}
inline void SelectUserInfo::set_heroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_heroid(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.heroid)
}

// optional uint32 curheroid = 6;
inline bool SelectUserInfo::_internal_has_curheroid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool SelectUserInfo::has_curheroid() const {
  return _internal_has_curheroid();
}
inline void SelectUserInfo::clear_curheroid() {
  curheroid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_curheroid() const {
  return curheroid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::curheroid() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.curheroid)
  return _internal_curheroid();
}
inline void SelectUserInfo::_internal_set_curheroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  curheroid_ = value;
}
inline void SelectUserInfo::set_curheroid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curheroid(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.curheroid)
}

// optional uint32 delTime = 7;
inline bool SelectUserInfo::_internal_has_deltime() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool SelectUserInfo::has_deltime() const {
  return _internal_has_deltime();
}
inline void SelectUserInfo::clear_deltime() {
  deltime_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_deltime() const {
  return deltime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::deltime() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.delTime)
  return _internal_deltime();
}
inline void SelectUserInfo::_internal_set_deltime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  deltime_ = value;
}
inline void SelectUserInfo::set_deltime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deltime(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.delTime)
}

// optional uint32 offlinetime = 8;
inline bool SelectUserInfo::_internal_has_offlinetime() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool SelectUserInfo::has_offlinetime() const {
  return _internal_has_offlinetime();
}
inline void SelectUserInfo::clear_offlinetime() {
  offlinetime_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_offlinetime() const {
  return offlinetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::offlinetime() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.offlinetime)
  return _internal_offlinetime();
}
inline void SelectUserInfo::_internal_set_offlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  offlinetime_ = value;
}
inline void SelectUserInfo::set_offlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offlinetime(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.offlinetime)
}

// optional uint32 facestyle = 9;
inline bool SelectUserInfo::_internal_has_facestyle() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool SelectUserInfo::has_facestyle() const {
  return _internal_has_facestyle();
}
inline void SelectUserInfo::clear_facestyle() {
  facestyle_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_facestyle() const {
  return facestyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::facestyle() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.facestyle)
  return _internal_facestyle();
}
inline void SelectUserInfo::_internal_set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  facestyle_ = value;
}
inline void SelectUserInfo::set_facestyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_facestyle(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.facestyle)
}

// optional uint32 hairstyle = 10;
inline bool SelectUserInfo::_internal_has_hairstyle() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool SelectUserInfo::has_hairstyle() const {
  return _internal_has_hairstyle();
}
inline void SelectUserInfo::clear_hairstyle() {
  hairstyle_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_hairstyle() const {
  return hairstyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::hairstyle() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.hairstyle)
  return _internal_hairstyle();
}
inline void SelectUserInfo::_internal_set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  hairstyle_ = value;
}
inline void SelectUserInfo::set_hairstyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hairstyle(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.hairstyle)
}

// optional uint32 haircolor = 11;
inline bool SelectUserInfo::_internal_has_haircolor() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool SelectUserInfo::has_haircolor() const {
  return _internal_has_haircolor();
}
inline void SelectUserInfo::clear_haircolor() {
  haircolor_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_haircolor() const {
  return haircolor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::haircolor() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.haircolor)
  return _internal_haircolor();
}
inline void SelectUserInfo::_internal_set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  haircolor_ = value;
}
inline void SelectUserInfo::set_haircolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_haircolor(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.haircolor)
}

// optional uint32 bodystyle = 12;
inline bool SelectUserInfo::_internal_has_bodystyle() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool SelectUserInfo::has_bodystyle() const {
  return _internal_has_bodystyle();
}
inline void SelectUserInfo::clear_bodystyle() {
  bodystyle_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_bodystyle() const {
  return bodystyle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::bodystyle() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.bodystyle)
  return _internal_bodystyle();
}
inline void SelectUserInfo::_internal_set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  bodystyle_ = value;
}
inline void SelectUserInfo::set_bodystyle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bodystyle(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.bodystyle)
}

// optional uint32 antenna = 13;
inline bool SelectUserInfo::_internal_has_antenna() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool SelectUserInfo::has_antenna() const {
  return _internal_has_antenna();
}
inline void SelectUserInfo::clear_antenna() {
  antenna_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_antenna() const {
  return antenna_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::antenna() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.antenna)
  return _internal_antenna();
}
inline void SelectUserInfo::_internal_set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  antenna_ = value;
}
inline void SelectUserInfo::set_antenna(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_antenna(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.antenna)
}

// optional uint32 onlinelasttime = 14;
inline bool SelectUserInfo::_internal_has_onlinelasttime() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool SelectUserInfo::has_onlinelasttime() const {
  return _internal_has_onlinelasttime();
}
inline void SelectUserInfo::clear_onlinelasttime() {
  onlinelasttime_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_onlinelasttime() const {
  return onlinelasttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::onlinelasttime() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.onlinelasttime)
  return _internal_onlinelasttime();
}
inline void SelectUserInfo::_internal_set_onlinelasttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  onlinelasttime_ = value;
}
inline void SelectUserInfo::set_onlinelasttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_onlinelasttime(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.onlinelasttime)
}

// optional uint32 addictpreuptime = 15;
inline bool SelectUserInfo::_internal_has_addictpreuptime() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool SelectUserInfo::has_addictpreuptime() const {
  return _internal_has_addictpreuptime();
}
inline void SelectUserInfo::clear_addictpreuptime() {
  addictpreuptime_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_addictpreuptime() const {
  return addictpreuptime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::addictpreuptime() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.addictpreuptime)
  return _internal_addictpreuptime();
}
inline void SelectUserInfo::_internal_set_addictpreuptime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  addictpreuptime_ = value;
}
inline void SelectUserInfo::set_addictpreuptime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_addictpreuptime(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.addictpreuptime)
}

// optional string mapname = 16;
inline bool SelectUserInfo::_internal_has_mapname() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SelectUserInfo::has_mapname() const {
  return _internal_has_mapname();
}
inline void SelectUserInfo::clear_mapname() {
  mapname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SelectUserInfo::mapname() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.mapname)
  return _internal_mapname();
}
inline void SelectUserInfo::set_mapname(const std::string& value) {
  _internal_set_mapname(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.mapname)
}
inline std::string* SelectUserInfo::mutable_mapname() {
  // @@protoc_insertion_point(field_mutable:msg.SelectUserInfo.mapname)
  return _internal_mutable_mapname();
}
inline const std::string& SelectUserInfo::_internal_mapname() const {
  return mapname_.GetNoArena();
}
inline void SelectUserInfo::_internal_set_mapname(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  mapname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SelectUserInfo::set_mapname(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  mapname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.SelectUserInfo.mapname)
}
inline void SelectUserInfo::set_mapname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  mapname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.SelectUserInfo.mapname)
}
inline void SelectUserInfo::set_mapname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  mapname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.SelectUserInfo.mapname)
}
inline std::string* SelectUserInfo::_internal_mutable_mapname() {
  _has_bits_[0] |= 0x00000002u;
  return mapname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SelectUserInfo::release_mapname() {
  // @@protoc_insertion_point(field_release:msg.SelectUserInfo.mapname)
  if (!_internal_has_mapname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return mapname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SelectUserInfo::set_allocated_mapname(std::string* mapname) {
  if (mapname != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  mapname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mapname);
  // @@protoc_insertion_point(field_set_allocated:msg.SelectUserInfo.mapname)
}

// optional uint32 avatarid = 17;
inline bool SelectUserInfo::_internal_has_avatarid() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool SelectUserInfo::has_avatarid() const {
  return _internal_has_avatarid();
}
inline void SelectUserInfo::clear_avatarid() {
  avatarid_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::_internal_avatarid() const {
  return avatarid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelectUserInfo::avatarid() const {
  // @@protoc_insertion_point(field_get:msg.SelectUserInfo.avatarid)
  return _internal_avatarid();
}
inline void SelectUserInfo::_internal_set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  avatarid_ = value;
}
inline void SelectUserInfo::set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_avatarid(value);
  // @@protoc_insertion_point(field_set:msg.SelectUserInfo.avatarid)
}

// -------------------------------------------------------------------

// MSG_Ret_LoginOnReturnCharList_SC

// repeated .msg.SelectUserInfo charList = 1;
inline int MSG_Ret_LoginOnReturnCharList_SC::_internal_charlist_size() const {
  return charlist_.size();
}
inline int MSG_Ret_LoginOnReturnCharList_SC::charlist_size() const {
  return _internal_charlist_size();
}
inline void MSG_Ret_LoginOnReturnCharList_SC::clear_charlist() {
  charlist_.Clear();
}
inline ::msg::SelectUserInfo* MSG_Ret_LoginOnReturnCharList_SC::mutable_charlist(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_LoginOnReturnCharList_SC.charList)
  return charlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::SelectUserInfo >*
MSG_Ret_LoginOnReturnCharList_SC::mutable_charlist() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Ret_LoginOnReturnCharList_SC.charList)
  return &charlist_;
}
inline const ::msg::SelectUserInfo& MSG_Ret_LoginOnReturnCharList_SC::_internal_charlist(int index) const {
  return charlist_.Get(index);
}
inline const ::msg::SelectUserInfo& MSG_Ret_LoginOnReturnCharList_SC::charlist(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_LoginOnReturnCharList_SC.charList)
  return _internal_charlist(index);
}
inline ::msg::SelectUserInfo* MSG_Ret_LoginOnReturnCharList_SC::_internal_add_charlist() {
  return charlist_.Add();
}
inline ::msg::SelectUserInfo* MSG_Ret_LoginOnReturnCharList_SC::add_charlist() {
  // @@protoc_insertion_point(field_add:msg.MSG_Ret_LoginOnReturnCharList_SC.charList)
  return _internal_add_charlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::SelectUserInfo >&
MSG_Ret_LoginOnReturnCharList_SC::charlist() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Ret_LoginOnReturnCharList_SC.charList)
  return charlist_;
}

// -------------------------------------------------------------------

// MSG_Req_SelectCharToLogin_CS

// optional uint64 charid = 1;
inline bool MSG_Req_SelectCharToLogin_CS::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_SelectCharToLogin_CS::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_Req_SelectCharToLogin_CS::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_SelectCharToLogin_CS::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_SelectCharToLogin_CS::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_SelectCharToLogin_CS.charid)
  return _internal_charid();
}
inline void MSG_Req_SelectCharToLogin_CS::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  charid_ = value;
}
inline void MSG_Req_SelectCharToLogin_CS::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_SelectCharToLogin_CS.charid)
}

// -------------------------------------------------------------------

// MSG_Req_IS_NICKNAME_REPEATED_CSC

// optional string name = 1;
inline bool MSG_Req_IS_NICKNAME_REPEATED_CSC::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_IS_NICKNAME_REPEATED_CSC::has_name() const {
  return _internal_has_name();
}
inline void MSG_Req_IS_NICKNAME_REPEATED_CSC::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_IS_NICKNAME_REPEATED_CSC::name() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC.name)
  return _internal_name();
}
inline void MSG_Req_IS_NICKNAME_REPEATED_CSC::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC.name)
}
inline std::string* MSG_Req_IS_NICKNAME_REPEATED_CSC::mutable_name() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC.name)
  return _internal_mutable_name();
}
inline const std::string& MSG_Req_IS_NICKNAME_REPEATED_CSC::_internal_name() const {
  return name_.GetNoArena();
}
inline void MSG_Req_IS_NICKNAME_REPEATED_CSC::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_IS_NICKNAME_REPEATED_CSC::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC.name)
}
inline void MSG_Req_IS_NICKNAME_REPEATED_CSC::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC.name)
}
inline void MSG_Req_IS_NICKNAME_REPEATED_CSC::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC.name)
}
inline std::string* MSG_Req_IS_NICKNAME_REPEATED_CSC::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_IS_NICKNAME_REPEATED_CSC::release_name() {
  // @@protoc_insertion_point(field_release:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_IS_NICKNAME_REPEATED_CSC::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC.name)
}

// optional uint32 ret = 2;
inline bool MSG_Req_IS_NICKNAME_REPEATED_CSC::_internal_has_ret() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_IS_NICKNAME_REPEATED_CSC::has_ret() const {
  return _internal_has_ret();
}
inline void MSG_Req_IS_NICKNAME_REPEATED_CSC::clear_ret() {
  ret_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_IS_NICKNAME_REPEATED_CSC::_internal_ret() const {
  return ret_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_IS_NICKNAME_REPEATED_CSC::ret() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC.ret)
  return _internal_ret();
}
inline void MSG_Req_IS_NICKNAME_REPEATED_CSC::_internal_set_ret(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ret_ = value;
}
inline void MSG_Req_IS_NICKNAME_REPEATED_CSC::set_ret(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ret(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_IS_NICKNAME_REPEATED_CSC.ret)
}

// -------------------------------------------------------------------

// MSG_Req_Back_to_Select_CS

// -------------------------------------------------------------------

// MSG_Req_Delete_Char_CSC

// optional uint64 charid = 1;
inline bool MSG_Req_Delete_Char_CSC::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_Delete_Char_CSC::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_Req_Delete_Char_CSC::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_Delete_Char_CSC::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_Delete_Char_CSC::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Delete_Char_CSC.charid)
  return _internal_charid();
}
inline void MSG_Req_Delete_Char_CSC::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  charid_ = value;
}
inline void MSG_Req_Delete_Char_CSC::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Delete_Char_CSC.charid)
}

// optional uint32 opcode = 2;
inline bool MSG_Req_Delete_Char_CSC::_internal_has_opcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_Delete_Char_CSC::has_opcode() const {
  return _internal_has_opcode();
}
inline void MSG_Req_Delete_Char_CSC::clear_opcode() {
  opcode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Delete_Char_CSC::_internal_opcode() const {
  return opcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Delete_Char_CSC::opcode() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Delete_Char_CSC.opcode)
  return _internal_opcode();
}
inline void MSG_Req_Delete_Char_CSC::_internal_set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  opcode_ = value;
}
inline void MSG_Req_Delete_Char_CSC::set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_opcode(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Delete_Char_CSC.opcode)
}

// optional uint32 retcode = 3;
inline bool MSG_Req_Delete_Char_CSC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Req_Delete_Char_CSC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Req_Delete_Char_CSC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Delete_Char_CSC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Delete_Char_CSC::retcode() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Delete_Char_CSC.retcode)
  return _internal_retcode();
}
inline void MSG_Req_Delete_Char_CSC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  retcode_ = value;
}
inline void MSG_Req_Delete_Char_CSC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Delete_Char_CSC.retcode)
}

// -------------------------------------------------------------------

// MSG_Req_Syn_MoveState_CS

// optional uint32 move_state = 1;
inline bool MSG_Req_Syn_MoveState_CS::_internal_has_move_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_Syn_MoveState_CS::has_move_state() const {
  return _internal_has_move_state();
}
inline void MSG_Req_Syn_MoveState_CS::clear_move_state() {
  move_state_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::_internal_move_state() const {
  return move_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::move_state() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Syn_MoveState_CS.move_state)
  return _internal_move_state();
}
inline void MSG_Req_Syn_MoveState_CS::_internal_set_move_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  move_state_ = value;
}
inline void MSG_Req_Syn_MoveState_CS::set_move_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_move_state(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Syn_MoveState_CS.move_state)
}

// optional uint32 dir = 2;
inline bool MSG_Req_Syn_MoveState_CS::_internal_has_dir() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_Syn_MoveState_CS::has_dir() const {
  return _internal_has_dir();
}
inline void MSG_Req_Syn_MoveState_CS::clear_dir() {
  dir_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::_internal_dir() const {
  return dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::dir() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Syn_MoveState_CS.dir)
  return _internal_dir();
}
inline void MSG_Req_Syn_MoveState_CS::_internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  dir_ = value;
}
inline void MSG_Req_Syn_MoveState_CS::set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Syn_MoveState_CS.dir)
}

// optional uint32 destx = 3;
inline bool MSG_Req_Syn_MoveState_CS::_internal_has_destx() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Req_Syn_MoveState_CS::has_destx() const {
  return _internal_has_destx();
}
inline void MSG_Req_Syn_MoveState_CS::clear_destx() {
  destx_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::_internal_destx() const {
  return destx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::destx() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Syn_MoveState_CS.destx)
  return _internal_destx();
}
inline void MSG_Req_Syn_MoveState_CS::_internal_set_destx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  destx_ = value;
}
inline void MSG_Req_Syn_MoveState_CS::set_destx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_destx(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Syn_MoveState_CS.destx)
}

// optional uint32 desty = 4;
inline bool MSG_Req_Syn_MoveState_CS::_internal_has_desty() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Req_Syn_MoveState_CS::has_desty() const {
  return _internal_has_desty();
}
inline void MSG_Req_Syn_MoveState_CS::clear_desty() {
  desty_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::_internal_desty() const {
  return desty_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::desty() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Syn_MoveState_CS.desty)
  return _internal_desty();
}
inline void MSG_Req_Syn_MoveState_CS::_internal_set_desty(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  desty_ = value;
}
inline void MSG_Req_Syn_MoveState_CS::set_desty(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_desty(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Syn_MoveState_CS.desty)
}

// optional uint32 movespeed = 5;
inline bool MSG_Req_Syn_MoveState_CS::_internal_has_movespeed() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Req_Syn_MoveState_CS::has_movespeed() const {
  return _internal_has_movespeed();
}
inline void MSG_Req_Syn_MoveState_CS::clear_movespeed() {
  movespeed_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::_internal_movespeed() const {
  return movespeed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::movespeed() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Syn_MoveState_CS.movespeed)
  return _internal_movespeed();
}
inline void MSG_Req_Syn_MoveState_CS::_internal_set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  movespeed_ = value;
}
inline void MSG_Req_Syn_MoveState_CS::set_movespeed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_movespeed(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Syn_MoveState_CS.movespeed)
}

// optional uint32 step = 6;
inline bool MSG_Req_Syn_MoveState_CS::_internal_has_step() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Req_Syn_MoveState_CS::has_step() const {
  return _internal_has_step();
}
inline void MSG_Req_Syn_MoveState_CS::clear_step() {
  step_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::_internal_step() const {
  return step_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::step() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Syn_MoveState_CS.step)
  return _internal_step();
}
inline void MSG_Req_Syn_MoveState_CS::_internal_set_step(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  step_ = value;
}
inline void MSG_Req_Syn_MoveState_CS::set_step(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_step(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Syn_MoveState_CS.step)
}

// optional uint32 srcx = 7;
inline bool MSG_Req_Syn_MoveState_CS::_internal_has_srcx() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Req_Syn_MoveState_CS::has_srcx() const {
  return _internal_has_srcx();
}
inline void MSG_Req_Syn_MoveState_CS::clear_srcx() {
  srcx_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::_internal_srcx() const {
  return srcx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::srcx() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Syn_MoveState_CS.srcx)
  return _internal_srcx();
}
inline void MSG_Req_Syn_MoveState_CS::_internal_set_srcx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  srcx_ = value;
}
inline void MSG_Req_Syn_MoveState_CS::set_srcx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_srcx(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Syn_MoveState_CS.srcx)
}

// optional uint32 srcy = 8;
inline bool MSG_Req_Syn_MoveState_CS::_internal_has_srcy() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MSG_Req_Syn_MoveState_CS::has_srcy() const {
  return _internal_has_srcy();
}
inline void MSG_Req_Syn_MoveState_CS::clear_srcy() {
  srcy_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::_internal_srcy() const {
  return srcy_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_Syn_MoveState_CS::srcy() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Syn_MoveState_CS.srcy)
  return _internal_srcy();
}
inline void MSG_Req_Syn_MoveState_CS::_internal_set_srcy(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  srcy_ = value;
}
inline void MSG_Req_Syn_MoveState_CS::set_srcy(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_srcy(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Req_Syn_MoveState_CS.srcy)
}

// repeated .msg.FloatMovePos pos = 9;
inline int MSG_Req_Syn_MoveState_CS::_internal_pos_size() const {
  return pos_.size();
}
inline int MSG_Req_Syn_MoveState_CS::pos_size() const {
  return _internal_pos_size();
}
inline void MSG_Req_Syn_MoveState_CS::clear_pos() {
  pos_.Clear();
}
inline ::msg::FloatMovePos* MSG_Req_Syn_MoveState_CS::mutable_pos(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Req_Syn_MoveState_CS.pos)
  return pos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::FloatMovePos >*
MSG_Req_Syn_MoveState_CS::mutable_pos() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_Req_Syn_MoveState_CS.pos)
  return &pos_;
}
inline const ::msg::FloatMovePos& MSG_Req_Syn_MoveState_CS::_internal_pos(int index) const {
  return pos_.Get(index);
}
inline const ::msg::FloatMovePos& MSG_Req_Syn_MoveState_CS::pos(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_Req_Syn_MoveState_CS.pos)
  return _internal_pos(index);
}
inline ::msg::FloatMovePos* MSG_Req_Syn_MoveState_CS::_internal_add_pos() {
  return pos_.Add();
}
inline ::msg::FloatMovePos* MSG_Req_Syn_MoveState_CS::add_pos() {
  // @@protoc_insertion_point(field_add:msg.MSG_Req_Syn_MoveState_CS.pos)
  return _internal_add_pos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::FloatMovePos >&
MSG_Req_Syn_MoveState_CS::pos() const {
  // @@protoc_insertion_point(field_list:msg.MSG_Req_Syn_MoveState_CS.pos)
  return pos_;
}

// -------------------------------------------------------------------

// MSG_Ret_Find_Path_SC

// optional uint64 charid = 1;
inline bool MSG_Ret_Find_Path_SC::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_Find_Path_SC::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_Ret_Find_Path_SC::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_Find_Path_SC::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_Find_Path_SC::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Find_Path_SC.charid)
  return _internal_charid();
}
inline void MSG_Ret_Find_Path_SC::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  charid_ = value;
}
inline void MSG_Ret_Find_Path_SC::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Find_Path_SC.charid)
}

// optional uint32 gridindex = 2;
inline bool MSG_Ret_Find_Path_SC::_internal_has_gridindex() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_Find_Path_SC::has_gridindex() const {
  return _internal_has_gridindex();
}
inline void MSG_Ret_Find_Path_SC::clear_gridindex() {
  gridindex_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Find_Path_SC::_internal_gridindex() const {
  return gridindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Find_Path_SC::gridindex() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Find_Path_SC.gridindex)
  return _internal_gridindex();
}
inline void MSG_Ret_Find_Path_SC::_internal_set_gridindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gridindex_ = value;
}
inline void MSG_Ret_Find_Path_SC::set_gridindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gridindex(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Find_Path_SC.gridindex)
}

// optional uint32 moveres = 3;
inline bool MSG_Ret_Find_Path_SC::_internal_has_moveres() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_Find_Path_SC::has_moveres() const {
  return _internal_has_moveres();
}
inline void MSG_Ret_Find_Path_SC::clear_moveres() {
  moveres_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Find_Path_SC::_internal_moveres() const {
  return moveres_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Find_Path_SC::moveres() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Find_Path_SC.moveres)
  return _internal_moveres();
}
inline void MSG_Ret_Find_Path_SC::_internal_set_moveres(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  moveres_ = value;
}
inline void MSG_Ret_Find_Path_SC::set_moveres(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_moveres(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Find_Path_SC.moveres)
}

// -------------------------------------------------------------------

// MSG_Ret_Rondom_Way_SC

// optional uint32 zonecenterx = 1;
inline bool MSG_Ret_Rondom_Way_SC::_internal_has_zonecenterx() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_Rondom_Way_SC::has_zonecenterx() const {
  return _internal_has_zonecenterx();
}
inline void MSG_Ret_Rondom_Way_SC::clear_zonecenterx() {
  zonecenterx_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::_internal_zonecenterx() const {
  return zonecenterx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::zonecenterx() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Rondom_Way_SC.zonecenterx)
  return _internal_zonecenterx();
}
inline void MSG_Ret_Rondom_Way_SC::_internal_set_zonecenterx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  zonecenterx_ = value;
}
inline void MSG_Ret_Rondom_Way_SC::set_zonecenterx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_zonecenterx(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Rondom_Way_SC.zonecenterx)
}

// optional uint32 zonecentery = 2;
inline bool MSG_Ret_Rondom_Way_SC::_internal_has_zonecentery() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_Rondom_Way_SC::has_zonecentery() const {
  return _internal_has_zonecentery();
}
inline void MSG_Ret_Rondom_Way_SC::clear_zonecentery() {
  zonecentery_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::_internal_zonecentery() const {
  return zonecentery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::zonecentery() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Rondom_Way_SC.zonecentery)
  return _internal_zonecentery();
}
inline void MSG_Ret_Rondom_Way_SC::_internal_set_zonecentery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  zonecentery_ = value;
}
inline void MSG_Ret_Rondom_Way_SC::set_zonecentery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_zonecentery(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Rondom_Way_SC.zonecentery)
}

// optional uint32 zonewidth = 3;
inline bool MSG_Ret_Rondom_Way_SC::_internal_has_zonewidth() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_Rondom_Way_SC::has_zonewidth() const {
  return _internal_has_zonewidth();
}
inline void MSG_Ret_Rondom_Way_SC::clear_zonewidth() {
  zonewidth_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::_internal_zonewidth() const {
  return zonewidth_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::zonewidth() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Rondom_Way_SC.zonewidth)
  return _internal_zonewidth();
}
inline void MSG_Ret_Rondom_Way_SC::_internal_set_zonewidth(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  zonewidth_ = value;
}
inline void MSG_Ret_Rondom_Way_SC::set_zonewidth(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_zonewidth(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Rondom_Way_SC.zonewidth)
}

// optional uint32 zoneheight = 4;
inline bool MSG_Ret_Rondom_Way_SC::_internal_has_zoneheight() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_Rondom_Way_SC::has_zoneheight() const {
  return _internal_has_zoneheight();
}
inline void MSG_Ret_Rondom_Way_SC::clear_zoneheight() {
  zoneheight_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::_internal_zoneheight() const {
  return zoneheight_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::zoneheight() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Rondom_Way_SC.zoneheight)
  return _internal_zoneheight();
}
inline void MSG_Ret_Rondom_Way_SC::_internal_set_zoneheight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  zoneheight_ = value;
}
inline void MSG_Ret_Rondom_Way_SC::set_zoneheight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_zoneheight(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Rondom_Way_SC.zoneheight)
}

// optional uint32 gridwidth = 5;
inline bool MSG_Ret_Rondom_Way_SC::_internal_has_gridwidth() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Ret_Rondom_Way_SC::has_gridwidth() const {
  return _internal_has_gridwidth();
}
inline void MSG_Ret_Rondom_Way_SC::clear_gridwidth() {
  gridwidth_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::_internal_gridwidth() const {
  return gridwidth_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::gridwidth() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Rondom_Way_SC.gridwidth)
  return _internal_gridwidth();
}
inline void MSG_Ret_Rondom_Way_SC::_internal_set_gridwidth(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  gridwidth_ = value;
}
inline void MSG_Ret_Rondom_Way_SC::set_gridwidth(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gridwidth(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Rondom_Way_SC.gridwidth)
}

// optional uint32 gridheight = 6;
inline bool MSG_Ret_Rondom_Way_SC::_internal_has_gridheight() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Ret_Rondom_Way_SC::has_gridheight() const {
  return _internal_has_gridheight();
}
inline void MSG_Ret_Rondom_Way_SC::clear_gridheight() {
  gridheight_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::_internal_gridheight() const {
  return gridheight_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::gridheight() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Rondom_Way_SC.gridheight)
  return _internal_gridheight();
}
inline void MSG_Ret_Rondom_Way_SC::_internal_set_gridheight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  gridheight_ = value;
}
inline void MSG_Ret_Rondom_Way_SC::set_gridheight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gridheight(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Rondom_Way_SC.gridheight)
}

// optional uint32 pathid = 7;
inline bool MSG_Ret_Rondom_Way_SC::_internal_has_pathid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MSG_Ret_Rondom_Way_SC::has_pathid() const {
  return _internal_has_pathid();
}
inline void MSG_Ret_Rondom_Way_SC::clear_pathid() {
  pathid_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::_internal_pathid() const {
  return pathid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Rondom_Way_SC::pathid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Rondom_Way_SC.pathid)
  return _internal_pathid();
}
inline void MSG_Ret_Rondom_Way_SC::_internal_set_pathid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  pathid_ = value;
}
inline void MSG_Ret_Rondom_Way_SC::set_pathid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pathid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Rondom_Way_SC.pathid)
}

// optional string pathinfo = 8;
inline bool MSG_Ret_Rondom_Way_SC::_internal_has_pathinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_Rondom_Way_SC::has_pathinfo() const {
  return _internal_has_pathinfo();
}
inline void MSG_Ret_Rondom_Way_SC::clear_pathinfo() {
  pathinfo_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_Rondom_Way_SC::pathinfo() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Rondom_Way_SC.pathinfo)
  return _internal_pathinfo();
}
inline void MSG_Ret_Rondom_Way_SC::set_pathinfo(const std::string& value) {
  _internal_set_pathinfo(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Rondom_Way_SC.pathinfo)
}
inline std::string* MSG_Ret_Rondom_Way_SC::mutable_pathinfo() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_Ret_Rondom_Way_SC.pathinfo)
  return _internal_mutable_pathinfo();
}
inline const std::string& MSG_Ret_Rondom_Way_SC::_internal_pathinfo() const {
  return pathinfo_.GetNoArena();
}
inline void MSG_Ret_Rondom_Way_SC::_internal_set_pathinfo(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  pathinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_Rondom_Way_SC::set_pathinfo(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  pathinfo_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_Ret_Rondom_Way_SC.pathinfo)
}
inline void MSG_Ret_Rondom_Way_SC::set_pathinfo(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  pathinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_Ret_Rondom_Way_SC.pathinfo)
}
inline void MSG_Ret_Rondom_Way_SC::set_pathinfo(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  pathinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_Ret_Rondom_Way_SC.pathinfo)
}
inline std::string* MSG_Ret_Rondom_Way_SC::_internal_mutable_pathinfo() {
  _has_bits_[0] |= 0x00000001u;
  return pathinfo_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_Rondom_Way_SC::release_pathinfo() {
  // @@protoc_insertion_point(field_release:msg.MSG_Ret_Rondom_Way_SC.pathinfo)
  if (!_internal_has_pathinfo()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return pathinfo_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_Rondom_Way_SC::set_allocated_pathinfo(std::string* pathinfo) {
  if (pathinfo != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pathinfo_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pathinfo);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_Ret_Rondom_Way_SC.pathinfo)
}

// -------------------------------------------------------------------

// MSG_Ret_Find_Path_End_SC

// optional uint32 endcode = 1;
inline bool MSG_Ret_Find_Path_End_SC::_internal_has_endcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_Find_Path_End_SC::has_endcode() const {
  return _internal_has_endcode();
}
inline void MSG_Ret_Find_Path_End_SC::clear_endcode() {
  endcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Find_Path_End_SC::_internal_endcode() const {
  return endcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_Find_Path_End_SC::endcode() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Ret_Find_Path_End_SC.endcode)
  return _internal_endcode();
}
inline void MSG_Ret_Find_Path_End_SC::_internal_set_endcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  endcode_ = value;
}
inline void MSG_Ret_Find_Path_End_SC::set_endcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_endcode(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Ret_Find_Path_End_SC.endcode)
}

// -------------------------------------------------------------------

// MSG_Show_Path_Way_End_CS

// -------------------------------------------------------------------

// LineItem

// optional uint32 index = 1;
inline bool LineItem::_internal_has_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool LineItem::has_index() const {
  return _internal_has_index();
}
inline void LineItem::clear_index() {
  index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LineItem::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LineItem::index() const {
  // @@protoc_insertion_point(field_get:msg.LineItem.index)
  return _internal_index();
}
inline void LineItem::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  index_ = value;
}
inline void LineItem::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:msg.LineItem.index)
}

// optional uint32 user_num = 2;
inline bool LineItem::_internal_has_user_num() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool LineItem::has_user_num() const {
  return _internal_has_user_num();
}
inline void LineItem::clear_user_num() {
  user_num_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LineItem::_internal_user_num() const {
  return user_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 LineItem::user_num() const {
  // @@protoc_insertion_point(field_get:msg.LineItem.user_num)
  return _internal_user_num();
}
inline void LineItem::_internal_set_user_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  user_num_ = value;
}
inline void LineItem::set_user_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_num(value);
  // @@protoc_insertion_point(field_set:msg.LineItem.user_num)
}

// -------------------------------------------------------------------

// MSG_NoticeClientAllLines_SC

// repeated .msg.LineItem lines = 1;
inline int MSG_NoticeClientAllLines_SC::_internal_lines_size() const {
  return lines_.size();
}
inline int MSG_NoticeClientAllLines_SC::lines_size() const {
  return _internal_lines_size();
}
inline void MSG_NoticeClientAllLines_SC::clear_lines() {
  lines_.Clear();
}
inline ::msg::LineItem* MSG_NoticeClientAllLines_SC::mutable_lines(int index) {
  // @@protoc_insertion_point(field_mutable:msg.MSG_NoticeClientAllLines_SC.lines)
  return lines_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::LineItem >*
MSG_NoticeClientAllLines_SC::mutable_lines() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_NoticeClientAllLines_SC.lines)
  return &lines_;
}
inline const ::msg::LineItem& MSG_NoticeClientAllLines_SC::_internal_lines(int index) const {
  return lines_.Get(index);
}
inline const ::msg::LineItem& MSG_NoticeClientAllLines_SC::lines(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_NoticeClientAllLines_SC.lines)
  return _internal_lines(index);
}
inline ::msg::LineItem* MSG_NoticeClientAllLines_SC::_internal_add_lines() {
  return lines_.Add();
}
inline ::msg::LineItem* MSG_NoticeClientAllLines_SC::add_lines() {
  // @@protoc_insertion_point(field_add:msg.MSG_NoticeClientAllLines_SC.lines)
  return _internal_add_lines();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg::LineItem >&
MSG_NoticeClientAllLines_SC::lines() const {
  // @@protoc_insertion_point(field_list:msg.MSG_NoticeClientAllLines_SC.lines)
  return lines_;
}

// optional uint32 your_line = 2;
inline bool MSG_NoticeClientAllLines_SC::_internal_has_your_line() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_NoticeClientAllLines_SC::has_your_line() const {
  return _internal_has_your_line();
}
inline void MSG_NoticeClientAllLines_SC::clear_your_line() {
  your_line_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NoticeClientAllLines_SC::_internal_your_line() const {
  return your_line_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NoticeClientAllLines_SC::your_line() const {
  // @@protoc_insertion_point(field_get:msg.MSG_NoticeClientAllLines_SC.your_line)
  return _internal_your_line();
}
inline void MSG_NoticeClientAllLines_SC::_internal_set_your_line(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  your_line_ = value;
}
inline void MSG_NoticeClientAllLines_SC::set_your_line(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_your_line(value);
  // @@protoc_insertion_point(field_set:msg.MSG_NoticeClientAllLines_SC.your_line)
}

// -------------------------------------------------------------------

// MSG_UserReqChangeLine_CS

// optional uint32 lineid = 1;
inline bool MSG_UserReqChangeLine_CS::_internal_has_lineid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_UserReqChangeLine_CS::has_lineid() const {
  return _internal_has_lineid();
}
inline void MSG_UserReqChangeLine_CS::clear_lineid() {
  lineid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_UserReqChangeLine_CS::_internal_lineid() const {
  return lineid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_UserReqChangeLine_CS::lineid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_UserReqChangeLine_CS.lineid)
  return _internal_lineid();
}
inline void MSG_UserReqChangeLine_CS::_internal_set_lineid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  lineid_ = value;
}
inline void MSG_UserReqChangeLine_CS::set_lineid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lineid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_UserReqChangeLine_CS.lineid)
}

// -------------------------------------------------------------------

// MSG_OnUserJump_CSC

// optional .msg.MoveData data = 1;
inline bool MSG_OnUserJump_CSC::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool MSG_OnUserJump_CSC::has_data() const {
  return _internal_has_data();
}
inline void MSG_OnUserJump_CSC::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::msg::MoveData& MSG_OnUserJump_CSC::_internal_data() const {
  const ::msg::MoveData* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::MoveData*>(
      &::msg::_MoveData_default_instance_);
}
inline const ::msg::MoveData& MSG_OnUserJump_CSC::data() const {
  // @@protoc_insertion_point(field_get:msg.MSG_OnUserJump_CSC.data)
  return _internal_data();
}
inline ::msg::MoveData* MSG_OnUserJump_CSC::release_data() {
  // @@protoc_insertion_point(field_release:msg.MSG_OnUserJump_CSC.data)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::MoveData* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::msg::MoveData* MSG_OnUserJump_CSC::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::MoveData>(GetArenaNoVirtual());
    data_ = p;
  }
  return data_;
}
inline ::msg::MoveData* MSG_OnUserJump_CSC::mutable_data() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_OnUserJump_CSC.data)
  return _internal_mutable_data();
}
inline void MSG_OnUserJump_CSC::set_allocated_data(::msg::MoveData* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_OnUserJump_CSC.data)
}

// optional uint64 charid = 2;
inline bool MSG_OnUserJump_CSC::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_OnUserJump_CSC::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_OnUserJump_CSC::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_OnUserJump_CSC::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_OnUserJump_CSC::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_OnUserJump_CSC.charid)
  return _internal_charid();
}
inline void MSG_OnUserJump_CSC::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  charid_ = value;
}
inline void MSG_OnUserJump_CSC::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_OnUserJump_CSC.charid)
}

// -------------------------------------------------------------------

// MSG_NPCHatredList_SC

// optional uint64 npctempid = 1;
inline bool MSG_NPCHatredList_SC::_internal_has_npctempid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_NPCHatredList_SC::has_npctempid() const {
  return _internal_has_npctempid();
}
inline void MSG_NPCHatredList_SC::clear_npctempid() {
  npctempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_NPCHatredList_SC::_internal_npctempid() const {
  return npctempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_NPCHatredList_SC::npctempid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_NPCHatredList_SC.npctempid)
  return _internal_npctempid();
}
inline void MSG_NPCHatredList_SC::_internal_set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  npctempid_ = value;
}
inline void MSG_NPCHatredList_SC::set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_npctempid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_NPCHatredList_SC.npctempid)
}

// repeated uint64 enemytempid = 2;
inline int MSG_NPCHatredList_SC::_internal_enemytempid_size() const {
  return enemytempid_.size();
}
inline int MSG_NPCHatredList_SC::enemytempid_size() const {
  return _internal_enemytempid_size();
}
inline void MSG_NPCHatredList_SC::clear_enemytempid() {
  enemytempid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_NPCHatredList_SC::_internal_enemytempid(int index) const {
  return enemytempid_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_NPCHatredList_SC::enemytempid(int index) const {
  // @@protoc_insertion_point(field_get:msg.MSG_NPCHatredList_SC.enemytempid)
  return _internal_enemytempid(index);
}
inline void MSG_NPCHatredList_SC::set_enemytempid(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  enemytempid_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.MSG_NPCHatredList_SC.enemytempid)
}
inline void MSG_NPCHatredList_SC::_internal_add_enemytempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  enemytempid_.Add(value);
}
inline void MSG_NPCHatredList_SC::add_enemytempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_enemytempid(value);
  // @@protoc_insertion_point(field_add:msg.MSG_NPCHatredList_SC.enemytempid)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
MSG_NPCHatredList_SC::_internal_enemytempid() const {
  return enemytempid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
MSG_NPCHatredList_SC::enemytempid() const {
  // @@protoc_insertion_point(field_list:msg.MSG_NPCHatredList_SC.enemytempid)
  return _internal_enemytempid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
MSG_NPCHatredList_SC::_internal_mutable_enemytempid() {
  return &enemytempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
MSG_NPCHatredList_SC::mutable_enemytempid() {
  // @@protoc_insertion_point(field_mutable_list:msg.MSG_NPCHatredList_SC.enemytempid)
  return _internal_mutable_enemytempid();
}

// -------------------------------------------------------------------

// NPC_HatredList

// optional uint64 npctempid = 1;
inline bool NPC_HatredList::_internal_has_npctempid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool NPC_HatredList::has_npctempid() const {
  return _internal_has_npctempid();
}
inline void NPC_HatredList::clear_npctempid() {
  npctempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NPC_HatredList::_internal_npctempid() const {
  return npctempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NPC_HatredList::npctempid() const {
  // @@protoc_insertion_point(field_get:msg.NPC_HatredList.npctempid)
  return _internal_npctempid();
}
inline void NPC_HatredList::_internal_set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  npctempid_ = value;
}
inline void NPC_HatredList::set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_npctempid(value);
  // @@protoc_insertion_point(field_set:msg.NPC_HatredList.npctempid)
}

// repeated uint64 enemytempid = 2;
inline int NPC_HatredList::_internal_enemytempid_size() const {
  return enemytempid_.size();
}
inline int NPC_HatredList::enemytempid_size() const {
  return _internal_enemytempid_size();
}
inline void NPC_HatredList::clear_enemytempid() {
  enemytempid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NPC_HatredList::_internal_enemytempid(int index) const {
  return enemytempid_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 NPC_HatredList::enemytempid(int index) const {
  // @@protoc_insertion_point(field_get:msg.NPC_HatredList.enemytempid)
  return _internal_enemytempid(index);
}
inline void NPC_HatredList::set_enemytempid(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  enemytempid_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.NPC_HatredList.enemytempid)
}
inline void NPC_HatredList::_internal_add_enemytempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  enemytempid_.Add(value);
}
inline void NPC_HatredList::add_enemytempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_enemytempid(value);
  // @@protoc_insertion_point(field_add:msg.NPC_HatredList.enemytempid)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
NPC_HatredList::_internal_enemytempid() const {
  return enemytempid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
NPC_HatredList::enemytempid() const {
  // @@protoc_insertion_point(field_list:msg.NPC_HatredList.enemytempid)
  return _internal_enemytempid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
NPC_HatredList::_internal_mutable_enemytempid() {
  return &enemytempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
NPC_HatredList::mutable_enemytempid() {
  // @@protoc_insertion_point(field_mutable_list:msg.NPC_HatredList.enemytempid)
  return _internal_mutable_enemytempid();
}

// -------------------------------------------------------------------

// MSG_ACCOUNT_SEC_PASSWD_SC

// optional string sec_passwd = 1;
inline bool MSG_ACCOUNT_SEC_PASSWD_SC::_internal_has_sec_passwd() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ACCOUNT_SEC_PASSWD_SC::has_sec_passwd() const {
  return _internal_has_sec_passwd();
}
inline void MSG_ACCOUNT_SEC_PASSWD_SC::clear_sec_passwd() {
  sec_passwd_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ACCOUNT_SEC_PASSWD_SC::sec_passwd() const {
  // @@protoc_insertion_point(field_get:msg.MSG_ACCOUNT_SEC_PASSWD_SC.sec_passwd)
  return _internal_sec_passwd();
}
inline void MSG_ACCOUNT_SEC_PASSWD_SC::set_sec_passwd(const std::string& value) {
  _internal_set_sec_passwd(value);
  // @@protoc_insertion_point(field_set:msg.MSG_ACCOUNT_SEC_PASSWD_SC.sec_passwd)
}
inline std::string* MSG_ACCOUNT_SEC_PASSWD_SC::mutable_sec_passwd() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_ACCOUNT_SEC_PASSWD_SC.sec_passwd)
  return _internal_mutable_sec_passwd();
}
inline const std::string& MSG_ACCOUNT_SEC_PASSWD_SC::_internal_sec_passwd() const {
  return sec_passwd_.GetNoArena();
}
inline void MSG_ACCOUNT_SEC_PASSWD_SC::_internal_set_sec_passwd(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  sec_passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ACCOUNT_SEC_PASSWD_SC::set_sec_passwd(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  sec_passwd_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_ACCOUNT_SEC_PASSWD_SC.sec_passwd)
}
inline void MSG_ACCOUNT_SEC_PASSWD_SC::set_sec_passwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  sec_passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_ACCOUNT_SEC_PASSWD_SC.sec_passwd)
}
inline void MSG_ACCOUNT_SEC_PASSWD_SC::set_sec_passwd(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  sec_passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_ACCOUNT_SEC_PASSWD_SC.sec_passwd)
}
inline std::string* MSG_ACCOUNT_SEC_PASSWD_SC::_internal_mutable_sec_passwd() {
  _has_bits_[0] |= 0x00000001u;
  return sec_passwd_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ACCOUNT_SEC_PASSWD_SC::release_sec_passwd() {
  // @@protoc_insertion_point(field_release:msg.MSG_ACCOUNT_SEC_PASSWD_SC.sec_passwd)
  if (!_internal_has_sec_passwd()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return sec_passwd_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ACCOUNT_SEC_PASSWD_SC::set_allocated_sec_passwd(std::string* sec_passwd) {
  if (sec_passwd != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sec_passwd_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sec_passwd);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_ACCOUNT_SEC_PASSWD_SC.sec_passwd)
}

// optional bool isonline = 2;
inline bool MSG_ACCOUNT_SEC_PASSWD_SC::_internal_has_isonline() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ACCOUNT_SEC_PASSWD_SC::has_isonline() const {
  return _internal_has_isonline();
}
inline void MSG_ACCOUNT_SEC_PASSWD_SC::clear_isonline() {
  isonline_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_ACCOUNT_SEC_PASSWD_SC::_internal_isonline() const {
  return isonline_;
}
inline bool MSG_ACCOUNT_SEC_PASSWD_SC::isonline() const {
  // @@protoc_insertion_point(field_get:msg.MSG_ACCOUNT_SEC_PASSWD_SC.isonline)
  return _internal_isonline();
}
inline void MSG_ACCOUNT_SEC_PASSWD_SC::_internal_set_isonline(bool value) {
  _has_bits_[0] |= 0x00000002u;
  isonline_ = value;
}
inline void MSG_ACCOUNT_SEC_PASSWD_SC::set_isonline(bool value) {
  _internal_set_isonline(value);
  // @@protoc_insertion_point(field_set:msg.MSG_ACCOUNT_SEC_PASSWD_SC.isonline)
}

// -------------------------------------------------------------------

// MSG_USER_REQ_SETPASSWD_CS

// optional string old_passwd = 1;
inline bool MSG_USER_REQ_SETPASSWD_CS::_internal_has_old_passwd() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_USER_REQ_SETPASSWD_CS::has_old_passwd() const {
  return _internal_has_old_passwd();
}
inline void MSG_USER_REQ_SETPASSWD_CS::clear_old_passwd() {
  old_passwd_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_USER_REQ_SETPASSWD_CS::old_passwd() const {
  // @@protoc_insertion_point(field_get:msg.MSG_USER_REQ_SETPASSWD_CS.old_passwd)
  return _internal_old_passwd();
}
inline void MSG_USER_REQ_SETPASSWD_CS::set_old_passwd(const std::string& value) {
  _internal_set_old_passwd(value);
  // @@protoc_insertion_point(field_set:msg.MSG_USER_REQ_SETPASSWD_CS.old_passwd)
}
inline std::string* MSG_USER_REQ_SETPASSWD_CS::mutable_old_passwd() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_USER_REQ_SETPASSWD_CS.old_passwd)
  return _internal_mutable_old_passwd();
}
inline const std::string& MSG_USER_REQ_SETPASSWD_CS::_internal_old_passwd() const {
  return old_passwd_.GetNoArena();
}
inline void MSG_USER_REQ_SETPASSWD_CS::_internal_set_old_passwd(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  old_passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_USER_REQ_SETPASSWD_CS::set_old_passwd(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  old_passwd_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_USER_REQ_SETPASSWD_CS.old_passwd)
}
inline void MSG_USER_REQ_SETPASSWD_CS::set_old_passwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  old_passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_USER_REQ_SETPASSWD_CS.old_passwd)
}
inline void MSG_USER_REQ_SETPASSWD_CS::set_old_passwd(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  old_passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_USER_REQ_SETPASSWD_CS.old_passwd)
}
inline std::string* MSG_USER_REQ_SETPASSWD_CS::_internal_mutable_old_passwd() {
  _has_bits_[0] |= 0x00000001u;
  return old_passwd_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_USER_REQ_SETPASSWD_CS::release_old_passwd() {
  // @@protoc_insertion_point(field_release:msg.MSG_USER_REQ_SETPASSWD_CS.old_passwd)
  if (!_internal_has_old_passwd()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return old_passwd_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_USER_REQ_SETPASSWD_CS::set_allocated_old_passwd(std::string* old_passwd) {
  if (old_passwd != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  old_passwd_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), old_passwd);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_USER_REQ_SETPASSWD_CS.old_passwd)
}

// optional string new_passwd = 2;
inline bool MSG_USER_REQ_SETPASSWD_CS::_internal_has_new_passwd() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_USER_REQ_SETPASSWD_CS::has_new_passwd() const {
  return _internal_has_new_passwd();
}
inline void MSG_USER_REQ_SETPASSWD_CS::clear_new_passwd() {
  new_passwd_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_USER_REQ_SETPASSWD_CS::new_passwd() const {
  // @@protoc_insertion_point(field_get:msg.MSG_USER_REQ_SETPASSWD_CS.new_passwd)
  return _internal_new_passwd();
}
inline void MSG_USER_REQ_SETPASSWD_CS::set_new_passwd(const std::string& value) {
  _internal_set_new_passwd(value);
  // @@protoc_insertion_point(field_set:msg.MSG_USER_REQ_SETPASSWD_CS.new_passwd)
}
inline std::string* MSG_USER_REQ_SETPASSWD_CS::mutable_new_passwd() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_USER_REQ_SETPASSWD_CS.new_passwd)
  return _internal_mutable_new_passwd();
}
inline const std::string& MSG_USER_REQ_SETPASSWD_CS::_internal_new_passwd() const {
  return new_passwd_.GetNoArena();
}
inline void MSG_USER_REQ_SETPASSWD_CS::_internal_set_new_passwd(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  new_passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_USER_REQ_SETPASSWD_CS::set_new_passwd(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  new_passwd_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_USER_REQ_SETPASSWD_CS.new_passwd)
}
inline void MSG_USER_REQ_SETPASSWD_CS::set_new_passwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  new_passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_USER_REQ_SETPASSWD_CS.new_passwd)
}
inline void MSG_USER_REQ_SETPASSWD_CS::set_new_passwd(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  new_passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_USER_REQ_SETPASSWD_CS.new_passwd)
}
inline std::string* MSG_USER_REQ_SETPASSWD_CS::_internal_mutable_new_passwd() {
  _has_bits_[0] |= 0x00000002u;
  return new_passwd_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_USER_REQ_SETPASSWD_CS::release_new_passwd() {
  // @@protoc_insertion_point(field_release:msg.MSG_USER_REQ_SETPASSWD_CS.new_passwd)
  if (!_internal_has_new_passwd()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return new_passwd_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_USER_REQ_SETPASSWD_CS::set_allocated_new_passwd(std::string* new_passwd) {
  if (new_passwd != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  new_passwd_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), new_passwd);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_USER_REQ_SETPASSWD_CS.new_passwd)
}

// -------------------------------------------------------------------

// MSG_NEW_ROLE_CUTSCENE_SCS

// -------------------------------------------------------------------

// MSG_User_Drop_SCS

// optional uint64 charid = 1;
inline bool MSG_User_Drop_SCS::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_User_Drop_SCS::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_User_Drop_SCS::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_User_Drop_SCS::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_User_Drop_SCS::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_User_Drop_SCS.charid)
  return _internal_charid();
}
inline void MSG_User_Drop_SCS::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  charid_ = value;
}
inline void MSG_User_Drop_SCS::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_User_Drop_SCS.charid)
}

// -------------------------------------------------------------------

// MSG_START_CUTSCENE_SC

// optional uint32 cutsceneid = 1;
inline bool MSG_START_CUTSCENE_SC::_internal_has_cutsceneid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_START_CUTSCENE_SC::has_cutsceneid() const {
  return _internal_has_cutsceneid();
}
inline void MSG_START_CUTSCENE_SC::clear_cutsceneid() {
  cutsceneid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_START_CUTSCENE_SC::_internal_cutsceneid() const {
  return cutsceneid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_START_CUTSCENE_SC::cutsceneid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_START_CUTSCENE_SC.cutsceneid)
  return _internal_cutsceneid();
}
inline void MSG_START_CUTSCENE_SC::_internal_set_cutsceneid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  cutsceneid_ = value;
}
inline void MSG_START_CUTSCENE_SC::set_cutsceneid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cutsceneid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_START_CUTSCENE_SC.cutsceneid)
}

// optional string onfinish = 2;
inline bool MSG_START_CUTSCENE_SC::_internal_has_onfinish() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_START_CUTSCENE_SC::has_onfinish() const {
  return _internal_has_onfinish();
}
inline void MSG_START_CUTSCENE_SC::clear_onfinish() {
  onfinish_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_START_CUTSCENE_SC::onfinish() const {
  // @@protoc_insertion_point(field_get:msg.MSG_START_CUTSCENE_SC.onfinish)
  return _internal_onfinish();
}
inline void MSG_START_CUTSCENE_SC::set_onfinish(const std::string& value) {
  _internal_set_onfinish(value);
  // @@protoc_insertion_point(field_set:msg.MSG_START_CUTSCENE_SC.onfinish)
}
inline std::string* MSG_START_CUTSCENE_SC::mutable_onfinish() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_START_CUTSCENE_SC.onfinish)
  return _internal_mutable_onfinish();
}
inline const std::string& MSG_START_CUTSCENE_SC::_internal_onfinish() const {
  return onfinish_.GetNoArena();
}
inline void MSG_START_CUTSCENE_SC::_internal_set_onfinish(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  onfinish_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_START_CUTSCENE_SC::set_onfinish(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  onfinish_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_START_CUTSCENE_SC.onfinish)
}
inline void MSG_START_CUTSCENE_SC::set_onfinish(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  onfinish_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_START_CUTSCENE_SC.onfinish)
}
inline void MSG_START_CUTSCENE_SC::set_onfinish(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  onfinish_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_START_CUTSCENE_SC.onfinish)
}
inline std::string* MSG_START_CUTSCENE_SC::_internal_mutable_onfinish() {
  _has_bits_[0] |= 0x00000001u;
  return onfinish_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_START_CUTSCENE_SC::release_onfinish() {
  // @@protoc_insertion_point(field_release:msg.MSG_START_CUTSCENE_SC.onfinish)
  if (!_internal_has_onfinish()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return onfinish_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_START_CUTSCENE_SC::set_allocated_onfinish(std::string* onfinish) {
  if (onfinish != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  onfinish_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), onfinish);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_START_CUTSCENE_SC.onfinish)
}

// -------------------------------------------------------------------

// MSG_UserLoadingOk_CS

// -------------------------------------------------------------------

// MSG_ReqQueryBalance_CS

// -------------------------------------------------------------------

// MSG_RetQueryBalance_SC

// required .msg.ERechargeReturnCode retcode = 1;
inline bool MSG_RetQueryBalance_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_RetQueryBalance_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetQueryBalance_SC::clear_retcode() {
  retcode_ = 1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::msg::ERechargeReturnCode MSG_RetQueryBalance_SC::_internal_retcode() const {
  return static_cast< ::msg::ERechargeReturnCode >(retcode_);
}
inline ::msg::ERechargeReturnCode MSG_RetQueryBalance_SC::retcode() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetQueryBalance_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetQueryBalance_SC::_internal_set_retcode(::msg::ERechargeReturnCode value) {
  assert(::msg::ERechargeReturnCode_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  retcode_ = value;
}
inline void MSG_RetQueryBalance_SC::set_retcode(::msg::ERechargeReturnCode value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetQueryBalance_SC.retcode)
}

// optional uint32 balance = 2;
inline bool MSG_RetQueryBalance_SC::_internal_has_balance() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetQueryBalance_SC::has_balance() const {
  return _internal_has_balance();
}
inline void MSG_RetQueryBalance_SC::clear_balance() {
  balance_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetQueryBalance_SC::_internal_balance() const {
  return balance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetQueryBalance_SC::balance() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetQueryBalance_SC.balance)
  return _internal_balance();
}
inline void MSG_RetQueryBalance_SC::_internal_set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  balance_ = value;
}
inline void MSG_RetQueryBalance_SC::set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_balance(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetQueryBalance_SC.balance)
}

// optional uint32 bonus = 3;
inline bool MSG_RetQueryBalance_SC::_internal_has_bonus() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetQueryBalance_SC::has_bonus() const {
  return _internal_has_bonus();
}
inline void MSG_RetQueryBalance_SC::clear_bonus() {
  bonus_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetQueryBalance_SC::_internal_bonus() const {
  return bonus_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetQueryBalance_SC::bonus() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetQueryBalance_SC.bonus)
  return _internal_bonus();
}
inline void MSG_RetQueryBalance_SC::_internal_set_bonus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  bonus_ = value;
}
inline void MSG_RetQueryBalance_SC::set_bonus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bonus(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetQueryBalance_SC.bonus)
}

// optional uint32 hadfilled = 4;
inline bool MSG_RetQueryBalance_SC::_internal_has_hadfilled() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetQueryBalance_SC::has_hadfilled() const {
  return _internal_has_hadfilled();
}
inline void MSG_RetQueryBalance_SC::clear_hadfilled() {
  hadfilled_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetQueryBalance_SC::_internal_hadfilled() const {
  return hadfilled_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetQueryBalance_SC::hadfilled() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetQueryBalance_SC.hadfilled)
  return _internal_hadfilled();
}
inline void MSG_RetQueryBalance_SC::_internal_set_hadfilled(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hadfilled_ = value;
}
inline void MSG_RetQueryBalance_SC::set_hadfilled(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hadfilled(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetQueryBalance_SC.hadfilled)
}

// optional uint32 point2tone = 5;
inline bool MSG_RetQueryBalance_SC::_internal_has_point2tone() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RetQueryBalance_SC::has_point2tone() const {
  return _internal_has_point2tone();
}
inline void MSG_RetQueryBalance_SC::clear_point2tone() {
  point2tone_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetQueryBalance_SC::_internal_point2tone() const {
  return point2tone_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetQueryBalance_SC::point2tone() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetQueryBalance_SC.point2tone)
  return _internal_point2tone();
}
inline void MSG_RetQueryBalance_SC::_internal_set_point2tone(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  point2tone_ = value;
}
inline void MSG_RetQueryBalance_SC::set_point2tone(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_point2tone(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetQueryBalance_SC.point2tone)
}

// -------------------------------------------------------------------

// MSG_ReqRecharge_CS

// optional uint32 point = 1;
inline bool MSG_ReqRecharge_CS::_internal_has_point() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqRecharge_CS::has_point() const {
  return _internal_has_point();
}
inline void MSG_ReqRecharge_CS::clear_point() {
  point_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqRecharge_CS::_internal_point() const {
  return point_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqRecharge_CS::point() const {
  // @@protoc_insertion_point(field_get:msg.MSG_ReqRecharge_CS.point)
  return _internal_point();
}
inline void MSG_ReqRecharge_CS::_internal_set_point(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  point_ = value;
}
inline void MSG_ReqRecharge_CS::set_point(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_point(value);
  // @@protoc_insertion_point(field_set:msg.MSG_ReqRecharge_CS.point)
}

// optional uint32 type = 2;
inline bool MSG_ReqRecharge_CS::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqRecharge_CS::has_type() const {
  return _internal_has_type();
}
inline void MSG_ReqRecharge_CS::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqRecharge_CS::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqRecharge_CS::type() const {
  // @@protoc_insertion_point(field_get:msg.MSG_ReqRecharge_CS.type)
  return _internal_type();
}
inline void MSG_ReqRecharge_CS::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void MSG_ReqRecharge_CS::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:msg.MSG_ReqRecharge_CS.type)
}

// -------------------------------------------------------------------

// MSG_RetRecharge_SC

// required .msg.ERechargeReturnCode retcode = 1;
inline bool MSG_RetRecharge_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_RetRecharge_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetRecharge_SC::clear_retcode() {
  retcode_ = 1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::msg::ERechargeReturnCode MSG_RetRecharge_SC::_internal_retcode() const {
  return static_cast< ::msg::ERechargeReturnCode >(retcode_);
}
inline ::msg::ERechargeReturnCode MSG_RetRecharge_SC::retcode() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetRecharge_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetRecharge_SC::_internal_set_retcode(::msg::ERechargeReturnCode value) {
  assert(::msg::ERechargeReturnCode_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  retcode_ = value;
}
inline void MSG_RetRecharge_SC::set_retcode(::msg::ERechargeReturnCode value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetRecharge_SC.retcode)
}

// optional uint32 point = 2;
inline bool MSG_RetRecharge_SC::_internal_has_point() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetRecharge_SC::has_point() const {
  return _internal_has_point();
}
inline void MSG_RetRecharge_SC::clear_point() {
  point_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecharge_SC::_internal_point() const {
  return point_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecharge_SC::point() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetRecharge_SC.point)
  return _internal_point();
}
inline void MSG_RetRecharge_SC::_internal_set_point(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  point_ = value;
}
inline void MSG_RetRecharge_SC::set_point(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_point(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetRecharge_SC.point)
}

// optional uint32 balance = 3;
inline bool MSG_RetRecharge_SC::_internal_has_balance() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetRecharge_SC::has_balance() const {
  return _internal_has_balance();
}
inline void MSG_RetRecharge_SC::clear_balance() {
  balance_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecharge_SC::_internal_balance() const {
  return balance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecharge_SC::balance() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetRecharge_SC.balance)
  return _internal_balance();
}
inline void MSG_RetRecharge_SC::_internal_set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  balance_ = value;
}
inline void MSG_RetRecharge_SC::set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_balance(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetRecharge_SC.balance)
}

// optional uint32 bonus = 4;
inline bool MSG_RetRecharge_SC::_internal_has_bonus() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetRecharge_SC::has_bonus() const {
  return _internal_has_bonus();
}
inline void MSG_RetRecharge_SC::clear_bonus() {
  bonus_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecharge_SC::_internal_bonus() const {
  return bonus_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecharge_SC::bonus() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetRecharge_SC.bonus)
  return _internal_bonus();
}
inline void MSG_RetRecharge_SC::_internal_set_bonus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  bonus_ = value;
}
inline void MSG_RetRecharge_SC::set_bonus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bonus(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetRecharge_SC.bonus)
}

// optional uint32 hadfilled = 5;
inline bool MSG_RetRecharge_SC::_internal_has_hadfilled() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RetRecharge_SC::has_hadfilled() const {
  return _internal_has_hadfilled();
}
inline void MSG_RetRecharge_SC::clear_hadfilled() {
  hadfilled_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecharge_SC::_internal_hadfilled() const {
  return hadfilled_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecharge_SC::hadfilled() const {
  // @@protoc_insertion_point(field_get:msg.MSG_RetRecharge_SC.hadfilled)
  return _internal_hadfilled();
}
inline void MSG_RetRecharge_SC::_internal_set_hadfilled(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hadfilled_ = value;
}
inline void MSG_RetRecharge_SC::set_hadfilled(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hadfilled(value);
  // @@protoc_insertion_point(field_set:msg.MSG_RetRecharge_SC.hadfilled)
}

// -------------------------------------------------------------------

// MSG_SetChooseTarget_CS

// optional uint64 charid = 1;
inline bool MSG_SetChooseTarget_CS::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_SetChooseTarget_CS::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_SetChooseTarget_CS::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_SetChooseTarget_CS::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_SetChooseTarget_CS::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_SetChooseTarget_CS.charid)
  return _internal_charid();
}
inline void MSG_SetChooseTarget_CS::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  charid_ = value;
}
inline void MSG_SetChooseTarget_CS::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_SetChooseTarget_CS.charid)
}

// optional .msg.ChooseTargetType choosetype = 2;
inline bool MSG_SetChooseTarget_CS::_internal_has_choosetype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_SetChooseTarget_CS::has_choosetype() const {
  return _internal_has_choosetype();
}
inline void MSG_SetChooseTarget_CS::clear_choosetype() {
  choosetype_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::msg::ChooseTargetType MSG_SetChooseTarget_CS::_internal_choosetype() const {
  return static_cast< ::msg::ChooseTargetType >(choosetype_);
}
inline ::msg::ChooseTargetType MSG_SetChooseTarget_CS::choosetype() const {
  // @@protoc_insertion_point(field_get:msg.MSG_SetChooseTarget_CS.choosetype)
  return _internal_choosetype();
}
inline void MSG_SetChooseTarget_CS::_internal_set_choosetype(::msg::ChooseTargetType value) {
  assert(::msg::ChooseTargetType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  choosetype_ = value;
}
inline void MSG_SetChooseTarget_CS::set_choosetype(::msg::ChooseTargetType value) {
  _internal_set_choosetype(value);
  // @@protoc_insertion_point(field_set:msg.MSG_SetChooseTarget_CS.choosetype)
}

// required .msg.MapDataType mapdatatype = 3;
inline bool MSG_SetChooseTarget_CS::_internal_has_mapdatatype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_SetChooseTarget_CS::has_mapdatatype() const {
  return _internal_has_mapdatatype();
}
inline void MSG_SetChooseTarget_CS::clear_mapdatatype() {
  mapdatatype_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::msg::MapDataType MSG_SetChooseTarget_CS::_internal_mapdatatype() const {
  return static_cast< ::msg::MapDataType >(mapdatatype_);
}
inline ::msg::MapDataType MSG_SetChooseTarget_CS::mapdatatype() const {
  // @@protoc_insertion_point(field_get:msg.MSG_SetChooseTarget_CS.mapdatatype)
  return _internal_mapdatatype();
}
inline void MSG_SetChooseTarget_CS::_internal_set_mapdatatype(::msg::MapDataType value) {
  assert(::msg::MapDataType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  mapdatatype_ = value;
}
inline void MSG_SetChooseTarget_CS::set_mapdatatype(::msg::MapDataType value) {
  _internal_set_mapdatatype(value);
  // @@protoc_insertion_point(field_set:msg.MSG_SetChooseTarget_CS.mapdatatype)
}

// -------------------------------------------------------------------

// MSG_AttackTargetChange_SC

// optional uint64 charid = 1;
inline bool MSG_AttackTargetChange_SC::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_AttackTargetChange_SC::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_AttackTargetChange_SC::clear_charid() {
  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_AttackTargetChange_SC::_internal_charid() const {
  return charid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_AttackTargetChange_SC::charid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_AttackTargetChange_SC.charid)
  return _internal_charid();
}
inline void MSG_AttackTargetChange_SC::_internal_set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  charid_ = value;
}
inline void MSG_AttackTargetChange_SC::set_charid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_AttackTargetChange_SC.charid)
}

// optional string name = 2;
inline bool MSG_AttackTargetChange_SC::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_AttackTargetChange_SC::has_name() const {
  return _internal_has_name();
}
inline void MSG_AttackTargetChange_SC::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_AttackTargetChange_SC::name() const {
  // @@protoc_insertion_point(field_get:msg.MSG_AttackTargetChange_SC.name)
  return _internal_name();
}
inline void MSG_AttackTargetChange_SC::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:msg.MSG_AttackTargetChange_SC.name)
}
inline std::string* MSG_AttackTargetChange_SC::mutable_name() {
  // @@protoc_insertion_point(field_mutable:msg.MSG_AttackTargetChange_SC.name)
  return _internal_mutable_name();
}
inline const std::string& MSG_AttackTargetChange_SC::_internal_name() const {
  return name_.GetNoArena();
}
inline void MSG_AttackTargetChange_SC::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_AttackTargetChange_SC::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.MSG_AttackTargetChange_SC.name)
}
inline void MSG_AttackTargetChange_SC::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.MSG_AttackTargetChange_SC.name)
}
inline void MSG_AttackTargetChange_SC::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.MSG_AttackTargetChange_SC.name)
}
inline std::string* MSG_AttackTargetChange_SC::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_AttackTargetChange_SC::release_name() {
  // @@protoc_insertion_point(field_release:msg.MSG_AttackTargetChange_SC.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_AttackTargetChange_SC::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.MSG_AttackTargetChange_SC.name)
}

// optional uint32 level = 3;
inline bool MSG_AttackTargetChange_SC::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_AttackTargetChange_SC::has_level() const {
  return _internal_has_level();
}
inline void MSG_AttackTargetChange_SC::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_AttackTargetChange_SC::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_AttackTargetChange_SC::level() const {
  // @@protoc_insertion_point(field_get:msg.MSG_AttackTargetChange_SC.level)
  return _internal_level();
}
inline void MSG_AttackTargetChange_SC::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  level_ = value;
}
inline void MSG_AttackTargetChange_SC::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:msg.MSG_AttackTargetChange_SC.level)
}

// optional uint32 HP = 4;
inline bool MSG_AttackTargetChange_SC::_internal_has_hp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_AttackTargetChange_SC::has_hp() const {
  return _internal_has_hp();
}
inline void MSG_AttackTargetChange_SC::clear_hp() {
  hp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_AttackTargetChange_SC::_internal_hp() const {
  return hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_AttackTargetChange_SC::hp() const {
  // @@protoc_insertion_point(field_get:msg.MSG_AttackTargetChange_SC.HP)
  return _internal_hp();
}
inline void MSG_AttackTargetChange_SC::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hp_ = value;
}
inline void MSG_AttackTargetChange_SC::set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:msg.MSG_AttackTargetChange_SC.HP)
}

// optional uint32 relation = 5;
inline bool MSG_AttackTargetChange_SC::_internal_has_relation() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_AttackTargetChange_SC::has_relation() const {
  return _internal_has_relation();
}
inline void MSG_AttackTargetChange_SC::clear_relation() {
  relation_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_AttackTargetChange_SC::_internal_relation() const {
  return relation_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_AttackTargetChange_SC::relation() const {
  // @@protoc_insertion_point(field_get:msg.MSG_AttackTargetChange_SC.relation)
  return _internal_relation();
}
inline void MSG_AttackTargetChange_SC::_internal_set_relation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  relation_ = value;
}
inline void MSG_AttackTargetChange_SC::set_relation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_relation(value);
  // @@protoc_insertion_point(field_set:msg.MSG_AttackTargetChange_SC.relation)
}

// optional .msg.ChooseTargetType choosetype = 6;
inline bool MSG_AttackTargetChange_SC::_internal_has_choosetype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_AttackTargetChange_SC::has_choosetype() const {
  return _internal_has_choosetype();
}
inline void MSG_AttackTargetChange_SC::clear_choosetype() {
  choosetype_ = 1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::msg::ChooseTargetType MSG_AttackTargetChange_SC::_internal_choosetype() const {
  return static_cast< ::msg::ChooseTargetType >(choosetype_);
}
inline ::msg::ChooseTargetType MSG_AttackTargetChange_SC::choosetype() const {
  // @@protoc_insertion_point(field_get:msg.MSG_AttackTargetChange_SC.choosetype)
  return _internal_choosetype();
}
inline void MSG_AttackTargetChange_SC::_internal_set_choosetype(::msg::ChooseTargetType value) {
  assert(::msg::ChooseTargetType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  choosetype_ = value;
}
inline void MSG_AttackTargetChange_SC::set_choosetype(::msg::ChooseTargetType value) {
  _internal_set_choosetype(value);
  // @@protoc_insertion_point(field_set:msg.MSG_AttackTargetChange_SC.choosetype)
}

// -------------------------------------------------------------------

// MSG_NotifyAccountReuse

// -------------------------------------------------------------------

// MSG_Notify_SceneLoaded_CS

// optional uint64 sceneid = 1;
inline bool MSG_Notify_SceneLoaded_CS::_internal_has_sceneid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Notify_SceneLoaded_CS::has_sceneid() const {
  return _internal_has_sceneid();
}
inline void MSG_Notify_SceneLoaded_CS::clear_sceneid() {
  sceneid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Notify_SceneLoaded_CS::_internal_sceneid() const {
  return sceneid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Notify_SceneLoaded_CS::sceneid() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Notify_SceneLoaded_CS.sceneid)
  return _internal_sceneid();
}
inline void MSG_Notify_SceneLoaded_CS::_internal_set_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  sceneid_ = value;
}
inline void MSG_Notify_SceneLoaded_CS::set_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sceneid(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Notify_SceneLoaded_CS.sceneid)
}

// -------------------------------------------------------------------

// MSG_Upload_Crash_Info

// optional uint32 crashnum = 1;
inline bool MSG_Upload_Crash_Info::_internal_has_crashnum() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Upload_Crash_Info::has_crashnum() const {
  return _internal_has_crashnum();
}
inline void MSG_Upload_Crash_Info::clear_crashnum() {
  crashnum_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Upload_Crash_Info::_internal_crashnum() const {
  return crashnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Upload_Crash_Info::crashnum() const {
  // @@protoc_insertion_point(field_get:msg.MSG_Upload_Crash_Info.crashnum)
  return _internal_crashnum();
}
inline void MSG_Upload_Crash_Info::_internal_set_crashnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  crashnum_ = value;
}
inline void MSG_Upload_Crash_Info::set_crashnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_crashnum(value);
  // @@protoc_insertion_point(field_set:msg.MSG_Upload_Crash_Info.crashnum)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::msg::ChooseTargetType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::ChooseTargetType>() {
  return ::msg::ChooseTargetType_descriptor();
}
template <> struct is_proto_enum< ::msg::SEX> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::SEX>() {
  return ::msg::SEX_descriptor();
}
template <> struct is_proto_enum< ::msg::ERechargeReturnCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::ERechargeReturnCode>() {
  return ::msg::ERechargeReturnCode_descriptor();
}
template <> struct is_proto_enum< ::msg::MapDataType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::MapDataType>() {
  return ::msg::MapDataType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_message_2eproto
