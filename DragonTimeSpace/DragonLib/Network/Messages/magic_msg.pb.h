// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: magic_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_magic_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_magic_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_enum.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_magic_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_magic_5fmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[24]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_magic_5fmsg_2eproto;
namespace magic {
class AttWarning;
class AttWarningDefaultTypeInternal;
extern AttWarningDefaultTypeInternal _AttWarning_default_instance_;
class ExtSkillData;
class ExtSkillDataDefaultTypeInternal;
extern ExtSkillDataDefaultTypeInternal _ExtSkillData_default_instance_;
class MSG_ReqDrinkBloodSkill_CS;
class MSG_ReqDrinkBloodSkill_CSDefaultTypeInternal;
extern MSG_ReqDrinkBloodSkill_CSDefaultTypeInternal _MSG_ReqDrinkBloodSkill_CS_default_instance_;
class MSG_ReqTriggerQTESkill_CS;
class MSG_ReqTriggerQTESkill_CSDefaultTypeInternal;
extern MSG_ReqTriggerQTESkill_CSDefaultTypeInternal _MSG_ReqTriggerQTESkill_CS_default_instance_;
class MSG_Req_MagicAttack_CS;
class MSG_Req_MagicAttack_CSDefaultTypeInternal;
extern MSG_Req_MagicAttack_CSDefaultTypeInternal _MSG_Req_MagicAttack_CS_default_instance_;
class MSG_Req_MainUserRelive_CS;
class MSG_Req_MainUserRelive_CSDefaultTypeInternal;
extern MSG_Req_MainUserRelive_CSDefaultTypeInternal _MSG_Req_MainUserRelive_CS_default_instance_;
class MSG_Req_OffSkill_CS;
class MSG_Req_OffSkill_CSDefaultTypeInternal;
extern MSG_Req_OffSkill_CSDefaultTypeInternal _MSG_Req_OffSkill_CS_default_instance_;
class MSG_Req_SyncSkillStage_CS;
class MSG_Req_SyncSkillStage_CSDefaultTypeInternal;
extern MSG_Req_SyncSkillStage_CSDefaultTypeInternal _MSG_Req_SyncSkillStage_CS_default_instance_;
class MSG_RetDrinkBloodSkill_SC;
class MSG_RetDrinkBloodSkill_SCDefaultTypeInternal;
extern MSG_RetDrinkBloodSkill_SCDefaultTypeInternal _MSG_RetDrinkBloodSkill_SC_default_instance_;
class MSG_RetRefreshSkill_SC;
class MSG_RetRefreshSkill_SCDefaultTypeInternal;
extern MSG_RetRefreshSkill_SCDefaultTypeInternal _MSG_RetRefreshSkill_SC_default_instance_;
class MSG_RetTriggerQTESkill_SC;
class MSG_RetTriggerQTESkill_SCDefaultTypeInternal;
extern MSG_RetTriggerQTESkill_SCDefaultTypeInternal _MSG_RetTriggerQTESkill_SC_default_instance_;
class MSG_Ret_AttWarning_SC;
class MSG_Ret_AttWarning_SCDefaultTypeInternal;
extern MSG_Ret_AttWarning_SCDefaultTypeInternal _MSG_Ret_AttWarning_SC_default_instance_;
class MSG_Ret_HpMpPop_SC;
class MSG_Ret_HpMpPop_SCDefaultTypeInternal;
extern MSG_Ret_HpMpPop_SCDefaultTypeInternal _MSG_Ret_HpMpPop_SC_default_instance_;
class MSG_Ret_InterruptSkill_SC;
class MSG_Ret_InterruptSkill_SCDefaultTypeInternal;
extern MSG_Ret_InterruptSkill_SCDefaultTypeInternal _MSG_Ret_InterruptSkill_SC_default_instance_;
class MSG_Ret_MagicAttack_SC;
class MSG_Ret_MagicAttack_SCDefaultTypeInternal;
extern MSG_Ret_MagicAttack_SCDefaultTypeInternal _MSG_Ret_MagicAttack_SC_default_instance_;
class MSG_Ret_MainUserDeath_SC;
class MSG_Ret_MainUserDeath_SCDefaultTypeInternal;
extern MSG_Ret_MainUserDeath_SCDefaultTypeInternal _MSG_Ret_MainUserDeath_SC_default_instance_;
class MSG_Ret_MainUserRelive_SC;
class MSG_Ret_MainUserRelive_SCDefaultTypeInternal;
extern MSG_Ret_MainUserRelive_SCDefaultTypeInternal _MSG_Ret_MainUserRelive_SC_default_instance_;
class MSG_Ret_StartMagicAttack_SC;
class MSG_Ret_StartMagicAttack_SCDefaultTypeInternal;
extern MSG_Ret_StartMagicAttack_SCDefaultTypeInternal _MSG_Ret_StartMagicAttack_SC_default_instance_;
class MSG_Ret_SwitchPKMode_SC;
class MSG_Ret_SwitchPKMode_SCDefaultTypeInternal;
extern MSG_Ret_SwitchPKMode_SCDefaultTypeInternal _MSG_Ret_SwitchPKMode_SC_default_instance_;
class MSG_Ret_SyncSkillStage_SC;
class MSG_Ret_SyncSkillStage_SCDefaultTypeInternal;
extern MSG_Ret_SyncSkillStage_SCDefaultTypeInternal _MSG_Ret_SyncSkillStage_SC_default_instance_;
class MSG_Ret_UserDeath_SC;
class MSG_Ret_UserDeath_SCDefaultTypeInternal;
extern MSG_Ret_UserDeath_SCDefaultTypeInternal _MSG_Ret_UserDeath_SC_default_instance_;
class MSG_Ret_UserSkillRelive_SC;
class MSG_Ret_UserSkillRelive_SCDefaultTypeInternal;
extern MSG_Ret_UserSkillRelive_SCDefaultTypeInternal _MSG_Ret_UserSkillRelive_SC_default_instance_;
class PKResult;
class PKResultDefaultTypeInternal;
extern PKResultDefaultTypeInternal _PKResult_default_instance_;
class SkillData;
class SkillDataDefaultTypeInternal;
extern SkillDataDefaultTypeInternal _SkillData_default_instance_;
}  // namespace magic
PROTOBUF_NAMESPACE_OPEN
template<> ::magic::AttWarning* Arena::CreateMaybeMessage<::magic::AttWarning>(Arena*);
template<> ::magic::ExtSkillData* Arena::CreateMaybeMessage<::magic::ExtSkillData>(Arena*);
template<> ::magic::MSG_ReqDrinkBloodSkill_CS* Arena::CreateMaybeMessage<::magic::MSG_ReqDrinkBloodSkill_CS>(Arena*);
template<> ::magic::MSG_ReqTriggerQTESkill_CS* Arena::CreateMaybeMessage<::magic::MSG_ReqTriggerQTESkill_CS>(Arena*);
template<> ::magic::MSG_Req_MagicAttack_CS* Arena::CreateMaybeMessage<::magic::MSG_Req_MagicAttack_CS>(Arena*);
template<> ::magic::MSG_Req_MainUserRelive_CS* Arena::CreateMaybeMessage<::magic::MSG_Req_MainUserRelive_CS>(Arena*);
template<> ::magic::MSG_Req_OffSkill_CS* Arena::CreateMaybeMessage<::magic::MSG_Req_OffSkill_CS>(Arena*);
template<> ::magic::MSG_Req_SyncSkillStage_CS* Arena::CreateMaybeMessage<::magic::MSG_Req_SyncSkillStage_CS>(Arena*);
template<> ::magic::MSG_RetDrinkBloodSkill_SC* Arena::CreateMaybeMessage<::magic::MSG_RetDrinkBloodSkill_SC>(Arena*);
template<> ::magic::MSG_RetRefreshSkill_SC* Arena::CreateMaybeMessage<::magic::MSG_RetRefreshSkill_SC>(Arena*);
template<> ::magic::MSG_RetTriggerQTESkill_SC* Arena::CreateMaybeMessage<::magic::MSG_RetTriggerQTESkill_SC>(Arena*);
template<> ::magic::MSG_Ret_AttWarning_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_AttWarning_SC>(Arena*);
template<> ::magic::MSG_Ret_HpMpPop_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_HpMpPop_SC>(Arena*);
template<> ::magic::MSG_Ret_InterruptSkill_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_InterruptSkill_SC>(Arena*);
template<> ::magic::MSG_Ret_MagicAttack_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_MagicAttack_SC>(Arena*);
template<> ::magic::MSG_Ret_MainUserDeath_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_MainUserDeath_SC>(Arena*);
template<> ::magic::MSG_Ret_MainUserRelive_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_MainUserRelive_SC>(Arena*);
template<> ::magic::MSG_Ret_StartMagicAttack_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_StartMagicAttack_SC>(Arena*);
template<> ::magic::MSG_Ret_SwitchPKMode_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_SwitchPKMode_SC>(Arena*);
template<> ::magic::MSG_Ret_SyncSkillStage_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_SyncSkillStage_SC>(Arena*);
template<> ::magic::MSG_Ret_UserDeath_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_UserDeath_SC>(Arena*);
template<> ::magic::MSG_Ret_UserSkillRelive_SC* Arena::CreateMaybeMessage<::magic::MSG_Ret_UserSkillRelive_SC>(Arena*);
template<> ::magic::PKResult* Arena::CreateMaybeMessage<::magic::PKResult>(Arena*);
template<> ::magic::SkillData* Arena::CreateMaybeMessage<::magic::SkillData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace magic {

enum ATTACKRESULT : int {
  ATTACKRESULT_NONE = 0,
  ATTACKRESULT_MISS = 1,
  ATTACKRESULT_NORMAL = 2,
  ATTACKRESULT_BANG = 3,
  ATTACKRESULT_HOLD = 4,
  ATTACKRESULT_BLOCK = 5,
  ATTACKRESULT_DEFLECT = 6,
  ATTACKRESULT_HIT = 8
};
bool ATTACKRESULT_IsValid(int value);
constexpr ATTACKRESULT ATTACKRESULT_MIN = ATTACKRESULT_NONE;
constexpr ATTACKRESULT ATTACKRESULT_MAX = ATTACKRESULT_HIT;
constexpr int ATTACKRESULT_ARRAYSIZE = ATTACKRESULT_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ATTACKRESULT_descriptor();
template<typename T>
inline const std::string& ATTACKRESULT_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ATTACKRESULT>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ATTACKRESULT_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ATTACKRESULT_descriptor(), enum_t_value);
}
inline bool ATTACKRESULT_Parse(
    const std::string& name, ATTACKRESULT* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ATTACKRESULT>(
    ATTACKRESULT_descriptor(), name, value);
}
// ===================================================================

class SkillData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.SkillData) */ {
 public:
  SkillData();
  virtual ~SkillData();

  SkillData(const SkillData& from);
  SkillData(SkillData&& from) noexcept
    : SkillData() {
    *this = ::std::move(from);
  }

  inline SkillData& operator=(const SkillData& from) {
    CopyFrom(from);
    return *this;
  }
  inline SkillData& operator=(SkillData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SkillData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SkillData* internal_default_instance() {
    return reinterpret_cast<const SkillData*>(
               &_SkillData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SkillData& a, SkillData& b) {
    a.Swap(&b);
  }
  inline void Swap(SkillData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SkillData* New() const final {
    return CreateMaybeMessage<SkillData>(nullptr);
  }

  SkillData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SkillData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SkillData& from);
  void MergeFrom(const SkillData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SkillData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.SkillData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillidFieldNumber = 1,
    kLevelFieldNumber = 2,
    kLastusetimeFieldNumber = 3,
    kLastupdatetimeFieldNumber = 5,
    kOnoffFieldNumber = 4,
    kOverlaytimesFieldNumber = 6,
    kActiveStagesFieldNumber = 7,
    kMaxmultitimesFieldNumber = 8,
    kSkillcdFieldNumber = 9,
  };
  // optional uint32 skillid = 1;
  bool has_skillid() const;
  private:
  bool _internal_has_skillid() const;
  public:
  void clear_skillid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid() const;
  void set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillid() const;
  void _internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 2;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 lastusetime = 3;
  bool has_lastusetime() const;
  private:
  bool _internal_has_lastusetime() const;
  public:
  void clear_lastusetime();
  ::PROTOBUF_NAMESPACE_ID::uint64 lastusetime() const;
  void set_lastusetime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lastusetime() const;
  void _internal_set_lastusetime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 lastupdatetime = 5;
  bool has_lastupdatetime() const;
  private:
  bool _internal_has_lastupdatetime() const;
  public:
  void clear_lastupdatetime();
  ::PROTOBUF_NAMESPACE_ID::uint64 lastupdatetime() const;
  void set_lastupdatetime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lastupdatetime() const;
  void _internal_set_lastupdatetime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 onoff = 4;
  bool has_onoff() const;
  private:
  bool _internal_has_onoff() const;
  public:
  void clear_onoff();
  ::PROTOBUF_NAMESPACE_ID::uint32 onoff() const;
  void set_onoff(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_onoff() const;
  void _internal_set_onoff(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 overlaytimes = 6;
  bool has_overlaytimes() const;
  private:
  bool _internal_has_overlaytimes() const;
  public:
  void clear_overlaytimes();
  ::PROTOBUF_NAMESPACE_ID::uint32 overlaytimes() const;
  void set_overlaytimes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_overlaytimes() const;
  void _internal_set_overlaytimes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 active_stages = 7;
  bool has_active_stages() const;
  private:
  bool _internal_has_active_stages() const;
  public:
  void clear_active_stages();
  ::PROTOBUF_NAMESPACE_ID::uint32 active_stages() const;
  void set_active_stages(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_active_stages() const;
  void _internal_set_active_stages(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxmultitimes = 8;
  bool has_maxmultitimes() const;
  private:
  bool _internal_has_maxmultitimes() const;
  public:
  void clear_maxmultitimes();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxmultitimes() const;
  void set_maxmultitimes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxmultitimes() const;
  void _internal_set_maxmultitimes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skillcd = 9;
  bool has_skillcd() const;
  private:
  bool _internal_has_skillcd() const;
  public:
  void clear_skillcd();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillcd() const;
  void set_skillcd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillcd() const;
  void _internal_set_skillcd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.SkillData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lastusetime_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lastupdatetime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 onoff_;
  ::PROTOBUF_NAMESPACE_ID::uint32 overlaytimes_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_stages_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxmultitimes_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillcd_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class ExtSkillData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.ExtSkillData) */ {
 public:
  ExtSkillData();
  virtual ~ExtSkillData();

  ExtSkillData(const ExtSkillData& from);
  ExtSkillData(ExtSkillData&& from) noexcept
    : ExtSkillData() {
    *this = ::std::move(from);
  }

  inline ExtSkillData& operator=(const ExtSkillData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExtSkillData& operator=(ExtSkillData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExtSkillData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExtSkillData* internal_default_instance() {
    return reinterpret_cast<const ExtSkillData*>(
               &_ExtSkillData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ExtSkillData& a, ExtSkillData& b) {
    a.Swap(&b);
  }
  inline void Swap(ExtSkillData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExtSkillData* New() const final {
    return CreateMaybeMessage<ExtSkillData>(nullptr);
  }

  ExtSkillData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExtSkillData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExtSkillData& from);
  void MergeFrom(const ExtSkillData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExtSkillData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.ExtSkillData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kLevelFieldNumber = 2,
    kMasterskillFieldNumber = 3,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 2;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 masterskill = 3;
  bool has_masterskill() const;
  private:
  bool _internal_has_masterskill() const;
  public:
  void clear_masterskill();
  ::PROTOBUF_NAMESPACE_ID::uint32 masterskill() const;
  void set_masterskill(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_masterskill() const;
  void _internal_set_masterskill(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.ExtSkillData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 masterskill_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_MagicAttack_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Req_MagicAttack_CS) */ {
 public:
  MSG_Req_MagicAttack_CS();
  virtual ~MSG_Req_MagicAttack_CS();

  MSG_Req_MagicAttack_CS(const MSG_Req_MagicAttack_CS& from);
  MSG_Req_MagicAttack_CS(MSG_Req_MagicAttack_CS&& from) noexcept
    : MSG_Req_MagicAttack_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_MagicAttack_CS& operator=(const MSG_Req_MagicAttack_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_MagicAttack_CS& operator=(MSG_Req_MagicAttack_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_MagicAttack_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_MagicAttack_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_MagicAttack_CS*>(
               &_MSG_Req_MagicAttack_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MSG_Req_MagicAttack_CS& a, MSG_Req_MagicAttack_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_MagicAttack_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_MagicAttack_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_MagicAttack_CS>(nullptr);
  }

  MSG_Req_MagicAttack_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_MagicAttack_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_MagicAttack_CS& from);
  void MergeFrom(const MSG_Req_MagicAttack_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_MagicAttack_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Req_MagicAttack_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetFieldNumber = 1,
    kMagictypeFieldNumber = 2,
    kDesxFieldNumber = 3,
    kDesyFieldNumber = 4,
    kAttdirFieldNumber = 5,
    kUserdirFieldNumber = 6,
  };
  // optional .msg.EntryIDType target = 1;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  const ::msg::EntryIDType& target() const;
  ::msg::EntryIDType* release_target();
  ::msg::EntryIDType* mutable_target();
  void set_allocated_target(::msg::EntryIDType* target);
  private:
  const ::msg::EntryIDType& _internal_target() const;
  ::msg::EntryIDType* _internal_mutable_target();
  public:

  // optional uint32 magictype = 2;
  bool has_magictype() const;
  private:
  bool _internal_has_magictype() const;
  public:
  void clear_magictype();
  ::PROTOBUF_NAMESPACE_ID::uint32 magictype() const;
  void set_magictype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_magictype() const;
  void _internal_set_magictype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float desx = 3;
  bool has_desx() const;
  private:
  bool _internal_has_desx() const;
  public:
  void clear_desx();
  float desx() const;
  void set_desx(float value);
  private:
  float _internal_desx() const;
  void _internal_set_desx(float value);
  public:

  // optional float desy = 4;
  bool has_desy() const;
  private:
  bool _internal_has_desy() const;
  public:
  void clear_desy();
  float desy() const;
  void set_desy(float value);
  private:
  float _internal_desy() const;
  void _internal_set_desy(float value);
  public:

  // optional uint32 attdir = 5;
  bool has_attdir() const;
  private:
  bool _internal_has_attdir() const;
  public:
  void clear_attdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 attdir() const;
  void set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attdir() const;
  void _internal_set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 userdir = 6;
  bool has_userdir() const;
  private:
  bool _internal_has_userdir() const;
  public:
  void clear_userdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 userdir() const;
  void set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userdir() const;
  void _internal_set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Req_MagicAttack_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::EntryIDType* target_;
  ::PROTOBUF_NAMESPACE_ID::uint32 magictype_;
  float desx_;
  float desy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attdir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userdir_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_StartMagicAttack_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_StartMagicAttack_SC) */ {
 public:
  MSG_Ret_StartMagicAttack_SC();
  virtual ~MSG_Ret_StartMagicAttack_SC();

  MSG_Ret_StartMagicAttack_SC(const MSG_Ret_StartMagicAttack_SC& from);
  MSG_Ret_StartMagicAttack_SC(MSG_Ret_StartMagicAttack_SC&& from) noexcept
    : MSG_Ret_StartMagicAttack_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_StartMagicAttack_SC& operator=(const MSG_Ret_StartMagicAttack_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_StartMagicAttack_SC& operator=(MSG_Ret_StartMagicAttack_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_StartMagicAttack_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_StartMagicAttack_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_StartMagicAttack_SC*>(
               &_MSG_Ret_StartMagicAttack_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MSG_Ret_StartMagicAttack_SC& a, MSG_Ret_StartMagicAttack_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_StartMagicAttack_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_StartMagicAttack_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_StartMagicAttack_SC>(nullptr);
  }

  MSG_Ret_StartMagicAttack_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_StartMagicAttack_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_StartMagicAttack_SC& from);
  void MergeFrom(const MSG_Ret_StartMagicAttack_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_StartMagicAttack_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_StartMagicAttack_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttFieldNumber = 1,
    kDesxFieldNumber = 2,
    kDesyFieldNumber = 3,
    kAttdirFieldNumber = 4,
    kUserdirFieldNumber = 5,
    kSkillidFieldNumber = 6,
  };
  // optional .msg.EntryIDType att = 1;
  bool has_att() const;
  private:
  bool _internal_has_att() const;
  public:
  void clear_att();
  const ::msg::EntryIDType& att() const;
  ::msg::EntryIDType* release_att();
  ::msg::EntryIDType* mutable_att();
  void set_allocated_att(::msg::EntryIDType* att);
  private:
  const ::msg::EntryIDType& _internal_att() const;
  ::msg::EntryIDType* _internal_mutable_att();
  public:

  // optional float desx = 2;
  bool has_desx() const;
  private:
  bool _internal_has_desx() const;
  public:
  void clear_desx();
  float desx() const;
  void set_desx(float value);
  private:
  float _internal_desx() const;
  void _internal_set_desx(float value);
  public:

  // optional float desy = 3;
  bool has_desy() const;
  private:
  bool _internal_has_desy() const;
  public:
  void clear_desy();
  float desy() const;
  void set_desy(float value);
  private:
  float _internal_desy() const;
  void _internal_set_desy(float value);
  public:

  // optional uint32 attdir = 4;
  bool has_attdir() const;
  private:
  bool _internal_has_attdir() const;
  public:
  void clear_attdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 attdir() const;
  void set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attdir() const;
  void _internal_set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 userdir = 5;
  bool has_userdir() const;
  private:
  bool _internal_has_userdir() const;
  public:
  void clear_userdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 userdir() const;
  void set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userdir() const;
  void _internal_set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skillid = 6;
  bool has_skillid() const;
  private:
  bool _internal_has_skillid() const;
  public:
  void clear_skillid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid() const;
  void set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillid() const;
  void _internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_StartMagicAttack_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::EntryIDType* att_;
  float desx_;
  float desy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attdir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userdir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class PKResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.PKResult) */ {
 public:
  PKResult();
  virtual ~PKResult();

  PKResult(const PKResult& from);
  PKResult(PKResult&& from) noexcept
    : PKResult() {
    *this = ::std::move(from);
  }

  inline PKResult& operator=(const PKResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline PKResult& operator=(PKResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PKResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PKResult* internal_default_instance() {
    return reinterpret_cast<const PKResult*>(
               &_PKResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PKResult& a, PKResult& b) {
    a.Swap(&b);
  }
  inline void Swap(PKResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PKResult* New() const final {
    return CreateMaybeMessage<PKResult>(nullptr);
  }

  PKResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PKResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PKResult& from);
  void MergeFrom(const PKResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PKResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.PKResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttcodeFieldNumber = 4,
    kDefFieldNumber = 1,
    kHpFieldNumber = 2,
    kChangehpFieldNumber = 3,
  };
  // repeated .magic.ATTACKRESULT attcode = 4;
  int attcode_size() const;
  private:
  int _internal_attcode_size() const;
  public:
  void clear_attcode();
  private:
  ::magic::ATTACKRESULT _internal_attcode(int index) const;
  void _internal_add_attcode(::magic::ATTACKRESULT value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_attcode();
  public:
  ::magic::ATTACKRESULT attcode(int index) const;
  void set_attcode(int index, ::magic::ATTACKRESULT value);
  void add_attcode(::magic::ATTACKRESULT value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& attcode() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_attcode();

  // optional .msg.EntryIDType def = 1;
  bool has_def() const;
  private:
  bool _internal_has_def() const;
  public:
  void clear_def();
  const ::msg::EntryIDType& def() const;
  ::msg::EntryIDType* release_def();
  ::msg::EntryIDType* mutable_def();
  void set_allocated_def(::msg::EntryIDType* def);
  private:
  const ::msg::EntryIDType& _internal_def() const;
  ::msg::EntryIDType* _internal_mutable_def();
  public:

  // optional uint32 hp = 2;
  bool has_hp() const;
  private:
  bool _internal_has_hp() const;
  public:
  void clear_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 hp() const;
  void set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hp() const;
  void _internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 changehp = 3;
  bool has_changehp() const;
  private:
  bool _internal_has_changehp() const;
  public:
  void clear_changehp();
  ::PROTOBUF_NAMESPACE_ID::int32 changehp() const;
  void set_changehp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_changehp() const;
  void _internal_set_changehp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.PKResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> attcode_;
  ::msg::EntryIDType* def_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hp_;
  ::PROTOBUF_NAMESPACE_ID::int32 changehp_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MagicAttack_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_MagicAttack_SC) */ {
 public:
  MSG_Ret_MagicAttack_SC();
  virtual ~MSG_Ret_MagicAttack_SC();

  MSG_Ret_MagicAttack_SC(const MSG_Ret_MagicAttack_SC& from);
  MSG_Ret_MagicAttack_SC(MSG_Ret_MagicAttack_SC&& from) noexcept
    : MSG_Ret_MagicAttack_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MagicAttack_SC& operator=(const MSG_Ret_MagicAttack_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MagicAttack_SC& operator=(MSG_Ret_MagicAttack_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MagicAttack_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MagicAttack_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MagicAttack_SC*>(
               &_MSG_Ret_MagicAttack_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MSG_Ret_MagicAttack_SC& a, MSG_Ret_MagicAttack_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MagicAttack_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MagicAttack_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MagicAttack_SC>(nullptr);
  }

  MSG_Ret_MagicAttack_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MagicAttack_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MagicAttack_SC& from);
  void MergeFrom(const MSG_Ret_MagicAttack_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MagicAttack_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_MagicAttack_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPklistFieldNumber = 8,
    kAttFieldNumber = 1,
    kDefFieldNumber = 2,
    kDesxFieldNumber = 3,
    kDesyFieldNumber = 4,
    kAttdirFieldNumber = 5,
    kUserdirFieldNumber = 6,
    kSkillstageFieldNumber = 7,
  };
  // repeated .magic.PKResult pklist = 8;
  int pklist_size() const;
  private:
  int _internal_pklist_size() const;
  public:
  void clear_pklist();
  ::magic::PKResult* mutable_pklist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::PKResult >*
      mutable_pklist();
  private:
  const ::magic::PKResult& _internal_pklist(int index) const;
  ::magic::PKResult* _internal_add_pklist();
  public:
  const ::magic::PKResult& pklist(int index) const;
  ::magic::PKResult* add_pklist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::PKResult >&
      pklist() const;

  // optional .msg.EntryIDType att = 1;
  bool has_att() const;
  private:
  bool _internal_has_att() const;
  public:
  void clear_att();
  const ::msg::EntryIDType& att() const;
  ::msg::EntryIDType* release_att();
  ::msg::EntryIDType* mutable_att();
  void set_allocated_att(::msg::EntryIDType* att);
  private:
  const ::msg::EntryIDType& _internal_att() const;
  ::msg::EntryIDType* _internal_mutable_att();
  public:

  // optional .msg.EntryIDType def = 2;
  bool has_def() const;
  private:
  bool _internal_has_def() const;
  public:
  void clear_def();
  const ::msg::EntryIDType& def() const;
  ::msg::EntryIDType* release_def();
  ::msg::EntryIDType* mutable_def();
  void set_allocated_def(::msg::EntryIDType* def);
  private:
  const ::msg::EntryIDType& _internal_def() const;
  ::msg::EntryIDType* _internal_mutable_def();
  public:

  // optional float desx = 3;
  bool has_desx() const;
  private:
  bool _internal_has_desx() const;
  public:
  void clear_desx();
  float desx() const;
  void set_desx(float value);
  private:
  float _internal_desx() const;
  void _internal_set_desx(float value);
  public:

  // optional float desy = 4;
  bool has_desy() const;
  private:
  bool _internal_has_desy() const;
  public:
  void clear_desy();
  float desy() const;
  void set_desy(float value);
  private:
  float _internal_desy() const;
  void _internal_set_desy(float value);
  public:

  // optional uint32 attdir = 5;
  bool has_attdir() const;
  private:
  bool _internal_has_attdir() const;
  public:
  void clear_attdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 attdir() const;
  void set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attdir() const;
  void _internal_set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 userdir = 6;
  bool has_userdir() const;
  private:
  bool _internal_has_userdir() const;
  public:
  void clear_userdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 userdir() const;
  void set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userdir() const;
  void _internal_set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 skillstage = 7;
  bool has_skillstage() const;
  private:
  bool _internal_has_skillstage() const;
  public:
  void clear_skillstage();
  ::PROTOBUF_NAMESPACE_ID::uint64 skillstage() const;
  void set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_skillstage() const;
  void _internal_set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_MagicAttack_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::PKResult > pklist_;
  ::msg::EntryIDType* att_;
  ::msg::EntryIDType* def_;
  float desx_;
  float desy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attdir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userdir_;
  ::PROTOBUF_NAMESPACE_ID::uint64 skillstage_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_HpMpPop_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_HpMpPop_SC) */ {
 public:
  MSG_Ret_HpMpPop_SC();
  virtual ~MSG_Ret_HpMpPop_SC();

  MSG_Ret_HpMpPop_SC(const MSG_Ret_HpMpPop_SC& from);
  MSG_Ret_HpMpPop_SC(MSG_Ret_HpMpPop_SC&& from) noexcept
    : MSG_Ret_HpMpPop_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_HpMpPop_SC& operator=(const MSG_Ret_HpMpPop_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_HpMpPop_SC& operator=(MSG_Ret_HpMpPop_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_HpMpPop_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_HpMpPop_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_HpMpPop_SC*>(
               &_MSG_Ret_HpMpPop_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MSG_Ret_HpMpPop_SC& a, MSG_Ret_HpMpPop_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_HpMpPop_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_HpMpPop_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_HpMpPop_SC>(nullptr);
  }

  MSG_Ret_HpMpPop_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_HpMpPop_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_HpMpPop_SC& from);
  void MergeFrom(const MSG_Ret_HpMpPop_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_HpMpPop_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_HpMpPop_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetFieldNumber = 1,
    kAttFieldNumber = 9,
    kHpFieldNumber = 2,
    kHpChangeFieldNumber = 3,
    kMpFieldNumber = 4,
    kMpChangeFieldNumber = 5,
    kSkillstageFieldNumber = 7,
    kStateIdFieldNumber = 8,
    kForceFieldNumber = 6,
  };
  // optional .msg.EntryIDType target = 1;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  const ::msg::EntryIDType& target() const;
  ::msg::EntryIDType* release_target();
  ::msg::EntryIDType* mutable_target();
  void set_allocated_target(::msg::EntryIDType* target);
  private:
  const ::msg::EntryIDType& _internal_target() const;
  ::msg::EntryIDType* _internal_mutable_target();
  public:

  // optional .msg.EntryIDType att = 9;
  bool has_att() const;
  private:
  bool _internal_has_att() const;
  public:
  void clear_att();
  const ::msg::EntryIDType& att() const;
  ::msg::EntryIDType* release_att();
  ::msg::EntryIDType* mutable_att();
  void set_allocated_att(::msg::EntryIDType* att);
  private:
  const ::msg::EntryIDType& _internal_att() const;
  ::msg::EntryIDType* _internal_mutable_att();
  public:

  // optional uint32 hp = 2;
  bool has_hp() const;
  private:
  bool _internal_has_hp() const;
  public:
  void clear_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 hp() const;
  void set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hp() const;
  void _internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 hp_change = 3;
  bool has_hp_change() const;
  private:
  bool _internal_has_hp_change() const;
  public:
  void clear_hp_change();
  ::PROTOBUF_NAMESPACE_ID::int32 hp_change() const;
  void set_hp_change(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hp_change() const;
  void _internal_set_hp_change(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 mp = 4;
  bool has_mp() const;
  private:
  bool _internal_has_mp() const;
  public:
  void clear_mp();
  ::PROTOBUF_NAMESPACE_ID::uint32 mp() const;
  void set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mp() const;
  void _internal_set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 mp_change = 5;
  bool has_mp_change() const;
  private:
  bool _internal_has_mp_change() const;
  public:
  void clear_mp_change();
  ::PROTOBUF_NAMESPACE_ID::uint32 mp_change() const;
  void set_mp_change(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mp_change() const;
  void _internal_set_mp_change(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 skillstage = 7;
  bool has_skillstage() const;
  private:
  bool _internal_has_skillstage() const;
  public:
  void clear_skillstage();
  ::PROTOBUF_NAMESPACE_ID::uint64 skillstage() const;
  void set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_skillstage() const;
  void _internal_set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 state_id = 8;
  bool has_state_id() const;
  private:
  bool _internal_has_state_id() const;
  public:
  void clear_state_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 state_id() const;
  void set_state_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_state_id() const;
  void _internal_set_state_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool force = 6;
  bool has_force() const;
  private:
  bool _internal_has_force() const;
  public:
  void clear_force();
  bool force() const;
  void set_force(bool value);
  private:
  bool _internal_force() const;
  void _internal_set_force(bool value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_HpMpPop_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::EntryIDType* target_;
  ::msg::EntryIDType* att_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hp_;
  ::PROTOBUF_NAMESPACE_ID::int32 hp_change_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mp_change_;
  ::PROTOBUF_NAMESPACE_ID::uint64 skillstage_;
  ::PROTOBUF_NAMESPACE_ID::uint64 state_id_;
  bool force_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_SyncSkillStage_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Req_SyncSkillStage_CS) */ {
 public:
  MSG_Req_SyncSkillStage_CS();
  virtual ~MSG_Req_SyncSkillStage_CS();

  MSG_Req_SyncSkillStage_CS(const MSG_Req_SyncSkillStage_CS& from);
  MSG_Req_SyncSkillStage_CS(MSG_Req_SyncSkillStage_CS&& from) noexcept
    : MSG_Req_SyncSkillStage_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_SyncSkillStage_CS& operator=(const MSG_Req_SyncSkillStage_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_SyncSkillStage_CS& operator=(MSG_Req_SyncSkillStage_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_SyncSkillStage_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_SyncSkillStage_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_SyncSkillStage_CS*>(
               &_MSG_Req_SyncSkillStage_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_Req_SyncSkillStage_CS& a, MSG_Req_SyncSkillStage_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_SyncSkillStage_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_SyncSkillStage_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_SyncSkillStage_CS>(nullptr);
  }

  MSG_Req_SyncSkillStage_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_SyncSkillStage_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_SyncSkillStage_CS& from);
  void MergeFrom(const MSG_Req_SyncSkillStage_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_SyncSkillStage_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Req_SyncSkillStage_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetFieldNumber = 1,
    kSkillstageFieldNumber = 2,
    kDesxFieldNumber = 3,
    kDesyFieldNumber = 4,
    kAttdirFieldNumber = 5,
    kUserdirFieldNumber = 6,
    kStagetypeFieldNumber = 7,
  };
  // optional .msg.EntryIDType target = 1;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  const ::msg::EntryIDType& target() const;
  ::msg::EntryIDType* release_target();
  ::msg::EntryIDType* mutable_target();
  void set_allocated_target(::msg::EntryIDType* target);
  private:
  const ::msg::EntryIDType& _internal_target() const;
  ::msg::EntryIDType* _internal_mutable_target();
  public:

  // optional uint64 skillstage = 2;
  bool has_skillstage() const;
  private:
  bool _internal_has_skillstage() const;
  public:
  void clear_skillstage();
  ::PROTOBUF_NAMESPACE_ID::uint64 skillstage() const;
  void set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_skillstage() const;
  void _internal_set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional float desx = 3;
  bool has_desx() const;
  private:
  bool _internal_has_desx() const;
  public:
  void clear_desx();
  float desx() const;
  void set_desx(float value);
  private:
  float _internal_desx() const;
  void _internal_set_desx(float value);
  public:

  // optional float desy = 4;
  bool has_desy() const;
  private:
  bool _internal_has_desy() const;
  public:
  void clear_desy();
  float desy() const;
  void set_desy(float value);
  private:
  float _internal_desy() const;
  void _internal_set_desy(float value);
  public:

  // optional uint32 attdir = 5;
  bool has_attdir() const;
  private:
  bool _internal_has_attdir() const;
  public:
  void clear_attdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 attdir() const;
  void set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attdir() const;
  void _internal_set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 userdir = 6;
  bool has_userdir() const;
  private:
  bool _internal_has_userdir() const;
  public:
  void clear_userdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 userdir() const;
  void set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userdir() const;
  void _internal_set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 stagetype = 7;
  bool has_stagetype() const;
  private:
  bool _internal_has_stagetype() const;
  public:
  void clear_stagetype();
  ::PROTOBUF_NAMESPACE_ID::uint32 stagetype() const;
  void set_stagetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stagetype() const;
  void _internal_set_stagetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Req_SyncSkillStage_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::EntryIDType* target_;
  ::PROTOBUF_NAMESPACE_ID::uint64 skillstage_;
  float desx_;
  float desy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attdir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userdir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stagetype_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_SyncSkillStage_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_SyncSkillStage_SC) */ {
 public:
  MSG_Ret_SyncSkillStage_SC();
  virtual ~MSG_Ret_SyncSkillStage_SC();

  MSG_Ret_SyncSkillStage_SC(const MSG_Ret_SyncSkillStage_SC& from);
  MSG_Ret_SyncSkillStage_SC(MSG_Ret_SyncSkillStage_SC&& from) noexcept
    : MSG_Ret_SyncSkillStage_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_SyncSkillStage_SC& operator=(const MSG_Ret_SyncSkillStage_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_SyncSkillStage_SC& operator=(MSG_Ret_SyncSkillStage_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_SyncSkillStage_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_SyncSkillStage_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_SyncSkillStage_SC*>(
               &_MSG_Ret_SyncSkillStage_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_Ret_SyncSkillStage_SC& a, MSG_Ret_SyncSkillStage_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_SyncSkillStage_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_SyncSkillStage_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_SyncSkillStage_SC>(nullptr);
  }

  MSG_Ret_SyncSkillStage_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_SyncSkillStage_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_SyncSkillStage_SC& from);
  void MergeFrom(const MSG_Ret_SyncSkillStage_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_SyncSkillStage_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_SyncSkillStage_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttFieldNumber = 1,
    kDefFieldNumber = 2,
    kSkillstageFieldNumber = 3,
    kDesxFieldNumber = 4,
    kDesyFieldNumber = 5,
    kAttdirFieldNumber = 6,
    kUserdirFieldNumber = 7,
    kStagetypeFieldNumber = 8,
  };
  // optional .msg.EntryIDType att = 1;
  bool has_att() const;
  private:
  bool _internal_has_att() const;
  public:
  void clear_att();
  const ::msg::EntryIDType& att() const;
  ::msg::EntryIDType* release_att();
  ::msg::EntryIDType* mutable_att();
  void set_allocated_att(::msg::EntryIDType* att);
  private:
  const ::msg::EntryIDType& _internal_att() const;
  ::msg::EntryIDType* _internal_mutable_att();
  public:

  // optional .msg.EntryIDType def = 2;
  bool has_def() const;
  private:
  bool _internal_has_def() const;
  public:
  void clear_def();
  const ::msg::EntryIDType& def() const;
  ::msg::EntryIDType* release_def();
  ::msg::EntryIDType* mutable_def();
  void set_allocated_def(::msg::EntryIDType* def);
  private:
  const ::msg::EntryIDType& _internal_def() const;
  ::msg::EntryIDType* _internal_mutable_def();
  public:

  // optional uint64 skillstage = 3;
  bool has_skillstage() const;
  private:
  bool _internal_has_skillstage() const;
  public:
  void clear_skillstage();
  ::PROTOBUF_NAMESPACE_ID::uint64 skillstage() const;
  void set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_skillstage() const;
  void _internal_set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional float desx = 4;
  bool has_desx() const;
  private:
  bool _internal_has_desx() const;
  public:
  void clear_desx();
  float desx() const;
  void set_desx(float value);
  private:
  float _internal_desx() const;
  void _internal_set_desx(float value);
  public:

  // optional float desy = 5;
  bool has_desy() const;
  private:
  bool _internal_has_desy() const;
  public:
  void clear_desy();
  float desy() const;
  void set_desy(float value);
  private:
  float _internal_desy() const;
  void _internal_set_desy(float value);
  public:

  // optional uint32 attdir = 6;
  bool has_attdir() const;
  private:
  bool _internal_has_attdir() const;
  public:
  void clear_attdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 attdir() const;
  void set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attdir() const;
  void _internal_set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 userdir = 7;
  bool has_userdir() const;
  private:
  bool _internal_has_userdir() const;
  public:
  void clear_userdir();
  ::PROTOBUF_NAMESPACE_ID::uint32 userdir() const;
  void set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userdir() const;
  void _internal_set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 stagetype = 8;
  bool has_stagetype() const;
  private:
  bool _internal_has_stagetype() const;
  public:
  void clear_stagetype();
  ::PROTOBUF_NAMESPACE_ID::uint32 stagetype() const;
  void set_stagetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stagetype() const;
  void _internal_set_stagetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_SyncSkillStage_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::EntryIDType* att_;
  ::msg::EntryIDType* def_;
  ::PROTOBUF_NAMESPACE_ID::uint64 skillstage_;
  float desx_;
  float desy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attdir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userdir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stagetype_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_InterruptSkill_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_InterruptSkill_SC) */ {
 public:
  MSG_Ret_InterruptSkill_SC();
  virtual ~MSG_Ret_InterruptSkill_SC();

  MSG_Ret_InterruptSkill_SC(const MSG_Ret_InterruptSkill_SC& from);
  MSG_Ret_InterruptSkill_SC(MSG_Ret_InterruptSkill_SC&& from) noexcept
    : MSG_Ret_InterruptSkill_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_InterruptSkill_SC& operator=(const MSG_Ret_InterruptSkill_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_InterruptSkill_SC& operator=(MSG_Ret_InterruptSkill_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_InterruptSkill_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_InterruptSkill_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_InterruptSkill_SC*>(
               &_MSG_Ret_InterruptSkill_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_Ret_InterruptSkill_SC& a, MSG_Ret_InterruptSkill_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_InterruptSkill_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_InterruptSkill_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_InterruptSkill_SC>(nullptr);
  }

  MSG_Ret_InterruptSkill_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_InterruptSkill_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_InterruptSkill_SC& from);
  void MergeFrom(const MSG_Ret_InterruptSkill_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_InterruptSkill_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_InterruptSkill_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttFieldNumber = 1,
    kSkillstageFieldNumber = 2,
  };
  // optional .msg.EntryIDType att = 1;
  bool has_att() const;
  private:
  bool _internal_has_att() const;
  public:
  void clear_att();
  const ::msg::EntryIDType& att() const;
  ::msg::EntryIDType* release_att();
  ::msg::EntryIDType* mutable_att();
  void set_allocated_att(::msg::EntryIDType* att);
  private:
  const ::msg::EntryIDType& _internal_att() const;
  ::msg::EntryIDType* _internal_mutable_att();
  public:

  // optional uint64 skillstage = 2;
  bool has_skillstage() const;
  private:
  bool _internal_has_skillstage() const;
  public:
  void clear_skillstage();
  ::PROTOBUF_NAMESPACE_ID::uint64 skillstage() const;
  void set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_skillstage() const;
  void _internal_set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_InterruptSkill_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::EntryIDType* att_;
  ::PROTOBUF_NAMESPACE_ID::uint64 skillstage_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MainUserDeath_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_MainUserDeath_SC) */ {
 public:
  MSG_Ret_MainUserDeath_SC();
  virtual ~MSG_Ret_MainUserDeath_SC();

  MSG_Ret_MainUserDeath_SC(const MSG_Ret_MainUserDeath_SC& from);
  MSG_Ret_MainUserDeath_SC(MSG_Ret_MainUserDeath_SC&& from) noexcept
    : MSG_Ret_MainUserDeath_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MainUserDeath_SC& operator=(const MSG_Ret_MainUserDeath_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MainUserDeath_SC& operator=(MSG_Ret_MainUserDeath_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MainUserDeath_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MainUserDeath_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MainUserDeath_SC*>(
               &_MSG_Ret_MainUserDeath_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MSG_Ret_MainUserDeath_SC& a, MSG_Ret_MainUserDeath_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MainUserDeath_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MainUserDeath_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MainUserDeath_SC>(nullptr);
  }

  MSG_Ret_MainUserDeath_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MainUserDeath_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MainUserDeath_SC& from);
  void MergeFrom(const MSG_Ret_MainUserDeath_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MainUserDeath_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_MainUserDeath_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCharidFieldNumber = 1,
    kRelivecostidFieldNumber = 2,
    kRelivecostnumFieldNumber = 3,
    kCanreliveoriginFieldNumber = 4,
    kRelivetimeFieldNumber = 6,
    kAutoreliveFieldNumber = 7,
    kReliveTypeFieldNumber = 8,
    kCanreliveFieldNumber = 5,
  };
  // optional string charid = 1;
  bool has_charid() const;
  private:
  bool _internal_has_charid() const;
  public:
  void clear_charid();
  const std::string& charid() const;
  void set_charid(const std::string& value);
  void set_charid(std::string&& value);
  void set_charid(const char* value);
  void set_charid(const char* value, size_t size);
  std::string* mutable_charid();
  std::string* release_charid();
  void set_allocated_charid(std::string* charid);
  private:
  const std::string& _internal_charid() const;
  void _internal_set_charid(const std::string& value);
  std::string* _internal_mutable_charid();
  public:

  // optional uint32 relivecostid = 2;
  bool has_relivecostid() const;
  private:
  bool _internal_has_relivecostid() const;
  public:
  void clear_relivecostid();
  ::PROTOBUF_NAMESPACE_ID::uint32 relivecostid() const;
  void set_relivecostid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_relivecostid() const;
  void _internal_set_relivecostid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 relivecostnum = 3;
  bool has_relivecostnum() const;
  private:
  bool _internal_has_relivecostnum() const;
  public:
  void clear_relivecostnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 relivecostnum() const;
  void set_relivecostnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_relivecostnum() const;
  void _internal_set_relivecostnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 canreliveorigin = 4;
  bool has_canreliveorigin() const;
  private:
  bool _internal_has_canreliveorigin() const;
  public:
  void clear_canreliveorigin();
  ::PROTOBUF_NAMESPACE_ID::uint32 canreliveorigin() const;
  void set_canreliveorigin(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_canreliveorigin() const;
  void _internal_set_canreliveorigin(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 relivetime = 6;
  bool has_relivetime() const;
  private:
  bool _internal_has_relivetime() const;
  public:
  void clear_relivetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 relivetime() const;
  void set_relivetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_relivetime() const;
  void _internal_set_relivetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool autorelive = 7;
  bool has_autorelive() const;
  private:
  bool _internal_has_autorelive() const;
  public:
  void clear_autorelive();
  bool autorelive() const;
  void set_autorelive(bool value);
  private:
  bool _internal_autorelive() const;
  void _internal_set_autorelive(bool value);
  public:

  // optional uint32 relive_type = 8;
  bool has_relive_type() const;
  private:
  bool _internal_has_relive_type() const;
  public:
  void clear_relive_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 relive_type() const;
  void set_relive_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_relive_type() const;
  void _internal_set_relive_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool canrelive = 5 [default = true];
  bool has_canrelive() const;
  private:
  bool _internal_has_canrelive() const;
  public:
  void clear_canrelive();
  bool canrelive() const;
  void set_canrelive(bool value);
  private:
  bool _internal_canrelive() const;
  void _internal_set_canrelive(bool value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_MainUserDeath_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr charid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 relivecostid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 relivecostnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 canreliveorigin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 relivetime_;
  bool autorelive_;
  ::PROTOBUF_NAMESPACE_ID::uint32 relive_type_;
  bool canrelive_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_UserDeath_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_UserDeath_SC) */ {
 public:
  MSG_Ret_UserDeath_SC();
  virtual ~MSG_Ret_UserDeath_SC();

  MSG_Ret_UserDeath_SC(const MSG_Ret_UserDeath_SC& from);
  MSG_Ret_UserDeath_SC(MSG_Ret_UserDeath_SC&& from) noexcept
    : MSG_Ret_UserDeath_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_UserDeath_SC& operator=(const MSG_Ret_UserDeath_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_UserDeath_SC& operator=(MSG_Ret_UserDeath_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_UserDeath_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_UserDeath_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_UserDeath_SC*>(
               &_MSG_Ret_UserDeath_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_Ret_UserDeath_SC& a, MSG_Ret_UserDeath_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_UserDeath_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_UserDeath_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_UserDeath_SC>(nullptr);
  }

  MSG_Ret_UserDeath_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_UserDeath_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_UserDeath_SC& from);
  void MergeFrom(const MSG_Ret_UserDeath_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_UserDeath_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_UserDeath_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTempidFieldNumber = 1,
    kAttidFieldNumber = 2,
    kLasthitskillFieldNumber = 3,
    kAtttypeFieldNumber = 4,
  };
  // optional uint64 tempid = 1;
  bool has_tempid() const;
  private:
  bool _internal_has_tempid() const;
  public:
  void clear_tempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid() const;
  void set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tempid() const;
  void _internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 attid = 2;
  bool has_attid() const;
  private:
  bool _internal_has_attid() const;
  public:
  void clear_attid();
  ::PROTOBUF_NAMESPACE_ID::uint64 attid() const;
  void set_attid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_attid() const;
  void _internal_set_attid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 lasthitskill = 3;
  bool has_lasthitskill() const;
  private:
  bool _internal_has_lasthitskill() const;
  public:
  void clear_lasthitskill();
  ::PROTOBUF_NAMESPACE_ID::uint32 lasthitskill() const;
  void set_lasthitskill(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lasthitskill() const;
  void _internal_set_lasthitskill(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 atttype = 4;
  bool has_atttype() const;
  private:
  bool _internal_has_atttype() const;
  public:
  void clear_atttype();
  ::PROTOBUF_NAMESPACE_ID::uint32 atttype() const;
  void set_atttype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_atttype() const;
  void _internal_set_atttype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_UserDeath_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 attid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lasthitskill_;
  ::PROTOBUF_NAMESPACE_ID::uint32 atttype_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_MainUserRelive_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Req_MainUserRelive_CS) */ {
 public:
  MSG_Req_MainUserRelive_CS();
  virtual ~MSG_Req_MainUserRelive_CS();

  MSG_Req_MainUserRelive_CS(const MSG_Req_MainUserRelive_CS& from);
  MSG_Req_MainUserRelive_CS(MSG_Req_MainUserRelive_CS&& from) noexcept
    : MSG_Req_MainUserRelive_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_MainUserRelive_CS& operator=(const MSG_Req_MainUserRelive_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_MainUserRelive_CS& operator=(MSG_Req_MainUserRelive_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_MainUserRelive_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_MainUserRelive_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_MainUserRelive_CS*>(
               &_MSG_Req_MainUserRelive_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_Req_MainUserRelive_CS& a, MSG_Req_MainUserRelive_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_MainUserRelive_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_MainUserRelive_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_MainUserRelive_CS>(nullptr);
  }

  MSG_Req_MainUserRelive_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_MainUserRelive_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_MainUserRelive_CS& from);
  void MergeFrom(const MSG_Req_MainUserRelive_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_MainUserRelive_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Req_MainUserRelive_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRelivetypeFieldNumber = 1,
  };
  // optional uint32 relivetype = 1;
  bool has_relivetype() const;
  private:
  bool _internal_has_relivetype() const;
  public:
  void clear_relivetype();
  ::PROTOBUF_NAMESPACE_ID::uint32 relivetype() const;
  void set_relivetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_relivetype() const;
  void _internal_set_relivetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Req_MainUserRelive_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 relivetype_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MainUserRelive_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_MainUserRelive_SC) */ {
 public:
  MSG_Ret_MainUserRelive_SC();
  virtual ~MSG_Ret_MainUserRelive_SC();

  MSG_Ret_MainUserRelive_SC(const MSG_Ret_MainUserRelive_SC& from);
  MSG_Ret_MainUserRelive_SC(MSG_Ret_MainUserRelive_SC&& from) noexcept
    : MSG_Ret_MainUserRelive_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MainUserRelive_SC& operator=(const MSG_Ret_MainUserRelive_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MainUserRelive_SC& operator=(MSG_Ret_MainUserRelive_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MainUserRelive_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MainUserRelive_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MainUserRelive_SC*>(
               &_MSG_Ret_MainUserRelive_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_Ret_MainUserRelive_SC& a, MSG_Ret_MainUserRelive_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MainUserRelive_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MainUserRelive_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MainUserRelive_SC>(nullptr);
  }

  MSG_Ret_MainUserRelive_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MainUserRelive_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MainUserRelive_SC& from);
  void MergeFrom(const MSG_Ret_MainUserRelive_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MainUserRelive_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_MainUserRelive_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseridFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kRelivetypeFieldNumber = 4,
  };
  // optional uint64 userid = 1;
  bool has_userid() const;
  private:
  bool _internal_has_userid() const;
  public:
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 x = 2;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  ::PROTOBUF_NAMESPACE_ID::uint32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_x() const;
  void _internal_set_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 y = 3;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  ::PROTOBUF_NAMESPACE_ID::uint32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_y() const;
  void _internal_set_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .msg.ReliveType relivetype = 4;
  bool has_relivetype() const;
  private:
  bool _internal_has_relivetype() const;
  public:
  void clear_relivetype();
  ::msg::ReliveType relivetype() const;
  void set_relivetype(::msg::ReliveType value);
  private:
  ::msg::ReliveType _internal_relivetype() const;
  void _internal_set_relivetype(::msg::ReliveType value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_MainUserRelive_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 userid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 x_;
  ::PROTOBUF_NAMESPACE_ID::uint32 y_;
  int relivetype_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_SwitchPKMode_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_SwitchPKMode_SC) */ {
 public:
  MSG_Ret_SwitchPKMode_SC();
  virtual ~MSG_Ret_SwitchPKMode_SC();

  MSG_Ret_SwitchPKMode_SC(const MSG_Ret_SwitchPKMode_SC& from);
  MSG_Ret_SwitchPKMode_SC(MSG_Ret_SwitchPKMode_SC&& from) noexcept
    : MSG_Ret_SwitchPKMode_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_SwitchPKMode_SC& operator=(const MSG_Ret_SwitchPKMode_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_SwitchPKMode_SC& operator=(MSG_Ret_SwitchPKMode_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_SwitchPKMode_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_SwitchPKMode_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_SwitchPKMode_SC*>(
               &_MSG_Ret_SwitchPKMode_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MSG_Ret_SwitchPKMode_SC& a, MSG_Ret_SwitchPKMode_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_SwitchPKMode_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_SwitchPKMode_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_SwitchPKMode_SC>(nullptr);
  }

  MSG_Ret_SwitchPKMode_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_SwitchPKMode_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_SwitchPKMode_SC& from);
  void MergeFrom(const MSG_Ret_SwitchPKMode_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_SwitchPKMode_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_SwitchPKMode_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewmodeFieldNumber = 1,
  };
  // required .msg.PKMode newmode = 1;
  bool has_newmode() const;
  private:
  bool _internal_has_newmode() const;
  public:
  void clear_newmode();
  ::msg::PKMode newmode() const;
  void set_newmode(::msg::PKMode value);
  private:
  ::msg::PKMode _internal_newmode() const;
  void _internal_set_newmode(::msg::PKMode value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_SwitchPKMode_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int newmode_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRefreshSkill_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_RetRefreshSkill_SC) */ {
 public:
  MSG_RetRefreshSkill_SC();
  virtual ~MSG_RetRefreshSkill_SC();

  MSG_RetRefreshSkill_SC(const MSG_RetRefreshSkill_SC& from);
  MSG_RetRefreshSkill_SC(MSG_RetRefreshSkill_SC&& from) noexcept
    : MSG_RetRefreshSkill_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRefreshSkill_SC& operator=(const MSG_RetRefreshSkill_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRefreshSkill_SC& operator=(MSG_RetRefreshSkill_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRefreshSkill_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRefreshSkill_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRefreshSkill_SC*>(
               &_MSG_RetRefreshSkill_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MSG_RetRefreshSkill_SC& a, MSG_RetRefreshSkill_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRefreshSkill_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRefreshSkill_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRefreshSkill_SC>(nullptr);
  }

  MSG_RetRefreshSkill_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRefreshSkill_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRefreshSkill_SC& from);
  void MergeFrom(const MSG_RetRefreshSkill_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRefreshSkill_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_RetRefreshSkill_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillsFieldNumber = 1,
  };
  // repeated .magic.SkillData skills = 1;
  int skills_size() const;
  private:
  int _internal_skills_size() const;
  public:
  void clear_skills();
  ::magic::SkillData* mutable_skills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::SkillData >*
      mutable_skills();
  private:
  const ::magic::SkillData& _internal_skills(int index) const;
  ::magic::SkillData* _internal_add_skills();
  public:
  const ::magic::SkillData& skills(int index) const;
  ::magic::SkillData* add_skills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::SkillData >&
      skills() const;

  // @@protoc_insertion_point(class_scope:magic.MSG_RetRefreshSkill_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::SkillData > skills_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_OffSkill_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Req_OffSkill_CS) */ {
 public:
  MSG_Req_OffSkill_CS();
  virtual ~MSG_Req_OffSkill_CS();

  MSG_Req_OffSkill_CS(const MSG_Req_OffSkill_CS& from);
  MSG_Req_OffSkill_CS(MSG_Req_OffSkill_CS&& from) noexcept
    : MSG_Req_OffSkill_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_OffSkill_CS& operator=(const MSG_Req_OffSkill_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_OffSkill_CS& operator=(MSG_Req_OffSkill_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_OffSkill_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_OffSkill_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_OffSkill_CS*>(
               &_MSG_Req_OffSkill_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MSG_Req_OffSkill_CS& a, MSG_Req_OffSkill_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_OffSkill_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_OffSkill_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_OffSkill_CS>(nullptr);
  }

  MSG_Req_OffSkill_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_OffSkill_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_OffSkill_CS& from);
  void MergeFrom(const MSG_Req_OffSkill_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_OffSkill_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Req_OffSkill_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillidFieldNumber = 1,
  };
  // optional uint32 skillid = 1;
  bool has_skillid() const;
  private:
  bool _internal_has_skillid() const;
  public:
  void clear_skillid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid() const;
  void set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillid() const;
  void _internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Req_OffSkill_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class AttWarning :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.AttWarning) */ {
 public:
  AttWarning();
  virtual ~AttWarning();

  AttWarning(const AttWarning& from);
  AttWarning(AttWarning&& from) noexcept
    : AttWarning() {
    *this = ::std::move(from);
  }

  inline AttWarning& operator=(const AttWarning& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttWarning& operator=(AttWarning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttWarning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttWarning* internal_default_instance() {
    return reinterpret_cast<const AttWarning*>(
               &_AttWarning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(AttWarning& a, AttWarning& b) {
    a.Swap(&b);
  }
  inline void Swap(AttWarning* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AttWarning* New() const final {
    return CreateMaybeMessage<AttWarning>(nullptr);
  }

  AttWarning* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttWarning>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttWarning& from);
  void MergeFrom(const AttWarning& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttWarning* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.AttWarning";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosFieldNumber = 2,
    kLasttimeFieldNumber = 1,
    kDirFieldNumber = 3,
    kRangetypeFieldNumber = 4,
    kRangep1FieldNumber = 5,
    kRangep2FieldNumber = 6,
  };
  // optional .msg.Position pos = 2;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  const ::msg::Position& pos() const;
  ::msg::Position* release_pos();
  ::msg::Position* mutable_pos();
  void set_allocated_pos(::msg::Position* pos);
  private:
  const ::msg::Position& _internal_pos() const;
  ::msg::Position* _internal_mutable_pos();
  public:

  // optional uint32 lasttime = 1;
  bool has_lasttime() const;
  private:
  bool _internal_has_lasttime() const;
  public:
  void clear_lasttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 lasttime() const;
  void set_lasttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lasttime() const;
  void _internal_set_lasttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dir = 3;
  bool has_dir() const;
  private:
  bool _internal_has_dir() const;
  public:
  void clear_dir();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir() const;
  void set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir() const;
  void _internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rangetype = 4;
  bool has_rangetype() const;
  private:
  bool _internal_has_rangetype() const;
  public:
  void clear_rangetype();
  ::PROTOBUF_NAMESPACE_ID::uint32 rangetype() const;
  void set_rangetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rangetype() const;
  void _internal_set_rangetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rangep1 = 5;
  bool has_rangep1() const;
  private:
  bool _internal_has_rangep1() const;
  public:
  void clear_rangep1();
  ::PROTOBUF_NAMESPACE_ID::uint32 rangep1() const;
  void set_rangep1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rangep1() const;
  void _internal_set_rangep1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rangep2 = 6;
  bool has_rangep2() const;
  private:
  bool _internal_has_rangep2() const;
  public:
  void clear_rangep2();
  ::PROTOBUF_NAMESPACE_ID::uint32 rangep2() const;
  void set_rangep2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rangep2() const;
  void _internal_set_rangep2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.AttWarning)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::Position* pos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lasttime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rangetype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rangep1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rangep2_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_AttWarning_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_AttWarning_SC) */ {
 public:
  MSG_Ret_AttWarning_SC();
  virtual ~MSG_Ret_AttWarning_SC();

  MSG_Ret_AttWarning_SC(const MSG_Ret_AttWarning_SC& from);
  MSG_Ret_AttWarning_SC(MSG_Ret_AttWarning_SC&& from) noexcept
    : MSG_Ret_AttWarning_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_AttWarning_SC& operator=(const MSG_Ret_AttWarning_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_AttWarning_SC& operator=(MSG_Ret_AttWarning_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_AttWarning_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_AttWarning_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_AttWarning_SC*>(
               &_MSG_Ret_AttWarning_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MSG_Ret_AttWarning_SC& a, MSG_Ret_AttWarning_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_AttWarning_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_AttWarning_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_AttWarning_SC>(nullptr);
  }

  MSG_Ret_AttWarning_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_AttWarning_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_AttWarning_SC& from);
  void MergeFrom(const MSG_Ret_AttWarning_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_AttWarning_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_AttWarning_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWarningFieldNumber = 2,
    kAttackerFieldNumber = 1,
  };
  // repeated .magic.AttWarning warning = 2;
  int warning_size() const;
  private:
  int _internal_warning_size() const;
  public:
  void clear_warning();
  ::magic::AttWarning* mutable_warning(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::AttWarning >*
      mutable_warning();
  private:
  const ::magic::AttWarning& _internal_warning(int index) const;
  ::magic::AttWarning* _internal_add_warning();
  public:
  const ::magic::AttWarning& warning(int index) const;
  ::magic::AttWarning* add_warning();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::AttWarning >&
      warning() const;

  // optional .msg.EntryIDType attacker = 1;
  bool has_attacker() const;
  private:
  bool _internal_has_attacker() const;
  public:
  void clear_attacker();
  const ::msg::EntryIDType& attacker() const;
  ::msg::EntryIDType* release_attacker();
  ::msg::EntryIDType* mutable_attacker();
  void set_allocated_attacker(::msg::EntryIDType* attacker);
  private:
  const ::msg::EntryIDType& _internal_attacker() const;
  ::msg::EntryIDType* _internal_mutable_attacker();
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_AttWarning_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::AttWarning > warning_;
  ::msg::EntryIDType* attacker_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqTriggerQTESkill_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_ReqTriggerQTESkill_CS) */ {
 public:
  MSG_ReqTriggerQTESkill_CS();
  virtual ~MSG_ReqTriggerQTESkill_CS();

  MSG_ReqTriggerQTESkill_CS(const MSG_ReqTriggerQTESkill_CS& from);
  MSG_ReqTriggerQTESkill_CS(MSG_ReqTriggerQTESkill_CS&& from) noexcept
    : MSG_ReqTriggerQTESkill_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqTriggerQTESkill_CS& operator=(const MSG_ReqTriggerQTESkill_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqTriggerQTESkill_CS& operator=(MSG_ReqTriggerQTESkill_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqTriggerQTESkill_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqTriggerQTESkill_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqTriggerQTESkill_CS*>(
               &_MSG_ReqTriggerQTESkill_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MSG_ReqTriggerQTESkill_CS& a, MSG_ReqTriggerQTESkill_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqTriggerQTESkill_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqTriggerQTESkill_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqTriggerQTESkill_CS>(nullptr);
  }

  MSG_ReqTriggerQTESkill_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqTriggerQTESkill_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqTriggerQTESkill_CS& from);
  void MergeFrom(const MSG_ReqTriggerQTESkill_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqTriggerQTESkill_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_ReqTriggerQTESkill_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWarpposFieldNumber = 2,
    kBosstempidFieldNumber = 1,
    kDirFieldNumber = 3,
  };
  // optional .msg.Position warppos = 2;
  bool has_warppos() const;
  private:
  bool _internal_has_warppos() const;
  public:
  void clear_warppos();
  const ::msg::Position& warppos() const;
  ::msg::Position* release_warppos();
  ::msg::Position* mutable_warppos();
  void set_allocated_warppos(::msg::Position* warppos);
  private:
  const ::msg::Position& _internal_warppos() const;
  ::msg::Position* _internal_mutable_warppos();
  public:

  // optional uint64 bosstempid = 1;
  bool has_bosstempid() const;
  private:
  bool _internal_has_bosstempid() const;
  public:
  void clear_bosstempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 bosstempid() const;
  void set_bosstempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bosstempid() const;
  void _internal_set_bosstempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 dir = 3;
  bool has_dir() const;
  private:
  bool _internal_has_dir() const;
  public:
  void clear_dir();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir() const;
  void set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir() const;
  void _internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_ReqTriggerQTESkill_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::msg::Position* warppos_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bosstempid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetTriggerQTESkill_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_RetTriggerQTESkill_SC) */ {
 public:
  MSG_RetTriggerQTESkill_SC();
  virtual ~MSG_RetTriggerQTESkill_SC();

  MSG_RetTriggerQTESkill_SC(const MSG_RetTriggerQTESkill_SC& from);
  MSG_RetTriggerQTESkill_SC(MSG_RetTriggerQTESkill_SC&& from) noexcept
    : MSG_RetTriggerQTESkill_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetTriggerQTESkill_SC& operator=(const MSG_RetTriggerQTESkill_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetTriggerQTESkill_SC& operator=(MSG_RetTriggerQTESkill_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetTriggerQTESkill_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetTriggerQTESkill_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetTriggerQTESkill_SC*>(
               &_MSG_RetTriggerQTESkill_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MSG_RetTriggerQTESkill_SC& a, MSG_RetTriggerQTESkill_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetTriggerQTESkill_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetTriggerQTESkill_SC* New() const final {
    return CreateMaybeMessage<MSG_RetTriggerQTESkill_SC>(nullptr);
  }

  MSG_RetTriggerQTESkill_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetTriggerQTESkill_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetTriggerQTESkill_SC& from);
  void MergeFrom(const MSG_RetTriggerQTESkill_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetTriggerQTESkill_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_RetTriggerQTESkill_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrcodeFieldNumber = 1,
  };
  // optional uint32 errcode = 1;
  bool has_errcode() const;
  private:
  bool _internal_has_errcode() const;
  public:
  void clear_errcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode() const;
  void set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errcode() const;
  void _internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_RetTriggerQTESkill_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqDrinkBloodSkill_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_ReqDrinkBloodSkill_CS) */ {
 public:
  MSG_ReqDrinkBloodSkill_CS();
  virtual ~MSG_ReqDrinkBloodSkill_CS();

  MSG_ReqDrinkBloodSkill_CS(const MSG_ReqDrinkBloodSkill_CS& from);
  MSG_ReqDrinkBloodSkill_CS(MSG_ReqDrinkBloodSkill_CS&& from) noexcept
    : MSG_ReqDrinkBloodSkill_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqDrinkBloodSkill_CS& operator=(const MSG_ReqDrinkBloodSkill_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqDrinkBloodSkill_CS& operator=(MSG_ReqDrinkBloodSkill_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqDrinkBloodSkill_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqDrinkBloodSkill_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqDrinkBloodSkill_CS*>(
               &_MSG_ReqDrinkBloodSkill_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MSG_ReqDrinkBloodSkill_CS& a, MSG_ReqDrinkBloodSkill_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqDrinkBloodSkill_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqDrinkBloodSkill_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqDrinkBloodSkill_CS>(nullptr);
  }

  MSG_ReqDrinkBloodSkill_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqDrinkBloodSkill_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqDrinkBloodSkill_CS& from);
  void MergeFrom(const MSG_ReqDrinkBloodSkill_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqDrinkBloodSkill_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_ReqDrinkBloodSkill_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpctempidFieldNumber = 1,
  };
  // optional uint64 npctempid = 1;
  bool has_npctempid() const;
  private:
  bool _internal_has_npctempid() const;
  public:
  void clear_npctempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 npctempid() const;
  void set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_npctempid() const;
  void _internal_set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_ReqDrinkBloodSkill_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 npctempid_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetDrinkBloodSkill_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_RetDrinkBloodSkill_SC) */ {
 public:
  MSG_RetDrinkBloodSkill_SC();
  virtual ~MSG_RetDrinkBloodSkill_SC();

  MSG_RetDrinkBloodSkill_SC(const MSG_RetDrinkBloodSkill_SC& from);
  MSG_RetDrinkBloodSkill_SC(MSG_RetDrinkBloodSkill_SC&& from) noexcept
    : MSG_RetDrinkBloodSkill_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetDrinkBloodSkill_SC& operator=(const MSG_RetDrinkBloodSkill_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetDrinkBloodSkill_SC& operator=(MSG_RetDrinkBloodSkill_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetDrinkBloodSkill_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetDrinkBloodSkill_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetDrinkBloodSkill_SC*>(
               &_MSG_RetDrinkBloodSkill_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(MSG_RetDrinkBloodSkill_SC& a, MSG_RetDrinkBloodSkill_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetDrinkBloodSkill_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetDrinkBloodSkill_SC* New() const final {
    return CreateMaybeMessage<MSG_RetDrinkBloodSkill_SC>(nullptr);
  }

  MSG_RetDrinkBloodSkill_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetDrinkBloodSkill_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetDrinkBloodSkill_SC& from);
  void MergeFrom(const MSG_RetDrinkBloodSkill_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetDrinkBloodSkill_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_RetDrinkBloodSkill_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrcodeFieldNumber = 1,
  };
  // optional uint32 errcode = 1 [default = 1];
  bool has_errcode() const;
  private:
  bool _internal_has_errcode() const;
  public:
  void clear_errcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode() const;
  void set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errcode() const;
  void _internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_RetDrinkBloodSkill_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_UserSkillRelive_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:magic.MSG_Ret_UserSkillRelive_SC) */ {
 public:
  MSG_Ret_UserSkillRelive_SC();
  virtual ~MSG_Ret_UserSkillRelive_SC();

  MSG_Ret_UserSkillRelive_SC(const MSG_Ret_UserSkillRelive_SC& from);
  MSG_Ret_UserSkillRelive_SC(MSG_Ret_UserSkillRelive_SC&& from) noexcept
    : MSG_Ret_UserSkillRelive_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_UserSkillRelive_SC& operator=(const MSG_Ret_UserSkillRelive_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_UserSkillRelive_SC& operator=(MSG_Ret_UserSkillRelive_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_UserSkillRelive_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_UserSkillRelive_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_UserSkillRelive_SC*>(
               &_MSG_Ret_UserSkillRelive_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(MSG_Ret_UserSkillRelive_SC& a, MSG_Ret_UserSkillRelive_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_UserSkillRelive_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_UserSkillRelive_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_UserSkillRelive_SC>(nullptr);
  }

  MSG_Ret_UserSkillRelive_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_UserSkillRelive_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_UserSkillRelive_SC& from);
  void MergeFrom(const MSG_Ret_UserSkillRelive_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_UserSkillRelive_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "magic.MSG_Ret_UserSkillRelive_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_magic_5fmsg_2eproto);
    return ::descriptor_table_magic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromNameFieldNumber = 1,
    kReliveTypeFieldNumber = 2,
    kRelivetimeFieldNumber = 3,
  };
  // optional string from_name = 1;
  bool has_from_name() const;
  private:
  bool _internal_has_from_name() const;
  public:
  void clear_from_name();
  const std::string& from_name() const;
  void set_from_name(const std::string& value);
  void set_from_name(std::string&& value);
  void set_from_name(const char* value);
  void set_from_name(const char* value, size_t size);
  std::string* mutable_from_name();
  std::string* release_from_name();
  void set_allocated_from_name(std::string* from_name);
  private:
  const std::string& _internal_from_name() const;
  void _internal_set_from_name(const std::string& value);
  std::string* _internal_mutable_from_name();
  public:

  // optional uint32 relive_type = 2;
  bool has_relive_type() const;
  private:
  bool _internal_has_relive_type() const;
  public:
  void clear_relive_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 relive_type() const;
  void set_relive_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_relive_type() const;
  void _internal_set_relive_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 relivetime = 3;
  bool has_relivetime() const;
  private:
  bool _internal_has_relivetime() const;
  public:
  void clear_relivetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 relivetime() const;
  void set_relivetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_relivetime() const;
  void _internal_set_relivetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:magic.MSG_Ret_UserSkillRelive_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr from_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 relive_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 relivetime_;
  friend struct ::TableStruct_magic_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SkillData

// optional uint32 skillid = 1;
inline bool SkillData::_internal_has_skillid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SkillData::has_skillid() const {
  return _internal_has_skillid();
}
inline void SkillData::clear_skillid() {
  skillid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::_internal_skillid() const {
  return skillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::skillid() const {
  // @@protoc_insertion_point(field_get:magic.SkillData.skillid)
  return _internal_skillid();
}
inline void SkillData::_internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  skillid_ = value;
}
inline void SkillData::set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillid(value);
  // @@protoc_insertion_point(field_set:magic.SkillData.skillid)
}

// optional uint32 level = 2;
inline bool SkillData::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SkillData::has_level() const {
  return _internal_has_level();
}
inline void SkillData::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::level() const {
  // @@protoc_insertion_point(field_get:magic.SkillData.level)
  return _internal_level();
}
inline void SkillData::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  level_ = value;
}
inline void SkillData::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:magic.SkillData.level)
}

// optional uint64 lastusetime = 3;
inline bool SkillData::_internal_has_lastusetime() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SkillData::has_lastusetime() const {
  return _internal_has_lastusetime();
}
inline void SkillData::clear_lastusetime() {
  lastusetime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SkillData::_internal_lastusetime() const {
  return lastusetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SkillData::lastusetime() const {
  // @@protoc_insertion_point(field_get:magic.SkillData.lastusetime)
  return _internal_lastusetime();
}
inline void SkillData::_internal_set_lastusetime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  lastusetime_ = value;
}
inline void SkillData::set_lastusetime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lastusetime(value);
  // @@protoc_insertion_point(field_set:magic.SkillData.lastusetime)
}

// optional uint32 onoff = 4;
inline bool SkillData::_internal_has_onoff() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool SkillData::has_onoff() const {
  return _internal_has_onoff();
}
inline void SkillData::clear_onoff() {
  onoff_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::_internal_onoff() const {
  return onoff_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::onoff() const {
  // @@protoc_insertion_point(field_get:magic.SkillData.onoff)
  return _internal_onoff();
}
inline void SkillData::_internal_set_onoff(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  onoff_ = value;
}
inline void SkillData::set_onoff(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_onoff(value);
  // @@protoc_insertion_point(field_set:magic.SkillData.onoff)
}

// optional uint64 lastupdatetime = 5;
inline bool SkillData::_internal_has_lastupdatetime() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SkillData::has_lastupdatetime() const {
  return _internal_has_lastupdatetime();
}
inline void SkillData::clear_lastupdatetime() {
  lastupdatetime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SkillData::_internal_lastupdatetime() const {
  return lastupdatetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SkillData::lastupdatetime() const {
  // @@protoc_insertion_point(field_get:magic.SkillData.lastupdatetime)
  return _internal_lastupdatetime();
}
inline void SkillData::_internal_set_lastupdatetime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  lastupdatetime_ = value;
}
inline void SkillData::set_lastupdatetime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lastupdatetime(value);
  // @@protoc_insertion_point(field_set:magic.SkillData.lastupdatetime)
}

// optional uint32 overlaytimes = 6;
inline bool SkillData::_internal_has_overlaytimes() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool SkillData::has_overlaytimes() const {
  return _internal_has_overlaytimes();
}
inline void SkillData::clear_overlaytimes() {
  overlaytimes_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::_internal_overlaytimes() const {
  return overlaytimes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::overlaytimes() const {
  // @@protoc_insertion_point(field_get:magic.SkillData.overlaytimes)
  return _internal_overlaytimes();
}
inline void SkillData::_internal_set_overlaytimes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  overlaytimes_ = value;
}
inline void SkillData::set_overlaytimes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_overlaytimes(value);
  // @@protoc_insertion_point(field_set:magic.SkillData.overlaytimes)
}

// optional uint32 active_stages = 7;
inline bool SkillData::_internal_has_active_stages() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool SkillData::has_active_stages() const {
  return _internal_has_active_stages();
}
inline void SkillData::clear_active_stages() {
  active_stages_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::_internal_active_stages() const {
  return active_stages_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::active_stages() const {
  // @@protoc_insertion_point(field_get:magic.SkillData.active_stages)
  return _internal_active_stages();
}
inline void SkillData::_internal_set_active_stages(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  active_stages_ = value;
}
inline void SkillData::set_active_stages(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_active_stages(value);
  // @@protoc_insertion_point(field_set:magic.SkillData.active_stages)
}

// optional uint32 maxmultitimes = 8;
inline bool SkillData::_internal_has_maxmultitimes() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool SkillData::has_maxmultitimes() const {
  return _internal_has_maxmultitimes();
}
inline void SkillData::clear_maxmultitimes() {
  maxmultitimes_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::_internal_maxmultitimes() const {
  return maxmultitimes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::maxmultitimes() const {
  // @@protoc_insertion_point(field_get:magic.SkillData.maxmultitimes)
  return _internal_maxmultitimes();
}
inline void SkillData::_internal_set_maxmultitimes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  maxmultitimes_ = value;
}
inline void SkillData::set_maxmultitimes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxmultitimes(value);
  // @@protoc_insertion_point(field_set:magic.SkillData.maxmultitimes)
}

// optional uint32 skillcd = 9;
inline bool SkillData::_internal_has_skillcd() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool SkillData::has_skillcd() const {
  return _internal_has_skillcd();
}
inline void SkillData::clear_skillcd() {
  skillcd_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::_internal_skillcd() const {
  return skillcd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SkillData::skillcd() const {
  // @@protoc_insertion_point(field_get:magic.SkillData.skillcd)
  return _internal_skillcd();
}
inline void SkillData::_internal_set_skillcd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  skillcd_ = value;
}
inline void SkillData::set_skillcd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillcd(value);
  // @@protoc_insertion_point(field_set:magic.SkillData.skillcd)
}

// -------------------------------------------------------------------

// ExtSkillData

// optional uint32 id = 1;
inline bool ExtSkillData::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ExtSkillData::has_id() const {
  return _internal_has_id();
}
inline void ExtSkillData::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ExtSkillData::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ExtSkillData::id() const {
  // @@protoc_insertion_point(field_get:magic.ExtSkillData.id)
  return _internal_id();
}
inline void ExtSkillData::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void ExtSkillData::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:magic.ExtSkillData.id)
}

// optional uint32 level = 2;
inline bool ExtSkillData::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ExtSkillData::has_level() const {
  return _internal_has_level();
}
inline void ExtSkillData::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ExtSkillData::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ExtSkillData::level() const {
  // @@protoc_insertion_point(field_get:magic.ExtSkillData.level)
  return _internal_level();
}
inline void ExtSkillData::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  level_ = value;
}
inline void ExtSkillData::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:magic.ExtSkillData.level)
}

// optional uint32 masterskill = 3;
inline bool ExtSkillData::_internal_has_masterskill() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ExtSkillData::has_masterskill() const {
  return _internal_has_masterskill();
}
inline void ExtSkillData::clear_masterskill() {
  masterskill_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ExtSkillData::_internal_masterskill() const {
  return masterskill_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ExtSkillData::masterskill() const {
  // @@protoc_insertion_point(field_get:magic.ExtSkillData.masterskill)
  return _internal_masterskill();
}
inline void ExtSkillData::_internal_set_masterskill(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  masterskill_ = value;
}
inline void ExtSkillData::set_masterskill(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_masterskill(value);
  // @@protoc_insertion_point(field_set:magic.ExtSkillData.masterskill)
}

// -------------------------------------------------------------------

// MSG_Req_MagicAttack_CS

// optional .msg.EntryIDType target = 1;
inline bool MSG_Req_MagicAttack_CS::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || target_ != nullptr);
  return value;
}
inline bool MSG_Req_MagicAttack_CS::has_target() const {
  return _internal_has_target();
}
inline const ::msg::EntryIDType& MSG_Req_MagicAttack_CS::_internal_target() const {
  const ::msg::EntryIDType* p = target_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Req_MagicAttack_CS::target() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_MagicAttack_CS.target)
  return _internal_target();
}
inline ::msg::EntryIDType* MSG_Req_MagicAttack_CS::release_target() {
  // @@protoc_insertion_point(field_release:magic.MSG_Req_MagicAttack_CS.target)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = target_;
  target_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Req_MagicAttack_CS::_internal_mutable_target() {
  _has_bits_[0] |= 0x00000001u;
  if (target_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    target_ = p;
  }
  return target_;
}
inline ::msg::EntryIDType* MSG_Req_MagicAttack_CS::mutable_target() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Req_MagicAttack_CS.target)
  return _internal_mutable_target();
}
inline void MSG_Req_MagicAttack_CS::set_allocated_target(::msg::EntryIDType* target) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_);
  }
  if (target) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Req_MagicAttack_CS.target)
}

// optional uint32 magictype = 2;
inline bool MSG_Req_MagicAttack_CS::_internal_has_magictype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_MagicAttack_CS::has_magictype() const {
  return _internal_has_magictype();
}
inline void MSG_Req_MagicAttack_CS::clear_magictype() {
  magictype_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_MagicAttack_CS::_internal_magictype() const {
  return magictype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_MagicAttack_CS::magictype() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_MagicAttack_CS.magictype)
  return _internal_magictype();
}
inline void MSG_Req_MagicAttack_CS::_internal_set_magictype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  magictype_ = value;
}
inline void MSG_Req_MagicAttack_CS::set_magictype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_magictype(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_MagicAttack_CS.magictype)
}

// optional float desx = 3;
inline bool MSG_Req_MagicAttack_CS::_internal_has_desx() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Req_MagicAttack_CS::has_desx() const {
  return _internal_has_desx();
}
inline void MSG_Req_MagicAttack_CS::clear_desx() {
  desx_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float MSG_Req_MagicAttack_CS::_internal_desx() const {
  return desx_;
}
inline float MSG_Req_MagicAttack_CS::desx() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_MagicAttack_CS.desx)
  return _internal_desx();
}
inline void MSG_Req_MagicAttack_CS::_internal_set_desx(float value) {
  _has_bits_[0] |= 0x00000004u;
  desx_ = value;
}
inline void MSG_Req_MagicAttack_CS::set_desx(float value) {
  _internal_set_desx(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_MagicAttack_CS.desx)
}

// optional float desy = 4;
inline bool MSG_Req_MagicAttack_CS::_internal_has_desy() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Req_MagicAttack_CS::has_desy() const {
  return _internal_has_desy();
}
inline void MSG_Req_MagicAttack_CS::clear_desy() {
  desy_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float MSG_Req_MagicAttack_CS::_internal_desy() const {
  return desy_;
}
inline float MSG_Req_MagicAttack_CS::desy() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_MagicAttack_CS.desy)
  return _internal_desy();
}
inline void MSG_Req_MagicAttack_CS::_internal_set_desy(float value) {
  _has_bits_[0] |= 0x00000008u;
  desy_ = value;
}
inline void MSG_Req_MagicAttack_CS::set_desy(float value) {
  _internal_set_desy(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_MagicAttack_CS.desy)
}

// optional uint32 attdir = 5;
inline bool MSG_Req_MagicAttack_CS::_internal_has_attdir() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Req_MagicAttack_CS::has_attdir() const {
  return _internal_has_attdir();
}
inline void MSG_Req_MagicAttack_CS::clear_attdir() {
  attdir_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_MagicAttack_CS::_internal_attdir() const {
  return attdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_MagicAttack_CS::attdir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_MagicAttack_CS.attdir)
  return _internal_attdir();
}
inline void MSG_Req_MagicAttack_CS::_internal_set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  attdir_ = value;
}
inline void MSG_Req_MagicAttack_CS::set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attdir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_MagicAttack_CS.attdir)
}

// optional uint32 userdir = 6;
inline bool MSG_Req_MagicAttack_CS::_internal_has_userdir() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Req_MagicAttack_CS::has_userdir() const {
  return _internal_has_userdir();
}
inline void MSG_Req_MagicAttack_CS::clear_userdir() {
  userdir_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_MagicAttack_CS::_internal_userdir() const {
  return userdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_MagicAttack_CS::userdir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_MagicAttack_CS.userdir)
  return _internal_userdir();
}
inline void MSG_Req_MagicAttack_CS::_internal_set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  userdir_ = value;
}
inline void MSG_Req_MagicAttack_CS::set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userdir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_MagicAttack_CS.userdir)
}

// -------------------------------------------------------------------

// MSG_Ret_StartMagicAttack_SC

// optional .msg.EntryIDType att = 1;
inline bool MSG_Ret_StartMagicAttack_SC::_internal_has_att() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || att_ != nullptr);
  return value;
}
inline bool MSG_Ret_StartMagicAttack_SC::has_att() const {
  return _internal_has_att();
}
inline const ::msg::EntryIDType& MSG_Ret_StartMagicAttack_SC::_internal_att() const {
  const ::msg::EntryIDType* p = att_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Ret_StartMagicAttack_SC::att() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_StartMagicAttack_SC.att)
  return _internal_att();
}
inline ::msg::EntryIDType* MSG_Ret_StartMagicAttack_SC::release_att() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_StartMagicAttack_SC.att)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = att_;
  att_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Ret_StartMagicAttack_SC::_internal_mutable_att() {
  _has_bits_[0] |= 0x00000001u;
  if (att_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    att_ = p;
  }
  return att_;
}
inline ::msg::EntryIDType* MSG_Ret_StartMagicAttack_SC::mutable_att() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_StartMagicAttack_SC.att)
  return _internal_mutable_att();
}
inline void MSG_Ret_StartMagicAttack_SC::set_allocated_att(::msg::EntryIDType* att) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(att_);
  }
  if (att) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      att = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, att, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  att_ = att;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_StartMagicAttack_SC.att)
}

// optional float desx = 2;
inline bool MSG_Ret_StartMagicAttack_SC::_internal_has_desx() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_StartMagicAttack_SC::has_desx() const {
  return _internal_has_desx();
}
inline void MSG_Ret_StartMagicAttack_SC::clear_desx() {
  desx_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float MSG_Ret_StartMagicAttack_SC::_internal_desx() const {
  return desx_;
}
inline float MSG_Ret_StartMagicAttack_SC::desx() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_StartMagicAttack_SC.desx)
  return _internal_desx();
}
inline void MSG_Ret_StartMagicAttack_SC::_internal_set_desx(float value) {
  _has_bits_[0] |= 0x00000002u;
  desx_ = value;
}
inline void MSG_Ret_StartMagicAttack_SC::set_desx(float value) {
  _internal_set_desx(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_StartMagicAttack_SC.desx)
}

// optional float desy = 3;
inline bool MSG_Ret_StartMagicAttack_SC::_internal_has_desy() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_StartMagicAttack_SC::has_desy() const {
  return _internal_has_desy();
}
inline void MSG_Ret_StartMagicAttack_SC::clear_desy() {
  desy_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float MSG_Ret_StartMagicAttack_SC::_internal_desy() const {
  return desy_;
}
inline float MSG_Ret_StartMagicAttack_SC::desy() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_StartMagicAttack_SC.desy)
  return _internal_desy();
}
inline void MSG_Ret_StartMagicAttack_SC::_internal_set_desy(float value) {
  _has_bits_[0] |= 0x00000004u;
  desy_ = value;
}
inline void MSG_Ret_StartMagicAttack_SC::set_desy(float value) {
  _internal_set_desy(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_StartMagicAttack_SC.desy)
}

// optional uint32 attdir = 4;
inline bool MSG_Ret_StartMagicAttack_SC::_internal_has_attdir() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_StartMagicAttack_SC::has_attdir() const {
  return _internal_has_attdir();
}
inline void MSG_Ret_StartMagicAttack_SC::clear_attdir() {
  attdir_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_StartMagicAttack_SC::_internal_attdir() const {
  return attdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_StartMagicAttack_SC::attdir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_StartMagicAttack_SC.attdir)
  return _internal_attdir();
}
inline void MSG_Ret_StartMagicAttack_SC::_internal_set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  attdir_ = value;
}
inline void MSG_Ret_StartMagicAttack_SC::set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attdir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_StartMagicAttack_SC.attdir)
}

// optional uint32 userdir = 5;
inline bool MSG_Ret_StartMagicAttack_SC::_internal_has_userdir() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_StartMagicAttack_SC::has_userdir() const {
  return _internal_has_userdir();
}
inline void MSG_Ret_StartMagicAttack_SC::clear_userdir() {
  userdir_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_StartMagicAttack_SC::_internal_userdir() const {
  return userdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_StartMagicAttack_SC::userdir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_StartMagicAttack_SC.userdir)
  return _internal_userdir();
}
inline void MSG_Ret_StartMagicAttack_SC::_internal_set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  userdir_ = value;
}
inline void MSG_Ret_StartMagicAttack_SC::set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userdir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_StartMagicAttack_SC.userdir)
}

// optional uint32 skillid = 6;
inline bool MSG_Ret_StartMagicAttack_SC::_internal_has_skillid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Ret_StartMagicAttack_SC::has_skillid() const {
  return _internal_has_skillid();
}
inline void MSG_Ret_StartMagicAttack_SC::clear_skillid() {
  skillid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_StartMagicAttack_SC::_internal_skillid() const {
  return skillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_StartMagicAttack_SC::skillid() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_StartMagicAttack_SC.skillid)
  return _internal_skillid();
}
inline void MSG_Ret_StartMagicAttack_SC::_internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  skillid_ = value;
}
inline void MSG_Ret_StartMagicAttack_SC::set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillid(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_StartMagicAttack_SC.skillid)
}

// -------------------------------------------------------------------

// PKResult

// optional .msg.EntryIDType def = 1;
inline bool PKResult::_internal_has_def() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || def_ != nullptr);
  return value;
}
inline bool PKResult::has_def() const {
  return _internal_has_def();
}
inline const ::msg::EntryIDType& PKResult::_internal_def() const {
  const ::msg::EntryIDType* p = def_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& PKResult::def() const {
  // @@protoc_insertion_point(field_get:magic.PKResult.def)
  return _internal_def();
}
inline ::msg::EntryIDType* PKResult::release_def() {
  // @@protoc_insertion_point(field_release:magic.PKResult.def)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = def_;
  def_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* PKResult::_internal_mutable_def() {
  _has_bits_[0] |= 0x00000001u;
  if (def_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    def_ = p;
  }
  return def_;
}
inline ::msg::EntryIDType* PKResult::mutable_def() {
  // @@protoc_insertion_point(field_mutable:magic.PKResult.def)
  return _internal_mutable_def();
}
inline void PKResult::set_allocated_def(::msg::EntryIDType* def) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(def_);
  }
  if (def) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      def = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, def, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  def_ = def;
  // @@protoc_insertion_point(field_set_allocated:magic.PKResult.def)
}

// optional uint32 hp = 2;
inline bool PKResult::_internal_has_hp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PKResult::has_hp() const {
  return _internal_has_hp();
}
inline void PKResult::clear_hp() {
  hp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PKResult::_internal_hp() const {
  return hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PKResult::hp() const {
  // @@protoc_insertion_point(field_get:magic.PKResult.hp)
  return _internal_hp();
}
inline void PKResult::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hp_ = value;
}
inline void PKResult::set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:magic.PKResult.hp)
}

// optional int32 changehp = 3;
inline bool PKResult::_internal_has_changehp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PKResult::has_changehp() const {
  return _internal_has_changehp();
}
inline void PKResult::clear_changehp() {
  changehp_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PKResult::_internal_changehp() const {
  return changehp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PKResult::changehp() const {
  // @@protoc_insertion_point(field_get:magic.PKResult.changehp)
  return _internal_changehp();
}
inline void PKResult::_internal_set_changehp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  changehp_ = value;
}
inline void PKResult::set_changehp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_changehp(value);
  // @@protoc_insertion_point(field_set:magic.PKResult.changehp)
}

// repeated .magic.ATTACKRESULT attcode = 4;
inline int PKResult::_internal_attcode_size() const {
  return attcode_.size();
}
inline int PKResult::attcode_size() const {
  return _internal_attcode_size();
}
inline void PKResult::clear_attcode() {
  attcode_.Clear();
}
inline ::magic::ATTACKRESULT PKResult::_internal_attcode(int index) const {
  return static_cast< ::magic::ATTACKRESULT >(attcode_.Get(index));
}
inline ::magic::ATTACKRESULT PKResult::attcode(int index) const {
  // @@protoc_insertion_point(field_get:magic.PKResult.attcode)
  return _internal_attcode(index);
}
inline void PKResult::set_attcode(int index, ::magic::ATTACKRESULT value) {
  assert(::magic::ATTACKRESULT_IsValid(value));
  attcode_.Set(index, value);
  // @@protoc_insertion_point(field_set:magic.PKResult.attcode)
}
inline void PKResult::_internal_add_attcode(::magic::ATTACKRESULT value) {
  assert(::magic::ATTACKRESULT_IsValid(value));
  attcode_.Add(value);
}
inline void PKResult::add_attcode(::magic::ATTACKRESULT value) {
  // @@protoc_insertion_point(field_add:magic.PKResult.attcode)
  _internal_add_attcode(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
PKResult::attcode() const {
  // @@protoc_insertion_point(field_list:magic.PKResult.attcode)
  return attcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
PKResult::_internal_mutable_attcode() {
  return &attcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
PKResult::mutable_attcode() {
  // @@protoc_insertion_point(field_mutable_list:magic.PKResult.attcode)
  return _internal_mutable_attcode();
}

// -------------------------------------------------------------------

// MSG_Ret_MagicAttack_SC

// optional .msg.EntryIDType att = 1;
inline bool MSG_Ret_MagicAttack_SC::_internal_has_att() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || att_ != nullptr);
  return value;
}
inline bool MSG_Ret_MagicAttack_SC::has_att() const {
  return _internal_has_att();
}
inline const ::msg::EntryIDType& MSG_Ret_MagicAttack_SC::_internal_att() const {
  const ::msg::EntryIDType* p = att_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Ret_MagicAttack_SC::att() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MagicAttack_SC.att)
  return _internal_att();
}
inline ::msg::EntryIDType* MSG_Ret_MagicAttack_SC::release_att() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_MagicAttack_SC.att)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = att_;
  att_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Ret_MagicAttack_SC::_internal_mutable_att() {
  _has_bits_[0] |= 0x00000001u;
  if (att_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    att_ = p;
  }
  return att_;
}
inline ::msg::EntryIDType* MSG_Ret_MagicAttack_SC::mutable_att() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_MagicAttack_SC.att)
  return _internal_mutable_att();
}
inline void MSG_Ret_MagicAttack_SC::set_allocated_att(::msg::EntryIDType* att) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(att_);
  }
  if (att) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      att = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, att, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  att_ = att;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_MagicAttack_SC.att)
}

// optional .msg.EntryIDType def = 2;
inline bool MSG_Ret_MagicAttack_SC::_internal_has_def() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || def_ != nullptr);
  return value;
}
inline bool MSG_Ret_MagicAttack_SC::has_def() const {
  return _internal_has_def();
}
inline const ::msg::EntryIDType& MSG_Ret_MagicAttack_SC::_internal_def() const {
  const ::msg::EntryIDType* p = def_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Ret_MagicAttack_SC::def() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MagicAttack_SC.def)
  return _internal_def();
}
inline ::msg::EntryIDType* MSG_Ret_MagicAttack_SC::release_def() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_MagicAttack_SC.def)
  _has_bits_[0] &= ~0x00000002u;
  ::msg::EntryIDType* temp = def_;
  def_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Ret_MagicAttack_SC::_internal_mutable_def() {
  _has_bits_[0] |= 0x00000002u;
  if (def_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    def_ = p;
  }
  return def_;
}
inline ::msg::EntryIDType* MSG_Ret_MagicAttack_SC::mutable_def() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_MagicAttack_SC.def)
  return _internal_mutable_def();
}
inline void MSG_Ret_MagicAttack_SC::set_allocated_def(::msg::EntryIDType* def) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(def_);
  }
  if (def) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      def = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, def, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  def_ = def;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_MagicAttack_SC.def)
}

// optional float desx = 3;
inline bool MSG_Ret_MagicAttack_SC::_internal_has_desx() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_MagicAttack_SC::has_desx() const {
  return _internal_has_desx();
}
inline void MSG_Ret_MagicAttack_SC::clear_desx() {
  desx_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float MSG_Ret_MagicAttack_SC::_internal_desx() const {
  return desx_;
}
inline float MSG_Ret_MagicAttack_SC::desx() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MagicAttack_SC.desx)
  return _internal_desx();
}
inline void MSG_Ret_MagicAttack_SC::_internal_set_desx(float value) {
  _has_bits_[0] |= 0x00000004u;
  desx_ = value;
}
inline void MSG_Ret_MagicAttack_SC::set_desx(float value) {
  _internal_set_desx(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MagicAttack_SC.desx)
}

// optional float desy = 4;
inline bool MSG_Ret_MagicAttack_SC::_internal_has_desy() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_MagicAttack_SC::has_desy() const {
  return _internal_has_desy();
}
inline void MSG_Ret_MagicAttack_SC::clear_desy() {
  desy_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float MSG_Ret_MagicAttack_SC::_internal_desy() const {
  return desy_;
}
inline float MSG_Ret_MagicAttack_SC::desy() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MagicAttack_SC.desy)
  return _internal_desy();
}
inline void MSG_Ret_MagicAttack_SC::_internal_set_desy(float value) {
  _has_bits_[0] |= 0x00000008u;
  desy_ = value;
}
inline void MSG_Ret_MagicAttack_SC::set_desy(float value) {
  _internal_set_desy(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MagicAttack_SC.desy)
}

// optional uint32 attdir = 5;
inline bool MSG_Ret_MagicAttack_SC::_internal_has_attdir() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_MagicAttack_SC::has_attdir() const {
  return _internal_has_attdir();
}
inline void MSG_Ret_MagicAttack_SC::clear_attdir() {
  attdir_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MagicAttack_SC::_internal_attdir() const {
  return attdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MagicAttack_SC::attdir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MagicAttack_SC.attdir)
  return _internal_attdir();
}
inline void MSG_Ret_MagicAttack_SC::_internal_set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  attdir_ = value;
}
inline void MSG_Ret_MagicAttack_SC::set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attdir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MagicAttack_SC.attdir)
}

// optional uint32 userdir = 6;
inline bool MSG_Ret_MagicAttack_SC::_internal_has_userdir() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Ret_MagicAttack_SC::has_userdir() const {
  return _internal_has_userdir();
}
inline void MSG_Ret_MagicAttack_SC::clear_userdir() {
  userdir_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MagicAttack_SC::_internal_userdir() const {
  return userdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MagicAttack_SC::userdir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MagicAttack_SC.userdir)
  return _internal_userdir();
}
inline void MSG_Ret_MagicAttack_SC::_internal_set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  userdir_ = value;
}
inline void MSG_Ret_MagicAttack_SC::set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userdir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MagicAttack_SC.userdir)
}

// optional uint64 skillstage = 7;
inline bool MSG_Ret_MagicAttack_SC::_internal_has_skillstage() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Ret_MagicAttack_SC::has_skillstage() const {
  return _internal_has_skillstage();
}
inline void MSG_Ret_MagicAttack_SC::clear_skillstage() {
  skillstage_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MagicAttack_SC::_internal_skillstage() const {
  return skillstage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MagicAttack_SC::skillstage() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MagicAttack_SC.skillstage)
  return _internal_skillstage();
}
inline void MSG_Ret_MagicAttack_SC::_internal_set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  skillstage_ = value;
}
inline void MSG_Ret_MagicAttack_SC::set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_skillstage(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MagicAttack_SC.skillstage)
}

// repeated .magic.PKResult pklist = 8;
inline int MSG_Ret_MagicAttack_SC::_internal_pklist_size() const {
  return pklist_.size();
}
inline int MSG_Ret_MagicAttack_SC::pklist_size() const {
  return _internal_pklist_size();
}
inline void MSG_Ret_MagicAttack_SC::clear_pklist() {
  pklist_.Clear();
}
inline ::magic::PKResult* MSG_Ret_MagicAttack_SC::mutable_pklist(int index) {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_MagicAttack_SC.pklist)
  return pklist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::PKResult >*
MSG_Ret_MagicAttack_SC::mutable_pklist() {
  // @@protoc_insertion_point(field_mutable_list:magic.MSG_Ret_MagicAttack_SC.pklist)
  return &pklist_;
}
inline const ::magic::PKResult& MSG_Ret_MagicAttack_SC::_internal_pklist(int index) const {
  return pklist_.Get(index);
}
inline const ::magic::PKResult& MSG_Ret_MagicAttack_SC::pklist(int index) const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MagicAttack_SC.pklist)
  return _internal_pklist(index);
}
inline ::magic::PKResult* MSG_Ret_MagicAttack_SC::_internal_add_pklist() {
  return pklist_.Add();
}
inline ::magic::PKResult* MSG_Ret_MagicAttack_SC::add_pklist() {
  // @@protoc_insertion_point(field_add:magic.MSG_Ret_MagicAttack_SC.pklist)
  return _internal_add_pklist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::PKResult >&
MSG_Ret_MagicAttack_SC::pklist() const {
  // @@protoc_insertion_point(field_list:magic.MSG_Ret_MagicAttack_SC.pklist)
  return pklist_;
}

// -------------------------------------------------------------------

// MSG_Ret_HpMpPop_SC

// optional .msg.EntryIDType target = 1;
inline bool MSG_Ret_HpMpPop_SC::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || target_ != nullptr);
  return value;
}
inline bool MSG_Ret_HpMpPop_SC::has_target() const {
  return _internal_has_target();
}
inline const ::msg::EntryIDType& MSG_Ret_HpMpPop_SC::_internal_target() const {
  const ::msg::EntryIDType* p = target_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Ret_HpMpPop_SC::target() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_HpMpPop_SC.target)
  return _internal_target();
}
inline ::msg::EntryIDType* MSG_Ret_HpMpPop_SC::release_target() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_HpMpPop_SC.target)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = target_;
  target_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Ret_HpMpPop_SC::_internal_mutable_target() {
  _has_bits_[0] |= 0x00000001u;
  if (target_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    target_ = p;
  }
  return target_;
}
inline ::msg::EntryIDType* MSG_Ret_HpMpPop_SC::mutable_target() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_HpMpPop_SC.target)
  return _internal_mutable_target();
}
inline void MSG_Ret_HpMpPop_SC::set_allocated_target(::msg::EntryIDType* target) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_);
  }
  if (target) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_HpMpPop_SC.target)
}

// optional uint32 hp = 2;
inline bool MSG_Ret_HpMpPop_SC::_internal_has_hp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_HpMpPop_SC::has_hp() const {
  return _internal_has_hp();
}
inline void MSG_Ret_HpMpPop_SC::clear_hp() {
  hp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HpMpPop_SC::_internal_hp() const {
  return hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HpMpPop_SC::hp() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_HpMpPop_SC.hp)
  return _internal_hp();
}
inline void MSG_Ret_HpMpPop_SC::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hp_ = value;
}
inline void MSG_Ret_HpMpPop_SC::set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_HpMpPop_SC.hp)
}

// optional int32 hp_change = 3;
inline bool MSG_Ret_HpMpPop_SC::_internal_has_hp_change() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_HpMpPop_SC::has_hp_change() const {
  return _internal_has_hp_change();
}
inline void MSG_Ret_HpMpPop_SC::clear_hp_change() {
  hp_change_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG_Ret_HpMpPop_SC::_internal_hp_change() const {
  return hp_change_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG_Ret_HpMpPop_SC::hp_change() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_HpMpPop_SC.hp_change)
  return _internal_hp_change();
}
inline void MSG_Ret_HpMpPop_SC::_internal_set_hp_change(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  hp_change_ = value;
}
inline void MSG_Ret_HpMpPop_SC::set_hp_change(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hp_change(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_HpMpPop_SC.hp_change)
}

// optional uint32 mp = 4;
inline bool MSG_Ret_HpMpPop_SC::_internal_has_mp() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_HpMpPop_SC::has_mp() const {
  return _internal_has_mp();
}
inline void MSG_Ret_HpMpPop_SC::clear_mp() {
  mp_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HpMpPop_SC::_internal_mp() const {
  return mp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HpMpPop_SC::mp() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_HpMpPop_SC.mp)
  return _internal_mp();
}
inline void MSG_Ret_HpMpPop_SC::_internal_set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  mp_ = value;
}
inline void MSG_Ret_HpMpPop_SC::set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mp(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_HpMpPop_SC.mp)
}

// optional uint32 mp_change = 5;
inline bool MSG_Ret_HpMpPop_SC::_internal_has_mp_change() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Ret_HpMpPop_SC::has_mp_change() const {
  return _internal_has_mp_change();
}
inline void MSG_Ret_HpMpPop_SC::clear_mp_change() {
  mp_change_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HpMpPop_SC::_internal_mp_change() const {
  return mp_change_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HpMpPop_SC::mp_change() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_HpMpPop_SC.mp_change)
  return _internal_mp_change();
}
inline void MSG_Ret_HpMpPop_SC::_internal_set_mp_change(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  mp_change_ = value;
}
inline void MSG_Ret_HpMpPop_SC::set_mp_change(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mp_change(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_HpMpPop_SC.mp_change)
}

// optional bool force = 6;
inline bool MSG_Ret_HpMpPop_SC::_internal_has_force() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool MSG_Ret_HpMpPop_SC::has_force() const {
  return _internal_has_force();
}
inline void MSG_Ret_HpMpPop_SC::clear_force() {
  force_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool MSG_Ret_HpMpPop_SC::_internal_force() const {
  return force_;
}
inline bool MSG_Ret_HpMpPop_SC::force() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_HpMpPop_SC.force)
  return _internal_force();
}
inline void MSG_Ret_HpMpPop_SC::_internal_set_force(bool value) {
  _has_bits_[0] |= 0x00000100u;
  force_ = value;
}
inline void MSG_Ret_HpMpPop_SC::set_force(bool value) {
  _internal_set_force(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_HpMpPop_SC.force)
}

// optional uint64 skillstage = 7;
inline bool MSG_Ret_HpMpPop_SC::_internal_has_skillstage() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Ret_HpMpPop_SC::has_skillstage() const {
  return _internal_has_skillstage();
}
inline void MSG_Ret_HpMpPop_SC::clear_skillstage() {
  skillstage_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_HpMpPop_SC::_internal_skillstage() const {
  return skillstage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_HpMpPop_SC::skillstage() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_HpMpPop_SC.skillstage)
  return _internal_skillstage();
}
inline void MSG_Ret_HpMpPop_SC::_internal_set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  skillstage_ = value;
}
inline void MSG_Ret_HpMpPop_SC::set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_skillstage(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_HpMpPop_SC.skillstage)
}

// optional uint64 state_id = 8;
inline bool MSG_Ret_HpMpPop_SC::_internal_has_state_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MSG_Ret_HpMpPop_SC::has_state_id() const {
  return _internal_has_state_id();
}
inline void MSG_Ret_HpMpPop_SC::clear_state_id() {
  state_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_HpMpPop_SC::_internal_state_id() const {
  return state_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_HpMpPop_SC::state_id() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_HpMpPop_SC.state_id)
  return _internal_state_id();
}
inline void MSG_Ret_HpMpPop_SC::_internal_set_state_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  state_id_ = value;
}
inline void MSG_Ret_HpMpPop_SC::set_state_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_state_id(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_HpMpPop_SC.state_id)
}

// optional .msg.EntryIDType att = 9;
inline bool MSG_Ret_HpMpPop_SC::_internal_has_att() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || att_ != nullptr);
  return value;
}
inline bool MSG_Ret_HpMpPop_SC::has_att() const {
  return _internal_has_att();
}
inline const ::msg::EntryIDType& MSG_Ret_HpMpPop_SC::_internal_att() const {
  const ::msg::EntryIDType* p = att_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Ret_HpMpPop_SC::att() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_HpMpPop_SC.att)
  return _internal_att();
}
inline ::msg::EntryIDType* MSG_Ret_HpMpPop_SC::release_att() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_HpMpPop_SC.att)
  _has_bits_[0] &= ~0x00000002u;
  ::msg::EntryIDType* temp = att_;
  att_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Ret_HpMpPop_SC::_internal_mutable_att() {
  _has_bits_[0] |= 0x00000002u;
  if (att_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    att_ = p;
  }
  return att_;
}
inline ::msg::EntryIDType* MSG_Ret_HpMpPop_SC::mutable_att() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_HpMpPop_SC.att)
  return _internal_mutable_att();
}
inline void MSG_Ret_HpMpPop_SC::set_allocated_att(::msg::EntryIDType* att) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(att_);
  }
  if (att) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      att = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, att, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  att_ = att;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_HpMpPop_SC.att)
}

// -------------------------------------------------------------------

// MSG_Req_SyncSkillStage_CS

// optional .msg.EntryIDType target = 1;
inline bool MSG_Req_SyncSkillStage_CS::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || target_ != nullptr);
  return value;
}
inline bool MSG_Req_SyncSkillStage_CS::has_target() const {
  return _internal_has_target();
}
inline const ::msg::EntryIDType& MSG_Req_SyncSkillStage_CS::_internal_target() const {
  const ::msg::EntryIDType* p = target_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Req_SyncSkillStage_CS::target() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_SyncSkillStage_CS.target)
  return _internal_target();
}
inline ::msg::EntryIDType* MSG_Req_SyncSkillStage_CS::release_target() {
  // @@protoc_insertion_point(field_release:magic.MSG_Req_SyncSkillStage_CS.target)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = target_;
  target_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Req_SyncSkillStage_CS::_internal_mutable_target() {
  _has_bits_[0] |= 0x00000001u;
  if (target_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    target_ = p;
  }
  return target_;
}
inline ::msg::EntryIDType* MSG_Req_SyncSkillStage_CS::mutable_target() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Req_SyncSkillStage_CS.target)
  return _internal_mutable_target();
}
inline void MSG_Req_SyncSkillStage_CS::set_allocated_target(::msg::EntryIDType* target) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_);
  }
  if (target) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      target = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Req_SyncSkillStage_CS.target)
}

// optional uint64 skillstage = 2;
inline bool MSG_Req_SyncSkillStage_CS::_internal_has_skillstage() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_SyncSkillStage_CS::has_skillstage() const {
  return _internal_has_skillstage();
}
inline void MSG_Req_SyncSkillStage_CS::clear_skillstage() {
  skillstage_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_SyncSkillStage_CS::_internal_skillstage() const {
  return skillstage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_SyncSkillStage_CS::skillstage() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_SyncSkillStage_CS.skillstage)
  return _internal_skillstage();
}
inline void MSG_Req_SyncSkillStage_CS::_internal_set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  skillstage_ = value;
}
inline void MSG_Req_SyncSkillStage_CS::set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_skillstage(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_SyncSkillStage_CS.skillstage)
}

// optional float desx = 3;
inline bool MSG_Req_SyncSkillStage_CS::_internal_has_desx() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Req_SyncSkillStage_CS::has_desx() const {
  return _internal_has_desx();
}
inline void MSG_Req_SyncSkillStage_CS::clear_desx() {
  desx_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float MSG_Req_SyncSkillStage_CS::_internal_desx() const {
  return desx_;
}
inline float MSG_Req_SyncSkillStage_CS::desx() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_SyncSkillStage_CS.desx)
  return _internal_desx();
}
inline void MSG_Req_SyncSkillStage_CS::_internal_set_desx(float value) {
  _has_bits_[0] |= 0x00000004u;
  desx_ = value;
}
inline void MSG_Req_SyncSkillStage_CS::set_desx(float value) {
  _internal_set_desx(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_SyncSkillStage_CS.desx)
}

// optional float desy = 4;
inline bool MSG_Req_SyncSkillStage_CS::_internal_has_desy() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Req_SyncSkillStage_CS::has_desy() const {
  return _internal_has_desy();
}
inline void MSG_Req_SyncSkillStage_CS::clear_desy() {
  desy_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float MSG_Req_SyncSkillStage_CS::_internal_desy() const {
  return desy_;
}
inline float MSG_Req_SyncSkillStage_CS::desy() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_SyncSkillStage_CS.desy)
  return _internal_desy();
}
inline void MSG_Req_SyncSkillStage_CS::_internal_set_desy(float value) {
  _has_bits_[0] |= 0x00000008u;
  desy_ = value;
}
inline void MSG_Req_SyncSkillStage_CS::set_desy(float value) {
  _internal_set_desy(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_SyncSkillStage_CS.desy)
}

// optional uint32 attdir = 5;
inline bool MSG_Req_SyncSkillStage_CS::_internal_has_attdir() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Req_SyncSkillStage_CS::has_attdir() const {
  return _internal_has_attdir();
}
inline void MSG_Req_SyncSkillStage_CS::clear_attdir() {
  attdir_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SyncSkillStage_CS::_internal_attdir() const {
  return attdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SyncSkillStage_CS::attdir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_SyncSkillStage_CS.attdir)
  return _internal_attdir();
}
inline void MSG_Req_SyncSkillStage_CS::_internal_set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  attdir_ = value;
}
inline void MSG_Req_SyncSkillStage_CS::set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attdir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_SyncSkillStage_CS.attdir)
}

// optional uint32 userdir = 6;
inline bool MSG_Req_SyncSkillStage_CS::_internal_has_userdir() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Req_SyncSkillStage_CS::has_userdir() const {
  return _internal_has_userdir();
}
inline void MSG_Req_SyncSkillStage_CS::clear_userdir() {
  userdir_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SyncSkillStage_CS::_internal_userdir() const {
  return userdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SyncSkillStage_CS::userdir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_SyncSkillStage_CS.userdir)
  return _internal_userdir();
}
inline void MSG_Req_SyncSkillStage_CS::_internal_set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  userdir_ = value;
}
inline void MSG_Req_SyncSkillStage_CS::set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userdir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_SyncSkillStage_CS.userdir)
}

// optional uint32 stagetype = 7;
inline bool MSG_Req_SyncSkillStage_CS::_internal_has_stagetype() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Req_SyncSkillStage_CS::has_stagetype() const {
  return _internal_has_stagetype();
}
inline void MSG_Req_SyncSkillStage_CS::clear_stagetype() {
  stagetype_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SyncSkillStage_CS::_internal_stagetype() const {
  return stagetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SyncSkillStage_CS::stagetype() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_SyncSkillStage_CS.stagetype)
  return _internal_stagetype();
}
inline void MSG_Req_SyncSkillStage_CS::_internal_set_stagetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  stagetype_ = value;
}
inline void MSG_Req_SyncSkillStage_CS::set_stagetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stagetype(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_SyncSkillStage_CS.stagetype)
}

// -------------------------------------------------------------------

// MSG_Ret_SyncSkillStage_SC

// optional .msg.EntryIDType att = 1;
inline bool MSG_Ret_SyncSkillStage_SC::_internal_has_att() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || att_ != nullptr);
  return value;
}
inline bool MSG_Ret_SyncSkillStage_SC::has_att() const {
  return _internal_has_att();
}
inline const ::msg::EntryIDType& MSG_Ret_SyncSkillStage_SC::_internal_att() const {
  const ::msg::EntryIDType* p = att_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Ret_SyncSkillStage_SC::att() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_SyncSkillStage_SC.att)
  return _internal_att();
}
inline ::msg::EntryIDType* MSG_Ret_SyncSkillStage_SC::release_att() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_SyncSkillStage_SC.att)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = att_;
  att_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Ret_SyncSkillStage_SC::_internal_mutable_att() {
  _has_bits_[0] |= 0x00000001u;
  if (att_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    att_ = p;
  }
  return att_;
}
inline ::msg::EntryIDType* MSG_Ret_SyncSkillStage_SC::mutable_att() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_SyncSkillStage_SC.att)
  return _internal_mutable_att();
}
inline void MSG_Ret_SyncSkillStage_SC::set_allocated_att(::msg::EntryIDType* att) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(att_);
  }
  if (att) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      att = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, att, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  att_ = att;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_SyncSkillStage_SC.att)
}

// optional .msg.EntryIDType def = 2;
inline bool MSG_Ret_SyncSkillStage_SC::_internal_has_def() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || def_ != nullptr);
  return value;
}
inline bool MSG_Ret_SyncSkillStage_SC::has_def() const {
  return _internal_has_def();
}
inline const ::msg::EntryIDType& MSG_Ret_SyncSkillStage_SC::_internal_def() const {
  const ::msg::EntryIDType* p = def_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Ret_SyncSkillStage_SC::def() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_SyncSkillStage_SC.def)
  return _internal_def();
}
inline ::msg::EntryIDType* MSG_Ret_SyncSkillStage_SC::release_def() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_SyncSkillStage_SC.def)
  _has_bits_[0] &= ~0x00000002u;
  ::msg::EntryIDType* temp = def_;
  def_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Ret_SyncSkillStage_SC::_internal_mutable_def() {
  _has_bits_[0] |= 0x00000002u;
  if (def_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    def_ = p;
  }
  return def_;
}
inline ::msg::EntryIDType* MSG_Ret_SyncSkillStage_SC::mutable_def() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_SyncSkillStage_SC.def)
  return _internal_mutable_def();
}
inline void MSG_Ret_SyncSkillStage_SC::set_allocated_def(::msg::EntryIDType* def) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(def_);
  }
  if (def) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      def = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, def, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  def_ = def;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_SyncSkillStage_SC.def)
}

// optional uint64 skillstage = 3;
inline bool MSG_Ret_SyncSkillStage_SC::_internal_has_skillstage() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_SyncSkillStage_SC::has_skillstage() const {
  return _internal_has_skillstage();
}
inline void MSG_Ret_SyncSkillStage_SC::clear_skillstage() {
  skillstage_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_SyncSkillStage_SC::_internal_skillstage() const {
  return skillstage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_SyncSkillStage_SC::skillstage() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_SyncSkillStage_SC.skillstage)
  return _internal_skillstage();
}
inline void MSG_Ret_SyncSkillStage_SC::_internal_set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  skillstage_ = value;
}
inline void MSG_Ret_SyncSkillStage_SC::set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_skillstage(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_SyncSkillStage_SC.skillstage)
}

// optional float desx = 4;
inline bool MSG_Ret_SyncSkillStage_SC::_internal_has_desx() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_SyncSkillStage_SC::has_desx() const {
  return _internal_has_desx();
}
inline void MSG_Ret_SyncSkillStage_SC::clear_desx() {
  desx_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float MSG_Ret_SyncSkillStage_SC::_internal_desx() const {
  return desx_;
}
inline float MSG_Ret_SyncSkillStage_SC::desx() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_SyncSkillStage_SC.desx)
  return _internal_desx();
}
inline void MSG_Ret_SyncSkillStage_SC::_internal_set_desx(float value) {
  _has_bits_[0] |= 0x00000008u;
  desx_ = value;
}
inline void MSG_Ret_SyncSkillStage_SC::set_desx(float value) {
  _internal_set_desx(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_SyncSkillStage_SC.desx)
}

// optional float desy = 5;
inline bool MSG_Ret_SyncSkillStage_SC::_internal_has_desy() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_SyncSkillStage_SC::has_desy() const {
  return _internal_has_desy();
}
inline void MSG_Ret_SyncSkillStage_SC::clear_desy() {
  desy_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float MSG_Ret_SyncSkillStage_SC::_internal_desy() const {
  return desy_;
}
inline float MSG_Ret_SyncSkillStage_SC::desy() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_SyncSkillStage_SC.desy)
  return _internal_desy();
}
inline void MSG_Ret_SyncSkillStage_SC::_internal_set_desy(float value) {
  _has_bits_[0] |= 0x00000010u;
  desy_ = value;
}
inline void MSG_Ret_SyncSkillStage_SC::set_desy(float value) {
  _internal_set_desy(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_SyncSkillStage_SC.desy)
}

// optional uint32 attdir = 6;
inline bool MSG_Ret_SyncSkillStage_SC::_internal_has_attdir() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Ret_SyncSkillStage_SC::has_attdir() const {
  return _internal_has_attdir();
}
inline void MSG_Ret_SyncSkillStage_SC::clear_attdir() {
  attdir_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SyncSkillStage_SC::_internal_attdir() const {
  return attdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SyncSkillStage_SC::attdir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_SyncSkillStage_SC.attdir)
  return _internal_attdir();
}
inline void MSG_Ret_SyncSkillStage_SC::_internal_set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  attdir_ = value;
}
inline void MSG_Ret_SyncSkillStage_SC::set_attdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attdir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_SyncSkillStage_SC.attdir)
}

// optional uint32 userdir = 7;
inline bool MSG_Ret_SyncSkillStage_SC::_internal_has_userdir() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Ret_SyncSkillStage_SC::has_userdir() const {
  return _internal_has_userdir();
}
inline void MSG_Ret_SyncSkillStage_SC::clear_userdir() {
  userdir_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SyncSkillStage_SC::_internal_userdir() const {
  return userdir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SyncSkillStage_SC::userdir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_SyncSkillStage_SC.userdir)
  return _internal_userdir();
}
inline void MSG_Ret_SyncSkillStage_SC::_internal_set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  userdir_ = value;
}
inline void MSG_Ret_SyncSkillStage_SC::set_userdir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userdir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_SyncSkillStage_SC.userdir)
}

// optional uint32 stagetype = 8;
inline bool MSG_Ret_SyncSkillStage_SC::_internal_has_stagetype() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MSG_Ret_SyncSkillStage_SC::has_stagetype() const {
  return _internal_has_stagetype();
}
inline void MSG_Ret_SyncSkillStage_SC::clear_stagetype() {
  stagetype_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SyncSkillStage_SC::_internal_stagetype() const {
  return stagetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SyncSkillStage_SC::stagetype() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_SyncSkillStage_SC.stagetype)
  return _internal_stagetype();
}
inline void MSG_Ret_SyncSkillStage_SC::_internal_set_stagetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  stagetype_ = value;
}
inline void MSG_Ret_SyncSkillStage_SC::set_stagetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stagetype(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_SyncSkillStage_SC.stagetype)
}

// -------------------------------------------------------------------

// MSG_Ret_InterruptSkill_SC

// optional .msg.EntryIDType att = 1;
inline bool MSG_Ret_InterruptSkill_SC::_internal_has_att() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || att_ != nullptr);
  return value;
}
inline bool MSG_Ret_InterruptSkill_SC::has_att() const {
  return _internal_has_att();
}
inline const ::msg::EntryIDType& MSG_Ret_InterruptSkill_SC::_internal_att() const {
  const ::msg::EntryIDType* p = att_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Ret_InterruptSkill_SC::att() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_InterruptSkill_SC.att)
  return _internal_att();
}
inline ::msg::EntryIDType* MSG_Ret_InterruptSkill_SC::release_att() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_InterruptSkill_SC.att)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = att_;
  att_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Ret_InterruptSkill_SC::_internal_mutable_att() {
  _has_bits_[0] |= 0x00000001u;
  if (att_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    att_ = p;
  }
  return att_;
}
inline ::msg::EntryIDType* MSG_Ret_InterruptSkill_SC::mutable_att() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_InterruptSkill_SC.att)
  return _internal_mutable_att();
}
inline void MSG_Ret_InterruptSkill_SC::set_allocated_att(::msg::EntryIDType* att) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(att_);
  }
  if (att) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      att = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, att, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  att_ = att;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_InterruptSkill_SC.att)
}

// optional uint64 skillstage = 2;
inline bool MSG_Ret_InterruptSkill_SC::_internal_has_skillstage() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_InterruptSkill_SC::has_skillstage() const {
  return _internal_has_skillstage();
}
inline void MSG_Ret_InterruptSkill_SC::clear_skillstage() {
  skillstage_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_InterruptSkill_SC::_internal_skillstage() const {
  return skillstage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_InterruptSkill_SC::skillstage() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_InterruptSkill_SC.skillstage)
  return _internal_skillstage();
}
inline void MSG_Ret_InterruptSkill_SC::_internal_set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  skillstage_ = value;
}
inline void MSG_Ret_InterruptSkill_SC::set_skillstage(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_skillstage(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_InterruptSkill_SC.skillstage)
}

// -------------------------------------------------------------------

// MSG_Ret_MainUserDeath_SC

// optional string charid = 1;
inline bool MSG_Ret_MainUserDeath_SC::_internal_has_charid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserDeath_SC::has_charid() const {
  return _internal_has_charid();
}
inline void MSG_Ret_MainUserDeath_SC::clear_charid() {
  charid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_MainUserDeath_SC::charid() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserDeath_SC.charid)
  return _internal_charid();
}
inline void MSG_Ret_MainUserDeath_SC::set_charid(const std::string& value) {
  _internal_set_charid(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserDeath_SC.charid)
}
inline std::string* MSG_Ret_MainUserDeath_SC::mutable_charid() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_MainUserDeath_SC.charid)
  return _internal_mutable_charid();
}
inline const std::string& MSG_Ret_MainUserDeath_SC::_internal_charid() const {
  return charid_.GetNoArena();
}
inline void MSG_Ret_MainUserDeath_SC::_internal_set_charid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  charid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_MainUserDeath_SC::set_charid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  charid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:magic.MSG_Ret_MainUserDeath_SC.charid)
}
inline void MSG_Ret_MainUserDeath_SC::set_charid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  charid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:magic.MSG_Ret_MainUserDeath_SC.charid)
}
inline void MSG_Ret_MainUserDeath_SC::set_charid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  charid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:magic.MSG_Ret_MainUserDeath_SC.charid)
}
inline std::string* MSG_Ret_MainUserDeath_SC::_internal_mutable_charid() {
  _has_bits_[0] |= 0x00000001u;
  return charid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_MainUserDeath_SC::release_charid() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_MainUserDeath_SC.charid)
  if (!_internal_has_charid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return charid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_MainUserDeath_SC::set_allocated_charid(std::string* charid) {
  if (charid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  charid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), charid);
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_MainUserDeath_SC.charid)
}

// optional uint32 relivecostid = 2;
inline bool MSG_Ret_MainUserDeath_SC::_internal_has_relivecostid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserDeath_SC::has_relivecostid() const {
  return _internal_has_relivecostid();
}
inline void MSG_Ret_MainUserDeath_SC::clear_relivecostid() {
  relivecostid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserDeath_SC::_internal_relivecostid() const {
  return relivecostid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserDeath_SC::relivecostid() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserDeath_SC.relivecostid)
  return _internal_relivecostid();
}
inline void MSG_Ret_MainUserDeath_SC::_internal_set_relivecostid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  relivecostid_ = value;
}
inline void MSG_Ret_MainUserDeath_SC::set_relivecostid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_relivecostid(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserDeath_SC.relivecostid)
}

// optional uint32 relivecostnum = 3;
inline bool MSG_Ret_MainUserDeath_SC::_internal_has_relivecostnum() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserDeath_SC::has_relivecostnum() const {
  return _internal_has_relivecostnum();
}
inline void MSG_Ret_MainUserDeath_SC::clear_relivecostnum() {
  relivecostnum_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserDeath_SC::_internal_relivecostnum() const {
  return relivecostnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserDeath_SC::relivecostnum() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserDeath_SC.relivecostnum)
  return _internal_relivecostnum();
}
inline void MSG_Ret_MainUserDeath_SC::_internal_set_relivecostnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  relivecostnum_ = value;
}
inline void MSG_Ret_MainUserDeath_SC::set_relivecostnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_relivecostnum(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserDeath_SC.relivecostnum)
}

// optional uint32 canreliveorigin = 4;
inline bool MSG_Ret_MainUserDeath_SC::_internal_has_canreliveorigin() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserDeath_SC::has_canreliveorigin() const {
  return _internal_has_canreliveorigin();
}
inline void MSG_Ret_MainUserDeath_SC::clear_canreliveorigin() {
  canreliveorigin_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserDeath_SC::_internal_canreliveorigin() const {
  return canreliveorigin_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserDeath_SC::canreliveorigin() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserDeath_SC.canreliveorigin)
  return _internal_canreliveorigin();
}
inline void MSG_Ret_MainUserDeath_SC::_internal_set_canreliveorigin(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  canreliveorigin_ = value;
}
inline void MSG_Ret_MainUserDeath_SC::set_canreliveorigin(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_canreliveorigin(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserDeath_SC.canreliveorigin)
}

// optional bool canrelive = 5 [default = true];
inline bool MSG_Ret_MainUserDeath_SC::_internal_has_canrelive() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserDeath_SC::has_canrelive() const {
  return _internal_has_canrelive();
}
inline void MSG_Ret_MainUserDeath_SC::clear_canrelive() {
  canrelive_ = true;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool MSG_Ret_MainUserDeath_SC::_internal_canrelive() const {
  return canrelive_;
}
inline bool MSG_Ret_MainUserDeath_SC::canrelive() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserDeath_SC.canrelive)
  return _internal_canrelive();
}
inline void MSG_Ret_MainUserDeath_SC::_internal_set_canrelive(bool value) {
  _has_bits_[0] |= 0x00000080u;
  canrelive_ = value;
}
inline void MSG_Ret_MainUserDeath_SC::set_canrelive(bool value) {
  _internal_set_canrelive(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserDeath_SC.canrelive)
}

// optional uint32 relivetime = 6;
inline bool MSG_Ret_MainUserDeath_SC::_internal_has_relivetime() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserDeath_SC::has_relivetime() const {
  return _internal_has_relivetime();
}
inline void MSG_Ret_MainUserDeath_SC::clear_relivetime() {
  relivetime_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserDeath_SC::_internal_relivetime() const {
  return relivetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserDeath_SC::relivetime() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserDeath_SC.relivetime)
  return _internal_relivetime();
}
inline void MSG_Ret_MainUserDeath_SC::_internal_set_relivetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  relivetime_ = value;
}
inline void MSG_Ret_MainUserDeath_SC::set_relivetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_relivetime(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserDeath_SC.relivetime)
}

// optional bool autorelive = 7;
inline bool MSG_Ret_MainUserDeath_SC::_internal_has_autorelive() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserDeath_SC::has_autorelive() const {
  return _internal_has_autorelive();
}
inline void MSG_Ret_MainUserDeath_SC::clear_autorelive() {
  autorelive_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool MSG_Ret_MainUserDeath_SC::_internal_autorelive() const {
  return autorelive_;
}
inline bool MSG_Ret_MainUserDeath_SC::autorelive() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserDeath_SC.autorelive)
  return _internal_autorelive();
}
inline void MSG_Ret_MainUserDeath_SC::_internal_set_autorelive(bool value) {
  _has_bits_[0] |= 0x00000020u;
  autorelive_ = value;
}
inline void MSG_Ret_MainUserDeath_SC::set_autorelive(bool value) {
  _internal_set_autorelive(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserDeath_SC.autorelive)
}

// optional uint32 relive_type = 8;
inline bool MSG_Ret_MainUserDeath_SC::_internal_has_relive_type() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserDeath_SC::has_relive_type() const {
  return _internal_has_relive_type();
}
inline void MSG_Ret_MainUserDeath_SC::clear_relive_type() {
  relive_type_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserDeath_SC::_internal_relive_type() const {
  return relive_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserDeath_SC::relive_type() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserDeath_SC.relive_type)
  return _internal_relive_type();
}
inline void MSG_Ret_MainUserDeath_SC::_internal_set_relive_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  relive_type_ = value;
}
inline void MSG_Ret_MainUserDeath_SC::set_relive_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_relive_type(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserDeath_SC.relive_type)
}

// -------------------------------------------------------------------

// MSG_Ret_UserDeath_SC

// optional uint64 tempid = 1;
inline bool MSG_Ret_UserDeath_SC::_internal_has_tempid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_UserDeath_SC::has_tempid() const {
  return _internal_has_tempid();
}
inline void MSG_Ret_UserDeath_SC::clear_tempid() {
  tempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_UserDeath_SC::_internal_tempid() const {
  return tempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_UserDeath_SC::tempid() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_UserDeath_SC.tempid)
  return _internal_tempid();
}
inline void MSG_Ret_UserDeath_SC::_internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  tempid_ = value;
}
inline void MSG_Ret_UserDeath_SC::set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tempid(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_UserDeath_SC.tempid)
}

// optional uint64 attid = 2;
inline bool MSG_Ret_UserDeath_SC::_internal_has_attid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_UserDeath_SC::has_attid() const {
  return _internal_has_attid();
}
inline void MSG_Ret_UserDeath_SC::clear_attid() {
  attid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_UserDeath_SC::_internal_attid() const {
  return attid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_UserDeath_SC::attid() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_UserDeath_SC.attid)
  return _internal_attid();
}
inline void MSG_Ret_UserDeath_SC::_internal_set_attid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  attid_ = value;
}
inline void MSG_Ret_UserDeath_SC::set_attid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_attid(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_UserDeath_SC.attid)
}

// optional uint32 lasthitskill = 3;
inline bool MSG_Ret_UserDeath_SC::_internal_has_lasthitskill() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_UserDeath_SC::has_lasthitskill() const {
  return _internal_has_lasthitskill();
}
inline void MSG_Ret_UserDeath_SC::clear_lasthitskill() {
  lasthitskill_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserDeath_SC::_internal_lasthitskill() const {
  return lasthitskill_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserDeath_SC::lasthitskill() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_UserDeath_SC.lasthitskill)
  return _internal_lasthitskill();
}
inline void MSG_Ret_UserDeath_SC::_internal_set_lasthitskill(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  lasthitskill_ = value;
}
inline void MSG_Ret_UserDeath_SC::set_lasthitskill(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lasthitskill(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_UserDeath_SC.lasthitskill)
}

// optional uint32 atttype = 4;
inline bool MSG_Ret_UserDeath_SC::_internal_has_atttype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_UserDeath_SC::has_atttype() const {
  return _internal_has_atttype();
}
inline void MSG_Ret_UserDeath_SC::clear_atttype() {
  atttype_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserDeath_SC::_internal_atttype() const {
  return atttype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserDeath_SC::atttype() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_UserDeath_SC.atttype)
  return _internal_atttype();
}
inline void MSG_Ret_UserDeath_SC::_internal_set_atttype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  atttype_ = value;
}
inline void MSG_Ret_UserDeath_SC::set_atttype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_atttype(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_UserDeath_SC.atttype)
}

// -------------------------------------------------------------------

// MSG_Req_MainUserRelive_CS

// optional uint32 relivetype = 1;
inline bool MSG_Req_MainUserRelive_CS::_internal_has_relivetype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_MainUserRelive_CS::has_relivetype() const {
  return _internal_has_relivetype();
}
inline void MSG_Req_MainUserRelive_CS::clear_relivetype() {
  relivetype_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_MainUserRelive_CS::_internal_relivetype() const {
  return relivetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_MainUserRelive_CS::relivetype() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_MainUserRelive_CS.relivetype)
  return _internal_relivetype();
}
inline void MSG_Req_MainUserRelive_CS::_internal_set_relivetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  relivetype_ = value;
}
inline void MSG_Req_MainUserRelive_CS::set_relivetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_relivetype(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_MainUserRelive_CS.relivetype)
}

// -------------------------------------------------------------------

// MSG_Ret_MainUserRelive_SC

// optional uint64 userid = 1;
inline bool MSG_Ret_MainUserRelive_SC::_internal_has_userid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserRelive_SC::has_userid() const {
  return _internal_has_userid();
}
inline void MSG_Ret_MainUserRelive_SC::clear_userid() {
  userid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MainUserRelive_SC::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_MainUserRelive_SC::userid() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserRelive_SC.userid)
  return _internal_userid();
}
inline void MSG_Ret_MainUserRelive_SC::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
}
inline void MSG_Ret_MainUserRelive_SC::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserRelive_SC.userid)
}

// optional uint32 x = 2;
inline bool MSG_Ret_MainUserRelive_SC::_internal_has_x() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserRelive_SC::has_x() const {
  return _internal_has_x();
}
inline void MSG_Ret_MainUserRelive_SC::clear_x() {
  x_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserRelive_SC::_internal_x() const {
  return x_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserRelive_SC::x() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserRelive_SC.x)
  return _internal_x();
}
inline void MSG_Ret_MainUserRelive_SC::_internal_set_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  x_ = value;
}
inline void MSG_Ret_MainUserRelive_SC::set_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserRelive_SC.x)
}

// optional uint32 y = 3;
inline bool MSG_Ret_MainUserRelive_SC::_internal_has_y() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserRelive_SC::has_y() const {
  return _internal_has_y();
}
inline void MSG_Ret_MainUserRelive_SC::clear_y() {
  y_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserRelive_SC::_internal_y() const {
  return y_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_MainUserRelive_SC::y() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserRelive_SC.y)
  return _internal_y();
}
inline void MSG_Ret_MainUserRelive_SC::_internal_set_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  y_ = value;
}
inline void MSG_Ret_MainUserRelive_SC::set_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserRelive_SC.y)
}

// required .msg.ReliveType relivetype = 4;
inline bool MSG_Ret_MainUserRelive_SC::_internal_has_relivetype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_MainUserRelive_SC::has_relivetype() const {
  return _internal_has_relivetype();
}
inline void MSG_Ret_MainUserRelive_SC::clear_relivetype() {
  relivetype_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::msg::ReliveType MSG_Ret_MainUserRelive_SC::_internal_relivetype() const {
  return static_cast< ::msg::ReliveType >(relivetype_);
}
inline ::msg::ReliveType MSG_Ret_MainUserRelive_SC::relivetype() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_MainUserRelive_SC.relivetype)
  return _internal_relivetype();
}
inline void MSG_Ret_MainUserRelive_SC::_internal_set_relivetype(::msg::ReliveType value) {
  assert(::msg::ReliveType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  relivetype_ = value;
}
inline void MSG_Ret_MainUserRelive_SC::set_relivetype(::msg::ReliveType value) {
  _internal_set_relivetype(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_MainUserRelive_SC.relivetype)
}

// -------------------------------------------------------------------

// MSG_Ret_SwitchPKMode_SC

// required .msg.PKMode newmode = 1;
inline bool MSG_Ret_SwitchPKMode_SC::_internal_has_newmode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_SwitchPKMode_SC::has_newmode() const {
  return _internal_has_newmode();
}
inline void MSG_Ret_SwitchPKMode_SC::clear_newmode() {
  newmode_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::msg::PKMode MSG_Ret_SwitchPKMode_SC::_internal_newmode() const {
  return static_cast< ::msg::PKMode >(newmode_);
}
inline ::msg::PKMode MSG_Ret_SwitchPKMode_SC::newmode() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_SwitchPKMode_SC.newmode)
  return _internal_newmode();
}
inline void MSG_Ret_SwitchPKMode_SC::_internal_set_newmode(::msg::PKMode value) {
  assert(::msg::PKMode_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  newmode_ = value;
}
inline void MSG_Ret_SwitchPKMode_SC::set_newmode(::msg::PKMode value) {
  _internal_set_newmode(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_SwitchPKMode_SC.newmode)
}

// -------------------------------------------------------------------

// MSG_RetRefreshSkill_SC

// repeated .magic.SkillData skills = 1;
inline int MSG_RetRefreshSkill_SC::_internal_skills_size() const {
  return skills_.size();
}
inline int MSG_RetRefreshSkill_SC::skills_size() const {
  return _internal_skills_size();
}
inline void MSG_RetRefreshSkill_SC::clear_skills() {
  skills_.Clear();
}
inline ::magic::SkillData* MSG_RetRefreshSkill_SC::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:magic.MSG_RetRefreshSkill_SC.skills)
  return skills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::SkillData >*
MSG_RetRefreshSkill_SC::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:magic.MSG_RetRefreshSkill_SC.skills)
  return &skills_;
}
inline const ::magic::SkillData& MSG_RetRefreshSkill_SC::_internal_skills(int index) const {
  return skills_.Get(index);
}
inline const ::magic::SkillData& MSG_RetRefreshSkill_SC::skills(int index) const {
  // @@protoc_insertion_point(field_get:magic.MSG_RetRefreshSkill_SC.skills)
  return _internal_skills(index);
}
inline ::magic::SkillData* MSG_RetRefreshSkill_SC::_internal_add_skills() {
  return skills_.Add();
}
inline ::magic::SkillData* MSG_RetRefreshSkill_SC::add_skills() {
  // @@protoc_insertion_point(field_add:magic.MSG_RetRefreshSkill_SC.skills)
  return _internal_add_skills();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::SkillData >&
MSG_RetRefreshSkill_SC::skills() const {
  // @@protoc_insertion_point(field_list:magic.MSG_RetRefreshSkill_SC.skills)
  return skills_;
}

// -------------------------------------------------------------------

// MSG_Req_OffSkill_CS

// optional uint32 skillid = 1;
inline bool MSG_Req_OffSkill_CS::_internal_has_skillid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_OffSkill_CS::has_skillid() const {
  return _internal_has_skillid();
}
inline void MSG_Req_OffSkill_CS::clear_skillid() {
  skillid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_OffSkill_CS::_internal_skillid() const {
  return skillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_OffSkill_CS::skillid() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Req_OffSkill_CS.skillid)
  return _internal_skillid();
}
inline void MSG_Req_OffSkill_CS::_internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  skillid_ = value;
}
inline void MSG_Req_OffSkill_CS::set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillid(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Req_OffSkill_CS.skillid)
}

// -------------------------------------------------------------------

// AttWarning

// optional uint32 lasttime = 1;
inline bool AttWarning::_internal_has_lasttime() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AttWarning::has_lasttime() const {
  return _internal_has_lasttime();
}
inline void AttWarning::clear_lasttime() {
  lasttime_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttWarning::_internal_lasttime() const {
  return lasttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttWarning::lasttime() const {
  // @@protoc_insertion_point(field_get:magic.AttWarning.lasttime)
  return _internal_lasttime();
}
inline void AttWarning::_internal_set_lasttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  lasttime_ = value;
}
inline void AttWarning::set_lasttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lasttime(value);
  // @@protoc_insertion_point(field_set:magic.AttWarning.lasttime)
}

// optional .msg.Position pos = 2;
inline bool AttWarning::_internal_has_pos() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || pos_ != nullptr);
  return value;
}
inline bool AttWarning::has_pos() const {
  return _internal_has_pos();
}
inline const ::msg::Position& AttWarning::_internal_pos() const {
  const ::msg::Position* p = pos_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::Position*>(
      &::msg::_Position_default_instance_);
}
inline const ::msg::Position& AttWarning::pos() const {
  // @@protoc_insertion_point(field_get:magic.AttWarning.pos)
  return _internal_pos();
}
inline ::msg::Position* AttWarning::release_pos() {
  // @@protoc_insertion_point(field_release:magic.AttWarning.pos)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::Position* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::msg::Position* AttWarning::_internal_mutable_pos() {
  _has_bits_[0] |= 0x00000001u;
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::Position>(GetArenaNoVirtual());
    pos_ = p;
  }
  return pos_;
}
inline ::msg::Position* AttWarning::mutable_pos() {
  // @@protoc_insertion_point(field_mutable:magic.AttWarning.pos)
  return _internal_mutable_pos();
}
inline void AttWarning::set_allocated_pos(::msg::Position* pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos_);
  }
  if (pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:magic.AttWarning.pos)
}

// optional uint32 dir = 3;
inline bool AttWarning::_internal_has_dir() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool AttWarning::has_dir() const {
  return _internal_has_dir();
}
inline void AttWarning::clear_dir() {
  dir_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttWarning::_internal_dir() const {
  return dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttWarning::dir() const {
  // @@protoc_insertion_point(field_get:magic.AttWarning.dir)
  return _internal_dir();
}
inline void AttWarning::_internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  dir_ = value;
}
inline void AttWarning::set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:magic.AttWarning.dir)
}

// optional uint32 rangetype = 4;
inline bool AttWarning::_internal_has_rangetype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool AttWarning::has_rangetype() const {
  return _internal_has_rangetype();
}
inline void AttWarning::clear_rangetype() {
  rangetype_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttWarning::_internal_rangetype() const {
  return rangetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttWarning::rangetype() const {
  // @@protoc_insertion_point(field_get:magic.AttWarning.rangetype)
  return _internal_rangetype();
}
inline void AttWarning::_internal_set_rangetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  rangetype_ = value;
}
inline void AttWarning::set_rangetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rangetype(value);
  // @@protoc_insertion_point(field_set:magic.AttWarning.rangetype)
}

// optional uint32 rangep1 = 5;
inline bool AttWarning::_internal_has_rangep1() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool AttWarning::has_rangep1() const {
  return _internal_has_rangep1();
}
inline void AttWarning::clear_rangep1() {
  rangep1_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttWarning::_internal_rangep1() const {
  return rangep1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttWarning::rangep1() const {
  // @@protoc_insertion_point(field_get:magic.AttWarning.rangep1)
  return _internal_rangep1();
}
inline void AttWarning::_internal_set_rangep1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  rangep1_ = value;
}
inline void AttWarning::set_rangep1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rangep1(value);
  // @@protoc_insertion_point(field_set:magic.AttWarning.rangep1)
}

// optional uint32 rangep2 = 6;
inline bool AttWarning::_internal_has_rangep2() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool AttWarning::has_rangep2() const {
  return _internal_has_rangep2();
}
inline void AttWarning::clear_rangep2() {
  rangep2_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttWarning::_internal_rangep2() const {
  return rangep2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AttWarning::rangep2() const {
  // @@protoc_insertion_point(field_get:magic.AttWarning.rangep2)
  return _internal_rangep2();
}
inline void AttWarning::_internal_set_rangep2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  rangep2_ = value;
}
inline void AttWarning::set_rangep2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rangep2(value);
  // @@protoc_insertion_point(field_set:magic.AttWarning.rangep2)
}

// -------------------------------------------------------------------

// MSG_Ret_AttWarning_SC

// optional .msg.EntryIDType attacker = 1;
inline bool MSG_Ret_AttWarning_SC::_internal_has_attacker() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || attacker_ != nullptr);
  return value;
}
inline bool MSG_Ret_AttWarning_SC::has_attacker() const {
  return _internal_has_attacker();
}
inline const ::msg::EntryIDType& MSG_Ret_AttWarning_SC::_internal_attacker() const {
  const ::msg::EntryIDType* p = attacker_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::EntryIDType*>(
      &::msg::_EntryIDType_default_instance_);
}
inline const ::msg::EntryIDType& MSG_Ret_AttWarning_SC::attacker() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_AttWarning_SC.attacker)
  return _internal_attacker();
}
inline ::msg::EntryIDType* MSG_Ret_AttWarning_SC::release_attacker() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_AttWarning_SC.attacker)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::EntryIDType* temp = attacker_;
  attacker_ = nullptr;
  return temp;
}
inline ::msg::EntryIDType* MSG_Ret_AttWarning_SC::_internal_mutable_attacker() {
  _has_bits_[0] |= 0x00000001u;
  if (attacker_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::EntryIDType>(GetArenaNoVirtual());
    attacker_ = p;
  }
  return attacker_;
}
inline ::msg::EntryIDType* MSG_Ret_AttWarning_SC::mutable_attacker() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_AttWarning_SC.attacker)
  return _internal_mutable_attacker();
}
inline void MSG_Ret_AttWarning_SC::set_allocated_attacker(::msg::EntryIDType* attacker) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(attacker_);
  }
  if (attacker) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attacker = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, attacker, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  attacker_ = attacker;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_AttWarning_SC.attacker)
}

// repeated .magic.AttWarning warning = 2;
inline int MSG_Ret_AttWarning_SC::_internal_warning_size() const {
  return warning_.size();
}
inline int MSG_Ret_AttWarning_SC::warning_size() const {
  return _internal_warning_size();
}
inline void MSG_Ret_AttWarning_SC::clear_warning() {
  warning_.Clear();
}
inline ::magic::AttWarning* MSG_Ret_AttWarning_SC::mutable_warning(int index) {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_AttWarning_SC.warning)
  return warning_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::AttWarning >*
MSG_Ret_AttWarning_SC::mutable_warning() {
  // @@protoc_insertion_point(field_mutable_list:magic.MSG_Ret_AttWarning_SC.warning)
  return &warning_;
}
inline const ::magic::AttWarning& MSG_Ret_AttWarning_SC::_internal_warning(int index) const {
  return warning_.Get(index);
}
inline const ::magic::AttWarning& MSG_Ret_AttWarning_SC::warning(int index) const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_AttWarning_SC.warning)
  return _internal_warning(index);
}
inline ::magic::AttWarning* MSG_Ret_AttWarning_SC::_internal_add_warning() {
  return warning_.Add();
}
inline ::magic::AttWarning* MSG_Ret_AttWarning_SC::add_warning() {
  // @@protoc_insertion_point(field_add:magic.MSG_Ret_AttWarning_SC.warning)
  return _internal_add_warning();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::magic::AttWarning >&
MSG_Ret_AttWarning_SC::warning() const {
  // @@protoc_insertion_point(field_list:magic.MSG_Ret_AttWarning_SC.warning)
  return warning_;
}

// -------------------------------------------------------------------

// MSG_ReqTriggerQTESkill_CS

// optional uint64 bosstempid = 1;
inline bool MSG_ReqTriggerQTESkill_CS::_internal_has_bosstempid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqTriggerQTESkill_CS::has_bosstempid() const {
  return _internal_has_bosstempid();
}
inline void MSG_ReqTriggerQTESkill_CS::clear_bosstempid() {
  bosstempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_ReqTriggerQTESkill_CS::_internal_bosstempid() const {
  return bosstempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_ReqTriggerQTESkill_CS::bosstempid() const {
  // @@protoc_insertion_point(field_get:magic.MSG_ReqTriggerQTESkill_CS.bosstempid)
  return _internal_bosstempid();
}
inline void MSG_ReqTriggerQTESkill_CS::_internal_set_bosstempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  bosstempid_ = value;
}
inline void MSG_ReqTriggerQTESkill_CS::set_bosstempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bosstempid(value);
  // @@protoc_insertion_point(field_set:magic.MSG_ReqTriggerQTESkill_CS.bosstempid)
}

// optional .msg.Position warppos = 2;
inline bool MSG_ReqTriggerQTESkill_CS::_internal_has_warppos() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || warppos_ != nullptr);
  return value;
}
inline bool MSG_ReqTriggerQTESkill_CS::has_warppos() const {
  return _internal_has_warppos();
}
inline const ::msg::Position& MSG_ReqTriggerQTESkill_CS::_internal_warppos() const {
  const ::msg::Position* p = warppos_;
  return p != nullptr ? *p : *reinterpret_cast<const ::msg::Position*>(
      &::msg::_Position_default_instance_);
}
inline const ::msg::Position& MSG_ReqTriggerQTESkill_CS::warppos() const {
  // @@protoc_insertion_point(field_get:magic.MSG_ReqTriggerQTESkill_CS.warppos)
  return _internal_warppos();
}
inline ::msg::Position* MSG_ReqTriggerQTESkill_CS::release_warppos() {
  // @@protoc_insertion_point(field_release:magic.MSG_ReqTriggerQTESkill_CS.warppos)
  _has_bits_[0] &= ~0x00000001u;
  ::msg::Position* temp = warppos_;
  warppos_ = nullptr;
  return temp;
}
inline ::msg::Position* MSG_ReqTriggerQTESkill_CS::_internal_mutable_warppos() {
  _has_bits_[0] |= 0x00000001u;
  if (warppos_ == nullptr) {
    auto* p = CreateMaybeMessage<::msg::Position>(GetArenaNoVirtual());
    warppos_ = p;
  }
  return warppos_;
}
inline ::msg::Position* MSG_ReqTriggerQTESkill_CS::mutable_warppos() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_ReqTriggerQTESkill_CS.warppos)
  return _internal_mutable_warppos();
}
inline void MSG_ReqTriggerQTESkill_CS::set_allocated_warppos(::msg::Position* warppos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(warppos_);
  }
  if (warppos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      warppos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, warppos, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  warppos_ = warppos;
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_ReqTriggerQTESkill_CS.warppos)
}

// optional uint32 dir = 3;
inline bool MSG_ReqTriggerQTESkill_CS::_internal_has_dir() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqTriggerQTESkill_CS::has_dir() const {
  return _internal_has_dir();
}
inline void MSG_ReqTriggerQTESkill_CS::clear_dir() {
  dir_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqTriggerQTESkill_CS::_internal_dir() const {
  return dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqTriggerQTESkill_CS::dir() const {
  // @@protoc_insertion_point(field_get:magic.MSG_ReqTriggerQTESkill_CS.dir)
  return _internal_dir();
}
inline void MSG_ReqTriggerQTESkill_CS::_internal_set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  dir_ = value;
}
inline void MSG_ReqTriggerQTESkill_CS::set_dir(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir(value);
  // @@protoc_insertion_point(field_set:magic.MSG_ReqTriggerQTESkill_CS.dir)
}

// -------------------------------------------------------------------

// MSG_RetTriggerQTESkill_SC

// optional uint32 errcode = 1;
inline bool MSG_RetTriggerQTESkill_SC::_internal_has_errcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetTriggerQTESkill_SC::has_errcode() const {
  return _internal_has_errcode();
}
inline void MSG_RetTriggerQTESkill_SC::clear_errcode() {
  errcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTriggerQTESkill_SC::_internal_errcode() const {
  return errcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetTriggerQTESkill_SC::errcode() const {
  // @@protoc_insertion_point(field_get:magic.MSG_RetTriggerQTESkill_SC.errcode)
  return _internal_errcode();
}
inline void MSG_RetTriggerQTESkill_SC::_internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  errcode_ = value;
}
inline void MSG_RetTriggerQTESkill_SC::set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errcode(value);
  // @@protoc_insertion_point(field_set:magic.MSG_RetTriggerQTESkill_SC.errcode)
}

// -------------------------------------------------------------------

// MSG_ReqDrinkBloodSkill_CS

// optional uint64 npctempid = 1;
inline bool MSG_ReqDrinkBloodSkill_CS::_internal_has_npctempid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqDrinkBloodSkill_CS::has_npctempid() const {
  return _internal_has_npctempid();
}
inline void MSG_ReqDrinkBloodSkill_CS::clear_npctempid() {
  npctempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_ReqDrinkBloodSkill_CS::_internal_npctempid() const {
  return npctempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_ReqDrinkBloodSkill_CS::npctempid() const {
  // @@protoc_insertion_point(field_get:magic.MSG_ReqDrinkBloodSkill_CS.npctempid)
  return _internal_npctempid();
}
inline void MSG_ReqDrinkBloodSkill_CS::_internal_set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  npctempid_ = value;
}
inline void MSG_ReqDrinkBloodSkill_CS::set_npctempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_npctempid(value);
  // @@protoc_insertion_point(field_set:magic.MSG_ReqDrinkBloodSkill_CS.npctempid)
}

// -------------------------------------------------------------------

// MSG_RetDrinkBloodSkill_SC

// optional uint32 errcode = 1 [default = 1];
inline bool MSG_RetDrinkBloodSkill_SC::_internal_has_errcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetDrinkBloodSkill_SC::has_errcode() const {
  return _internal_has_errcode();
}
inline void MSG_RetDrinkBloodSkill_SC::clear_errcode() {
  errcode_ = 1u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetDrinkBloodSkill_SC::_internal_errcode() const {
  return errcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetDrinkBloodSkill_SC::errcode() const {
  // @@protoc_insertion_point(field_get:magic.MSG_RetDrinkBloodSkill_SC.errcode)
  return _internal_errcode();
}
inline void MSG_RetDrinkBloodSkill_SC::_internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  errcode_ = value;
}
inline void MSG_RetDrinkBloodSkill_SC::set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errcode(value);
  // @@protoc_insertion_point(field_set:magic.MSG_RetDrinkBloodSkill_SC.errcode)
}

// -------------------------------------------------------------------

// MSG_Ret_UserSkillRelive_SC

// optional string from_name = 1;
inline bool MSG_Ret_UserSkillRelive_SC::_internal_has_from_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_UserSkillRelive_SC::has_from_name() const {
  return _internal_has_from_name();
}
inline void MSG_Ret_UserSkillRelive_SC::clear_from_name() {
  from_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_UserSkillRelive_SC::from_name() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_UserSkillRelive_SC.from_name)
  return _internal_from_name();
}
inline void MSG_Ret_UserSkillRelive_SC::set_from_name(const std::string& value) {
  _internal_set_from_name(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_UserSkillRelive_SC.from_name)
}
inline std::string* MSG_Ret_UserSkillRelive_SC::mutable_from_name() {
  // @@protoc_insertion_point(field_mutable:magic.MSG_Ret_UserSkillRelive_SC.from_name)
  return _internal_mutable_from_name();
}
inline const std::string& MSG_Ret_UserSkillRelive_SC::_internal_from_name() const {
  return from_name_.GetNoArena();
}
inline void MSG_Ret_UserSkillRelive_SC::_internal_set_from_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  from_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_UserSkillRelive_SC::set_from_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  from_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:magic.MSG_Ret_UserSkillRelive_SC.from_name)
}
inline void MSG_Ret_UserSkillRelive_SC::set_from_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  from_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:magic.MSG_Ret_UserSkillRelive_SC.from_name)
}
inline void MSG_Ret_UserSkillRelive_SC::set_from_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  from_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:magic.MSG_Ret_UserSkillRelive_SC.from_name)
}
inline std::string* MSG_Ret_UserSkillRelive_SC::_internal_mutable_from_name() {
  _has_bits_[0] |= 0x00000001u;
  return from_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_UserSkillRelive_SC::release_from_name() {
  // @@protoc_insertion_point(field_release:magic.MSG_Ret_UserSkillRelive_SC.from_name)
  if (!_internal_has_from_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return from_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_UserSkillRelive_SC::set_allocated_from_name(std::string* from_name) {
  if (from_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  from_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from_name);
  // @@protoc_insertion_point(field_set_allocated:magic.MSG_Ret_UserSkillRelive_SC.from_name)
}

// optional uint32 relive_type = 2;
inline bool MSG_Ret_UserSkillRelive_SC::_internal_has_relive_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_UserSkillRelive_SC::has_relive_type() const {
  return _internal_has_relive_type();
}
inline void MSG_Ret_UserSkillRelive_SC::clear_relive_type() {
  relive_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserSkillRelive_SC::_internal_relive_type() const {
  return relive_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserSkillRelive_SC::relive_type() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_UserSkillRelive_SC.relive_type)
  return _internal_relive_type();
}
inline void MSG_Ret_UserSkillRelive_SC::_internal_set_relive_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  relive_type_ = value;
}
inline void MSG_Ret_UserSkillRelive_SC::set_relive_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_relive_type(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_UserSkillRelive_SC.relive_type)
}

// optional uint32 relivetime = 3;
inline bool MSG_Ret_UserSkillRelive_SC::_internal_has_relivetime() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_UserSkillRelive_SC::has_relivetime() const {
  return _internal_has_relivetime();
}
inline void MSG_Ret_UserSkillRelive_SC::clear_relivetime() {
  relivetime_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserSkillRelive_SC::_internal_relivetime() const {
  return relivetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UserSkillRelive_SC::relivetime() const {
  // @@protoc_insertion_point(field_get:magic.MSG_Ret_UserSkillRelive_SC.relivetime)
  return _internal_relivetime();
}
inline void MSG_Ret_UserSkillRelive_SC::_internal_set_relivetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  relivetime_ = value;
}
inline void MSG_Ret_UserSkillRelive_SC::set_relivetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_relivetime(value);
  // @@protoc_insertion_point(field_set:magic.MSG_Ret_UserSkillRelive_SC.relivetime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace magic

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::magic::ATTACKRESULT> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::magic::ATTACKRESULT>() {
  return ::magic::ATTACKRESULT_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_magic_5fmsg_2eproto
