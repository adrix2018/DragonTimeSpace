// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rune.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_rune_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_rune_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_rune_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_rune_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[21]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rune_2eproto;
namespace rune {
class MSG_Req_ActiveRune_CS;
class MSG_Req_ActiveRune_CSDefaultTypeInternal;
extern MSG_Req_ActiveRune_CSDefaultTypeInternal _MSG_Req_ActiveRune_CS_default_instance_;
class MSG_Req_InsertRune_CS;
class MSG_Req_InsertRune_CSDefaultTypeInternal;
extern MSG_Req_InsertRune_CSDefaultTypeInternal _MSG_Req_InsertRune_CS_default_instance_;
class MSG_Req_LevelupRune_CS;
class MSG_Req_LevelupRune_CSDefaultTypeInternal;
extern MSG_Req_LevelupRune_CSDefaultTypeInternal _MSG_Req_LevelupRune_CS_default_instance_;
class MSG_Req_RuneActiveData_CS;
class MSG_Req_RuneActiveData_CSDefaultTypeInternal;
extern MSG_Req_RuneActiveData_CSDefaultTypeInternal _MSG_Req_RuneActiveData_CS_default_instance_;
class MSG_Req_RunePageData_CS;
class MSG_Req_RunePageData_CSDefaultTypeInternal;
extern MSG_Req_RunePageData_CSDefaultTypeInternal _MSG_Req_RunePageData_CS_default_instance_;
class MSG_Req_RunePageNameModify_CS;
class MSG_Req_RunePageNameModify_CSDefaultTypeInternal;
extern MSG_Req_RunePageNameModify_CSDefaultTypeInternal _MSG_Req_RunePageNameModify_CS_default_instance_;
class MSG_Req_RuneSwitch_CS;
class MSG_Req_RuneSwitch_CSDefaultTypeInternal;
extern MSG_Req_RuneSwitch_CSDefaultTypeInternal _MSG_Req_RuneSwitch_CS_default_instance_;
class MSG_Req_UnloadAllRune_CS;
class MSG_Req_UnloadAllRune_CSDefaultTypeInternal;
extern MSG_Req_UnloadAllRune_CSDefaultTypeInternal _MSG_Req_UnloadAllRune_CS_default_instance_;
class MSG_Req_UnloadRune_CS;
class MSG_Req_UnloadRune_CSDefaultTypeInternal;
extern MSG_Req_UnloadRune_CSDefaultTypeInternal _MSG_Req_UnloadRune_CS_default_instance_;
class MSG_Ret_ActiveRune_SC;
class MSG_Ret_ActiveRune_SCDefaultTypeInternal;
extern MSG_Ret_ActiveRune_SCDefaultTypeInternal _MSG_Ret_ActiveRune_SC_default_instance_;
class MSG_Ret_InsertRune_SC;
class MSG_Ret_InsertRune_SCDefaultTypeInternal;
extern MSG_Ret_InsertRune_SCDefaultTypeInternal _MSG_Ret_InsertRune_SC_default_instance_;
class MSG_Ret_LevelupRune_SC;
class MSG_Ret_LevelupRune_SCDefaultTypeInternal;
extern MSG_Ret_LevelupRune_SCDefaultTypeInternal _MSG_Ret_LevelupRune_SC_default_instance_;
class MSG_Ret_RuneActiveData_SC;
class MSG_Ret_RuneActiveData_SCDefaultTypeInternal;
extern MSG_Ret_RuneActiveData_SCDefaultTypeInternal _MSG_Ret_RuneActiveData_SC_default_instance_;
class MSG_Ret_RunePageData_SC;
class MSG_Ret_RunePageData_SCDefaultTypeInternal;
extern MSG_Ret_RunePageData_SCDefaultTypeInternal _MSG_Ret_RunePageData_SC_default_instance_;
class MSG_Ret_RunePageNameModify_SC;
class MSG_Ret_RunePageNameModify_SCDefaultTypeInternal;
extern MSG_Ret_RunePageNameModify_SCDefaultTypeInternal _MSG_Ret_RunePageNameModify_SC_default_instance_;
class MSG_Ret_RuneSwitch_SC;
class MSG_Ret_RuneSwitch_SCDefaultTypeInternal;
extern MSG_Ret_RuneSwitch_SCDefaultTypeInternal _MSG_Ret_RuneSwitch_SC_default_instance_;
class MSG_Ret_UnloadAllRune_SC;
class MSG_Ret_UnloadAllRune_SCDefaultTypeInternal;
extern MSG_Ret_UnloadAllRune_SCDefaultTypeInternal _MSG_Ret_UnloadAllRune_SC_default_instance_;
class MSG_Ret_UnloadRune_SC;
class MSG_Ret_UnloadRune_SCDefaultTypeInternal;
extern MSG_Ret_UnloadRune_SCDefaultTypeInternal _MSG_Ret_UnloadRune_SC_default_instance_;
class RuneGrooveItem;
class RuneGrooveItemDefaultTypeInternal;
extern RuneGrooveItemDefaultTypeInternal _RuneGrooveItem_default_instance_;
class RuneItem;
class RuneItemDefaultTypeInternal;
extern RuneItemDefaultTypeInternal _RuneItem_default_instance_;
class RunePageData;
class RunePageDataDefaultTypeInternal;
extern RunePageDataDefaultTypeInternal _RunePageData_default_instance_;
}  // namespace rune
PROTOBUF_NAMESPACE_OPEN
template<> ::rune::MSG_Req_ActiveRune_CS* Arena::CreateMaybeMessage<::rune::MSG_Req_ActiveRune_CS>(Arena*);
template<> ::rune::MSG_Req_InsertRune_CS* Arena::CreateMaybeMessage<::rune::MSG_Req_InsertRune_CS>(Arena*);
template<> ::rune::MSG_Req_LevelupRune_CS* Arena::CreateMaybeMessage<::rune::MSG_Req_LevelupRune_CS>(Arena*);
template<> ::rune::MSG_Req_RuneActiveData_CS* Arena::CreateMaybeMessage<::rune::MSG_Req_RuneActiveData_CS>(Arena*);
template<> ::rune::MSG_Req_RunePageData_CS* Arena::CreateMaybeMessage<::rune::MSG_Req_RunePageData_CS>(Arena*);
template<> ::rune::MSG_Req_RunePageNameModify_CS* Arena::CreateMaybeMessage<::rune::MSG_Req_RunePageNameModify_CS>(Arena*);
template<> ::rune::MSG_Req_RuneSwitch_CS* Arena::CreateMaybeMessage<::rune::MSG_Req_RuneSwitch_CS>(Arena*);
template<> ::rune::MSG_Req_UnloadAllRune_CS* Arena::CreateMaybeMessage<::rune::MSG_Req_UnloadAllRune_CS>(Arena*);
template<> ::rune::MSG_Req_UnloadRune_CS* Arena::CreateMaybeMessage<::rune::MSG_Req_UnloadRune_CS>(Arena*);
template<> ::rune::MSG_Ret_ActiveRune_SC* Arena::CreateMaybeMessage<::rune::MSG_Ret_ActiveRune_SC>(Arena*);
template<> ::rune::MSG_Ret_InsertRune_SC* Arena::CreateMaybeMessage<::rune::MSG_Ret_InsertRune_SC>(Arena*);
template<> ::rune::MSG_Ret_LevelupRune_SC* Arena::CreateMaybeMessage<::rune::MSG_Ret_LevelupRune_SC>(Arena*);
template<> ::rune::MSG_Ret_RuneActiveData_SC* Arena::CreateMaybeMessage<::rune::MSG_Ret_RuneActiveData_SC>(Arena*);
template<> ::rune::MSG_Ret_RunePageData_SC* Arena::CreateMaybeMessage<::rune::MSG_Ret_RunePageData_SC>(Arena*);
template<> ::rune::MSG_Ret_RunePageNameModify_SC* Arena::CreateMaybeMessage<::rune::MSG_Ret_RunePageNameModify_SC>(Arena*);
template<> ::rune::MSG_Ret_RuneSwitch_SC* Arena::CreateMaybeMessage<::rune::MSG_Ret_RuneSwitch_SC>(Arena*);
template<> ::rune::MSG_Ret_UnloadAllRune_SC* Arena::CreateMaybeMessage<::rune::MSG_Ret_UnloadAllRune_SC>(Arena*);
template<> ::rune::MSG_Ret_UnloadRune_SC* Arena::CreateMaybeMessage<::rune::MSG_Ret_UnloadRune_SC>(Arena*);
template<> ::rune::RuneGrooveItem* Arena::CreateMaybeMessage<::rune::RuneGrooveItem>(Arena*);
template<> ::rune::RuneItem* Arena::CreateMaybeMessage<::rune::RuneItem>(Arena*);
template<> ::rune::RunePageData* Arena::CreateMaybeMessage<::rune::RunePageData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace rune {

enum RuneType : int {
  RUNE_TYPE_NONE = 0,
  RUNE_TYPE_CIRCLE = 1,
  RUNE_TYPE_DIAMOND = 2,
  RUNE_TYPE_TRIANGLE = 3,
  RUNE_TYPE_SQUARE = 4,
  RUNE_TYPE_MAX = 5
};
bool RuneType_IsValid(int value);
constexpr RuneType RuneType_MIN = RUNE_TYPE_NONE;
constexpr RuneType RuneType_MAX = RUNE_TYPE_MAX;
constexpr int RuneType_ARRAYSIZE = RuneType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RuneType_descriptor();
template<typename T>
inline const std::string& RuneType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RuneType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RuneType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RuneType_descriptor(), enum_t_value);
}
inline bool RuneType_Parse(
    const std::string& name, RuneType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RuneType>(
    RuneType_descriptor(), name, value);
}
enum RuneEffect : int {
  RUNE_EFFECT_NONE = 0,
  RUNE_EFFECT_MAXHP = 1,
  RUNE_EFFECT_PDEF = 2,
  RUNE_EFFECT_MDEF = 3,
  RUNE_EFFECT_PDAM = 4,
  RUNE_EFFECT_MDAM = 5,
  RUNE_EFFECT_BANG = 6,
  RUNE_EFFECT_BLOCK = 7,
  RUNE_EFFECT_TOUGHNESS = 8,
  RUNE_EFFECT_PENETRATE = 9,
  RUNE_EFFECT_MAX = 10
};
bool RuneEffect_IsValid(int value);
constexpr RuneEffect RuneEffect_MIN = RUNE_EFFECT_NONE;
constexpr RuneEffect RuneEffect_MAX = RUNE_EFFECT_MAX;
constexpr int RuneEffect_ARRAYSIZE = RuneEffect_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RuneEffect_descriptor();
template<typename T>
inline const std::string& RuneEffect_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RuneEffect>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RuneEffect_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RuneEffect_descriptor(), enum_t_value);
}
inline bool RuneEffect_Parse(
    const std::string& name, RuneEffect* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RuneEffect>(
    RuneEffect_descriptor(), name, value);
}
enum RuneQuality : int {
  RUNE_QUALITY_NONE = 0,
  RUNE_QUALITY_WHITE = 1,
  RUNE_QUALITY_GREEN = 2,
  RUNE_QUALITY_BLUE = 3,
  RUNE_QUALITY_PURPLE = 4,
  RUNE_QUALITY_MAX = 5
};
bool RuneQuality_IsValid(int value);
constexpr RuneQuality RuneQuality_MIN = RUNE_QUALITY_NONE;
constexpr RuneQuality RuneQuality_MAX = RUNE_QUALITY_MAX;
constexpr int RuneQuality_ARRAYSIZE = RuneQuality_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RuneQuality_descriptor();
template<typename T>
inline const std::string& RuneQuality_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RuneQuality>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RuneQuality_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RuneQuality_descriptor(), enum_t_value);
}
inline bool RuneQuality_Parse(
    const std::string& name, RuneQuality* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RuneQuality>(
    RuneQuality_descriptor(), name, value);
}
// ===================================================================

class RuneItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.RuneItem) */ {
 public:
  RuneItem();
  virtual ~RuneItem();

  RuneItem(const RuneItem& from);
  RuneItem(RuneItem&& from) noexcept
    : RuneItem() {
    *this = ::std::move(from);
  }

  inline RuneItem& operator=(const RuneItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline RuneItem& operator=(RuneItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RuneItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RuneItem* internal_default_instance() {
    return reinterpret_cast<const RuneItem*>(
               &_RuneItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RuneItem& a, RuneItem& b) {
    a.Swap(&b);
  }
  inline void Swap(RuneItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RuneItem* New() const final {
    return CreateMaybeMessage<RuneItem>(nullptr);
  }

  RuneItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RuneItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RuneItem& from);
  void MergeFrom(const RuneItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RuneItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.RuneItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUniqidFieldNumber = 1,
    kBaseidFieldNumber = 2,
    kLevelFieldNumber = 3,
    kExpFieldNumber = 4,
    kInsertcountFieldNumber = 5,
  };
  // optional uint32 uniqid = 1;
  bool has_uniqid() const;
  private:
  bool _internal_has_uniqid() const;
  public:
  void clear_uniqid();
  ::PROTOBUF_NAMESPACE_ID::uint32 uniqid() const;
  void set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uniqid() const;
  void _internal_set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 baseid = 2;
  bool has_baseid() const;
  private:
  bool _internal_has_baseid() const;
  public:
  void clear_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid() const;
  void set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseid() const;
  void _internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 3;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 exp = 4;
  bool has_exp() const;
  private:
  bool _internal_has_exp() const;
  public:
  void clear_exp();
  ::PROTOBUF_NAMESPACE_ID::uint32 exp() const;
  void set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_exp() const;
  void _internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 insertcount = 5;
  bool has_insertcount() const;
  private:
  bool _internal_has_insertcount() const;
  public:
  void clear_insertcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 insertcount() const;
  void set_insertcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_insertcount() const;
  void _internal_set_insertcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rune.RuneItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uniqid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 exp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 insertcount_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class RuneGrooveItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.RuneGrooveItem) */ {
 public:
  RuneGrooveItem();
  virtual ~RuneGrooveItem();

  RuneGrooveItem(const RuneGrooveItem& from);
  RuneGrooveItem(RuneGrooveItem&& from) noexcept
    : RuneGrooveItem() {
    *this = ::std::move(from);
  }

  inline RuneGrooveItem& operator=(const RuneGrooveItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline RuneGrooveItem& operator=(RuneGrooveItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RuneGrooveItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RuneGrooveItem* internal_default_instance() {
    return reinterpret_cast<const RuneGrooveItem*>(
               &_RuneGrooveItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RuneGrooveItem& a, RuneGrooveItem& b) {
    a.Swap(&b);
  }
  inline void Swap(RuneGrooveItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RuneGrooveItem* New() const final {
    return CreateMaybeMessage<RuneGrooveItem>(nullptr);
  }

  RuneGrooveItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RuneGrooveItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RuneGrooveItem& from);
  void MergeFrom(const RuneGrooveItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RuneGrooveItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.RuneGrooveItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUniqidFieldNumber = 1,
    kPosidFieldNumber = 2,
  };
  // optional uint32 uniqid = 1;
  bool has_uniqid() const;
  private:
  bool _internal_has_uniqid() const;
  public:
  void clear_uniqid();
  ::PROTOBUF_NAMESPACE_ID::uint32 uniqid() const;
  void set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uniqid() const;
  void _internal_set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 posid = 2;
  bool has_posid() const;
  private:
  bool _internal_has_posid() const;
  public:
  void clear_posid();
  ::PROTOBUF_NAMESPACE_ID::uint32 posid() const;
  void set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_posid() const;
  void _internal_set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rune.RuneGrooveItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uniqid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 posid_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class RunePageData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.RunePageData) */ {
 public:
  RunePageData();
  virtual ~RunePageData();

  RunePageData(const RunePageData& from);
  RunePageData(RunePageData&& from) noexcept
    : RunePageData() {
    *this = ::std::move(from);
  }

  inline RunePageData& operator=(const RunePageData& from) {
    CopyFrom(from);
    return *this;
  }
  inline RunePageData& operator=(RunePageData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RunePageData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunePageData* internal_default_instance() {
    return reinterpret_cast<const RunePageData*>(
               &_RunePageData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RunePageData& a, RunePageData& b) {
    a.Swap(&b);
  }
  inline void Swap(RunePageData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RunePageData* New() const final {
    return CreateMaybeMessage<RunePageData>(nullptr);
  }

  RunePageData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RunePageData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RunePageData& from);
  void MergeFrom(const RunePageData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunePageData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.RunePageData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
    kPagenameFieldNumber = 3,
    kPageidFieldNumber = 2,
    kScoreFieldNumber = 4,
  };
  // repeated .rune.RuneGrooveItem item = 1;
  int item_size() const;
  private:
  int _internal_item_size() const;
  public:
  void clear_item();
  ::rune::RuneGrooveItem* mutable_item(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RuneGrooveItem >*
      mutable_item();
  private:
  const ::rune::RuneGrooveItem& _internal_item(int index) const;
  ::rune::RuneGrooveItem* _internal_add_item();
  public:
  const ::rune::RuneGrooveItem& item(int index) const;
  ::rune::RuneGrooveItem* add_item();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RuneGrooveItem >&
      item() const;

  // optional string pagename = 3;
  bool has_pagename() const;
  private:
  bool _internal_has_pagename() const;
  public:
  void clear_pagename();
  const std::string& pagename() const;
  void set_pagename(const std::string& value);
  void set_pagename(std::string&& value);
  void set_pagename(const char* value);
  void set_pagename(const char* value, size_t size);
  std::string* mutable_pagename();
  std::string* release_pagename();
  void set_allocated_pagename(std::string* pagename);
  private:
  const std::string& _internal_pagename() const;
  void _internal_set_pagename(const std::string& value);
  std::string* _internal_mutable_pagename();
  public:

  // optional uint32 pageid = 2;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 score = 4;
  bool has_score() const;
  private:
  bool _internal_has_score() const;
  public:
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rune.RunePageData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RuneGrooveItem > item_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pagename_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 score_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_RuneActiveData_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Req_RuneActiveData_CS) */ {
 public:
  MSG_Req_RuneActiveData_CS();
  virtual ~MSG_Req_RuneActiveData_CS();

  MSG_Req_RuneActiveData_CS(const MSG_Req_RuneActiveData_CS& from);
  MSG_Req_RuneActiveData_CS(MSG_Req_RuneActiveData_CS&& from) noexcept
    : MSG_Req_RuneActiveData_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_RuneActiveData_CS& operator=(const MSG_Req_RuneActiveData_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_RuneActiveData_CS& operator=(MSG_Req_RuneActiveData_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_RuneActiveData_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_RuneActiveData_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_RuneActiveData_CS*>(
               &_MSG_Req_RuneActiveData_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MSG_Req_RuneActiveData_CS& a, MSG_Req_RuneActiveData_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_RuneActiveData_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_RuneActiveData_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_RuneActiveData_CS>(nullptr);
  }

  MSG_Req_RuneActiveData_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_RuneActiveData_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_RuneActiveData_CS& from);
  void MergeFrom(const MSG_Req_RuneActiveData_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_RuneActiveData_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Req_RuneActiveData_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rune.MSG_Req_RuneActiveData_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_RuneActiveData_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Ret_RuneActiveData_SC) */ {
 public:
  MSG_Ret_RuneActiveData_SC();
  virtual ~MSG_Ret_RuneActiveData_SC();

  MSG_Ret_RuneActiveData_SC(const MSG_Ret_RuneActiveData_SC& from);
  MSG_Ret_RuneActiveData_SC(MSG_Ret_RuneActiveData_SC&& from) noexcept
    : MSG_Ret_RuneActiveData_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_RuneActiveData_SC& operator=(const MSG_Ret_RuneActiveData_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_RuneActiveData_SC& operator=(MSG_Ret_RuneActiveData_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_RuneActiveData_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_RuneActiveData_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_RuneActiveData_SC*>(
               &_MSG_Ret_RuneActiveData_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MSG_Ret_RuneActiveData_SC& a, MSG_Ret_RuneActiveData_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_RuneActiveData_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_RuneActiveData_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_RuneActiveData_SC>(nullptr);
  }

  MSG_Ret_RuneActiveData_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_RuneActiveData_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_RuneActiveData_SC& from);
  void MergeFrom(const MSG_Ret_RuneActiveData_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_RuneActiveData_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Ret_RuneActiveData_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuneitemsFieldNumber = 1,
  };
  // repeated .rune.RuneItem runeitems = 1;
  int runeitems_size() const;
  private:
  int _internal_runeitems_size() const;
  public:
  void clear_runeitems();
  ::rune::RuneItem* mutable_runeitems(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RuneItem >*
      mutable_runeitems();
  private:
  const ::rune::RuneItem& _internal_runeitems(int index) const;
  ::rune::RuneItem* _internal_add_runeitems();
  public:
  const ::rune::RuneItem& runeitems(int index) const;
  ::rune::RuneItem* add_runeitems();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RuneItem >&
      runeitems() const;

  // @@protoc_insertion_point(class_scope:rune.MSG_Ret_RuneActiveData_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RuneItem > runeitems_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_RunePageData_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Req_RunePageData_CS) */ {
 public:
  MSG_Req_RunePageData_CS();
  virtual ~MSG_Req_RunePageData_CS();

  MSG_Req_RunePageData_CS(const MSG_Req_RunePageData_CS& from);
  MSG_Req_RunePageData_CS(MSG_Req_RunePageData_CS&& from) noexcept
    : MSG_Req_RunePageData_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_RunePageData_CS& operator=(const MSG_Req_RunePageData_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_RunePageData_CS& operator=(MSG_Req_RunePageData_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_RunePageData_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_RunePageData_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_RunePageData_CS*>(
               &_MSG_Req_RunePageData_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MSG_Req_RunePageData_CS& a, MSG_Req_RunePageData_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_RunePageData_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_RunePageData_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_RunePageData_CS>(nullptr);
  }

  MSG_Req_RunePageData_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_RunePageData_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_RunePageData_CS& from);
  void MergeFrom(const MSG_Req_RunePageData_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_RunePageData_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Req_RunePageData_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rune.MSG_Req_RunePageData_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_RunePageData_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Ret_RunePageData_SC) */ {
 public:
  MSG_Ret_RunePageData_SC();
  virtual ~MSG_Ret_RunePageData_SC();

  MSG_Ret_RunePageData_SC(const MSG_Ret_RunePageData_SC& from);
  MSG_Ret_RunePageData_SC(MSG_Ret_RunePageData_SC&& from) noexcept
    : MSG_Ret_RunePageData_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_RunePageData_SC& operator=(const MSG_Ret_RunePageData_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_RunePageData_SC& operator=(MSG_Ret_RunePageData_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_RunePageData_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_RunePageData_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_RunePageData_SC*>(
               &_MSG_Ret_RunePageData_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MSG_Ret_RunePageData_SC& a, MSG_Ret_RunePageData_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_RunePageData_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_RunePageData_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_RunePageData_SC>(nullptr);
  }

  MSG_Ret_RunePageData_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_RunePageData_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_RunePageData_SC& from);
  void MergeFrom(const MSG_Ret_RunePageData_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_RunePageData_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Ret_RunePageData_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPagedatasFieldNumber = 1,
  };
  // repeated .rune.RunePageData pagedatas = 1;
  int pagedatas_size() const;
  private:
  int _internal_pagedatas_size() const;
  public:
  void clear_pagedatas();
  ::rune::RunePageData* mutable_pagedatas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RunePageData >*
      mutable_pagedatas();
  private:
  const ::rune::RunePageData& _internal_pagedatas(int index) const;
  ::rune::RunePageData* _internal_add_pagedatas();
  public:
  const ::rune::RunePageData& pagedatas(int index) const;
  ::rune::RunePageData* add_pagedatas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RunePageData >&
      pagedatas() const;

  // @@protoc_insertion_point(class_scope:rune.MSG_Ret_RunePageData_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RunePageData > pagedatas_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_ActiveRune_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Req_ActiveRune_CS) */ {
 public:
  MSG_Req_ActiveRune_CS();
  virtual ~MSG_Req_ActiveRune_CS();

  MSG_Req_ActiveRune_CS(const MSG_Req_ActiveRune_CS& from);
  MSG_Req_ActiveRune_CS(MSG_Req_ActiveRune_CS&& from) noexcept
    : MSG_Req_ActiveRune_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_ActiveRune_CS& operator=(const MSG_Req_ActiveRune_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_ActiveRune_CS& operator=(MSG_Req_ActiveRune_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_ActiveRune_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_ActiveRune_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_ActiveRune_CS*>(
               &_MSG_Req_ActiveRune_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_Req_ActiveRune_CS& a, MSG_Req_ActiveRune_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_ActiveRune_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_ActiveRune_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_ActiveRune_CS>(nullptr);
  }

  MSG_Req_ActiveRune_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_ActiveRune_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_ActiveRune_CS& from);
  void MergeFrom(const MSG_Req_ActiveRune_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_ActiveRune_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Req_ActiveRune_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Req_ActiveRune_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_ActiveRune_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Ret_ActiveRune_SC) */ {
 public:
  MSG_Ret_ActiveRune_SC();
  virtual ~MSG_Ret_ActiveRune_SC();

  MSG_Ret_ActiveRune_SC(const MSG_Ret_ActiveRune_SC& from);
  MSG_Ret_ActiveRune_SC(MSG_Ret_ActiveRune_SC&& from) noexcept
    : MSG_Ret_ActiveRune_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_ActiveRune_SC& operator=(const MSG_Ret_ActiveRune_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_ActiveRune_SC& operator=(MSG_Ret_ActiveRune_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_ActiveRune_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_ActiveRune_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_ActiveRune_SC*>(
               &_MSG_Ret_ActiveRune_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_Ret_ActiveRune_SC& a, MSG_Ret_ActiveRune_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_ActiveRune_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_ActiveRune_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_ActiveRune_SC>(nullptr);
  }

  MSG_Ret_ActiveRune_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_ActiveRune_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_ActiveRune_SC& from);
  void MergeFrom(const MSG_Ret_ActiveRune_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_ActiveRune_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Ret_ActiveRune_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuneitemFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // optional .rune.RuneItem runeitem = 1;
  bool has_runeitem() const;
  private:
  bool _internal_has_runeitem() const;
  public:
  void clear_runeitem();
  const ::rune::RuneItem& runeitem() const;
  ::rune::RuneItem* release_runeitem();
  ::rune::RuneItem* mutable_runeitem();
  void set_allocated_runeitem(::rune::RuneItem* runeitem);
  private:
  const ::rune::RuneItem& _internal_runeitem() const;
  ::rune::RuneItem* _internal_mutable_runeitem();
  public:

  // optional bool result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Ret_ActiveRune_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::rune::RuneItem* runeitem_;
  bool result_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_InsertRune_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Req_InsertRune_CS) */ {
 public:
  MSG_Req_InsertRune_CS();
  virtual ~MSG_Req_InsertRune_CS();

  MSG_Req_InsertRune_CS(const MSG_Req_InsertRune_CS& from);
  MSG_Req_InsertRune_CS(MSG_Req_InsertRune_CS&& from) noexcept
    : MSG_Req_InsertRune_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_InsertRune_CS& operator=(const MSG_Req_InsertRune_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_InsertRune_CS& operator=(MSG_Req_InsertRune_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_InsertRune_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_InsertRune_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_InsertRune_CS*>(
               &_MSG_Req_InsertRune_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_Req_InsertRune_CS& a, MSG_Req_InsertRune_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_InsertRune_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_InsertRune_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_InsertRune_CS>(nullptr);
  }

  MSG_Req_InsertRune_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_InsertRune_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_InsertRune_CS& from);
  void MergeFrom(const MSG_Req_InsertRune_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_InsertRune_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Req_InsertRune_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUniqidFieldNumber = 1,
    kPosidFieldNumber = 2,
    kPageidFieldNumber = 3,
  };
  // optional uint32 uniqid = 1;
  bool has_uniqid() const;
  private:
  bool _internal_has_uniqid() const;
  public:
  void clear_uniqid();
  ::PROTOBUF_NAMESPACE_ID::uint32 uniqid() const;
  void set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uniqid() const;
  void _internal_set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 posid = 2;
  bool has_posid() const;
  private:
  bool _internal_has_posid() const;
  public:
  void clear_posid();
  ::PROTOBUF_NAMESPACE_ID::uint32 posid() const;
  void set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_posid() const;
  void _internal_set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pageid = 3;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Req_InsertRune_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uniqid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 posid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_InsertRune_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Ret_InsertRune_SC) */ {
 public:
  MSG_Ret_InsertRune_SC();
  virtual ~MSG_Ret_InsertRune_SC();

  MSG_Ret_InsertRune_SC(const MSG_Ret_InsertRune_SC& from);
  MSG_Ret_InsertRune_SC(MSG_Ret_InsertRune_SC&& from) noexcept
    : MSG_Ret_InsertRune_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_InsertRune_SC& operator=(const MSG_Ret_InsertRune_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_InsertRune_SC& operator=(MSG_Ret_InsertRune_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_InsertRune_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_InsertRune_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_InsertRune_SC*>(
               &_MSG_Ret_InsertRune_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MSG_Ret_InsertRune_SC& a, MSG_Ret_InsertRune_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_InsertRune_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_InsertRune_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_InsertRune_SC>(nullptr);
  }

  MSG_Ret_InsertRune_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_InsertRune_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_InsertRune_SC& from);
  void MergeFrom(const MSG_Ret_InsertRune_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_InsertRune_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Ret_InsertRune_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageitemFieldNumber = 1,
    kPageidFieldNumber = 2,
    kScoreFieldNumber = 3,
    kResultFieldNumber = 4,
  };
  // optional .rune.RuneGrooveItem pageitem = 1;
  bool has_pageitem() const;
  private:
  bool _internal_has_pageitem() const;
  public:
  void clear_pageitem();
  const ::rune::RuneGrooveItem& pageitem() const;
  ::rune::RuneGrooveItem* release_pageitem();
  ::rune::RuneGrooveItem* mutable_pageitem();
  void set_allocated_pageitem(::rune::RuneGrooveItem* pageitem);
  private:
  const ::rune::RuneGrooveItem& _internal_pageitem() const;
  ::rune::RuneGrooveItem* _internal_mutable_pageitem();
  public:

  // optional uint32 pageid = 2;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 score = 3;
  bool has_score() const;
  private:
  bool _internal_has_score() const;
  public:
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool result = 4;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Ret_InsertRune_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::rune::RuneGrooveItem* pageitem_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 score_;
  bool result_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_UnloadRune_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Req_UnloadRune_CS) */ {
 public:
  MSG_Req_UnloadRune_CS();
  virtual ~MSG_Req_UnloadRune_CS();

  MSG_Req_UnloadRune_CS(const MSG_Req_UnloadRune_CS& from);
  MSG_Req_UnloadRune_CS(MSG_Req_UnloadRune_CS&& from) noexcept
    : MSG_Req_UnloadRune_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_UnloadRune_CS& operator=(const MSG_Req_UnloadRune_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_UnloadRune_CS& operator=(MSG_Req_UnloadRune_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_UnloadRune_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_UnloadRune_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_UnloadRune_CS*>(
               &_MSG_Req_UnloadRune_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_Req_UnloadRune_CS& a, MSG_Req_UnloadRune_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_UnloadRune_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_UnloadRune_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_UnloadRune_CS>(nullptr);
  }

  MSG_Req_UnloadRune_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_UnloadRune_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_UnloadRune_CS& from);
  void MergeFrom(const MSG_Req_UnloadRune_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_UnloadRune_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Req_UnloadRune_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosidFieldNumber = 1,
    kPageidFieldNumber = 2,
  };
  // optional uint32 posid = 1;
  bool has_posid() const;
  private:
  bool _internal_has_posid() const;
  public:
  void clear_posid();
  ::PROTOBUF_NAMESPACE_ID::uint32 posid() const;
  void set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_posid() const;
  void _internal_set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pageid = 2;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Req_UnloadRune_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 posid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_UnloadRune_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Ret_UnloadRune_SC) */ {
 public:
  MSG_Ret_UnloadRune_SC();
  virtual ~MSG_Ret_UnloadRune_SC();

  MSG_Ret_UnloadRune_SC(const MSG_Ret_UnloadRune_SC& from);
  MSG_Ret_UnloadRune_SC(MSG_Ret_UnloadRune_SC&& from) noexcept
    : MSG_Ret_UnloadRune_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_UnloadRune_SC& operator=(const MSG_Ret_UnloadRune_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_UnloadRune_SC& operator=(MSG_Ret_UnloadRune_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_UnloadRune_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_UnloadRune_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_UnloadRune_SC*>(
               &_MSG_Ret_UnloadRune_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_Ret_UnloadRune_SC& a, MSG_Ret_UnloadRune_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_UnloadRune_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_UnloadRune_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_UnloadRune_SC>(nullptr);
  }

  MSG_Ret_UnloadRune_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_UnloadRune_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_UnloadRune_SC& from);
  void MergeFrom(const MSG_Ret_UnloadRune_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_UnloadRune_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Ret_UnloadRune_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosidFieldNumber = 1,
    kPageidFieldNumber = 2,
    kScoreFieldNumber = 3,
    kResultFieldNumber = 4,
  };
  // optional uint32 posid = 1;
  bool has_posid() const;
  private:
  bool _internal_has_posid() const;
  public:
  void clear_posid();
  ::PROTOBUF_NAMESPACE_ID::uint32 posid() const;
  void set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_posid() const;
  void _internal_set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pageid = 2;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 score = 3;
  bool has_score() const;
  private:
  bool _internal_has_score() const;
  public:
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool result = 4;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Ret_UnloadRune_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 posid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 score_;
  bool result_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_UnloadAllRune_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Req_UnloadAllRune_CS) */ {
 public:
  MSG_Req_UnloadAllRune_CS();
  virtual ~MSG_Req_UnloadAllRune_CS();

  MSG_Req_UnloadAllRune_CS(const MSG_Req_UnloadAllRune_CS& from);
  MSG_Req_UnloadAllRune_CS(MSG_Req_UnloadAllRune_CS&& from) noexcept
    : MSG_Req_UnloadAllRune_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_UnloadAllRune_CS& operator=(const MSG_Req_UnloadAllRune_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_UnloadAllRune_CS& operator=(MSG_Req_UnloadAllRune_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_UnloadAllRune_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_UnloadAllRune_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_UnloadAllRune_CS*>(
               &_MSG_Req_UnloadAllRune_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_Req_UnloadAllRune_CS& a, MSG_Req_UnloadAllRune_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_UnloadAllRune_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_UnloadAllRune_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_UnloadAllRune_CS>(nullptr);
  }

  MSG_Req_UnloadAllRune_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_UnloadAllRune_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_UnloadAllRune_CS& from);
  void MergeFrom(const MSG_Req_UnloadAllRune_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_UnloadAllRune_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Req_UnloadAllRune_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageidFieldNumber = 1,
  };
  // optional uint32 pageid = 1;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Req_UnloadAllRune_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_UnloadAllRune_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Ret_UnloadAllRune_SC) */ {
 public:
  MSG_Ret_UnloadAllRune_SC();
  virtual ~MSG_Ret_UnloadAllRune_SC();

  MSG_Ret_UnloadAllRune_SC(const MSG_Ret_UnloadAllRune_SC& from);
  MSG_Ret_UnloadAllRune_SC(MSG_Ret_UnloadAllRune_SC&& from) noexcept
    : MSG_Ret_UnloadAllRune_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_UnloadAllRune_SC& operator=(const MSG_Ret_UnloadAllRune_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_UnloadAllRune_SC& operator=(MSG_Ret_UnloadAllRune_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_UnloadAllRune_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_UnloadAllRune_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_UnloadAllRune_SC*>(
               &_MSG_Ret_UnloadAllRune_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MSG_Ret_UnloadAllRune_SC& a, MSG_Ret_UnloadAllRune_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_UnloadAllRune_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_UnloadAllRune_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_UnloadAllRune_SC>(nullptr);
  }

  MSG_Ret_UnloadAllRune_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_UnloadAllRune_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_UnloadAllRune_SC& from);
  void MergeFrom(const MSG_Ret_UnloadAllRune_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_UnloadAllRune_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Ret_UnloadAllRune_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageidFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // optional uint32 pageid = 1;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Ret_UnloadAllRune_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  bool result_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_LevelupRune_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Req_LevelupRune_CS) */ {
 public:
  MSG_Req_LevelupRune_CS();
  virtual ~MSG_Req_LevelupRune_CS();

  MSG_Req_LevelupRune_CS(const MSG_Req_LevelupRune_CS& from);
  MSG_Req_LevelupRune_CS(MSG_Req_LevelupRune_CS&& from) noexcept
    : MSG_Req_LevelupRune_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_LevelupRune_CS& operator=(const MSG_Req_LevelupRune_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_LevelupRune_CS& operator=(MSG_Req_LevelupRune_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_LevelupRune_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_LevelupRune_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_LevelupRune_CS*>(
               &_MSG_Req_LevelupRune_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MSG_Req_LevelupRune_CS& a, MSG_Req_LevelupRune_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_LevelupRune_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_LevelupRune_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_LevelupRune_CS>(nullptr);
  }

  MSG_Req_LevelupRune_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_LevelupRune_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_LevelupRune_CS& from);
  void MergeFrom(const MSG_Req_LevelupRune_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_LevelupRune_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Req_LevelupRune_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCostuniqidsFieldNumber = 2,
    kCostthisidsFieldNumber = 3,
    kLevelupidFieldNumber = 1,
  };
  // repeated uint32 costuniqids = 2;
  int costuniqids_size() const;
  private:
  int _internal_costuniqids_size() const;
  public:
  void clear_costuniqids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_costuniqids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_costuniqids() const;
  void _internal_add_costuniqids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_costuniqids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 costuniqids(int index) const;
  void set_costuniqids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_costuniqids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      costuniqids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_costuniqids();

  // repeated string costthisids = 3;
  int costthisids_size() const;
  private:
  int _internal_costthisids_size() const;
  public:
  void clear_costthisids();
  const std::string& costthisids(int index) const;
  std::string* mutable_costthisids(int index);
  void set_costthisids(int index, const std::string& value);
  void set_costthisids(int index, std::string&& value);
  void set_costthisids(int index, const char* value);
  void set_costthisids(int index, const char* value, size_t size);
  std::string* add_costthisids();
  void add_costthisids(const std::string& value);
  void add_costthisids(std::string&& value);
  void add_costthisids(const char* value);
  void add_costthisids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& costthisids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_costthisids();
  private:
  const std::string& _internal_costthisids(int index) const;
  std::string* _internal_add_costthisids();
  public:

  // optional uint32 levelupid = 1;
  bool has_levelupid() const;
  private:
  bool _internal_has_levelupid() const;
  public:
  void clear_levelupid();
  ::PROTOBUF_NAMESPACE_ID::uint32 levelupid() const;
  void set_levelupid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_levelupid() const;
  void _internal_set_levelupid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Req_LevelupRune_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > costuniqids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> costthisids_;
  ::PROTOBUF_NAMESPACE_ID::uint32 levelupid_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_LevelupRune_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Ret_LevelupRune_SC) */ {
 public:
  MSG_Ret_LevelupRune_SC();
  virtual ~MSG_Ret_LevelupRune_SC();

  MSG_Ret_LevelupRune_SC(const MSG_Ret_LevelupRune_SC& from);
  MSG_Ret_LevelupRune_SC(MSG_Ret_LevelupRune_SC&& from) noexcept
    : MSG_Ret_LevelupRune_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_LevelupRune_SC& operator=(const MSG_Ret_LevelupRune_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_LevelupRune_SC& operator=(MSG_Ret_LevelupRune_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_LevelupRune_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_LevelupRune_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_LevelupRune_SC*>(
               &_MSG_Ret_LevelupRune_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MSG_Ret_LevelupRune_SC& a, MSG_Ret_LevelupRune_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_LevelupRune_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_LevelupRune_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_LevelupRune_SC>(nullptr);
  }

  MSG_Ret_LevelupRune_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_LevelupRune_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_LevelupRune_SC& from);
  void MergeFrom(const MSG_Ret_LevelupRune_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_LevelupRune_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Ret_LevelupRune_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuneitemFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // optional .rune.RuneItem runeitem = 1;
  bool has_runeitem() const;
  private:
  bool _internal_has_runeitem() const;
  public:
  void clear_runeitem();
  const ::rune::RuneItem& runeitem() const;
  ::rune::RuneItem* release_runeitem();
  ::rune::RuneItem* mutable_runeitem();
  void set_allocated_runeitem(::rune::RuneItem* runeitem);
  private:
  const ::rune::RuneItem& _internal_runeitem() const;
  ::rune::RuneItem* _internal_mutable_runeitem();
  public:

  // optional bool result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Ret_LevelupRune_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::rune::RuneItem* runeitem_;
  bool result_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_RunePageNameModify_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Req_RunePageNameModify_CS) */ {
 public:
  MSG_Req_RunePageNameModify_CS();
  virtual ~MSG_Req_RunePageNameModify_CS();

  MSG_Req_RunePageNameModify_CS(const MSG_Req_RunePageNameModify_CS& from);
  MSG_Req_RunePageNameModify_CS(MSG_Req_RunePageNameModify_CS&& from) noexcept
    : MSG_Req_RunePageNameModify_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_RunePageNameModify_CS& operator=(const MSG_Req_RunePageNameModify_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_RunePageNameModify_CS& operator=(MSG_Req_RunePageNameModify_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_RunePageNameModify_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_RunePageNameModify_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_RunePageNameModify_CS*>(
               &_MSG_Req_RunePageNameModify_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MSG_Req_RunePageNameModify_CS& a, MSG_Req_RunePageNameModify_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_RunePageNameModify_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_RunePageNameModify_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_RunePageNameModify_CS>(nullptr);
  }

  MSG_Req_RunePageNameModify_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_RunePageNameModify_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_RunePageNameModify_CS& from);
  void MergeFrom(const MSG_Req_RunePageNameModify_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_RunePageNameModify_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Req_RunePageNameModify_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPagenameFieldNumber = 2,
    kPageidFieldNumber = 1,
  };
  // optional string pagename = 2;
  bool has_pagename() const;
  private:
  bool _internal_has_pagename() const;
  public:
  void clear_pagename();
  const std::string& pagename() const;
  void set_pagename(const std::string& value);
  void set_pagename(std::string&& value);
  void set_pagename(const char* value);
  void set_pagename(const char* value, size_t size);
  std::string* mutable_pagename();
  std::string* release_pagename();
  void set_allocated_pagename(std::string* pagename);
  private:
  const std::string& _internal_pagename() const;
  void _internal_set_pagename(const std::string& value);
  std::string* _internal_mutable_pagename();
  public:

  // optional uint32 pageid = 1;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Req_RunePageNameModify_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pagename_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_RunePageNameModify_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Ret_RunePageNameModify_SC) */ {
 public:
  MSG_Ret_RunePageNameModify_SC();
  virtual ~MSG_Ret_RunePageNameModify_SC();

  MSG_Ret_RunePageNameModify_SC(const MSG_Ret_RunePageNameModify_SC& from);
  MSG_Ret_RunePageNameModify_SC(MSG_Ret_RunePageNameModify_SC&& from) noexcept
    : MSG_Ret_RunePageNameModify_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_RunePageNameModify_SC& operator=(const MSG_Ret_RunePageNameModify_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_RunePageNameModify_SC& operator=(MSG_Ret_RunePageNameModify_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_RunePageNameModify_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_RunePageNameModify_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_RunePageNameModify_SC*>(
               &_MSG_Ret_RunePageNameModify_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MSG_Ret_RunePageNameModify_SC& a, MSG_Ret_RunePageNameModify_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_RunePageNameModify_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_RunePageNameModify_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_RunePageNameModify_SC>(nullptr);
  }

  MSG_Ret_RunePageNameModify_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_RunePageNameModify_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_RunePageNameModify_SC& from);
  void MergeFrom(const MSG_Ret_RunePageNameModify_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_RunePageNameModify_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Ret_RunePageNameModify_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPagenameFieldNumber = 2,
    kPageidFieldNumber = 1,
    kResultFieldNumber = 3,
  };
  // optional string pagename = 2;
  bool has_pagename() const;
  private:
  bool _internal_has_pagename() const;
  public:
  void clear_pagename();
  const std::string& pagename() const;
  void set_pagename(const std::string& value);
  void set_pagename(std::string&& value);
  void set_pagename(const char* value);
  void set_pagename(const char* value, size_t size);
  std::string* mutable_pagename();
  std::string* release_pagename();
  void set_allocated_pagename(std::string* pagename);
  private:
  const std::string& _internal_pagename() const;
  void _internal_set_pagename(const std::string& value);
  std::string* _internal_mutable_pagename();
  public:

  // optional uint32 pageid = 1;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool result = 3;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Ret_RunePageNameModify_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pagename_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  bool result_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_RuneSwitch_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Req_RuneSwitch_CS) */ {
 public:
  MSG_Req_RuneSwitch_CS();
  virtual ~MSG_Req_RuneSwitch_CS();

  MSG_Req_RuneSwitch_CS(const MSG_Req_RuneSwitch_CS& from);
  MSG_Req_RuneSwitch_CS(MSG_Req_RuneSwitch_CS&& from) noexcept
    : MSG_Req_RuneSwitch_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_RuneSwitch_CS& operator=(const MSG_Req_RuneSwitch_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_RuneSwitch_CS& operator=(MSG_Req_RuneSwitch_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_RuneSwitch_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_RuneSwitch_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_RuneSwitch_CS*>(
               &_MSG_Req_RuneSwitch_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MSG_Req_RuneSwitch_CS& a, MSG_Req_RuneSwitch_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_RuneSwitch_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_RuneSwitch_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_RuneSwitch_CS>(nullptr);
  }

  MSG_Req_RuneSwitch_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_RuneSwitch_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_RuneSwitch_CS& from);
  void MergeFrom(const MSG_Req_RuneSwitch_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_RuneSwitch_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Req_RuneSwitch_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 2,
    kPageidFieldNumber = 1,
  };
  // optional string herothisid = 2;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  const std::string& herothisid() const;
  void set_herothisid(const std::string& value);
  void set_herothisid(std::string&& value);
  void set_herothisid(const char* value);
  void set_herothisid(const char* value, size_t size);
  std::string* mutable_herothisid();
  std::string* release_herothisid();
  void set_allocated_herothisid(std::string* herothisid);
  private:
  const std::string& _internal_herothisid() const;
  void _internal_set_herothisid(const std::string& value);
  std::string* _internal_mutable_herothisid();
  public:

  // optional uint32 pageid = 1;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Req_RuneSwitch_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herothisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  friend struct ::TableStruct_rune_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_RuneSwitch_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rune.MSG_Ret_RuneSwitch_SC) */ {
 public:
  MSG_Ret_RuneSwitch_SC();
  virtual ~MSG_Ret_RuneSwitch_SC();

  MSG_Ret_RuneSwitch_SC(const MSG_Ret_RuneSwitch_SC& from);
  MSG_Ret_RuneSwitch_SC(MSG_Ret_RuneSwitch_SC&& from) noexcept
    : MSG_Ret_RuneSwitch_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_RuneSwitch_SC& operator=(const MSG_Ret_RuneSwitch_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_RuneSwitch_SC& operator=(MSG_Ret_RuneSwitch_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_RuneSwitch_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_RuneSwitch_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_RuneSwitch_SC*>(
               &_MSG_Ret_RuneSwitch_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MSG_Ret_RuneSwitch_SC& a, MSG_Ret_RuneSwitch_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_RuneSwitch_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_RuneSwitch_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_RuneSwitch_SC>(nullptr);
  }

  MSG_Ret_RuneSwitch_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_RuneSwitch_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_RuneSwitch_SC& from);
  void MergeFrom(const MSG_Ret_RuneSwitch_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_RuneSwitch_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rune.MSG_Ret_RuneSwitch_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rune_2eproto);
    return ::descriptor_table_rune_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHerothisidFieldNumber = 2,
    kErrcodeFieldNumber = 1,
    kPageidFieldNumber = 3,
  };
  // optional string herothisid = 2;
  bool has_herothisid() const;
  private:
  bool _internal_has_herothisid() const;
  public:
  void clear_herothisid();
  const std::string& herothisid() const;
  void set_herothisid(const std::string& value);
  void set_herothisid(std::string&& value);
  void set_herothisid(const char* value);
  void set_herothisid(const char* value, size_t size);
  std::string* mutable_herothisid();
  std::string* release_herothisid();
  void set_allocated_herothisid(std::string* herothisid);
  private:
  const std::string& _internal_herothisid() const;
  void _internal_set_herothisid(const std::string& value);
  std::string* _internal_mutable_herothisid();
  public:

  // optional uint32 errcode = 1;
  bool has_errcode() const;
  private:
  bool _internal_has_errcode() const;
  public:
  void clear_errcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode() const;
  void set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errcode() const;
  void _internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pageid = 3;
  bool has_pageid() const;
  private:
  bool _internal_has_pageid() const;
  public:
  void clear_pageid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid() const;
  void set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pageid() const;
  void _internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:rune.MSG_Ret_RuneSwitch_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herothisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pageid_;
  friend struct ::TableStruct_rune_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RuneItem

// optional uint32 uniqid = 1;
inline bool RuneItem::_internal_has_uniqid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RuneItem::has_uniqid() const {
  return _internal_has_uniqid();
}
inline void RuneItem::clear_uniqid() {
  uniqid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneItem::_internal_uniqid() const {
  return uniqid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneItem::uniqid() const {
  // @@protoc_insertion_point(field_get:rune.RuneItem.uniqid)
  return _internal_uniqid();
}
inline void RuneItem::_internal_set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  uniqid_ = value;
}
inline void RuneItem::set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uniqid(value);
  // @@protoc_insertion_point(field_set:rune.RuneItem.uniqid)
}

// optional uint32 baseid = 2;
inline bool RuneItem::_internal_has_baseid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RuneItem::has_baseid() const {
  return _internal_has_baseid();
}
inline void RuneItem::clear_baseid() {
  baseid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneItem::_internal_baseid() const {
  return baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneItem::baseid() const {
  // @@protoc_insertion_point(field_get:rune.RuneItem.baseid)
  return _internal_baseid();
}
inline void RuneItem::_internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  baseid_ = value;
}
inline void RuneItem::set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseid(value);
  // @@protoc_insertion_point(field_set:rune.RuneItem.baseid)
}

// optional uint32 level = 3;
inline bool RuneItem::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool RuneItem::has_level() const {
  return _internal_has_level();
}
inline void RuneItem::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneItem::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneItem::level() const {
  // @@protoc_insertion_point(field_get:rune.RuneItem.level)
  return _internal_level();
}
inline void RuneItem::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  level_ = value;
}
inline void RuneItem::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:rune.RuneItem.level)
}

// optional uint32 exp = 4;
inline bool RuneItem::_internal_has_exp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool RuneItem::has_exp() const {
  return _internal_has_exp();
}
inline void RuneItem::clear_exp() {
  exp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneItem::_internal_exp() const {
  return exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneItem::exp() const {
  // @@protoc_insertion_point(field_get:rune.RuneItem.exp)
  return _internal_exp();
}
inline void RuneItem::_internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  exp_ = value;
}
inline void RuneItem::set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:rune.RuneItem.exp)
}

// optional uint32 insertcount = 5;
inline bool RuneItem::_internal_has_insertcount() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool RuneItem::has_insertcount() const {
  return _internal_has_insertcount();
}
inline void RuneItem::clear_insertcount() {
  insertcount_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneItem::_internal_insertcount() const {
  return insertcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneItem::insertcount() const {
  // @@protoc_insertion_point(field_get:rune.RuneItem.insertcount)
  return _internal_insertcount();
}
inline void RuneItem::_internal_set_insertcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  insertcount_ = value;
}
inline void RuneItem::set_insertcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_insertcount(value);
  // @@protoc_insertion_point(field_set:rune.RuneItem.insertcount)
}

// -------------------------------------------------------------------

// RuneGrooveItem

// optional uint32 uniqid = 1;
inline bool RuneGrooveItem::_internal_has_uniqid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RuneGrooveItem::has_uniqid() const {
  return _internal_has_uniqid();
}
inline void RuneGrooveItem::clear_uniqid() {
  uniqid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneGrooveItem::_internal_uniqid() const {
  return uniqid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneGrooveItem::uniqid() const {
  // @@protoc_insertion_point(field_get:rune.RuneGrooveItem.uniqid)
  return _internal_uniqid();
}
inline void RuneGrooveItem::_internal_set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  uniqid_ = value;
}
inline void RuneGrooveItem::set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uniqid(value);
  // @@protoc_insertion_point(field_set:rune.RuneGrooveItem.uniqid)
}

// optional uint32 posid = 2;
inline bool RuneGrooveItem::_internal_has_posid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RuneGrooveItem::has_posid() const {
  return _internal_has_posid();
}
inline void RuneGrooveItem::clear_posid() {
  posid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneGrooveItem::_internal_posid() const {
  return posid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RuneGrooveItem::posid() const {
  // @@protoc_insertion_point(field_get:rune.RuneGrooveItem.posid)
  return _internal_posid();
}
inline void RuneGrooveItem::_internal_set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  posid_ = value;
}
inline void RuneGrooveItem::set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_posid(value);
  // @@protoc_insertion_point(field_set:rune.RuneGrooveItem.posid)
}

// -------------------------------------------------------------------

// RunePageData

// repeated .rune.RuneGrooveItem item = 1;
inline int RunePageData::_internal_item_size() const {
  return item_.size();
}
inline int RunePageData::item_size() const {
  return _internal_item_size();
}
inline void RunePageData::clear_item() {
  item_.Clear();
}
inline ::rune::RuneGrooveItem* RunePageData::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:rune.RunePageData.item)
  return item_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RuneGrooveItem >*
RunePageData::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:rune.RunePageData.item)
  return &item_;
}
inline const ::rune::RuneGrooveItem& RunePageData::_internal_item(int index) const {
  return item_.Get(index);
}
inline const ::rune::RuneGrooveItem& RunePageData::item(int index) const {
  // @@protoc_insertion_point(field_get:rune.RunePageData.item)
  return _internal_item(index);
}
inline ::rune::RuneGrooveItem* RunePageData::_internal_add_item() {
  return item_.Add();
}
inline ::rune::RuneGrooveItem* RunePageData::add_item() {
  // @@protoc_insertion_point(field_add:rune.RunePageData.item)
  return _internal_add_item();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RuneGrooveItem >&
RunePageData::item() const {
  // @@protoc_insertion_point(field_list:rune.RunePageData.item)
  return item_;
}

// optional uint32 pageid = 2;
inline bool RunePageData::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RunePageData::has_pageid() const {
  return _internal_has_pageid();
}
inline void RunePageData::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RunePageData::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RunePageData::pageid() const {
  // @@protoc_insertion_point(field_get:rune.RunePageData.pageid)
  return _internal_pageid();
}
inline void RunePageData::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pageid_ = value;
}
inline void RunePageData::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.RunePageData.pageid)
}

// optional string pagename = 3;
inline bool RunePageData::_internal_has_pagename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RunePageData::has_pagename() const {
  return _internal_has_pagename();
}
inline void RunePageData::clear_pagename() {
  pagename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RunePageData::pagename() const {
  // @@protoc_insertion_point(field_get:rune.RunePageData.pagename)
  return _internal_pagename();
}
inline void RunePageData::set_pagename(const std::string& value) {
  _internal_set_pagename(value);
  // @@protoc_insertion_point(field_set:rune.RunePageData.pagename)
}
inline std::string* RunePageData::mutable_pagename() {
  // @@protoc_insertion_point(field_mutable:rune.RunePageData.pagename)
  return _internal_mutable_pagename();
}
inline const std::string& RunePageData::_internal_pagename() const {
  return pagename_.GetNoArena();
}
inline void RunePageData::_internal_set_pagename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void RunePageData::set_pagename(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rune.RunePageData.pagename)
}
inline void RunePageData::set_pagename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rune.RunePageData.pagename)
}
inline void RunePageData::set_pagename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rune.RunePageData.pagename)
}
inline std::string* RunePageData::_internal_mutable_pagename() {
  _has_bits_[0] |= 0x00000001u;
  return pagename_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RunePageData::release_pagename() {
  // @@protoc_insertion_point(field_release:rune.RunePageData.pagename)
  if (!_internal_has_pagename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return pagename_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RunePageData::set_allocated_pagename(std::string* pagename) {
  if (pagename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pagename_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pagename);
  // @@protoc_insertion_point(field_set_allocated:rune.RunePageData.pagename)
}

// optional uint32 score = 4;
inline bool RunePageData::_internal_has_score() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool RunePageData::has_score() const {
  return _internal_has_score();
}
inline void RunePageData::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RunePageData::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RunePageData::score() const {
  // @@protoc_insertion_point(field_get:rune.RunePageData.score)
  return _internal_score();
}
inline void RunePageData::_internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  score_ = value;
}
inline void RunePageData::set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:rune.RunePageData.score)
}

// -------------------------------------------------------------------

// MSG_Req_RuneActiveData_CS

// -------------------------------------------------------------------

// MSG_Ret_RuneActiveData_SC

// repeated .rune.RuneItem runeitems = 1;
inline int MSG_Ret_RuneActiveData_SC::_internal_runeitems_size() const {
  return runeitems_.size();
}
inline int MSG_Ret_RuneActiveData_SC::runeitems_size() const {
  return _internal_runeitems_size();
}
inline void MSG_Ret_RuneActiveData_SC::clear_runeitems() {
  runeitems_.Clear();
}
inline ::rune::RuneItem* MSG_Ret_RuneActiveData_SC::mutable_runeitems(int index) {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Ret_RuneActiveData_SC.runeitems)
  return runeitems_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RuneItem >*
MSG_Ret_RuneActiveData_SC::mutable_runeitems() {
  // @@protoc_insertion_point(field_mutable_list:rune.MSG_Ret_RuneActiveData_SC.runeitems)
  return &runeitems_;
}
inline const ::rune::RuneItem& MSG_Ret_RuneActiveData_SC::_internal_runeitems(int index) const {
  return runeitems_.Get(index);
}
inline const ::rune::RuneItem& MSG_Ret_RuneActiveData_SC::runeitems(int index) const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_RuneActiveData_SC.runeitems)
  return _internal_runeitems(index);
}
inline ::rune::RuneItem* MSG_Ret_RuneActiveData_SC::_internal_add_runeitems() {
  return runeitems_.Add();
}
inline ::rune::RuneItem* MSG_Ret_RuneActiveData_SC::add_runeitems() {
  // @@protoc_insertion_point(field_add:rune.MSG_Ret_RuneActiveData_SC.runeitems)
  return _internal_add_runeitems();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RuneItem >&
MSG_Ret_RuneActiveData_SC::runeitems() const {
  // @@protoc_insertion_point(field_list:rune.MSG_Ret_RuneActiveData_SC.runeitems)
  return runeitems_;
}

// -------------------------------------------------------------------

// MSG_Req_RunePageData_CS

// -------------------------------------------------------------------

// MSG_Ret_RunePageData_SC

// repeated .rune.RunePageData pagedatas = 1;
inline int MSG_Ret_RunePageData_SC::_internal_pagedatas_size() const {
  return pagedatas_.size();
}
inline int MSG_Ret_RunePageData_SC::pagedatas_size() const {
  return _internal_pagedatas_size();
}
inline void MSG_Ret_RunePageData_SC::clear_pagedatas() {
  pagedatas_.Clear();
}
inline ::rune::RunePageData* MSG_Ret_RunePageData_SC::mutable_pagedatas(int index) {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Ret_RunePageData_SC.pagedatas)
  return pagedatas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RunePageData >*
MSG_Ret_RunePageData_SC::mutable_pagedatas() {
  // @@protoc_insertion_point(field_mutable_list:rune.MSG_Ret_RunePageData_SC.pagedatas)
  return &pagedatas_;
}
inline const ::rune::RunePageData& MSG_Ret_RunePageData_SC::_internal_pagedatas(int index) const {
  return pagedatas_.Get(index);
}
inline const ::rune::RunePageData& MSG_Ret_RunePageData_SC::pagedatas(int index) const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_RunePageData_SC.pagedatas)
  return _internal_pagedatas(index);
}
inline ::rune::RunePageData* MSG_Ret_RunePageData_SC::_internal_add_pagedatas() {
  return pagedatas_.Add();
}
inline ::rune::RunePageData* MSG_Ret_RunePageData_SC::add_pagedatas() {
  // @@protoc_insertion_point(field_add:rune.MSG_Ret_RunePageData_SC.pagedatas)
  return _internal_add_pagedatas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::rune::RunePageData >&
MSG_Ret_RunePageData_SC::pagedatas() const {
  // @@protoc_insertion_point(field_list:rune.MSG_Ret_RunePageData_SC.pagedatas)
  return pagedatas_;
}

// -------------------------------------------------------------------

// MSG_Req_ActiveRune_CS

// optional string thisid = 1;
inline bool MSG_Req_ActiveRune_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_ActiveRune_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_Req_ActiveRune_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_ActiveRune_CS::thisid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_ActiveRune_CS.thisid)
  return _internal_thisid();
}
inline void MSG_Req_ActiveRune_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_ActiveRune_CS.thisid)
}
inline std::string* MSG_Req_ActiveRune_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Req_ActiveRune_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_Req_ActiveRune_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_Req_ActiveRune_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_ActiveRune_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rune.MSG_Req_ActiveRune_CS.thisid)
}
inline void MSG_Req_ActiveRune_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rune.MSG_Req_ActiveRune_CS.thisid)
}
inline void MSG_Req_ActiveRune_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rune.MSG_Req_ActiveRune_CS.thisid)
}
inline std::string* MSG_Req_ActiveRune_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_ActiveRune_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:rune.MSG_Req_ActiveRune_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_ActiveRune_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:rune.MSG_Req_ActiveRune_CS.thisid)
}

// -------------------------------------------------------------------

// MSG_Ret_ActiveRune_SC

// optional .rune.RuneItem runeitem = 1;
inline bool MSG_Ret_ActiveRune_SC::_internal_has_runeitem() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || runeitem_ != nullptr);
  return value;
}
inline bool MSG_Ret_ActiveRune_SC::has_runeitem() const {
  return _internal_has_runeitem();
}
inline void MSG_Ret_ActiveRune_SC::clear_runeitem() {
  if (runeitem_ != nullptr) runeitem_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::rune::RuneItem& MSG_Ret_ActiveRune_SC::_internal_runeitem() const {
  const ::rune::RuneItem* p = runeitem_;
  return p != nullptr ? *p : *reinterpret_cast<const ::rune::RuneItem*>(
      &::rune::_RuneItem_default_instance_);
}
inline const ::rune::RuneItem& MSG_Ret_ActiveRune_SC::runeitem() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_ActiveRune_SC.runeitem)
  return _internal_runeitem();
}
inline ::rune::RuneItem* MSG_Ret_ActiveRune_SC::release_runeitem() {
  // @@protoc_insertion_point(field_release:rune.MSG_Ret_ActiveRune_SC.runeitem)
  _has_bits_[0] &= ~0x00000001u;
  ::rune::RuneItem* temp = runeitem_;
  runeitem_ = nullptr;
  return temp;
}
inline ::rune::RuneItem* MSG_Ret_ActiveRune_SC::_internal_mutable_runeitem() {
  _has_bits_[0] |= 0x00000001u;
  if (runeitem_ == nullptr) {
    auto* p = CreateMaybeMessage<::rune::RuneItem>(GetArenaNoVirtual());
    runeitem_ = p;
  }
  return runeitem_;
}
inline ::rune::RuneItem* MSG_Ret_ActiveRune_SC::mutable_runeitem() {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Ret_ActiveRune_SC.runeitem)
  return _internal_mutable_runeitem();
}
inline void MSG_Ret_ActiveRune_SC::set_allocated_runeitem(::rune::RuneItem* runeitem) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete runeitem_;
  }
  if (runeitem) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      runeitem = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, runeitem, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  runeitem_ = runeitem;
  // @@protoc_insertion_point(field_set_allocated:rune.MSG_Ret_ActiveRune_SC.runeitem)
}

// optional bool result = 2;
inline bool MSG_Ret_ActiveRune_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_ActiveRune_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_Ret_ActiveRune_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Ret_ActiveRune_SC::_internal_result() const {
  return result_;
}
inline bool MSG_Ret_ActiveRune_SC::result() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_ActiveRune_SC.result)
  return _internal_result();
}
inline void MSG_Ret_ActiveRune_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void MSG_Ret_ActiveRune_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_ActiveRune_SC.result)
}

// -------------------------------------------------------------------

// MSG_Req_InsertRune_CS

// optional uint32 uniqid = 1;
inline bool MSG_Req_InsertRune_CS::_internal_has_uniqid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_InsertRune_CS::has_uniqid() const {
  return _internal_has_uniqid();
}
inline void MSG_Req_InsertRune_CS::clear_uniqid() {
  uniqid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_InsertRune_CS::_internal_uniqid() const {
  return uniqid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_InsertRune_CS::uniqid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_InsertRune_CS.uniqid)
  return _internal_uniqid();
}
inline void MSG_Req_InsertRune_CS::_internal_set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  uniqid_ = value;
}
inline void MSG_Req_InsertRune_CS::set_uniqid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uniqid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_InsertRune_CS.uniqid)
}

// optional uint32 posid = 2;
inline bool MSG_Req_InsertRune_CS::_internal_has_posid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_InsertRune_CS::has_posid() const {
  return _internal_has_posid();
}
inline void MSG_Req_InsertRune_CS::clear_posid() {
  posid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_InsertRune_CS::_internal_posid() const {
  return posid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_InsertRune_CS::posid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_InsertRune_CS.posid)
  return _internal_posid();
}
inline void MSG_Req_InsertRune_CS::_internal_set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  posid_ = value;
}
inline void MSG_Req_InsertRune_CS::set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_posid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_InsertRune_CS.posid)
}

// optional uint32 pageid = 3;
inline bool MSG_Req_InsertRune_CS::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Req_InsertRune_CS::has_pageid() const {
  return _internal_has_pageid();
}
inline void MSG_Req_InsertRune_CS::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_InsertRune_CS::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_InsertRune_CS::pageid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_InsertRune_CS.pageid)
  return _internal_pageid();
}
inline void MSG_Req_InsertRune_CS::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  pageid_ = value;
}
inline void MSG_Req_InsertRune_CS::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_InsertRune_CS.pageid)
}

// -------------------------------------------------------------------

// MSG_Ret_InsertRune_SC

// optional .rune.RuneGrooveItem pageitem = 1;
inline bool MSG_Ret_InsertRune_SC::_internal_has_pageitem() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || pageitem_ != nullptr);
  return value;
}
inline bool MSG_Ret_InsertRune_SC::has_pageitem() const {
  return _internal_has_pageitem();
}
inline void MSG_Ret_InsertRune_SC::clear_pageitem() {
  if (pageitem_ != nullptr) pageitem_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::rune::RuneGrooveItem& MSG_Ret_InsertRune_SC::_internal_pageitem() const {
  const ::rune::RuneGrooveItem* p = pageitem_;
  return p != nullptr ? *p : *reinterpret_cast<const ::rune::RuneGrooveItem*>(
      &::rune::_RuneGrooveItem_default_instance_);
}
inline const ::rune::RuneGrooveItem& MSG_Ret_InsertRune_SC::pageitem() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_InsertRune_SC.pageitem)
  return _internal_pageitem();
}
inline ::rune::RuneGrooveItem* MSG_Ret_InsertRune_SC::release_pageitem() {
  // @@protoc_insertion_point(field_release:rune.MSG_Ret_InsertRune_SC.pageitem)
  _has_bits_[0] &= ~0x00000001u;
  ::rune::RuneGrooveItem* temp = pageitem_;
  pageitem_ = nullptr;
  return temp;
}
inline ::rune::RuneGrooveItem* MSG_Ret_InsertRune_SC::_internal_mutable_pageitem() {
  _has_bits_[0] |= 0x00000001u;
  if (pageitem_ == nullptr) {
    auto* p = CreateMaybeMessage<::rune::RuneGrooveItem>(GetArenaNoVirtual());
    pageitem_ = p;
  }
  return pageitem_;
}
inline ::rune::RuneGrooveItem* MSG_Ret_InsertRune_SC::mutable_pageitem() {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Ret_InsertRune_SC.pageitem)
  return _internal_mutable_pageitem();
}
inline void MSG_Ret_InsertRune_SC::set_allocated_pageitem(::rune::RuneGrooveItem* pageitem) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pageitem_;
  }
  if (pageitem) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pageitem = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pageitem, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pageitem_ = pageitem;
  // @@protoc_insertion_point(field_set_allocated:rune.MSG_Ret_InsertRune_SC.pageitem)
}

// optional uint32 pageid = 2;
inline bool MSG_Ret_InsertRune_SC::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_InsertRune_SC::has_pageid() const {
  return _internal_has_pageid();
}
inline void MSG_Ret_InsertRune_SC::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_InsertRune_SC::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_InsertRune_SC::pageid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_InsertRune_SC.pageid)
  return _internal_pageid();
}
inline void MSG_Ret_InsertRune_SC::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pageid_ = value;
}
inline void MSG_Ret_InsertRune_SC::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_InsertRune_SC.pageid)
}

// optional uint32 score = 3;
inline bool MSG_Ret_InsertRune_SC::_internal_has_score() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_InsertRune_SC::has_score() const {
  return _internal_has_score();
}
inline void MSG_Ret_InsertRune_SC::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_InsertRune_SC::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_InsertRune_SC::score() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_InsertRune_SC.score)
  return _internal_score();
}
inline void MSG_Ret_InsertRune_SC::_internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  score_ = value;
}
inline void MSG_Ret_InsertRune_SC::set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_InsertRune_SC.score)
}

// optional bool result = 4;
inline bool MSG_Ret_InsertRune_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_InsertRune_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_Ret_InsertRune_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool MSG_Ret_InsertRune_SC::_internal_result() const {
  return result_;
}
inline bool MSG_Ret_InsertRune_SC::result() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_InsertRune_SC.result)
  return _internal_result();
}
inline void MSG_Ret_InsertRune_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000008u;
  result_ = value;
}
inline void MSG_Ret_InsertRune_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_InsertRune_SC.result)
}

// -------------------------------------------------------------------

// MSG_Req_UnloadRune_CS

// optional uint32 posid = 1;
inline bool MSG_Req_UnloadRune_CS::_internal_has_posid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_UnloadRune_CS::has_posid() const {
  return _internal_has_posid();
}
inline void MSG_Req_UnloadRune_CS::clear_posid() {
  posid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_UnloadRune_CS::_internal_posid() const {
  return posid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_UnloadRune_CS::posid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_UnloadRune_CS.posid)
  return _internal_posid();
}
inline void MSG_Req_UnloadRune_CS::_internal_set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  posid_ = value;
}
inline void MSG_Req_UnloadRune_CS::set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_posid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_UnloadRune_CS.posid)
}

// optional uint32 pageid = 2;
inline bool MSG_Req_UnloadRune_CS::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_UnloadRune_CS::has_pageid() const {
  return _internal_has_pageid();
}
inline void MSG_Req_UnloadRune_CS::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_UnloadRune_CS::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_UnloadRune_CS::pageid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_UnloadRune_CS.pageid)
  return _internal_pageid();
}
inline void MSG_Req_UnloadRune_CS::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pageid_ = value;
}
inline void MSG_Req_UnloadRune_CS::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_UnloadRune_CS.pageid)
}

// -------------------------------------------------------------------

// MSG_Ret_UnloadRune_SC

// optional uint32 posid = 1;
inline bool MSG_Ret_UnloadRune_SC::_internal_has_posid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_UnloadRune_SC::has_posid() const {
  return _internal_has_posid();
}
inline void MSG_Ret_UnloadRune_SC::clear_posid() {
  posid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UnloadRune_SC::_internal_posid() const {
  return posid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UnloadRune_SC::posid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_UnloadRune_SC.posid)
  return _internal_posid();
}
inline void MSG_Ret_UnloadRune_SC::_internal_set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  posid_ = value;
}
inline void MSG_Ret_UnloadRune_SC::set_posid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_posid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_UnloadRune_SC.posid)
}

// optional uint32 pageid = 2;
inline bool MSG_Ret_UnloadRune_SC::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_UnloadRune_SC::has_pageid() const {
  return _internal_has_pageid();
}
inline void MSG_Ret_UnloadRune_SC::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UnloadRune_SC::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UnloadRune_SC::pageid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_UnloadRune_SC.pageid)
  return _internal_pageid();
}
inline void MSG_Ret_UnloadRune_SC::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pageid_ = value;
}
inline void MSG_Ret_UnloadRune_SC::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_UnloadRune_SC.pageid)
}

// optional uint32 score = 3;
inline bool MSG_Ret_UnloadRune_SC::_internal_has_score() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_UnloadRune_SC::has_score() const {
  return _internal_has_score();
}
inline void MSG_Ret_UnloadRune_SC::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UnloadRune_SC::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UnloadRune_SC::score() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_UnloadRune_SC.score)
  return _internal_score();
}
inline void MSG_Ret_UnloadRune_SC::_internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  score_ = value;
}
inline void MSG_Ret_UnloadRune_SC::set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_UnloadRune_SC.score)
}

// optional bool result = 4;
inline bool MSG_Ret_UnloadRune_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_UnloadRune_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_Ret_UnloadRune_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool MSG_Ret_UnloadRune_SC::_internal_result() const {
  return result_;
}
inline bool MSG_Ret_UnloadRune_SC::result() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_UnloadRune_SC.result)
  return _internal_result();
}
inline void MSG_Ret_UnloadRune_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000008u;
  result_ = value;
}
inline void MSG_Ret_UnloadRune_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_UnloadRune_SC.result)
}

// -------------------------------------------------------------------

// MSG_Req_UnloadAllRune_CS

// optional uint32 pageid = 1;
inline bool MSG_Req_UnloadAllRune_CS::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_UnloadAllRune_CS::has_pageid() const {
  return _internal_has_pageid();
}
inline void MSG_Req_UnloadAllRune_CS::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_UnloadAllRune_CS::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_UnloadAllRune_CS::pageid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_UnloadAllRune_CS.pageid)
  return _internal_pageid();
}
inline void MSG_Req_UnloadAllRune_CS::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  pageid_ = value;
}
inline void MSG_Req_UnloadAllRune_CS::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_UnloadAllRune_CS.pageid)
}

// -------------------------------------------------------------------

// MSG_Ret_UnloadAllRune_SC

// optional uint32 pageid = 1;
inline bool MSG_Ret_UnloadAllRune_SC::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_UnloadAllRune_SC::has_pageid() const {
  return _internal_has_pageid();
}
inline void MSG_Ret_UnloadAllRune_SC::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UnloadAllRune_SC::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_UnloadAllRune_SC::pageid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_UnloadAllRune_SC.pageid)
  return _internal_pageid();
}
inline void MSG_Ret_UnloadAllRune_SC::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  pageid_ = value;
}
inline void MSG_Ret_UnloadAllRune_SC::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_UnloadAllRune_SC.pageid)
}

// optional bool result = 2;
inline bool MSG_Ret_UnloadAllRune_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_UnloadAllRune_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_Ret_UnloadAllRune_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Ret_UnloadAllRune_SC::_internal_result() const {
  return result_;
}
inline bool MSG_Ret_UnloadAllRune_SC::result() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_UnloadAllRune_SC.result)
  return _internal_result();
}
inline void MSG_Ret_UnloadAllRune_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void MSG_Ret_UnloadAllRune_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_UnloadAllRune_SC.result)
}

// -------------------------------------------------------------------

// MSG_Req_LevelupRune_CS

// optional uint32 levelupid = 1;
inline bool MSG_Req_LevelupRune_CS::_internal_has_levelupid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_LevelupRune_CS::has_levelupid() const {
  return _internal_has_levelupid();
}
inline void MSG_Req_LevelupRune_CS::clear_levelupid() {
  levelupid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_LevelupRune_CS::_internal_levelupid() const {
  return levelupid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_LevelupRune_CS::levelupid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_LevelupRune_CS.levelupid)
  return _internal_levelupid();
}
inline void MSG_Req_LevelupRune_CS::_internal_set_levelupid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  levelupid_ = value;
}
inline void MSG_Req_LevelupRune_CS::set_levelupid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_levelupid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_LevelupRune_CS.levelupid)
}

// repeated uint32 costuniqids = 2;
inline int MSG_Req_LevelupRune_CS::_internal_costuniqids_size() const {
  return costuniqids_.size();
}
inline int MSG_Req_LevelupRune_CS::costuniqids_size() const {
  return _internal_costuniqids_size();
}
inline void MSG_Req_LevelupRune_CS::clear_costuniqids() {
  costuniqids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_LevelupRune_CS::_internal_costuniqids(int index) const {
  return costuniqids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_LevelupRune_CS::costuniqids(int index) const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_LevelupRune_CS.costuniqids)
  return _internal_costuniqids(index);
}
inline void MSG_Req_LevelupRune_CS::set_costuniqids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  costuniqids_.Set(index, value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_LevelupRune_CS.costuniqids)
}
inline void MSG_Req_LevelupRune_CS::_internal_add_costuniqids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  costuniqids_.Add(value);
}
inline void MSG_Req_LevelupRune_CS::add_costuniqids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_costuniqids(value);
  // @@protoc_insertion_point(field_add:rune.MSG_Req_LevelupRune_CS.costuniqids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_Req_LevelupRune_CS::_internal_costuniqids() const {
  return costuniqids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_Req_LevelupRune_CS::costuniqids() const {
  // @@protoc_insertion_point(field_list:rune.MSG_Req_LevelupRune_CS.costuniqids)
  return _internal_costuniqids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_Req_LevelupRune_CS::_internal_mutable_costuniqids() {
  return &costuniqids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_Req_LevelupRune_CS::mutable_costuniqids() {
  // @@protoc_insertion_point(field_mutable_list:rune.MSG_Req_LevelupRune_CS.costuniqids)
  return _internal_mutable_costuniqids();
}

// repeated string costthisids = 3;
inline int MSG_Req_LevelupRune_CS::_internal_costthisids_size() const {
  return costthisids_.size();
}
inline int MSG_Req_LevelupRune_CS::costthisids_size() const {
  return _internal_costthisids_size();
}
inline void MSG_Req_LevelupRune_CS::clear_costthisids() {
  costthisids_.Clear();
}
inline std::string* MSG_Req_LevelupRune_CS::add_costthisids() {
  // @@protoc_insertion_point(field_add_mutable:rune.MSG_Req_LevelupRune_CS.costthisids)
  return _internal_add_costthisids();
}
inline const std::string& MSG_Req_LevelupRune_CS::_internal_costthisids(int index) const {
  return costthisids_.Get(index);
}
inline const std::string& MSG_Req_LevelupRune_CS::costthisids(int index) const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_LevelupRune_CS.costthisids)
  return _internal_costthisids(index);
}
inline std::string* MSG_Req_LevelupRune_CS::mutable_costthisids(int index) {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Req_LevelupRune_CS.costthisids)
  return costthisids_.Mutable(index);
}
inline void MSG_Req_LevelupRune_CS::set_costthisids(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:rune.MSG_Req_LevelupRune_CS.costthisids)
  costthisids_.Mutable(index)->assign(value);
}
inline void MSG_Req_LevelupRune_CS::set_costthisids(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:rune.MSG_Req_LevelupRune_CS.costthisids)
  costthisids_.Mutable(index)->assign(std::move(value));
}
inline void MSG_Req_LevelupRune_CS::set_costthisids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  costthisids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:rune.MSG_Req_LevelupRune_CS.costthisids)
}
inline void MSG_Req_LevelupRune_CS::set_costthisids(int index, const char* value, size_t size) {
  costthisids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rune.MSG_Req_LevelupRune_CS.costthisids)
}
inline std::string* MSG_Req_LevelupRune_CS::_internal_add_costthisids() {
  return costthisids_.Add();
}
inline void MSG_Req_LevelupRune_CS::add_costthisids(const std::string& value) {
  costthisids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:rune.MSG_Req_LevelupRune_CS.costthisids)
}
inline void MSG_Req_LevelupRune_CS::add_costthisids(std::string&& value) {
  costthisids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:rune.MSG_Req_LevelupRune_CS.costthisids)
}
inline void MSG_Req_LevelupRune_CS::add_costthisids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  costthisids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:rune.MSG_Req_LevelupRune_CS.costthisids)
}
inline void MSG_Req_LevelupRune_CS::add_costthisids(const char* value, size_t size) {
  costthisids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:rune.MSG_Req_LevelupRune_CS.costthisids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MSG_Req_LevelupRune_CS::costthisids() const {
  // @@protoc_insertion_point(field_list:rune.MSG_Req_LevelupRune_CS.costthisids)
  return costthisids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MSG_Req_LevelupRune_CS::mutable_costthisids() {
  // @@protoc_insertion_point(field_mutable_list:rune.MSG_Req_LevelupRune_CS.costthisids)
  return &costthisids_;
}

// -------------------------------------------------------------------

// MSG_Ret_LevelupRune_SC

// optional .rune.RuneItem runeitem = 1;
inline bool MSG_Ret_LevelupRune_SC::_internal_has_runeitem() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || runeitem_ != nullptr);
  return value;
}
inline bool MSG_Ret_LevelupRune_SC::has_runeitem() const {
  return _internal_has_runeitem();
}
inline void MSG_Ret_LevelupRune_SC::clear_runeitem() {
  if (runeitem_ != nullptr) runeitem_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::rune::RuneItem& MSG_Ret_LevelupRune_SC::_internal_runeitem() const {
  const ::rune::RuneItem* p = runeitem_;
  return p != nullptr ? *p : *reinterpret_cast<const ::rune::RuneItem*>(
      &::rune::_RuneItem_default_instance_);
}
inline const ::rune::RuneItem& MSG_Ret_LevelupRune_SC::runeitem() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_LevelupRune_SC.runeitem)
  return _internal_runeitem();
}
inline ::rune::RuneItem* MSG_Ret_LevelupRune_SC::release_runeitem() {
  // @@protoc_insertion_point(field_release:rune.MSG_Ret_LevelupRune_SC.runeitem)
  _has_bits_[0] &= ~0x00000001u;
  ::rune::RuneItem* temp = runeitem_;
  runeitem_ = nullptr;
  return temp;
}
inline ::rune::RuneItem* MSG_Ret_LevelupRune_SC::_internal_mutable_runeitem() {
  _has_bits_[0] |= 0x00000001u;
  if (runeitem_ == nullptr) {
    auto* p = CreateMaybeMessage<::rune::RuneItem>(GetArenaNoVirtual());
    runeitem_ = p;
  }
  return runeitem_;
}
inline ::rune::RuneItem* MSG_Ret_LevelupRune_SC::mutable_runeitem() {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Ret_LevelupRune_SC.runeitem)
  return _internal_mutable_runeitem();
}
inline void MSG_Ret_LevelupRune_SC::set_allocated_runeitem(::rune::RuneItem* runeitem) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete runeitem_;
  }
  if (runeitem) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      runeitem = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, runeitem, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  runeitem_ = runeitem;
  // @@protoc_insertion_point(field_set_allocated:rune.MSG_Ret_LevelupRune_SC.runeitem)
}

// optional bool result = 2;
inline bool MSG_Ret_LevelupRune_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_LevelupRune_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_Ret_LevelupRune_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Ret_LevelupRune_SC::_internal_result() const {
  return result_;
}
inline bool MSG_Ret_LevelupRune_SC::result() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_LevelupRune_SC.result)
  return _internal_result();
}
inline void MSG_Ret_LevelupRune_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void MSG_Ret_LevelupRune_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_LevelupRune_SC.result)
}

// -------------------------------------------------------------------

// MSG_Req_RunePageNameModify_CS

// optional uint32 pageid = 1;
inline bool MSG_Req_RunePageNameModify_CS::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_RunePageNameModify_CS::has_pageid() const {
  return _internal_has_pageid();
}
inline void MSG_Req_RunePageNameModify_CS::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_RunePageNameModify_CS::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_RunePageNameModify_CS::pageid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_RunePageNameModify_CS.pageid)
  return _internal_pageid();
}
inline void MSG_Req_RunePageNameModify_CS::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pageid_ = value;
}
inline void MSG_Req_RunePageNameModify_CS::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_RunePageNameModify_CS.pageid)
}

// optional string pagename = 2;
inline bool MSG_Req_RunePageNameModify_CS::_internal_has_pagename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_RunePageNameModify_CS::has_pagename() const {
  return _internal_has_pagename();
}
inline void MSG_Req_RunePageNameModify_CS::clear_pagename() {
  pagename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_RunePageNameModify_CS::pagename() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_RunePageNameModify_CS.pagename)
  return _internal_pagename();
}
inline void MSG_Req_RunePageNameModify_CS::set_pagename(const std::string& value) {
  _internal_set_pagename(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_RunePageNameModify_CS.pagename)
}
inline std::string* MSG_Req_RunePageNameModify_CS::mutable_pagename() {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Req_RunePageNameModify_CS.pagename)
  return _internal_mutable_pagename();
}
inline const std::string& MSG_Req_RunePageNameModify_CS::_internal_pagename() const {
  return pagename_.GetNoArena();
}
inline void MSG_Req_RunePageNameModify_CS::_internal_set_pagename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_RunePageNameModify_CS::set_pagename(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rune.MSG_Req_RunePageNameModify_CS.pagename)
}
inline void MSG_Req_RunePageNameModify_CS::set_pagename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rune.MSG_Req_RunePageNameModify_CS.pagename)
}
inline void MSG_Req_RunePageNameModify_CS::set_pagename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rune.MSG_Req_RunePageNameModify_CS.pagename)
}
inline std::string* MSG_Req_RunePageNameModify_CS::_internal_mutable_pagename() {
  _has_bits_[0] |= 0x00000001u;
  return pagename_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_RunePageNameModify_CS::release_pagename() {
  // @@protoc_insertion_point(field_release:rune.MSG_Req_RunePageNameModify_CS.pagename)
  if (!_internal_has_pagename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return pagename_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_RunePageNameModify_CS::set_allocated_pagename(std::string* pagename) {
  if (pagename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pagename_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pagename);
  // @@protoc_insertion_point(field_set_allocated:rune.MSG_Req_RunePageNameModify_CS.pagename)
}

// -------------------------------------------------------------------

// MSG_Ret_RunePageNameModify_SC

// optional uint32 pageid = 1;
inline bool MSG_Ret_RunePageNameModify_SC::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_RunePageNameModify_SC::has_pageid() const {
  return _internal_has_pageid();
}
inline void MSG_Ret_RunePageNameModify_SC::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_RunePageNameModify_SC::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_RunePageNameModify_SC::pageid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_RunePageNameModify_SC.pageid)
  return _internal_pageid();
}
inline void MSG_Ret_RunePageNameModify_SC::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pageid_ = value;
}
inline void MSG_Ret_RunePageNameModify_SC::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_RunePageNameModify_SC.pageid)
}

// optional string pagename = 2;
inline bool MSG_Ret_RunePageNameModify_SC::_internal_has_pagename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_RunePageNameModify_SC::has_pagename() const {
  return _internal_has_pagename();
}
inline void MSG_Ret_RunePageNameModify_SC::clear_pagename() {
  pagename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_RunePageNameModify_SC::pagename() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_RunePageNameModify_SC.pagename)
  return _internal_pagename();
}
inline void MSG_Ret_RunePageNameModify_SC::set_pagename(const std::string& value) {
  _internal_set_pagename(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_RunePageNameModify_SC.pagename)
}
inline std::string* MSG_Ret_RunePageNameModify_SC::mutable_pagename() {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Ret_RunePageNameModify_SC.pagename)
  return _internal_mutable_pagename();
}
inline const std::string& MSG_Ret_RunePageNameModify_SC::_internal_pagename() const {
  return pagename_.GetNoArena();
}
inline void MSG_Ret_RunePageNameModify_SC::_internal_set_pagename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_RunePageNameModify_SC::set_pagename(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rune.MSG_Ret_RunePageNameModify_SC.pagename)
}
inline void MSG_Ret_RunePageNameModify_SC::set_pagename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rune.MSG_Ret_RunePageNameModify_SC.pagename)
}
inline void MSG_Ret_RunePageNameModify_SC::set_pagename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  pagename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rune.MSG_Ret_RunePageNameModify_SC.pagename)
}
inline std::string* MSG_Ret_RunePageNameModify_SC::_internal_mutable_pagename() {
  _has_bits_[0] |= 0x00000001u;
  return pagename_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_RunePageNameModify_SC::release_pagename() {
  // @@protoc_insertion_point(field_release:rune.MSG_Ret_RunePageNameModify_SC.pagename)
  if (!_internal_has_pagename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return pagename_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_RunePageNameModify_SC::set_allocated_pagename(std::string* pagename) {
  if (pagename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  pagename_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pagename);
  // @@protoc_insertion_point(field_set_allocated:rune.MSG_Ret_RunePageNameModify_SC.pagename)
}

// optional bool result = 3;
inline bool MSG_Ret_RunePageNameModify_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_RunePageNameModify_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_Ret_RunePageNameModify_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool MSG_Ret_RunePageNameModify_SC::_internal_result() const {
  return result_;
}
inline bool MSG_Ret_RunePageNameModify_SC::result() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_RunePageNameModify_SC.result)
  return _internal_result();
}
inline void MSG_Ret_RunePageNameModify_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000004u;
  result_ = value;
}
inline void MSG_Ret_RunePageNameModify_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_RunePageNameModify_SC.result)
}

// -------------------------------------------------------------------

// MSG_Req_RuneSwitch_CS

// optional uint32 pageid = 1;
inline bool MSG_Req_RuneSwitch_CS::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_RuneSwitch_CS::has_pageid() const {
  return _internal_has_pageid();
}
inline void MSG_Req_RuneSwitch_CS::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_RuneSwitch_CS::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_RuneSwitch_CS::pageid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_RuneSwitch_CS.pageid)
  return _internal_pageid();
}
inline void MSG_Req_RuneSwitch_CS::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pageid_ = value;
}
inline void MSG_Req_RuneSwitch_CS::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_RuneSwitch_CS.pageid)
}

// optional string herothisid = 2;
inline bool MSG_Req_RuneSwitch_CS::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_RuneSwitch_CS::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void MSG_Req_RuneSwitch_CS::clear_herothisid() {
  herothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_RuneSwitch_CS::herothisid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Req_RuneSwitch_CS.herothisid)
  return _internal_herothisid();
}
inline void MSG_Req_RuneSwitch_CS::set_herothisid(const std::string& value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Req_RuneSwitch_CS.herothisid)
}
inline std::string* MSG_Req_RuneSwitch_CS::mutable_herothisid() {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Req_RuneSwitch_CS.herothisid)
  return _internal_mutable_herothisid();
}
inline const std::string& MSG_Req_RuneSwitch_CS::_internal_herothisid() const {
  return herothisid_.GetNoArena();
}
inline void MSG_Req_RuneSwitch_CS::_internal_set_herothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_RuneSwitch_CS::set_herothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rune.MSG_Req_RuneSwitch_CS.herothisid)
}
inline void MSG_Req_RuneSwitch_CS::set_herothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rune.MSG_Req_RuneSwitch_CS.herothisid)
}
inline void MSG_Req_RuneSwitch_CS::set_herothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rune.MSG_Req_RuneSwitch_CS.herothisid)
}
inline std::string* MSG_Req_RuneSwitch_CS::_internal_mutable_herothisid() {
  _has_bits_[0] |= 0x00000001u;
  return herothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_RuneSwitch_CS::release_herothisid() {
  // @@protoc_insertion_point(field_release:rune.MSG_Req_RuneSwitch_CS.herothisid)
  if (!_internal_has_herothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return herothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_RuneSwitch_CS::set_allocated_herothisid(std::string* herothisid) {
  if (herothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herothisid);
  // @@protoc_insertion_point(field_set_allocated:rune.MSG_Req_RuneSwitch_CS.herothisid)
}

// -------------------------------------------------------------------

// MSG_Ret_RuneSwitch_SC

// optional uint32 errcode = 1;
inline bool MSG_Ret_RuneSwitch_SC::_internal_has_errcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_RuneSwitch_SC::has_errcode() const {
  return _internal_has_errcode();
}
inline void MSG_Ret_RuneSwitch_SC::clear_errcode() {
  errcode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_RuneSwitch_SC::_internal_errcode() const {
  return errcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_RuneSwitch_SC::errcode() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_RuneSwitch_SC.errcode)
  return _internal_errcode();
}
inline void MSG_Ret_RuneSwitch_SC::_internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  errcode_ = value;
}
inline void MSG_Ret_RuneSwitch_SC::set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errcode(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_RuneSwitch_SC.errcode)
}

// optional string herothisid = 2;
inline bool MSG_Ret_RuneSwitch_SC::_internal_has_herothisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_RuneSwitch_SC::has_herothisid() const {
  return _internal_has_herothisid();
}
inline void MSG_Ret_RuneSwitch_SC::clear_herothisid() {
  herothisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_RuneSwitch_SC::herothisid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_RuneSwitch_SC.herothisid)
  return _internal_herothisid();
}
inline void MSG_Ret_RuneSwitch_SC::set_herothisid(const std::string& value) {
  _internal_set_herothisid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_RuneSwitch_SC.herothisid)
}
inline std::string* MSG_Ret_RuneSwitch_SC::mutable_herothisid() {
  // @@protoc_insertion_point(field_mutable:rune.MSG_Ret_RuneSwitch_SC.herothisid)
  return _internal_mutable_herothisid();
}
inline const std::string& MSG_Ret_RuneSwitch_SC::_internal_herothisid() const {
  return herothisid_.GetNoArena();
}
inline void MSG_Ret_RuneSwitch_SC::_internal_set_herothisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_RuneSwitch_SC::set_herothisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rune.MSG_Ret_RuneSwitch_SC.herothisid)
}
inline void MSG_Ret_RuneSwitch_SC::set_herothisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rune.MSG_Ret_RuneSwitch_SC.herothisid)
}
inline void MSG_Ret_RuneSwitch_SC::set_herothisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  herothisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rune.MSG_Ret_RuneSwitch_SC.herothisid)
}
inline std::string* MSG_Ret_RuneSwitch_SC::_internal_mutable_herothisid() {
  _has_bits_[0] |= 0x00000001u;
  return herothisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_RuneSwitch_SC::release_herothisid() {
  // @@protoc_insertion_point(field_release:rune.MSG_Ret_RuneSwitch_SC.herothisid)
  if (!_internal_has_herothisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return herothisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_RuneSwitch_SC::set_allocated_herothisid(std::string* herothisid) {
  if (herothisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  herothisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herothisid);
  // @@protoc_insertion_point(field_set_allocated:rune.MSG_Ret_RuneSwitch_SC.herothisid)
}

// optional uint32 pageid = 3;
inline bool MSG_Ret_RuneSwitch_SC::_internal_has_pageid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_RuneSwitch_SC::has_pageid() const {
  return _internal_has_pageid();
}
inline void MSG_Ret_RuneSwitch_SC::clear_pageid() {
  pageid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_RuneSwitch_SC::_internal_pageid() const {
  return pageid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_RuneSwitch_SC::pageid() const {
  // @@protoc_insertion_point(field_get:rune.MSG_Ret_RuneSwitch_SC.pageid)
  return _internal_pageid();
}
inline void MSG_Ret_RuneSwitch_SC::_internal_set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  pageid_ = value;
}
inline void MSG_Ret_RuneSwitch_SC::set_pageid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pageid(value);
  // @@protoc_insertion_point(field_set:rune.MSG_Ret_RuneSwitch_SC.pageid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace rune

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::rune::RuneType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rune::RuneType>() {
  return ::rune::RuneType_descriptor();
}
template <> struct is_proto_enum< ::rune::RuneEffect> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rune::RuneEffect>() {
  return ::rune::RuneEffect_descriptor();
}
template <> struct is_proto_enum< ::rune::RuneQuality> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rune::RuneQuality>() {
  return ::rune::RuneQuality_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_rune_2eproto
