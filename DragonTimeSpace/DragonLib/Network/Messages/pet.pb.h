// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pet.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_pet_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_pet_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_pet_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_pet_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pet_2eproto;
namespace Pet {
class MSG_NotifyPetQTESkill_SC;
class MSG_NotifyPetQTESkill_SCDefaultTypeInternal;
extern MSG_NotifyPetQTESkill_SCDefaultTypeInternal _MSG_NotifyPetQTESkill_SC_default_instance_;
class MSG_ReqSwitchPetState_CS;
class MSG_ReqSwitchPetState_CSDefaultTypeInternal;
extern MSG_ReqSwitchPetState_CSDefaultTypeInternal _MSG_ReqSwitchPetState_CS_default_instance_;
class MSG_ReqUnlockPetNum_CS;
class MSG_ReqUnlockPetNum_CSDefaultTypeInternal;
extern MSG_ReqUnlockPetNum_CSDefaultTypeInternal _MSG_ReqUnlockPetNum_CS_default_instance_;
class MSG_RetRefreshSummonPet_SC;
class MSG_RetRefreshSummonPet_SCDefaultTypeInternal;
extern MSG_RetRefreshSummonPet_SCDefaultTypeInternal _MSG_RetRefreshSummonPet_SC_default_instance_;
class MSG_RetSwitchPetState_SC;
class MSG_RetSwitchPetState_SCDefaultTypeInternal;
extern MSG_RetSwitchPetState_SCDefaultTypeInternal _MSG_RetSwitchPetState_SC_default_instance_;
class MSG_RetUnlockPetNum_SC;
class MSG_RetUnlockPetNum_SCDefaultTypeInternal;
extern MSG_RetUnlockPetNum_SCDefaultTypeInternal _MSG_RetUnlockPetNum_SC_default_instance_;
class MSG_RetUserPetInfo_SC;
class MSG_RetUserPetInfo_SCDefaultTypeInternal;
extern MSG_RetUserPetInfo_SCDefaultTypeInternal _MSG_RetUserPetInfo_SC_default_instance_;
class PetBase;
class PetBaseDefaultTypeInternal;
extern PetBaseDefaultTypeInternal _PetBase_default_instance_;
class PropItem;
class PropItemDefaultTypeInternal;
extern PropItemDefaultTypeInternal _PropItem_default_instance_;
class SummonPetUseInfo;
class SummonPetUseInfoDefaultTypeInternal;
extern SummonPetUseInfoDefaultTypeInternal _SummonPetUseInfo_default_instance_;
}  // namespace Pet
PROTOBUF_NAMESPACE_OPEN
template<> ::Pet::MSG_NotifyPetQTESkill_SC* Arena::CreateMaybeMessage<::Pet::MSG_NotifyPetQTESkill_SC>(Arena*);
template<> ::Pet::MSG_ReqSwitchPetState_CS* Arena::CreateMaybeMessage<::Pet::MSG_ReqSwitchPetState_CS>(Arena*);
template<> ::Pet::MSG_ReqUnlockPetNum_CS* Arena::CreateMaybeMessage<::Pet::MSG_ReqUnlockPetNum_CS>(Arena*);
template<> ::Pet::MSG_RetRefreshSummonPet_SC* Arena::CreateMaybeMessage<::Pet::MSG_RetRefreshSummonPet_SC>(Arena*);
template<> ::Pet::MSG_RetSwitchPetState_SC* Arena::CreateMaybeMessage<::Pet::MSG_RetSwitchPetState_SC>(Arena*);
template<> ::Pet::MSG_RetUnlockPetNum_SC* Arena::CreateMaybeMessage<::Pet::MSG_RetUnlockPetNum_SC>(Arena*);
template<> ::Pet::MSG_RetUserPetInfo_SC* Arena::CreateMaybeMessage<::Pet::MSG_RetUserPetInfo_SC>(Arena*);
template<> ::Pet::PetBase* Arena::CreateMaybeMessage<::Pet::PetBase>(Arena*);
template<> ::Pet::PropItem* Arena::CreateMaybeMessage<::Pet::PropItem>(Arena*);
template<> ::Pet::SummonPetUseInfo* Arena::CreateMaybeMessage<::Pet::SummonPetUseInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Pet {

enum PetProp : int {
  PDAM = 1,
  PDEF = 2,
  MAXHP = 3,
  BANG = 4,
  TOUGHNESS = 5,
  ACCURATE = 6,
  HOLD = 7,
  HIT = 8,
  MISS = 9
};
bool PetProp_IsValid(int value);
constexpr PetProp PetProp_MIN = PDAM;
constexpr PetProp PetProp_MAX = MISS;
constexpr int PetProp_ARRAYSIZE = PetProp_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PetProp_descriptor();
template<typename T>
inline const std::string& PetProp_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PetProp>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PetProp_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PetProp_descriptor(), enum_t_value);
}
inline bool PetProp_Parse(
    const std::string& name, PetProp* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PetProp>(
    PetProp_descriptor(), name, value);
}
enum PetState : int {
  PetState_None = 0,
  PetState_Rest = 1,
  PetState_Assist = 2,
  PetState_Fight = 3,
  PetState_Dying = 4
};
bool PetState_IsValid(int value);
constexpr PetState PetState_MIN = PetState_None;
constexpr PetState PetState_MAX = PetState_Dying;
constexpr int PetState_ARRAYSIZE = PetState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PetState_descriptor();
template<typename T>
inline const std::string& PetState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PetState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PetState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PetState_descriptor(), enum_t_value);
}
inline bool PetState_Parse(
    const std::string& name, PetState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PetState>(
    PetState_descriptor(), name, value);
}
// ===================================================================

class PropItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Pet.PropItem) */ {
 public:
  PropItem();
  virtual ~PropItem();

  PropItem(const PropItem& from);
  PropItem(PropItem&& from) noexcept
    : PropItem() {
    *this = ::std::move(from);
  }

  inline PropItem& operator=(const PropItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline PropItem& operator=(PropItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PropItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PropItem* internal_default_instance() {
    return reinterpret_cast<const PropItem*>(
               &_PropItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PropItem& a, PropItem& b) {
    a.Swap(&b);
  }
  inline void Swap(PropItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PropItem* New() const final {
    return CreateMaybeMessage<PropItem>(nullptr);
  }

  PropItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PropItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PropItem& from);
  void MergeFrom(const PropItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PropItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Pet.PropItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pet_2eproto);
    return ::descriptor_table_pet_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPdamageFieldNumber = 1,
    kPdefenceFieldNumber = 2,
    kMaxhpFieldNumber = 3,
    kToughnessFieldNumber = 4,
    kBangFieldNumber = 5,
    kAccurateFieldNumber = 6,
    kHoldFieldNumber = 7,
    kHitFieldNumber = 8,
    kMissFieldNumber = 9,
  };
  // optional uint32 pdamage = 1;
  bool has_pdamage() const;
  private:
  bool _internal_has_pdamage() const;
  public:
  void clear_pdamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdamage() const;
  void set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdamage() const;
  void _internal_set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pdefence = 2;
  bool has_pdefence() const;
  private:
  bool _internal_has_pdefence() const;
  public:
  void clear_pdefence();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdefence() const;
  void set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdefence() const;
  void _internal_set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxhp = 3;
  bool has_maxhp() const;
  private:
  bool _internal_has_maxhp() const;
  public:
  void clear_maxhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp() const;
  void set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxhp() const;
  void _internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 toughness = 4;
  bool has_toughness() const;
  private:
  bool _internal_has_toughness() const;
  public:
  void clear_toughness();
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness() const;
  void set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_toughness() const;
  void _internal_set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bang = 5;
  bool has_bang() const;
  private:
  bool _internal_has_bang() const;
  public:
  void clear_bang();
  ::PROTOBUF_NAMESPACE_ID::uint32 bang() const;
  void set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bang() const;
  void _internal_set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 accurate = 6;
  bool has_accurate() const;
  private:
  bool _internal_has_accurate() const;
  public:
  void clear_accurate();
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate() const;
  void set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accurate() const;
  void _internal_set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hold = 7;
  bool has_hold() const;
  private:
  bool _internal_has_hold() const;
  public:
  void clear_hold();
  ::PROTOBUF_NAMESPACE_ID::uint32 hold() const;
  void set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hold() const;
  void _internal_set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hit = 8;
  bool has_hit() const;
  private:
  bool _internal_has_hit() const;
  public:
  void clear_hit();
  ::PROTOBUF_NAMESPACE_ID::uint32 hit() const;
  void set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hit() const;
  void _internal_set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 miss = 9;
  bool has_miss() const;
  private:
  bool _internal_has_miss() const;
  public:
  void clear_miss();
  ::PROTOBUF_NAMESPACE_ID::uint32 miss() const;
  void set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_miss() const;
  void _internal_set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Pet.PropItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdefence_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bang_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 miss_;
  friend struct ::TableStruct_pet_2eproto;
};
// -------------------------------------------------------------------

class PetBase :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Pet.PetBase) */ {
 public:
  PetBase();
  virtual ~PetBase();

  PetBase(const PetBase& from);
  PetBase(PetBase&& from) noexcept
    : PetBase() {
    *this = ::std::move(from);
  }

  inline PetBase& operator=(const PetBase& from) {
    CopyFrom(from);
    return *this;
  }
  inline PetBase& operator=(PetBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PetBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PetBase* internal_default_instance() {
    return reinterpret_cast<const PetBase*>(
               &_PetBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PetBase& a, PetBase& b) {
    a.Swap(&b);
  }
  inline void Swap(PetBase* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PetBase* New() const final {
    return CreateMaybeMessage<PetBase>(nullptr);
  }

  PetBase* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PetBase>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PetBase& from);
  void MergeFrom(const PetBase& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PetBase* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Pet.PetBase";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pet_2eproto);
    return ::descriptor_table_pet_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 10,
    kNameFieldNumber = 2,
    kPropFieldNumber = 8,
    kAptitudeFieldNumber = 9,
    kIdFieldNumber = 1,
    kLevelFieldNumber = 4,
    kTempidFieldNumber = 3,
    kExpFieldNumber = 5,
    kHpFieldNumber = 6,
    kQualityFieldNumber = 7,
    kPassivenumFieldNumber = 11,
    kActiveskillidFieldNumber = 12,
    kTalentskillidFieldNumber = 13,
  };
  // repeated .Pet.PetState state = 10;
  int state_size() const;
  private:
  int _internal_state_size() const;
  public:
  void clear_state();
  private:
  ::Pet::PetState _internal_state(int index) const;
  void _internal_add_state(::Pet::PetState value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_state();
  public:
  ::Pet::PetState state(int index) const;
  void set_state(int index, ::Pet::PetState value);
  void add_state(::Pet::PetState value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& state() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_state();

  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional .Pet.PropItem prop = 8;
  bool has_prop() const;
  private:
  bool _internal_has_prop() const;
  public:
  void clear_prop();
  const ::Pet::PropItem& prop() const;
  ::Pet::PropItem* release_prop();
  ::Pet::PropItem* mutable_prop();
  void set_allocated_prop(::Pet::PropItem* prop);
  private:
  const ::Pet::PropItem& _internal_prop() const;
  ::Pet::PropItem* _internal_mutable_prop();
  public:

  // optional .Pet.PropItem aptitude = 9;
  bool has_aptitude() const;
  private:
  bool _internal_has_aptitude() const;
  public:
  void clear_aptitude();
  const ::Pet::PropItem& aptitude() const;
  ::Pet::PropItem* release_aptitude();
  ::Pet::PropItem* mutable_aptitude();
  void set_allocated_aptitude(::Pet::PropItem* aptitude);
  private:
  const ::Pet::PropItem& _internal_aptitude() const;
  ::Pet::PropItem* _internal_mutable_aptitude();
  public:

  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 4;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 tempid = 3;
  bool has_tempid() const;
  private:
  bool _internal_has_tempid() const;
  public:
  void clear_tempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid() const;
  void set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tempid() const;
  void _internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 exp = 5;
  bool has_exp() const;
  private:
  bool _internal_has_exp() const;
  public:
  void clear_exp();
  ::PROTOBUF_NAMESPACE_ID::uint32 exp() const;
  void set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_exp() const;
  void _internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hp = 6;
  bool has_hp() const;
  private:
  bool _internal_has_hp() const;
  public:
  void clear_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 hp() const;
  void set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hp() const;
  void _internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quality = 7 [default = 0];
  bool has_quality() const;
  private:
  bool _internal_has_quality() const;
  public:
  void clear_quality();
  ::PROTOBUF_NAMESPACE_ID::uint32 quality() const;
  void set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quality() const;
  void _internal_set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 passivenum = 11;
  bool has_passivenum() const;
  private:
  bool _internal_has_passivenum() const;
  public:
  void clear_passivenum();
  ::PROTOBUF_NAMESPACE_ID::uint32 passivenum() const;
  void set_passivenum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_passivenum() const;
  void _internal_set_passivenum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 activeskillid = 12;
  bool has_activeskillid() const;
  private:
  bool _internal_has_activeskillid() const;
  public:
  void clear_activeskillid();
  ::PROTOBUF_NAMESPACE_ID::uint32 activeskillid() const;
  void set_activeskillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_activeskillid() const;
  void _internal_set_activeskillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 talentskillid = 13;
  bool has_talentskillid() const;
  private:
  bool _internal_has_talentskillid() const;
  public:
  void clear_talentskillid();
  ::PROTOBUF_NAMESPACE_ID::uint32 talentskillid() const;
  void set_talentskillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_talentskillid() const;
  void _internal_set_talentskillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Pet.PetBase)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> state_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::Pet::PropItem* prop_;
  ::Pet::PropItem* aptitude_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 exp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quality_;
  ::PROTOBUF_NAMESPACE_ID::uint32 passivenum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 activeskillid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 talentskillid_;
  friend struct ::TableStruct_pet_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSwitchPetState_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Pet.MSG_ReqSwitchPetState_CS) */ {
 public:
  MSG_ReqSwitchPetState_CS();
  virtual ~MSG_ReqSwitchPetState_CS();

  MSG_ReqSwitchPetState_CS(const MSG_ReqSwitchPetState_CS& from);
  MSG_ReqSwitchPetState_CS(MSG_ReqSwitchPetState_CS&& from) noexcept
    : MSG_ReqSwitchPetState_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSwitchPetState_CS& operator=(const MSG_ReqSwitchPetState_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSwitchPetState_CS& operator=(MSG_ReqSwitchPetState_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSwitchPetState_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSwitchPetState_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSwitchPetState_CS*>(
               &_MSG_ReqSwitchPetState_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MSG_ReqSwitchPetState_CS& a, MSG_ReqSwitchPetState_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSwitchPetState_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSwitchPetState_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSwitchPetState_CS>(nullptr);
  }

  MSG_ReqSwitchPetState_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSwitchPetState_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSwitchPetState_CS& from);
  void MergeFrom(const MSG_ReqSwitchPetState_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSwitchPetState_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Pet.MSG_ReqSwitchPetState_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pet_2eproto);
    return ::descriptor_table_pet_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTempidFieldNumber = 1,
    kFromstateFieldNumber = 2,
    kTostateFieldNumber = 3,
  };
  // optional uint64 tempid = 1;
  bool has_tempid() const;
  private:
  bool _internal_has_tempid() const;
  public:
  void clear_tempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid() const;
  void set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tempid() const;
  void _internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional .Pet.PetState fromstate = 2;
  bool has_fromstate() const;
  private:
  bool _internal_has_fromstate() const;
  public:
  void clear_fromstate();
  ::Pet::PetState fromstate() const;
  void set_fromstate(::Pet::PetState value);
  private:
  ::Pet::PetState _internal_fromstate() const;
  void _internal_set_fromstate(::Pet::PetState value);
  public:

  // optional .Pet.PetState tostate = 3;
  bool has_tostate() const;
  private:
  bool _internal_has_tostate() const;
  public:
  void clear_tostate();
  ::Pet::PetState tostate() const;
  void set_tostate(::Pet::PetState value);
  private:
  ::Pet::PetState _internal_tostate() const;
  void _internal_set_tostate(::Pet::PetState value);
  public:

  // @@protoc_insertion_point(class_scope:Pet.MSG_ReqSwitchPetState_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tempid_;
  int fromstate_;
  int tostate_;
  friend struct ::TableStruct_pet_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetSwitchPetState_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Pet.MSG_RetSwitchPetState_SC) */ {
 public:
  MSG_RetSwitchPetState_SC();
  virtual ~MSG_RetSwitchPetState_SC();

  MSG_RetSwitchPetState_SC(const MSG_RetSwitchPetState_SC& from);
  MSG_RetSwitchPetState_SC(MSG_RetSwitchPetState_SC&& from) noexcept
    : MSG_RetSwitchPetState_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetSwitchPetState_SC& operator=(const MSG_RetSwitchPetState_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetSwitchPetState_SC& operator=(MSG_RetSwitchPetState_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetSwitchPetState_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetSwitchPetState_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetSwitchPetState_SC*>(
               &_MSG_RetSwitchPetState_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MSG_RetSwitchPetState_SC& a, MSG_RetSwitchPetState_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetSwitchPetState_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetSwitchPetState_SC* New() const final {
    return CreateMaybeMessage<MSG_RetSwitchPetState_SC>(nullptr);
  }

  MSG_RetSwitchPetState_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetSwitchPetState_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetSwitchPetState_SC& from);
  void MergeFrom(const MSG_RetSwitchPetState_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetSwitchPetState_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Pet.MSG_RetSwitchPetState_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pet_2eproto);
    return ::descriptor_table_pet_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurstateFieldNumber = 3,
    kErrcodeFieldNumber = 1,
    kTempidFieldNumber = 2,
  };
  // repeated .Pet.PetState curstate = 3;
  int curstate_size() const;
  private:
  int _internal_curstate_size() const;
  public:
  void clear_curstate();
  private:
  ::Pet::PetState _internal_curstate(int index) const;
  void _internal_add_curstate(::Pet::PetState value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_curstate();
  public:
  ::Pet::PetState curstate(int index) const;
  void set_curstate(int index, ::Pet::PetState value);
  void add_curstate(::Pet::PetState value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& curstate() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_curstate();

  // optional uint32 errcode = 1;
  bool has_errcode() const;
  private:
  bool _internal_has_errcode() const;
  public:
  void clear_errcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode() const;
  void set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errcode() const;
  void _internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tempid = 2;
  bool has_tempid() const;
  private:
  bool _internal_has_tempid() const;
  public:
  void clear_tempid();
  ::PROTOBUF_NAMESPACE_ID::uint32 tempid() const;
  void set_tempid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tempid() const;
  void _internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Pet.MSG_RetSwitchPetState_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> curstate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tempid_;
  friend struct ::TableStruct_pet_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRefreshSummonPet_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Pet.MSG_RetRefreshSummonPet_SC) */ {
 public:
  MSG_RetRefreshSummonPet_SC();
  virtual ~MSG_RetRefreshSummonPet_SC();

  MSG_RetRefreshSummonPet_SC(const MSG_RetRefreshSummonPet_SC& from);
  MSG_RetRefreshSummonPet_SC(MSG_RetRefreshSummonPet_SC&& from) noexcept
    : MSG_RetRefreshSummonPet_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRefreshSummonPet_SC& operator=(const MSG_RetRefreshSummonPet_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRefreshSummonPet_SC& operator=(MSG_RetRefreshSummonPet_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRefreshSummonPet_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRefreshSummonPet_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRefreshSummonPet_SC*>(
               &_MSG_RetRefreshSummonPet_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MSG_RetRefreshSummonPet_SC& a, MSG_RetRefreshSummonPet_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRefreshSummonPet_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRefreshSummonPet_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRefreshSummonPet_SC>(nullptr);
  }

  MSG_RetRefreshSummonPet_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRefreshSummonPet_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRefreshSummonPet_SC& from);
  void MergeFrom(const MSG_RetRefreshSummonPet_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRefreshSummonPet_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Pet.MSG_RetRefreshSummonPet_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pet_2eproto);
    return ::descriptor_table_pet_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPetFieldNumber = 1,
  };
  // repeated .Pet.PetBase pet = 1;
  int pet_size() const;
  private:
  int _internal_pet_size() const;
  public:
  void clear_pet();
  ::Pet::PetBase* mutable_pet(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Pet::PetBase >*
      mutable_pet();
  private:
  const ::Pet::PetBase& _internal_pet(int index) const;
  ::Pet::PetBase* _internal_add_pet();
  public:
  const ::Pet::PetBase& pet(int index) const;
  ::Pet::PetBase* add_pet();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Pet::PetBase >&
      pet() const;

  // @@protoc_insertion_point(class_scope:Pet.MSG_RetRefreshSummonPet_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Pet::PetBase > pet_;
  friend struct ::TableStruct_pet_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetUserPetInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Pet.MSG_RetUserPetInfo_SC) */ {
 public:
  MSG_RetUserPetInfo_SC();
  virtual ~MSG_RetUserPetInfo_SC();

  MSG_RetUserPetInfo_SC(const MSG_RetUserPetInfo_SC& from);
  MSG_RetUserPetInfo_SC(MSG_RetUserPetInfo_SC&& from) noexcept
    : MSG_RetUserPetInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetUserPetInfo_SC& operator=(const MSG_RetUserPetInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetUserPetInfo_SC& operator=(MSG_RetUserPetInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetUserPetInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetUserPetInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetUserPetInfo_SC*>(
               &_MSG_RetUserPetInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MSG_RetUserPetInfo_SC& a, MSG_RetUserPetInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetUserPetInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetUserPetInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_RetUserPetInfo_SC>(nullptr);
  }

  MSG_RetUserPetInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetUserPetInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetUserPetInfo_SC& from);
  void MergeFrom(const MSG_RetUserPetInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetUserPetInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Pet.MSG_RetUserPetInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pet_2eproto);
    return ::descriptor_table_pet_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
  };
  // optional .Pet.SummonPetUseInfo info = 1;
  bool has_info() const;
  private:
  bool _internal_has_info() const;
  public:
  void clear_info();
  const ::Pet::SummonPetUseInfo& info() const;
  ::Pet::SummonPetUseInfo* release_info();
  ::Pet::SummonPetUseInfo* mutable_info();
  void set_allocated_info(::Pet::SummonPetUseInfo* info);
  private:
  const ::Pet::SummonPetUseInfo& _internal_info() const;
  ::Pet::SummonPetUseInfo* _internal_mutable_info();
  public:

  // @@protoc_insertion_point(class_scope:Pet.MSG_RetUserPetInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::Pet::SummonPetUseInfo* info_;
  friend struct ::TableStruct_pet_2eproto;
};
// -------------------------------------------------------------------

class SummonPetUseInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Pet.SummonPetUseInfo) */ {
 public:
  SummonPetUseInfo();
  virtual ~SummonPetUseInfo();

  SummonPetUseInfo(const SummonPetUseInfo& from);
  SummonPetUseInfo(SummonPetUseInfo&& from) noexcept
    : SummonPetUseInfo() {
    *this = ::std::move(from);
  }

  inline SummonPetUseInfo& operator=(const SummonPetUseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SummonPetUseInfo& operator=(SummonPetUseInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SummonPetUseInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SummonPetUseInfo* internal_default_instance() {
    return reinterpret_cast<const SummonPetUseInfo*>(
               &_SummonPetUseInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SummonPetUseInfo& a, SummonPetUseInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SummonPetUseInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SummonPetUseInfo* New() const final {
    return CreateMaybeMessage<SummonPetUseInfo>(nullptr);
  }

  SummonPetUseInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SummonPetUseInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SummonPetUseInfo& from);
  void MergeFrom(const SummonPetUseInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SummonPetUseInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Pet.SummonPetUseInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pet_2eproto);
    return ::descriptor_table_pet_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPetlistFieldNumber = 3,
    kCurpetFieldNumber = 2,
    kNumFieldNumber = 1,
    kUnlockcountFieldNumber = 4,
    kCurassistFieldNumber = 5,
  };
  // repeated .Pet.PetBase petlist = 3;
  int petlist_size() const;
  private:
  int _internal_petlist_size() const;
  public:
  void clear_petlist();
  ::Pet::PetBase* mutable_petlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Pet::PetBase >*
      mutable_petlist();
  private:
  const ::Pet::PetBase& _internal_petlist(int index) const;
  ::Pet::PetBase* _internal_add_petlist();
  public:
  const ::Pet::PetBase& petlist(int index) const;
  ::Pet::PetBase* add_petlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Pet::PetBase >&
      petlist() const;

  // optional uint64 curpet = 2;
  bool has_curpet() const;
  private:
  bool _internal_has_curpet() const;
  public:
  void clear_curpet();
  ::PROTOBUF_NAMESPACE_ID::uint64 curpet() const;
  void set_curpet(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_curpet() const;
  void _internal_set_curpet(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 num = 1;
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 unlockcount = 4;
  bool has_unlockcount() const;
  private:
  bool _internal_has_unlockcount() const;
  public:
  void clear_unlockcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 unlockcount() const;
  void set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unlockcount() const;
  void _internal_set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 curassist = 5;
  bool has_curassist() const;
  private:
  bool _internal_has_curassist() const;
  public:
  void clear_curassist();
  ::PROTOBUF_NAMESPACE_ID::uint64 curassist() const;
  void set_curassist(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_curassist() const;
  void _internal_set_curassist(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Pet.SummonPetUseInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Pet::PetBase > petlist_;
  ::PROTOBUF_NAMESPACE_ID::uint64 curpet_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 unlockcount_;
  ::PROTOBUF_NAMESPACE_ID::uint64 curassist_;
  friend struct ::TableStruct_pet_2eproto;
};
// -------------------------------------------------------------------

class MSG_NotifyPetQTESkill_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Pet.MSG_NotifyPetQTESkill_SC) */ {
 public:
  MSG_NotifyPetQTESkill_SC();
  virtual ~MSG_NotifyPetQTESkill_SC();

  MSG_NotifyPetQTESkill_SC(const MSG_NotifyPetQTESkill_SC& from);
  MSG_NotifyPetQTESkill_SC(MSG_NotifyPetQTESkill_SC&& from) noexcept
    : MSG_NotifyPetQTESkill_SC() {
    *this = ::std::move(from);
  }

  inline MSG_NotifyPetQTESkill_SC& operator=(const MSG_NotifyPetQTESkill_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_NotifyPetQTESkill_SC& operator=(MSG_NotifyPetQTESkill_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_NotifyPetQTESkill_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_NotifyPetQTESkill_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_NotifyPetQTESkill_SC*>(
               &_MSG_NotifyPetQTESkill_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_NotifyPetQTESkill_SC& a, MSG_NotifyPetQTESkill_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_NotifyPetQTESkill_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_NotifyPetQTESkill_SC* New() const final {
    return CreateMaybeMessage<MSG_NotifyPetQTESkill_SC>(nullptr);
  }

  MSG_NotifyPetQTESkill_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_NotifyPetQTESkill_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_NotifyPetQTESkill_SC& from);
  void MergeFrom(const MSG_NotifyPetQTESkill_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_NotifyPetQTESkill_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Pet.MSG_NotifyPetQTESkill_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pet_2eproto);
    return ::descriptor_table_pet_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBosstempidFieldNumber = 2,
    kOnoffFieldNumber = 1,
    kLeftlasttimeFieldNumber = 3,
    kTotallasttimeFieldNumber = 4,
    kDistancetomasterFieldNumber = 5,
    kDistanceratioFieldNumber = 6,
  };
  // optional uint64 bosstempid = 2;
  bool has_bosstempid() const;
  private:
  bool _internal_has_bosstempid() const;
  public:
  void clear_bosstempid();
  ::PROTOBUF_NAMESPACE_ID::uint64 bosstempid() const;
  void set_bosstempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bosstempid() const;
  void _internal_set_bosstempid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 onoff = 1;
  bool has_onoff() const;
  private:
  bool _internal_has_onoff() const;
  public:
  void clear_onoff();
  ::PROTOBUF_NAMESPACE_ID::uint32 onoff() const;
  void set_onoff(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_onoff() const;
  void _internal_set_onoff(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 leftlasttime = 3;
  bool has_leftlasttime() const;
  private:
  bool _internal_has_leftlasttime() const;
  public:
  void clear_leftlasttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 leftlasttime() const;
  void set_leftlasttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_leftlasttime() const;
  void _internal_set_leftlasttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 totallasttime = 4;
  bool has_totallasttime() const;
  private:
  bool _internal_has_totallasttime() const;
  public:
  void clear_totallasttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 totallasttime() const;
  void set_totallasttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_totallasttime() const;
  void _internal_set_totallasttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 distancetomaster = 5;
  bool has_distancetomaster() const;
  private:
  bool _internal_has_distancetomaster() const;
  public:
  void clear_distancetomaster();
  ::PROTOBUF_NAMESPACE_ID::uint32 distancetomaster() const;
  void set_distancetomaster(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_distancetomaster() const;
  void _internal_set_distancetomaster(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 distanceratio = 6;
  bool has_distanceratio() const;
  private:
  bool _internal_has_distanceratio() const;
  public:
  void clear_distanceratio();
  ::PROTOBUF_NAMESPACE_ID::uint32 distanceratio() const;
  void set_distanceratio(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_distanceratio() const;
  void _internal_set_distanceratio(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Pet.MSG_NotifyPetQTESkill_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bosstempid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 onoff_;
  ::PROTOBUF_NAMESPACE_ID::uint32 leftlasttime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 totallasttime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 distancetomaster_;
  ::PROTOBUF_NAMESPACE_ID::uint32 distanceratio_;
  friend struct ::TableStruct_pet_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqUnlockPetNum_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Pet.MSG_ReqUnlockPetNum_CS) */ {
 public:
  MSG_ReqUnlockPetNum_CS();
  virtual ~MSG_ReqUnlockPetNum_CS();

  MSG_ReqUnlockPetNum_CS(const MSG_ReqUnlockPetNum_CS& from);
  MSG_ReqUnlockPetNum_CS(MSG_ReqUnlockPetNum_CS&& from) noexcept
    : MSG_ReqUnlockPetNum_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqUnlockPetNum_CS& operator=(const MSG_ReqUnlockPetNum_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqUnlockPetNum_CS& operator=(MSG_ReqUnlockPetNum_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqUnlockPetNum_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqUnlockPetNum_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqUnlockPetNum_CS*>(
               &_MSG_ReqUnlockPetNum_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_ReqUnlockPetNum_CS& a, MSG_ReqUnlockPetNum_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqUnlockPetNum_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqUnlockPetNum_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqUnlockPetNum_CS>(nullptr);
  }

  MSG_ReqUnlockPetNum_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqUnlockPetNum_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqUnlockPetNum_CS& from);
  void MergeFrom(const MSG_ReqUnlockPetNum_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqUnlockPetNum_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Pet.MSG_ReqUnlockPetNum_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pet_2eproto);
    return ::descriptor_table_pet_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnlockcountFieldNumber = 1,
  };
  // optional uint32 unlockcount = 1;
  bool has_unlockcount() const;
  private:
  bool _internal_has_unlockcount() const;
  public:
  void clear_unlockcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 unlockcount() const;
  void set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unlockcount() const;
  void _internal_set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Pet.MSG_ReqUnlockPetNum_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 unlockcount_;
  friend struct ::TableStruct_pet_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetUnlockPetNum_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Pet.MSG_RetUnlockPetNum_SC) */ {
 public:
  MSG_RetUnlockPetNum_SC();
  virtual ~MSG_RetUnlockPetNum_SC();

  MSG_RetUnlockPetNum_SC(const MSG_RetUnlockPetNum_SC& from);
  MSG_RetUnlockPetNum_SC(MSG_RetUnlockPetNum_SC&& from) noexcept
    : MSG_RetUnlockPetNum_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetUnlockPetNum_SC& operator=(const MSG_RetUnlockPetNum_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetUnlockPetNum_SC& operator=(MSG_RetUnlockPetNum_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetUnlockPetNum_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetUnlockPetNum_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetUnlockPetNum_SC*>(
               &_MSG_RetUnlockPetNum_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_RetUnlockPetNum_SC& a, MSG_RetUnlockPetNum_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetUnlockPetNum_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetUnlockPetNum_SC* New() const final {
    return CreateMaybeMessage<MSG_RetUnlockPetNum_SC>(nullptr);
  }

  MSG_RetUnlockPetNum_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetUnlockPetNum_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetUnlockPetNum_SC& from);
  void MergeFrom(const MSG_RetUnlockPetNum_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetUnlockPetNum_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Pet.MSG_RetUnlockPetNum_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_pet_2eproto);
    return ::descriptor_table_pet_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Pet.MSG_RetUnlockPetNum_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_pet_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PropItem

// optional uint32 pdamage = 1;
inline bool PropItem::_internal_has_pdamage() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PropItem::has_pdamage() const {
  return _internal_has_pdamage();
}
inline void PropItem::clear_pdamage() {
  pdamage_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::_internal_pdamage() const {
  return pdamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::pdamage() const {
  // @@protoc_insertion_point(field_get:Pet.PropItem.pdamage)
  return _internal_pdamage();
}
inline void PropItem::_internal_set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  pdamage_ = value;
}
inline void PropItem::set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdamage(value);
  // @@protoc_insertion_point(field_set:Pet.PropItem.pdamage)
}

// optional uint32 pdefence = 2;
inline bool PropItem::_internal_has_pdefence() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PropItem::has_pdefence() const {
  return _internal_has_pdefence();
}
inline void PropItem::clear_pdefence() {
  pdefence_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::_internal_pdefence() const {
  return pdefence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::pdefence() const {
  // @@protoc_insertion_point(field_get:Pet.PropItem.pdefence)
  return _internal_pdefence();
}
inline void PropItem::_internal_set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pdefence_ = value;
}
inline void PropItem::set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdefence(value);
  // @@protoc_insertion_point(field_set:Pet.PropItem.pdefence)
}

// optional uint32 maxhp = 3;
inline bool PropItem::_internal_has_maxhp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PropItem::has_maxhp() const {
  return _internal_has_maxhp();
}
inline void PropItem::clear_maxhp() {
  maxhp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::_internal_maxhp() const {
  return maxhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::maxhp() const {
  // @@protoc_insertion_point(field_get:Pet.PropItem.maxhp)
  return _internal_maxhp();
}
inline void PropItem::_internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  maxhp_ = value;
}
inline void PropItem::set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxhp(value);
  // @@protoc_insertion_point(field_set:Pet.PropItem.maxhp)
}

// optional uint32 toughness = 4;
inline bool PropItem::_internal_has_toughness() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PropItem::has_toughness() const {
  return _internal_has_toughness();
}
inline void PropItem::clear_toughness() {
  toughness_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::_internal_toughness() const {
  return toughness_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::toughness() const {
  // @@protoc_insertion_point(field_get:Pet.PropItem.toughness)
  return _internal_toughness();
}
inline void PropItem::_internal_set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  toughness_ = value;
}
inline void PropItem::set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_toughness(value);
  // @@protoc_insertion_point(field_set:Pet.PropItem.toughness)
}

// optional uint32 bang = 5;
inline bool PropItem::_internal_has_bang() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PropItem::has_bang() const {
  return _internal_has_bang();
}
inline void PropItem::clear_bang() {
  bang_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::_internal_bang() const {
  return bang_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::bang() const {
  // @@protoc_insertion_point(field_get:Pet.PropItem.bang)
  return _internal_bang();
}
inline void PropItem::_internal_set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  bang_ = value;
}
inline void PropItem::set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bang(value);
  // @@protoc_insertion_point(field_set:Pet.PropItem.bang)
}

// optional uint32 accurate = 6;
inline bool PropItem::_internal_has_accurate() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PropItem::has_accurate() const {
  return _internal_has_accurate();
}
inline void PropItem::clear_accurate() {
  accurate_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::_internal_accurate() const {
  return accurate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::accurate() const {
  // @@protoc_insertion_point(field_get:Pet.PropItem.accurate)
  return _internal_accurate();
}
inline void PropItem::_internal_set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  accurate_ = value;
}
inline void PropItem::set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accurate(value);
  // @@protoc_insertion_point(field_set:Pet.PropItem.accurate)
}

// optional uint32 hold = 7;
inline bool PropItem::_internal_has_hold() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool PropItem::has_hold() const {
  return _internal_has_hold();
}
inline void PropItem::clear_hold() {
  hold_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::_internal_hold() const {
  return hold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::hold() const {
  // @@protoc_insertion_point(field_get:Pet.PropItem.hold)
  return _internal_hold();
}
inline void PropItem::_internal_set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  hold_ = value;
}
inline void PropItem::set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hold(value);
  // @@protoc_insertion_point(field_set:Pet.PropItem.hold)
}

// optional uint32 hit = 8;
inline bool PropItem::_internal_has_hit() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool PropItem::has_hit() const {
  return _internal_has_hit();
}
inline void PropItem::clear_hit() {
  hit_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::_internal_hit() const {
  return hit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::hit() const {
  // @@protoc_insertion_point(field_get:Pet.PropItem.hit)
  return _internal_hit();
}
inline void PropItem::_internal_set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  hit_ = value;
}
inline void PropItem::set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hit(value);
  // @@protoc_insertion_point(field_set:Pet.PropItem.hit)
}

// optional uint32 miss = 9;
inline bool PropItem::_internal_has_miss() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool PropItem::has_miss() const {
  return _internal_has_miss();
}
inline void PropItem::clear_miss() {
  miss_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::_internal_miss() const {
  return miss_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PropItem::miss() const {
  // @@protoc_insertion_point(field_get:Pet.PropItem.miss)
  return _internal_miss();
}
inline void PropItem::_internal_set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  miss_ = value;
}
inline void PropItem::set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_miss(value);
  // @@protoc_insertion_point(field_set:Pet.PropItem.miss)
}

// -------------------------------------------------------------------

// PetBase

// optional uint32 id = 1;
inline bool PetBase::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PetBase::has_id() const {
  return _internal_has_id();
}
inline void PetBase::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::id() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.id)
  return _internal_id();
}
inline void PetBase::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  id_ = value;
}
inline void PetBase::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.id)
}

// optional string name = 2;
inline bool PetBase::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PetBase::has_name() const {
  return _internal_has_name();
}
inline void PetBase::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PetBase::name() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.name)
  return _internal_name();
}
inline void PetBase::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.name)
}
inline std::string* PetBase::mutable_name() {
  // @@protoc_insertion_point(field_mutable:Pet.PetBase.name)
  return _internal_mutable_name();
}
inline const std::string& PetBase::_internal_name() const {
  return name_.GetNoArena();
}
inline void PetBase::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PetBase::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pet.PetBase.name)
}
inline void PetBase::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pet.PetBase.name)
}
inline void PetBase::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pet.PetBase.name)
}
inline std::string* PetBase::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PetBase::release_name() {
  // @@protoc_insertion_point(field_release:Pet.PetBase.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PetBase::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Pet.PetBase.name)
}

// optional uint64 tempid = 3;
inline bool PetBase::_internal_has_tempid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PetBase::has_tempid() const {
  return _internal_has_tempid();
}
inline void PetBase::clear_tempid() {
  tempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PetBase::_internal_tempid() const {
  return tempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PetBase::tempid() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.tempid)
  return _internal_tempid();
}
inline void PetBase::_internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  tempid_ = value;
}
inline void PetBase::set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tempid(value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.tempid)
}

// optional uint32 level = 4;
inline bool PetBase::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PetBase::has_level() const {
  return _internal_has_level();
}
inline void PetBase::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::level() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.level)
  return _internal_level();
}
inline void PetBase::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  level_ = value;
}
inline void PetBase::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.level)
}

// optional uint32 exp = 5;
inline bool PetBase::_internal_has_exp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool PetBase::has_exp() const {
  return _internal_has_exp();
}
inline void PetBase::clear_exp() {
  exp_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::_internal_exp() const {
  return exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::exp() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.exp)
  return _internal_exp();
}
inline void PetBase::_internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  exp_ = value;
}
inline void PetBase::set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.exp)
}

// optional uint32 hp = 6;
inline bool PetBase::_internal_has_hp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool PetBase::has_hp() const {
  return _internal_has_hp();
}
inline void PetBase::clear_hp() {
  hp_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::_internal_hp() const {
  return hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::hp() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.hp)
  return _internal_hp();
}
inline void PetBase::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  hp_ = value;
}
inline void PetBase::set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.hp)
}

// optional uint32 quality = 7 [default = 0];
inline bool PetBase::_internal_has_quality() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool PetBase::has_quality() const {
  return _internal_has_quality();
}
inline void PetBase::clear_quality() {
  quality_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::_internal_quality() const {
  return quality_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::quality() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.quality)
  return _internal_quality();
}
inline void PetBase::_internal_set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  quality_ = value;
}
inline void PetBase::set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quality(value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.quality)
}

// optional .Pet.PropItem prop = 8;
inline bool PetBase::_internal_has_prop() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || prop_ != nullptr);
  return value;
}
inline bool PetBase::has_prop() const {
  return _internal_has_prop();
}
inline void PetBase::clear_prop() {
  if (prop_ != nullptr) prop_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::Pet::PropItem& PetBase::_internal_prop() const {
  const ::Pet::PropItem* p = prop_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Pet::PropItem*>(
      &::Pet::_PropItem_default_instance_);
}
inline const ::Pet::PropItem& PetBase::prop() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.prop)
  return _internal_prop();
}
inline ::Pet::PropItem* PetBase::release_prop() {
  // @@protoc_insertion_point(field_release:Pet.PetBase.prop)
  _has_bits_[0] &= ~0x00000002u;
  ::Pet::PropItem* temp = prop_;
  prop_ = nullptr;
  return temp;
}
inline ::Pet::PropItem* PetBase::_internal_mutable_prop() {
  _has_bits_[0] |= 0x00000002u;
  if (prop_ == nullptr) {
    auto* p = CreateMaybeMessage<::Pet::PropItem>(GetArenaNoVirtual());
    prop_ = p;
  }
  return prop_;
}
inline ::Pet::PropItem* PetBase::mutable_prop() {
  // @@protoc_insertion_point(field_mutable:Pet.PetBase.prop)
  return _internal_mutable_prop();
}
inline void PetBase::set_allocated_prop(::Pet::PropItem* prop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete prop_;
  }
  if (prop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      prop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, prop, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  prop_ = prop;
  // @@protoc_insertion_point(field_set_allocated:Pet.PetBase.prop)
}

// optional .Pet.PropItem aptitude = 9;
inline bool PetBase::_internal_has_aptitude() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || aptitude_ != nullptr);
  return value;
}
inline bool PetBase::has_aptitude() const {
  return _internal_has_aptitude();
}
inline void PetBase::clear_aptitude() {
  if (aptitude_ != nullptr) aptitude_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::Pet::PropItem& PetBase::_internal_aptitude() const {
  const ::Pet::PropItem* p = aptitude_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Pet::PropItem*>(
      &::Pet::_PropItem_default_instance_);
}
inline const ::Pet::PropItem& PetBase::aptitude() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.aptitude)
  return _internal_aptitude();
}
inline ::Pet::PropItem* PetBase::release_aptitude() {
  // @@protoc_insertion_point(field_release:Pet.PetBase.aptitude)
  _has_bits_[0] &= ~0x00000004u;
  ::Pet::PropItem* temp = aptitude_;
  aptitude_ = nullptr;
  return temp;
}
inline ::Pet::PropItem* PetBase::_internal_mutable_aptitude() {
  _has_bits_[0] |= 0x00000004u;
  if (aptitude_ == nullptr) {
    auto* p = CreateMaybeMessage<::Pet::PropItem>(GetArenaNoVirtual());
    aptitude_ = p;
  }
  return aptitude_;
}
inline ::Pet::PropItem* PetBase::mutable_aptitude() {
  // @@protoc_insertion_point(field_mutable:Pet.PetBase.aptitude)
  return _internal_mutable_aptitude();
}
inline void PetBase::set_allocated_aptitude(::Pet::PropItem* aptitude) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete aptitude_;
  }
  if (aptitude) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      aptitude = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, aptitude, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  aptitude_ = aptitude;
  // @@protoc_insertion_point(field_set_allocated:Pet.PetBase.aptitude)
}

// repeated .Pet.PetState state = 10;
inline int PetBase::_internal_state_size() const {
  return state_.size();
}
inline int PetBase::state_size() const {
  return _internal_state_size();
}
inline void PetBase::clear_state() {
  state_.Clear();
}
inline ::Pet::PetState PetBase::_internal_state(int index) const {
  return static_cast< ::Pet::PetState >(state_.Get(index));
}
inline ::Pet::PetState PetBase::state(int index) const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.state)
  return _internal_state(index);
}
inline void PetBase::set_state(int index, ::Pet::PetState value) {
  assert(::Pet::PetState_IsValid(value));
  state_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.state)
}
inline void PetBase::_internal_add_state(::Pet::PetState value) {
  assert(::Pet::PetState_IsValid(value));
  state_.Add(value);
}
inline void PetBase::add_state(::Pet::PetState value) {
  // @@protoc_insertion_point(field_add:Pet.PetBase.state)
  _internal_add_state(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
PetBase::state() const {
  // @@protoc_insertion_point(field_list:Pet.PetBase.state)
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
PetBase::_internal_mutable_state() {
  return &state_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
PetBase::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:Pet.PetBase.state)
  return _internal_mutable_state();
}

// optional uint32 passivenum = 11;
inline bool PetBase::_internal_has_passivenum() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool PetBase::has_passivenum() const {
  return _internal_has_passivenum();
}
inline void PetBase::clear_passivenum() {
  passivenum_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::_internal_passivenum() const {
  return passivenum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::passivenum() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.passivenum)
  return _internal_passivenum();
}
inline void PetBase::_internal_set_passivenum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  passivenum_ = value;
}
inline void PetBase::set_passivenum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_passivenum(value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.passivenum)
}

// optional uint32 activeskillid = 12;
inline bool PetBase::_internal_has_activeskillid() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool PetBase::has_activeskillid() const {
  return _internal_has_activeskillid();
}
inline void PetBase::clear_activeskillid() {
  activeskillid_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::_internal_activeskillid() const {
  return activeskillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::activeskillid() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.activeskillid)
  return _internal_activeskillid();
}
inline void PetBase::_internal_set_activeskillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  activeskillid_ = value;
}
inline void PetBase::set_activeskillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_activeskillid(value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.activeskillid)
}

// optional uint32 talentskillid = 13;
inline bool PetBase::_internal_has_talentskillid() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool PetBase::has_talentskillid() const {
  return _internal_has_talentskillid();
}
inline void PetBase::clear_talentskillid() {
  talentskillid_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::_internal_talentskillid() const {
  return talentskillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PetBase::talentskillid() const {
  // @@protoc_insertion_point(field_get:Pet.PetBase.talentskillid)
  return _internal_talentskillid();
}
inline void PetBase::_internal_set_talentskillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  talentskillid_ = value;
}
inline void PetBase::set_talentskillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_talentskillid(value);
  // @@protoc_insertion_point(field_set:Pet.PetBase.talentskillid)
}

// -------------------------------------------------------------------

// MSG_ReqSwitchPetState_CS

// optional uint64 tempid = 1;
inline bool MSG_ReqSwitchPetState_CS::_internal_has_tempid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSwitchPetState_CS::has_tempid() const {
  return _internal_has_tempid();
}
inline void MSG_ReqSwitchPetState_CS::clear_tempid() {
  tempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_ReqSwitchPetState_CS::_internal_tempid() const {
  return tempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_ReqSwitchPetState_CS::tempid() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_ReqSwitchPetState_CS.tempid)
  return _internal_tempid();
}
inline void MSG_ReqSwitchPetState_CS::_internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  tempid_ = value;
}
inline void MSG_ReqSwitchPetState_CS::set_tempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tempid(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_ReqSwitchPetState_CS.tempid)
}

// optional .Pet.PetState fromstate = 2;
inline bool MSG_ReqSwitchPetState_CS::_internal_has_fromstate() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqSwitchPetState_CS::has_fromstate() const {
  return _internal_has_fromstate();
}
inline void MSG_ReqSwitchPetState_CS::clear_fromstate() {
  fromstate_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::Pet::PetState MSG_ReqSwitchPetState_CS::_internal_fromstate() const {
  return static_cast< ::Pet::PetState >(fromstate_);
}
inline ::Pet::PetState MSG_ReqSwitchPetState_CS::fromstate() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_ReqSwitchPetState_CS.fromstate)
  return _internal_fromstate();
}
inline void MSG_ReqSwitchPetState_CS::_internal_set_fromstate(::Pet::PetState value) {
  assert(::Pet::PetState_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  fromstate_ = value;
}
inline void MSG_ReqSwitchPetState_CS::set_fromstate(::Pet::PetState value) {
  _internal_set_fromstate(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_ReqSwitchPetState_CS.fromstate)
}

// optional .Pet.PetState tostate = 3;
inline bool MSG_ReqSwitchPetState_CS::_internal_has_tostate() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqSwitchPetState_CS::has_tostate() const {
  return _internal_has_tostate();
}
inline void MSG_ReqSwitchPetState_CS::clear_tostate() {
  tostate_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::Pet::PetState MSG_ReqSwitchPetState_CS::_internal_tostate() const {
  return static_cast< ::Pet::PetState >(tostate_);
}
inline ::Pet::PetState MSG_ReqSwitchPetState_CS::tostate() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_ReqSwitchPetState_CS.tostate)
  return _internal_tostate();
}
inline void MSG_ReqSwitchPetState_CS::_internal_set_tostate(::Pet::PetState value) {
  assert(::Pet::PetState_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  tostate_ = value;
}
inline void MSG_ReqSwitchPetState_CS::set_tostate(::Pet::PetState value) {
  _internal_set_tostate(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_ReqSwitchPetState_CS.tostate)
}

// -------------------------------------------------------------------

// MSG_RetSwitchPetState_SC

// optional uint32 errcode = 1;
inline bool MSG_RetSwitchPetState_SC::_internal_has_errcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetSwitchPetState_SC::has_errcode() const {
  return _internal_has_errcode();
}
inline void MSG_RetSwitchPetState_SC::clear_errcode() {
  errcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSwitchPetState_SC::_internal_errcode() const {
  return errcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSwitchPetState_SC::errcode() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_RetSwitchPetState_SC.errcode)
  return _internal_errcode();
}
inline void MSG_RetSwitchPetState_SC::_internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  errcode_ = value;
}
inline void MSG_RetSwitchPetState_SC::set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errcode(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_RetSwitchPetState_SC.errcode)
}

// optional uint32 tempid = 2;
inline bool MSG_RetSwitchPetState_SC::_internal_has_tempid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetSwitchPetState_SC::has_tempid() const {
  return _internal_has_tempid();
}
inline void MSG_RetSwitchPetState_SC::clear_tempid() {
  tempid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSwitchPetState_SC::_internal_tempid() const {
  return tempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSwitchPetState_SC::tempid() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_RetSwitchPetState_SC.tempid)
  return _internal_tempid();
}
inline void MSG_RetSwitchPetState_SC::_internal_set_tempid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  tempid_ = value;
}
inline void MSG_RetSwitchPetState_SC::set_tempid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tempid(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_RetSwitchPetState_SC.tempid)
}

// repeated .Pet.PetState curstate = 3;
inline int MSG_RetSwitchPetState_SC::_internal_curstate_size() const {
  return curstate_.size();
}
inline int MSG_RetSwitchPetState_SC::curstate_size() const {
  return _internal_curstate_size();
}
inline void MSG_RetSwitchPetState_SC::clear_curstate() {
  curstate_.Clear();
}
inline ::Pet::PetState MSG_RetSwitchPetState_SC::_internal_curstate(int index) const {
  return static_cast< ::Pet::PetState >(curstate_.Get(index));
}
inline ::Pet::PetState MSG_RetSwitchPetState_SC::curstate(int index) const {
  // @@protoc_insertion_point(field_get:Pet.MSG_RetSwitchPetState_SC.curstate)
  return _internal_curstate(index);
}
inline void MSG_RetSwitchPetState_SC::set_curstate(int index, ::Pet::PetState value) {
  assert(::Pet::PetState_IsValid(value));
  curstate_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pet.MSG_RetSwitchPetState_SC.curstate)
}
inline void MSG_RetSwitchPetState_SC::_internal_add_curstate(::Pet::PetState value) {
  assert(::Pet::PetState_IsValid(value));
  curstate_.Add(value);
}
inline void MSG_RetSwitchPetState_SC::add_curstate(::Pet::PetState value) {
  // @@protoc_insertion_point(field_add:Pet.MSG_RetSwitchPetState_SC.curstate)
  _internal_add_curstate(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
MSG_RetSwitchPetState_SC::curstate() const {
  // @@protoc_insertion_point(field_list:Pet.MSG_RetSwitchPetState_SC.curstate)
  return curstate_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
MSG_RetSwitchPetState_SC::_internal_mutable_curstate() {
  return &curstate_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
MSG_RetSwitchPetState_SC::mutable_curstate() {
  // @@protoc_insertion_point(field_mutable_list:Pet.MSG_RetSwitchPetState_SC.curstate)
  return _internal_mutable_curstate();
}

// -------------------------------------------------------------------

// MSG_RetRefreshSummonPet_SC

// repeated .Pet.PetBase pet = 1;
inline int MSG_RetRefreshSummonPet_SC::_internal_pet_size() const {
  return pet_.size();
}
inline int MSG_RetRefreshSummonPet_SC::pet_size() const {
  return _internal_pet_size();
}
inline void MSG_RetRefreshSummonPet_SC::clear_pet() {
  pet_.Clear();
}
inline ::Pet::PetBase* MSG_RetRefreshSummonPet_SC::mutable_pet(int index) {
  // @@protoc_insertion_point(field_mutable:Pet.MSG_RetRefreshSummonPet_SC.pet)
  return pet_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Pet::PetBase >*
MSG_RetRefreshSummonPet_SC::mutable_pet() {
  // @@protoc_insertion_point(field_mutable_list:Pet.MSG_RetRefreshSummonPet_SC.pet)
  return &pet_;
}
inline const ::Pet::PetBase& MSG_RetRefreshSummonPet_SC::_internal_pet(int index) const {
  return pet_.Get(index);
}
inline const ::Pet::PetBase& MSG_RetRefreshSummonPet_SC::pet(int index) const {
  // @@protoc_insertion_point(field_get:Pet.MSG_RetRefreshSummonPet_SC.pet)
  return _internal_pet(index);
}
inline ::Pet::PetBase* MSG_RetRefreshSummonPet_SC::_internal_add_pet() {
  return pet_.Add();
}
inline ::Pet::PetBase* MSG_RetRefreshSummonPet_SC::add_pet() {
  // @@protoc_insertion_point(field_add:Pet.MSG_RetRefreshSummonPet_SC.pet)
  return _internal_add_pet();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Pet::PetBase >&
MSG_RetRefreshSummonPet_SC::pet() const {
  // @@protoc_insertion_point(field_list:Pet.MSG_RetRefreshSummonPet_SC.pet)
  return pet_;
}

// -------------------------------------------------------------------

// MSG_RetUserPetInfo_SC

// optional .Pet.SummonPetUseInfo info = 1;
inline bool MSG_RetUserPetInfo_SC::_internal_has_info() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || info_ != nullptr);
  return value;
}
inline bool MSG_RetUserPetInfo_SC::has_info() const {
  return _internal_has_info();
}
inline void MSG_RetUserPetInfo_SC::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::Pet::SummonPetUseInfo& MSG_RetUserPetInfo_SC::_internal_info() const {
  const ::Pet::SummonPetUseInfo* p = info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Pet::SummonPetUseInfo*>(
      &::Pet::_SummonPetUseInfo_default_instance_);
}
inline const ::Pet::SummonPetUseInfo& MSG_RetUserPetInfo_SC::info() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_RetUserPetInfo_SC.info)
  return _internal_info();
}
inline ::Pet::SummonPetUseInfo* MSG_RetUserPetInfo_SC::release_info() {
  // @@protoc_insertion_point(field_release:Pet.MSG_RetUserPetInfo_SC.info)
  _has_bits_[0] &= ~0x00000001u;
  ::Pet::SummonPetUseInfo* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::Pet::SummonPetUseInfo* MSG_RetUserPetInfo_SC::_internal_mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::Pet::SummonPetUseInfo>(GetArenaNoVirtual());
    info_ = p;
  }
  return info_;
}
inline ::Pet::SummonPetUseInfo* MSG_RetUserPetInfo_SC::mutable_info() {
  // @@protoc_insertion_point(field_mutable:Pet.MSG_RetUserPetInfo_SC.info)
  return _internal_mutable_info();
}
inline void MSG_RetUserPetInfo_SC::set_allocated_info(::Pet::SummonPetUseInfo* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:Pet.MSG_RetUserPetInfo_SC.info)
}

// -------------------------------------------------------------------

// SummonPetUseInfo

// optional uint32 num = 1;
inline bool SummonPetUseInfo::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SummonPetUseInfo::has_num() const {
  return _internal_has_num();
}
inline void SummonPetUseInfo::clear_num() {
  num_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SummonPetUseInfo::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SummonPetUseInfo::num() const {
  // @@protoc_insertion_point(field_get:Pet.SummonPetUseInfo.num)
  return _internal_num();
}
inline void SummonPetUseInfo::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_ = value;
}
inline void SummonPetUseInfo::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:Pet.SummonPetUseInfo.num)
}

// optional uint64 curpet = 2;
inline bool SummonPetUseInfo::_internal_has_curpet() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SummonPetUseInfo::has_curpet() const {
  return _internal_has_curpet();
}
inline void SummonPetUseInfo::clear_curpet() {
  curpet_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SummonPetUseInfo::_internal_curpet() const {
  return curpet_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SummonPetUseInfo::curpet() const {
  // @@protoc_insertion_point(field_get:Pet.SummonPetUseInfo.curpet)
  return _internal_curpet();
}
inline void SummonPetUseInfo::_internal_set_curpet(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  curpet_ = value;
}
inline void SummonPetUseInfo::set_curpet(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_curpet(value);
  // @@protoc_insertion_point(field_set:Pet.SummonPetUseInfo.curpet)
}

// repeated .Pet.PetBase petlist = 3;
inline int SummonPetUseInfo::_internal_petlist_size() const {
  return petlist_.size();
}
inline int SummonPetUseInfo::petlist_size() const {
  return _internal_petlist_size();
}
inline void SummonPetUseInfo::clear_petlist() {
  petlist_.Clear();
}
inline ::Pet::PetBase* SummonPetUseInfo::mutable_petlist(int index) {
  // @@protoc_insertion_point(field_mutable:Pet.SummonPetUseInfo.petlist)
  return petlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Pet::PetBase >*
SummonPetUseInfo::mutable_petlist() {
  // @@protoc_insertion_point(field_mutable_list:Pet.SummonPetUseInfo.petlist)
  return &petlist_;
}
inline const ::Pet::PetBase& SummonPetUseInfo::_internal_petlist(int index) const {
  return petlist_.Get(index);
}
inline const ::Pet::PetBase& SummonPetUseInfo::petlist(int index) const {
  // @@protoc_insertion_point(field_get:Pet.SummonPetUseInfo.petlist)
  return _internal_petlist(index);
}
inline ::Pet::PetBase* SummonPetUseInfo::_internal_add_petlist() {
  return petlist_.Add();
}
inline ::Pet::PetBase* SummonPetUseInfo::add_petlist() {
  // @@protoc_insertion_point(field_add:Pet.SummonPetUseInfo.petlist)
  return _internal_add_petlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Pet::PetBase >&
SummonPetUseInfo::petlist() const {
  // @@protoc_insertion_point(field_list:Pet.SummonPetUseInfo.petlist)
  return petlist_;
}

// optional uint32 unlockcount = 4;
inline bool SummonPetUseInfo::_internal_has_unlockcount() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SummonPetUseInfo::has_unlockcount() const {
  return _internal_has_unlockcount();
}
inline void SummonPetUseInfo::clear_unlockcount() {
  unlockcount_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SummonPetUseInfo::_internal_unlockcount() const {
  return unlockcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SummonPetUseInfo::unlockcount() const {
  // @@protoc_insertion_point(field_get:Pet.SummonPetUseInfo.unlockcount)
  return _internal_unlockcount();
}
inline void SummonPetUseInfo::_internal_set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  unlockcount_ = value;
}
inline void SummonPetUseInfo::set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_unlockcount(value);
  // @@protoc_insertion_point(field_set:Pet.SummonPetUseInfo.unlockcount)
}

// optional uint64 curassist = 5;
inline bool SummonPetUseInfo::_internal_has_curassist() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SummonPetUseInfo::has_curassist() const {
  return _internal_has_curassist();
}
inline void SummonPetUseInfo::clear_curassist() {
  curassist_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SummonPetUseInfo::_internal_curassist() const {
  return curassist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SummonPetUseInfo::curassist() const {
  // @@protoc_insertion_point(field_get:Pet.SummonPetUseInfo.curassist)
  return _internal_curassist();
}
inline void SummonPetUseInfo::_internal_set_curassist(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  curassist_ = value;
}
inline void SummonPetUseInfo::set_curassist(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_curassist(value);
  // @@protoc_insertion_point(field_set:Pet.SummonPetUseInfo.curassist)
}

// -------------------------------------------------------------------

// MSG_NotifyPetQTESkill_SC

// optional uint32 onoff = 1;
inline bool MSG_NotifyPetQTESkill_SC::_internal_has_onoff() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_NotifyPetQTESkill_SC::has_onoff() const {
  return _internal_has_onoff();
}
inline void MSG_NotifyPetQTESkill_SC::clear_onoff() {
  onoff_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyPetQTESkill_SC::_internal_onoff() const {
  return onoff_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyPetQTESkill_SC::onoff() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_NotifyPetQTESkill_SC.onoff)
  return _internal_onoff();
}
inline void MSG_NotifyPetQTESkill_SC::_internal_set_onoff(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  onoff_ = value;
}
inline void MSG_NotifyPetQTESkill_SC::set_onoff(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_onoff(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_NotifyPetQTESkill_SC.onoff)
}

// optional uint64 bosstempid = 2;
inline bool MSG_NotifyPetQTESkill_SC::_internal_has_bosstempid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_NotifyPetQTESkill_SC::has_bosstempid() const {
  return _internal_has_bosstempid();
}
inline void MSG_NotifyPetQTESkill_SC::clear_bosstempid() {
  bosstempid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_NotifyPetQTESkill_SC::_internal_bosstempid() const {
  return bosstempid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_NotifyPetQTESkill_SC::bosstempid() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_NotifyPetQTESkill_SC.bosstempid)
  return _internal_bosstempid();
}
inline void MSG_NotifyPetQTESkill_SC::_internal_set_bosstempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  bosstempid_ = value;
}
inline void MSG_NotifyPetQTESkill_SC::set_bosstempid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bosstempid(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_NotifyPetQTESkill_SC.bosstempid)
}

// optional uint32 leftlasttime = 3;
inline bool MSG_NotifyPetQTESkill_SC::_internal_has_leftlasttime() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_NotifyPetQTESkill_SC::has_leftlasttime() const {
  return _internal_has_leftlasttime();
}
inline void MSG_NotifyPetQTESkill_SC::clear_leftlasttime() {
  leftlasttime_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyPetQTESkill_SC::_internal_leftlasttime() const {
  return leftlasttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyPetQTESkill_SC::leftlasttime() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_NotifyPetQTESkill_SC.leftlasttime)
  return _internal_leftlasttime();
}
inline void MSG_NotifyPetQTESkill_SC::_internal_set_leftlasttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  leftlasttime_ = value;
}
inline void MSG_NotifyPetQTESkill_SC::set_leftlasttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_leftlasttime(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_NotifyPetQTESkill_SC.leftlasttime)
}

// optional uint32 totallasttime = 4;
inline bool MSG_NotifyPetQTESkill_SC::_internal_has_totallasttime() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_NotifyPetQTESkill_SC::has_totallasttime() const {
  return _internal_has_totallasttime();
}
inline void MSG_NotifyPetQTESkill_SC::clear_totallasttime() {
  totallasttime_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyPetQTESkill_SC::_internal_totallasttime() const {
  return totallasttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyPetQTESkill_SC::totallasttime() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_NotifyPetQTESkill_SC.totallasttime)
  return _internal_totallasttime();
}
inline void MSG_NotifyPetQTESkill_SC::_internal_set_totallasttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  totallasttime_ = value;
}
inline void MSG_NotifyPetQTESkill_SC::set_totallasttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_totallasttime(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_NotifyPetQTESkill_SC.totallasttime)
}

// optional uint32 distancetomaster = 5;
inline bool MSG_NotifyPetQTESkill_SC::_internal_has_distancetomaster() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_NotifyPetQTESkill_SC::has_distancetomaster() const {
  return _internal_has_distancetomaster();
}
inline void MSG_NotifyPetQTESkill_SC::clear_distancetomaster() {
  distancetomaster_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyPetQTESkill_SC::_internal_distancetomaster() const {
  return distancetomaster_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyPetQTESkill_SC::distancetomaster() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_NotifyPetQTESkill_SC.distancetomaster)
  return _internal_distancetomaster();
}
inline void MSG_NotifyPetQTESkill_SC::_internal_set_distancetomaster(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  distancetomaster_ = value;
}
inline void MSG_NotifyPetQTESkill_SC::set_distancetomaster(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_distancetomaster(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_NotifyPetQTESkill_SC.distancetomaster)
}

// optional uint32 distanceratio = 6;
inline bool MSG_NotifyPetQTESkill_SC::_internal_has_distanceratio() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_NotifyPetQTESkill_SC::has_distanceratio() const {
  return _internal_has_distanceratio();
}
inline void MSG_NotifyPetQTESkill_SC::clear_distanceratio() {
  distanceratio_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyPetQTESkill_SC::_internal_distanceratio() const {
  return distanceratio_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyPetQTESkill_SC::distanceratio() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_NotifyPetQTESkill_SC.distanceratio)
  return _internal_distanceratio();
}
inline void MSG_NotifyPetQTESkill_SC::_internal_set_distanceratio(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  distanceratio_ = value;
}
inline void MSG_NotifyPetQTESkill_SC::set_distanceratio(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_distanceratio(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_NotifyPetQTESkill_SC.distanceratio)
}

// -------------------------------------------------------------------

// MSG_ReqUnlockPetNum_CS

// optional uint32 unlockcount = 1;
inline bool MSG_ReqUnlockPetNum_CS::_internal_has_unlockcount() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqUnlockPetNum_CS::has_unlockcount() const {
  return _internal_has_unlockcount();
}
inline void MSG_ReqUnlockPetNum_CS::clear_unlockcount() {
  unlockcount_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqUnlockPetNum_CS::_internal_unlockcount() const {
  return unlockcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqUnlockPetNum_CS::unlockcount() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_ReqUnlockPetNum_CS.unlockcount)
  return _internal_unlockcount();
}
inline void MSG_ReqUnlockPetNum_CS::_internal_set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  unlockcount_ = value;
}
inline void MSG_ReqUnlockPetNum_CS::set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_unlockcount(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_ReqUnlockPetNum_CS.unlockcount)
}

// -------------------------------------------------------------------

// MSG_RetUnlockPetNum_SC

// optional uint32 retcode = 1;
inline bool MSG_RetUnlockPetNum_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetUnlockPetNum_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetUnlockPetNum_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetUnlockPetNum_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetUnlockPetNum_SC::retcode() const {
  // @@protoc_insertion_point(field_get:Pet.MSG_RetUnlockPetNum_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetUnlockPetNum_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_RetUnlockPetNum_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:Pet.MSG_RetUnlockPetNum_SC.retcode)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pet

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Pet::PetProp> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pet::PetProp>() {
  return ::Pet::PetProp_descriptor();
}
template <> struct is_proto_enum< ::Pet::PetState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pet::PetState>() {
  return ::Pet::PetState_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_pet_2eproto
