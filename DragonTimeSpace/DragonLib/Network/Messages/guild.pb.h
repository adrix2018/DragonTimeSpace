// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_guild_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_guild_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_guild_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_guild_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[95]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_guild_2eproto;
namespace guild {
class CiTanEnemyGuildItem;
class CiTanEnemyGuildItemDefaultTypeInternal;
extern CiTanEnemyGuildItemDefaultTypeInternal _CiTanEnemyGuildItem_default_instance_;
class GoodsInfo;
class GoodsInfoDefaultTypeInternal;
extern GoodsInfoDefaultTypeInternal _GoodsInfo_default_instance_;
class GuildPositionInfo;
class GuildPositionInfoDefaultTypeInternal;
extern GuildPositionInfoDefaultTypeInternal _GuildPositionInfo_default_instance_;
class MSG_ReqDonateSalary_CS;
class MSG_ReqDonateSalary_CSDefaultTypeInternal;
extern MSG_ReqDonateSalary_CSDefaultTypeInternal _MSG_ReqDonateSalary_CS_default_instance_;
class MSG_ReqUserCntData_CSC;
class MSG_ReqUserCntData_CSCDefaultTypeInternal;
extern MSG_ReqUserCntData_CSCDefaultTypeInternal _MSG_ReqUserCntData_CSC_default_instance_;
class MSG_Req_AddGuildPosition_CS;
class MSG_Req_AddGuildPosition_CSDefaultTypeInternal;
extern MSG_Req_AddGuildPosition_CSDefaultTypeInternal _MSG_Req_AddGuildPosition_CS_default_instance_;
class MSG_Req_AnswerApplyForGuild_CS;
class MSG_Req_AnswerApplyForGuild_CSDefaultTypeInternal;
extern MSG_Req_AnswerApplyForGuild_CSDefaultTypeInternal _MSG_Req_AnswerApplyForGuild_CS_default_instance_;
class MSG_Req_ApplyForGuild_CS;
class MSG_Req_ApplyForGuild_CSDefaultTypeInternal;
extern MSG_Req_ApplyForGuild_CSDefaultTypeInternal _MSG_Req_ApplyForGuild_CS_default_instance_;
class MSG_Req_AssignPosition_CS;
class MSG_Req_AssignPosition_CSDefaultTypeInternal;
extern MSG_Req_AssignPosition_CSDefaultTypeInternal _MSG_Req_AssignPosition_CS_default_instance_;
class MSG_Req_ChangeGuildMaster_CS;
class MSG_Req_ChangeGuildMaster_CSDefaultTypeInternal;
extern MSG_Req_ChangeGuildMaster_CSDefaultTypeInternal _MSG_Req_ChangeGuildMaster_CS_default_instance_;
class MSG_Req_ChangePositionName_CS;
class MSG_Req_ChangePositionName_CSDefaultTypeInternal;
extern MSG_Req_ChangePositionName_CSDefaultTypeInternal _MSG_Req_ChangePositionName_CS_default_instance_;
class MSG_Req_ChangePositionPri_CS;
class MSG_Req_ChangePositionPri_CSDefaultTypeInternal;
extern MSG_Req_ChangePositionPri_CSDefaultTypeInternal _MSG_Req_ChangePositionPri_CS_default_instance_;
class MSG_Req_ChooseCiTanEnemyGuild_CS;
class MSG_Req_ChooseCiTanEnemyGuild_CSDefaultTypeInternal;
extern MSG_Req_ChooseCiTanEnemyGuild_CSDefaultTypeInternal _MSG_Req_ChooseCiTanEnemyGuild_CS_default_instance_;
class MSG_Req_CiTanBacktoMyGuild_CS;
class MSG_Req_CiTanBacktoMyGuild_CSDefaultTypeInternal;
extern MSG_Req_CiTanBacktoMyGuild_CSDefaultTypeInternal _MSG_Req_CiTanBacktoMyGuild_CS_default_instance_;
class MSG_Req_CiTanEnemyGuildList_CS;
class MSG_Req_CiTanEnemyGuildList_CSDefaultTypeInternal;
extern MSG_Req_CiTanEnemyGuildList_CSDefaultTypeInternal _MSG_Req_CiTanEnemyGuildList_CS_default_instance_;
class MSG_Req_CreateGuild_CS;
class MSG_Req_CreateGuild_CSDefaultTypeInternal;
extern MSG_Req_CreateGuild_CSDefaultTypeInternal _MSG_Req_CreateGuild_CS_default_instance_;
class MSG_Req_DeleteGuildPosition_CS;
class MSG_Req_DeleteGuildPosition_CSDefaultTypeInternal;
extern MSG_Req_DeleteGuildPosition_CSDefaultTypeInternal _MSG_Req_DeleteGuildPosition_CS_default_instance_;
class MSG_Req_DismissGuild_CS;
class MSG_Req_DismissGuild_CSDefaultTypeInternal;
extern MSG_Req_DismissGuild_CSDefaultTypeInternal _MSG_Req_DismissGuild_CS_default_instance_;
class MSG_Req_FireGuildMember_CS;
class MSG_Req_FireGuildMember_CSDefaultTypeInternal;
extern MSG_Req_FireGuildMember_CSDefaultTypeInternal _MSG_Req_FireGuildMember_CS_default_instance_;
class MSG_Req_GetDayWelfare_CS;
class MSG_Req_GetDayWelfare_CSDefaultTypeInternal;
extern MSG_Req_GetDayWelfare_CSDefaultTypeInternal _MSG_Req_GetDayWelfare_CS_default_instance_;
class MSG_Req_GuildExtension_CS;
class MSG_Req_GuildExtension_CSDefaultTypeInternal;
extern MSG_Req_GuildExtension_CSDefaultTypeInternal _MSG_Req_GuildExtension_CS_default_instance_;
class MSG_Req_GuildGoods_CS;
class MSG_Req_GuildGoods_CSDefaultTypeInternal;
extern MSG_Req_GuildGoods_CSDefaultTypeInternal _MSG_Req_GuildGoods_CS_default_instance_;
class MSG_Req_GuildInfo_CS;
class MSG_Req_GuildInfo_CSDefaultTypeInternal;
extern MSG_Req_GuildInfo_CSDefaultTypeInternal _MSG_Req_GuildInfo_CS_default_instance_;
class MSG_Req_GuildInviteConfirm_CS;
class MSG_Req_GuildInviteConfirm_CSDefaultTypeInternal;
extern MSG_Req_GuildInviteConfirm_CSDefaultTypeInternal _MSG_Req_GuildInviteConfirm_CS_default_instance_;
class MSG_Req_GuildInvite_CS;
class MSG_Req_GuildInvite_CSDefaultTypeInternal;
extern MSG_Req_GuildInvite_CSDefaultTypeInternal _MSG_Req_GuildInvite_CS_default_instance_;
class MSG_Req_GuildLevelup_CS;
class MSG_Req_GuildLevelup_CSDefaultTypeInternal;
extern MSG_Req_GuildLevelup_CSDefaultTypeInternal _MSG_Req_GuildLevelup_CS_default_instance_;
class MSG_Req_GuildList_CS;
class MSG_Req_GuildList_CSDefaultTypeInternal;
extern MSG_Req_GuildList_CSDefaultTypeInternal _MSG_Req_GuildList_CS_default_instance_;
class MSG_Req_GuildMemberList_CS;
class MSG_Req_GuildMemberList_CSDefaultTypeInternal;
extern MSG_Req_GuildMemberList_CSDefaultTypeInternal _MSG_Req_GuildMemberList_CS_default_instance_;
class MSG_Req_GuildPartyActivityInfo_CS;
class MSG_Req_GuildPartyActivityInfo_CSDefaultTypeInternal;
extern MSG_Req_GuildPartyActivityInfo_CSDefaultTypeInternal _MSG_Req_GuildPartyActivityInfo_CS_default_instance_;
class MSG_Req_GuildSetInfo_CS;
class MSG_Req_GuildSetInfo_CSDefaultTypeInternal;
extern MSG_Req_GuildSetInfo_CSDefaultTypeInternal _MSG_Req_GuildSetInfo_CS_default_instance_;
class MSG_Req_GuildSkill_CS;
class MSG_Req_GuildSkill_CSDefaultTypeInternal;
extern MSG_Req_GuildSkill_CSDefaultTypeInternal _MSG_Req_GuildSkill_CS_default_instance_;
class MSG_Req_GuildTechnique_CS;
class MSG_Req_GuildTechnique_CSDefaultTypeInternal;
extern MSG_Req_GuildTechnique_CSDefaultTypeInternal _MSG_Req_GuildTechnique_CS_default_instance_;
class MSG_Req_GuildViceMaster_CS;
class MSG_Req_GuildViceMaster_CSDefaultTypeInternal;
extern MSG_Req_GuildViceMaster_CSDefaultTypeInternal _MSG_Req_GuildViceMaster_CS_default_instance_;
class MSG_Req_IntoCiTanEnemyGuild_CS;
class MSG_Req_IntoCiTanEnemyGuild_CSDefaultTypeInternal;
extern MSG_Req_IntoCiTanEnemyGuild_CSDefaultTypeInternal _MSG_Req_IntoCiTanEnemyGuild_CS_default_instance_;
class MSG_Req_IntoGuildMap_CS;
class MSG_Req_IntoGuildMap_CSDefaultTypeInternal;
extern MSG_Req_IntoGuildMap_CSDefaultTypeInternal _MSG_Req_IntoGuildMap_CS_default_instance_;
class MSG_Req_LearnGuildSkill_CSC;
class MSG_Req_LearnGuildSkill_CSCDefaultTypeInternal;
extern MSG_Req_LearnGuildSkill_CSCDefaultTypeInternal _MSG_Req_LearnGuildSkill_CSC_default_instance_;
class MSG_Req_ModifyRecrutCondition_CS;
class MSG_Req_ModifyRecrutCondition_CSDefaultTypeInternal;
extern MSG_Req_ModifyRecrutCondition_CSDefaultTypeInternal _MSG_Req_ModifyRecrutCondition_CS_default_instance_;
class MSG_Req_OneKeyApply_CS;
class MSG_Req_OneKeyApply_CSDefaultTypeInternal;
extern MSG_Req_OneKeyApply_CSDefaultTypeInternal _MSG_Req_OneKeyApply_CS_default_instance_;
class MSG_Req_PreCreateGuild_CS;
class MSG_Req_PreCreateGuild_CSDefaultTypeInternal;
extern MSG_Req_PreCreateGuild_CSDefaultTypeInternal _MSG_Req_PreCreateGuild_CS_default_instance_;
class MSG_Req_QuitGuild_CS;
class MSG_Req_QuitGuild_CSDefaultTypeInternal;
extern MSG_Req_QuitGuild_CSDefaultTypeInternal _MSG_Req_QuitGuild_CS_default_instance_;
class MSG_Req_RecrutCondition_CS;
class MSG_Req_RecrutCondition_CSDefaultTypeInternal;
extern MSG_Req_RecrutCondition_CSDefaultTypeInternal _MSG_Req_RecrutCondition_CS_default_instance_;
class MSG_Req_SetGuildNotify_CS;
class MSG_Req_SetGuildNotify_CSDefaultTypeInternal;
extern MSG_Req_SetGuildNotify_CSDefaultTypeInternal _MSG_Req_SetGuildNotify_CS_default_instance_;
class MSG_Req_StartGuildParty_CS;
class MSG_Req_StartGuildParty_CSDefaultTypeInternal;
extern MSG_Req_StartGuildParty_CSDefaultTypeInternal _MSG_Req_StartGuildParty_CS_default_instance_;
class MSG_Req_SubmitFellowshipSurvey_CS;
class MSG_Req_SubmitFellowshipSurvey_CSDefaultTypeInternal;
extern MSG_Req_SubmitFellowshipSurvey_CSDefaultTypeInternal _MSG_Req_SubmitFellowshipSurvey_CS_default_instance_;
class MSG_Req_SubmitGuildGoods_CS;
class MSG_Req_SubmitGuildGoods_CSDefaultTypeInternal;
extern MSG_Req_SubmitGuildGoods_CSDefaultTypeInternal _MSG_Req_SubmitGuildGoods_CS_default_instance_;
class MSG_Req_SwapGuildPosOrder_CS;
class MSG_Req_SwapGuildPosOrder_CSDefaultTypeInternal;
extern MSG_Req_SwapGuildPosOrder_CSDefaultTypeInternal _MSG_Req_SwapGuildPosOrder_CS_default_instance_;
class MSG_Req_TargetCiTanEnemyGuild_CS;
class MSG_Req_TargetCiTanEnemyGuild_CSDefaultTypeInternal;
extern MSG_Req_TargetCiTanEnemyGuild_CSDefaultTypeInternal _MSG_Req_TargetCiTanEnemyGuild_CS_default_instance_;
class MSG_Req_TechniqueDevelop_CS;
class MSG_Req_TechniqueDevelop_CSDefaultTypeInternal;
extern MSG_Req_TechniqueDevelop_CSDefaultTypeInternal _MSG_Req_TechniqueDevelop_CS_default_instance_;
class MSG_Req_TechniqueUpGrade_CS;
class MSG_Req_TechniqueUpGrade_CSDefaultTypeInternal;
extern MSG_Req_TechniqueUpGrade_CSDefaultTypeInternal _MSG_Req_TechniqueUpGrade_CS_default_instance_;
class MSG_RetRecrutCondition_SC;
class MSG_RetRecrutCondition_SCDefaultTypeInternal;
extern MSG_RetRecrutCondition_SCDefaultTypeInternal _MSG_RetRecrutCondition_SC_default_instance_;
class MSG_Ret_AnswerApplyForGuild_SC;
class MSG_Ret_AnswerApplyForGuild_SCDefaultTypeInternal;
extern MSG_Ret_AnswerApplyForGuild_SCDefaultTypeInternal _MSG_Ret_AnswerApplyForGuild_SC_default_instance_;
class MSG_Ret_ApplyForGuild_SC;
class MSG_Ret_ApplyForGuild_SCDefaultTypeInternal;
extern MSG_Ret_ApplyForGuild_SCDefaultTypeInternal _MSG_Ret_ApplyForGuild_SC_default_instance_;
class MSG_Ret_AssignPosition_SC;
class MSG_Ret_AssignPosition_SCDefaultTypeInternal;
extern MSG_Ret_AssignPosition_SCDefaultTypeInternal _MSG_Ret_AssignPosition_SC_default_instance_;
class MSG_Ret_BeFiredGuildMember_SC;
class MSG_Ret_BeFiredGuildMember_SCDefaultTypeInternal;
extern MSG_Ret_BeFiredGuildMember_SCDefaultTypeInternal _MSG_Ret_BeFiredGuildMember_SC_default_instance_;
class MSG_Ret_ChangeGuildMaster_SC;
class MSG_Ret_ChangeGuildMaster_SCDefaultTypeInternal;
extern MSG_Ret_ChangeGuildMaster_SCDefaultTypeInternal _MSG_Ret_ChangeGuildMaster_SC_default_instance_;
class MSG_Ret_CheckDayWelfare_SC;
class MSG_Ret_CheckDayWelfare_SCDefaultTypeInternal;
extern MSG_Ret_CheckDayWelfare_SCDefaultTypeInternal _MSG_Ret_CheckDayWelfare_SC_default_instance_;
class MSG_Ret_ChoosedCiTanEnemyGuild_SC;
class MSG_Ret_ChoosedCiTanEnemyGuild_SCDefaultTypeInternal;
extern MSG_Ret_ChoosedCiTanEnemyGuild_SCDefaultTypeInternal _MSG_Ret_ChoosedCiTanEnemyGuild_SC_default_instance_;
class MSG_Ret_CiTanEnemyGuildList_SC;
class MSG_Ret_CiTanEnemyGuildList_SCDefaultTypeInternal;
extern MSG_Ret_CiTanEnemyGuildList_SCDefaultTypeInternal _MSG_Ret_CiTanEnemyGuildList_SC_default_instance_;
class MSG_Ret_CreateGuild_SC;
class MSG_Ret_CreateGuild_SCDefaultTypeInternal;
extern MSG_Ret_CreateGuild_SCDefaultTypeInternal _MSG_Ret_CreateGuild_SC_default_instance_;
class MSG_Ret_DismissGuild_SC;
class MSG_Ret_DismissGuild_SCDefaultTypeInternal;
extern MSG_Ret_DismissGuild_SCDefaultTypeInternal _MSG_Ret_DismissGuild_SC_default_instance_;
class MSG_Ret_FellowshipSurvey_SC;
class MSG_Ret_FellowshipSurvey_SCDefaultTypeInternal;
extern MSG_Ret_FellowshipSurvey_SCDefaultTypeInternal _MSG_Ret_FellowshipSurvey_SC_default_instance_;
class MSG_Ret_FireGuildMember_SC;
class MSG_Ret_FireGuildMember_SCDefaultTypeInternal;
extern MSG_Ret_FireGuildMember_SCDefaultTypeInternal _MSG_Ret_FireGuildMember_SC_default_instance_;
class MSG_Ret_GetDayWelfare_SC;
class MSG_Ret_GetDayWelfare_SCDefaultTypeInternal;
extern MSG_Ret_GetDayWelfare_SCDefaultTypeInternal _MSG_Ret_GetDayWelfare_SC_default_instance_;
class MSG_Ret_GuildExtension_SC;
class MSG_Ret_GuildExtension_SCDefaultTypeInternal;
extern MSG_Ret_GuildExtension_SCDefaultTypeInternal _MSG_Ret_GuildExtension_SC_default_instance_;
class MSG_Ret_GuildGoods_SC;
class MSG_Ret_GuildGoods_SCDefaultTypeInternal;
extern MSG_Ret_GuildGoods_SCDefaultTypeInternal _MSG_Ret_GuildGoods_SC_default_instance_;
class MSG_Ret_GuildInfo_SC;
class MSG_Ret_GuildInfo_SCDefaultTypeInternal;
extern MSG_Ret_GuildInfo_SCDefaultTypeInternal _MSG_Ret_GuildInfo_SC_default_instance_;
class MSG_Ret_GuildInviteConfirm_SC;
class MSG_Ret_GuildInviteConfirm_SCDefaultTypeInternal;
extern MSG_Ret_GuildInviteConfirm_SCDefaultTypeInternal _MSG_Ret_GuildInviteConfirm_SC_default_instance_;
class MSG_Ret_GuildInvite_SC;
class MSG_Ret_GuildInvite_SCDefaultTypeInternal;
extern MSG_Ret_GuildInvite_SCDefaultTypeInternal _MSG_Ret_GuildInvite_SC_default_instance_;
class MSG_Ret_GuildLevelup_SC;
class MSG_Ret_GuildLevelup_SCDefaultTypeInternal;
extern MSG_Ret_GuildLevelup_SCDefaultTypeInternal _MSG_Ret_GuildLevelup_SC_default_instance_;
class MSG_Ret_GuildList_SC;
class MSG_Ret_GuildList_SCDefaultTypeInternal;
extern MSG_Ret_GuildList_SCDefaultTypeInternal _MSG_Ret_GuildList_SC_default_instance_;
class MSG_Ret_GuildMemberList_SC;
class MSG_Ret_GuildMemberList_SCDefaultTypeInternal;
extern MSG_Ret_GuildMemberList_SCDefaultTypeInternal _MSG_Ret_GuildMemberList_SC_default_instance_;
class MSG_Ret_GuildPartyActivityData_SC;
class MSG_Ret_GuildPartyActivityData_SCDefaultTypeInternal;
extern MSG_Ret_GuildPartyActivityData_SCDefaultTypeInternal _MSG_Ret_GuildPartyActivityData_SC_default_instance_;
class MSG_Ret_GuildPartyActivityInfo_SC;
class MSG_Ret_GuildPartyActivityInfo_SCDefaultTypeInternal;
extern MSG_Ret_GuildPartyActivityInfo_SCDefaultTypeInternal _MSG_Ret_GuildPartyActivityInfo_SC_default_instance_;
class MSG_Ret_GuildSetInfo_SC;
class MSG_Ret_GuildSetInfo_SCDefaultTypeInternal;
extern MSG_Ret_GuildSetInfo_SCDefaultTypeInternal _MSG_Ret_GuildSetInfo_SC_default_instance_;
class MSG_Ret_GuildSkill_SC;
class MSG_Ret_GuildSkill_SCDefaultTypeInternal;
extern MSG_Ret_GuildSkill_SCDefaultTypeInternal _MSG_Ret_GuildSkill_SC_default_instance_;
class MSG_Ret_GuildTechnique_SC;
class MSG_Ret_GuildTechnique_SCDefaultTypeInternal;
extern MSG_Ret_GuildTechnique_SCDefaultTypeInternal _MSG_Ret_GuildTechnique_SC_default_instance_;
class MSG_Ret_GuildViceMaster_SC;
class MSG_Ret_GuildViceMaster_SCDefaultTypeInternal;
extern MSG_Ret_GuildViceMaster_SCDefaultTypeInternal _MSG_Ret_GuildViceMaster_SC_default_instance_;
class MSG_Ret_MyGuildApply_Result_SC;
class MSG_Ret_MyGuildApply_Result_SCDefaultTypeInternal;
extern MSG_Ret_MyGuildApply_Result_SCDefaultTypeInternal _MSG_Ret_MyGuildApply_Result_SC_default_instance_;
class MSG_Ret_OneKeyApply_SC;
class MSG_Ret_OneKeyApply_SCDefaultTypeInternal;
extern MSG_Ret_OneKeyApply_SCDefaultTypeInternal _MSG_Ret_OneKeyApply_SC_default_instance_;
class MSG_Ret_PositionInfo_SC;
class MSG_Ret_PositionInfo_SCDefaultTypeInternal;
extern MSG_Ret_PositionInfo_SCDefaultTypeInternal _MSG_Ret_PositionInfo_SC_default_instance_;
class MSG_Ret_PreCreateGuild_SC;
class MSG_Ret_PreCreateGuild_SCDefaultTypeInternal;
extern MSG_Ret_PreCreateGuild_SCDefaultTypeInternal _MSG_Ret_PreCreateGuild_SC_default_instance_;
class MSG_Ret_QuitGuild_SC;
class MSG_Ret_QuitGuild_SCDefaultTypeInternal;
extern MSG_Ret_QuitGuild_SCDefaultTypeInternal _MSG_Ret_QuitGuild_SC_default_instance_;
class MSG_Ret_RefreshTechniqueInfo_SC;
class MSG_Ret_RefreshTechniqueInfo_SCDefaultTypeInternal;
extern MSG_Ret_RefreshTechniqueInfo_SCDefaultTypeInternal _MSG_Ret_RefreshTechniqueInfo_SC_default_instance_;
class MSG_Ret_SetGuildNotify_SC;
class MSG_Ret_SetGuildNotify_SCDefaultTypeInternal;
extern MSG_Ret_SetGuildNotify_SCDefaultTypeInternal _MSG_Ret_SetGuildNotify_SC_default_instance_;
class MSG_Ret_SubmitGuildGoods_SC;
class MSG_Ret_SubmitGuildGoods_SCDefaultTypeInternal;
extern MSG_Ret_SubmitGuildGoods_SCDefaultTypeInternal _MSG_Ret_SubmitGuildGoods_SC_default_instance_;
class MSG_Ret_TechniqueDevelop_SC;
class MSG_Ret_TechniqueDevelop_SCDefaultTypeInternal;
extern MSG_Ret_TechniqueDevelop_SCDefaultTypeInternal _MSG_Ret_TechniqueDevelop_SC_default_instance_;
class MSG_Ret_TechniqueUpGrade_SC;
class MSG_Ret_TechniqueUpGrade_SCDefaultTypeInternal;
extern MSG_Ret_TechniqueUpGrade_SCDefaultTypeInternal _MSG_Ret_TechniqueUpGrade_SC_default_instance_;
class SwapGuildPosInfo;
class SwapGuildPosInfoDefaultTypeInternal;
extern SwapGuildPosInfoDefaultTypeInternal _SwapGuildPosInfo_default_instance_;
class TechniqueInfo;
class TechniqueInfoDefaultTypeInternal;
extern TechniqueInfoDefaultTypeInternal _TechniqueInfo_default_instance_;
class ViceMaster;
class ViceMasterDefaultTypeInternal;
extern ViceMasterDefaultTypeInternal _ViceMaster_default_instance_;
class guildInfo;
class guildInfoDefaultTypeInternal;
extern guildInfoDefaultTypeInternal _guildInfo_default_instance_;
class guildListItem;
class guildListItemDefaultTypeInternal;
extern guildListItemDefaultTypeInternal _guildListItem_default_instance_;
class guildMember;
class guildMemberDefaultTypeInternal;
extern guildMemberDefaultTypeInternal _guildMember_default_instance_;
class guildSkill;
class guildSkillDefaultTypeInternal;
extern guildSkillDefaultTypeInternal _guildSkill_default_instance_;
class stApplyForItem;
class stApplyForItemDefaultTypeInternal;
extern stApplyForItemDefaultTypeInternal _stApplyForItem_default_instance_;
}  // namespace guild
PROTOBUF_NAMESPACE_OPEN
template<> ::guild::CiTanEnemyGuildItem* Arena::CreateMaybeMessage<::guild::CiTanEnemyGuildItem>(Arena*);
template<> ::guild::GoodsInfo* Arena::CreateMaybeMessage<::guild::GoodsInfo>(Arena*);
template<> ::guild::GuildPositionInfo* Arena::CreateMaybeMessage<::guild::GuildPositionInfo>(Arena*);
template<> ::guild::MSG_ReqDonateSalary_CS* Arena::CreateMaybeMessage<::guild::MSG_ReqDonateSalary_CS>(Arena*);
template<> ::guild::MSG_ReqUserCntData_CSC* Arena::CreateMaybeMessage<::guild::MSG_ReqUserCntData_CSC>(Arena*);
template<> ::guild::MSG_Req_AddGuildPosition_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_AddGuildPosition_CS>(Arena*);
template<> ::guild::MSG_Req_AnswerApplyForGuild_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_AnswerApplyForGuild_CS>(Arena*);
template<> ::guild::MSG_Req_ApplyForGuild_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_ApplyForGuild_CS>(Arena*);
template<> ::guild::MSG_Req_AssignPosition_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_AssignPosition_CS>(Arena*);
template<> ::guild::MSG_Req_ChangeGuildMaster_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_ChangeGuildMaster_CS>(Arena*);
template<> ::guild::MSG_Req_ChangePositionName_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_ChangePositionName_CS>(Arena*);
template<> ::guild::MSG_Req_ChangePositionPri_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_ChangePositionPri_CS>(Arena*);
template<> ::guild::MSG_Req_ChooseCiTanEnemyGuild_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_ChooseCiTanEnemyGuild_CS>(Arena*);
template<> ::guild::MSG_Req_CiTanBacktoMyGuild_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_CiTanBacktoMyGuild_CS>(Arena*);
template<> ::guild::MSG_Req_CiTanEnemyGuildList_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_CiTanEnemyGuildList_CS>(Arena*);
template<> ::guild::MSG_Req_CreateGuild_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_CreateGuild_CS>(Arena*);
template<> ::guild::MSG_Req_DeleteGuildPosition_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_DeleteGuildPosition_CS>(Arena*);
template<> ::guild::MSG_Req_DismissGuild_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_DismissGuild_CS>(Arena*);
template<> ::guild::MSG_Req_FireGuildMember_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_FireGuildMember_CS>(Arena*);
template<> ::guild::MSG_Req_GetDayWelfare_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GetDayWelfare_CS>(Arena*);
template<> ::guild::MSG_Req_GuildExtension_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildExtension_CS>(Arena*);
template<> ::guild::MSG_Req_GuildGoods_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildGoods_CS>(Arena*);
template<> ::guild::MSG_Req_GuildInfo_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildInfo_CS>(Arena*);
template<> ::guild::MSG_Req_GuildInviteConfirm_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildInviteConfirm_CS>(Arena*);
template<> ::guild::MSG_Req_GuildInvite_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildInvite_CS>(Arena*);
template<> ::guild::MSG_Req_GuildLevelup_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildLevelup_CS>(Arena*);
template<> ::guild::MSG_Req_GuildList_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildList_CS>(Arena*);
template<> ::guild::MSG_Req_GuildMemberList_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildMemberList_CS>(Arena*);
template<> ::guild::MSG_Req_GuildPartyActivityInfo_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildPartyActivityInfo_CS>(Arena*);
template<> ::guild::MSG_Req_GuildSetInfo_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildSetInfo_CS>(Arena*);
template<> ::guild::MSG_Req_GuildSkill_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildSkill_CS>(Arena*);
template<> ::guild::MSG_Req_GuildTechnique_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildTechnique_CS>(Arena*);
template<> ::guild::MSG_Req_GuildViceMaster_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_GuildViceMaster_CS>(Arena*);
template<> ::guild::MSG_Req_IntoCiTanEnemyGuild_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_IntoCiTanEnemyGuild_CS>(Arena*);
template<> ::guild::MSG_Req_IntoGuildMap_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_IntoGuildMap_CS>(Arena*);
template<> ::guild::MSG_Req_LearnGuildSkill_CSC* Arena::CreateMaybeMessage<::guild::MSG_Req_LearnGuildSkill_CSC>(Arena*);
template<> ::guild::MSG_Req_ModifyRecrutCondition_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_ModifyRecrutCondition_CS>(Arena*);
template<> ::guild::MSG_Req_OneKeyApply_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_OneKeyApply_CS>(Arena*);
template<> ::guild::MSG_Req_PreCreateGuild_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_PreCreateGuild_CS>(Arena*);
template<> ::guild::MSG_Req_QuitGuild_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_QuitGuild_CS>(Arena*);
template<> ::guild::MSG_Req_RecrutCondition_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_RecrutCondition_CS>(Arena*);
template<> ::guild::MSG_Req_SetGuildNotify_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_SetGuildNotify_CS>(Arena*);
template<> ::guild::MSG_Req_StartGuildParty_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_StartGuildParty_CS>(Arena*);
template<> ::guild::MSG_Req_SubmitFellowshipSurvey_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_SubmitFellowshipSurvey_CS>(Arena*);
template<> ::guild::MSG_Req_SubmitGuildGoods_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_SubmitGuildGoods_CS>(Arena*);
template<> ::guild::MSG_Req_SwapGuildPosOrder_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_SwapGuildPosOrder_CS>(Arena*);
template<> ::guild::MSG_Req_TargetCiTanEnemyGuild_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_TargetCiTanEnemyGuild_CS>(Arena*);
template<> ::guild::MSG_Req_TechniqueDevelop_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_TechniqueDevelop_CS>(Arena*);
template<> ::guild::MSG_Req_TechniqueUpGrade_CS* Arena::CreateMaybeMessage<::guild::MSG_Req_TechniqueUpGrade_CS>(Arena*);
template<> ::guild::MSG_RetRecrutCondition_SC* Arena::CreateMaybeMessage<::guild::MSG_RetRecrutCondition_SC>(Arena*);
template<> ::guild::MSG_Ret_AnswerApplyForGuild_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_AnswerApplyForGuild_SC>(Arena*);
template<> ::guild::MSG_Ret_ApplyForGuild_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_ApplyForGuild_SC>(Arena*);
template<> ::guild::MSG_Ret_AssignPosition_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_AssignPosition_SC>(Arena*);
template<> ::guild::MSG_Ret_BeFiredGuildMember_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_BeFiredGuildMember_SC>(Arena*);
template<> ::guild::MSG_Ret_ChangeGuildMaster_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_ChangeGuildMaster_SC>(Arena*);
template<> ::guild::MSG_Ret_CheckDayWelfare_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_CheckDayWelfare_SC>(Arena*);
template<> ::guild::MSG_Ret_ChoosedCiTanEnemyGuild_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_ChoosedCiTanEnemyGuild_SC>(Arena*);
template<> ::guild::MSG_Ret_CiTanEnemyGuildList_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_CiTanEnemyGuildList_SC>(Arena*);
template<> ::guild::MSG_Ret_CreateGuild_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_CreateGuild_SC>(Arena*);
template<> ::guild::MSG_Ret_DismissGuild_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_DismissGuild_SC>(Arena*);
template<> ::guild::MSG_Ret_FellowshipSurvey_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_FellowshipSurvey_SC>(Arena*);
template<> ::guild::MSG_Ret_FireGuildMember_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_FireGuildMember_SC>(Arena*);
template<> ::guild::MSG_Ret_GetDayWelfare_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GetDayWelfare_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildExtension_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildExtension_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildGoods_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildGoods_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildInfo_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildInfo_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildInviteConfirm_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildInviteConfirm_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildInvite_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildInvite_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildLevelup_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildLevelup_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildList_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildList_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildMemberList_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildMemberList_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildPartyActivityData_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildPartyActivityData_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildPartyActivityInfo_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildPartyActivityInfo_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildSetInfo_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildSetInfo_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildSkill_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildSkill_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildTechnique_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildTechnique_SC>(Arena*);
template<> ::guild::MSG_Ret_GuildViceMaster_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_GuildViceMaster_SC>(Arena*);
template<> ::guild::MSG_Ret_MyGuildApply_Result_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_MyGuildApply_Result_SC>(Arena*);
template<> ::guild::MSG_Ret_OneKeyApply_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_OneKeyApply_SC>(Arena*);
template<> ::guild::MSG_Ret_PositionInfo_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_PositionInfo_SC>(Arena*);
template<> ::guild::MSG_Ret_PreCreateGuild_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_PreCreateGuild_SC>(Arena*);
template<> ::guild::MSG_Ret_QuitGuild_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_QuitGuild_SC>(Arena*);
template<> ::guild::MSG_Ret_RefreshTechniqueInfo_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_RefreshTechniqueInfo_SC>(Arena*);
template<> ::guild::MSG_Ret_SetGuildNotify_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_SetGuildNotify_SC>(Arena*);
template<> ::guild::MSG_Ret_SubmitGuildGoods_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_SubmitGuildGoods_SC>(Arena*);
template<> ::guild::MSG_Ret_TechniqueDevelop_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_TechniqueDevelop_SC>(Arena*);
template<> ::guild::MSG_Ret_TechniqueUpGrade_SC* Arena::CreateMaybeMessage<::guild::MSG_Ret_TechniqueUpGrade_SC>(Arena*);
template<> ::guild::SwapGuildPosInfo* Arena::CreateMaybeMessage<::guild::SwapGuildPosInfo>(Arena*);
template<> ::guild::TechniqueInfo* Arena::CreateMaybeMessage<::guild::TechniqueInfo>(Arena*);
template<> ::guild::ViceMaster* Arena::CreateMaybeMessage<::guild::ViceMaster>(Arena*);
template<> ::guild::guildInfo* Arena::CreateMaybeMessage<::guild::guildInfo>(Arena*);
template<> ::guild::guildListItem* Arena::CreateMaybeMessage<::guild::guildListItem>(Arena*);
template<> ::guild::guildMember* Arena::CreateMaybeMessage<::guild::guildMember>(Arena*);
template<> ::guild::guildSkill* Arena::CreateMaybeMessage<::guild::guildSkill>(Arena*);
template<> ::guild::stApplyForItem* Arena::CreateMaybeMessage<::guild::stApplyForItem>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace guild {

enum GuildValueType : int {
  GUILD_VALUE_CONTRIBUTE = 1,
  GUILD_VALUE_SALARY = 2,
  GUILD_VALUE_VITALITY = 3,
  GUILD_VALUE_EXP = 4
};
bool GuildValueType_IsValid(int value);
constexpr GuildValueType GuildValueType_MIN = GUILD_VALUE_CONTRIBUTE;
constexpr GuildValueType GuildValueType_MAX = GUILD_VALUE_EXP;
constexpr int GuildValueType_ARRAYSIZE = GuildValueType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GuildValueType_descriptor();
template<typename T>
inline const std::string& GuildValueType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GuildValueType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GuildValueType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GuildValueType_descriptor(), enum_t_value);
}
inline bool GuildValueType_Parse(
    const std::string& name, GuildValueType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GuildValueType>(
    GuildValueType_descriptor(), name, value);
}
enum GuildMemberPosition : int {
  GUILD_POSITION_MASTER = 1,
  GUILD_POSITION_VICEMASTER = 2,
  GUILD_POSITION_NORMAL = 99
};
bool GuildMemberPosition_IsValid(int value);
constexpr GuildMemberPosition GuildMemberPosition_MIN = GUILD_POSITION_MASTER;
constexpr GuildMemberPosition GuildMemberPosition_MAX = GUILD_POSITION_NORMAL;
constexpr int GuildMemberPosition_ARRAYSIZE = GuildMemberPosition_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GuildMemberPosition_descriptor();
template<typename T>
inline const std::string& GuildMemberPosition_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GuildMemberPosition>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GuildMemberPosition_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GuildMemberPosition_descriptor(), enum_t_value);
}
inline bool GuildMemberPosition_Parse(
    const std::string& name, GuildMemberPosition* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GuildMemberPosition>(
    GuildMemberPosition_descriptor(), name, value);
}
enum GuildStatus : int {
  GUILD_STATUS_APPLY = 1,
  GUILD_STATUS_NORMAL = 2
};
bool GuildStatus_IsValid(int value);
constexpr GuildStatus GuildStatus_MIN = GUILD_STATUS_APPLY;
constexpr GuildStatus GuildStatus_MAX = GUILD_STATUS_NORMAL;
constexpr int GuildStatus_ARRAYSIZE = GuildStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GuildStatus_descriptor();
template<typename T>
inline const std::string& GuildStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GuildStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GuildStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GuildStatus_descriptor(), enum_t_value);
}
inline bool GuildStatus_Parse(
    const std::string& name, GuildStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GuildStatus>(
    GuildStatus_descriptor(), name, value);
}
enum GuildPrivilege : int {
  GUILDPRI_MANAGE_POSITION = 1,
  GUILDPRI_REMOVE_MEMBER = 2,
  GUILDPRI_MODIFY_POSITIONNAME = 4,
  GUILDPRI_MODIFY_NOTIFY = 8,
  GUILDPRI_MANAGE_BUILDINGDEV = 16,
  GUILDPRI_ACCEPT_JOIN = 32,
  GUILDPRI_ASSIGN_POSITION = 64
};
bool GuildPrivilege_IsValid(int value);
constexpr GuildPrivilege GuildPrivilege_MIN = GUILDPRI_MANAGE_POSITION;
constexpr GuildPrivilege GuildPrivilege_MAX = GUILDPRI_ASSIGN_POSITION;
constexpr int GuildPrivilege_ARRAYSIZE = GuildPrivilege_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GuildPrivilege_descriptor();
template<typename T>
inline const std::string& GuildPrivilege_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GuildPrivilege>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GuildPrivilege_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GuildPrivilege_descriptor(), enum_t_value);
}
inline bool GuildPrivilege_Parse(
    const std::string& name, GuildPrivilege* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GuildPrivilege>(
    GuildPrivilege_descriptor(), name, value);
}
enum UserDataType : int {
  GUILD_DAILY_COUNTRIBUTE = 1
};
bool UserDataType_IsValid(int value);
constexpr UserDataType UserDataType_MIN = GUILD_DAILY_COUNTRIBUTE;
constexpr UserDataType UserDataType_MAX = GUILD_DAILY_COUNTRIBUTE;
constexpr int UserDataType_ARRAYSIZE = UserDataType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UserDataType_descriptor();
template<typename T>
inline const std::string& UserDataType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, UserDataType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function UserDataType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    UserDataType_descriptor(), enum_t_value);
}
inline bool UserDataType_Parse(
    const std::string& name, UserDataType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<UserDataType>(
    UserDataType_descriptor(), name, value);
}
enum ReqMemberListType : int {
  NORMAL = 1,
  APPLYFOR = 2
};
bool ReqMemberListType_IsValid(int value);
constexpr ReqMemberListType ReqMemberListType_MIN = NORMAL;
constexpr ReqMemberListType ReqMemberListType_MAX = APPLYFOR;
constexpr int ReqMemberListType_ARRAYSIZE = ReqMemberListType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ReqMemberListType_descriptor();
template<typename T>
inline const std::string& ReqMemberListType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ReqMemberListType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ReqMemberListType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ReqMemberListType_descriptor(), enum_t_value);
}
inline bool ReqMemberListType_Parse(
    const std::string& name, ReqMemberListType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ReqMemberListType>(
    ReqMemberListType_descriptor(), name, value);
}
enum GuildBuildingType : int {
  GuildBuildingType_Main = 1,
  GuildBuildingType_DaTing = 2
};
bool GuildBuildingType_IsValid(int value);
constexpr GuildBuildingType GuildBuildingType_MIN = GuildBuildingType_Main;
constexpr GuildBuildingType GuildBuildingType_MAX = GuildBuildingType_DaTing;
constexpr int GuildBuildingType_ARRAYSIZE = GuildBuildingType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GuildBuildingType_descriptor();
template<typename T>
inline const std::string& GuildBuildingType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GuildBuildingType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GuildBuildingType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GuildBuildingType_descriptor(), enum_t_value);
}
inline bool GuildBuildingType_Parse(
    const std::string& name, GuildBuildingType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GuildBuildingType>(
    GuildBuildingType_descriptor(), name, value);
}
// ===================================================================

class guildMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.guildMember) */ {
 public:
  guildMember();
  virtual ~guildMember();

  guildMember(const guildMember& from);
  guildMember(guildMember&& from) noexcept
    : guildMember() {
    *this = ::std::move(from);
  }

  inline guildMember& operator=(const guildMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline guildMember& operator=(guildMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const guildMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const guildMember* internal_default_instance() {
    return reinterpret_cast<const guildMember*>(
               &_guildMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(guildMember& a, guildMember& b) {
    a.Swap(&b);
  }
  inline void Swap(guildMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline guildMember* New() const final {
    return CreateMaybeMessage<guildMember>(nullptr);
  }

  guildMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<guildMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const guildMember& from);
  void MergeFrom(const guildMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(guildMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.guildMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMembernameFieldNumber = 2,
    kMemberidFieldNumber = 1,
    kMemberlevelFieldNumber = 3,
    kMemberstatusFieldNumber = 4,
    kContributeFieldNumber = 5,
    kDonatesalaryFieldNumber = 6,
    kIsonlineFieldNumber = 7,
    kLastonlinetimeFieldNumber = 8,
    kCareerFieldNumber = 9,
    kPositionidFieldNumber = 10,
    kApplytimeFieldNumber = 11,
  };
  // optional string membername = 2;
  bool has_membername() const;
  private:
  bool _internal_has_membername() const;
  public:
  void clear_membername();
  const std::string& membername() const;
  void set_membername(const std::string& value);
  void set_membername(std::string&& value);
  void set_membername(const char* value);
  void set_membername(const char* value, size_t size);
  std::string* mutable_membername();
  std::string* release_membername();
  void set_allocated_membername(std::string* membername);
  private:
  const std::string& _internal_membername() const;
  void _internal_set_membername(const std::string& value);
  std::string* _internal_mutable_membername();
  public:

  // optional uint64 memberid = 1;
  bool has_memberid() const;
  private:
  bool _internal_has_memberid() const;
  public:
  void clear_memberid();
  ::PROTOBUF_NAMESPACE_ID::uint64 memberid() const;
  void set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_memberid() const;
  void _internal_set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 memberlevel = 3;
  bool has_memberlevel() const;
  private:
  bool _internal_has_memberlevel() const;
  public:
  void clear_memberlevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 memberlevel() const;
  void set_memberlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_memberlevel() const;
  void _internal_set_memberlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 memberstatus = 4;
  bool has_memberstatus() const;
  private:
  bool _internal_has_memberstatus() const;
  public:
  void clear_memberstatus();
  ::PROTOBUF_NAMESPACE_ID::uint32 memberstatus() const;
  void set_memberstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_memberstatus() const;
  void _internal_set_memberstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 contribute = 5;
  bool has_contribute() const;
  private:
  bool _internal_has_contribute() const;
  public:
  void clear_contribute();
  ::PROTOBUF_NAMESPACE_ID::uint32 contribute() const;
  void set_contribute(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_contribute() const;
  void _internal_set_contribute(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 donatesalary = 6;
  bool has_donatesalary() const;
  private:
  bool _internal_has_donatesalary() const;
  public:
  void clear_donatesalary();
  ::PROTOBUF_NAMESPACE_ID::uint32 donatesalary() const;
  void set_donatesalary(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_donatesalary() const;
  void _internal_set_donatesalary(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool isonline = 7;
  bool has_isonline() const;
  private:
  bool _internal_has_isonline() const;
  public:
  void clear_isonline();
  bool isonline() const;
  void set_isonline(bool value);
  private:
  bool _internal_isonline() const;
  void _internal_set_isonline(bool value);
  public:

  // optional uint32 lastonlinetime = 8;
  bool has_lastonlinetime() const;
  private:
  bool _internal_has_lastonlinetime() const;
  public:
  void clear_lastonlinetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 lastonlinetime() const;
  void set_lastonlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lastonlinetime() const;
  void _internal_set_lastonlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 career = 9;
  bool has_career() const;
  private:
  bool _internal_has_career() const;
  public:
  void clear_career();
  ::PROTOBUF_NAMESPACE_ID::uint32 career() const;
  void set_career(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_career() const;
  void _internal_set_career(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 positionid = 10;
  bool has_positionid() const;
  private:
  bool _internal_has_positionid() const;
  public:
  void clear_positionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid() const;
  void set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionid() const;
  void _internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 applytime = 11;
  bool has_applytime() const;
  private:
  bool _internal_has_applytime() const;
  public:
  void clear_applytime();
  ::PROTOBUF_NAMESPACE_ID::uint32 applytime() const;
  void set_applytime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_applytime() const;
  void _internal_set_applytime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.guildMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr membername_;
  ::PROTOBUF_NAMESPACE_ID::uint64 memberid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 memberlevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 memberstatus_;
  ::PROTOBUF_NAMESPACE_ID::uint32 contribute_;
  ::PROTOBUF_NAMESPACE_ID::uint32 donatesalary_;
  bool isonline_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lastonlinetime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 career_;
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 applytime_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class guildInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.guildInfo) */ {
 public:
  guildInfo();
  virtual ~guildInfo();

  guildInfo(const guildInfo& from);
  guildInfo(guildInfo&& from) noexcept
    : guildInfo() {
    *this = ::std::move(from);
  }

  inline guildInfo& operator=(const guildInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline guildInfo& operator=(guildInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const guildInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const guildInfo* internal_default_instance() {
    return reinterpret_cast<const guildInfo*>(
               &_guildInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(guildInfo& a, guildInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(guildInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline guildInfo* New() const final {
    return CreateMaybeMessage<guildInfo>(nullptr);
  }

  guildInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<guildInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const guildInfo& from);
  void MergeFrom(const guildInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(guildInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.guildInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosinfoFieldNumber = 15,
    kGuildnameFieldNumber = 2,
    kMasternameFieldNumber = 5,
    kNotifyFieldNumber = 12,
    kGuildsetinfoFieldNumber = 16,
    kIconFieldNumber = 19,
    kGuildidFieldNumber = 1,
    kGuildlevelFieldNumber = 3,
    kActiveFieldNumber = 4,
    kExpFieldNumber = 6,
    kNextexpFieldNumber = 7,
    kSalaryFieldNumber = 8,
    kSumcountFieldNumber = 9,
    kOnlinecountFieldNumber = 10,
    kCountlimitFieldNumber = 11,
    kCountryidFieldNumber = 13,
    kRankFieldNumber = 14,
    kLastactiveFieldNumber = 17,
    kLastcountlimitFieldNumber = 18,
    kSalaryRestDayFieldNumber = 20,
  };
  // repeated .guild.GuildPositionInfo posinfo = 15;
  int posinfo_size() const;
  private:
  int _internal_posinfo_size() const;
  public:
  void clear_posinfo();
  ::guild::GuildPositionInfo* mutable_posinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GuildPositionInfo >*
      mutable_posinfo();
  private:
  const ::guild::GuildPositionInfo& _internal_posinfo(int index) const;
  ::guild::GuildPositionInfo* _internal_add_posinfo();
  public:
  const ::guild::GuildPositionInfo& posinfo(int index) const;
  ::guild::GuildPositionInfo* add_posinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GuildPositionInfo >&
      posinfo() const;

  // optional string guildname = 2;
  bool has_guildname() const;
  private:
  bool _internal_has_guildname() const;
  public:
  void clear_guildname();
  const std::string& guildname() const;
  void set_guildname(const std::string& value);
  void set_guildname(std::string&& value);
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  std::string* mutable_guildname();
  std::string* release_guildname();
  void set_allocated_guildname(std::string* guildname);
  private:
  const std::string& _internal_guildname() const;
  void _internal_set_guildname(const std::string& value);
  std::string* _internal_mutable_guildname();
  public:

  // optional string mastername = 5;
  bool has_mastername() const;
  private:
  bool _internal_has_mastername() const;
  public:
  void clear_mastername();
  const std::string& mastername() const;
  void set_mastername(const std::string& value);
  void set_mastername(std::string&& value);
  void set_mastername(const char* value);
  void set_mastername(const char* value, size_t size);
  std::string* mutable_mastername();
  std::string* release_mastername();
  void set_allocated_mastername(std::string* mastername);
  private:
  const std::string& _internal_mastername() const;
  void _internal_set_mastername(const std::string& value);
  std::string* _internal_mutable_mastername();
  public:

  // optional string notify = 12;
  bool has_notify() const;
  private:
  bool _internal_has_notify() const;
  public:
  void clear_notify();
  const std::string& notify() const;
  void set_notify(const std::string& value);
  void set_notify(std::string&& value);
  void set_notify(const char* value);
  void set_notify(const char* value, size_t size);
  std::string* mutable_notify();
  std::string* release_notify();
  void set_allocated_notify(std::string* notify);
  private:
  const std::string& _internal_notify() const;
  void _internal_set_notify(const std::string& value);
  std::string* _internal_mutable_notify();
  public:

  // optional string guildsetinfo = 16;
  bool has_guildsetinfo() const;
  private:
  bool _internal_has_guildsetinfo() const;
  public:
  void clear_guildsetinfo();
  const std::string& guildsetinfo() const;
  void set_guildsetinfo(const std::string& value);
  void set_guildsetinfo(std::string&& value);
  void set_guildsetinfo(const char* value);
  void set_guildsetinfo(const char* value, size_t size);
  std::string* mutable_guildsetinfo();
  std::string* release_guildsetinfo();
  void set_allocated_guildsetinfo(std::string* guildsetinfo);
  private:
  const std::string& _internal_guildsetinfo() const;
  void _internal_set_guildsetinfo(const std::string& value);
  std::string* _internal_mutable_guildsetinfo();
  public:

  // optional string icon = 19;
  bool has_icon() const;
  private:
  bool _internal_has_icon() const;
  public:
  void clear_icon();
  const std::string& icon() const;
  void set_icon(const std::string& value);
  void set_icon(std::string&& value);
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  std::string* mutable_icon();
  std::string* release_icon();
  void set_allocated_icon(std::string* icon);
  private:
  const std::string& _internal_icon() const;
  void _internal_set_icon(const std::string& value);
  std::string* _internal_mutable_icon();
  public:

  // optional uint64 guildid = 1;
  bool has_guildid() const;
  private:
  bool _internal_has_guildid() const;
  public:
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 guildlevel = 3;
  bool has_guildlevel() const;
  private:
  bool _internal_has_guildlevel() const;
  public:
  void clear_guildlevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 guildlevel() const;
  void set_guildlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guildlevel() const;
  void _internal_set_guildlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 active = 4;
  bool has_active() const;
  private:
  bool _internal_has_active() const;
  public:
  void clear_active();
  ::PROTOBUF_NAMESPACE_ID::uint32 active() const;
  void set_active(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_active() const;
  void _internal_set_active(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 exp = 6;
  bool has_exp() const;
  private:
  bool _internal_has_exp() const;
  public:
  void clear_exp();
  ::PROTOBUF_NAMESPACE_ID::uint32 exp() const;
  void set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_exp() const;
  void _internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 nextexp = 7;
  bool has_nextexp() const;
  private:
  bool _internal_has_nextexp() const;
  public:
  void clear_nextexp();
  ::PROTOBUF_NAMESPACE_ID::uint32 nextexp() const;
  void set_nextexp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nextexp() const;
  void _internal_set_nextexp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 salary = 8;
  bool has_salary() const;
  private:
  bool _internal_has_salary() const;
  public:
  void clear_salary();
  ::PROTOBUF_NAMESPACE_ID::uint32 salary() const;
  void set_salary(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_salary() const;
  void _internal_set_salary(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 sumcount = 9;
  bool has_sumcount() const;
  private:
  bool _internal_has_sumcount() const;
  public:
  void clear_sumcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 sumcount() const;
  void set_sumcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sumcount() const;
  void _internal_set_sumcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 onlinecount = 10;
  bool has_onlinecount() const;
  private:
  bool _internal_has_onlinecount() const;
  public:
  void clear_onlinecount();
  ::PROTOBUF_NAMESPACE_ID::uint32 onlinecount() const;
  void set_onlinecount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_onlinecount() const;
  void _internal_set_onlinecount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 countlimit = 11;
  bool has_countlimit() const;
  private:
  bool _internal_has_countlimit() const;
  public:
  void clear_countlimit();
  ::PROTOBUF_NAMESPACE_ID::uint32 countlimit() const;
  void set_countlimit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_countlimit() const;
  void _internal_set_countlimit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 countryid = 13;
  bool has_countryid() const;
  private:
  bool _internal_has_countryid() const;
  public:
  void clear_countryid();
  ::PROTOBUF_NAMESPACE_ID::uint32 countryid() const;
  void set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_countryid() const;
  void _internal_set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rank = 14;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  ::PROTOBUF_NAMESPACE_ID::uint32 rank() const;
  void set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rank() const;
  void _internal_set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lastactive = 17;
  bool has_lastactive() const;
  private:
  bool _internal_has_lastactive() const;
  public:
  void clear_lastactive();
  ::PROTOBUF_NAMESPACE_ID::uint32 lastactive() const;
  void set_lastactive(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lastactive() const;
  void _internal_set_lastactive(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lastcountlimit = 18;
  bool has_lastcountlimit() const;
  private:
  bool _internal_has_lastcountlimit() const;
  public:
  void clear_lastcountlimit();
  ::PROTOBUF_NAMESPACE_ID::uint32 lastcountlimit() const;
  void set_lastcountlimit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lastcountlimit() const;
  void _internal_set_lastcountlimit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 salary_rest_day = 20;
  bool has_salary_rest_day() const;
  private:
  bool _internal_has_salary_rest_day() const;
  public:
  void clear_salary_rest_day();
  ::PROTOBUF_NAMESPACE_ID::uint32 salary_rest_day() const;
  void set_salary_rest_day(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_salary_rest_day() const;
  void _internal_set_salary_rest_day(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.guildInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GuildPositionInfo > posinfo_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guildname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mastername_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr notify_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guildsetinfo_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr icon_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guildlevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_;
  ::PROTOBUF_NAMESPACE_ID::uint32 exp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nextexp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 salary_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sumcount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 onlinecount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 countlimit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 countryid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rank_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lastactive_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lastcountlimit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 salary_rest_day_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_PreCreateGuild_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_PreCreateGuild_CS) */ {
 public:
  MSG_Req_PreCreateGuild_CS();
  virtual ~MSG_Req_PreCreateGuild_CS();

  MSG_Req_PreCreateGuild_CS(const MSG_Req_PreCreateGuild_CS& from);
  MSG_Req_PreCreateGuild_CS(MSG_Req_PreCreateGuild_CS&& from) noexcept
    : MSG_Req_PreCreateGuild_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_PreCreateGuild_CS& operator=(const MSG_Req_PreCreateGuild_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_PreCreateGuild_CS& operator=(MSG_Req_PreCreateGuild_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_PreCreateGuild_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_PreCreateGuild_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_PreCreateGuild_CS*>(
               &_MSG_Req_PreCreateGuild_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MSG_Req_PreCreateGuild_CS& a, MSG_Req_PreCreateGuild_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_PreCreateGuild_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_PreCreateGuild_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_PreCreateGuild_CS>(nullptr);
  }

  MSG_Req_PreCreateGuild_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_PreCreateGuild_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_PreCreateGuild_CS& from);
  void MergeFrom(const MSG_Req_PreCreateGuild_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_PreCreateGuild_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_PreCreateGuild_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_PreCreateGuild_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_PreCreateGuild_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_PreCreateGuild_SC) */ {
 public:
  MSG_Ret_PreCreateGuild_SC();
  virtual ~MSG_Ret_PreCreateGuild_SC();

  MSG_Ret_PreCreateGuild_SC(const MSG_Ret_PreCreateGuild_SC& from);
  MSG_Ret_PreCreateGuild_SC(MSG_Ret_PreCreateGuild_SC&& from) noexcept
    : MSG_Ret_PreCreateGuild_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_PreCreateGuild_SC& operator=(const MSG_Ret_PreCreateGuild_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_PreCreateGuild_SC& operator=(MSG_Ret_PreCreateGuild_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_PreCreateGuild_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_PreCreateGuild_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_PreCreateGuild_SC*>(
               &_MSG_Ret_PreCreateGuild_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MSG_Ret_PreCreateGuild_SC& a, MSG_Ret_PreCreateGuild_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_PreCreateGuild_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_PreCreateGuild_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_PreCreateGuild_SC>(nullptr);
  }

  MSG_Ret_PreCreateGuild_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_PreCreateGuild_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_PreCreateGuild_SC& from);
  void MergeFrom(const MSG_Ret_PreCreateGuild_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_PreCreateGuild_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_PreCreateGuild_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCostObjidFieldNumber = 1,
    kCostObjnumFieldNumber = 2,
  };
  // optional uint32 cost_objid = 1;
  bool has_cost_objid() const;
  private:
  bool _internal_has_cost_objid() const;
  public:
  void clear_cost_objid();
  ::PROTOBUF_NAMESPACE_ID::uint32 cost_objid() const;
  void set_cost_objid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cost_objid() const;
  void _internal_set_cost_objid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cost_objnum = 2;
  bool has_cost_objnum() const;
  private:
  bool _internal_has_cost_objnum() const;
  public:
  void clear_cost_objnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 cost_objnum() const;
  void set_cost_objnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cost_objnum() const;
  void _internal_set_cost_objnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_PreCreateGuild_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cost_objid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cost_objnum_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_CreateGuild_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_CreateGuild_CS) */ {
 public:
  MSG_Req_CreateGuild_CS();
  virtual ~MSG_Req_CreateGuild_CS();

  MSG_Req_CreateGuild_CS(const MSG_Req_CreateGuild_CS& from);
  MSG_Req_CreateGuild_CS(MSG_Req_CreateGuild_CS&& from) noexcept
    : MSG_Req_CreateGuild_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_CreateGuild_CS& operator=(const MSG_Req_CreateGuild_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_CreateGuild_CS& operator=(MSG_Req_CreateGuild_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_CreateGuild_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_CreateGuild_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_CreateGuild_CS*>(
               &_MSG_Req_CreateGuild_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MSG_Req_CreateGuild_CS& a, MSG_Req_CreateGuild_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_CreateGuild_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_CreateGuild_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_CreateGuild_CS>(nullptr);
  }

  MSG_Req_CreateGuild_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_CreateGuild_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_CreateGuild_CS& from);
  void MergeFrom(const MSG_Req_CreateGuild_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_CreateGuild_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_CreateGuild_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildnameFieldNumber = 1,
    kIconFieldNumber = 2,
  };
  // optional string guildname = 1;
  bool has_guildname() const;
  private:
  bool _internal_has_guildname() const;
  public:
  void clear_guildname();
  const std::string& guildname() const;
  void set_guildname(const std::string& value);
  void set_guildname(std::string&& value);
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  std::string* mutable_guildname();
  std::string* release_guildname();
  void set_allocated_guildname(std::string* guildname);
  private:
  const std::string& _internal_guildname() const;
  void _internal_set_guildname(const std::string& value);
  std::string* _internal_mutable_guildname();
  public:

  // optional string icon = 2;
  bool has_icon() const;
  private:
  bool _internal_has_icon() const;
  public:
  void clear_icon();
  const std::string& icon() const;
  void set_icon(const std::string& value);
  void set_icon(std::string&& value);
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  std::string* mutable_icon();
  std::string* release_icon();
  void set_allocated_icon(std::string* icon);
  private:
  const std::string& _internal_icon() const;
  void _internal_set_icon(const std::string& value);
  std::string* _internal_mutable_icon();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_CreateGuild_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guildname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr icon_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_CreateGuild_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_CreateGuild_SC) */ {
 public:
  MSG_Ret_CreateGuild_SC();
  virtual ~MSG_Ret_CreateGuild_SC();

  MSG_Ret_CreateGuild_SC(const MSG_Ret_CreateGuild_SC& from);
  MSG_Ret_CreateGuild_SC(MSG_Ret_CreateGuild_SC&& from) noexcept
    : MSG_Ret_CreateGuild_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_CreateGuild_SC& operator=(const MSG_Ret_CreateGuild_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_CreateGuild_SC& operator=(MSG_Ret_CreateGuild_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_CreateGuild_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_CreateGuild_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_CreateGuild_SC*>(
               &_MSG_Ret_CreateGuild_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MSG_Ret_CreateGuild_SC& a, MSG_Ret_CreateGuild_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_CreateGuild_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_CreateGuild_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_CreateGuild_SC>(nullptr);
  }

  MSG_Ret_CreateGuild_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_CreateGuild_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_CreateGuild_SC& from);
  void MergeFrom(const MSG_Ret_CreateGuild_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_CreateGuild_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_CreateGuild_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildnameFieldNumber = 1,
    kIssuccFieldNumber = 2,
  };
  // optional string guildname = 1;
  bool has_guildname() const;
  private:
  bool _internal_has_guildname() const;
  public:
  void clear_guildname();
  const std::string& guildname() const;
  void set_guildname(const std::string& value);
  void set_guildname(std::string&& value);
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  std::string* mutable_guildname();
  std::string* release_guildname();
  void set_allocated_guildname(std::string* guildname);
  private:
  const std::string& _internal_guildname() const;
  void _internal_set_guildname(const std::string& value);
  std::string* _internal_mutable_guildname();
  public:

  // optional bool issucc = 2;
  bool has_issucc() const;
  private:
  bool _internal_has_issucc() const;
  public:
  void clear_issucc();
  bool issucc() const;
  void set_issucc(bool value);
  private:
  bool _internal_issucc() const;
  void _internal_set_issucc(bool value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_CreateGuild_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guildname_;
  bool issucc_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_SetGuildNotify_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_SetGuildNotify_CS) */ {
 public:
  MSG_Req_SetGuildNotify_CS();
  virtual ~MSG_Req_SetGuildNotify_CS();

  MSG_Req_SetGuildNotify_CS(const MSG_Req_SetGuildNotify_CS& from);
  MSG_Req_SetGuildNotify_CS(MSG_Req_SetGuildNotify_CS&& from) noexcept
    : MSG_Req_SetGuildNotify_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_SetGuildNotify_CS& operator=(const MSG_Req_SetGuildNotify_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_SetGuildNotify_CS& operator=(MSG_Req_SetGuildNotify_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_SetGuildNotify_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_SetGuildNotify_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_SetGuildNotify_CS*>(
               &_MSG_Req_SetGuildNotify_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MSG_Req_SetGuildNotify_CS& a, MSG_Req_SetGuildNotify_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_SetGuildNotify_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_SetGuildNotify_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_SetGuildNotify_CS>(nullptr);
  }

  MSG_Req_SetGuildNotify_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_SetGuildNotify_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_SetGuildNotify_CS& from);
  void MergeFrom(const MSG_Req_SetGuildNotify_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_SetGuildNotify_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_SetGuildNotify_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotifyFieldNumber = 3,
  };
  // optional string notify = 3;
  bool has_notify() const;
  private:
  bool _internal_has_notify() const;
  public:
  void clear_notify();
  const std::string& notify() const;
  void set_notify(const std::string& value);
  void set_notify(std::string&& value);
  void set_notify(const char* value);
  void set_notify(const char* value, size_t size);
  std::string* mutable_notify();
  std::string* release_notify();
  void set_allocated_notify(std::string* notify);
  private:
  const std::string& _internal_notify() const;
  void _internal_set_notify(const std::string& value);
  std::string* _internal_mutable_notify();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_SetGuildNotify_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr notify_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_SetGuildNotify_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_SetGuildNotify_SC) */ {
 public:
  MSG_Ret_SetGuildNotify_SC();
  virtual ~MSG_Ret_SetGuildNotify_SC();

  MSG_Ret_SetGuildNotify_SC(const MSG_Ret_SetGuildNotify_SC& from);
  MSG_Ret_SetGuildNotify_SC(MSG_Ret_SetGuildNotify_SC&& from) noexcept
    : MSG_Ret_SetGuildNotify_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_SetGuildNotify_SC& operator=(const MSG_Ret_SetGuildNotify_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_SetGuildNotify_SC& operator=(MSG_Ret_SetGuildNotify_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_SetGuildNotify_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_SetGuildNotify_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_SetGuildNotify_SC*>(
               &_MSG_Ret_SetGuildNotify_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_Ret_SetGuildNotify_SC& a, MSG_Ret_SetGuildNotify_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_SetGuildNotify_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_SetGuildNotify_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_SetGuildNotify_SC>(nullptr);
  }

  MSG_Ret_SetGuildNotify_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_SetGuildNotify_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_SetGuildNotify_SC& from);
  void MergeFrom(const MSG_Ret_SetGuildNotify_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_SetGuildNotify_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_SetGuildNotify_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIssuccFieldNumber = 1,
  };
  // optional bool issucc = 1;
  bool has_issucc() const;
  private:
  bool _internal_has_issucc() const;
  public:
  void clear_issucc();
  bool issucc() const;
  void set_issucc(bool value);
  private:
  bool _internal_issucc() const;
  void _internal_set_issucc(bool value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_SetGuildNotify_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool issucc_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildInfo_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildInfo_CS) */ {
 public:
  MSG_Req_GuildInfo_CS();
  virtual ~MSG_Req_GuildInfo_CS();

  MSG_Req_GuildInfo_CS(const MSG_Req_GuildInfo_CS& from);
  MSG_Req_GuildInfo_CS(MSG_Req_GuildInfo_CS&& from) noexcept
    : MSG_Req_GuildInfo_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildInfo_CS& operator=(const MSG_Req_GuildInfo_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildInfo_CS& operator=(MSG_Req_GuildInfo_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildInfo_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildInfo_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildInfo_CS*>(
               &_MSG_Req_GuildInfo_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_Req_GuildInfo_CS& a, MSG_Req_GuildInfo_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildInfo_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildInfo_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildInfo_CS>(nullptr);
  }

  MSG_Req_GuildInfo_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildInfo_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildInfo_CS& from);
  void MergeFrom(const MSG_Req_GuildInfo_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildInfo_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildInfo_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildidFieldNumber = 1,
  };
  // optional uint64 guildid = 1;
  bool has_guildid() const;
  private:
  bool _internal_has_guildid() const;
  public:
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildInfo_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildInfo_SC) */ {
 public:
  MSG_Ret_GuildInfo_SC();
  virtual ~MSG_Ret_GuildInfo_SC();

  MSG_Ret_GuildInfo_SC(const MSG_Ret_GuildInfo_SC& from);
  MSG_Ret_GuildInfo_SC(MSG_Ret_GuildInfo_SC&& from) noexcept
    : MSG_Ret_GuildInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildInfo_SC& operator=(const MSG_Ret_GuildInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildInfo_SC& operator=(MSG_Ret_GuildInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildInfo_SC*>(
               &_MSG_Ret_GuildInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_Ret_GuildInfo_SC& a, MSG_Ret_GuildInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildInfo_SC>(nullptr);
  }

  MSG_Ret_GuildInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildInfo_SC& from);
  void MergeFrom(const MSG_Ret_GuildInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildinfoFieldNumber = 1,
    kMyinfoFieldNumber = 2,
  };
  // optional .guild.guildInfo guildinfo = 1;
  bool has_guildinfo() const;
  private:
  bool _internal_has_guildinfo() const;
  public:
  void clear_guildinfo();
  const ::guild::guildInfo& guildinfo() const;
  ::guild::guildInfo* release_guildinfo();
  ::guild::guildInfo* mutable_guildinfo();
  void set_allocated_guildinfo(::guild::guildInfo* guildinfo);
  private:
  const ::guild::guildInfo& _internal_guildinfo() const;
  ::guild::guildInfo* _internal_mutable_guildinfo();
  public:

  // optional .guild.guildMember myinfo = 2;
  bool has_myinfo() const;
  private:
  bool _internal_has_myinfo() const;
  public:
  void clear_myinfo();
  const ::guild::guildMember& myinfo() const;
  ::guild::guildMember* release_myinfo();
  ::guild::guildMember* mutable_myinfo();
  void set_allocated_myinfo(::guild::guildMember* myinfo);
  private:
  const ::guild::guildMember& _internal_myinfo() const;
  ::guild::guildMember* _internal_mutable_myinfo();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::guild::guildInfo* guildinfo_;
  ::guild::guildMember* myinfo_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildList_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildList_CS) */ {
 public:
  MSG_Req_GuildList_CS();
  virtual ~MSG_Req_GuildList_CS();

  MSG_Req_GuildList_CS(const MSG_Req_GuildList_CS& from);
  MSG_Req_GuildList_CS(MSG_Req_GuildList_CS&& from) noexcept
    : MSG_Req_GuildList_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildList_CS& operator=(const MSG_Req_GuildList_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildList_CS& operator=(MSG_Req_GuildList_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildList_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildList_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildList_CS*>(
               &_MSG_Req_GuildList_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MSG_Req_GuildList_CS& a, MSG_Req_GuildList_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildList_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildList_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildList_CS>(nullptr);
  }

  MSG_Req_GuildList_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildList_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildList_CS& from);
  void MergeFrom(const MSG_Req_GuildList_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildList_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildList_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kCountryidFieldNumber = 2,
  };
  // required uint32 page = 1;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::uint32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 countryid = 2;
  bool has_countryid() const;
  private:
  bool _internal_has_countryid() const;
  public:
  void clear_countryid();
  ::PROTOBUF_NAMESPACE_ID::uint32 countryid() const;
  void set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_countryid() const;
  void _internal_set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildList_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 page_;
  ::PROTOBUF_NAMESPACE_ID::uint32 countryid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class guildListItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.guildListItem) */ {
 public:
  guildListItem();
  virtual ~guildListItem();

  guildListItem(const guildListItem& from);
  guildListItem(guildListItem&& from) noexcept
    : guildListItem() {
    *this = ::std::move(from);
  }

  inline guildListItem& operator=(const guildListItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline guildListItem& operator=(guildListItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const guildListItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const guildListItem* internal_default_instance() {
    return reinterpret_cast<const guildListItem*>(
               &_guildListItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(guildListItem& a, guildListItem& b) {
    a.Swap(&b);
  }
  inline void Swap(guildListItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline guildListItem* New() const final {
    return CreateMaybeMessage<guildListItem>(nullptr);
  }

  guildListItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<guildListItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const guildListItem& from);
  void MergeFrom(const guildListItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(guildListItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.guildListItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildFieldNumber = 1,
    kGuildtypeFieldNumber = 2,
  };
  // optional .guild.guildInfo guild = 1;
  bool has_guild() const;
  private:
  bool _internal_has_guild() const;
  public:
  void clear_guild();
  const ::guild::guildInfo& guild() const;
  ::guild::guildInfo* release_guild();
  ::guild::guildInfo* mutable_guild();
  void set_allocated_guild(::guild::guildInfo* guild);
  private:
  const ::guild::guildInfo& _internal_guild() const;
  ::guild::guildInfo* _internal_mutable_guild();
  public:

  // optional uint32 guildtype = 2;
  bool has_guildtype() const;
  private:
  bool _internal_has_guildtype() const;
  public:
  void clear_guildtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 guildtype() const;
  void set_guildtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guildtype() const;
  void _internal_set_guildtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.guildListItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::guild::guildInfo* guild_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guildtype_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildList_SC) */ {
 public:
  MSG_Ret_GuildList_SC();
  virtual ~MSG_Ret_GuildList_SC();

  MSG_Ret_GuildList_SC(const MSG_Ret_GuildList_SC& from);
  MSG_Ret_GuildList_SC(MSG_Ret_GuildList_SC&& from) noexcept
    : MSG_Ret_GuildList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildList_SC& operator=(const MSG_Ret_GuildList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildList_SC& operator=(MSG_Ret_GuildList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildList_SC*>(
               &_MSG_Ret_GuildList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_Ret_GuildList_SC& a, MSG_Ret_GuildList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildList_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildList_SC>(nullptr);
  }

  MSG_Ret_GuildList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildList_SC& from);
  void MergeFrom(const MSG_Ret_GuildList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildListFieldNumber = 1,
    kAllpageFieldNumber = 2,
    kPageFieldNumber = 3,
    kCountryidFieldNumber = 4,
  };
  // repeated .guild.guildListItem guildList = 1;
  int guildlist_size() const;
  private:
  int _internal_guildlist_size() const;
  public:
  void clear_guildlist();
  ::guild::guildListItem* mutable_guildlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildListItem >*
      mutable_guildlist();
  private:
  const ::guild::guildListItem& _internal_guildlist(int index) const;
  ::guild::guildListItem* _internal_add_guildlist();
  public:
  const ::guild::guildListItem& guildlist(int index) const;
  ::guild::guildListItem* add_guildlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildListItem >&
      guildlist() const;

  // optional uint32 allpage = 2;
  bool has_allpage() const;
  private:
  bool _internal_has_allpage() const;
  public:
  void clear_allpage();
  ::PROTOBUF_NAMESPACE_ID::uint32 allpage() const;
  void set_allpage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_allpage() const;
  void _internal_set_allpage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 page = 3;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::uint32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 countryid = 4;
  bool has_countryid() const;
  private:
  bool _internal_has_countryid() const;
  public:
  void clear_countryid();
  ::PROTOBUF_NAMESPACE_ID::uint32 countryid() const;
  void set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_countryid() const;
  void _internal_set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildListItem > guildlist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 allpage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 page_;
  ::PROTOBUF_NAMESPACE_ID::uint32 countryid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_ApplyForGuild_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_ApplyForGuild_CS) */ {
 public:
  MSG_Req_ApplyForGuild_CS();
  virtual ~MSG_Req_ApplyForGuild_CS();

  MSG_Req_ApplyForGuild_CS(const MSG_Req_ApplyForGuild_CS& from);
  MSG_Req_ApplyForGuild_CS(MSG_Req_ApplyForGuild_CS&& from) noexcept
    : MSG_Req_ApplyForGuild_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_ApplyForGuild_CS& operator=(const MSG_Req_ApplyForGuild_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_ApplyForGuild_CS& operator=(MSG_Req_ApplyForGuild_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_ApplyForGuild_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_ApplyForGuild_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_ApplyForGuild_CS*>(
               &_MSG_Req_ApplyForGuild_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_Req_ApplyForGuild_CS& a, MSG_Req_ApplyForGuild_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_ApplyForGuild_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_ApplyForGuild_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_ApplyForGuild_CS>(nullptr);
  }

  MSG_Req_ApplyForGuild_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_ApplyForGuild_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_ApplyForGuild_CS& from);
  void MergeFrom(const MSG_Req_ApplyForGuild_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_ApplyForGuild_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_ApplyForGuild_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildidFieldNumber = 1,
    kFlagFieldNumber = 2,
  };
  // optional uint64 guildid = 1;
  bool has_guildid() const;
  private:
  bool _internal_has_guildid() const;
  public:
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool flag = 2;
  bool has_flag() const;
  private:
  bool _internal_has_flag() const;
  public:
  void clear_flag();
  bool flag() const;
  void set_flag(bool value);
  private:
  bool _internal_flag() const;
  void _internal_set_flag(bool value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_ApplyForGuild_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  bool flag_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_ApplyForGuild_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_ApplyForGuild_SC) */ {
 public:
  MSG_Ret_ApplyForGuild_SC();
  virtual ~MSG_Ret_ApplyForGuild_SC();

  MSG_Ret_ApplyForGuild_SC(const MSG_Ret_ApplyForGuild_SC& from);
  MSG_Ret_ApplyForGuild_SC(MSG_Ret_ApplyForGuild_SC&& from) noexcept
    : MSG_Ret_ApplyForGuild_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_ApplyForGuild_SC& operator=(const MSG_Ret_ApplyForGuild_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_ApplyForGuild_SC& operator=(MSG_Ret_ApplyForGuild_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_ApplyForGuild_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_ApplyForGuild_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_ApplyForGuild_SC*>(
               &_MSG_Ret_ApplyForGuild_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MSG_Ret_ApplyForGuild_SC& a, MSG_Ret_ApplyForGuild_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_ApplyForGuild_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_ApplyForGuild_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_ApplyForGuild_SC>(nullptr);
  }

  MSG_Ret_ApplyForGuild_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_ApplyForGuild_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_ApplyForGuild_SC& from);
  void MergeFrom(const MSG_Ret_ApplyForGuild_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_ApplyForGuild_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_ApplyForGuild_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildidFieldNumber = 1,
    kIssuccFieldNumber = 2,
    kFlagFieldNumber = 3,
  };
  // optional uint64 guildid = 1;
  bool has_guildid() const;
  private:
  bool _internal_has_guildid() const;
  public:
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool issucc = 2;
  bool has_issucc() const;
  private:
  bool _internal_has_issucc() const;
  public:
  void clear_issucc();
  bool issucc() const;
  void set_issucc(bool value);
  private:
  bool _internal_issucc() const;
  void _internal_set_issucc(bool value);
  public:

  // optional bool flag = 3;
  bool has_flag() const;
  private:
  bool _internal_has_flag() const;
  public:
  void clear_flag();
  bool flag() const;
  void set_flag(bool value);
  private:
  bool _internal_flag() const;
  void _internal_set_flag(bool value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_ApplyForGuild_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  bool issucc_;
  bool flag_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class stApplyForItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.stApplyForItem) */ {
 public:
  stApplyForItem();
  virtual ~stApplyForItem();

  stApplyForItem(const stApplyForItem& from);
  stApplyForItem(stApplyForItem&& from) noexcept
    : stApplyForItem() {
    *this = ::std::move(from);
  }

  inline stApplyForItem& operator=(const stApplyForItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline stApplyForItem& operator=(stApplyForItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const stApplyForItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const stApplyForItem* internal_default_instance() {
    return reinterpret_cast<const stApplyForItem*>(
               &_stApplyForItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(stApplyForItem& a, stApplyForItem& b) {
    a.Swap(&b);
  }
  inline void Swap(stApplyForItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline stApplyForItem* New() const final {
    return CreateMaybeMessage<stApplyForItem>(nullptr);
  }

  stApplyForItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<stApplyForItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const stApplyForItem& from);
  void MergeFrom(const stApplyForItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(stApplyForItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.stApplyForItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplynameFieldNumber = 2,
    kApplyidFieldNumber = 1,
    kIssuccFieldNumber = 3,
  };
  // optional string applyname = 2;
  bool has_applyname() const;
  private:
  bool _internal_has_applyname() const;
  public:
  void clear_applyname();
  const std::string& applyname() const;
  void set_applyname(const std::string& value);
  void set_applyname(std::string&& value);
  void set_applyname(const char* value);
  void set_applyname(const char* value, size_t size);
  std::string* mutable_applyname();
  std::string* release_applyname();
  void set_allocated_applyname(std::string* applyname);
  private:
  const std::string& _internal_applyname() const;
  void _internal_set_applyname(const std::string& value);
  std::string* _internal_mutable_applyname();
  public:

  // optional uint64 applyid = 1;
  bool has_applyid() const;
  private:
  bool _internal_has_applyid() const;
  public:
  void clear_applyid();
  ::PROTOBUF_NAMESPACE_ID::uint64 applyid() const;
  void set_applyid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_applyid() const;
  void _internal_set_applyid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool issucc = 3 [default = false];
  bool has_issucc() const;
  private:
  bool _internal_has_issucc() const;
  public:
  void clear_issucc();
  bool issucc() const;
  void set_issucc(bool value);
  private:
  bool _internal_issucc() const;
  void _internal_set_issucc(bool value);
  public:

  // @@protoc_insertion_point(class_scope:guild.stApplyForItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr applyname_;
  ::PROTOBUF_NAMESPACE_ID::uint64 applyid_;
  bool issucc_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_AnswerApplyForGuild_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_AnswerApplyForGuild_CS) */ {
 public:
  MSG_Req_AnswerApplyForGuild_CS();
  virtual ~MSG_Req_AnswerApplyForGuild_CS();

  MSG_Req_AnswerApplyForGuild_CS(const MSG_Req_AnswerApplyForGuild_CS& from);
  MSG_Req_AnswerApplyForGuild_CS(MSG_Req_AnswerApplyForGuild_CS&& from) noexcept
    : MSG_Req_AnswerApplyForGuild_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_AnswerApplyForGuild_CS& operator=(const MSG_Req_AnswerApplyForGuild_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_AnswerApplyForGuild_CS& operator=(MSG_Req_AnswerApplyForGuild_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_AnswerApplyForGuild_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_AnswerApplyForGuild_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_AnswerApplyForGuild_CS*>(
               &_MSG_Req_AnswerApplyForGuild_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MSG_Req_AnswerApplyForGuild_CS& a, MSG_Req_AnswerApplyForGuild_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_AnswerApplyForGuild_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_AnswerApplyForGuild_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_AnswerApplyForGuild_CS>(nullptr);
  }

  MSG_Req_AnswerApplyForGuild_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_AnswerApplyForGuild_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_AnswerApplyForGuild_CS& from);
  void MergeFrom(const MSG_Req_AnswerApplyForGuild_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_AnswerApplyForGuild_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_AnswerApplyForGuild_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplyinfoFieldNumber = 1,
    kAcceptFieldNumber = 2,
  };
  // repeated .guild.stApplyForItem applyinfo = 1;
  int applyinfo_size() const;
  private:
  int _internal_applyinfo_size() const;
  public:
  void clear_applyinfo();
  ::guild::stApplyForItem* mutable_applyinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::stApplyForItem >*
      mutable_applyinfo();
  private:
  const ::guild::stApplyForItem& _internal_applyinfo(int index) const;
  ::guild::stApplyForItem* _internal_add_applyinfo();
  public:
  const ::guild::stApplyForItem& applyinfo(int index) const;
  ::guild::stApplyForItem* add_applyinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::stApplyForItem >&
      applyinfo() const;

  // optional bool accept = 2;
  bool has_accept() const;
  private:
  bool _internal_has_accept() const;
  public:
  void clear_accept();
  bool accept() const;
  void set_accept(bool value);
  private:
  bool _internal_accept() const;
  void _internal_set_accept(bool value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_AnswerApplyForGuild_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::stApplyForItem > applyinfo_;
  bool accept_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_AnswerApplyForGuild_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_AnswerApplyForGuild_SC) */ {
 public:
  MSG_Ret_AnswerApplyForGuild_SC();
  virtual ~MSG_Ret_AnswerApplyForGuild_SC();

  MSG_Ret_AnswerApplyForGuild_SC(const MSG_Ret_AnswerApplyForGuild_SC& from);
  MSG_Ret_AnswerApplyForGuild_SC(MSG_Ret_AnswerApplyForGuild_SC&& from) noexcept
    : MSG_Ret_AnswerApplyForGuild_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_AnswerApplyForGuild_SC& operator=(const MSG_Ret_AnswerApplyForGuild_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_AnswerApplyForGuild_SC& operator=(MSG_Ret_AnswerApplyForGuild_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_AnswerApplyForGuild_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_AnswerApplyForGuild_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_AnswerApplyForGuild_SC*>(
               &_MSG_Ret_AnswerApplyForGuild_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MSG_Ret_AnswerApplyForGuild_SC& a, MSG_Ret_AnswerApplyForGuild_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_AnswerApplyForGuild_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_AnswerApplyForGuild_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_AnswerApplyForGuild_SC>(nullptr);
  }

  MSG_Ret_AnswerApplyForGuild_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_AnswerApplyForGuild_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_AnswerApplyForGuild_SC& from);
  void MergeFrom(const MSG_Ret_AnswerApplyForGuild_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_AnswerApplyForGuild_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_AnswerApplyForGuild_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetlistFieldNumber = 1,
  };
  // repeated .guild.stApplyForItem retlist = 1;
  int retlist_size() const;
  private:
  int _internal_retlist_size() const;
  public:
  void clear_retlist();
  ::guild::stApplyForItem* mutable_retlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::stApplyForItem >*
      mutable_retlist();
  private:
  const ::guild::stApplyForItem& _internal_retlist(int index) const;
  ::guild::stApplyForItem* _internal_add_retlist();
  public:
  const ::guild::stApplyForItem& retlist(int index) const;
  ::guild::stApplyForItem* add_retlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::stApplyForItem >&
      retlist() const;

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_AnswerApplyForGuild_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::stApplyForItem > retlist_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MyGuildApply_Result_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_MyGuildApply_Result_SC) */ {
 public:
  MSG_Ret_MyGuildApply_Result_SC();
  virtual ~MSG_Ret_MyGuildApply_Result_SC();

  MSG_Ret_MyGuildApply_Result_SC(const MSG_Ret_MyGuildApply_Result_SC& from);
  MSG_Ret_MyGuildApply_Result_SC(MSG_Ret_MyGuildApply_Result_SC&& from) noexcept
    : MSG_Ret_MyGuildApply_Result_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MyGuildApply_Result_SC& operator=(const MSG_Ret_MyGuildApply_Result_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MyGuildApply_Result_SC& operator=(MSG_Ret_MyGuildApply_Result_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MyGuildApply_Result_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MyGuildApply_Result_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MyGuildApply_Result_SC*>(
               &_MSG_Ret_MyGuildApply_Result_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MSG_Ret_MyGuildApply_Result_SC& a, MSG_Ret_MyGuildApply_Result_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MyGuildApply_Result_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MyGuildApply_Result_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MyGuildApply_Result_SC>(nullptr);
  }

  MSG_Ret_MyGuildApply_Result_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MyGuildApply_Result_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MyGuildApply_Result_SC& from);
  void MergeFrom(const MSG_Ret_MyGuildApply_Result_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MyGuildApply_Result_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_MyGuildApply_Result_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .guild.stApplyForItem result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::guild::stApplyForItem& result() const;
  ::guild::stApplyForItem* release_result();
  ::guild::stApplyForItem* mutable_result();
  void set_allocated_result(::guild::stApplyForItem* result);
  private:
  const ::guild::stApplyForItem& _internal_result() const;
  ::guild::stApplyForItem* _internal_mutable_result();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_MyGuildApply_Result_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::guild::stApplyForItem* result_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildMemberList_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildMemberList_CS) */ {
 public:
  MSG_Req_GuildMemberList_CS();
  virtual ~MSG_Req_GuildMemberList_CS();

  MSG_Req_GuildMemberList_CS(const MSG_Req_GuildMemberList_CS& from);
  MSG_Req_GuildMemberList_CS(MSG_Req_GuildMemberList_CS&& from) noexcept
    : MSG_Req_GuildMemberList_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildMemberList_CS& operator=(const MSG_Req_GuildMemberList_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildMemberList_CS& operator=(MSG_Req_GuildMemberList_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildMemberList_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildMemberList_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildMemberList_CS*>(
               &_MSG_Req_GuildMemberList_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MSG_Req_GuildMemberList_CS& a, MSG_Req_GuildMemberList_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildMemberList_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildMemberList_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildMemberList_CS>(nullptr);
  }

  MSG_Req_GuildMemberList_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildMemberList_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildMemberList_CS& from);
  void MergeFrom(const MSG_Req_GuildMemberList_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildMemberList_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildMemberList_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kReqtypeFieldNumber = 2,
  };
  // required uint32 page = 1;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::uint32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .guild.ReqMemberListType reqtype = 2;
  bool has_reqtype() const;
  private:
  bool _internal_has_reqtype() const;
  public:
  void clear_reqtype();
  ::guild::ReqMemberListType reqtype() const;
  void set_reqtype(::guild::ReqMemberListType value);
  private:
  ::guild::ReqMemberListType _internal_reqtype() const;
  void _internal_set_reqtype(::guild::ReqMemberListType value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildMemberList_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 page_;
  int reqtype_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildMemberList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildMemberList_SC) */ {
 public:
  MSG_Ret_GuildMemberList_SC();
  virtual ~MSG_Ret_GuildMemberList_SC();

  MSG_Ret_GuildMemberList_SC(const MSG_Ret_GuildMemberList_SC& from);
  MSG_Ret_GuildMemberList_SC(MSG_Ret_GuildMemberList_SC&& from) noexcept
    : MSG_Ret_GuildMemberList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildMemberList_SC& operator=(const MSG_Ret_GuildMemberList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildMemberList_SC& operator=(MSG_Ret_GuildMemberList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildMemberList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildMemberList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildMemberList_SC*>(
               &_MSG_Ret_GuildMemberList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MSG_Ret_GuildMemberList_SC& a, MSG_Ret_GuildMemberList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildMemberList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildMemberList_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildMemberList_SC>(nullptr);
  }

  MSG_Ret_GuildMemberList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildMemberList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildMemberList_SC& from);
  void MergeFrom(const MSG_Ret_GuildMemberList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildMemberList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildMemberList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMembersFieldNumber = 2,
    kGuildinfoFieldNumber = 1,
    kPageFieldNumber = 4,
    kAllpageFieldNumber = 5,
    kReqtypeFieldNumber = 3,
  };
  // repeated .guild.guildMember members = 2;
  int members_size() const;
  private:
  int _internal_members_size() const;
  public:
  void clear_members();
  ::guild::guildMember* mutable_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildMember >*
      mutable_members();
  private:
  const ::guild::guildMember& _internal_members(int index) const;
  ::guild::guildMember* _internal_add_members();
  public:
  const ::guild::guildMember& members(int index) const;
  ::guild::guildMember* add_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildMember >&
      members() const;

  // optional .guild.guildInfo guildinfo = 1;
  bool has_guildinfo() const;
  private:
  bool _internal_has_guildinfo() const;
  public:
  void clear_guildinfo();
  const ::guild::guildInfo& guildinfo() const;
  ::guild::guildInfo* release_guildinfo();
  ::guild::guildInfo* mutable_guildinfo();
  void set_allocated_guildinfo(::guild::guildInfo* guildinfo);
  private:
  const ::guild::guildInfo& _internal_guildinfo() const;
  ::guild::guildInfo* _internal_mutable_guildinfo();
  public:

  // optional uint32 page = 4;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::uint32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 allpage = 5;
  bool has_allpage() const;
  private:
  bool _internal_has_allpage() const;
  public:
  void clear_allpage();
  ::PROTOBUF_NAMESPACE_ID::uint32 allpage() const;
  void set_allpage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_allpage() const;
  void _internal_set_allpage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .guild.ReqMemberListType reqtype = 3;
  bool has_reqtype() const;
  private:
  bool _internal_has_reqtype() const;
  public:
  void clear_reqtype();
  ::guild::ReqMemberListType reqtype() const;
  void set_reqtype(::guild::ReqMemberListType value);
  private:
  ::guild::ReqMemberListType _internal_reqtype() const;
  void _internal_set_reqtype(::guild::ReqMemberListType value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildMemberList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildMember > members_;
  ::guild::guildInfo* guildinfo_;
  ::PROTOBUF_NAMESPACE_ID::uint32 page_;
  ::PROTOBUF_NAMESPACE_ID::uint32 allpage_;
  int reqtype_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_IntoGuildMap_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_IntoGuildMap_CS) */ {
 public:
  MSG_Req_IntoGuildMap_CS();
  virtual ~MSG_Req_IntoGuildMap_CS();

  MSG_Req_IntoGuildMap_CS(const MSG_Req_IntoGuildMap_CS& from);
  MSG_Req_IntoGuildMap_CS(MSG_Req_IntoGuildMap_CS&& from) noexcept
    : MSG_Req_IntoGuildMap_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_IntoGuildMap_CS& operator=(const MSG_Req_IntoGuildMap_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_IntoGuildMap_CS& operator=(MSG_Req_IntoGuildMap_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_IntoGuildMap_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_IntoGuildMap_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_IntoGuildMap_CS*>(
               &_MSG_Req_IntoGuildMap_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MSG_Req_IntoGuildMap_CS& a, MSG_Req_IntoGuildMap_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_IntoGuildMap_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_IntoGuildMap_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_IntoGuildMap_CS>(nullptr);
  }

  MSG_Req_IntoGuildMap_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_IntoGuildMap_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_IntoGuildMap_CS& from);
  void MergeFrom(const MSG_Req_IntoGuildMap_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_IntoGuildMap_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_IntoGuildMap_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_IntoGuildMap_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_CiTanEnemyGuildList_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_CiTanEnemyGuildList_CS) */ {
 public:
  MSG_Req_CiTanEnemyGuildList_CS();
  virtual ~MSG_Req_CiTanEnemyGuildList_CS();

  MSG_Req_CiTanEnemyGuildList_CS(const MSG_Req_CiTanEnemyGuildList_CS& from);
  MSG_Req_CiTanEnemyGuildList_CS(MSG_Req_CiTanEnemyGuildList_CS&& from) noexcept
    : MSG_Req_CiTanEnemyGuildList_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_CiTanEnemyGuildList_CS& operator=(const MSG_Req_CiTanEnemyGuildList_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_CiTanEnemyGuildList_CS& operator=(MSG_Req_CiTanEnemyGuildList_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_CiTanEnemyGuildList_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_CiTanEnemyGuildList_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_CiTanEnemyGuildList_CS*>(
               &_MSG_Req_CiTanEnemyGuildList_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(MSG_Req_CiTanEnemyGuildList_CS& a, MSG_Req_CiTanEnemyGuildList_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_CiTanEnemyGuildList_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_CiTanEnemyGuildList_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_CiTanEnemyGuildList_CS>(nullptr);
  }

  MSG_Req_CiTanEnemyGuildList_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_CiTanEnemyGuildList_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_CiTanEnemyGuildList_CS& from);
  void MergeFrom(const MSG_Req_CiTanEnemyGuildList_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_CiTanEnemyGuildList_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_CiTanEnemyGuildList_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_CiTanEnemyGuildList_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class CiTanEnemyGuildItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.CiTanEnemyGuildItem) */ {
 public:
  CiTanEnemyGuildItem();
  virtual ~CiTanEnemyGuildItem();

  CiTanEnemyGuildItem(const CiTanEnemyGuildItem& from);
  CiTanEnemyGuildItem(CiTanEnemyGuildItem&& from) noexcept
    : CiTanEnemyGuildItem() {
    *this = ::std::move(from);
  }

  inline CiTanEnemyGuildItem& operator=(const CiTanEnemyGuildItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CiTanEnemyGuildItem& operator=(CiTanEnemyGuildItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CiTanEnemyGuildItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CiTanEnemyGuildItem* internal_default_instance() {
    return reinterpret_cast<const CiTanEnemyGuildItem*>(
               &_CiTanEnemyGuildItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CiTanEnemyGuildItem& a, CiTanEnemyGuildItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CiTanEnemyGuildItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CiTanEnemyGuildItem* New() const final {
    return CreateMaybeMessage<CiTanEnemyGuildItem>(nullptr);
  }

  CiTanEnemyGuildItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CiTanEnemyGuildItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CiTanEnemyGuildItem& from);
  void MergeFrom(const CiTanEnemyGuildItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CiTanEnemyGuildItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.CiTanEnemyGuildItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildnameFieldNumber = 3,
    kMasternameFieldNumber = 4,
    kGuildidFieldNumber = 1,
    kGuildlevelFieldNumber = 2,
    kIsvalidFieldNumber = 5,
  };
  // optional string guildname = 3;
  bool has_guildname() const;
  private:
  bool _internal_has_guildname() const;
  public:
  void clear_guildname();
  const std::string& guildname() const;
  void set_guildname(const std::string& value);
  void set_guildname(std::string&& value);
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  std::string* mutable_guildname();
  std::string* release_guildname();
  void set_allocated_guildname(std::string* guildname);
  private:
  const std::string& _internal_guildname() const;
  void _internal_set_guildname(const std::string& value);
  std::string* _internal_mutable_guildname();
  public:

  // optional string mastername = 4;
  bool has_mastername() const;
  private:
  bool _internal_has_mastername() const;
  public:
  void clear_mastername();
  const std::string& mastername() const;
  void set_mastername(const std::string& value);
  void set_mastername(std::string&& value);
  void set_mastername(const char* value);
  void set_mastername(const char* value, size_t size);
  std::string* mutable_mastername();
  std::string* release_mastername();
  void set_allocated_mastername(std::string* mastername);
  private:
  const std::string& _internal_mastername() const;
  void _internal_set_mastername(const std::string& value);
  std::string* _internal_mutable_mastername();
  public:

  // optional uint64 guildid = 1;
  bool has_guildid() const;
  private:
  bool _internal_has_guildid() const;
  public:
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 guildlevel = 2;
  bool has_guildlevel() const;
  private:
  bool _internal_has_guildlevel() const;
  public:
  void clear_guildlevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 guildlevel() const;
  void set_guildlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guildlevel() const;
  void _internal_set_guildlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 isvalid = 5;
  bool has_isvalid() const;
  private:
  bool _internal_has_isvalid() const;
  public:
  void clear_isvalid();
  ::PROTOBUF_NAMESPACE_ID::uint32 isvalid() const;
  void set_isvalid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_isvalid() const;
  void _internal_set_isvalid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.CiTanEnemyGuildItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guildname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mastername_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guildlevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 isvalid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_CiTanEnemyGuildList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_CiTanEnemyGuildList_SC) */ {
 public:
  MSG_Ret_CiTanEnemyGuildList_SC();
  virtual ~MSG_Ret_CiTanEnemyGuildList_SC();

  MSG_Ret_CiTanEnemyGuildList_SC(const MSG_Ret_CiTanEnemyGuildList_SC& from);
  MSG_Ret_CiTanEnemyGuildList_SC(MSG_Ret_CiTanEnemyGuildList_SC&& from) noexcept
    : MSG_Ret_CiTanEnemyGuildList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_CiTanEnemyGuildList_SC& operator=(const MSG_Ret_CiTanEnemyGuildList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_CiTanEnemyGuildList_SC& operator=(MSG_Ret_CiTanEnemyGuildList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_CiTanEnemyGuildList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_CiTanEnemyGuildList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_CiTanEnemyGuildList_SC*>(
               &_MSG_Ret_CiTanEnemyGuildList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(MSG_Ret_CiTanEnemyGuildList_SC& a, MSG_Ret_CiTanEnemyGuildList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_CiTanEnemyGuildList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_CiTanEnemyGuildList_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_CiTanEnemyGuildList_SC>(nullptr);
  }

  MSG_Ret_CiTanEnemyGuildList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_CiTanEnemyGuildList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_CiTanEnemyGuildList_SC& from);
  void MergeFrom(const MSG_Ret_CiTanEnemyGuildList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_CiTanEnemyGuildList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_CiTanEnemyGuildList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildlistFieldNumber = 1,
  };
  // repeated .guild.CiTanEnemyGuildItem guildlist = 1;
  int guildlist_size() const;
  private:
  int _internal_guildlist_size() const;
  public:
  void clear_guildlist();
  ::guild::CiTanEnemyGuildItem* mutable_guildlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::CiTanEnemyGuildItem >*
      mutable_guildlist();
  private:
  const ::guild::CiTanEnemyGuildItem& _internal_guildlist(int index) const;
  ::guild::CiTanEnemyGuildItem* _internal_add_guildlist();
  public:
  const ::guild::CiTanEnemyGuildItem& guildlist(int index) const;
  ::guild::CiTanEnemyGuildItem* add_guildlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::CiTanEnemyGuildItem >&
      guildlist() const;

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_CiTanEnemyGuildList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::CiTanEnemyGuildItem > guildlist_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_ChooseCiTanEnemyGuild_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_ChooseCiTanEnemyGuild_CS) */ {
 public:
  MSG_Req_ChooseCiTanEnemyGuild_CS();
  virtual ~MSG_Req_ChooseCiTanEnemyGuild_CS();

  MSG_Req_ChooseCiTanEnemyGuild_CS(const MSG_Req_ChooseCiTanEnemyGuild_CS& from);
  MSG_Req_ChooseCiTanEnemyGuild_CS(MSG_Req_ChooseCiTanEnemyGuild_CS&& from) noexcept
    : MSG_Req_ChooseCiTanEnemyGuild_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_ChooseCiTanEnemyGuild_CS& operator=(const MSG_Req_ChooseCiTanEnemyGuild_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_ChooseCiTanEnemyGuild_CS& operator=(MSG_Req_ChooseCiTanEnemyGuild_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_ChooseCiTanEnemyGuild_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_ChooseCiTanEnemyGuild_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_ChooseCiTanEnemyGuild_CS*>(
               &_MSG_Req_ChooseCiTanEnemyGuild_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(MSG_Req_ChooseCiTanEnemyGuild_CS& a, MSG_Req_ChooseCiTanEnemyGuild_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_ChooseCiTanEnemyGuild_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_ChooseCiTanEnemyGuild_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_ChooseCiTanEnemyGuild_CS>(nullptr);
  }

  MSG_Req_ChooseCiTanEnemyGuild_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_ChooseCiTanEnemyGuild_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_ChooseCiTanEnemyGuild_CS& from);
  void MergeFrom(const MSG_Req_ChooseCiTanEnemyGuild_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_ChooseCiTanEnemyGuild_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_ChooseCiTanEnemyGuild_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildidFieldNumber = 1,
  };
  // optional uint64 guildid = 1;
  bool has_guildid() const;
  private:
  bool _internal_has_guildid() const;
  public:
  void clear_guildid();
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
  void set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
  void _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_ChooseCiTanEnemyGuild_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guildid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_TargetCiTanEnemyGuild_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_TargetCiTanEnemyGuild_CS) */ {
 public:
  MSG_Req_TargetCiTanEnemyGuild_CS();
  virtual ~MSG_Req_TargetCiTanEnemyGuild_CS();

  MSG_Req_TargetCiTanEnemyGuild_CS(const MSG_Req_TargetCiTanEnemyGuild_CS& from);
  MSG_Req_TargetCiTanEnemyGuild_CS(MSG_Req_TargetCiTanEnemyGuild_CS&& from) noexcept
    : MSG_Req_TargetCiTanEnemyGuild_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_TargetCiTanEnemyGuild_CS& operator=(const MSG_Req_TargetCiTanEnemyGuild_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_TargetCiTanEnemyGuild_CS& operator=(MSG_Req_TargetCiTanEnemyGuild_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_TargetCiTanEnemyGuild_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_TargetCiTanEnemyGuild_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_TargetCiTanEnemyGuild_CS*>(
               &_MSG_Req_TargetCiTanEnemyGuild_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(MSG_Req_TargetCiTanEnemyGuild_CS& a, MSG_Req_TargetCiTanEnemyGuild_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_TargetCiTanEnemyGuild_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_TargetCiTanEnemyGuild_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_TargetCiTanEnemyGuild_CS>(nullptr);
  }

  MSG_Req_TargetCiTanEnemyGuild_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_TargetCiTanEnemyGuild_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_TargetCiTanEnemyGuild_CS& from);
  void MergeFrom(const MSG_Req_TargetCiTanEnemyGuild_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_TargetCiTanEnemyGuild_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_TargetCiTanEnemyGuild_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_TargetCiTanEnemyGuild_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_ChoosedCiTanEnemyGuild_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_ChoosedCiTanEnemyGuild_SC) */ {
 public:
  MSG_Ret_ChoosedCiTanEnemyGuild_SC();
  virtual ~MSG_Ret_ChoosedCiTanEnemyGuild_SC();

  MSG_Ret_ChoosedCiTanEnemyGuild_SC(const MSG_Ret_ChoosedCiTanEnemyGuild_SC& from);
  MSG_Ret_ChoosedCiTanEnemyGuild_SC(MSG_Ret_ChoosedCiTanEnemyGuild_SC&& from) noexcept
    : MSG_Ret_ChoosedCiTanEnemyGuild_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_ChoosedCiTanEnemyGuild_SC& operator=(const MSG_Ret_ChoosedCiTanEnemyGuild_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_ChoosedCiTanEnemyGuild_SC& operator=(MSG_Ret_ChoosedCiTanEnemyGuild_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_ChoosedCiTanEnemyGuild_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_ChoosedCiTanEnemyGuild_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_ChoosedCiTanEnemyGuild_SC*>(
               &_MSG_Ret_ChoosedCiTanEnemyGuild_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(MSG_Ret_ChoosedCiTanEnemyGuild_SC& a, MSG_Ret_ChoosedCiTanEnemyGuild_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_ChoosedCiTanEnemyGuild_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_ChoosedCiTanEnemyGuild_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_ChoosedCiTanEnemyGuild_SC>(nullptr);
  }

  MSG_Ret_ChoosedCiTanEnemyGuild_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_ChoosedCiTanEnemyGuild_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_ChoosedCiTanEnemyGuild_SC& from);
  void MergeFrom(const MSG_Ret_ChoosedCiTanEnemyGuild_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_ChoosedCiTanEnemyGuild_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_ChoosedCiTanEnemyGuild_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildFieldNumber = 1,
  };
  // optional .guild.CiTanEnemyGuildItem guild = 1;
  bool has_guild() const;
  private:
  bool _internal_has_guild() const;
  public:
  void clear_guild();
  const ::guild::CiTanEnemyGuildItem& guild() const;
  ::guild::CiTanEnemyGuildItem* release_guild();
  ::guild::CiTanEnemyGuildItem* mutable_guild();
  void set_allocated_guild(::guild::CiTanEnemyGuildItem* guild);
  private:
  const ::guild::CiTanEnemyGuildItem& _internal_guild() const;
  ::guild::CiTanEnemyGuildItem* _internal_mutable_guild();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_ChoosedCiTanEnemyGuild_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::guild::CiTanEnemyGuildItem* guild_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_IntoCiTanEnemyGuild_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_IntoCiTanEnemyGuild_CS) */ {
 public:
  MSG_Req_IntoCiTanEnemyGuild_CS();
  virtual ~MSG_Req_IntoCiTanEnemyGuild_CS();

  MSG_Req_IntoCiTanEnemyGuild_CS(const MSG_Req_IntoCiTanEnemyGuild_CS& from);
  MSG_Req_IntoCiTanEnemyGuild_CS(MSG_Req_IntoCiTanEnemyGuild_CS&& from) noexcept
    : MSG_Req_IntoCiTanEnemyGuild_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_IntoCiTanEnemyGuild_CS& operator=(const MSG_Req_IntoCiTanEnemyGuild_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_IntoCiTanEnemyGuild_CS& operator=(MSG_Req_IntoCiTanEnemyGuild_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_IntoCiTanEnemyGuild_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_IntoCiTanEnemyGuild_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_IntoCiTanEnemyGuild_CS*>(
               &_MSG_Req_IntoCiTanEnemyGuild_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(MSG_Req_IntoCiTanEnemyGuild_CS& a, MSG_Req_IntoCiTanEnemyGuild_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_IntoCiTanEnemyGuild_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_IntoCiTanEnemyGuild_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_IntoCiTanEnemyGuild_CS>(nullptr);
  }

  MSG_Req_IntoCiTanEnemyGuild_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_IntoCiTanEnemyGuild_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_IntoCiTanEnemyGuild_CS& from);
  void MergeFrom(const MSG_Req_IntoCiTanEnemyGuild_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_IntoCiTanEnemyGuild_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_IntoCiTanEnemyGuild_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_IntoCiTanEnemyGuild_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_CiTanBacktoMyGuild_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_CiTanBacktoMyGuild_CS) */ {
 public:
  MSG_Req_CiTanBacktoMyGuild_CS();
  virtual ~MSG_Req_CiTanBacktoMyGuild_CS();

  MSG_Req_CiTanBacktoMyGuild_CS(const MSG_Req_CiTanBacktoMyGuild_CS& from);
  MSG_Req_CiTanBacktoMyGuild_CS(MSG_Req_CiTanBacktoMyGuild_CS&& from) noexcept
    : MSG_Req_CiTanBacktoMyGuild_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_CiTanBacktoMyGuild_CS& operator=(const MSG_Req_CiTanBacktoMyGuild_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_CiTanBacktoMyGuild_CS& operator=(MSG_Req_CiTanBacktoMyGuild_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_CiTanBacktoMyGuild_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_CiTanBacktoMyGuild_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_CiTanBacktoMyGuild_CS*>(
               &_MSG_Req_CiTanBacktoMyGuild_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(MSG_Req_CiTanBacktoMyGuild_CS& a, MSG_Req_CiTanBacktoMyGuild_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_CiTanBacktoMyGuild_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_CiTanBacktoMyGuild_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_CiTanBacktoMyGuild_CS>(nullptr);
  }

  MSG_Req_CiTanBacktoMyGuild_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_CiTanBacktoMyGuild_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_CiTanBacktoMyGuild_CS& from);
  void MergeFrom(const MSG_Req_CiTanBacktoMyGuild_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_CiTanBacktoMyGuild_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_CiTanBacktoMyGuild_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_CiTanBacktoMyGuild_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class GuildPositionInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.GuildPositionInfo) */ {
 public:
  GuildPositionInfo();
  virtual ~GuildPositionInfo();

  GuildPositionInfo(const GuildPositionInfo& from);
  GuildPositionInfo(GuildPositionInfo&& from) noexcept
    : GuildPositionInfo() {
    *this = ::std::move(from);
  }

  inline GuildPositionInfo& operator=(const GuildPositionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildPositionInfo& operator=(GuildPositionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildPositionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildPositionInfo* internal_default_instance() {
    return reinterpret_cast<const GuildPositionInfo*>(
               &_GuildPositionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(GuildPositionInfo& a, GuildPositionInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildPositionInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildPositionInfo* New() const final {
    return CreateMaybeMessage<GuildPositionInfo>(nullptr);
  }

  GuildPositionInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildPositionInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildPositionInfo& from);
  void MergeFrom(const GuildPositionInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildPositionInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.GuildPositionInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kPositionidFieldNumber = 1,
    kOrderidFieldNumber = 3,
    kPrivilegeFieldNumber = 4,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint32 positionid = 1;
  bool has_positionid() const;
  private:
  bool _internal_has_positionid() const;
  public:
  void clear_positionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid() const;
  void set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionid() const;
  void _internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 orderid = 3;
  bool has_orderid() const;
  private:
  bool _internal_has_orderid() const;
  public:
  void clear_orderid();
  ::PROTOBUF_NAMESPACE_ID::uint32 orderid() const;
  void set_orderid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_orderid() const;
  void _internal_set_orderid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 privilege = 4;
  bool has_privilege() const;
  private:
  bool _internal_has_privilege() const;
  public:
  void clear_privilege();
  ::PROTOBUF_NAMESPACE_ID::uint32 privilege() const;
  void set_privilege(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_privilege() const;
  void _internal_set_privilege(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.GuildPositionInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 orderid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 privilege_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_AddGuildPosition_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_AddGuildPosition_CS) */ {
 public:
  MSG_Req_AddGuildPosition_CS();
  virtual ~MSG_Req_AddGuildPosition_CS();

  MSG_Req_AddGuildPosition_CS(const MSG_Req_AddGuildPosition_CS& from);
  MSG_Req_AddGuildPosition_CS(MSG_Req_AddGuildPosition_CS&& from) noexcept
    : MSG_Req_AddGuildPosition_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_AddGuildPosition_CS& operator=(const MSG_Req_AddGuildPosition_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_AddGuildPosition_CS& operator=(MSG_Req_AddGuildPosition_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_AddGuildPosition_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_AddGuildPosition_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_AddGuildPosition_CS*>(
               &_MSG_Req_AddGuildPosition_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(MSG_Req_AddGuildPosition_CS& a, MSG_Req_AddGuildPosition_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_AddGuildPosition_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_AddGuildPosition_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_AddGuildPosition_CS>(nullptr);
  }

  MSG_Req_AddGuildPosition_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_AddGuildPosition_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_AddGuildPosition_CS& from);
  void MergeFrom(const MSG_Req_AddGuildPosition_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_AddGuildPosition_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_AddGuildPosition_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosinfoFieldNumber = 1,
  };
  // optional .guild.GuildPositionInfo posinfo = 1;
  bool has_posinfo() const;
  private:
  bool _internal_has_posinfo() const;
  public:
  void clear_posinfo();
  const ::guild::GuildPositionInfo& posinfo() const;
  ::guild::GuildPositionInfo* release_posinfo();
  ::guild::GuildPositionInfo* mutable_posinfo();
  void set_allocated_posinfo(::guild::GuildPositionInfo* posinfo);
  private:
  const ::guild::GuildPositionInfo& _internal_posinfo() const;
  ::guild::GuildPositionInfo* _internal_mutable_posinfo();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_AddGuildPosition_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::guild::GuildPositionInfo* posinfo_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_DeleteGuildPosition_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_DeleteGuildPosition_CS) */ {
 public:
  MSG_Req_DeleteGuildPosition_CS();
  virtual ~MSG_Req_DeleteGuildPosition_CS();

  MSG_Req_DeleteGuildPosition_CS(const MSG_Req_DeleteGuildPosition_CS& from);
  MSG_Req_DeleteGuildPosition_CS(MSG_Req_DeleteGuildPosition_CS&& from) noexcept
    : MSG_Req_DeleteGuildPosition_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_DeleteGuildPosition_CS& operator=(const MSG_Req_DeleteGuildPosition_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_DeleteGuildPosition_CS& operator=(MSG_Req_DeleteGuildPosition_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_DeleteGuildPosition_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_DeleteGuildPosition_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_DeleteGuildPosition_CS*>(
               &_MSG_Req_DeleteGuildPosition_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(MSG_Req_DeleteGuildPosition_CS& a, MSG_Req_DeleteGuildPosition_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_DeleteGuildPosition_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_DeleteGuildPosition_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_DeleteGuildPosition_CS>(nullptr);
  }

  MSG_Req_DeleteGuildPosition_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_DeleteGuildPosition_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_DeleteGuildPosition_CS& from);
  void MergeFrom(const MSG_Req_DeleteGuildPosition_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_DeleteGuildPosition_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_DeleteGuildPosition_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionidFieldNumber = 1,
  };
  // optional uint32 positionid = 1;
  bool has_positionid() const;
  private:
  bool _internal_has_positionid() const;
  public:
  void clear_positionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid() const;
  void set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionid() const;
  void _internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_DeleteGuildPosition_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class SwapGuildPosInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.SwapGuildPosInfo) */ {
 public:
  SwapGuildPosInfo();
  virtual ~SwapGuildPosInfo();

  SwapGuildPosInfo(const SwapGuildPosInfo& from);
  SwapGuildPosInfo(SwapGuildPosInfo&& from) noexcept
    : SwapGuildPosInfo() {
    *this = ::std::move(from);
  }

  inline SwapGuildPosInfo& operator=(const SwapGuildPosInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwapGuildPosInfo& operator=(SwapGuildPosInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SwapGuildPosInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SwapGuildPosInfo* internal_default_instance() {
    return reinterpret_cast<const SwapGuildPosInfo*>(
               &_SwapGuildPosInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(SwapGuildPosInfo& a, SwapGuildPosInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SwapGuildPosInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SwapGuildPosInfo* New() const final {
    return CreateMaybeMessage<SwapGuildPosInfo>(nullptr);
  }

  SwapGuildPosInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SwapGuildPosInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SwapGuildPosInfo& from);
  void MergeFrom(const SwapGuildPosInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SwapGuildPosInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.SwapGuildPosInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosidfromFieldNumber = 1,
    kPosidtoFieldNumber = 2,
  };
  // optional uint32 posidfrom = 1;
  bool has_posidfrom() const;
  private:
  bool _internal_has_posidfrom() const;
  public:
  void clear_posidfrom();
  ::PROTOBUF_NAMESPACE_ID::uint32 posidfrom() const;
  void set_posidfrom(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_posidfrom() const;
  void _internal_set_posidfrom(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 posidto = 2;
  bool has_posidto() const;
  private:
  bool _internal_has_posidto() const;
  public:
  void clear_posidto();
  ::PROTOBUF_NAMESPACE_ID::uint32 posidto() const;
  void set_posidto(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_posidto() const;
  void _internal_set_posidto(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.SwapGuildPosInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 posidfrom_;
  ::PROTOBUF_NAMESPACE_ID::uint32 posidto_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_SwapGuildPosOrder_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_SwapGuildPosOrder_CS) */ {
 public:
  MSG_Req_SwapGuildPosOrder_CS();
  virtual ~MSG_Req_SwapGuildPosOrder_CS();

  MSG_Req_SwapGuildPosOrder_CS(const MSG_Req_SwapGuildPosOrder_CS& from);
  MSG_Req_SwapGuildPosOrder_CS(MSG_Req_SwapGuildPosOrder_CS&& from) noexcept
    : MSG_Req_SwapGuildPosOrder_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_SwapGuildPosOrder_CS& operator=(const MSG_Req_SwapGuildPosOrder_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_SwapGuildPosOrder_CS& operator=(MSG_Req_SwapGuildPosOrder_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_SwapGuildPosOrder_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_SwapGuildPosOrder_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_SwapGuildPosOrder_CS*>(
               &_MSG_Req_SwapGuildPosOrder_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(MSG_Req_SwapGuildPosOrder_CS& a, MSG_Req_SwapGuildPosOrder_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_SwapGuildPosOrder_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_SwapGuildPosOrder_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_SwapGuildPosOrder_CS>(nullptr);
  }

  MSG_Req_SwapGuildPosOrder_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_SwapGuildPosOrder_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_SwapGuildPosOrder_CS& from);
  void MergeFrom(const MSG_Req_SwapGuildPosOrder_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_SwapGuildPosOrder_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_SwapGuildPosOrder_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSwapinfoFieldNumber = 1,
  };
  // optional .guild.SwapGuildPosInfo swapinfo = 1;
  bool has_swapinfo() const;
  private:
  bool _internal_has_swapinfo() const;
  public:
  void clear_swapinfo();
  const ::guild::SwapGuildPosInfo& swapinfo() const;
  ::guild::SwapGuildPosInfo* release_swapinfo();
  ::guild::SwapGuildPosInfo* mutable_swapinfo();
  void set_allocated_swapinfo(::guild::SwapGuildPosInfo* swapinfo);
  private:
  const ::guild::SwapGuildPosInfo& _internal_swapinfo() const;
  ::guild::SwapGuildPosInfo* _internal_mutable_swapinfo();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_SwapGuildPosOrder_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::guild::SwapGuildPosInfo* swapinfo_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_ChangePositionName_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_ChangePositionName_CS) */ {
 public:
  MSG_Req_ChangePositionName_CS();
  virtual ~MSG_Req_ChangePositionName_CS();

  MSG_Req_ChangePositionName_CS(const MSG_Req_ChangePositionName_CS& from);
  MSG_Req_ChangePositionName_CS(MSG_Req_ChangePositionName_CS&& from) noexcept
    : MSG_Req_ChangePositionName_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_ChangePositionName_CS& operator=(const MSG_Req_ChangePositionName_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_ChangePositionName_CS& operator=(MSG_Req_ChangePositionName_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_ChangePositionName_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_ChangePositionName_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_ChangePositionName_CS*>(
               &_MSG_Req_ChangePositionName_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(MSG_Req_ChangePositionName_CS& a, MSG_Req_ChangePositionName_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_ChangePositionName_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_ChangePositionName_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_ChangePositionName_CS>(nullptr);
  }

  MSG_Req_ChangePositionName_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_ChangePositionName_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_ChangePositionName_CS& from);
  void MergeFrom(const MSG_Req_ChangePositionName_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_ChangePositionName_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_ChangePositionName_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kPositionidFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint32 positionid = 1;
  bool has_positionid() const;
  private:
  bool _internal_has_positionid() const;
  public:
  void clear_positionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid() const;
  void set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionid() const;
  void _internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_ChangePositionName_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_ChangePositionPri_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_ChangePositionPri_CS) */ {
 public:
  MSG_Req_ChangePositionPri_CS();
  virtual ~MSG_Req_ChangePositionPri_CS();

  MSG_Req_ChangePositionPri_CS(const MSG_Req_ChangePositionPri_CS& from);
  MSG_Req_ChangePositionPri_CS(MSG_Req_ChangePositionPri_CS&& from) noexcept
    : MSG_Req_ChangePositionPri_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_ChangePositionPri_CS& operator=(const MSG_Req_ChangePositionPri_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_ChangePositionPri_CS& operator=(MSG_Req_ChangePositionPri_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_ChangePositionPri_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_ChangePositionPri_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_ChangePositionPri_CS*>(
               &_MSG_Req_ChangePositionPri_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(MSG_Req_ChangePositionPri_CS& a, MSG_Req_ChangePositionPri_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_ChangePositionPri_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_ChangePositionPri_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_ChangePositionPri_CS>(nullptr);
  }

  MSG_Req_ChangePositionPri_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_ChangePositionPri_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_ChangePositionPri_CS& from);
  void MergeFrom(const MSG_Req_ChangePositionPri_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_ChangePositionPri_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_ChangePositionPri_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionidFieldNumber = 1,
    kPrivilegeFieldNumber = 2,
  };
  // optional uint32 positionid = 1;
  bool has_positionid() const;
  private:
  bool _internal_has_positionid() const;
  public:
  void clear_positionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid() const;
  void set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionid() const;
  void _internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 privilege = 2;
  bool has_privilege() const;
  private:
  bool _internal_has_privilege() const;
  public:
  void clear_privilege();
  ::PROTOBUF_NAMESPACE_ID::uint32 privilege() const;
  void set_privilege(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_privilege() const;
  void _internal_set_privilege(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_ChangePositionPri_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 privilege_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_AssignPosition_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_AssignPosition_CS) */ {
 public:
  MSG_Req_AssignPosition_CS();
  virtual ~MSG_Req_AssignPosition_CS();

  MSG_Req_AssignPosition_CS(const MSG_Req_AssignPosition_CS& from);
  MSG_Req_AssignPosition_CS(MSG_Req_AssignPosition_CS&& from) noexcept
    : MSG_Req_AssignPosition_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_AssignPosition_CS& operator=(const MSG_Req_AssignPosition_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_AssignPosition_CS& operator=(MSG_Req_AssignPosition_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_AssignPosition_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_AssignPosition_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_AssignPosition_CS*>(
               &_MSG_Req_AssignPosition_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(MSG_Req_AssignPosition_CS& a, MSG_Req_AssignPosition_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_AssignPosition_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_AssignPosition_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_AssignPosition_CS>(nullptr);
  }

  MSG_Req_AssignPosition_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_AssignPosition_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_AssignPosition_CS& from);
  void MergeFrom(const MSG_Req_AssignPosition_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_AssignPosition_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_AssignPosition_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemberidFieldNumber = 1,
    kPositionidFieldNumber = 2,
  };
  // optional uint64 memberid = 1;
  bool has_memberid() const;
  private:
  bool _internal_has_memberid() const;
  public:
  void clear_memberid();
  ::PROTOBUF_NAMESPACE_ID::uint64 memberid() const;
  void set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_memberid() const;
  void _internal_set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 positionid = 2;
  bool has_positionid() const;
  private:
  bool _internal_has_positionid() const;
  public:
  void clear_positionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid() const;
  void set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionid() const;
  void _internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_AssignPosition_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 memberid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_AssignPosition_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_AssignPosition_SC) */ {
 public:
  MSG_Ret_AssignPosition_SC();
  virtual ~MSG_Ret_AssignPosition_SC();

  MSG_Ret_AssignPosition_SC(const MSG_Ret_AssignPosition_SC& from);
  MSG_Ret_AssignPosition_SC(MSG_Ret_AssignPosition_SC&& from) noexcept
    : MSG_Ret_AssignPosition_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_AssignPosition_SC& operator=(const MSG_Ret_AssignPosition_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_AssignPosition_SC& operator=(MSG_Ret_AssignPosition_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_AssignPosition_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_AssignPosition_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_AssignPosition_SC*>(
               &_MSG_Ret_AssignPosition_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(MSG_Ret_AssignPosition_SC& a, MSG_Ret_AssignPosition_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_AssignPosition_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_AssignPosition_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_AssignPosition_SC>(nullptr);
  }

  MSG_Ret_AssignPosition_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_AssignPosition_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_AssignPosition_SC& from);
  void MergeFrom(const MSG_Ret_AssignPosition_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_AssignPosition_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_AssignPosition_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemberidFieldNumber = 1,
    kPositionidFieldNumber = 2,
  };
  // optional uint64 memberid = 1;
  bool has_memberid() const;
  private:
  bool _internal_has_memberid() const;
  public:
  void clear_memberid();
  ::PROTOBUF_NAMESPACE_ID::uint64 memberid() const;
  void set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_memberid() const;
  void _internal_set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 positionid = 2;
  bool has_positionid() const;
  private:
  bool _internal_has_positionid() const;
  public:
  void clear_positionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid() const;
  void set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionid() const;
  void _internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_AssignPosition_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 memberid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 positionid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_PositionInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_PositionInfo_SC) */ {
 public:
  MSG_Ret_PositionInfo_SC();
  virtual ~MSG_Ret_PositionInfo_SC();

  MSG_Ret_PositionInfo_SC(const MSG_Ret_PositionInfo_SC& from);
  MSG_Ret_PositionInfo_SC(MSG_Ret_PositionInfo_SC&& from) noexcept
    : MSG_Ret_PositionInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_PositionInfo_SC& operator=(const MSG_Ret_PositionInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_PositionInfo_SC& operator=(MSG_Ret_PositionInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_PositionInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_PositionInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_PositionInfo_SC*>(
               &_MSG_Ret_PositionInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(MSG_Ret_PositionInfo_SC& a, MSG_Ret_PositionInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_PositionInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_PositionInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_PositionInfo_SC>(nullptr);
  }

  MSG_Ret_PositionInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_PositionInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_PositionInfo_SC& from);
  void MergeFrom(const MSG_Ret_PositionInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_PositionInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_PositionInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosinfosFieldNumber = 1,
  };
  // repeated .guild.GuildPositionInfo posinfos = 1;
  int posinfos_size() const;
  private:
  int _internal_posinfos_size() const;
  public:
  void clear_posinfos();
  ::guild::GuildPositionInfo* mutable_posinfos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GuildPositionInfo >*
      mutable_posinfos();
  private:
  const ::guild::GuildPositionInfo& _internal_posinfos(int index) const;
  ::guild::GuildPositionInfo* _internal_add_posinfos();
  public:
  const ::guild::GuildPositionInfo& posinfos(int index) const;
  ::guild::GuildPositionInfo* add_posinfos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GuildPositionInfo >&
      posinfos() const;

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_PositionInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GuildPositionInfo > posinfos_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildLevelup_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildLevelup_CS) */ {
 public:
  MSG_Req_GuildLevelup_CS();
  virtual ~MSG_Req_GuildLevelup_CS();

  MSG_Req_GuildLevelup_CS(const MSG_Req_GuildLevelup_CS& from);
  MSG_Req_GuildLevelup_CS(MSG_Req_GuildLevelup_CS&& from) noexcept
    : MSG_Req_GuildLevelup_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildLevelup_CS& operator=(const MSG_Req_GuildLevelup_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildLevelup_CS& operator=(MSG_Req_GuildLevelup_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildLevelup_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildLevelup_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildLevelup_CS*>(
               &_MSG_Req_GuildLevelup_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(MSG_Req_GuildLevelup_CS& a, MSG_Req_GuildLevelup_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildLevelup_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildLevelup_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildLevelup_CS>(nullptr);
  }

  MSG_Req_GuildLevelup_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildLevelup_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildLevelup_CS& from);
  void MergeFrom(const MSG_Req_GuildLevelup_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildLevelup_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildLevelup_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildLevelup_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildLevelup_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildLevelup_SC) */ {
 public:
  MSG_Ret_GuildLevelup_SC();
  virtual ~MSG_Ret_GuildLevelup_SC();

  MSG_Ret_GuildLevelup_SC(const MSG_Ret_GuildLevelup_SC& from);
  MSG_Ret_GuildLevelup_SC(MSG_Ret_GuildLevelup_SC&& from) noexcept
    : MSG_Ret_GuildLevelup_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildLevelup_SC& operator=(const MSG_Ret_GuildLevelup_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildLevelup_SC& operator=(MSG_Ret_GuildLevelup_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildLevelup_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildLevelup_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildLevelup_SC*>(
               &_MSG_Ret_GuildLevelup_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(MSG_Ret_GuildLevelup_SC& a, MSG_Ret_GuildLevelup_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildLevelup_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildLevelup_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildLevelup_SC>(nullptr);
  }

  MSG_Ret_GuildLevelup_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildLevelup_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildLevelup_SC& from);
  void MergeFrom(const MSG_Ret_GuildLevelup_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildLevelup_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildLevelup_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildLevelup_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildSetInfo_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildSetInfo_CS) */ {
 public:
  MSG_Req_GuildSetInfo_CS();
  virtual ~MSG_Req_GuildSetInfo_CS();

  MSG_Req_GuildSetInfo_CS(const MSG_Req_GuildSetInfo_CS& from);
  MSG_Req_GuildSetInfo_CS(MSG_Req_GuildSetInfo_CS&& from) noexcept
    : MSG_Req_GuildSetInfo_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildSetInfo_CS& operator=(const MSG_Req_GuildSetInfo_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildSetInfo_CS& operator=(MSG_Req_GuildSetInfo_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildSetInfo_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildSetInfo_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildSetInfo_CS*>(
               &_MSG_Req_GuildSetInfo_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(MSG_Req_GuildSetInfo_CS& a, MSG_Req_GuildSetInfo_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildSetInfo_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildSetInfo_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildSetInfo_CS>(nullptr);
  }

  MSG_Req_GuildSetInfo_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildSetInfo_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildSetInfo_CS& from);
  void MergeFrom(const MSG_Req_GuildSetInfo_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildSetInfo_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildSetInfo_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildsetinfoFieldNumber = 1,
  };
  // optional string guildsetinfo = 1;
  bool has_guildsetinfo() const;
  private:
  bool _internal_has_guildsetinfo() const;
  public:
  void clear_guildsetinfo();
  const std::string& guildsetinfo() const;
  void set_guildsetinfo(const std::string& value);
  void set_guildsetinfo(std::string&& value);
  void set_guildsetinfo(const char* value);
  void set_guildsetinfo(const char* value, size_t size);
  std::string* mutable_guildsetinfo();
  std::string* release_guildsetinfo();
  void set_allocated_guildsetinfo(std::string* guildsetinfo);
  private:
  const std::string& _internal_guildsetinfo() const;
  void _internal_set_guildsetinfo(const std::string& value);
  std::string* _internal_mutable_guildsetinfo();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildSetInfo_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guildsetinfo_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildSetInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildSetInfo_SC) */ {
 public:
  MSG_Ret_GuildSetInfo_SC();
  virtual ~MSG_Ret_GuildSetInfo_SC();

  MSG_Ret_GuildSetInfo_SC(const MSG_Ret_GuildSetInfo_SC& from);
  MSG_Ret_GuildSetInfo_SC(MSG_Ret_GuildSetInfo_SC&& from) noexcept
    : MSG_Ret_GuildSetInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildSetInfo_SC& operator=(const MSG_Ret_GuildSetInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildSetInfo_SC& operator=(MSG_Ret_GuildSetInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildSetInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildSetInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildSetInfo_SC*>(
               &_MSG_Ret_GuildSetInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(MSG_Ret_GuildSetInfo_SC& a, MSG_Ret_GuildSetInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildSetInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildSetInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildSetInfo_SC>(nullptr);
  }

  MSG_Ret_GuildSetInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildSetInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildSetInfo_SC& from);
  void MergeFrom(const MSG_Ret_GuildSetInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildSetInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildSetInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildSetInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_CheckDayWelfare_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_CheckDayWelfare_SC) */ {
 public:
  MSG_Ret_CheckDayWelfare_SC();
  virtual ~MSG_Ret_CheckDayWelfare_SC();

  MSG_Ret_CheckDayWelfare_SC(const MSG_Ret_CheckDayWelfare_SC& from);
  MSG_Ret_CheckDayWelfare_SC(MSG_Ret_CheckDayWelfare_SC&& from) noexcept
    : MSG_Ret_CheckDayWelfare_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_CheckDayWelfare_SC& operator=(const MSG_Ret_CheckDayWelfare_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_CheckDayWelfare_SC& operator=(MSG_Ret_CheckDayWelfare_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_CheckDayWelfare_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_CheckDayWelfare_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_CheckDayWelfare_SC*>(
               &_MSG_Ret_CheckDayWelfare_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(MSG_Ret_CheckDayWelfare_SC& a, MSG_Ret_CheckDayWelfare_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_CheckDayWelfare_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_CheckDayWelfare_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_CheckDayWelfare_SC>(nullptr);
  }

  MSG_Ret_CheckDayWelfare_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_CheckDayWelfare_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_CheckDayWelfare_SC& from);
  void MergeFrom(const MSG_Ret_CheckDayWelfare_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_CheckDayWelfare_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_CheckDayWelfare_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCanreceiveFieldNumber = 1,
  };
  // optional bool canreceive = 1;
  bool has_canreceive() const;
  private:
  bool _internal_has_canreceive() const;
  public:
  void clear_canreceive();
  bool canreceive() const;
  void set_canreceive(bool value);
  private:
  bool _internal_canreceive() const;
  void _internal_set_canreceive(bool value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_CheckDayWelfare_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool canreceive_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GetDayWelfare_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GetDayWelfare_CS) */ {
 public:
  MSG_Req_GetDayWelfare_CS();
  virtual ~MSG_Req_GetDayWelfare_CS();

  MSG_Req_GetDayWelfare_CS(const MSG_Req_GetDayWelfare_CS& from);
  MSG_Req_GetDayWelfare_CS(MSG_Req_GetDayWelfare_CS&& from) noexcept
    : MSG_Req_GetDayWelfare_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GetDayWelfare_CS& operator=(const MSG_Req_GetDayWelfare_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GetDayWelfare_CS& operator=(MSG_Req_GetDayWelfare_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GetDayWelfare_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GetDayWelfare_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GetDayWelfare_CS*>(
               &_MSG_Req_GetDayWelfare_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(MSG_Req_GetDayWelfare_CS& a, MSG_Req_GetDayWelfare_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GetDayWelfare_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GetDayWelfare_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GetDayWelfare_CS>(nullptr);
  }

  MSG_Req_GetDayWelfare_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GetDayWelfare_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GetDayWelfare_CS& from);
  void MergeFrom(const MSG_Req_GetDayWelfare_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GetDayWelfare_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GetDayWelfare_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GetDayWelfare_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GetDayWelfare_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GetDayWelfare_SC) */ {
 public:
  MSG_Ret_GetDayWelfare_SC();
  virtual ~MSG_Ret_GetDayWelfare_SC();

  MSG_Ret_GetDayWelfare_SC(const MSG_Ret_GetDayWelfare_SC& from);
  MSG_Ret_GetDayWelfare_SC(MSG_Ret_GetDayWelfare_SC&& from) noexcept
    : MSG_Ret_GetDayWelfare_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GetDayWelfare_SC& operator=(const MSG_Ret_GetDayWelfare_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GetDayWelfare_SC& operator=(MSG_Ret_GetDayWelfare_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GetDayWelfare_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GetDayWelfare_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GetDayWelfare_SC*>(
               &_MSG_Ret_GetDayWelfare_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(MSG_Ret_GetDayWelfare_SC& a, MSG_Ret_GetDayWelfare_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GetDayWelfare_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GetDayWelfare_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GetDayWelfare_SC>(nullptr);
  }

  MSG_Ret_GetDayWelfare_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GetDayWelfare_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GetDayWelfare_SC& from);
  void MergeFrom(const MSG_Ret_GetDayWelfare_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GetDayWelfare_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GetDayWelfare_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GetDayWelfare_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildGoods_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildGoods_CS) */ {
 public:
  MSG_Req_GuildGoods_CS();
  virtual ~MSG_Req_GuildGoods_CS();

  MSG_Req_GuildGoods_CS(const MSG_Req_GuildGoods_CS& from);
  MSG_Req_GuildGoods_CS(MSG_Req_GuildGoods_CS&& from) noexcept
    : MSG_Req_GuildGoods_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildGoods_CS& operator=(const MSG_Req_GuildGoods_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildGoods_CS& operator=(MSG_Req_GuildGoods_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildGoods_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildGoods_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildGoods_CS*>(
               &_MSG_Req_GuildGoods_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(MSG_Req_GuildGoods_CS& a, MSG_Req_GuildGoods_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildGoods_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildGoods_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildGoods_CS>(nullptr);
  }

  MSG_Req_GuildGoods_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildGoods_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildGoods_CS& from);
  void MergeFrom(const MSG_Req_GuildGoods_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildGoods_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildGoods_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoodstypeFieldNumber = 1,
  };
  // optional uint32 goodstype = 1;
  bool has_goodstype() const;
  private:
  bool _internal_has_goodstype() const;
  public:
  void clear_goodstype();
  ::PROTOBUF_NAMESPACE_ID::uint32 goodstype() const;
  void set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_goodstype() const;
  void _internal_set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildGoods_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 goodstype_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class GoodsInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.GoodsInfo) */ {
 public:
  GoodsInfo();
  virtual ~GoodsInfo();

  GoodsInfo(const GoodsInfo& from);
  GoodsInfo(GoodsInfo&& from) noexcept
    : GoodsInfo() {
    *this = ::std::move(from);
  }

  inline GoodsInfo& operator=(const GoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoodsInfo& operator=(GoodsInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GoodsInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoodsInfo* internal_default_instance() {
    return reinterpret_cast<const GoodsInfo*>(
               &_GoodsInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(GoodsInfo& a, GoodsInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GoodsInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GoodsInfo* New() const final {
    return CreateMaybeMessage<GoodsInfo>(nullptr);
  }

  GoodsInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GoodsInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GoodsInfo& from);
  void MergeFrom(const GoodsInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoodsInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.GoodsInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagidFieldNumber = 1,
    kItemidFieldNumber = 2,
    kSubmitnumFieldNumber = 3,
    kAwardFieldNumber = 4,
  };
  // optional uint32 tagid = 1;
  bool has_tagid() const;
  private:
  bool _internal_has_tagid() const;
  public:
  void clear_tagid();
  ::PROTOBUF_NAMESPACE_ID::uint32 tagid() const;
  void set_tagid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tagid() const;
  void _internal_set_tagid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 itemid = 2;
  bool has_itemid() const;
  private:
  bool _internal_has_itemid() const;
  public:
  void clear_itemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 itemid() const;
  void set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_itemid() const;
  void _internal_set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 submitnum = 3;
  bool has_submitnum() const;
  private:
  bool _internal_has_submitnum() const;
  public:
  void clear_submitnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 submitnum() const;
  void set_submitnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_submitnum() const;
  void _internal_set_submitnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 award = 4;
  bool has_award() const;
  private:
  bool _internal_has_award() const;
  public:
  void clear_award();
  ::PROTOBUF_NAMESPACE_ID::uint32 award() const;
  void set_award(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_award() const;
  void _internal_set_award(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.GoodsInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tagid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 itemid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 submitnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 award_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildGoods_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildGoods_SC) */ {
 public:
  MSG_Ret_GuildGoods_SC();
  virtual ~MSG_Ret_GuildGoods_SC();

  MSG_Ret_GuildGoods_SC(const MSG_Ret_GuildGoods_SC& from);
  MSG_Ret_GuildGoods_SC(MSG_Ret_GuildGoods_SC&& from) noexcept
    : MSG_Ret_GuildGoods_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildGoods_SC& operator=(const MSG_Ret_GuildGoods_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildGoods_SC& operator=(MSG_Ret_GuildGoods_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildGoods_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildGoods_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildGoods_SC*>(
               &_MSG_Ret_GuildGoods_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(MSG_Ret_GuildGoods_SC& a, MSG_Ret_GuildGoods_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildGoods_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildGoods_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildGoods_SC>(nullptr);
  }

  MSG_Ret_GuildGoods_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildGoods_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildGoods_SC& from);
  void MergeFrom(const MSG_Ret_GuildGoods_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildGoods_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildGoods_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kMultirewardFieldNumber = 2,
    kRemainFieldNumber = 3,
    kNexttimeFieldNumber = 4,
    kGoodstypeFieldNumber = 5,
  };
  // repeated .guild.GoodsInfo items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::guild::GoodsInfo* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GoodsInfo >*
      mutable_items();
  private:
  const ::guild::GoodsInfo& _internal_items(int index) const;
  ::guild::GoodsInfo* _internal_add_items();
  public:
  const ::guild::GoodsInfo& items(int index) const;
  ::guild::GoodsInfo* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GoodsInfo >&
      items() const;

  // optional uint32 multireward = 2;
  bool has_multireward() const;
  private:
  bool _internal_has_multireward() const;
  public:
  void clear_multireward();
  ::PROTOBUF_NAMESPACE_ID::uint32 multireward() const;
  void set_multireward(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_multireward() const;
  void _internal_set_multireward(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 remain = 3;
  bool has_remain() const;
  private:
  bool _internal_has_remain() const;
  public:
  void clear_remain();
  ::PROTOBUF_NAMESPACE_ID::uint32 remain() const;
  void set_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remain() const;
  void _internal_set_remain(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 nexttime = 4;
  bool has_nexttime() const;
  private:
  bool _internal_has_nexttime() const;
  public:
  void clear_nexttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 nexttime() const;
  void set_nexttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nexttime() const;
  void _internal_set_nexttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 goodstype = 5;
  bool has_goodstype() const;
  private:
  bool _internal_has_goodstype() const;
  public:
  void clear_goodstype();
  ::PROTOBUF_NAMESPACE_ID::uint32 goodstype() const;
  void set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_goodstype() const;
  void _internal_set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildGoods_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GoodsInfo > items_;
  ::PROTOBUF_NAMESPACE_ID::uint32 multireward_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remain_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nexttime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 goodstype_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_SubmitGuildGoods_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_SubmitGuildGoods_CS) */ {
 public:
  MSG_Req_SubmitGuildGoods_CS();
  virtual ~MSG_Req_SubmitGuildGoods_CS();

  MSG_Req_SubmitGuildGoods_CS(const MSG_Req_SubmitGuildGoods_CS& from);
  MSG_Req_SubmitGuildGoods_CS(MSG_Req_SubmitGuildGoods_CS&& from) noexcept
    : MSG_Req_SubmitGuildGoods_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_SubmitGuildGoods_CS& operator=(const MSG_Req_SubmitGuildGoods_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_SubmitGuildGoods_CS& operator=(MSG_Req_SubmitGuildGoods_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_SubmitGuildGoods_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_SubmitGuildGoods_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_SubmitGuildGoods_CS*>(
               &_MSG_Req_SubmitGuildGoods_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(MSG_Req_SubmitGuildGoods_CS& a, MSG_Req_SubmitGuildGoods_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_SubmitGuildGoods_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_SubmitGuildGoods_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_SubmitGuildGoods_CS>(nullptr);
  }

  MSG_Req_SubmitGuildGoods_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_SubmitGuildGoods_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_SubmitGuildGoods_CS& from);
  void MergeFrom(const MSG_Req_SubmitGuildGoods_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_SubmitGuildGoods_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_SubmitGuildGoods_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagidFieldNumber = 1,
    kGoodstypeFieldNumber = 2,
  };
  // optional uint32 tagid = 1;
  bool has_tagid() const;
  private:
  bool _internal_has_tagid() const;
  public:
  void clear_tagid();
  ::PROTOBUF_NAMESPACE_ID::uint32 tagid() const;
  void set_tagid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tagid() const;
  void _internal_set_tagid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 goodstype = 2;
  bool has_goodstype() const;
  private:
  bool _internal_has_goodstype() const;
  public:
  void clear_goodstype();
  ::PROTOBUF_NAMESPACE_ID::uint32 goodstype() const;
  void set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_goodstype() const;
  void _internal_set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_SubmitGuildGoods_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tagid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 goodstype_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_SubmitGuildGoods_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_SubmitGuildGoods_SC) */ {
 public:
  MSG_Ret_SubmitGuildGoods_SC();
  virtual ~MSG_Ret_SubmitGuildGoods_SC();

  MSG_Ret_SubmitGuildGoods_SC(const MSG_Ret_SubmitGuildGoods_SC& from);
  MSG_Ret_SubmitGuildGoods_SC(MSG_Ret_SubmitGuildGoods_SC&& from) noexcept
    : MSG_Ret_SubmitGuildGoods_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_SubmitGuildGoods_SC& operator=(const MSG_Ret_SubmitGuildGoods_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_SubmitGuildGoods_SC& operator=(MSG_Ret_SubmitGuildGoods_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_SubmitGuildGoods_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_SubmitGuildGoods_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_SubmitGuildGoods_SC*>(
               &_MSG_Ret_SubmitGuildGoods_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(MSG_Ret_SubmitGuildGoods_SC& a, MSG_Ret_SubmitGuildGoods_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_SubmitGuildGoods_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_SubmitGuildGoods_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_SubmitGuildGoods_SC>(nullptr);
  }

  MSG_Ret_SubmitGuildGoods_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_SubmitGuildGoods_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_SubmitGuildGoods_SC& from);
  void MergeFrom(const MSG_Ret_SubmitGuildGoods_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_SubmitGuildGoods_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_SubmitGuildGoods_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
    kGoodstypeFieldNumber = 2,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 goodstype = 2;
  bool has_goodstype() const;
  private:
  bool _internal_has_goodstype() const;
  public:
  void clear_goodstype();
  ::PROTOBUF_NAMESPACE_ID::uint32 goodstype() const;
  void set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_goodstype() const;
  void _internal_set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_SubmitGuildGoods_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 goodstype_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_QuitGuild_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_QuitGuild_CS) */ {
 public:
  MSG_Req_QuitGuild_CS();
  virtual ~MSG_Req_QuitGuild_CS();

  MSG_Req_QuitGuild_CS(const MSG_Req_QuitGuild_CS& from);
  MSG_Req_QuitGuild_CS(MSG_Req_QuitGuild_CS&& from) noexcept
    : MSG_Req_QuitGuild_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_QuitGuild_CS& operator=(const MSG_Req_QuitGuild_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_QuitGuild_CS& operator=(MSG_Req_QuitGuild_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_QuitGuild_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_QuitGuild_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_QuitGuild_CS*>(
               &_MSG_Req_QuitGuild_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(MSG_Req_QuitGuild_CS& a, MSG_Req_QuitGuild_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_QuitGuild_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_QuitGuild_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_QuitGuild_CS>(nullptr);
  }

  MSG_Req_QuitGuild_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_QuitGuild_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_QuitGuild_CS& from);
  void MergeFrom(const MSG_Req_QuitGuild_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_QuitGuild_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_QuitGuild_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_QuitGuild_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_QuitGuild_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_QuitGuild_SC) */ {
 public:
  MSG_Ret_QuitGuild_SC();
  virtual ~MSG_Ret_QuitGuild_SC();

  MSG_Ret_QuitGuild_SC(const MSG_Ret_QuitGuild_SC& from);
  MSG_Ret_QuitGuild_SC(MSG_Ret_QuitGuild_SC&& from) noexcept
    : MSG_Ret_QuitGuild_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_QuitGuild_SC& operator=(const MSG_Ret_QuitGuild_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_QuitGuild_SC& operator=(MSG_Ret_QuitGuild_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_QuitGuild_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_QuitGuild_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_QuitGuild_SC*>(
               &_MSG_Ret_QuitGuild_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(MSG_Ret_QuitGuild_SC& a, MSG_Ret_QuitGuild_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_QuitGuild_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_QuitGuild_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_QuitGuild_SC>(nullptr);
  }

  MSG_Ret_QuitGuild_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_QuitGuild_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_QuitGuild_SC& from);
  void MergeFrom(const MSG_Ret_QuitGuild_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_QuitGuild_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_QuitGuild_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_QuitGuild_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_FireGuildMember_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_FireGuildMember_CS) */ {
 public:
  MSG_Req_FireGuildMember_CS();
  virtual ~MSG_Req_FireGuildMember_CS();

  MSG_Req_FireGuildMember_CS(const MSG_Req_FireGuildMember_CS& from);
  MSG_Req_FireGuildMember_CS(MSG_Req_FireGuildMember_CS&& from) noexcept
    : MSG_Req_FireGuildMember_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_FireGuildMember_CS& operator=(const MSG_Req_FireGuildMember_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_FireGuildMember_CS& operator=(MSG_Req_FireGuildMember_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_FireGuildMember_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_FireGuildMember_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_FireGuildMember_CS*>(
               &_MSG_Req_FireGuildMember_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(MSG_Req_FireGuildMember_CS& a, MSG_Req_FireGuildMember_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_FireGuildMember_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_FireGuildMember_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_FireGuildMember_CS>(nullptr);
  }

  MSG_Req_FireGuildMember_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_FireGuildMember_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_FireGuildMember_CS& from);
  void MergeFrom(const MSG_Req_FireGuildMember_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_FireGuildMember_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_FireGuildMember_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeavememberidFieldNumber = 1,
  };
  // optional string leavememberid = 1;
  bool has_leavememberid() const;
  private:
  bool _internal_has_leavememberid() const;
  public:
  void clear_leavememberid();
  const std::string& leavememberid() const;
  void set_leavememberid(const std::string& value);
  void set_leavememberid(std::string&& value);
  void set_leavememberid(const char* value);
  void set_leavememberid(const char* value, size_t size);
  std::string* mutable_leavememberid();
  std::string* release_leavememberid();
  void set_allocated_leavememberid(std::string* leavememberid);
  private:
  const std::string& _internal_leavememberid() const;
  void _internal_set_leavememberid(const std::string& value);
  std::string* _internal_mutable_leavememberid();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_FireGuildMember_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr leavememberid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_FireGuildMember_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_FireGuildMember_SC) */ {
 public:
  MSG_Ret_FireGuildMember_SC();
  virtual ~MSG_Ret_FireGuildMember_SC();

  MSG_Ret_FireGuildMember_SC(const MSG_Ret_FireGuildMember_SC& from);
  MSG_Ret_FireGuildMember_SC(MSG_Ret_FireGuildMember_SC&& from) noexcept
    : MSG_Ret_FireGuildMember_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_FireGuildMember_SC& operator=(const MSG_Ret_FireGuildMember_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_FireGuildMember_SC& operator=(MSG_Ret_FireGuildMember_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_FireGuildMember_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_FireGuildMember_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_FireGuildMember_SC*>(
               &_MSG_Ret_FireGuildMember_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(MSG_Ret_FireGuildMember_SC& a, MSG_Ret_FireGuildMember_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_FireGuildMember_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_FireGuildMember_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_FireGuildMember_SC>(nullptr);
  }

  MSG_Ret_FireGuildMember_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_FireGuildMember_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_FireGuildMember_SC& from);
  void MergeFrom(const MSG_Ret_FireGuildMember_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_FireGuildMember_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_FireGuildMember_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeavememberidFieldNumber = 2,
    kRetcodeFieldNumber = 1,
  };
  // optional string leavememberid = 2;
  bool has_leavememberid() const;
  private:
  bool _internal_has_leavememberid() const;
  public:
  void clear_leavememberid();
  const std::string& leavememberid() const;
  void set_leavememberid(const std::string& value);
  void set_leavememberid(std::string&& value);
  void set_leavememberid(const char* value);
  void set_leavememberid(const char* value, size_t size);
  std::string* mutable_leavememberid();
  std::string* release_leavememberid();
  void set_allocated_leavememberid(std::string* leavememberid);
  private:
  const std::string& _internal_leavememberid() const;
  void _internal_set_leavememberid(const std::string& value);
  std::string* _internal_mutable_leavememberid();
  public:

  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_FireGuildMember_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr leavememberid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_BeFiredGuildMember_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_BeFiredGuildMember_SC) */ {
 public:
  MSG_Ret_BeFiredGuildMember_SC();
  virtual ~MSG_Ret_BeFiredGuildMember_SC();

  MSG_Ret_BeFiredGuildMember_SC(const MSG_Ret_BeFiredGuildMember_SC& from);
  MSG_Ret_BeFiredGuildMember_SC(MSG_Ret_BeFiredGuildMember_SC&& from) noexcept
    : MSG_Ret_BeFiredGuildMember_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_BeFiredGuildMember_SC& operator=(const MSG_Ret_BeFiredGuildMember_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_BeFiredGuildMember_SC& operator=(MSG_Ret_BeFiredGuildMember_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_BeFiredGuildMember_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_BeFiredGuildMember_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_BeFiredGuildMember_SC*>(
               &_MSG_Ret_BeFiredGuildMember_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(MSG_Ret_BeFiredGuildMember_SC& a, MSG_Ret_BeFiredGuildMember_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_BeFiredGuildMember_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_BeFiredGuildMember_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_BeFiredGuildMember_SC>(nullptr);
  }

  MSG_Ret_BeFiredGuildMember_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_BeFiredGuildMember_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_BeFiredGuildMember_SC& from);
  void MergeFrom(const MSG_Ret_BeFiredGuildMember_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_BeFiredGuildMember_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_BeFiredGuildMember_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_BeFiredGuildMember_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildInvite_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildInvite_CS) */ {
 public:
  MSG_Req_GuildInvite_CS();
  virtual ~MSG_Req_GuildInvite_CS();

  MSG_Req_GuildInvite_CS(const MSG_Req_GuildInvite_CS& from);
  MSG_Req_GuildInvite_CS(MSG_Req_GuildInvite_CS&& from) noexcept
    : MSG_Req_GuildInvite_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildInvite_CS& operator=(const MSG_Req_GuildInvite_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildInvite_CS& operator=(MSG_Req_GuildInvite_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildInvite_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildInvite_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildInvite_CS*>(
               &_MSG_Req_GuildInvite_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(MSG_Req_GuildInvite_CS& a, MSG_Req_GuildInvite_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildInvite_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildInvite_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildInvite_CS>(nullptr);
  }

  MSG_Req_GuildInvite_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildInvite_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildInvite_CS& from);
  void MergeFrom(const MSG_Req_GuildInvite_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildInvite_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildInvite_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJoinmemberidFieldNumber = 1,
  };
  // optional string joinmemberid = 1;
  bool has_joinmemberid() const;
  private:
  bool _internal_has_joinmemberid() const;
  public:
  void clear_joinmemberid();
  const std::string& joinmemberid() const;
  void set_joinmemberid(const std::string& value);
  void set_joinmemberid(std::string&& value);
  void set_joinmemberid(const char* value);
  void set_joinmemberid(const char* value, size_t size);
  std::string* mutable_joinmemberid();
  std::string* release_joinmemberid();
  void set_allocated_joinmemberid(std::string* joinmemberid);
  private:
  const std::string& _internal_joinmemberid() const;
  void _internal_set_joinmemberid(const std::string& value);
  std::string* _internal_mutable_joinmemberid();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildInvite_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr joinmemberid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildInvite_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildInvite_SC) */ {
 public:
  MSG_Ret_GuildInvite_SC();
  virtual ~MSG_Ret_GuildInvite_SC();

  MSG_Ret_GuildInvite_SC(const MSG_Ret_GuildInvite_SC& from);
  MSG_Ret_GuildInvite_SC(MSG_Ret_GuildInvite_SC&& from) noexcept
    : MSG_Ret_GuildInvite_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildInvite_SC& operator=(const MSG_Ret_GuildInvite_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildInvite_SC& operator=(MSG_Ret_GuildInvite_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildInvite_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildInvite_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildInvite_SC*>(
               &_MSG_Ret_GuildInvite_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(MSG_Ret_GuildInvite_SC& a, MSG_Ret_GuildInvite_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildInvite_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildInvite_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildInvite_SC>(nullptr);
  }

  MSG_Ret_GuildInvite_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildInvite_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildInvite_SC& from);
  void MergeFrom(const MSG_Ret_GuildInvite_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildInvite_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildInvite_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 2,
    kNameFieldNumber = 3,
    kGuildnameFieldNumber = 4,
    kRetcodeFieldNumber = 1,
  };
  // optional string id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // optional string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string guildname = 4;
  bool has_guildname() const;
  private:
  bool _internal_has_guildname() const;
  public:
  void clear_guildname();
  const std::string& guildname() const;
  void set_guildname(const std::string& value);
  void set_guildname(std::string&& value);
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  std::string* mutable_guildname();
  std::string* release_guildname();
  void set_allocated_guildname(std::string* guildname);
  private:
  const std::string& _internal_guildname() const;
  void _internal_set_guildname(const std::string& value);
  std::string* _internal_mutable_guildname();
  public:

  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildInvite_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guildname_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildInviteConfirm_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildInviteConfirm_CS) */ {
 public:
  MSG_Req_GuildInviteConfirm_CS();
  virtual ~MSG_Req_GuildInviteConfirm_CS();

  MSG_Req_GuildInviteConfirm_CS(const MSG_Req_GuildInviteConfirm_CS& from);
  MSG_Req_GuildInviteConfirm_CS(MSG_Req_GuildInviteConfirm_CS&& from) noexcept
    : MSG_Req_GuildInviteConfirm_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildInviteConfirm_CS& operator=(const MSG_Req_GuildInviteConfirm_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildInviteConfirm_CS& operator=(MSG_Req_GuildInviteConfirm_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildInviteConfirm_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildInviteConfirm_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildInviteConfirm_CS*>(
               &_MSG_Req_GuildInviteConfirm_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(MSG_Req_GuildInviteConfirm_CS& a, MSG_Req_GuildInviteConfirm_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildInviteConfirm_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildInviteConfirm_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildInviteConfirm_CS>(nullptr);
  }

  MSG_Req_GuildInviteConfirm_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildInviteConfirm_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildInviteConfirm_CS& from);
  void MergeFrom(const MSG_Req_GuildInviteConfirm_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildInviteConfirm_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildInviteConfirm_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteridFieldNumber = 1,
  };
  // optional string inviterid = 1;
  bool has_inviterid() const;
  private:
  bool _internal_has_inviterid() const;
  public:
  void clear_inviterid();
  const std::string& inviterid() const;
  void set_inviterid(const std::string& value);
  void set_inviterid(std::string&& value);
  void set_inviterid(const char* value);
  void set_inviterid(const char* value, size_t size);
  std::string* mutable_inviterid();
  std::string* release_inviterid();
  void set_allocated_inviterid(std::string* inviterid);
  private:
  const std::string& _internal_inviterid() const;
  void _internal_set_inviterid(const std::string& value);
  std::string* _internal_mutable_inviterid();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildInviteConfirm_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inviterid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildInviteConfirm_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildInviteConfirm_SC) */ {
 public:
  MSG_Ret_GuildInviteConfirm_SC();
  virtual ~MSG_Ret_GuildInviteConfirm_SC();

  MSG_Ret_GuildInviteConfirm_SC(const MSG_Ret_GuildInviteConfirm_SC& from);
  MSG_Ret_GuildInviteConfirm_SC(MSG_Ret_GuildInviteConfirm_SC&& from) noexcept
    : MSG_Ret_GuildInviteConfirm_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildInviteConfirm_SC& operator=(const MSG_Ret_GuildInviteConfirm_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildInviteConfirm_SC& operator=(MSG_Ret_GuildInviteConfirm_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildInviteConfirm_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildInviteConfirm_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildInviteConfirm_SC*>(
               &_MSG_Ret_GuildInviteConfirm_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(MSG_Ret_GuildInviteConfirm_SC& a, MSG_Ret_GuildInviteConfirm_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildInviteConfirm_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildInviteConfirm_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildInviteConfirm_SC>(nullptr);
  }

  MSG_Ret_GuildInviteConfirm_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildInviteConfirm_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildInviteConfirm_SC& from);
  void MergeFrom(const MSG_Ret_GuildInviteConfirm_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildInviteConfirm_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildInviteConfirm_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildInviteConfirm_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_DismissGuild_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_DismissGuild_CS) */ {
 public:
  MSG_Req_DismissGuild_CS();
  virtual ~MSG_Req_DismissGuild_CS();

  MSG_Req_DismissGuild_CS(const MSG_Req_DismissGuild_CS& from);
  MSG_Req_DismissGuild_CS(MSG_Req_DismissGuild_CS&& from) noexcept
    : MSG_Req_DismissGuild_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_DismissGuild_CS& operator=(const MSG_Req_DismissGuild_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_DismissGuild_CS& operator=(MSG_Req_DismissGuild_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_DismissGuild_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_DismissGuild_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_DismissGuild_CS*>(
               &_MSG_Req_DismissGuild_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(MSG_Req_DismissGuild_CS& a, MSG_Req_DismissGuild_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_DismissGuild_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_DismissGuild_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_DismissGuild_CS>(nullptr);
  }

  MSG_Req_DismissGuild_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_DismissGuild_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_DismissGuild_CS& from);
  void MergeFrom(const MSG_Req_DismissGuild_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_DismissGuild_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_DismissGuild_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_DismissGuild_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_DismissGuild_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_DismissGuild_SC) */ {
 public:
  MSG_Ret_DismissGuild_SC();
  virtual ~MSG_Ret_DismissGuild_SC();

  MSG_Ret_DismissGuild_SC(const MSG_Ret_DismissGuild_SC& from);
  MSG_Ret_DismissGuild_SC(MSG_Ret_DismissGuild_SC&& from) noexcept
    : MSG_Ret_DismissGuild_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_DismissGuild_SC& operator=(const MSG_Ret_DismissGuild_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_DismissGuild_SC& operator=(MSG_Ret_DismissGuild_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_DismissGuild_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_DismissGuild_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_DismissGuild_SC*>(
               &_MSG_Ret_DismissGuild_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(MSG_Ret_DismissGuild_SC& a, MSG_Ret_DismissGuild_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_DismissGuild_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_DismissGuild_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_DismissGuild_SC>(nullptr);
  }

  MSG_Ret_DismissGuild_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_DismissGuild_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_DismissGuild_SC& from);
  void MergeFrom(const MSG_Ret_DismissGuild_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_DismissGuild_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_DismissGuild_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_DismissGuild_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_ChangeGuildMaster_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_ChangeGuildMaster_CS) */ {
 public:
  MSG_Req_ChangeGuildMaster_CS();
  virtual ~MSG_Req_ChangeGuildMaster_CS();

  MSG_Req_ChangeGuildMaster_CS(const MSG_Req_ChangeGuildMaster_CS& from);
  MSG_Req_ChangeGuildMaster_CS(MSG_Req_ChangeGuildMaster_CS&& from) noexcept
    : MSG_Req_ChangeGuildMaster_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_ChangeGuildMaster_CS& operator=(const MSG_Req_ChangeGuildMaster_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_ChangeGuildMaster_CS& operator=(MSG_Req_ChangeGuildMaster_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_ChangeGuildMaster_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_ChangeGuildMaster_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_ChangeGuildMaster_CS*>(
               &_MSG_Req_ChangeGuildMaster_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(MSG_Req_ChangeGuildMaster_CS& a, MSG_Req_ChangeGuildMaster_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_ChangeGuildMaster_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_ChangeGuildMaster_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_ChangeGuildMaster_CS>(nullptr);
  }

  MSG_Req_ChangeGuildMaster_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_ChangeGuildMaster_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_ChangeGuildMaster_CS& from);
  void MergeFrom(const MSG_Req_ChangeGuildMaster_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_ChangeGuildMaster_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_ChangeGuildMaster_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewmasteridFieldNumber = 1,
  };
  // optional string newmasterid = 1;
  bool has_newmasterid() const;
  private:
  bool _internal_has_newmasterid() const;
  public:
  void clear_newmasterid();
  const std::string& newmasterid() const;
  void set_newmasterid(const std::string& value);
  void set_newmasterid(std::string&& value);
  void set_newmasterid(const char* value);
  void set_newmasterid(const char* value, size_t size);
  std::string* mutable_newmasterid();
  std::string* release_newmasterid();
  void set_allocated_newmasterid(std::string* newmasterid);
  private:
  const std::string& _internal_newmasterid() const;
  void _internal_set_newmasterid(const std::string& value);
  std::string* _internal_mutable_newmasterid();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_ChangeGuildMaster_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr newmasterid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_ChangeGuildMaster_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_ChangeGuildMaster_SC) */ {
 public:
  MSG_Ret_ChangeGuildMaster_SC();
  virtual ~MSG_Ret_ChangeGuildMaster_SC();

  MSG_Ret_ChangeGuildMaster_SC(const MSG_Ret_ChangeGuildMaster_SC& from);
  MSG_Ret_ChangeGuildMaster_SC(MSG_Ret_ChangeGuildMaster_SC&& from) noexcept
    : MSG_Ret_ChangeGuildMaster_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_ChangeGuildMaster_SC& operator=(const MSG_Ret_ChangeGuildMaster_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_ChangeGuildMaster_SC& operator=(MSG_Ret_ChangeGuildMaster_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_ChangeGuildMaster_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_ChangeGuildMaster_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_ChangeGuildMaster_SC*>(
               &_MSG_Ret_ChangeGuildMaster_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(MSG_Ret_ChangeGuildMaster_SC& a, MSG_Ret_ChangeGuildMaster_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_ChangeGuildMaster_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_ChangeGuildMaster_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_ChangeGuildMaster_SC>(nullptr);
  }

  MSG_Ret_ChangeGuildMaster_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_ChangeGuildMaster_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_ChangeGuildMaster_SC& from);
  void MergeFrom(const MSG_Ret_ChangeGuildMaster_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_ChangeGuildMaster_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_ChangeGuildMaster_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_ChangeGuildMaster_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class ViceMaster :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.ViceMaster) */ {
 public:
  ViceMaster();
  virtual ~ViceMaster();

  ViceMaster(const ViceMaster& from);
  ViceMaster(ViceMaster&& from) noexcept
    : ViceMaster() {
    *this = ::std::move(from);
  }

  inline ViceMaster& operator=(const ViceMaster& from) {
    CopyFrom(from);
    return *this;
  }
  inline ViceMaster& operator=(ViceMaster&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ViceMaster& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ViceMaster* internal_default_instance() {
    return reinterpret_cast<const ViceMaster*>(
               &_ViceMaster_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(ViceMaster& a, ViceMaster& b) {
    a.Swap(&b);
  }
  inline void Swap(ViceMaster* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ViceMaster* New() const final {
    return CreateMaybeMessage<ViceMaster>(nullptr);
  }

  ViceMaster* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ViceMaster>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ViceMaster& from);
  void MergeFrom(const ViceMaster& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ViceMaster* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.ViceMaster";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 4,
    kHeadiconFieldNumber = 5,
    kLevelFieldNumber = 2,
    kFightvalueFieldNumber = 3,
  };
  // optional string id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // optional string name = 4;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string headicon = 5;
  bool has_headicon() const;
  private:
  bool _internal_has_headicon() const;
  public:
  void clear_headicon();
  const std::string& headicon() const;
  void set_headicon(const std::string& value);
  void set_headicon(std::string&& value);
  void set_headicon(const char* value);
  void set_headicon(const char* value, size_t size);
  std::string* mutable_headicon();
  std::string* release_headicon();
  void set_allocated_headicon(std::string* headicon);
  private:
  const std::string& _internal_headicon() const;
  void _internal_set_headicon(const std::string& value);
  std::string* _internal_mutable_headicon();
  public:

  // optional uint32 level = 2;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 fightvalue = 3;
  bool has_fightvalue() const;
  private:
  bool _internal_has_fightvalue() const;
  public:
  void clear_fightvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 fightvalue() const;
  void set_fightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fightvalue() const;
  void _internal_set_fightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.ViceMaster)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr headicon_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fightvalue_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildViceMaster_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildViceMaster_CS) */ {
 public:
  MSG_Req_GuildViceMaster_CS();
  virtual ~MSG_Req_GuildViceMaster_CS();

  MSG_Req_GuildViceMaster_CS(const MSG_Req_GuildViceMaster_CS& from);
  MSG_Req_GuildViceMaster_CS(MSG_Req_GuildViceMaster_CS&& from) noexcept
    : MSG_Req_GuildViceMaster_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildViceMaster_CS& operator=(const MSG_Req_GuildViceMaster_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildViceMaster_CS& operator=(MSG_Req_GuildViceMaster_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildViceMaster_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildViceMaster_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildViceMaster_CS*>(
               &_MSG_Req_GuildViceMaster_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(MSG_Req_GuildViceMaster_CS& a, MSG_Req_GuildViceMaster_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildViceMaster_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildViceMaster_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildViceMaster_CS>(nullptr);
  }

  MSG_Req_GuildViceMaster_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildViceMaster_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildViceMaster_CS& from);
  void MergeFrom(const MSG_Req_GuildViceMaster_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildViceMaster_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildViceMaster_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildViceMaster_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildViceMaster_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildViceMaster_SC) */ {
 public:
  MSG_Ret_GuildViceMaster_SC();
  virtual ~MSG_Ret_GuildViceMaster_SC();

  MSG_Ret_GuildViceMaster_SC(const MSG_Ret_GuildViceMaster_SC& from);
  MSG_Ret_GuildViceMaster_SC(MSG_Ret_GuildViceMaster_SC&& from) noexcept
    : MSG_Ret_GuildViceMaster_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildViceMaster_SC& operator=(const MSG_Ret_GuildViceMaster_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildViceMaster_SC& operator=(MSG_Ret_GuildViceMaster_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildViceMaster_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildViceMaster_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildViceMaster_SC*>(
               &_MSG_Ret_GuildViceMaster_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(MSG_Ret_GuildViceMaster_SC& a, MSG_Ret_GuildViceMaster_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildViceMaster_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildViceMaster_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildViceMaster_SC>(nullptr);
  }

  MSG_Ret_GuildViceMaster_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildViceMaster_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildViceMaster_SC& from);
  void MergeFrom(const MSG_Ret_GuildViceMaster_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildViceMaster_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildViceMaster_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVicemasterFieldNumber = 1,
  };
  // repeated .guild.ViceMaster vicemaster = 1;
  int vicemaster_size() const;
  private:
  int _internal_vicemaster_size() const;
  public:
  void clear_vicemaster();
  ::guild::ViceMaster* mutable_vicemaster(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::ViceMaster >*
      mutable_vicemaster();
  private:
  const ::guild::ViceMaster& _internal_vicemaster(int index) const;
  ::guild::ViceMaster* _internal_add_vicemaster();
  public:
  const ::guild::ViceMaster& vicemaster(int index) const;
  ::guild::ViceMaster* add_vicemaster();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::ViceMaster >&
      vicemaster() const;

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildViceMaster_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::ViceMaster > vicemaster_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildExtension_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildExtension_CS) */ {
 public:
  MSG_Req_GuildExtension_CS();
  virtual ~MSG_Req_GuildExtension_CS();

  MSG_Req_GuildExtension_CS(const MSG_Req_GuildExtension_CS& from);
  MSG_Req_GuildExtension_CS(MSG_Req_GuildExtension_CS&& from) noexcept
    : MSG_Req_GuildExtension_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildExtension_CS& operator=(const MSG_Req_GuildExtension_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildExtension_CS& operator=(MSG_Req_GuildExtension_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildExtension_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildExtension_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildExtension_CS*>(
               &_MSG_Req_GuildExtension_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(MSG_Req_GuildExtension_CS& a, MSG_Req_GuildExtension_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildExtension_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildExtension_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildExtension_CS>(nullptr);
  }

  MSG_Req_GuildExtension_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildExtension_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildExtension_CS& from);
  void MergeFrom(const MSG_Req_GuildExtension_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildExtension_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildExtension_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsfreeFieldNumber = 1,
  };
  // optional bool isfree = 1;
  bool has_isfree() const;
  private:
  bool _internal_has_isfree() const;
  public:
  void clear_isfree();
  bool isfree() const;
  void set_isfree(bool value);
  private:
  bool _internal_isfree() const;
  void _internal_set_isfree(bool value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildExtension_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool isfree_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildExtension_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildExtension_SC) */ {
 public:
  MSG_Ret_GuildExtension_SC();
  virtual ~MSG_Ret_GuildExtension_SC();

  MSG_Ret_GuildExtension_SC(const MSG_Ret_GuildExtension_SC& from);
  MSG_Ret_GuildExtension_SC(MSG_Ret_GuildExtension_SC&& from) noexcept
    : MSG_Ret_GuildExtension_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildExtension_SC& operator=(const MSG_Ret_GuildExtension_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildExtension_SC& operator=(MSG_Ret_GuildExtension_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildExtension_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildExtension_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildExtension_SC*>(
               &_MSG_Ret_GuildExtension_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(MSG_Ret_GuildExtension_SC& a, MSG_Ret_GuildExtension_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildExtension_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildExtension_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildExtension_SC>(nullptr);
  }

  MSG_Ret_GuildExtension_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildExtension_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildExtension_SC& from);
  void MergeFrom(const MSG_Ret_GuildExtension_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildExtension_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildExtension_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExtensionoverFieldNumber = 1,
    kRetcodeFieldNumber = 2,
  };
  // optional uint32 extensionover = 1;
  bool has_extensionover() const;
  private:
  bool _internal_has_extensionover() const;
  public:
  void clear_extensionover();
  ::PROTOBUF_NAMESPACE_ID::uint32 extensionover() const;
  void set_extensionover(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_extensionover() const;
  void _internal_set_extensionover(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 retcode = 2;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildExtension_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 extensionover_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_OneKeyApply_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_OneKeyApply_CS) */ {
 public:
  MSG_Req_OneKeyApply_CS();
  virtual ~MSG_Req_OneKeyApply_CS();

  MSG_Req_OneKeyApply_CS(const MSG_Req_OneKeyApply_CS& from);
  MSG_Req_OneKeyApply_CS(MSG_Req_OneKeyApply_CS&& from) noexcept
    : MSG_Req_OneKeyApply_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_OneKeyApply_CS& operator=(const MSG_Req_OneKeyApply_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_OneKeyApply_CS& operator=(MSG_Req_OneKeyApply_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_OneKeyApply_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_OneKeyApply_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_OneKeyApply_CS*>(
               &_MSG_Req_OneKeyApply_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(MSG_Req_OneKeyApply_CS& a, MSG_Req_OneKeyApply_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_OneKeyApply_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_OneKeyApply_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_OneKeyApply_CS>(nullptr);
  }

  MSG_Req_OneKeyApply_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_OneKeyApply_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_OneKeyApply_CS& from);
  void MergeFrom(const MSG_Req_OneKeyApply_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_OneKeyApply_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_OneKeyApply_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_OneKeyApply_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_OneKeyApply_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_OneKeyApply_SC) */ {
 public:
  MSG_Ret_OneKeyApply_SC();
  virtual ~MSG_Ret_OneKeyApply_SC();

  MSG_Ret_OneKeyApply_SC(const MSG_Ret_OneKeyApply_SC& from);
  MSG_Ret_OneKeyApply_SC(MSG_Ret_OneKeyApply_SC&& from) noexcept
    : MSG_Ret_OneKeyApply_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_OneKeyApply_SC& operator=(const MSG_Ret_OneKeyApply_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_OneKeyApply_SC& operator=(MSG_Ret_OneKeyApply_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_OneKeyApply_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_OneKeyApply_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_OneKeyApply_SC*>(
               &_MSG_Ret_OneKeyApply_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(MSG_Ret_OneKeyApply_SC& a, MSG_Ret_OneKeyApply_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_OneKeyApply_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_OneKeyApply_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_OneKeyApply_SC>(nullptr);
  }

  MSG_Ret_OneKeyApply_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_OneKeyApply_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_OneKeyApply_SC& from);
  void MergeFrom(const MSG_Ret_OneKeyApply_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_OneKeyApply_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_OneKeyApply_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_OneKeyApply_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_RecrutCondition_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_RecrutCondition_CS) */ {
 public:
  MSG_Req_RecrutCondition_CS();
  virtual ~MSG_Req_RecrutCondition_CS();

  MSG_Req_RecrutCondition_CS(const MSG_Req_RecrutCondition_CS& from);
  MSG_Req_RecrutCondition_CS(MSG_Req_RecrutCondition_CS&& from) noexcept
    : MSG_Req_RecrutCondition_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_RecrutCondition_CS& operator=(const MSG_Req_RecrutCondition_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_RecrutCondition_CS& operator=(MSG_Req_RecrutCondition_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_RecrutCondition_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_RecrutCondition_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_RecrutCondition_CS*>(
               &_MSG_Req_RecrutCondition_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(MSG_Req_RecrutCondition_CS& a, MSG_Req_RecrutCondition_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_RecrutCondition_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_RecrutCondition_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_RecrutCondition_CS>(nullptr);
  }

  MSG_Req_RecrutCondition_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_RecrutCondition_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_RecrutCondition_CS& from);
  void MergeFrom(const MSG_Req_RecrutCondition_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_RecrutCondition_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_RecrutCondition_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_RecrutCondition_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRecrutCondition_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_RetRecrutCondition_SC) */ {
 public:
  MSG_RetRecrutCondition_SC();
  virtual ~MSG_RetRecrutCondition_SC();

  MSG_RetRecrutCondition_SC(const MSG_RetRecrutCondition_SC& from);
  MSG_RetRecrutCondition_SC(MSG_RetRecrutCondition_SC&& from) noexcept
    : MSG_RetRecrutCondition_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRecrutCondition_SC& operator=(const MSG_RetRecrutCondition_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRecrutCondition_SC& operator=(MSG_RetRecrutCondition_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRecrutCondition_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRecrutCondition_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRecrutCondition_SC*>(
               &_MSG_RetRecrutCondition_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(MSG_RetRecrutCondition_SC& a, MSG_RetRecrutCondition_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRecrutCondition_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRecrutCondition_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRecrutCondition_SC>(nullptr);
  }

  MSG_RetRecrutCondition_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRecrutCondition_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRecrutCondition_SC& from);
  void MergeFrom(const MSG_RetRecrutCondition_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRecrutCondition_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_RetRecrutCondition_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLevelvalidFieldNumber = 1,
    kFightvalidFieldNumber = 2,
    kLevelFieldNumber = 3,
    kFightFieldNumber = 4,
  };
  // optional bool levelvalid = 1;
  bool has_levelvalid() const;
  private:
  bool _internal_has_levelvalid() const;
  public:
  void clear_levelvalid();
  bool levelvalid() const;
  void set_levelvalid(bool value);
  private:
  bool _internal_levelvalid() const;
  void _internal_set_levelvalid(bool value);
  public:

  // optional bool fightvalid = 2;
  bool has_fightvalid() const;
  private:
  bool _internal_has_fightvalid() const;
  public:
  void clear_fightvalid();
  bool fightvalid() const;
  void set_fightvalid(bool value);
  private:
  bool _internal_fightvalid() const;
  void _internal_set_fightvalid(bool value);
  public:

  // optional uint32 level = 3;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 fight = 4;
  bool has_fight() const;
  private:
  bool _internal_has_fight() const;
  public:
  void clear_fight();
  ::PROTOBUF_NAMESPACE_ID::uint32 fight() const;
  void set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fight() const;
  void _internal_set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_RetRecrutCondition_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool levelvalid_;
  bool fightvalid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fight_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_ModifyRecrutCondition_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_ModifyRecrutCondition_CS) */ {
 public:
  MSG_Req_ModifyRecrutCondition_CS();
  virtual ~MSG_Req_ModifyRecrutCondition_CS();

  MSG_Req_ModifyRecrutCondition_CS(const MSG_Req_ModifyRecrutCondition_CS& from);
  MSG_Req_ModifyRecrutCondition_CS(MSG_Req_ModifyRecrutCondition_CS&& from) noexcept
    : MSG_Req_ModifyRecrutCondition_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_ModifyRecrutCondition_CS& operator=(const MSG_Req_ModifyRecrutCondition_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_ModifyRecrutCondition_CS& operator=(MSG_Req_ModifyRecrutCondition_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_ModifyRecrutCondition_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_ModifyRecrutCondition_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_ModifyRecrutCondition_CS*>(
               &_MSG_Req_ModifyRecrutCondition_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(MSG_Req_ModifyRecrutCondition_CS& a, MSG_Req_ModifyRecrutCondition_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_ModifyRecrutCondition_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_ModifyRecrutCondition_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_ModifyRecrutCondition_CS>(nullptr);
  }

  MSG_Req_ModifyRecrutCondition_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_ModifyRecrutCondition_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_ModifyRecrutCondition_CS& from);
  void MergeFrom(const MSG_Req_ModifyRecrutCondition_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_ModifyRecrutCondition_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_ModifyRecrutCondition_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLevelvalidFieldNumber = 1,
    kFightvalidFieldNumber = 2,
    kLevelFieldNumber = 3,
    kFightFieldNumber = 4,
  };
  // optional bool levelvalid = 1;
  bool has_levelvalid() const;
  private:
  bool _internal_has_levelvalid() const;
  public:
  void clear_levelvalid();
  bool levelvalid() const;
  void set_levelvalid(bool value);
  private:
  bool _internal_levelvalid() const;
  void _internal_set_levelvalid(bool value);
  public:

  // optional bool fightvalid = 2;
  bool has_fightvalid() const;
  private:
  bool _internal_has_fightvalid() const;
  public:
  void clear_fightvalid();
  bool fightvalid() const;
  void set_fightvalid(bool value);
  private:
  bool _internal_fightvalid() const;
  void _internal_set_fightvalid(bool value);
  public:

  // optional uint32 level = 3;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 fight = 4;
  bool has_fight() const;
  private:
  bool _internal_has_fight() const;
  public:
  void clear_fight();
  ::PROTOBUF_NAMESPACE_ID::uint32 fight() const;
  void set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fight() const;
  void _internal_set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_ModifyRecrutCondition_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool levelvalid_;
  bool fightvalid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fight_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildTechnique_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildTechnique_CS) */ {
 public:
  MSG_Req_GuildTechnique_CS();
  virtual ~MSG_Req_GuildTechnique_CS();

  MSG_Req_GuildTechnique_CS(const MSG_Req_GuildTechnique_CS& from);
  MSG_Req_GuildTechnique_CS(MSG_Req_GuildTechnique_CS&& from) noexcept
    : MSG_Req_GuildTechnique_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildTechnique_CS& operator=(const MSG_Req_GuildTechnique_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildTechnique_CS& operator=(MSG_Req_GuildTechnique_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildTechnique_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildTechnique_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildTechnique_CS*>(
               &_MSG_Req_GuildTechnique_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(MSG_Req_GuildTechnique_CS& a, MSG_Req_GuildTechnique_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildTechnique_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildTechnique_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildTechnique_CS>(nullptr);
  }

  MSG_Req_GuildTechnique_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildTechnique_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildTechnique_CS& from);
  void MergeFrom(const MSG_Req_GuildTechnique_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildTechnique_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildTechnique_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildTechnique_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class TechniqueInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.TechniqueInfo) */ {
 public:
  TechniqueInfo();
  virtual ~TechniqueInfo();

  TechniqueInfo(const TechniqueInfo& from);
  TechniqueInfo(TechniqueInfo&& from) noexcept
    : TechniqueInfo() {
    *this = ::std::move(from);
  }

  inline TechniqueInfo& operator=(const TechniqueInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline TechniqueInfo& operator=(TechniqueInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TechniqueInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TechniqueInfo* internal_default_instance() {
    return reinterpret_cast<const TechniqueInfo*>(
               &_TechniqueInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(TechniqueInfo& a, TechniqueInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(TechniqueInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TechniqueInfo* New() const final {
    return CreateMaybeMessage<TechniqueInfo>(nullptr);
  }

  TechniqueInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TechniqueInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TechniqueInfo& from);
  void MergeFrom(const TechniqueInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TechniqueInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.TechniqueInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTechidFieldNumber = 1,
    kPersonallevelFieldNumber = 2,
    kDeveloplevelFieldNumber = 3,
    kValidlevelFieldNumber = 4,
    kUnlockFieldNumber = 5,
  };
  // optional uint32 techid = 1;
  bool has_techid() const;
  private:
  bool _internal_has_techid() const;
  public:
  void clear_techid();
  ::PROTOBUF_NAMESPACE_ID::uint32 techid() const;
  void set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_techid() const;
  void _internal_set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 personallevel = 2;
  bool has_personallevel() const;
  private:
  bool _internal_has_personallevel() const;
  public:
  void clear_personallevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 personallevel() const;
  void set_personallevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_personallevel() const;
  void _internal_set_personallevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 developlevel = 3;
  bool has_developlevel() const;
  private:
  bool _internal_has_developlevel() const;
  public:
  void clear_developlevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 developlevel() const;
  void set_developlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_developlevel() const;
  void _internal_set_developlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 validlevel = 4;
  bool has_validlevel() const;
  private:
  bool _internal_has_validlevel() const;
  public:
  void clear_validlevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 validlevel() const;
  void set_validlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_validlevel() const;
  void _internal_set_validlevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool unlock = 5;
  bool has_unlock() const;
  private:
  bool _internal_has_unlock() const;
  public:
  void clear_unlock();
  bool unlock() const;
  void set_unlock(bool value);
  private:
  bool _internal_unlock() const;
  void _internal_set_unlock(bool value);
  public:

  // @@protoc_insertion_point(class_scope:guild.TechniqueInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 techid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 personallevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 developlevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 validlevel_;
  bool unlock_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildTechnique_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildTechnique_SC) */ {
 public:
  MSG_Ret_GuildTechnique_SC();
  virtual ~MSG_Ret_GuildTechnique_SC();

  MSG_Ret_GuildTechnique_SC(const MSG_Ret_GuildTechnique_SC& from);
  MSG_Ret_GuildTechnique_SC(MSG_Ret_GuildTechnique_SC&& from) noexcept
    : MSG_Ret_GuildTechnique_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildTechnique_SC& operator=(const MSG_Ret_GuildTechnique_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildTechnique_SC& operator=(MSG_Ret_GuildTechnique_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildTechnique_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildTechnique_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildTechnique_SC*>(
               &_MSG_Ret_GuildTechnique_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(MSG_Ret_GuildTechnique_SC& a, MSG_Ret_GuildTechnique_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildTechnique_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildTechnique_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildTechnique_SC>(nullptr);
  }

  MSG_Ret_GuildTechnique_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildTechnique_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildTechnique_SC& from);
  void MergeFrom(const MSG_Ret_GuildTechnique_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildTechnique_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildTechnique_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
  };
  // repeated .guild.TechniqueInfo info = 1;
  int info_size() const;
  private:
  int _internal_info_size() const;
  public:
  void clear_info();
  ::guild::TechniqueInfo* mutable_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::TechniqueInfo >*
      mutable_info();
  private:
  const ::guild::TechniqueInfo& _internal_info(int index) const;
  ::guild::TechniqueInfo* _internal_add_info();
  public:
  const ::guild::TechniqueInfo& info(int index) const;
  ::guild::TechniqueInfo* add_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::TechniqueInfo >&
      info() const;

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildTechnique_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::TechniqueInfo > info_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_TechniqueUpGrade_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_TechniqueUpGrade_CS) */ {
 public:
  MSG_Req_TechniqueUpGrade_CS();
  virtual ~MSG_Req_TechniqueUpGrade_CS();

  MSG_Req_TechniqueUpGrade_CS(const MSG_Req_TechniqueUpGrade_CS& from);
  MSG_Req_TechniqueUpGrade_CS(MSG_Req_TechniqueUpGrade_CS&& from) noexcept
    : MSG_Req_TechniqueUpGrade_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_TechniqueUpGrade_CS& operator=(const MSG_Req_TechniqueUpGrade_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_TechniqueUpGrade_CS& operator=(MSG_Req_TechniqueUpGrade_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_TechniqueUpGrade_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_TechniqueUpGrade_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_TechniqueUpGrade_CS*>(
               &_MSG_Req_TechniqueUpGrade_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(MSG_Req_TechniqueUpGrade_CS& a, MSG_Req_TechniqueUpGrade_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_TechniqueUpGrade_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_TechniqueUpGrade_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_TechniqueUpGrade_CS>(nullptr);
  }

  MSG_Req_TechniqueUpGrade_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_TechniqueUpGrade_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_TechniqueUpGrade_CS& from);
  void MergeFrom(const MSG_Req_TechniqueUpGrade_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_TechniqueUpGrade_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_TechniqueUpGrade_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTechidFieldNumber = 1,
  };
  // optional uint32 techid = 1;
  bool has_techid() const;
  private:
  bool _internal_has_techid() const;
  public:
  void clear_techid();
  ::PROTOBUF_NAMESPACE_ID::uint32 techid() const;
  void set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_techid() const;
  void _internal_set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_TechniqueUpGrade_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 techid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_TechniqueUpGrade_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_TechniqueUpGrade_SC) */ {
 public:
  MSG_Ret_TechniqueUpGrade_SC();
  virtual ~MSG_Ret_TechniqueUpGrade_SC();

  MSG_Ret_TechniqueUpGrade_SC(const MSG_Ret_TechniqueUpGrade_SC& from);
  MSG_Ret_TechniqueUpGrade_SC(MSG_Ret_TechniqueUpGrade_SC&& from) noexcept
    : MSG_Ret_TechniqueUpGrade_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_TechniqueUpGrade_SC& operator=(const MSG_Ret_TechniqueUpGrade_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_TechniqueUpGrade_SC& operator=(MSG_Ret_TechniqueUpGrade_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_TechniqueUpGrade_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_TechniqueUpGrade_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_TechniqueUpGrade_SC*>(
               &_MSG_Ret_TechniqueUpGrade_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(MSG_Ret_TechniqueUpGrade_SC& a, MSG_Ret_TechniqueUpGrade_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_TechniqueUpGrade_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_TechniqueUpGrade_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_TechniqueUpGrade_SC>(nullptr);
  }

  MSG_Ret_TechniqueUpGrade_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_TechniqueUpGrade_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_TechniqueUpGrade_SC& from);
  void MergeFrom(const MSG_Ret_TechniqueUpGrade_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_TechniqueUpGrade_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_TechniqueUpGrade_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_TechniqueUpGrade_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_RefreshTechniqueInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_RefreshTechniqueInfo_SC) */ {
 public:
  MSG_Ret_RefreshTechniqueInfo_SC();
  virtual ~MSG_Ret_RefreshTechniqueInfo_SC();

  MSG_Ret_RefreshTechniqueInfo_SC(const MSG_Ret_RefreshTechniqueInfo_SC& from);
  MSG_Ret_RefreshTechniqueInfo_SC(MSG_Ret_RefreshTechniqueInfo_SC&& from) noexcept
    : MSG_Ret_RefreshTechniqueInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_RefreshTechniqueInfo_SC& operator=(const MSG_Ret_RefreshTechniqueInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_RefreshTechniqueInfo_SC& operator=(MSG_Ret_RefreshTechniqueInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_RefreshTechniqueInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_RefreshTechniqueInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_RefreshTechniqueInfo_SC*>(
               &_MSG_Ret_RefreshTechniqueInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(MSG_Ret_RefreshTechniqueInfo_SC& a, MSG_Ret_RefreshTechniqueInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_RefreshTechniqueInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_RefreshTechniqueInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_RefreshTechniqueInfo_SC>(nullptr);
  }

  MSG_Ret_RefreshTechniqueInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_RefreshTechniqueInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_RefreshTechniqueInfo_SC& from);
  void MergeFrom(const MSG_Ret_RefreshTechniqueInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_RefreshTechniqueInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_RefreshTechniqueInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
  };
  // optional .guild.TechniqueInfo info = 1;
  bool has_info() const;
  private:
  bool _internal_has_info() const;
  public:
  void clear_info();
  const ::guild::TechniqueInfo& info() const;
  ::guild::TechniqueInfo* release_info();
  ::guild::TechniqueInfo* mutable_info();
  void set_allocated_info(::guild::TechniqueInfo* info);
  private:
  const ::guild::TechniqueInfo& _internal_info() const;
  ::guild::TechniqueInfo* _internal_mutable_info();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_RefreshTechniqueInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::guild::TechniqueInfo* info_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_TechniqueDevelop_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_TechniqueDevelop_CS) */ {
 public:
  MSG_Req_TechniqueDevelop_CS();
  virtual ~MSG_Req_TechniqueDevelop_CS();

  MSG_Req_TechniqueDevelop_CS(const MSG_Req_TechniqueDevelop_CS& from);
  MSG_Req_TechniqueDevelop_CS(MSG_Req_TechniqueDevelop_CS&& from) noexcept
    : MSG_Req_TechniqueDevelop_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_TechniqueDevelop_CS& operator=(const MSG_Req_TechniqueDevelop_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_TechniqueDevelop_CS& operator=(MSG_Req_TechniqueDevelop_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_TechniqueDevelop_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_TechniqueDevelop_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_TechniqueDevelop_CS*>(
               &_MSG_Req_TechniqueDevelop_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(MSG_Req_TechniqueDevelop_CS& a, MSG_Req_TechniqueDevelop_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_TechniqueDevelop_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_TechniqueDevelop_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_TechniqueDevelop_CS>(nullptr);
  }

  MSG_Req_TechniqueDevelop_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_TechniqueDevelop_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_TechniqueDevelop_CS& from);
  void MergeFrom(const MSG_Req_TechniqueDevelop_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_TechniqueDevelop_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_TechniqueDevelop_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTechidFieldNumber = 1,
  };
  // optional uint32 techid = 1;
  bool has_techid() const;
  private:
  bool _internal_has_techid() const;
  public:
  void clear_techid();
  ::PROTOBUF_NAMESPACE_ID::uint32 techid() const;
  void set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_techid() const;
  void _internal_set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_TechniqueDevelop_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 techid_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_TechniqueDevelop_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_TechniqueDevelop_SC) */ {
 public:
  MSG_Ret_TechniqueDevelop_SC();
  virtual ~MSG_Ret_TechniqueDevelop_SC();

  MSG_Ret_TechniqueDevelop_SC(const MSG_Ret_TechniqueDevelop_SC& from);
  MSG_Ret_TechniqueDevelop_SC(MSG_Ret_TechniqueDevelop_SC&& from) noexcept
    : MSG_Ret_TechniqueDevelop_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_TechniqueDevelop_SC& operator=(const MSG_Ret_TechniqueDevelop_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_TechniqueDevelop_SC& operator=(MSG_Ret_TechniqueDevelop_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_TechniqueDevelop_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_TechniqueDevelop_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_TechniqueDevelop_SC*>(
               &_MSG_Ret_TechniqueDevelop_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(MSG_Ret_TechniqueDevelop_SC& a, MSG_Ret_TechniqueDevelop_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_TechniqueDevelop_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_TechniqueDevelop_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_TechniqueDevelop_SC>(nullptr);
  }

  MSG_Ret_TechniqueDevelop_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_TechniqueDevelop_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_TechniqueDevelop_SC& from);
  void MergeFrom(const MSG_Ret_TechniqueDevelop_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_TechniqueDevelop_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_TechniqueDevelop_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSalaryFieldNumber = 1,
  };
  // optional uint32 salary = 1;
  bool has_salary() const;
  private:
  bool _internal_has_salary() const;
  public:
  void clear_salary();
  ::PROTOBUF_NAMESPACE_ID::uint32 salary() const;
  void set_salary(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_salary() const;
  void _internal_set_salary(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_TechniqueDevelop_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 salary_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildPartyActivityInfo_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildPartyActivityInfo_CS) */ {
 public:
  MSG_Req_GuildPartyActivityInfo_CS();
  virtual ~MSG_Req_GuildPartyActivityInfo_CS();

  MSG_Req_GuildPartyActivityInfo_CS(const MSG_Req_GuildPartyActivityInfo_CS& from);
  MSG_Req_GuildPartyActivityInfo_CS(MSG_Req_GuildPartyActivityInfo_CS&& from) noexcept
    : MSG_Req_GuildPartyActivityInfo_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildPartyActivityInfo_CS& operator=(const MSG_Req_GuildPartyActivityInfo_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildPartyActivityInfo_CS& operator=(MSG_Req_GuildPartyActivityInfo_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildPartyActivityInfo_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildPartyActivityInfo_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildPartyActivityInfo_CS*>(
               &_MSG_Req_GuildPartyActivityInfo_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(MSG_Req_GuildPartyActivityInfo_CS& a, MSG_Req_GuildPartyActivityInfo_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildPartyActivityInfo_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildPartyActivityInfo_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildPartyActivityInfo_CS>(nullptr);
  }

  MSG_Req_GuildPartyActivityInfo_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildPartyActivityInfo_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildPartyActivityInfo_CS& from);
  void MergeFrom(const MSG_Req_GuildPartyActivityInfo_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildPartyActivityInfo_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildPartyActivityInfo_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildPartyActivityInfo_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildPartyActivityInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildPartyActivityInfo_SC) */ {
 public:
  MSG_Ret_GuildPartyActivityInfo_SC();
  virtual ~MSG_Ret_GuildPartyActivityInfo_SC();

  MSG_Ret_GuildPartyActivityInfo_SC(const MSG_Ret_GuildPartyActivityInfo_SC& from);
  MSG_Ret_GuildPartyActivityInfo_SC(MSG_Ret_GuildPartyActivityInfo_SC&& from) noexcept
    : MSG_Ret_GuildPartyActivityInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildPartyActivityInfo_SC& operator=(const MSG_Ret_GuildPartyActivityInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildPartyActivityInfo_SC& operator=(MSG_Ret_GuildPartyActivityInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildPartyActivityInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildPartyActivityInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildPartyActivityInfo_SC*>(
               &_MSG_Ret_GuildPartyActivityInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(MSG_Ret_GuildPartyActivityInfo_SC& a, MSG_Ret_GuildPartyActivityInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildPartyActivityInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildPartyActivityInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildPartyActivityInfo_SC>(nullptr);
  }

  MSG_Ret_GuildPartyActivityInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildPartyActivityInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildPartyActivityInfo_SC& from);
  void MergeFrom(const MSG_Ret_GuildPartyActivityInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildPartyActivityInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildPartyActivityInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLefttimesFieldNumber = 1,
  };
  // optional uint32 lefttimes = 1;
  bool has_lefttimes() const;
  private:
  bool _internal_has_lefttimes() const;
  public:
  void clear_lefttimes();
  ::PROTOBUF_NAMESPACE_ID::uint32 lefttimes() const;
  void set_lefttimes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lefttimes() const;
  void _internal_set_lefttimes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildPartyActivityInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lefttimes_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_StartGuildParty_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_StartGuildParty_CS) */ {
 public:
  MSG_Req_StartGuildParty_CS();
  virtual ~MSG_Req_StartGuildParty_CS();

  MSG_Req_StartGuildParty_CS(const MSG_Req_StartGuildParty_CS& from);
  MSG_Req_StartGuildParty_CS(MSG_Req_StartGuildParty_CS&& from) noexcept
    : MSG_Req_StartGuildParty_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_StartGuildParty_CS& operator=(const MSG_Req_StartGuildParty_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_StartGuildParty_CS& operator=(MSG_Req_StartGuildParty_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_StartGuildParty_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_StartGuildParty_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_StartGuildParty_CS*>(
               &_MSG_Req_StartGuildParty_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(MSG_Req_StartGuildParty_CS& a, MSG_Req_StartGuildParty_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_StartGuildParty_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_StartGuildParty_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_StartGuildParty_CS>(nullptr);
  }

  MSG_Req_StartGuildParty_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_StartGuildParty_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_StartGuildParty_CS& from);
  void MergeFrom(const MSG_Req_StartGuildParty_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_StartGuildParty_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_StartGuildParty_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_StartGuildParty_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildPartyActivityData_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildPartyActivityData_SC) */ {
 public:
  MSG_Ret_GuildPartyActivityData_SC();
  virtual ~MSG_Ret_GuildPartyActivityData_SC();

  MSG_Ret_GuildPartyActivityData_SC(const MSG_Ret_GuildPartyActivityData_SC& from);
  MSG_Ret_GuildPartyActivityData_SC(MSG_Ret_GuildPartyActivityData_SC&& from) noexcept
    : MSG_Ret_GuildPartyActivityData_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildPartyActivityData_SC& operator=(const MSG_Ret_GuildPartyActivityData_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildPartyActivityData_SC& operator=(MSG_Ret_GuildPartyActivityData_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildPartyActivityData_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildPartyActivityData_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildPartyActivityData_SC*>(
               &_MSG_Ret_GuildPartyActivityData_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(MSG_Ret_GuildPartyActivityData_SC& a, MSG_Ret_GuildPartyActivityData_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildPartyActivityData_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildPartyActivityData_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildPartyActivityData_SC>(nullptr);
  }

  MSG_Ret_GuildPartyActivityData_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildPartyActivityData_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildPartyActivityData_SC& from);
  void MergeFrom(const MSG_Ret_GuildPartyActivityData_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildPartyActivityData_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildPartyActivityData_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEndtimeFieldNumber = 1,
  };
  // optional uint32 endtime = 1;
  bool has_endtime() const;
  private:
  bool _internal_has_endtime() const;
  public:
  void clear_endtime();
  ::PROTOBUF_NAMESPACE_ID::uint32 endtime() const;
  void set_endtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_endtime() const;
  void _internal_set_endtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildPartyActivityData_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 endtime_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_FellowshipSurvey_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_FellowshipSurvey_SC) */ {
 public:
  MSG_Ret_FellowshipSurvey_SC();
  virtual ~MSG_Ret_FellowshipSurvey_SC();

  MSG_Ret_FellowshipSurvey_SC(const MSG_Ret_FellowshipSurvey_SC& from);
  MSG_Ret_FellowshipSurvey_SC(MSG_Ret_FellowshipSurvey_SC&& from) noexcept
    : MSG_Ret_FellowshipSurvey_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_FellowshipSurvey_SC& operator=(const MSG_Ret_FellowshipSurvey_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_FellowshipSurvey_SC& operator=(MSG_Ret_FellowshipSurvey_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_FellowshipSurvey_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_FellowshipSurvey_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_FellowshipSurvey_SC*>(
               &_MSG_Ret_FellowshipSurvey_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(MSG_Ret_FellowshipSurvey_SC& a, MSG_Ret_FellowshipSurvey_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_FellowshipSurvey_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_FellowshipSurvey_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_FellowshipSurvey_SC>(nullptr);
  }

  MSG_Ret_FellowshipSurvey_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_FellowshipSurvey_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_FellowshipSurvey_SC& from);
  void MergeFrom(const MSG_Ret_FellowshipSurvey_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_FellowshipSurvey_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_FellowshipSurvey_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestionAFieldNumber = 1,
    kQuestionBFieldNumber = 2,
    kQuestionCFieldNumber = 3,
  };
  // optional uint32 question_a = 1;
  bool has_question_a() const;
  private:
  bool _internal_has_question_a() const;
  public:
  void clear_question_a();
  ::PROTOBUF_NAMESPACE_ID::uint32 question_a() const;
  void set_question_a(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_question_a() const;
  void _internal_set_question_a(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 question_b = 2;
  bool has_question_b() const;
  private:
  bool _internal_has_question_b() const;
  public:
  void clear_question_b();
  ::PROTOBUF_NAMESPACE_ID::uint32 question_b() const;
  void set_question_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_question_b() const;
  void _internal_set_question_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 question_c = 3;
  bool has_question_c() const;
  private:
  bool _internal_has_question_c() const;
  public:
  void clear_question_c();
  ::PROTOBUF_NAMESPACE_ID::uint32 question_c() const;
  void set_question_c(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_question_c() const;
  void _internal_set_question_c(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_FellowshipSurvey_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 question_a_;
  ::PROTOBUF_NAMESPACE_ID::uint32 question_b_;
  ::PROTOBUF_NAMESPACE_ID::uint32 question_c_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_SubmitFellowshipSurvey_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_SubmitFellowshipSurvey_CS) */ {
 public:
  MSG_Req_SubmitFellowshipSurvey_CS();
  virtual ~MSG_Req_SubmitFellowshipSurvey_CS();

  MSG_Req_SubmitFellowshipSurvey_CS(const MSG_Req_SubmitFellowshipSurvey_CS& from);
  MSG_Req_SubmitFellowshipSurvey_CS(MSG_Req_SubmitFellowshipSurvey_CS&& from) noexcept
    : MSG_Req_SubmitFellowshipSurvey_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_SubmitFellowshipSurvey_CS& operator=(const MSG_Req_SubmitFellowshipSurvey_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_SubmitFellowshipSurvey_CS& operator=(MSG_Req_SubmitFellowshipSurvey_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_SubmitFellowshipSurvey_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_SubmitFellowshipSurvey_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_SubmitFellowshipSurvey_CS*>(
               &_MSG_Req_SubmitFellowshipSurvey_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(MSG_Req_SubmitFellowshipSurvey_CS& a, MSG_Req_SubmitFellowshipSurvey_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_SubmitFellowshipSurvey_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_SubmitFellowshipSurvey_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_SubmitFellowshipSurvey_CS>(nullptr);
  }

  MSG_Req_SubmitFellowshipSurvey_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_SubmitFellowshipSurvey_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_SubmitFellowshipSurvey_CS& from);
  void MergeFrom(const MSG_Req_SubmitFellowshipSurvey_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_SubmitFellowshipSurvey_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_SubmitFellowshipSurvey_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAnswerCFieldNumber = 6,
    kQuestionAFieldNumber = 1,
    kQuestionBFieldNumber = 2,
    kQuestionCFieldNumber = 3,
    kAnswerAFieldNumber = 4,
    kAnswerBFieldNumber = 5,
  };
  // optional string answer_c = 6;
  bool has_answer_c() const;
  private:
  bool _internal_has_answer_c() const;
  public:
  void clear_answer_c();
  const std::string& answer_c() const;
  void set_answer_c(const std::string& value);
  void set_answer_c(std::string&& value);
  void set_answer_c(const char* value);
  void set_answer_c(const char* value, size_t size);
  std::string* mutable_answer_c();
  std::string* release_answer_c();
  void set_allocated_answer_c(std::string* answer_c);
  private:
  const std::string& _internal_answer_c() const;
  void _internal_set_answer_c(const std::string& value);
  std::string* _internal_mutable_answer_c();
  public:

  // optional uint32 question_a = 1;
  bool has_question_a() const;
  private:
  bool _internal_has_question_a() const;
  public:
  void clear_question_a();
  ::PROTOBUF_NAMESPACE_ID::uint32 question_a() const;
  void set_question_a(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_question_a() const;
  void _internal_set_question_a(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 question_b = 2;
  bool has_question_b() const;
  private:
  bool _internal_has_question_b() const;
  public:
  void clear_question_b();
  ::PROTOBUF_NAMESPACE_ID::uint32 question_b() const;
  void set_question_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_question_b() const;
  void _internal_set_question_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 question_c = 3;
  bool has_question_c() const;
  private:
  bool _internal_has_question_c() const;
  public:
  void clear_question_c();
  ::PROTOBUF_NAMESPACE_ID::uint32 question_c() const;
  void set_question_c(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_question_c() const;
  void _internal_set_question_c(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 answer_a = 4;
  bool has_answer_a() const;
  private:
  bool _internal_has_answer_a() const;
  public:
  void clear_answer_a();
  ::PROTOBUF_NAMESPACE_ID::uint32 answer_a() const;
  void set_answer_a(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_answer_a() const;
  void _internal_set_answer_a(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 answer_b = 5;
  bool has_answer_b() const;
  private:
  bool _internal_has_answer_b() const;
  public:
  void clear_answer_b();
  ::PROTOBUF_NAMESPACE_ID::uint32 answer_b() const;
  void set_answer_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_answer_b() const;
  void _internal_set_answer_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_SubmitFellowshipSurvey_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr answer_c_;
  ::PROTOBUF_NAMESPACE_ID::uint32 question_a_;
  ::PROTOBUF_NAMESPACE_ID::uint32 question_b_;
  ::PROTOBUF_NAMESPACE_ID::uint32 question_c_;
  ::PROTOBUF_NAMESPACE_ID::uint32 answer_a_;
  ::PROTOBUF_NAMESPACE_ID::uint32 answer_b_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqDonateSalary_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_ReqDonateSalary_CS) */ {
 public:
  MSG_ReqDonateSalary_CS();
  virtual ~MSG_ReqDonateSalary_CS();

  MSG_ReqDonateSalary_CS(const MSG_ReqDonateSalary_CS& from);
  MSG_ReqDonateSalary_CS(MSG_ReqDonateSalary_CS&& from) noexcept
    : MSG_ReqDonateSalary_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqDonateSalary_CS& operator=(const MSG_ReqDonateSalary_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqDonateSalary_CS& operator=(MSG_ReqDonateSalary_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqDonateSalary_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqDonateSalary_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqDonateSalary_CS*>(
               &_MSG_ReqDonateSalary_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(MSG_ReqDonateSalary_CS& a, MSG_ReqDonateSalary_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqDonateSalary_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqDonateSalary_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqDonateSalary_CS>(nullptr);
  }

  MSG_ReqDonateSalary_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqDonateSalary_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqDonateSalary_CS& from);
  void MergeFrom(const MSG_ReqDonateSalary_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqDonateSalary_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_ReqDonateSalary_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // optional uint32 value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_ReqDonateSalary_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqUserCntData_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_ReqUserCntData_CSC) */ {
 public:
  MSG_ReqUserCntData_CSC();
  virtual ~MSG_ReqUserCntData_CSC();

  MSG_ReqUserCntData_CSC(const MSG_ReqUserCntData_CSC& from);
  MSG_ReqUserCntData_CSC(MSG_ReqUserCntData_CSC&& from) noexcept
    : MSG_ReqUserCntData_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_ReqUserCntData_CSC& operator=(const MSG_ReqUserCntData_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqUserCntData_CSC& operator=(MSG_ReqUserCntData_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqUserCntData_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqUserCntData_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqUserCntData_CSC*>(
               &_MSG_ReqUserCntData_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(MSG_ReqUserCntData_CSC& a, MSG_ReqUserCntData_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqUserCntData_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqUserCntData_CSC* New() const final {
    return CreateMaybeMessage<MSG_ReqUserCntData_CSC>(nullptr);
  }

  MSG_ReqUserCntData_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqUserCntData_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqUserCntData_CSC& from);
  void MergeFrom(const MSG_ReqUserCntData_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqUserCntData_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_ReqUserCntData_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // optional uint32 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .guild.UserDataType type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::guild::UserDataType type() const;
  void set_type(::guild::UserDataType value);
  private:
  ::guild::UserDataType _internal_type() const;
  void _internal_set_type(::guild::UserDataType value);
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_ReqUserCntData_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  int type_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class guildSkill :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.guildSkill) */ {
 public:
  guildSkill();
  virtual ~guildSkill();

  guildSkill(const guildSkill& from);
  guildSkill(guildSkill&& from) noexcept
    : guildSkill() {
    *this = ::std::move(from);
  }

  inline guildSkill& operator=(const guildSkill& from) {
    CopyFrom(from);
    return *this;
  }
  inline guildSkill& operator=(guildSkill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const guildSkill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const guildSkill* internal_default_instance() {
    return reinterpret_cast<const guildSkill*>(
               &_guildSkill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(guildSkill& a, guildSkill& b) {
    a.Swap(&b);
  }
  inline void Swap(guildSkill* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline guildSkill* New() const final {
    return CreateMaybeMessage<guildSkill>(nullptr);
  }

  guildSkill* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<guildSkill>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const guildSkill& from);
  void MergeFrom(const guildSkill& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(guildSkill* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.guildSkill";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillidFieldNumber = 1,
    kSkilllvFieldNumber = 2,
  };
  // optional uint32 skillid = 1;
  bool has_skillid() const;
  private:
  bool _internal_has_skillid() const;
  public:
  void clear_skillid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid() const;
  void set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillid() const;
  void _internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skilllv = 2;
  bool has_skilllv() const;
  private:
  bool _internal_has_skilllv() const;
  public:
  void clear_skilllv();
  ::PROTOBUF_NAMESPACE_ID::uint32 skilllv() const;
  void set_skilllv(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skilllv() const;
  void _internal_set_skilllv(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:guild.guildSkill)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skilllv_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GuildSkill_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_GuildSkill_CS) */ {
 public:
  MSG_Req_GuildSkill_CS();
  virtual ~MSG_Req_GuildSkill_CS();

  MSG_Req_GuildSkill_CS(const MSG_Req_GuildSkill_CS& from);
  MSG_Req_GuildSkill_CS(MSG_Req_GuildSkill_CS&& from) noexcept
    : MSG_Req_GuildSkill_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GuildSkill_CS& operator=(const MSG_Req_GuildSkill_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GuildSkill_CS& operator=(MSG_Req_GuildSkill_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GuildSkill_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GuildSkill_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GuildSkill_CS*>(
               &_MSG_Req_GuildSkill_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(MSG_Req_GuildSkill_CS& a, MSG_Req_GuildSkill_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GuildSkill_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GuildSkill_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GuildSkill_CS>(nullptr);
  }

  MSG_Req_GuildSkill_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GuildSkill_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GuildSkill_CS& from);
  void MergeFrom(const MSG_Req_GuildSkill_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GuildSkill_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_GuildSkill_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_GuildSkill_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GuildSkill_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Ret_GuildSkill_SC) */ {
 public:
  MSG_Ret_GuildSkill_SC();
  virtual ~MSG_Ret_GuildSkill_SC();

  MSG_Ret_GuildSkill_SC(const MSG_Ret_GuildSkill_SC& from);
  MSG_Ret_GuildSkill_SC(MSG_Ret_GuildSkill_SC&& from) noexcept
    : MSG_Ret_GuildSkill_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GuildSkill_SC& operator=(const MSG_Ret_GuildSkill_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GuildSkill_SC& operator=(MSG_Ret_GuildSkill_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GuildSkill_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GuildSkill_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GuildSkill_SC*>(
               &_MSG_Ret_GuildSkill_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(MSG_Ret_GuildSkill_SC& a, MSG_Ret_GuildSkill_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GuildSkill_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GuildSkill_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GuildSkill_SC>(nullptr);
  }

  MSG_Ret_GuildSkill_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GuildSkill_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GuildSkill_SC& from);
  void MergeFrom(const MSG_Ret_GuildSkill_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GuildSkill_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Ret_GuildSkill_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillinfoFieldNumber = 1,
  };
  // repeated .guild.guildSkill skillinfo = 1;
  int skillinfo_size() const;
  private:
  int _internal_skillinfo_size() const;
  public:
  void clear_skillinfo();
  ::guild::guildSkill* mutable_skillinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildSkill >*
      mutable_skillinfo();
  private:
  const ::guild::guildSkill& _internal_skillinfo(int index) const;
  ::guild::guildSkill* _internal_add_skillinfo();
  public:
  const ::guild::guildSkill& skillinfo(int index) const;
  ::guild::guildSkill* add_skillinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildSkill >&
      skillinfo() const;

  // @@protoc_insertion_point(class_scope:guild.MSG_Ret_GuildSkill_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildSkill > skillinfo_;
  friend struct ::TableStruct_guild_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_LearnGuildSkill_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:guild.MSG_Req_LearnGuildSkill_CSC) */ {
 public:
  MSG_Req_LearnGuildSkill_CSC();
  virtual ~MSG_Req_LearnGuildSkill_CSC();

  MSG_Req_LearnGuildSkill_CSC(const MSG_Req_LearnGuildSkill_CSC& from);
  MSG_Req_LearnGuildSkill_CSC(MSG_Req_LearnGuildSkill_CSC&& from) noexcept
    : MSG_Req_LearnGuildSkill_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_Req_LearnGuildSkill_CSC& operator=(const MSG_Req_LearnGuildSkill_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_LearnGuildSkill_CSC& operator=(MSG_Req_LearnGuildSkill_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_LearnGuildSkill_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_LearnGuildSkill_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_LearnGuildSkill_CSC*>(
               &_MSG_Req_LearnGuildSkill_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(MSG_Req_LearnGuildSkill_CSC& a, MSG_Req_LearnGuildSkill_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_LearnGuildSkill_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_LearnGuildSkill_CSC* New() const final {
    return CreateMaybeMessage<MSG_Req_LearnGuildSkill_CSC>(nullptr);
  }

  MSG_Req_LearnGuildSkill_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_LearnGuildSkill_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_LearnGuildSkill_CSC& from);
  void MergeFrom(const MSG_Req_LearnGuildSkill_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_LearnGuildSkill_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "guild.MSG_Req_LearnGuildSkill_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_guild_2eproto);
    return ::descriptor_table_guild_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillinfoFieldNumber = 1,
  };
  // optional .guild.guildSkill skillinfo = 1;
  bool has_skillinfo() const;
  private:
  bool _internal_has_skillinfo() const;
  public:
  void clear_skillinfo();
  const ::guild::guildSkill& skillinfo() const;
  ::guild::guildSkill* release_skillinfo();
  ::guild::guildSkill* mutable_skillinfo();
  void set_allocated_skillinfo(::guild::guildSkill* skillinfo);
  private:
  const ::guild::guildSkill& _internal_skillinfo() const;
  ::guild::guildSkill* _internal_mutable_skillinfo();
  public:

  // @@protoc_insertion_point(class_scope:guild.MSG_Req_LearnGuildSkill_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::guild::guildSkill* skillinfo_;
  friend struct ::TableStruct_guild_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// guildMember

// optional uint64 memberid = 1;
inline bool guildMember::_internal_has_memberid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool guildMember::has_memberid() const {
  return _internal_has_memberid();
}
inline void guildMember::clear_memberid() {
  memberid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 guildMember::_internal_memberid() const {
  return memberid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 guildMember::memberid() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.memberid)
  return _internal_memberid();
}
inline void guildMember::_internal_set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  memberid_ = value;
}
inline void guildMember::set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_memberid(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.memberid)
}

// optional string membername = 2;
inline bool guildMember::_internal_has_membername() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool guildMember::has_membername() const {
  return _internal_has_membername();
}
inline void guildMember::clear_membername() {
  membername_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& guildMember::membername() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.membername)
  return _internal_membername();
}
inline void guildMember::set_membername(const std::string& value) {
  _internal_set_membername(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.membername)
}
inline std::string* guildMember::mutable_membername() {
  // @@protoc_insertion_point(field_mutable:guild.guildMember.membername)
  return _internal_mutable_membername();
}
inline const std::string& guildMember::_internal_membername() const {
  return membername_.GetNoArena();
}
inline void guildMember::_internal_set_membername(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  membername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void guildMember::set_membername(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  membername_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.guildMember.membername)
}
inline void guildMember::set_membername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  membername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.guildMember.membername)
}
inline void guildMember::set_membername(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  membername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.guildMember.membername)
}
inline std::string* guildMember::_internal_mutable_membername() {
  _has_bits_[0] |= 0x00000001u;
  return membername_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* guildMember::release_membername() {
  // @@protoc_insertion_point(field_release:guild.guildMember.membername)
  if (!_internal_has_membername()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return membername_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void guildMember::set_allocated_membername(std::string* membername) {
  if (membername != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  membername_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), membername);
  // @@protoc_insertion_point(field_set_allocated:guild.guildMember.membername)
}

// optional uint32 memberlevel = 3;
inline bool guildMember::_internal_has_memberlevel() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool guildMember::has_memberlevel() const {
  return _internal_has_memberlevel();
}
inline void guildMember::clear_memberlevel() {
  memberlevel_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::_internal_memberlevel() const {
  return memberlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::memberlevel() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.memberlevel)
  return _internal_memberlevel();
}
inline void guildMember::_internal_set_memberlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  memberlevel_ = value;
}
inline void guildMember::set_memberlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_memberlevel(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.memberlevel)
}

// optional uint32 memberstatus = 4;
inline bool guildMember::_internal_has_memberstatus() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool guildMember::has_memberstatus() const {
  return _internal_has_memberstatus();
}
inline void guildMember::clear_memberstatus() {
  memberstatus_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::_internal_memberstatus() const {
  return memberstatus_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::memberstatus() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.memberstatus)
  return _internal_memberstatus();
}
inline void guildMember::_internal_set_memberstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  memberstatus_ = value;
}
inline void guildMember::set_memberstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_memberstatus(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.memberstatus)
}

// optional uint32 contribute = 5;
inline bool guildMember::_internal_has_contribute() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool guildMember::has_contribute() const {
  return _internal_has_contribute();
}
inline void guildMember::clear_contribute() {
  contribute_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::_internal_contribute() const {
  return contribute_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::contribute() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.contribute)
  return _internal_contribute();
}
inline void guildMember::_internal_set_contribute(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  contribute_ = value;
}
inline void guildMember::set_contribute(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_contribute(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.contribute)
}

// optional uint32 donatesalary = 6;
inline bool guildMember::_internal_has_donatesalary() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool guildMember::has_donatesalary() const {
  return _internal_has_donatesalary();
}
inline void guildMember::clear_donatesalary() {
  donatesalary_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::_internal_donatesalary() const {
  return donatesalary_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::donatesalary() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.donatesalary)
  return _internal_donatesalary();
}
inline void guildMember::_internal_set_donatesalary(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  donatesalary_ = value;
}
inline void guildMember::set_donatesalary(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_donatesalary(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.donatesalary)
}

// optional bool isonline = 7;
inline bool guildMember::_internal_has_isonline() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool guildMember::has_isonline() const {
  return _internal_has_isonline();
}
inline void guildMember::clear_isonline() {
  isonline_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool guildMember::_internal_isonline() const {
  return isonline_;
}
inline bool guildMember::isonline() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.isonline)
  return _internal_isonline();
}
inline void guildMember::_internal_set_isonline(bool value) {
  _has_bits_[0] |= 0x00000040u;
  isonline_ = value;
}
inline void guildMember::set_isonline(bool value) {
  _internal_set_isonline(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.isonline)
}

// optional uint32 lastonlinetime = 8;
inline bool guildMember::_internal_has_lastonlinetime() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool guildMember::has_lastonlinetime() const {
  return _internal_has_lastonlinetime();
}
inline void guildMember::clear_lastonlinetime() {
  lastonlinetime_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::_internal_lastonlinetime() const {
  return lastonlinetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::lastonlinetime() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.lastonlinetime)
  return _internal_lastonlinetime();
}
inline void guildMember::_internal_set_lastonlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  lastonlinetime_ = value;
}
inline void guildMember::set_lastonlinetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lastonlinetime(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.lastonlinetime)
}

// optional uint32 career = 9;
inline bool guildMember::_internal_has_career() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool guildMember::has_career() const {
  return _internal_has_career();
}
inline void guildMember::clear_career() {
  career_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::_internal_career() const {
  return career_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::career() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.career)
  return _internal_career();
}
inline void guildMember::_internal_set_career(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  career_ = value;
}
inline void guildMember::set_career(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_career(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.career)
}

// optional uint32 positionid = 10;
inline bool guildMember::_internal_has_positionid() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool guildMember::has_positionid() const {
  return _internal_has_positionid();
}
inline void guildMember::clear_positionid() {
  positionid_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::_internal_positionid() const {
  return positionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::positionid() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.positionid)
  return _internal_positionid();
}
inline void guildMember::_internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  positionid_ = value;
}
inline void guildMember::set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_positionid(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.positionid)
}

// optional uint32 applytime = 11;
inline bool guildMember::_internal_has_applytime() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool guildMember::has_applytime() const {
  return _internal_has_applytime();
}
inline void guildMember::clear_applytime() {
  applytime_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::_internal_applytime() const {
  return applytime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildMember::applytime() const {
  // @@protoc_insertion_point(field_get:guild.guildMember.applytime)
  return _internal_applytime();
}
inline void guildMember::_internal_set_applytime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  applytime_ = value;
}
inline void guildMember::set_applytime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_applytime(value);
  // @@protoc_insertion_point(field_set:guild.guildMember.applytime)
}

// -------------------------------------------------------------------

// guildInfo

// optional uint64 guildid = 1;
inline bool guildInfo::_internal_has_guildid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool guildInfo::has_guildid() const {
  return _internal_has_guildid();
}
inline void guildInfo::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 guildInfo::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 guildInfo::guildid() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.guildid)
  return _internal_guildid();
}
inline void guildInfo::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  guildid_ = value;
}
inline void guildInfo::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.guildid)
}

// optional string guildname = 2;
inline bool guildInfo::_internal_has_guildname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool guildInfo::has_guildname() const {
  return _internal_has_guildname();
}
inline void guildInfo::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& guildInfo::guildname() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.guildname)
  return _internal_guildname();
}
inline void guildInfo::set_guildname(const std::string& value) {
  _internal_set_guildname(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.guildname)
}
inline std::string* guildInfo::mutable_guildname() {
  // @@protoc_insertion_point(field_mutable:guild.guildInfo.guildname)
  return _internal_mutable_guildname();
}
inline const std::string& guildInfo::_internal_guildname() const {
  return guildname_.GetNoArena();
}
inline void guildInfo::_internal_set_guildname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void guildInfo::set_guildname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.guildInfo.guildname)
}
inline void guildInfo::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.guildInfo.guildname)
}
inline void guildInfo::set_guildname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.guildInfo.guildname)
}
inline std::string* guildInfo::_internal_mutable_guildname() {
  _has_bits_[0] |= 0x00000001u;
  return guildname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* guildInfo::release_guildname() {
  // @@protoc_insertion_point(field_release:guild.guildInfo.guildname)
  if (!_internal_has_guildname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return guildname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void guildInfo::set_allocated_guildname(std::string* guildname) {
  if (guildname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guildname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:guild.guildInfo.guildname)
}

// optional uint32 guildlevel = 3;
inline bool guildInfo::_internal_has_guildlevel() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool guildInfo::has_guildlevel() const {
  return _internal_has_guildlevel();
}
inline void guildInfo::clear_guildlevel() {
  guildlevel_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_guildlevel() const {
  return guildlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::guildlevel() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.guildlevel)
  return _internal_guildlevel();
}
inline void guildInfo::_internal_set_guildlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  guildlevel_ = value;
}
inline void guildInfo::set_guildlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guildlevel(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.guildlevel)
}

// optional uint32 active = 4;
inline bool guildInfo::_internal_has_active() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool guildInfo::has_active() const {
  return _internal_has_active();
}
inline void guildInfo::clear_active() {
  active_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_active() const {
  return active_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::active() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.active)
  return _internal_active();
}
inline void guildInfo::_internal_set_active(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  active_ = value;
}
inline void guildInfo::set_active(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.active)
}

// optional string mastername = 5;
inline bool guildInfo::_internal_has_mastername() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool guildInfo::has_mastername() const {
  return _internal_has_mastername();
}
inline void guildInfo::clear_mastername() {
  mastername_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& guildInfo::mastername() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.mastername)
  return _internal_mastername();
}
inline void guildInfo::set_mastername(const std::string& value) {
  _internal_set_mastername(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.mastername)
}
inline std::string* guildInfo::mutable_mastername() {
  // @@protoc_insertion_point(field_mutable:guild.guildInfo.mastername)
  return _internal_mutable_mastername();
}
inline const std::string& guildInfo::_internal_mastername() const {
  return mastername_.GetNoArena();
}
inline void guildInfo::_internal_set_mastername(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  mastername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void guildInfo::set_mastername(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  mastername_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.guildInfo.mastername)
}
inline void guildInfo::set_mastername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  mastername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.guildInfo.mastername)
}
inline void guildInfo::set_mastername(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  mastername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.guildInfo.mastername)
}
inline std::string* guildInfo::_internal_mutable_mastername() {
  _has_bits_[0] |= 0x00000002u;
  return mastername_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* guildInfo::release_mastername() {
  // @@protoc_insertion_point(field_release:guild.guildInfo.mastername)
  if (!_internal_has_mastername()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return mastername_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void guildInfo::set_allocated_mastername(std::string* mastername) {
  if (mastername != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  mastername_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mastername);
  // @@protoc_insertion_point(field_set_allocated:guild.guildInfo.mastername)
}

// optional uint32 exp = 6;
inline bool guildInfo::_internal_has_exp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool guildInfo::has_exp() const {
  return _internal_has_exp();
}
inline void guildInfo::clear_exp() {
  exp_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_exp() const {
  return exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::exp() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.exp)
  return _internal_exp();
}
inline void guildInfo::_internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  exp_ = value;
}
inline void guildInfo::set_exp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.exp)
}

// optional uint32 nextexp = 7;
inline bool guildInfo::_internal_has_nextexp() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool guildInfo::has_nextexp() const {
  return _internal_has_nextexp();
}
inline void guildInfo::clear_nextexp() {
  nextexp_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_nextexp() const {
  return nextexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::nextexp() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.nextexp)
  return _internal_nextexp();
}
inline void guildInfo::_internal_set_nextexp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  nextexp_ = value;
}
inline void guildInfo::set_nextexp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_nextexp(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.nextexp)
}

// optional uint32 salary = 8;
inline bool guildInfo::_internal_has_salary() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool guildInfo::has_salary() const {
  return _internal_has_salary();
}
inline void guildInfo::clear_salary() {
  salary_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_salary() const {
  return salary_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::salary() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.salary)
  return _internal_salary();
}
inline void guildInfo::_internal_set_salary(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  salary_ = value;
}
inline void guildInfo::set_salary(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_salary(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.salary)
}

// optional uint32 sumcount = 9;
inline bool guildInfo::_internal_has_sumcount() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool guildInfo::has_sumcount() const {
  return _internal_has_sumcount();
}
inline void guildInfo::clear_sumcount() {
  sumcount_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_sumcount() const {
  return sumcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::sumcount() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.sumcount)
  return _internal_sumcount();
}
inline void guildInfo::_internal_set_sumcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  sumcount_ = value;
}
inline void guildInfo::set_sumcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sumcount(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.sumcount)
}

// optional uint32 onlinecount = 10;
inline bool guildInfo::_internal_has_onlinecount() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool guildInfo::has_onlinecount() const {
  return _internal_has_onlinecount();
}
inline void guildInfo::clear_onlinecount() {
  onlinecount_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_onlinecount() const {
  return onlinecount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::onlinecount() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.onlinecount)
  return _internal_onlinecount();
}
inline void guildInfo::_internal_set_onlinecount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  onlinecount_ = value;
}
inline void guildInfo::set_onlinecount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_onlinecount(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.onlinecount)
}

// optional uint32 countlimit = 11;
inline bool guildInfo::_internal_has_countlimit() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool guildInfo::has_countlimit() const {
  return _internal_has_countlimit();
}
inline void guildInfo::clear_countlimit() {
  countlimit_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_countlimit() const {
  return countlimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::countlimit() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.countlimit)
  return _internal_countlimit();
}
inline void guildInfo::_internal_set_countlimit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  countlimit_ = value;
}
inline void guildInfo::set_countlimit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_countlimit(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.countlimit)
}

// optional string notify = 12;
inline bool guildInfo::_internal_has_notify() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool guildInfo::has_notify() const {
  return _internal_has_notify();
}
inline void guildInfo::clear_notify() {
  notify_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& guildInfo::notify() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.notify)
  return _internal_notify();
}
inline void guildInfo::set_notify(const std::string& value) {
  _internal_set_notify(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.notify)
}
inline std::string* guildInfo::mutable_notify() {
  // @@protoc_insertion_point(field_mutable:guild.guildInfo.notify)
  return _internal_mutable_notify();
}
inline const std::string& guildInfo::_internal_notify() const {
  return notify_.GetNoArena();
}
inline void guildInfo::_internal_set_notify(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  notify_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void guildInfo::set_notify(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  notify_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.guildInfo.notify)
}
inline void guildInfo::set_notify(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  notify_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.guildInfo.notify)
}
inline void guildInfo::set_notify(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  notify_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.guildInfo.notify)
}
inline std::string* guildInfo::_internal_mutable_notify() {
  _has_bits_[0] |= 0x00000004u;
  return notify_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* guildInfo::release_notify() {
  // @@protoc_insertion_point(field_release:guild.guildInfo.notify)
  if (!_internal_has_notify()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return notify_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void guildInfo::set_allocated_notify(std::string* notify) {
  if (notify != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  notify_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), notify);
  // @@protoc_insertion_point(field_set_allocated:guild.guildInfo.notify)
}

// optional uint32 countryid = 13;
inline bool guildInfo::_internal_has_countryid() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool guildInfo::has_countryid() const {
  return _internal_has_countryid();
}
inline void guildInfo::clear_countryid() {
  countryid_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_countryid() const {
  return countryid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::countryid() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.countryid)
  return _internal_countryid();
}
inline void guildInfo::_internal_set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  countryid_ = value;
}
inline void guildInfo::set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_countryid(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.countryid)
}

// optional uint32 rank = 14;
inline bool guildInfo::_internal_has_rank() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool guildInfo::has_rank() const {
  return _internal_has_rank();
}
inline void guildInfo::clear_rank() {
  rank_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_rank() const {
  return rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::rank() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.rank)
  return _internal_rank();
}
inline void guildInfo::_internal_set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  rank_ = value;
}
inline void guildInfo::set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.rank)
}

// repeated .guild.GuildPositionInfo posinfo = 15;
inline int guildInfo::_internal_posinfo_size() const {
  return posinfo_.size();
}
inline int guildInfo::posinfo_size() const {
  return _internal_posinfo_size();
}
inline void guildInfo::clear_posinfo() {
  posinfo_.Clear();
}
inline ::guild::GuildPositionInfo* guildInfo::mutable_posinfo(int index) {
  // @@protoc_insertion_point(field_mutable:guild.guildInfo.posinfo)
  return posinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GuildPositionInfo >*
guildInfo::mutable_posinfo() {
  // @@protoc_insertion_point(field_mutable_list:guild.guildInfo.posinfo)
  return &posinfo_;
}
inline const ::guild::GuildPositionInfo& guildInfo::_internal_posinfo(int index) const {
  return posinfo_.Get(index);
}
inline const ::guild::GuildPositionInfo& guildInfo::posinfo(int index) const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.posinfo)
  return _internal_posinfo(index);
}
inline ::guild::GuildPositionInfo* guildInfo::_internal_add_posinfo() {
  return posinfo_.Add();
}
inline ::guild::GuildPositionInfo* guildInfo::add_posinfo() {
  // @@protoc_insertion_point(field_add:guild.guildInfo.posinfo)
  return _internal_add_posinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GuildPositionInfo >&
guildInfo::posinfo() const {
  // @@protoc_insertion_point(field_list:guild.guildInfo.posinfo)
  return posinfo_;
}

// optional string guildsetinfo = 16;
inline bool guildInfo::_internal_has_guildsetinfo() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool guildInfo::has_guildsetinfo() const {
  return _internal_has_guildsetinfo();
}
inline void guildInfo::clear_guildsetinfo() {
  guildsetinfo_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& guildInfo::guildsetinfo() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.guildsetinfo)
  return _internal_guildsetinfo();
}
inline void guildInfo::set_guildsetinfo(const std::string& value) {
  _internal_set_guildsetinfo(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.guildsetinfo)
}
inline std::string* guildInfo::mutable_guildsetinfo() {
  // @@protoc_insertion_point(field_mutable:guild.guildInfo.guildsetinfo)
  return _internal_mutable_guildsetinfo();
}
inline const std::string& guildInfo::_internal_guildsetinfo() const {
  return guildsetinfo_.GetNoArena();
}
inline void guildInfo::_internal_set_guildsetinfo(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  guildsetinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void guildInfo::set_guildsetinfo(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  guildsetinfo_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.guildInfo.guildsetinfo)
}
inline void guildInfo::set_guildsetinfo(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  guildsetinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.guildInfo.guildsetinfo)
}
inline void guildInfo::set_guildsetinfo(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  guildsetinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.guildInfo.guildsetinfo)
}
inline std::string* guildInfo::_internal_mutable_guildsetinfo() {
  _has_bits_[0] |= 0x00000008u;
  return guildsetinfo_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* guildInfo::release_guildsetinfo() {
  // @@protoc_insertion_point(field_release:guild.guildInfo.guildsetinfo)
  if (!_internal_has_guildsetinfo()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return guildsetinfo_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void guildInfo::set_allocated_guildsetinfo(std::string* guildsetinfo) {
  if (guildsetinfo != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  guildsetinfo_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guildsetinfo);
  // @@protoc_insertion_point(field_set_allocated:guild.guildInfo.guildsetinfo)
}

// optional uint32 lastactive = 17;
inline bool guildInfo::_internal_has_lastactive() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool guildInfo::has_lastactive() const {
  return _internal_has_lastactive();
}
inline void guildInfo::clear_lastactive() {
  lastactive_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_lastactive() const {
  return lastactive_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::lastactive() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.lastactive)
  return _internal_lastactive();
}
inline void guildInfo::_internal_set_lastactive(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  lastactive_ = value;
}
inline void guildInfo::set_lastactive(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lastactive(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.lastactive)
}

// optional uint32 lastcountlimit = 18;
inline bool guildInfo::_internal_has_lastcountlimit() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool guildInfo::has_lastcountlimit() const {
  return _internal_has_lastcountlimit();
}
inline void guildInfo::clear_lastcountlimit() {
  lastcountlimit_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_lastcountlimit() const {
  return lastcountlimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::lastcountlimit() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.lastcountlimit)
  return _internal_lastcountlimit();
}
inline void guildInfo::_internal_set_lastcountlimit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  lastcountlimit_ = value;
}
inline void guildInfo::set_lastcountlimit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lastcountlimit(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.lastcountlimit)
}

// optional string icon = 19;
inline bool guildInfo::_internal_has_icon() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool guildInfo::has_icon() const {
  return _internal_has_icon();
}
inline void guildInfo::clear_icon() {
  icon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& guildInfo::icon() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.icon)
  return _internal_icon();
}
inline void guildInfo::set_icon(const std::string& value) {
  _internal_set_icon(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.icon)
}
inline std::string* guildInfo::mutable_icon() {
  // @@protoc_insertion_point(field_mutable:guild.guildInfo.icon)
  return _internal_mutable_icon();
}
inline const std::string& guildInfo::_internal_icon() const {
  return icon_.GetNoArena();
}
inline void guildInfo::_internal_set_icon(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void guildInfo::set_icon(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  icon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.guildInfo.icon)
}
inline void guildInfo::set_icon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.guildInfo.icon)
}
inline void guildInfo::set_icon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.guildInfo.icon)
}
inline std::string* guildInfo::_internal_mutable_icon() {
  _has_bits_[0] |= 0x00000010u;
  return icon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* guildInfo::release_icon() {
  // @@protoc_insertion_point(field_release:guild.guildInfo.icon)
  if (!_internal_has_icon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return icon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void guildInfo::set_allocated_icon(std::string* icon) {
  if (icon != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  icon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:guild.guildInfo.icon)
}

// optional uint32 salary_rest_day = 20;
inline bool guildInfo::_internal_has_salary_rest_day() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool guildInfo::has_salary_rest_day() const {
  return _internal_has_salary_rest_day();
}
inline void guildInfo::clear_salary_rest_day() {
  salary_rest_day_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::_internal_salary_rest_day() const {
  return salary_rest_day_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildInfo::salary_rest_day() const {
  // @@protoc_insertion_point(field_get:guild.guildInfo.salary_rest_day)
  return _internal_salary_rest_day();
}
inline void guildInfo::_internal_set_salary_rest_day(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  salary_rest_day_ = value;
}
inline void guildInfo::set_salary_rest_day(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_salary_rest_day(value);
  // @@protoc_insertion_point(field_set:guild.guildInfo.salary_rest_day)
}

// -------------------------------------------------------------------

// MSG_Req_PreCreateGuild_CS

// -------------------------------------------------------------------

// MSG_Ret_PreCreateGuild_SC

// optional uint32 cost_objid = 1;
inline bool MSG_Ret_PreCreateGuild_SC::_internal_has_cost_objid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_PreCreateGuild_SC::has_cost_objid() const {
  return _internal_has_cost_objid();
}
inline void MSG_Ret_PreCreateGuild_SC::clear_cost_objid() {
  cost_objid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_PreCreateGuild_SC::_internal_cost_objid() const {
  return cost_objid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_PreCreateGuild_SC::cost_objid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_PreCreateGuild_SC.cost_objid)
  return _internal_cost_objid();
}
inline void MSG_Ret_PreCreateGuild_SC::_internal_set_cost_objid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  cost_objid_ = value;
}
inline void MSG_Ret_PreCreateGuild_SC::set_cost_objid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cost_objid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_PreCreateGuild_SC.cost_objid)
}

// optional uint32 cost_objnum = 2;
inline bool MSG_Ret_PreCreateGuild_SC::_internal_has_cost_objnum() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_PreCreateGuild_SC::has_cost_objnum() const {
  return _internal_has_cost_objnum();
}
inline void MSG_Ret_PreCreateGuild_SC::clear_cost_objnum() {
  cost_objnum_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_PreCreateGuild_SC::_internal_cost_objnum() const {
  return cost_objnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_PreCreateGuild_SC::cost_objnum() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_PreCreateGuild_SC.cost_objnum)
  return _internal_cost_objnum();
}
inline void MSG_Ret_PreCreateGuild_SC::_internal_set_cost_objnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  cost_objnum_ = value;
}
inline void MSG_Ret_PreCreateGuild_SC::set_cost_objnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cost_objnum(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_PreCreateGuild_SC.cost_objnum)
}

// -------------------------------------------------------------------

// MSG_Req_CreateGuild_CS

// optional string guildname = 1;
inline bool MSG_Req_CreateGuild_CS::_internal_has_guildname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_CreateGuild_CS::has_guildname() const {
  return _internal_has_guildname();
}
inline void MSG_Req_CreateGuild_CS::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_CreateGuild_CS::guildname() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_CreateGuild_CS.guildname)
  return _internal_guildname();
}
inline void MSG_Req_CreateGuild_CS::set_guildname(const std::string& value) {
  _internal_set_guildname(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_CreateGuild_CS.guildname)
}
inline std::string* MSG_Req_CreateGuild_CS::mutable_guildname() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_CreateGuild_CS.guildname)
  return _internal_mutable_guildname();
}
inline const std::string& MSG_Req_CreateGuild_CS::_internal_guildname() const {
  return guildname_.GetNoArena();
}
inline void MSG_Req_CreateGuild_CS::_internal_set_guildname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_CreateGuild_CS::set_guildname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Req_CreateGuild_CS.guildname)
}
inline void MSG_Req_CreateGuild_CS::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Req_CreateGuild_CS.guildname)
}
inline void MSG_Req_CreateGuild_CS::set_guildname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Req_CreateGuild_CS.guildname)
}
inline std::string* MSG_Req_CreateGuild_CS::_internal_mutable_guildname() {
  _has_bits_[0] |= 0x00000001u;
  return guildname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_CreateGuild_CS::release_guildname() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_CreateGuild_CS.guildname)
  if (!_internal_has_guildname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return guildname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_CreateGuild_CS::set_allocated_guildname(std::string* guildname) {
  if (guildname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guildname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_CreateGuild_CS.guildname)
}

// optional string icon = 2;
inline bool MSG_Req_CreateGuild_CS::_internal_has_icon() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_CreateGuild_CS::has_icon() const {
  return _internal_has_icon();
}
inline void MSG_Req_CreateGuild_CS::clear_icon() {
  icon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_Req_CreateGuild_CS::icon() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_CreateGuild_CS.icon)
  return _internal_icon();
}
inline void MSG_Req_CreateGuild_CS::set_icon(const std::string& value) {
  _internal_set_icon(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_CreateGuild_CS.icon)
}
inline std::string* MSG_Req_CreateGuild_CS::mutable_icon() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_CreateGuild_CS.icon)
  return _internal_mutable_icon();
}
inline const std::string& MSG_Req_CreateGuild_CS::_internal_icon() const {
  return icon_.GetNoArena();
}
inline void MSG_Req_CreateGuild_CS::_internal_set_icon(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_CreateGuild_CS::set_icon(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Req_CreateGuild_CS.icon)
}
inline void MSG_Req_CreateGuild_CS::set_icon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Req_CreateGuild_CS.icon)
}
inline void MSG_Req_CreateGuild_CS::set_icon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Req_CreateGuild_CS.icon)
}
inline std::string* MSG_Req_CreateGuild_CS::_internal_mutable_icon() {
  _has_bits_[0] |= 0x00000002u;
  return icon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_CreateGuild_CS::release_icon() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_CreateGuild_CS.icon)
  if (!_internal_has_icon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return icon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_CreateGuild_CS::set_allocated_icon(std::string* icon) {
  if (icon != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  icon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_CreateGuild_CS.icon)
}

// -------------------------------------------------------------------

// MSG_Ret_CreateGuild_SC

// optional string guildname = 1;
inline bool MSG_Ret_CreateGuild_SC::_internal_has_guildname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_CreateGuild_SC::has_guildname() const {
  return _internal_has_guildname();
}
inline void MSG_Ret_CreateGuild_SC::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_CreateGuild_SC::guildname() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_CreateGuild_SC.guildname)
  return _internal_guildname();
}
inline void MSG_Ret_CreateGuild_SC::set_guildname(const std::string& value) {
  _internal_set_guildname(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_CreateGuild_SC.guildname)
}
inline std::string* MSG_Ret_CreateGuild_SC::mutable_guildname() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_CreateGuild_SC.guildname)
  return _internal_mutable_guildname();
}
inline const std::string& MSG_Ret_CreateGuild_SC::_internal_guildname() const {
  return guildname_.GetNoArena();
}
inline void MSG_Ret_CreateGuild_SC::_internal_set_guildname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_CreateGuild_SC::set_guildname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Ret_CreateGuild_SC.guildname)
}
inline void MSG_Ret_CreateGuild_SC::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Ret_CreateGuild_SC.guildname)
}
inline void MSG_Ret_CreateGuild_SC::set_guildname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Ret_CreateGuild_SC.guildname)
}
inline std::string* MSG_Ret_CreateGuild_SC::_internal_mutable_guildname() {
  _has_bits_[0] |= 0x00000001u;
  return guildname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_CreateGuild_SC::release_guildname() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_CreateGuild_SC.guildname)
  if (!_internal_has_guildname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return guildname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_CreateGuild_SC::set_allocated_guildname(std::string* guildname) {
  if (guildname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guildname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_CreateGuild_SC.guildname)
}

// optional bool issucc = 2;
inline bool MSG_Ret_CreateGuild_SC::_internal_has_issucc() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_CreateGuild_SC::has_issucc() const {
  return _internal_has_issucc();
}
inline void MSG_Ret_CreateGuild_SC::clear_issucc() {
  issucc_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Ret_CreateGuild_SC::_internal_issucc() const {
  return issucc_;
}
inline bool MSG_Ret_CreateGuild_SC::issucc() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_CreateGuild_SC.issucc)
  return _internal_issucc();
}
inline void MSG_Ret_CreateGuild_SC::_internal_set_issucc(bool value) {
  _has_bits_[0] |= 0x00000002u;
  issucc_ = value;
}
inline void MSG_Ret_CreateGuild_SC::set_issucc(bool value) {
  _internal_set_issucc(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_CreateGuild_SC.issucc)
}

// -------------------------------------------------------------------

// MSG_Req_SetGuildNotify_CS

// optional string notify = 3;
inline bool MSG_Req_SetGuildNotify_CS::_internal_has_notify() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_SetGuildNotify_CS::has_notify() const {
  return _internal_has_notify();
}
inline void MSG_Req_SetGuildNotify_CS::clear_notify() {
  notify_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_SetGuildNotify_CS::notify() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_SetGuildNotify_CS.notify)
  return _internal_notify();
}
inline void MSG_Req_SetGuildNotify_CS::set_notify(const std::string& value) {
  _internal_set_notify(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_SetGuildNotify_CS.notify)
}
inline std::string* MSG_Req_SetGuildNotify_CS::mutable_notify() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_SetGuildNotify_CS.notify)
  return _internal_mutable_notify();
}
inline const std::string& MSG_Req_SetGuildNotify_CS::_internal_notify() const {
  return notify_.GetNoArena();
}
inline void MSG_Req_SetGuildNotify_CS::_internal_set_notify(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  notify_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_SetGuildNotify_CS::set_notify(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  notify_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Req_SetGuildNotify_CS.notify)
}
inline void MSG_Req_SetGuildNotify_CS::set_notify(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  notify_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Req_SetGuildNotify_CS.notify)
}
inline void MSG_Req_SetGuildNotify_CS::set_notify(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  notify_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Req_SetGuildNotify_CS.notify)
}
inline std::string* MSG_Req_SetGuildNotify_CS::_internal_mutable_notify() {
  _has_bits_[0] |= 0x00000001u;
  return notify_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_SetGuildNotify_CS::release_notify() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_SetGuildNotify_CS.notify)
  if (!_internal_has_notify()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return notify_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_SetGuildNotify_CS::set_allocated_notify(std::string* notify) {
  if (notify != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  notify_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), notify);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_SetGuildNotify_CS.notify)
}

// -------------------------------------------------------------------

// MSG_Ret_SetGuildNotify_SC

// optional bool issucc = 1;
inline bool MSG_Ret_SetGuildNotify_SC::_internal_has_issucc() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_SetGuildNotify_SC::has_issucc() const {
  return _internal_has_issucc();
}
inline void MSG_Ret_SetGuildNotify_SC::clear_issucc() {
  issucc_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_Ret_SetGuildNotify_SC::_internal_issucc() const {
  return issucc_;
}
inline bool MSG_Ret_SetGuildNotify_SC::issucc() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_SetGuildNotify_SC.issucc)
  return _internal_issucc();
}
inline void MSG_Ret_SetGuildNotify_SC::_internal_set_issucc(bool value) {
  _has_bits_[0] |= 0x00000001u;
  issucc_ = value;
}
inline void MSG_Ret_SetGuildNotify_SC::set_issucc(bool value) {
  _internal_set_issucc(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_SetGuildNotify_SC.issucc)
}

// -------------------------------------------------------------------

// MSG_Req_GuildInfo_CS

// optional uint64 guildid = 1;
inline bool MSG_Req_GuildInfo_CS::_internal_has_guildid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_GuildInfo_CS::has_guildid() const {
  return _internal_has_guildid();
}
inline void MSG_Req_GuildInfo_CS::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_GuildInfo_CS::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_GuildInfo_CS::guildid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_GuildInfo_CS.guildid)
  return _internal_guildid();
}
inline void MSG_Req_GuildInfo_CS::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  guildid_ = value;
}
inline void MSG_Req_GuildInfo_CS::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_GuildInfo_CS.guildid)
}

// -------------------------------------------------------------------

// MSG_Ret_GuildInfo_SC

// optional .guild.guildInfo guildinfo = 1;
inline bool MSG_Ret_GuildInfo_SC::_internal_has_guildinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || guildinfo_ != nullptr);
  return value;
}
inline bool MSG_Ret_GuildInfo_SC::has_guildinfo() const {
  return _internal_has_guildinfo();
}
inline void MSG_Ret_GuildInfo_SC::clear_guildinfo() {
  if (guildinfo_ != nullptr) guildinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::guild::guildInfo& MSG_Ret_GuildInfo_SC::_internal_guildinfo() const {
  const ::guild::guildInfo* p = guildinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::guild::guildInfo*>(
      &::guild::_guildInfo_default_instance_);
}
inline const ::guild::guildInfo& MSG_Ret_GuildInfo_SC::guildinfo() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildInfo_SC.guildinfo)
  return _internal_guildinfo();
}
inline ::guild::guildInfo* MSG_Ret_GuildInfo_SC::release_guildinfo() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_GuildInfo_SC.guildinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::guild::guildInfo* temp = guildinfo_;
  guildinfo_ = nullptr;
  return temp;
}
inline ::guild::guildInfo* MSG_Ret_GuildInfo_SC::_internal_mutable_guildinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (guildinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::guild::guildInfo>(GetArenaNoVirtual());
    guildinfo_ = p;
  }
  return guildinfo_;
}
inline ::guild::guildInfo* MSG_Ret_GuildInfo_SC::mutable_guildinfo() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildInfo_SC.guildinfo)
  return _internal_mutable_guildinfo();
}
inline void MSG_Ret_GuildInfo_SC::set_allocated_guildinfo(::guild::guildInfo* guildinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete guildinfo_;
  }
  if (guildinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      guildinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guildinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guildinfo_ = guildinfo;
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_GuildInfo_SC.guildinfo)
}

// optional .guild.guildMember myinfo = 2;
inline bool MSG_Ret_GuildInfo_SC::_internal_has_myinfo() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || myinfo_ != nullptr);
  return value;
}
inline bool MSG_Ret_GuildInfo_SC::has_myinfo() const {
  return _internal_has_myinfo();
}
inline void MSG_Ret_GuildInfo_SC::clear_myinfo() {
  if (myinfo_ != nullptr) myinfo_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::guild::guildMember& MSG_Ret_GuildInfo_SC::_internal_myinfo() const {
  const ::guild::guildMember* p = myinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::guild::guildMember*>(
      &::guild::_guildMember_default_instance_);
}
inline const ::guild::guildMember& MSG_Ret_GuildInfo_SC::myinfo() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildInfo_SC.myinfo)
  return _internal_myinfo();
}
inline ::guild::guildMember* MSG_Ret_GuildInfo_SC::release_myinfo() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_GuildInfo_SC.myinfo)
  _has_bits_[0] &= ~0x00000002u;
  ::guild::guildMember* temp = myinfo_;
  myinfo_ = nullptr;
  return temp;
}
inline ::guild::guildMember* MSG_Ret_GuildInfo_SC::_internal_mutable_myinfo() {
  _has_bits_[0] |= 0x00000002u;
  if (myinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::guild::guildMember>(GetArenaNoVirtual());
    myinfo_ = p;
  }
  return myinfo_;
}
inline ::guild::guildMember* MSG_Ret_GuildInfo_SC::mutable_myinfo() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildInfo_SC.myinfo)
  return _internal_mutable_myinfo();
}
inline void MSG_Ret_GuildInfo_SC::set_allocated_myinfo(::guild::guildMember* myinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete myinfo_;
  }
  if (myinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      myinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, myinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  myinfo_ = myinfo;
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_GuildInfo_SC.myinfo)
}

// -------------------------------------------------------------------

// MSG_Req_GuildList_CS

// required uint32 page = 1;
inline bool MSG_Req_GuildList_CS::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_GuildList_CS::has_page() const {
  return _internal_has_page();
}
inline void MSG_Req_GuildList_CS::clear_page() {
  page_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_GuildList_CS::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_GuildList_CS::page() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_GuildList_CS.page)
  return _internal_page();
}
inline void MSG_Req_GuildList_CS::_internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  page_ = value;
}
inline void MSG_Req_GuildList_CS::set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_GuildList_CS.page)
}

// optional uint32 countryid = 2;
inline bool MSG_Req_GuildList_CS::_internal_has_countryid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_GuildList_CS::has_countryid() const {
  return _internal_has_countryid();
}
inline void MSG_Req_GuildList_CS::clear_countryid() {
  countryid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_GuildList_CS::_internal_countryid() const {
  return countryid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_GuildList_CS::countryid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_GuildList_CS.countryid)
  return _internal_countryid();
}
inline void MSG_Req_GuildList_CS::_internal_set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  countryid_ = value;
}
inline void MSG_Req_GuildList_CS::set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_countryid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_GuildList_CS.countryid)
}

// -------------------------------------------------------------------

// guildListItem

// optional .guild.guildInfo guild = 1;
inline bool guildListItem::_internal_has_guild() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || guild_ != nullptr);
  return value;
}
inline bool guildListItem::has_guild() const {
  return _internal_has_guild();
}
inline void guildListItem::clear_guild() {
  if (guild_ != nullptr) guild_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::guild::guildInfo& guildListItem::_internal_guild() const {
  const ::guild::guildInfo* p = guild_;
  return p != nullptr ? *p : *reinterpret_cast<const ::guild::guildInfo*>(
      &::guild::_guildInfo_default_instance_);
}
inline const ::guild::guildInfo& guildListItem::guild() const {
  // @@protoc_insertion_point(field_get:guild.guildListItem.guild)
  return _internal_guild();
}
inline ::guild::guildInfo* guildListItem::release_guild() {
  // @@protoc_insertion_point(field_release:guild.guildListItem.guild)
  _has_bits_[0] &= ~0x00000001u;
  ::guild::guildInfo* temp = guild_;
  guild_ = nullptr;
  return temp;
}
inline ::guild::guildInfo* guildListItem::_internal_mutable_guild() {
  _has_bits_[0] |= 0x00000001u;
  if (guild_ == nullptr) {
    auto* p = CreateMaybeMessage<::guild::guildInfo>(GetArenaNoVirtual());
    guild_ = p;
  }
  return guild_;
}
inline ::guild::guildInfo* guildListItem::mutable_guild() {
  // @@protoc_insertion_point(field_mutable:guild.guildListItem.guild)
  return _internal_mutable_guild();
}
inline void guildListItem::set_allocated_guild(::guild::guildInfo* guild) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete guild_;
  }
  if (guild) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      guild = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guild_ = guild;
  // @@protoc_insertion_point(field_set_allocated:guild.guildListItem.guild)
}

// optional uint32 guildtype = 2;
inline bool guildListItem::_internal_has_guildtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool guildListItem::has_guildtype() const {
  return _internal_has_guildtype();
}
inline void guildListItem::clear_guildtype() {
  guildtype_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildListItem::_internal_guildtype() const {
  return guildtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildListItem::guildtype() const {
  // @@protoc_insertion_point(field_get:guild.guildListItem.guildtype)
  return _internal_guildtype();
}
inline void guildListItem::_internal_set_guildtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  guildtype_ = value;
}
inline void guildListItem::set_guildtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guildtype(value);
  // @@protoc_insertion_point(field_set:guild.guildListItem.guildtype)
}

// -------------------------------------------------------------------

// MSG_Ret_GuildList_SC

// repeated .guild.guildListItem guildList = 1;
inline int MSG_Ret_GuildList_SC::_internal_guildlist_size() const {
  return guildlist_.size();
}
inline int MSG_Ret_GuildList_SC::guildlist_size() const {
  return _internal_guildlist_size();
}
inline void MSG_Ret_GuildList_SC::clear_guildlist() {
  guildlist_.Clear();
}
inline ::guild::guildListItem* MSG_Ret_GuildList_SC::mutable_guildlist(int index) {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildList_SC.guildList)
  return guildlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildListItem >*
MSG_Ret_GuildList_SC::mutable_guildlist() {
  // @@protoc_insertion_point(field_mutable_list:guild.MSG_Ret_GuildList_SC.guildList)
  return &guildlist_;
}
inline const ::guild::guildListItem& MSG_Ret_GuildList_SC::_internal_guildlist(int index) const {
  return guildlist_.Get(index);
}
inline const ::guild::guildListItem& MSG_Ret_GuildList_SC::guildlist(int index) const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildList_SC.guildList)
  return _internal_guildlist(index);
}
inline ::guild::guildListItem* MSG_Ret_GuildList_SC::_internal_add_guildlist() {
  return guildlist_.Add();
}
inline ::guild::guildListItem* MSG_Ret_GuildList_SC::add_guildlist() {
  // @@protoc_insertion_point(field_add:guild.MSG_Ret_GuildList_SC.guildList)
  return _internal_add_guildlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildListItem >&
MSG_Ret_GuildList_SC::guildlist() const {
  // @@protoc_insertion_point(field_list:guild.MSG_Ret_GuildList_SC.guildList)
  return guildlist_;
}

// optional uint32 allpage = 2;
inline bool MSG_Ret_GuildList_SC::_internal_has_allpage() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GuildList_SC::has_allpage() const {
  return _internal_has_allpage();
}
inline void MSG_Ret_GuildList_SC::clear_allpage() {
  allpage_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildList_SC::_internal_allpage() const {
  return allpage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildList_SC::allpage() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildList_SC.allpage)
  return _internal_allpage();
}
inline void MSG_Ret_GuildList_SC::_internal_set_allpage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  allpage_ = value;
}
inline void MSG_Ret_GuildList_SC::set_allpage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_allpage(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildList_SC.allpage)
}

// optional uint32 page = 3;
inline bool MSG_Ret_GuildList_SC::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_GuildList_SC::has_page() const {
  return _internal_has_page();
}
inline void MSG_Ret_GuildList_SC::clear_page() {
  page_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildList_SC::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildList_SC::page() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildList_SC.page)
  return _internal_page();
}
inline void MSG_Ret_GuildList_SC::_internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  page_ = value;
}
inline void MSG_Ret_GuildList_SC::set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildList_SC.page)
}

// optional uint32 countryid = 4;
inline bool MSG_Ret_GuildList_SC::_internal_has_countryid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_GuildList_SC::has_countryid() const {
  return _internal_has_countryid();
}
inline void MSG_Ret_GuildList_SC::clear_countryid() {
  countryid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildList_SC::_internal_countryid() const {
  return countryid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildList_SC::countryid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildList_SC.countryid)
  return _internal_countryid();
}
inline void MSG_Ret_GuildList_SC::_internal_set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  countryid_ = value;
}
inline void MSG_Ret_GuildList_SC::set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_countryid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildList_SC.countryid)
}

// -------------------------------------------------------------------

// MSG_Req_ApplyForGuild_CS

// optional uint64 guildid = 1;
inline bool MSG_Req_ApplyForGuild_CS::_internal_has_guildid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_ApplyForGuild_CS::has_guildid() const {
  return _internal_has_guildid();
}
inline void MSG_Req_ApplyForGuild_CS::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_ApplyForGuild_CS::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_ApplyForGuild_CS::guildid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ApplyForGuild_CS.guildid)
  return _internal_guildid();
}
inline void MSG_Req_ApplyForGuild_CS::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  guildid_ = value;
}
inline void MSG_Req_ApplyForGuild_CS::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ApplyForGuild_CS.guildid)
}

// optional bool flag = 2;
inline bool MSG_Req_ApplyForGuild_CS::_internal_has_flag() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_ApplyForGuild_CS::has_flag() const {
  return _internal_has_flag();
}
inline void MSG_Req_ApplyForGuild_CS::clear_flag() {
  flag_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Req_ApplyForGuild_CS::_internal_flag() const {
  return flag_;
}
inline bool MSG_Req_ApplyForGuild_CS::flag() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ApplyForGuild_CS.flag)
  return _internal_flag();
}
inline void MSG_Req_ApplyForGuild_CS::_internal_set_flag(bool value) {
  _has_bits_[0] |= 0x00000002u;
  flag_ = value;
}
inline void MSG_Req_ApplyForGuild_CS::set_flag(bool value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ApplyForGuild_CS.flag)
}

// -------------------------------------------------------------------

// MSG_Ret_ApplyForGuild_SC

// optional uint64 guildid = 1;
inline bool MSG_Ret_ApplyForGuild_SC::_internal_has_guildid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_ApplyForGuild_SC::has_guildid() const {
  return _internal_has_guildid();
}
inline void MSG_Ret_ApplyForGuild_SC::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_ApplyForGuild_SC::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_ApplyForGuild_SC::guildid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_ApplyForGuild_SC.guildid)
  return _internal_guildid();
}
inline void MSG_Ret_ApplyForGuild_SC::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  guildid_ = value;
}
inline void MSG_Ret_ApplyForGuild_SC::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_ApplyForGuild_SC.guildid)
}

// optional bool issucc = 2;
inline bool MSG_Ret_ApplyForGuild_SC::_internal_has_issucc() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_ApplyForGuild_SC::has_issucc() const {
  return _internal_has_issucc();
}
inline void MSG_Ret_ApplyForGuild_SC::clear_issucc() {
  issucc_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Ret_ApplyForGuild_SC::_internal_issucc() const {
  return issucc_;
}
inline bool MSG_Ret_ApplyForGuild_SC::issucc() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_ApplyForGuild_SC.issucc)
  return _internal_issucc();
}
inline void MSG_Ret_ApplyForGuild_SC::_internal_set_issucc(bool value) {
  _has_bits_[0] |= 0x00000002u;
  issucc_ = value;
}
inline void MSG_Ret_ApplyForGuild_SC::set_issucc(bool value) {
  _internal_set_issucc(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_ApplyForGuild_SC.issucc)
}

// optional bool flag = 3;
inline bool MSG_Ret_ApplyForGuild_SC::_internal_has_flag() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_ApplyForGuild_SC::has_flag() const {
  return _internal_has_flag();
}
inline void MSG_Ret_ApplyForGuild_SC::clear_flag() {
  flag_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool MSG_Ret_ApplyForGuild_SC::_internal_flag() const {
  return flag_;
}
inline bool MSG_Ret_ApplyForGuild_SC::flag() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_ApplyForGuild_SC.flag)
  return _internal_flag();
}
inline void MSG_Ret_ApplyForGuild_SC::_internal_set_flag(bool value) {
  _has_bits_[0] |= 0x00000004u;
  flag_ = value;
}
inline void MSG_Ret_ApplyForGuild_SC::set_flag(bool value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_ApplyForGuild_SC.flag)
}

// -------------------------------------------------------------------

// stApplyForItem

// optional uint64 applyid = 1;
inline bool stApplyForItem::_internal_has_applyid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool stApplyForItem::has_applyid() const {
  return _internal_has_applyid();
}
inline void stApplyForItem::clear_applyid() {
  applyid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 stApplyForItem::_internal_applyid() const {
  return applyid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 stApplyForItem::applyid() const {
  // @@protoc_insertion_point(field_get:guild.stApplyForItem.applyid)
  return _internal_applyid();
}
inline void stApplyForItem::_internal_set_applyid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  applyid_ = value;
}
inline void stApplyForItem::set_applyid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_applyid(value);
  // @@protoc_insertion_point(field_set:guild.stApplyForItem.applyid)
}

// optional string applyname = 2;
inline bool stApplyForItem::_internal_has_applyname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool stApplyForItem::has_applyname() const {
  return _internal_has_applyname();
}
inline void stApplyForItem::clear_applyname() {
  applyname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& stApplyForItem::applyname() const {
  // @@protoc_insertion_point(field_get:guild.stApplyForItem.applyname)
  return _internal_applyname();
}
inline void stApplyForItem::set_applyname(const std::string& value) {
  _internal_set_applyname(value);
  // @@protoc_insertion_point(field_set:guild.stApplyForItem.applyname)
}
inline std::string* stApplyForItem::mutable_applyname() {
  // @@protoc_insertion_point(field_mutable:guild.stApplyForItem.applyname)
  return _internal_mutable_applyname();
}
inline const std::string& stApplyForItem::_internal_applyname() const {
  return applyname_.GetNoArena();
}
inline void stApplyForItem::_internal_set_applyname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  applyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void stApplyForItem::set_applyname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  applyname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.stApplyForItem.applyname)
}
inline void stApplyForItem::set_applyname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  applyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.stApplyForItem.applyname)
}
inline void stApplyForItem::set_applyname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  applyname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.stApplyForItem.applyname)
}
inline std::string* stApplyForItem::_internal_mutable_applyname() {
  _has_bits_[0] |= 0x00000001u;
  return applyname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* stApplyForItem::release_applyname() {
  // @@protoc_insertion_point(field_release:guild.stApplyForItem.applyname)
  if (!_internal_has_applyname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return applyname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void stApplyForItem::set_allocated_applyname(std::string* applyname) {
  if (applyname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  applyname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), applyname);
  // @@protoc_insertion_point(field_set_allocated:guild.stApplyForItem.applyname)
}

// optional bool issucc = 3 [default = false];
inline bool stApplyForItem::_internal_has_issucc() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool stApplyForItem::has_issucc() const {
  return _internal_has_issucc();
}
inline void stApplyForItem::clear_issucc() {
  issucc_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool stApplyForItem::_internal_issucc() const {
  return issucc_;
}
inline bool stApplyForItem::issucc() const {
  // @@protoc_insertion_point(field_get:guild.stApplyForItem.issucc)
  return _internal_issucc();
}
inline void stApplyForItem::_internal_set_issucc(bool value) {
  _has_bits_[0] |= 0x00000004u;
  issucc_ = value;
}
inline void stApplyForItem::set_issucc(bool value) {
  _internal_set_issucc(value);
  // @@protoc_insertion_point(field_set:guild.stApplyForItem.issucc)
}

// -------------------------------------------------------------------

// MSG_Req_AnswerApplyForGuild_CS

// repeated .guild.stApplyForItem applyinfo = 1;
inline int MSG_Req_AnswerApplyForGuild_CS::_internal_applyinfo_size() const {
  return applyinfo_.size();
}
inline int MSG_Req_AnswerApplyForGuild_CS::applyinfo_size() const {
  return _internal_applyinfo_size();
}
inline void MSG_Req_AnswerApplyForGuild_CS::clear_applyinfo() {
  applyinfo_.Clear();
}
inline ::guild::stApplyForItem* MSG_Req_AnswerApplyForGuild_CS::mutable_applyinfo(int index) {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_AnswerApplyForGuild_CS.applyinfo)
  return applyinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::stApplyForItem >*
MSG_Req_AnswerApplyForGuild_CS::mutable_applyinfo() {
  // @@protoc_insertion_point(field_mutable_list:guild.MSG_Req_AnswerApplyForGuild_CS.applyinfo)
  return &applyinfo_;
}
inline const ::guild::stApplyForItem& MSG_Req_AnswerApplyForGuild_CS::_internal_applyinfo(int index) const {
  return applyinfo_.Get(index);
}
inline const ::guild::stApplyForItem& MSG_Req_AnswerApplyForGuild_CS::applyinfo(int index) const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_AnswerApplyForGuild_CS.applyinfo)
  return _internal_applyinfo(index);
}
inline ::guild::stApplyForItem* MSG_Req_AnswerApplyForGuild_CS::_internal_add_applyinfo() {
  return applyinfo_.Add();
}
inline ::guild::stApplyForItem* MSG_Req_AnswerApplyForGuild_CS::add_applyinfo() {
  // @@protoc_insertion_point(field_add:guild.MSG_Req_AnswerApplyForGuild_CS.applyinfo)
  return _internal_add_applyinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::stApplyForItem >&
MSG_Req_AnswerApplyForGuild_CS::applyinfo() const {
  // @@protoc_insertion_point(field_list:guild.MSG_Req_AnswerApplyForGuild_CS.applyinfo)
  return applyinfo_;
}

// optional bool accept = 2;
inline bool MSG_Req_AnswerApplyForGuild_CS::_internal_has_accept() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_AnswerApplyForGuild_CS::has_accept() const {
  return _internal_has_accept();
}
inline void MSG_Req_AnswerApplyForGuild_CS::clear_accept() {
  accept_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_Req_AnswerApplyForGuild_CS::_internal_accept() const {
  return accept_;
}
inline bool MSG_Req_AnswerApplyForGuild_CS::accept() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_AnswerApplyForGuild_CS.accept)
  return _internal_accept();
}
inline void MSG_Req_AnswerApplyForGuild_CS::_internal_set_accept(bool value) {
  _has_bits_[0] |= 0x00000001u;
  accept_ = value;
}
inline void MSG_Req_AnswerApplyForGuild_CS::set_accept(bool value) {
  _internal_set_accept(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_AnswerApplyForGuild_CS.accept)
}

// -------------------------------------------------------------------

// MSG_Ret_AnswerApplyForGuild_SC

// repeated .guild.stApplyForItem retlist = 1;
inline int MSG_Ret_AnswerApplyForGuild_SC::_internal_retlist_size() const {
  return retlist_.size();
}
inline int MSG_Ret_AnswerApplyForGuild_SC::retlist_size() const {
  return _internal_retlist_size();
}
inline void MSG_Ret_AnswerApplyForGuild_SC::clear_retlist() {
  retlist_.Clear();
}
inline ::guild::stApplyForItem* MSG_Ret_AnswerApplyForGuild_SC::mutable_retlist(int index) {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_AnswerApplyForGuild_SC.retlist)
  return retlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::stApplyForItem >*
MSG_Ret_AnswerApplyForGuild_SC::mutable_retlist() {
  // @@protoc_insertion_point(field_mutable_list:guild.MSG_Ret_AnswerApplyForGuild_SC.retlist)
  return &retlist_;
}
inline const ::guild::stApplyForItem& MSG_Ret_AnswerApplyForGuild_SC::_internal_retlist(int index) const {
  return retlist_.Get(index);
}
inline const ::guild::stApplyForItem& MSG_Ret_AnswerApplyForGuild_SC::retlist(int index) const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_AnswerApplyForGuild_SC.retlist)
  return _internal_retlist(index);
}
inline ::guild::stApplyForItem* MSG_Ret_AnswerApplyForGuild_SC::_internal_add_retlist() {
  return retlist_.Add();
}
inline ::guild::stApplyForItem* MSG_Ret_AnswerApplyForGuild_SC::add_retlist() {
  // @@protoc_insertion_point(field_add:guild.MSG_Ret_AnswerApplyForGuild_SC.retlist)
  return _internal_add_retlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::stApplyForItem >&
MSG_Ret_AnswerApplyForGuild_SC::retlist() const {
  // @@protoc_insertion_point(field_list:guild.MSG_Ret_AnswerApplyForGuild_SC.retlist)
  return retlist_;
}

// -------------------------------------------------------------------

// MSG_Ret_MyGuildApply_Result_SC

// optional .guild.stApplyForItem result = 1;
inline bool MSG_Ret_MyGuildApply_Result_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || result_ != nullptr);
  return value;
}
inline bool MSG_Ret_MyGuildApply_Result_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_Ret_MyGuildApply_Result_SC::clear_result() {
  if (result_ != nullptr) result_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::guild::stApplyForItem& MSG_Ret_MyGuildApply_Result_SC::_internal_result() const {
  const ::guild::stApplyForItem* p = result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::guild::stApplyForItem*>(
      &::guild::_stApplyForItem_default_instance_);
}
inline const ::guild::stApplyForItem& MSG_Ret_MyGuildApply_Result_SC::result() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_MyGuildApply_Result_SC.result)
  return _internal_result();
}
inline ::guild::stApplyForItem* MSG_Ret_MyGuildApply_Result_SC::release_result() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_MyGuildApply_Result_SC.result)
  _has_bits_[0] &= ~0x00000001u;
  ::guild::stApplyForItem* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::guild::stApplyForItem* MSG_Ret_MyGuildApply_Result_SC::_internal_mutable_result() {
  _has_bits_[0] |= 0x00000001u;
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::guild::stApplyForItem>(GetArenaNoVirtual());
    result_ = p;
  }
  return result_;
}
inline ::guild::stApplyForItem* MSG_Ret_MyGuildApply_Result_SC::mutable_result() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_MyGuildApply_Result_SC.result)
  return _internal_mutable_result();
}
inline void MSG_Ret_MyGuildApply_Result_SC::set_allocated_result(::guild::stApplyForItem* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_MyGuildApply_Result_SC.result)
}

// -------------------------------------------------------------------

// MSG_Req_GuildMemberList_CS

// required uint32 page = 1;
inline bool MSG_Req_GuildMemberList_CS::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_GuildMemberList_CS::has_page() const {
  return _internal_has_page();
}
inline void MSG_Req_GuildMemberList_CS::clear_page() {
  page_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_GuildMemberList_CS::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_GuildMemberList_CS::page() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_GuildMemberList_CS.page)
  return _internal_page();
}
inline void MSG_Req_GuildMemberList_CS::_internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  page_ = value;
}
inline void MSG_Req_GuildMemberList_CS::set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_GuildMemberList_CS.page)
}

// optional .guild.ReqMemberListType reqtype = 2;
inline bool MSG_Req_GuildMemberList_CS::_internal_has_reqtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_GuildMemberList_CS::has_reqtype() const {
  return _internal_has_reqtype();
}
inline void MSG_Req_GuildMemberList_CS::clear_reqtype() {
  reqtype_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::guild::ReqMemberListType MSG_Req_GuildMemberList_CS::_internal_reqtype() const {
  return static_cast< ::guild::ReqMemberListType >(reqtype_);
}
inline ::guild::ReqMemberListType MSG_Req_GuildMemberList_CS::reqtype() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_GuildMemberList_CS.reqtype)
  return _internal_reqtype();
}
inline void MSG_Req_GuildMemberList_CS::_internal_set_reqtype(::guild::ReqMemberListType value) {
  assert(::guild::ReqMemberListType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  reqtype_ = value;
}
inline void MSG_Req_GuildMemberList_CS::set_reqtype(::guild::ReqMemberListType value) {
  _internal_set_reqtype(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_GuildMemberList_CS.reqtype)
}

// -------------------------------------------------------------------

// MSG_Ret_GuildMemberList_SC

// optional .guild.guildInfo guildinfo = 1;
inline bool MSG_Ret_GuildMemberList_SC::_internal_has_guildinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || guildinfo_ != nullptr);
  return value;
}
inline bool MSG_Ret_GuildMemberList_SC::has_guildinfo() const {
  return _internal_has_guildinfo();
}
inline void MSG_Ret_GuildMemberList_SC::clear_guildinfo() {
  if (guildinfo_ != nullptr) guildinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::guild::guildInfo& MSG_Ret_GuildMemberList_SC::_internal_guildinfo() const {
  const ::guild::guildInfo* p = guildinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::guild::guildInfo*>(
      &::guild::_guildInfo_default_instance_);
}
inline const ::guild::guildInfo& MSG_Ret_GuildMemberList_SC::guildinfo() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildMemberList_SC.guildinfo)
  return _internal_guildinfo();
}
inline ::guild::guildInfo* MSG_Ret_GuildMemberList_SC::release_guildinfo() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_GuildMemberList_SC.guildinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::guild::guildInfo* temp = guildinfo_;
  guildinfo_ = nullptr;
  return temp;
}
inline ::guild::guildInfo* MSG_Ret_GuildMemberList_SC::_internal_mutable_guildinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (guildinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::guild::guildInfo>(GetArenaNoVirtual());
    guildinfo_ = p;
  }
  return guildinfo_;
}
inline ::guild::guildInfo* MSG_Ret_GuildMemberList_SC::mutable_guildinfo() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildMemberList_SC.guildinfo)
  return _internal_mutable_guildinfo();
}
inline void MSG_Ret_GuildMemberList_SC::set_allocated_guildinfo(::guild::guildInfo* guildinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete guildinfo_;
  }
  if (guildinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      guildinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guildinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guildinfo_ = guildinfo;
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_GuildMemberList_SC.guildinfo)
}

// repeated .guild.guildMember members = 2;
inline int MSG_Ret_GuildMemberList_SC::_internal_members_size() const {
  return members_.size();
}
inline int MSG_Ret_GuildMemberList_SC::members_size() const {
  return _internal_members_size();
}
inline void MSG_Ret_GuildMemberList_SC::clear_members() {
  members_.Clear();
}
inline ::guild::guildMember* MSG_Ret_GuildMemberList_SC::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildMemberList_SC.members)
  return members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildMember >*
MSG_Ret_GuildMemberList_SC::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:guild.MSG_Ret_GuildMemberList_SC.members)
  return &members_;
}
inline const ::guild::guildMember& MSG_Ret_GuildMemberList_SC::_internal_members(int index) const {
  return members_.Get(index);
}
inline const ::guild::guildMember& MSG_Ret_GuildMemberList_SC::members(int index) const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildMemberList_SC.members)
  return _internal_members(index);
}
inline ::guild::guildMember* MSG_Ret_GuildMemberList_SC::_internal_add_members() {
  return members_.Add();
}
inline ::guild::guildMember* MSG_Ret_GuildMemberList_SC::add_members() {
  // @@protoc_insertion_point(field_add:guild.MSG_Ret_GuildMemberList_SC.members)
  return _internal_add_members();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildMember >&
MSG_Ret_GuildMemberList_SC::members() const {
  // @@protoc_insertion_point(field_list:guild.MSG_Ret_GuildMemberList_SC.members)
  return members_;
}

// optional .guild.ReqMemberListType reqtype = 3;
inline bool MSG_Ret_GuildMemberList_SC::_internal_has_reqtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_GuildMemberList_SC::has_reqtype() const {
  return _internal_has_reqtype();
}
inline void MSG_Ret_GuildMemberList_SC::clear_reqtype() {
  reqtype_ = 1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::guild::ReqMemberListType MSG_Ret_GuildMemberList_SC::_internal_reqtype() const {
  return static_cast< ::guild::ReqMemberListType >(reqtype_);
}
inline ::guild::ReqMemberListType MSG_Ret_GuildMemberList_SC::reqtype() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildMemberList_SC.reqtype)
  return _internal_reqtype();
}
inline void MSG_Ret_GuildMemberList_SC::_internal_set_reqtype(::guild::ReqMemberListType value) {
  assert(::guild::ReqMemberListType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  reqtype_ = value;
}
inline void MSG_Ret_GuildMemberList_SC::set_reqtype(::guild::ReqMemberListType value) {
  _internal_set_reqtype(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildMemberList_SC.reqtype)
}

// optional uint32 page = 4;
inline bool MSG_Ret_GuildMemberList_SC::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_GuildMemberList_SC::has_page() const {
  return _internal_has_page();
}
inline void MSG_Ret_GuildMemberList_SC::clear_page() {
  page_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildMemberList_SC::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildMemberList_SC::page() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildMemberList_SC.page)
  return _internal_page();
}
inline void MSG_Ret_GuildMemberList_SC::_internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  page_ = value;
}
inline void MSG_Ret_GuildMemberList_SC::set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildMemberList_SC.page)
}

// optional uint32 allpage = 5;
inline bool MSG_Ret_GuildMemberList_SC::_internal_has_allpage() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_GuildMemberList_SC::has_allpage() const {
  return _internal_has_allpage();
}
inline void MSG_Ret_GuildMemberList_SC::clear_allpage() {
  allpage_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildMemberList_SC::_internal_allpage() const {
  return allpage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildMemberList_SC::allpage() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildMemberList_SC.allpage)
  return _internal_allpage();
}
inline void MSG_Ret_GuildMemberList_SC::_internal_set_allpage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  allpage_ = value;
}
inline void MSG_Ret_GuildMemberList_SC::set_allpage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_allpage(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildMemberList_SC.allpage)
}

// -------------------------------------------------------------------

// MSG_Req_IntoGuildMap_CS

// -------------------------------------------------------------------

// MSG_Req_CiTanEnemyGuildList_CS

// -------------------------------------------------------------------

// CiTanEnemyGuildItem

// optional uint64 guildid = 1;
inline bool CiTanEnemyGuildItem::_internal_has_guildid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CiTanEnemyGuildItem::has_guildid() const {
  return _internal_has_guildid();
}
inline void CiTanEnemyGuildItem::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CiTanEnemyGuildItem::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CiTanEnemyGuildItem::guildid() const {
  // @@protoc_insertion_point(field_get:guild.CiTanEnemyGuildItem.guildid)
  return _internal_guildid();
}
inline void CiTanEnemyGuildItem::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  guildid_ = value;
}
inline void CiTanEnemyGuildItem::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:guild.CiTanEnemyGuildItem.guildid)
}

// optional uint32 guildlevel = 2;
inline bool CiTanEnemyGuildItem::_internal_has_guildlevel() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CiTanEnemyGuildItem::has_guildlevel() const {
  return _internal_has_guildlevel();
}
inline void CiTanEnemyGuildItem::clear_guildlevel() {
  guildlevel_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CiTanEnemyGuildItem::_internal_guildlevel() const {
  return guildlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CiTanEnemyGuildItem::guildlevel() const {
  // @@protoc_insertion_point(field_get:guild.CiTanEnemyGuildItem.guildlevel)
  return _internal_guildlevel();
}
inline void CiTanEnemyGuildItem::_internal_set_guildlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  guildlevel_ = value;
}
inline void CiTanEnemyGuildItem::set_guildlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guildlevel(value);
  // @@protoc_insertion_point(field_set:guild.CiTanEnemyGuildItem.guildlevel)
}

// optional string guildname = 3;
inline bool CiTanEnemyGuildItem::_internal_has_guildname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CiTanEnemyGuildItem::has_guildname() const {
  return _internal_has_guildname();
}
inline void CiTanEnemyGuildItem::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CiTanEnemyGuildItem::guildname() const {
  // @@protoc_insertion_point(field_get:guild.CiTanEnemyGuildItem.guildname)
  return _internal_guildname();
}
inline void CiTanEnemyGuildItem::set_guildname(const std::string& value) {
  _internal_set_guildname(value);
  // @@protoc_insertion_point(field_set:guild.CiTanEnemyGuildItem.guildname)
}
inline std::string* CiTanEnemyGuildItem::mutable_guildname() {
  // @@protoc_insertion_point(field_mutable:guild.CiTanEnemyGuildItem.guildname)
  return _internal_mutable_guildname();
}
inline const std::string& CiTanEnemyGuildItem::_internal_guildname() const {
  return guildname_.GetNoArena();
}
inline void CiTanEnemyGuildItem::_internal_set_guildname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CiTanEnemyGuildItem::set_guildname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.CiTanEnemyGuildItem.guildname)
}
inline void CiTanEnemyGuildItem::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.CiTanEnemyGuildItem.guildname)
}
inline void CiTanEnemyGuildItem::set_guildname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.CiTanEnemyGuildItem.guildname)
}
inline std::string* CiTanEnemyGuildItem::_internal_mutable_guildname() {
  _has_bits_[0] |= 0x00000001u;
  return guildname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CiTanEnemyGuildItem::release_guildname() {
  // @@protoc_insertion_point(field_release:guild.CiTanEnemyGuildItem.guildname)
  if (!_internal_has_guildname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return guildname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CiTanEnemyGuildItem::set_allocated_guildname(std::string* guildname) {
  if (guildname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guildname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:guild.CiTanEnemyGuildItem.guildname)
}

// optional string mastername = 4;
inline bool CiTanEnemyGuildItem::_internal_has_mastername() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CiTanEnemyGuildItem::has_mastername() const {
  return _internal_has_mastername();
}
inline void CiTanEnemyGuildItem::clear_mastername() {
  mastername_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CiTanEnemyGuildItem::mastername() const {
  // @@protoc_insertion_point(field_get:guild.CiTanEnemyGuildItem.mastername)
  return _internal_mastername();
}
inline void CiTanEnemyGuildItem::set_mastername(const std::string& value) {
  _internal_set_mastername(value);
  // @@protoc_insertion_point(field_set:guild.CiTanEnemyGuildItem.mastername)
}
inline std::string* CiTanEnemyGuildItem::mutable_mastername() {
  // @@protoc_insertion_point(field_mutable:guild.CiTanEnemyGuildItem.mastername)
  return _internal_mutable_mastername();
}
inline const std::string& CiTanEnemyGuildItem::_internal_mastername() const {
  return mastername_.GetNoArena();
}
inline void CiTanEnemyGuildItem::_internal_set_mastername(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  mastername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CiTanEnemyGuildItem::set_mastername(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  mastername_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.CiTanEnemyGuildItem.mastername)
}
inline void CiTanEnemyGuildItem::set_mastername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  mastername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.CiTanEnemyGuildItem.mastername)
}
inline void CiTanEnemyGuildItem::set_mastername(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  mastername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.CiTanEnemyGuildItem.mastername)
}
inline std::string* CiTanEnemyGuildItem::_internal_mutable_mastername() {
  _has_bits_[0] |= 0x00000002u;
  return mastername_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CiTanEnemyGuildItem::release_mastername() {
  // @@protoc_insertion_point(field_release:guild.CiTanEnemyGuildItem.mastername)
  if (!_internal_has_mastername()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return mastername_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CiTanEnemyGuildItem::set_allocated_mastername(std::string* mastername) {
  if (mastername != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  mastername_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mastername);
  // @@protoc_insertion_point(field_set_allocated:guild.CiTanEnemyGuildItem.mastername)
}

// optional uint32 isvalid = 5;
inline bool CiTanEnemyGuildItem::_internal_has_isvalid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CiTanEnemyGuildItem::has_isvalid() const {
  return _internal_has_isvalid();
}
inline void CiTanEnemyGuildItem::clear_isvalid() {
  isvalid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CiTanEnemyGuildItem::_internal_isvalid() const {
  return isvalid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CiTanEnemyGuildItem::isvalid() const {
  // @@protoc_insertion_point(field_get:guild.CiTanEnemyGuildItem.isvalid)
  return _internal_isvalid();
}
inline void CiTanEnemyGuildItem::_internal_set_isvalid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  isvalid_ = value;
}
inline void CiTanEnemyGuildItem::set_isvalid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_isvalid(value);
  // @@protoc_insertion_point(field_set:guild.CiTanEnemyGuildItem.isvalid)
}

// -------------------------------------------------------------------

// MSG_Ret_CiTanEnemyGuildList_SC

// repeated .guild.CiTanEnemyGuildItem guildlist = 1;
inline int MSG_Ret_CiTanEnemyGuildList_SC::_internal_guildlist_size() const {
  return guildlist_.size();
}
inline int MSG_Ret_CiTanEnemyGuildList_SC::guildlist_size() const {
  return _internal_guildlist_size();
}
inline void MSG_Ret_CiTanEnemyGuildList_SC::clear_guildlist() {
  guildlist_.Clear();
}
inline ::guild::CiTanEnemyGuildItem* MSG_Ret_CiTanEnemyGuildList_SC::mutable_guildlist(int index) {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_CiTanEnemyGuildList_SC.guildlist)
  return guildlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::CiTanEnemyGuildItem >*
MSG_Ret_CiTanEnemyGuildList_SC::mutable_guildlist() {
  // @@protoc_insertion_point(field_mutable_list:guild.MSG_Ret_CiTanEnemyGuildList_SC.guildlist)
  return &guildlist_;
}
inline const ::guild::CiTanEnemyGuildItem& MSG_Ret_CiTanEnemyGuildList_SC::_internal_guildlist(int index) const {
  return guildlist_.Get(index);
}
inline const ::guild::CiTanEnemyGuildItem& MSG_Ret_CiTanEnemyGuildList_SC::guildlist(int index) const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_CiTanEnemyGuildList_SC.guildlist)
  return _internal_guildlist(index);
}
inline ::guild::CiTanEnemyGuildItem* MSG_Ret_CiTanEnemyGuildList_SC::_internal_add_guildlist() {
  return guildlist_.Add();
}
inline ::guild::CiTanEnemyGuildItem* MSG_Ret_CiTanEnemyGuildList_SC::add_guildlist() {
  // @@protoc_insertion_point(field_add:guild.MSG_Ret_CiTanEnemyGuildList_SC.guildlist)
  return _internal_add_guildlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::CiTanEnemyGuildItem >&
MSG_Ret_CiTanEnemyGuildList_SC::guildlist() const {
  // @@protoc_insertion_point(field_list:guild.MSG_Ret_CiTanEnemyGuildList_SC.guildlist)
  return guildlist_;
}

// -------------------------------------------------------------------

// MSG_Req_ChooseCiTanEnemyGuild_CS

// optional uint64 guildid = 1;
inline bool MSG_Req_ChooseCiTanEnemyGuild_CS::_internal_has_guildid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_ChooseCiTanEnemyGuild_CS::has_guildid() const {
  return _internal_has_guildid();
}
inline void MSG_Req_ChooseCiTanEnemyGuild_CS::clear_guildid() {
  guildid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_ChooseCiTanEnemyGuild_CS::_internal_guildid() const {
  return guildid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_ChooseCiTanEnemyGuild_CS::guildid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ChooseCiTanEnemyGuild_CS.guildid)
  return _internal_guildid();
}
inline void MSG_Req_ChooseCiTanEnemyGuild_CS::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  guildid_ = value;
}
inline void MSG_Req_ChooseCiTanEnemyGuild_CS::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guildid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ChooseCiTanEnemyGuild_CS.guildid)
}

// -------------------------------------------------------------------

// MSG_Req_TargetCiTanEnemyGuild_CS

// -------------------------------------------------------------------

// MSG_Ret_ChoosedCiTanEnemyGuild_SC

// optional .guild.CiTanEnemyGuildItem guild = 1;
inline bool MSG_Ret_ChoosedCiTanEnemyGuild_SC::_internal_has_guild() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || guild_ != nullptr);
  return value;
}
inline bool MSG_Ret_ChoosedCiTanEnemyGuild_SC::has_guild() const {
  return _internal_has_guild();
}
inline void MSG_Ret_ChoosedCiTanEnemyGuild_SC::clear_guild() {
  if (guild_ != nullptr) guild_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::guild::CiTanEnemyGuildItem& MSG_Ret_ChoosedCiTanEnemyGuild_SC::_internal_guild() const {
  const ::guild::CiTanEnemyGuildItem* p = guild_;
  return p != nullptr ? *p : *reinterpret_cast<const ::guild::CiTanEnemyGuildItem*>(
      &::guild::_CiTanEnemyGuildItem_default_instance_);
}
inline const ::guild::CiTanEnemyGuildItem& MSG_Ret_ChoosedCiTanEnemyGuild_SC::guild() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_ChoosedCiTanEnemyGuild_SC.guild)
  return _internal_guild();
}
inline ::guild::CiTanEnemyGuildItem* MSG_Ret_ChoosedCiTanEnemyGuild_SC::release_guild() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_ChoosedCiTanEnemyGuild_SC.guild)
  _has_bits_[0] &= ~0x00000001u;
  ::guild::CiTanEnemyGuildItem* temp = guild_;
  guild_ = nullptr;
  return temp;
}
inline ::guild::CiTanEnemyGuildItem* MSG_Ret_ChoosedCiTanEnemyGuild_SC::_internal_mutable_guild() {
  _has_bits_[0] |= 0x00000001u;
  if (guild_ == nullptr) {
    auto* p = CreateMaybeMessage<::guild::CiTanEnemyGuildItem>(GetArenaNoVirtual());
    guild_ = p;
  }
  return guild_;
}
inline ::guild::CiTanEnemyGuildItem* MSG_Ret_ChoosedCiTanEnemyGuild_SC::mutable_guild() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_ChoosedCiTanEnemyGuild_SC.guild)
  return _internal_mutable_guild();
}
inline void MSG_Ret_ChoosedCiTanEnemyGuild_SC::set_allocated_guild(::guild::CiTanEnemyGuildItem* guild) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete guild_;
  }
  if (guild) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      guild = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guild_ = guild;
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_ChoosedCiTanEnemyGuild_SC.guild)
}

// -------------------------------------------------------------------

// MSG_Req_IntoCiTanEnemyGuild_CS

// -------------------------------------------------------------------

// MSG_Req_CiTanBacktoMyGuild_CS

// -------------------------------------------------------------------

// GuildPositionInfo

// optional uint32 positionid = 1;
inline bool GuildPositionInfo::_internal_has_positionid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GuildPositionInfo::has_positionid() const {
  return _internal_has_positionid();
}
inline void GuildPositionInfo::clear_positionid() {
  positionid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GuildPositionInfo::_internal_positionid() const {
  return positionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GuildPositionInfo::positionid() const {
  // @@protoc_insertion_point(field_get:guild.GuildPositionInfo.positionid)
  return _internal_positionid();
}
inline void GuildPositionInfo::_internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  positionid_ = value;
}
inline void GuildPositionInfo::set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_positionid(value);
  // @@protoc_insertion_point(field_set:guild.GuildPositionInfo.positionid)
}

// optional string name = 2;
inline bool GuildPositionInfo::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GuildPositionInfo::has_name() const {
  return _internal_has_name();
}
inline void GuildPositionInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GuildPositionInfo::name() const {
  // @@protoc_insertion_point(field_get:guild.GuildPositionInfo.name)
  return _internal_name();
}
inline void GuildPositionInfo::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:guild.GuildPositionInfo.name)
}
inline std::string* GuildPositionInfo::mutable_name() {
  // @@protoc_insertion_point(field_mutable:guild.GuildPositionInfo.name)
  return _internal_mutable_name();
}
inline const std::string& GuildPositionInfo::_internal_name() const {
  return name_.GetNoArena();
}
inline void GuildPositionInfo::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GuildPositionInfo::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.GuildPositionInfo.name)
}
inline void GuildPositionInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.GuildPositionInfo.name)
}
inline void GuildPositionInfo::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.GuildPositionInfo.name)
}
inline std::string* GuildPositionInfo::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GuildPositionInfo::release_name() {
  // @@protoc_insertion_point(field_release:guild.GuildPositionInfo.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GuildPositionInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:guild.GuildPositionInfo.name)
}

// optional uint32 orderid = 3;
inline bool GuildPositionInfo::_internal_has_orderid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GuildPositionInfo::has_orderid() const {
  return _internal_has_orderid();
}
inline void GuildPositionInfo::clear_orderid() {
  orderid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GuildPositionInfo::_internal_orderid() const {
  return orderid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GuildPositionInfo::orderid() const {
  // @@protoc_insertion_point(field_get:guild.GuildPositionInfo.orderid)
  return _internal_orderid();
}
inline void GuildPositionInfo::_internal_set_orderid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  orderid_ = value;
}
inline void GuildPositionInfo::set_orderid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_orderid(value);
  // @@protoc_insertion_point(field_set:guild.GuildPositionInfo.orderid)
}

// optional uint32 privilege = 4;
inline bool GuildPositionInfo::_internal_has_privilege() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool GuildPositionInfo::has_privilege() const {
  return _internal_has_privilege();
}
inline void GuildPositionInfo::clear_privilege() {
  privilege_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GuildPositionInfo::_internal_privilege() const {
  return privilege_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GuildPositionInfo::privilege() const {
  // @@protoc_insertion_point(field_get:guild.GuildPositionInfo.privilege)
  return _internal_privilege();
}
inline void GuildPositionInfo::_internal_set_privilege(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  privilege_ = value;
}
inline void GuildPositionInfo::set_privilege(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_privilege(value);
  // @@protoc_insertion_point(field_set:guild.GuildPositionInfo.privilege)
}

// -------------------------------------------------------------------

// MSG_Req_AddGuildPosition_CS

// optional .guild.GuildPositionInfo posinfo = 1;
inline bool MSG_Req_AddGuildPosition_CS::_internal_has_posinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || posinfo_ != nullptr);
  return value;
}
inline bool MSG_Req_AddGuildPosition_CS::has_posinfo() const {
  return _internal_has_posinfo();
}
inline void MSG_Req_AddGuildPosition_CS::clear_posinfo() {
  if (posinfo_ != nullptr) posinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::guild::GuildPositionInfo& MSG_Req_AddGuildPosition_CS::_internal_posinfo() const {
  const ::guild::GuildPositionInfo* p = posinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::guild::GuildPositionInfo*>(
      &::guild::_GuildPositionInfo_default_instance_);
}
inline const ::guild::GuildPositionInfo& MSG_Req_AddGuildPosition_CS::posinfo() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_AddGuildPosition_CS.posinfo)
  return _internal_posinfo();
}
inline ::guild::GuildPositionInfo* MSG_Req_AddGuildPosition_CS::release_posinfo() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_AddGuildPosition_CS.posinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::guild::GuildPositionInfo* temp = posinfo_;
  posinfo_ = nullptr;
  return temp;
}
inline ::guild::GuildPositionInfo* MSG_Req_AddGuildPosition_CS::_internal_mutable_posinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (posinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::guild::GuildPositionInfo>(GetArenaNoVirtual());
    posinfo_ = p;
  }
  return posinfo_;
}
inline ::guild::GuildPositionInfo* MSG_Req_AddGuildPosition_CS::mutable_posinfo() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_AddGuildPosition_CS.posinfo)
  return _internal_mutable_posinfo();
}
inline void MSG_Req_AddGuildPosition_CS::set_allocated_posinfo(::guild::GuildPositionInfo* posinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete posinfo_;
  }
  if (posinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      posinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, posinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  posinfo_ = posinfo;
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_AddGuildPosition_CS.posinfo)
}

// -------------------------------------------------------------------

// MSG_Req_DeleteGuildPosition_CS

// optional uint32 positionid = 1;
inline bool MSG_Req_DeleteGuildPosition_CS::_internal_has_positionid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_DeleteGuildPosition_CS::has_positionid() const {
  return _internal_has_positionid();
}
inline void MSG_Req_DeleteGuildPosition_CS::clear_positionid() {
  positionid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_DeleteGuildPosition_CS::_internal_positionid() const {
  return positionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_DeleteGuildPosition_CS::positionid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_DeleteGuildPosition_CS.positionid)
  return _internal_positionid();
}
inline void MSG_Req_DeleteGuildPosition_CS::_internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  positionid_ = value;
}
inline void MSG_Req_DeleteGuildPosition_CS::set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_positionid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_DeleteGuildPosition_CS.positionid)
}

// -------------------------------------------------------------------

// SwapGuildPosInfo

// optional uint32 posidfrom = 1;
inline bool SwapGuildPosInfo::_internal_has_posidfrom() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SwapGuildPosInfo::has_posidfrom() const {
  return _internal_has_posidfrom();
}
inline void SwapGuildPosInfo::clear_posidfrom() {
  posidfrom_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SwapGuildPosInfo::_internal_posidfrom() const {
  return posidfrom_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SwapGuildPosInfo::posidfrom() const {
  // @@protoc_insertion_point(field_get:guild.SwapGuildPosInfo.posidfrom)
  return _internal_posidfrom();
}
inline void SwapGuildPosInfo::_internal_set_posidfrom(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  posidfrom_ = value;
}
inline void SwapGuildPosInfo::set_posidfrom(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_posidfrom(value);
  // @@protoc_insertion_point(field_set:guild.SwapGuildPosInfo.posidfrom)
}

// optional uint32 posidto = 2;
inline bool SwapGuildPosInfo::_internal_has_posidto() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SwapGuildPosInfo::has_posidto() const {
  return _internal_has_posidto();
}
inline void SwapGuildPosInfo::clear_posidto() {
  posidto_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SwapGuildPosInfo::_internal_posidto() const {
  return posidto_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SwapGuildPosInfo::posidto() const {
  // @@protoc_insertion_point(field_get:guild.SwapGuildPosInfo.posidto)
  return _internal_posidto();
}
inline void SwapGuildPosInfo::_internal_set_posidto(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  posidto_ = value;
}
inline void SwapGuildPosInfo::set_posidto(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_posidto(value);
  // @@protoc_insertion_point(field_set:guild.SwapGuildPosInfo.posidto)
}

// -------------------------------------------------------------------

// MSG_Req_SwapGuildPosOrder_CS

// optional .guild.SwapGuildPosInfo swapinfo = 1;
inline bool MSG_Req_SwapGuildPosOrder_CS::_internal_has_swapinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || swapinfo_ != nullptr);
  return value;
}
inline bool MSG_Req_SwapGuildPosOrder_CS::has_swapinfo() const {
  return _internal_has_swapinfo();
}
inline void MSG_Req_SwapGuildPosOrder_CS::clear_swapinfo() {
  if (swapinfo_ != nullptr) swapinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::guild::SwapGuildPosInfo& MSG_Req_SwapGuildPosOrder_CS::_internal_swapinfo() const {
  const ::guild::SwapGuildPosInfo* p = swapinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::guild::SwapGuildPosInfo*>(
      &::guild::_SwapGuildPosInfo_default_instance_);
}
inline const ::guild::SwapGuildPosInfo& MSG_Req_SwapGuildPosOrder_CS::swapinfo() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_SwapGuildPosOrder_CS.swapinfo)
  return _internal_swapinfo();
}
inline ::guild::SwapGuildPosInfo* MSG_Req_SwapGuildPosOrder_CS::release_swapinfo() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_SwapGuildPosOrder_CS.swapinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::guild::SwapGuildPosInfo* temp = swapinfo_;
  swapinfo_ = nullptr;
  return temp;
}
inline ::guild::SwapGuildPosInfo* MSG_Req_SwapGuildPosOrder_CS::_internal_mutable_swapinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (swapinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::guild::SwapGuildPosInfo>(GetArenaNoVirtual());
    swapinfo_ = p;
  }
  return swapinfo_;
}
inline ::guild::SwapGuildPosInfo* MSG_Req_SwapGuildPosOrder_CS::mutable_swapinfo() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_SwapGuildPosOrder_CS.swapinfo)
  return _internal_mutable_swapinfo();
}
inline void MSG_Req_SwapGuildPosOrder_CS::set_allocated_swapinfo(::guild::SwapGuildPosInfo* swapinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete swapinfo_;
  }
  if (swapinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      swapinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, swapinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  swapinfo_ = swapinfo;
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_SwapGuildPosOrder_CS.swapinfo)
}

// -------------------------------------------------------------------

// MSG_Req_ChangePositionName_CS

// optional uint32 positionid = 1;
inline bool MSG_Req_ChangePositionName_CS::_internal_has_positionid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_ChangePositionName_CS::has_positionid() const {
  return _internal_has_positionid();
}
inline void MSG_Req_ChangePositionName_CS::clear_positionid() {
  positionid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ChangePositionName_CS::_internal_positionid() const {
  return positionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ChangePositionName_CS::positionid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ChangePositionName_CS.positionid)
  return _internal_positionid();
}
inline void MSG_Req_ChangePositionName_CS::_internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  positionid_ = value;
}
inline void MSG_Req_ChangePositionName_CS::set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_positionid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ChangePositionName_CS.positionid)
}

// optional string name = 2;
inline bool MSG_Req_ChangePositionName_CS::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_ChangePositionName_CS::has_name() const {
  return _internal_has_name();
}
inline void MSG_Req_ChangePositionName_CS::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_ChangePositionName_CS::name() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ChangePositionName_CS.name)
  return _internal_name();
}
inline void MSG_Req_ChangePositionName_CS::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ChangePositionName_CS.name)
}
inline std::string* MSG_Req_ChangePositionName_CS::mutable_name() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_ChangePositionName_CS.name)
  return _internal_mutable_name();
}
inline const std::string& MSG_Req_ChangePositionName_CS::_internal_name() const {
  return name_.GetNoArena();
}
inline void MSG_Req_ChangePositionName_CS::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_ChangePositionName_CS::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Req_ChangePositionName_CS.name)
}
inline void MSG_Req_ChangePositionName_CS::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Req_ChangePositionName_CS.name)
}
inline void MSG_Req_ChangePositionName_CS::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Req_ChangePositionName_CS.name)
}
inline std::string* MSG_Req_ChangePositionName_CS::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_ChangePositionName_CS::release_name() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_ChangePositionName_CS.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_ChangePositionName_CS::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_ChangePositionName_CS.name)
}

// -------------------------------------------------------------------

// MSG_Req_ChangePositionPri_CS

// optional uint32 positionid = 1;
inline bool MSG_Req_ChangePositionPri_CS::_internal_has_positionid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_ChangePositionPri_CS::has_positionid() const {
  return _internal_has_positionid();
}
inline void MSG_Req_ChangePositionPri_CS::clear_positionid() {
  positionid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ChangePositionPri_CS::_internal_positionid() const {
  return positionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ChangePositionPri_CS::positionid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ChangePositionPri_CS.positionid)
  return _internal_positionid();
}
inline void MSG_Req_ChangePositionPri_CS::_internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  positionid_ = value;
}
inline void MSG_Req_ChangePositionPri_CS::set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_positionid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ChangePositionPri_CS.positionid)
}

// optional uint32 privilege = 2;
inline bool MSG_Req_ChangePositionPri_CS::_internal_has_privilege() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_ChangePositionPri_CS::has_privilege() const {
  return _internal_has_privilege();
}
inline void MSG_Req_ChangePositionPri_CS::clear_privilege() {
  privilege_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ChangePositionPri_CS::_internal_privilege() const {
  return privilege_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ChangePositionPri_CS::privilege() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ChangePositionPri_CS.privilege)
  return _internal_privilege();
}
inline void MSG_Req_ChangePositionPri_CS::_internal_set_privilege(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  privilege_ = value;
}
inline void MSG_Req_ChangePositionPri_CS::set_privilege(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_privilege(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ChangePositionPri_CS.privilege)
}

// -------------------------------------------------------------------

// MSG_Req_AssignPosition_CS

// optional uint64 memberid = 1;
inline bool MSG_Req_AssignPosition_CS::_internal_has_memberid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_AssignPosition_CS::has_memberid() const {
  return _internal_has_memberid();
}
inline void MSG_Req_AssignPosition_CS::clear_memberid() {
  memberid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_AssignPosition_CS::_internal_memberid() const {
  return memberid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_AssignPosition_CS::memberid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_AssignPosition_CS.memberid)
  return _internal_memberid();
}
inline void MSG_Req_AssignPosition_CS::_internal_set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  memberid_ = value;
}
inline void MSG_Req_AssignPosition_CS::set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_memberid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_AssignPosition_CS.memberid)
}

// optional uint32 positionid = 2;
inline bool MSG_Req_AssignPosition_CS::_internal_has_positionid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_AssignPosition_CS::has_positionid() const {
  return _internal_has_positionid();
}
inline void MSG_Req_AssignPosition_CS::clear_positionid() {
  positionid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_AssignPosition_CS::_internal_positionid() const {
  return positionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_AssignPosition_CS::positionid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_AssignPosition_CS.positionid)
  return _internal_positionid();
}
inline void MSG_Req_AssignPosition_CS::_internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  positionid_ = value;
}
inline void MSG_Req_AssignPosition_CS::set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_positionid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_AssignPosition_CS.positionid)
}

// -------------------------------------------------------------------

// MSG_Ret_AssignPosition_SC

// optional uint64 memberid = 1;
inline bool MSG_Ret_AssignPosition_SC::_internal_has_memberid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_AssignPosition_SC::has_memberid() const {
  return _internal_has_memberid();
}
inline void MSG_Ret_AssignPosition_SC::clear_memberid() {
  memberid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_AssignPosition_SC::_internal_memberid() const {
  return memberid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_AssignPosition_SC::memberid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_AssignPosition_SC.memberid)
  return _internal_memberid();
}
inline void MSG_Ret_AssignPosition_SC::_internal_set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  memberid_ = value;
}
inline void MSG_Ret_AssignPosition_SC::set_memberid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_memberid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_AssignPosition_SC.memberid)
}

// optional uint32 positionid = 2;
inline bool MSG_Ret_AssignPosition_SC::_internal_has_positionid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_AssignPosition_SC::has_positionid() const {
  return _internal_has_positionid();
}
inline void MSG_Ret_AssignPosition_SC::clear_positionid() {
  positionid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_AssignPosition_SC::_internal_positionid() const {
  return positionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_AssignPosition_SC::positionid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_AssignPosition_SC.positionid)
  return _internal_positionid();
}
inline void MSG_Ret_AssignPosition_SC::_internal_set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  positionid_ = value;
}
inline void MSG_Ret_AssignPosition_SC::set_positionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_positionid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_AssignPosition_SC.positionid)
}

// -------------------------------------------------------------------

// MSG_Ret_PositionInfo_SC

// repeated .guild.GuildPositionInfo posinfos = 1;
inline int MSG_Ret_PositionInfo_SC::_internal_posinfos_size() const {
  return posinfos_.size();
}
inline int MSG_Ret_PositionInfo_SC::posinfos_size() const {
  return _internal_posinfos_size();
}
inline void MSG_Ret_PositionInfo_SC::clear_posinfos() {
  posinfos_.Clear();
}
inline ::guild::GuildPositionInfo* MSG_Ret_PositionInfo_SC::mutable_posinfos(int index) {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_PositionInfo_SC.posinfos)
  return posinfos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GuildPositionInfo >*
MSG_Ret_PositionInfo_SC::mutable_posinfos() {
  // @@protoc_insertion_point(field_mutable_list:guild.MSG_Ret_PositionInfo_SC.posinfos)
  return &posinfos_;
}
inline const ::guild::GuildPositionInfo& MSG_Ret_PositionInfo_SC::_internal_posinfos(int index) const {
  return posinfos_.Get(index);
}
inline const ::guild::GuildPositionInfo& MSG_Ret_PositionInfo_SC::posinfos(int index) const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_PositionInfo_SC.posinfos)
  return _internal_posinfos(index);
}
inline ::guild::GuildPositionInfo* MSG_Ret_PositionInfo_SC::_internal_add_posinfos() {
  return posinfos_.Add();
}
inline ::guild::GuildPositionInfo* MSG_Ret_PositionInfo_SC::add_posinfos() {
  // @@protoc_insertion_point(field_add:guild.MSG_Ret_PositionInfo_SC.posinfos)
  return _internal_add_posinfos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GuildPositionInfo >&
MSG_Ret_PositionInfo_SC::posinfos() const {
  // @@protoc_insertion_point(field_list:guild.MSG_Ret_PositionInfo_SC.posinfos)
  return posinfos_;
}

// -------------------------------------------------------------------

// MSG_Req_GuildLevelup_CS

// -------------------------------------------------------------------

// MSG_Ret_GuildLevelup_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_GuildLevelup_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GuildLevelup_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_GuildLevelup_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildLevelup_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildLevelup_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildLevelup_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_GuildLevelup_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_GuildLevelup_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildLevelup_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Req_GuildSetInfo_CS

// optional string guildsetinfo = 1;
inline bool MSG_Req_GuildSetInfo_CS::_internal_has_guildsetinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_GuildSetInfo_CS::has_guildsetinfo() const {
  return _internal_has_guildsetinfo();
}
inline void MSG_Req_GuildSetInfo_CS::clear_guildsetinfo() {
  guildsetinfo_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_GuildSetInfo_CS::guildsetinfo() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_GuildSetInfo_CS.guildsetinfo)
  return _internal_guildsetinfo();
}
inline void MSG_Req_GuildSetInfo_CS::set_guildsetinfo(const std::string& value) {
  _internal_set_guildsetinfo(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_GuildSetInfo_CS.guildsetinfo)
}
inline std::string* MSG_Req_GuildSetInfo_CS::mutable_guildsetinfo() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_GuildSetInfo_CS.guildsetinfo)
  return _internal_mutable_guildsetinfo();
}
inline const std::string& MSG_Req_GuildSetInfo_CS::_internal_guildsetinfo() const {
  return guildsetinfo_.GetNoArena();
}
inline void MSG_Req_GuildSetInfo_CS::_internal_set_guildsetinfo(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  guildsetinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_GuildSetInfo_CS::set_guildsetinfo(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  guildsetinfo_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Req_GuildSetInfo_CS.guildsetinfo)
}
inline void MSG_Req_GuildSetInfo_CS::set_guildsetinfo(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  guildsetinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Req_GuildSetInfo_CS.guildsetinfo)
}
inline void MSG_Req_GuildSetInfo_CS::set_guildsetinfo(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  guildsetinfo_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Req_GuildSetInfo_CS.guildsetinfo)
}
inline std::string* MSG_Req_GuildSetInfo_CS::_internal_mutable_guildsetinfo() {
  _has_bits_[0] |= 0x00000001u;
  return guildsetinfo_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_GuildSetInfo_CS::release_guildsetinfo() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_GuildSetInfo_CS.guildsetinfo)
  if (!_internal_has_guildsetinfo()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return guildsetinfo_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_GuildSetInfo_CS::set_allocated_guildsetinfo(std::string* guildsetinfo) {
  if (guildsetinfo != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guildsetinfo_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guildsetinfo);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_GuildSetInfo_CS.guildsetinfo)
}

// -------------------------------------------------------------------

// MSG_Ret_GuildSetInfo_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_GuildSetInfo_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GuildSetInfo_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_GuildSetInfo_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildSetInfo_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildSetInfo_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildSetInfo_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_GuildSetInfo_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_GuildSetInfo_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildSetInfo_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Ret_CheckDayWelfare_SC

// optional bool canreceive = 1;
inline bool MSG_Ret_CheckDayWelfare_SC::_internal_has_canreceive() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_CheckDayWelfare_SC::has_canreceive() const {
  return _internal_has_canreceive();
}
inline void MSG_Ret_CheckDayWelfare_SC::clear_canreceive() {
  canreceive_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_Ret_CheckDayWelfare_SC::_internal_canreceive() const {
  return canreceive_;
}
inline bool MSG_Ret_CheckDayWelfare_SC::canreceive() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_CheckDayWelfare_SC.canreceive)
  return _internal_canreceive();
}
inline void MSG_Ret_CheckDayWelfare_SC::_internal_set_canreceive(bool value) {
  _has_bits_[0] |= 0x00000001u;
  canreceive_ = value;
}
inline void MSG_Ret_CheckDayWelfare_SC::set_canreceive(bool value) {
  _internal_set_canreceive(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_CheckDayWelfare_SC.canreceive)
}

// -------------------------------------------------------------------

// MSG_Req_GetDayWelfare_CS

// -------------------------------------------------------------------

// MSG_Ret_GetDayWelfare_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_GetDayWelfare_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GetDayWelfare_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_GetDayWelfare_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GetDayWelfare_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GetDayWelfare_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GetDayWelfare_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_GetDayWelfare_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_GetDayWelfare_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GetDayWelfare_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Req_GuildGoods_CS

// optional uint32 goodstype = 1;
inline bool MSG_Req_GuildGoods_CS::_internal_has_goodstype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_GuildGoods_CS::has_goodstype() const {
  return _internal_has_goodstype();
}
inline void MSG_Req_GuildGoods_CS::clear_goodstype() {
  goodstype_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_GuildGoods_CS::_internal_goodstype() const {
  return goodstype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_GuildGoods_CS::goodstype() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_GuildGoods_CS.goodstype)
  return _internal_goodstype();
}
inline void MSG_Req_GuildGoods_CS::_internal_set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  goodstype_ = value;
}
inline void MSG_Req_GuildGoods_CS::set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_goodstype(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_GuildGoods_CS.goodstype)
}

// -------------------------------------------------------------------

// GoodsInfo

// optional uint32 tagid = 1;
inline bool GoodsInfo::_internal_has_tagid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GoodsInfo::has_tagid() const {
  return _internal_has_tagid();
}
inline void GoodsInfo::clear_tagid() {
  tagid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GoodsInfo::_internal_tagid() const {
  return tagid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GoodsInfo::tagid() const {
  // @@protoc_insertion_point(field_get:guild.GoodsInfo.tagid)
  return _internal_tagid();
}
inline void GoodsInfo::_internal_set_tagid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  tagid_ = value;
}
inline void GoodsInfo::set_tagid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tagid(value);
  // @@protoc_insertion_point(field_set:guild.GoodsInfo.tagid)
}

// optional uint32 itemid = 2;
inline bool GoodsInfo::_internal_has_itemid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GoodsInfo::has_itemid() const {
  return _internal_has_itemid();
}
inline void GoodsInfo::clear_itemid() {
  itemid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GoodsInfo::_internal_itemid() const {
  return itemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GoodsInfo::itemid() const {
  // @@protoc_insertion_point(field_get:guild.GoodsInfo.itemid)
  return _internal_itemid();
}
inline void GoodsInfo::_internal_set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  itemid_ = value;
}
inline void GoodsInfo::set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_itemid(value);
  // @@protoc_insertion_point(field_set:guild.GoodsInfo.itemid)
}

// optional uint32 submitnum = 3;
inline bool GoodsInfo::_internal_has_submitnum() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GoodsInfo::has_submitnum() const {
  return _internal_has_submitnum();
}
inline void GoodsInfo::clear_submitnum() {
  submitnum_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GoodsInfo::_internal_submitnum() const {
  return submitnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GoodsInfo::submitnum() const {
  // @@protoc_insertion_point(field_get:guild.GoodsInfo.submitnum)
  return _internal_submitnum();
}
inline void GoodsInfo::_internal_set_submitnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  submitnum_ = value;
}
inline void GoodsInfo::set_submitnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_submitnum(value);
  // @@protoc_insertion_point(field_set:guild.GoodsInfo.submitnum)
}

// optional uint32 award = 4;
inline bool GoodsInfo::_internal_has_award() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool GoodsInfo::has_award() const {
  return _internal_has_award();
}
inline void GoodsInfo::clear_award() {
  award_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GoodsInfo::_internal_award() const {
  return award_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GoodsInfo::award() const {
  // @@protoc_insertion_point(field_get:guild.GoodsInfo.award)
  return _internal_award();
}
inline void GoodsInfo::_internal_set_award(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  award_ = value;
}
inline void GoodsInfo::set_award(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_award(value);
  // @@protoc_insertion_point(field_set:guild.GoodsInfo.award)
}

// -------------------------------------------------------------------

// MSG_Ret_GuildGoods_SC

// repeated .guild.GoodsInfo items = 1;
inline int MSG_Ret_GuildGoods_SC::_internal_items_size() const {
  return items_.size();
}
inline int MSG_Ret_GuildGoods_SC::items_size() const {
  return _internal_items_size();
}
inline void MSG_Ret_GuildGoods_SC::clear_items() {
  items_.Clear();
}
inline ::guild::GoodsInfo* MSG_Ret_GuildGoods_SC::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildGoods_SC.items)
  return items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GoodsInfo >*
MSG_Ret_GuildGoods_SC::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:guild.MSG_Ret_GuildGoods_SC.items)
  return &items_;
}
inline const ::guild::GoodsInfo& MSG_Ret_GuildGoods_SC::_internal_items(int index) const {
  return items_.Get(index);
}
inline const ::guild::GoodsInfo& MSG_Ret_GuildGoods_SC::items(int index) const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildGoods_SC.items)
  return _internal_items(index);
}
inline ::guild::GoodsInfo* MSG_Ret_GuildGoods_SC::_internal_add_items() {
  return items_.Add();
}
inline ::guild::GoodsInfo* MSG_Ret_GuildGoods_SC::add_items() {
  // @@protoc_insertion_point(field_add:guild.MSG_Ret_GuildGoods_SC.items)
  return _internal_add_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::GoodsInfo >&
MSG_Ret_GuildGoods_SC::items() const {
  // @@protoc_insertion_point(field_list:guild.MSG_Ret_GuildGoods_SC.items)
  return items_;
}

// optional uint32 multireward = 2;
inline bool MSG_Ret_GuildGoods_SC::_internal_has_multireward() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GuildGoods_SC::has_multireward() const {
  return _internal_has_multireward();
}
inline void MSG_Ret_GuildGoods_SC::clear_multireward() {
  multireward_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildGoods_SC::_internal_multireward() const {
  return multireward_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildGoods_SC::multireward() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildGoods_SC.multireward)
  return _internal_multireward();
}
inline void MSG_Ret_GuildGoods_SC::_internal_set_multireward(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  multireward_ = value;
}
inline void MSG_Ret_GuildGoods_SC::set_multireward(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_multireward(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildGoods_SC.multireward)
}

// optional uint32 remain = 3;
inline bool MSG_Ret_GuildGoods_SC::_internal_has_remain() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_GuildGoods_SC::has_remain() const {
  return _internal_has_remain();
}
inline void MSG_Ret_GuildGoods_SC::clear_remain() {
  remain_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildGoods_SC::_internal_remain() const {
  return remain_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildGoods_SC::remain() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildGoods_SC.remain)
  return _internal_remain();
}
inline void MSG_Ret_GuildGoods_SC::_internal_set_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  remain_ = value;
}
inline void MSG_Ret_GuildGoods_SC::set_remain(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remain(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildGoods_SC.remain)
}

// optional uint32 nexttime = 4;
inline bool MSG_Ret_GuildGoods_SC::_internal_has_nexttime() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_GuildGoods_SC::has_nexttime() const {
  return _internal_has_nexttime();
}
inline void MSG_Ret_GuildGoods_SC::clear_nexttime() {
  nexttime_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildGoods_SC::_internal_nexttime() const {
  return nexttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildGoods_SC::nexttime() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildGoods_SC.nexttime)
  return _internal_nexttime();
}
inline void MSG_Ret_GuildGoods_SC::_internal_set_nexttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  nexttime_ = value;
}
inline void MSG_Ret_GuildGoods_SC::set_nexttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_nexttime(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildGoods_SC.nexttime)
}

// optional uint32 goodstype = 5;
inline bool MSG_Ret_GuildGoods_SC::_internal_has_goodstype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_GuildGoods_SC::has_goodstype() const {
  return _internal_has_goodstype();
}
inline void MSG_Ret_GuildGoods_SC::clear_goodstype() {
  goodstype_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildGoods_SC::_internal_goodstype() const {
  return goodstype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildGoods_SC::goodstype() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildGoods_SC.goodstype)
  return _internal_goodstype();
}
inline void MSG_Ret_GuildGoods_SC::_internal_set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  goodstype_ = value;
}
inline void MSG_Ret_GuildGoods_SC::set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_goodstype(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildGoods_SC.goodstype)
}

// -------------------------------------------------------------------

// MSG_Req_SubmitGuildGoods_CS

// optional uint32 tagid = 1;
inline bool MSG_Req_SubmitGuildGoods_CS::_internal_has_tagid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_SubmitGuildGoods_CS::has_tagid() const {
  return _internal_has_tagid();
}
inline void MSG_Req_SubmitGuildGoods_CS::clear_tagid() {
  tagid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitGuildGoods_CS::_internal_tagid() const {
  return tagid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitGuildGoods_CS::tagid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_SubmitGuildGoods_CS.tagid)
  return _internal_tagid();
}
inline void MSG_Req_SubmitGuildGoods_CS::_internal_set_tagid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  tagid_ = value;
}
inline void MSG_Req_SubmitGuildGoods_CS::set_tagid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tagid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_SubmitGuildGoods_CS.tagid)
}

// optional uint32 goodstype = 2;
inline bool MSG_Req_SubmitGuildGoods_CS::_internal_has_goodstype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_SubmitGuildGoods_CS::has_goodstype() const {
  return _internal_has_goodstype();
}
inline void MSG_Req_SubmitGuildGoods_CS::clear_goodstype() {
  goodstype_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitGuildGoods_CS::_internal_goodstype() const {
  return goodstype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitGuildGoods_CS::goodstype() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_SubmitGuildGoods_CS.goodstype)
  return _internal_goodstype();
}
inline void MSG_Req_SubmitGuildGoods_CS::_internal_set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  goodstype_ = value;
}
inline void MSG_Req_SubmitGuildGoods_CS::set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_goodstype(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_SubmitGuildGoods_CS.goodstype)
}

// -------------------------------------------------------------------

// MSG_Ret_SubmitGuildGoods_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_SubmitGuildGoods_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_SubmitGuildGoods_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_SubmitGuildGoods_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SubmitGuildGoods_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SubmitGuildGoods_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_SubmitGuildGoods_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_SubmitGuildGoods_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_SubmitGuildGoods_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_SubmitGuildGoods_SC.retcode)
}

// optional uint32 goodstype = 2;
inline bool MSG_Ret_SubmitGuildGoods_SC::_internal_has_goodstype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_SubmitGuildGoods_SC::has_goodstype() const {
  return _internal_has_goodstype();
}
inline void MSG_Ret_SubmitGuildGoods_SC::clear_goodstype() {
  goodstype_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SubmitGuildGoods_SC::_internal_goodstype() const {
  return goodstype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SubmitGuildGoods_SC::goodstype() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_SubmitGuildGoods_SC.goodstype)
  return _internal_goodstype();
}
inline void MSG_Ret_SubmitGuildGoods_SC::_internal_set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  goodstype_ = value;
}
inline void MSG_Ret_SubmitGuildGoods_SC::set_goodstype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_goodstype(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_SubmitGuildGoods_SC.goodstype)
}

// -------------------------------------------------------------------

// MSG_Req_QuitGuild_CS

// -------------------------------------------------------------------

// MSG_Ret_QuitGuild_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_QuitGuild_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_QuitGuild_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_QuitGuild_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuitGuild_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuitGuild_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_QuitGuild_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_QuitGuild_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_QuitGuild_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_QuitGuild_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Req_FireGuildMember_CS

// optional string leavememberid = 1;
inline bool MSG_Req_FireGuildMember_CS::_internal_has_leavememberid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_FireGuildMember_CS::has_leavememberid() const {
  return _internal_has_leavememberid();
}
inline void MSG_Req_FireGuildMember_CS::clear_leavememberid() {
  leavememberid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_FireGuildMember_CS::leavememberid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_FireGuildMember_CS.leavememberid)
  return _internal_leavememberid();
}
inline void MSG_Req_FireGuildMember_CS::set_leavememberid(const std::string& value) {
  _internal_set_leavememberid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_FireGuildMember_CS.leavememberid)
}
inline std::string* MSG_Req_FireGuildMember_CS::mutable_leavememberid() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_FireGuildMember_CS.leavememberid)
  return _internal_mutable_leavememberid();
}
inline const std::string& MSG_Req_FireGuildMember_CS::_internal_leavememberid() const {
  return leavememberid_.GetNoArena();
}
inline void MSG_Req_FireGuildMember_CS::_internal_set_leavememberid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  leavememberid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_FireGuildMember_CS::set_leavememberid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  leavememberid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Req_FireGuildMember_CS.leavememberid)
}
inline void MSG_Req_FireGuildMember_CS::set_leavememberid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  leavememberid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Req_FireGuildMember_CS.leavememberid)
}
inline void MSG_Req_FireGuildMember_CS::set_leavememberid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  leavememberid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Req_FireGuildMember_CS.leavememberid)
}
inline std::string* MSG_Req_FireGuildMember_CS::_internal_mutable_leavememberid() {
  _has_bits_[0] |= 0x00000001u;
  return leavememberid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_FireGuildMember_CS::release_leavememberid() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_FireGuildMember_CS.leavememberid)
  if (!_internal_has_leavememberid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return leavememberid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_FireGuildMember_CS::set_allocated_leavememberid(std::string* leavememberid) {
  if (leavememberid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  leavememberid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), leavememberid);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_FireGuildMember_CS.leavememberid)
}

// -------------------------------------------------------------------

// MSG_Ret_FireGuildMember_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_FireGuildMember_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_FireGuildMember_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_FireGuildMember_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_FireGuildMember_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_FireGuildMember_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_FireGuildMember_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_FireGuildMember_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  retcode_ = value;
}
inline void MSG_Ret_FireGuildMember_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_FireGuildMember_SC.retcode)
}

// optional string leavememberid = 2;
inline bool MSG_Ret_FireGuildMember_SC::_internal_has_leavememberid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_FireGuildMember_SC::has_leavememberid() const {
  return _internal_has_leavememberid();
}
inline void MSG_Ret_FireGuildMember_SC::clear_leavememberid() {
  leavememberid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_FireGuildMember_SC::leavememberid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_FireGuildMember_SC.leavememberid)
  return _internal_leavememberid();
}
inline void MSG_Ret_FireGuildMember_SC::set_leavememberid(const std::string& value) {
  _internal_set_leavememberid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_FireGuildMember_SC.leavememberid)
}
inline std::string* MSG_Ret_FireGuildMember_SC::mutable_leavememberid() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_FireGuildMember_SC.leavememberid)
  return _internal_mutable_leavememberid();
}
inline const std::string& MSG_Ret_FireGuildMember_SC::_internal_leavememberid() const {
  return leavememberid_.GetNoArena();
}
inline void MSG_Ret_FireGuildMember_SC::_internal_set_leavememberid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  leavememberid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_FireGuildMember_SC::set_leavememberid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  leavememberid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Ret_FireGuildMember_SC.leavememberid)
}
inline void MSG_Ret_FireGuildMember_SC::set_leavememberid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  leavememberid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Ret_FireGuildMember_SC.leavememberid)
}
inline void MSG_Ret_FireGuildMember_SC::set_leavememberid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  leavememberid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Ret_FireGuildMember_SC.leavememberid)
}
inline std::string* MSG_Ret_FireGuildMember_SC::_internal_mutable_leavememberid() {
  _has_bits_[0] |= 0x00000001u;
  return leavememberid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_FireGuildMember_SC::release_leavememberid() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_FireGuildMember_SC.leavememberid)
  if (!_internal_has_leavememberid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return leavememberid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_FireGuildMember_SC::set_allocated_leavememberid(std::string* leavememberid) {
  if (leavememberid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  leavememberid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), leavememberid);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_FireGuildMember_SC.leavememberid)
}

// -------------------------------------------------------------------

// MSG_Ret_BeFiredGuildMember_SC

// -------------------------------------------------------------------

// MSG_Req_GuildInvite_CS

// optional string joinmemberid = 1;
inline bool MSG_Req_GuildInvite_CS::_internal_has_joinmemberid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_GuildInvite_CS::has_joinmemberid() const {
  return _internal_has_joinmemberid();
}
inline void MSG_Req_GuildInvite_CS::clear_joinmemberid() {
  joinmemberid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_GuildInvite_CS::joinmemberid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_GuildInvite_CS.joinmemberid)
  return _internal_joinmemberid();
}
inline void MSG_Req_GuildInvite_CS::set_joinmemberid(const std::string& value) {
  _internal_set_joinmemberid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_GuildInvite_CS.joinmemberid)
}
inline std::string* MSG_Req_GuildInvite_CS::mutable_joinmemberid() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_GuildInvite_CS.joinmemberid)
  return _internal_mutable_joinmemberid();
}
inline const std::string& MSG_Req_GuildInvite_CS::_internal_joinmemberid() const {
  return joinmemberid_.GetNoArena();
}
inline void MSG_Req_GuildInvite_CS::_internal_set_joinmemberid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  joinmemberid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_GuildInvite_CS::set_joinmemberid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  joinmemberid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Req_GuildInvite_CS.joinmemberid)
}
inline void MSG_Req_GuildInvite_CS::set_joinmemberid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  joinmemberid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Req_GuildInvite_CS.joinmemberid)
}
inline void MSG_Req_GuildInvite_CS::set_joinmemberid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  joinmemberid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Req_GuildInvite_CS.joinmemberid)
}
inline std::string* MSG_Req_GuildInvite_CS::_internal_mutable_joinmemberid() {
  _has_bits_[0] |= 0x00000001u;
  return joinmemberid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_GuildInvite_CS::release_joinmemberid() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_GuildInvite_CS.joinmemberid)
  if (!_internal_has_joinmemberid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return joinmemberid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_GuildInvite_CS::set_allocated_joinmemberid(std::string* joinmemberid) {
  if (joinmemberid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  joinmemberid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), joinmemberid);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_GuildInvite_CS.joinmemberid)
}

// -------------------------------------------------------------------

// MSG_Ret_GuildInvite_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_GuildInvite_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_GuildInvite_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_GuildInvite_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildInvite_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildInvite_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildInvite_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_GuildInvite_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  retcode_ = value;
}
inline void MSG_Ret_GuildInvite_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildInvite_SC.retcode)
}

// optional string id = 2;
inline bool MSG_Ret_GuildInvite_SC::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GuildInvite_SC::has_id() const {
  return _internal_has_id();
}
inline void MSG_Ret_GuildInvite_SC::clear_id() {
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_GuildInvite_SC::id() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildInvite_SC.id)
  return _internal_id();
}
inline void MSG_Ret_GuildInvite_SC::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildInvite_SC.id)
}
inline std::string* MSG_Ret_GuildInvite_SC::mutable_id() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildInvite_SC.id)
  return _internal_mutable_id();
}
inline const std::string& MSG_Ret_GuildInvite_SC::_internal_id() const {
  return id_.GetNoArena();
}
inline void MSG_Ret_GuildInvite_SC::_internal_set_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_GuildInvite_SC::set_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Ret_GuildInvite_SC.id)
}
inline void MSG_Ret_GuildInvite_SC::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Ret_GuildInvite_SC.id)
}
inline void MSG_Ret_GuildInvite_SC::set_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Ret_GuildInvite_SC.id)
}
inline std::string* MSG_Ret_GuildInvite_SC::_internal_mutable_id() {
  _has_bits_[0] |= 0x00000001u;
  return id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_GuildInvite_SC::release_id() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_GuildInvite_SC.id)
  if (!_internal_has_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_GuildInvite_SC::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_GuildInvite_SC.id)
}

// optional string name = 3;
inline bool MSG_Ret_GuildInvite_SC::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_GuildInvite_SC::has_name() const {
  return _internal_has_name();
}
inline void MSG_Ret_GuildInvite_SC::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_Ret_GuildInvite_SC::name() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildInvite_SC.name)
  return _internal_name();
}
inline void MSG_Ret_GuildInvite_SC::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildInvite_SC.name)
}
inline std::string* MSG_Ret_GuildInvite_SC::mutable_name() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildInvite_SC.name)
  return _internal_mutable_name();
}
inline const std::string& MSG_Ret_GuildInvite_SC::_internal_name() const {
  return name_.GetNoArena();
}
inline void MSG_Ret_GuildInvite_SC::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_GuildInvite_SC::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Ret_GuildInvite_SC.name)
}
inline void MSG_Ret_GuildInvite_SC::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Ret_GuildInvite_SC.name)
}
inline void MSG_Ret_GuildInvite_SC::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Ret_GuildInvite_SC.name)
}
inline std::string* MSG_Ret_GuildInvite_SC::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000002u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_GuildInvite_SC::release_name() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_GuildInvite_SC.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_GuildInvite_SC::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_GuildInvite_SC.name)
}

// optional string guildname = 4;
inline bool MSG_Ret_GuildInvite_SC::_internal_has_guildname() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_GuildInvite_SC::has_guildname() const {
  return _internal_has_guildname();
}
inline void MSG_Ret_GuildInvite_SC::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& MSG_Ret_GuildInvite_SC::guildname() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildInvite_SC.guildname)
  return _internal_guildname();
}
inline void MSG_Ret_GuildInvite_SC::set_guildname(const std::string& value) {
  _internal_set_guildname(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildInvite_SC.guildname)
}
inline std::string* MSG_Ret_GuildInvite_SC::mutable_guildname() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildInvite_SC.guildname)
  return _internal_mutable_guildname();
}
inline const std::string& MSG_Ret_GuildInvite_SC::_internal_guildname() const {
  return guildname_.GetNoArena();
}
inline void MSG_Ret_GuildInvite_SC::_internal_set_guildname(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_GuildInvite_SC::set_guildname(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  guildname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Ret_GuildInvite_SC.guildname)
}
inline void MSG_Ret_GuildInvite_SC::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Ret_GuildInvite_SC.guildname)
}
inline void MSG_Ret_GuildInvite_SC::set_guildname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  guildname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Ret_GuildInvite_SC.guildname)
}
inline std::string* MSG_Ret_GuildInvite_SC::_internal_mutable_guildname() {
  _has_bits_[0] |= 0x00000004u;
  return guildname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_GuildInvite_SC::release_guildname() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_GuildInvite_SC.guildname)
  if (!_internal_has_guildname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return guildname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_GuildInvite_SC::set_allocated_guildname(std::string* guildname) {
  if (guildname != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  guildname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_GuildInvite_SC.guildname)
}

// -------------------------------------------------------------------

// MSG_Req_GuildInviteConfirm_CS

// optional string inviterid = 1;
inline bool MSG_Req_GuildInviteConfirm_CS::_internal_has_inviterid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_GuildInviteConfirm_CS::has_inviterid() const {
  return _internal_has_inviterid();
}
inline void MSG_Req_GuildInviteConfirm_CS::clear_inviterid() {
  inviterid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_GuildInviteConfirm_CS::inviterid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_GuildInviteConfirm_CS.inviterid)
  return _internal_inviterid();
}
inline void MSG_Req_GuildInviteConfirm_CS::set_inviterid(const std::string& value) {
  _internal_set_inviterid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_GuildInviteConfirm_CS.inviterid)
}
inline std::string* MSG_Req_GuildInviteConfirm_CS::mutable_inviterid() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_GuildInviteConfirm_CS.inviterid)
  return _internal_mutable_inviterid();
}
inline const std::string& MSG_Req_GuildInviteConfirm_CS::_internal_inviterid() const {
  return inviterid_.GetNoArena();
}
inline void MSG_Req_GuildInviteConfirm_CS::_internal_set_inviterid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  inviterid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_GuildInviteConfirm_CS::set_inviterid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  inviterid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Req_GuildInviteConfirm_CS.inviterid)
}
inline void MSG_Req_GuildInviteConfirm_CS::set_inviterid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  inviterid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Req_GuildInviteConfirm_CS.inviterid)
}
inline void MSG_Req_GuildInviteConfirm_CS::set_inviterid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  inviterid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Req_GuildInviteConfirm_CS.inviterid)
}
inline std::string* MSG_Req_GuildInviteConfirm_CS::_internal_mutable_inviterid() {
  _has_bits_[0] |= 0x00000001u;
  return inviterid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_GuildInviteConfirm_CS::release_inviterid() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_GuildInviteConfirm_CS.inviterid)
  if (!_internal_has_inviterid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return inviterid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_GuildInviteConfirm_CS::set_allocated_inviterid(std::string* inviterid) {
  if (inviterid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  inviterid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), inviterid);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_GuildInviteConfirm_CS.inviterid)
}

// -------------------------------------------------------------------

// MSG_Ret_GuildInviteConfirm_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_GuildInviteConfirm_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GuildInviteConfirm_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_GuildInviteConfirm_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildInviteConfirm_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildInviteConfirm_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildInviteConfirm_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_GuildInviteConfirm_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_GuildInviteConfirm_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildInviteConfirm_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Req_DismissGuild_CS

// -------------------------------------------------------------------

// MSG_Ret_DismissGuild_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_DismissGuild_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_DismissGuild_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_DismissGuild_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_DismissGuild_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_DismissGuild_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_DismissGuild_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_DismissGuild_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_DismissGuild_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_DismissGuild_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Req_ChangeGuildMaster_CS

// optional string newmasterid = 1;
inline bool MSG_Req_ChangeGuildMaster_CS::_internal_has_newmasterid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_ChangeGuildMaster_CS::has_newmasterid() const {
  return _internal_has_newmasterid();
}
inline void MSG_Req_ChangeGuildMaster_CS::clear_newmasterid() {
  newmasterid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_ChangeGuildMaster_CS::newmasterid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ChangeGuildMaster_CS.newmasterid)
  return _internal_newmasterid();
}
inline void MSG_Req_ChangeGuildMaster_CS::set_newmasterid(const std::string& value) {
  _internal_set_newmasterid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ChangeGuildMaster_CS.newmasterid)
}
inline std::string* MSG_Req_ChangeGuildMaster_CS::mutable_newmasterid() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_ChangeGuildMaster_CS.newmasterid)
  return _internal_mutable_newmasterid();
}
inline const std::string& MSG_Req_ChangeGuildMaster_CS::_internal_newmasterid() const {
  return newmasterid_.GetNoArena();
}
inline void MSG_Req_ChangeGuildMaster_CS::_internal_set_newmasterid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  newmasterid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_ChangeGuildMaster_CS::set_newmasterid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  newmasterid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Req_ChangeGuildMaster_CS.newmasterid)
}
inline void MSG_Req_ChangeGuildMaster_CS::set_newmasterid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  newmasterid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Req_ChangeGuildMaster_CS.newmasterid)
}
inline void MSG_Req_ChangeGuildMaster_CS::set_newmasterid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  newmasterid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Req_ChangeGuildMaster_CS.newmasterid)
}
inline std::string* MSG_Req_ChangeGuildMaster_CS::_internal_mutable_newmasterid() {
  _has_bits_[0] |= 0x00000001u;
  return newmasterid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_ChangeGuildMaster_CS::release_newmasterid() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_ChangeGuildMaster_CS.newmasterid)
  if (!_internal_has_newmasterid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return newmasterid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_ChangeGuildMaster_CS::set_allocated_newmasterid(std::string* newmasterid) {
  if (newmasterid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  newmasterid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), newmasterid);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_ChangeGuildMaster_CS.newmasterid)
}

// -------------------------------------------------------------------

// MSG_Ret_ChangeGuildMaster_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_ChangeGuildMaster_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_ChangeGuildMaster_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_ChangeGuildMaster_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_ChangeGuildMaster_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_ChangeGuildMaster_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_ChangeGuildMaster_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_ChangeGuildMaster_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_ChangeGuildMaster_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_ChangeGuildMaster_SC.retcode)
}

// -------------------------------------------------------------------

// ViceMaster

// optional string id = 1;
inline bool ViceMaster::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ViceMaster::has_id() const {
  return _internal_has_id();
}
inline void ViceMaster::clear_id() {
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ViceMaster::id() const {
  // @@protoc_insertion_point(field_get:guild.ViceMaster.id)
  return _internal_id();
}
inline void ViceMaster::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:guild.ViceMaster.id)
}
inline std::string* ViceMaster::mutable_id() {
  // @@protoc_insertion_point(field_mutable:guild.ViceMaster.id)
  return _internal_mutable_id();
}
inline const std::string& ViceMaster::_internal_id() const {
  return id_.GetNoArena();
}
inline void ViceMaster::_internal_set_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ViceMaster::set_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.ViceMaster.id)
}
inline void ViceMaster::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.ViceMaster.id)
}
inline void ViceMaster::set_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.ViceMaster.id)
}
inline std::string* ViceMaster::_internal_mutable_id() {
  _has_bits_[0] |= 0x00000001u;
  return id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ViceMaster::release_id() {
  // @@protoc_insertion_point(field_release:guild.ViceMaster.id)
  if (!_internal_has_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return id_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ViceMaster::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:guild.ViceMaster.id)
}

// optional uint32 level = 2;
inline bool ViceMaster::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ViceMaster::has_level() const {
  return _internal_has_level();
}
inline void ViceMaster::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ViceMaster::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ViceMaster::level() const {
  // @@protoc_insertion_point(field_get:guild.ViceMaster.level)
  return _internal_level();
}
inline void ViceMaster::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  level_ = value;
}
inline void ViceMaster::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:guild.ViceMaster.level)
}

// optional uint32 fightvalue = 3;
inline bool ViceMaster::_internal_has_fightvalue() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ViceMaster::has_fightvalue() const {
  return _internal_has_fightvalue();
}
inline void ViceMaster::clear_fightvalue() {
  fightvalue_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ViceMaster::_internal_fightvalue() const {
  return fightvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ViceMaster::fightvalue() const {
  // @@protoc_insertion_point(field_get:guild.ViceMaster.fightvalue)
  return _internal_fightvalue();
}
inline void ViceMaster::_internal_set_fightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  fightvalue_ = value;
}
inline void ViceMaster::set_fightvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fightvalue(value);
  // @@protoc_insertion_point(field_set:guild.ViceMaster.fightvalue)
}

// optional string name = 4;
inline bool ViceMaster::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ViceMaster::has_name() const {
  return _internal_has_name();
}
inline void ViceMaster::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ViceMaster::name() const {
  // @@protoc_insertion_point(field_get:guild.ViceMaster.name)
  return _internal_name();
}
inline void ViceMaster::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:guild.ViceMaster.name)
}
inline std::string* ViceMaster::mutable_name() {
  // @@protoc_insertion_point(field_mutable:guild.ViceMaster.name)
  return _internal_mutable_name();
}
inline const std::string& ViceMaster::_internal_name() const {
  return name_.GetNoArena();
}
inline void ViceMaster::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ViceMaster::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.ViceMaster.name)
}
inline void ViceMaster::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.ViceMaster.name)
}
inline void ViceMaster::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.ViceMaster.name)
}
inline std::string* ViceMaster::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000002u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ViceMaster::release_name() {
  // @@protoc_insertion_point(field_release:guild.ViceMaster.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ViceMaster::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:guild.ViceMaster.name)
}

// optional string headicon = 5;
inline bool ViceMaster::_internal_has_headicon() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ViceMaster::has_headicon() const {
  return _internal_has_headicon();
}
inline void ViceMaster::clear_headicon() {
  headicon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ViceMaster::headicon() const {
  // @@protoc_insertion_point(field_get:guild.ViceMaster.headicon)
  return _internal_headicon();
}
inline void ViceMaster::set_headicon(const std::string& value) {
  _internal_set_headicon(value);
  // @@protoc_insertion_point(field_set:guild.ViceMaster.headicon)
}
inline std::string* ViceMaster::mutable_headicon() {
  // @@protoc_insertion_point(field_mutable:guild.ViceMaster.headicon)
  return _internal_mutable_headicon();
}
inline const std::string& ViceMaster::_internal_headicon() const {
  return headicon_.GetNoArena();
}
inline void ViceMaster::_internal_set_headicon(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  headicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ViceMaster::set_headicon(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  headicon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.ViceMaster.headicon)
}
inline void ViceMaster::set_headicon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  headicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.ViceMaster.headicon)
}
inline void ViceMaster::set_headicon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  headicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.ViceMaster.headicon)
}
inline std::string* ViceMaster::_internal_mutable_headicon() {
  _has_bits_[0] |= 0x00000004u;
  return headicon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ViceMaster::release_headicon() {
  // @@protoc_insertion_point(field_release:guild.ViceMaster.headicon)
  if (!_internal_has_headicon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return headicon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ViceMaster::set_allocated_headicon(std::string* headicon) {
  if (headicon != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  headicon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), headicon);
  // @@protoc_insertion_point(field_set_allocated:guild.ViceMaster.headicon)
}

// -------------------------------------------------------------------

// MSG_Req_GuildViceMaster_CS

// -------------------------------------------------------------------

// MSG_Ret_GuildViceMaster_SC

// repeated .guild.ViceMaster vicemaster = 1;
inline int MSG_Ret_GuildViceMaster_SC::_internal_vicemaster_size() const {
  return vicemaster_.size();
}
inline int MSG_Ret_GuildViceMaster_SC::vicemaster_size() const {
  return _internal_vicemaster_size();
}
inline void MSG_Ret_GuildViceMaster_SC::clear_vicemaster() {
  vicemaster_.Clear();
}
inline ::guild::ViceMaster* MSG_Ret_GuildViceMaster_SC::mutable_vicemaster(int index) {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildViceMaster_SC.vicemaster)
  return vicemaster_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::ViceMaster >*
MSG_Ret_GuildViceMaster_SC::mutable_vicemaster() {
  // @@protoc_insertion_point(field_mutable_list:guild.MSG_Ret_GuildViceMaster_SC.vicemaster)
  return &vicemaster_;
}
inline const ::guild::ViceMaster& MSG_Ret_GuildViceMaster_SC::_internal_vicemaster(int index) const {
  return vicemaster_.Get(index);
}
inline const ::guild::ViceMaster& MSG_Ret_GuildViceMaster_SC::vicemaster(int index) const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildViceMaster_SC.vicemaster)
  return _internal_vicemaster(index);
}
inline ::guild::ViceMaster* MSG_Ret_GuildViceMaster_SC::_internal_add_vicemaster() {
  return vicemaster_.Add();
}
inline ::guild::ViceMaster* MSG_Ret_GuildViceMaster_SC::add_vicemaster() {
  // @@protoc_insertion_point(field_add:guild.MSG_Ret_GuildViceMaster_SC.vicemaster)
  return _internal_add_vicemaster();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::ViceMaster >&
MSG_Ret_GuildViceMaster_SC::vicemaster() const {
  // @@protoc_insertion_point(field_list:guild.MSG_Ret_GuildViceMaster_SC.vicemaster)
  return vicemaster_;
}

// -------------------------------------------------------------------

// MSG_Req_GuildExtension_CS

// optional bool isfree = 1;
inline bool MSG_Req_GuildExtension_CS::_internal_has_isfree() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_GuildExtension_CS::has_isfree() const {
  return _internal_has_isfree();
}
inline void MSG_Req_GuildExtension_CS::clear_isfree() {
  isfree_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_Req_GuildExtension_CS::_internal_isfree() const {
  return isfree_;
}
inline bool MSG_Req_GuildExtension_CS::isfree() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_GuildExtension_CS.isfree)
  return _internal_isfree();
}
inline void MSG_Req_GuildExtension_CS::_internal_set_isfree(bool value) {
  _has_bits_[0] |= 0x00000001u;
  isfree_ = value;
}
inline void MSG_Req_GuildExtension_CS::set_isfree(bool value) {
  _internal_set_isfree(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_GuildExtension_CS.isfree)
}

// -------------------------------------------------------------------

// MSG_Ret_GuildExtension_SC

// optional uint32 extensionover = 1;
inline bool MSG_Ret_GuildExtension_SC::_internal_has_extensionover() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GuildExtension_SC::has_extensionover() const {
  return _internal_has_extensionover();
}
inline void MSG_Ret_GuildExtension_SC::clear_extensionover() {
  extensionover_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildExtension_SC::_internal_extensionover() const {
  return extensionover_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildExtension_SC::extensionover() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildExtension_SC.extensionover)
  return _internal_extensionover();
}
inline void MSG_Ret_GuildExtension_SC::_internal_set_extensionover(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  extensionover_ = value;
}
inline void MSG_Ret_GuildExtension_SC::set_extensionover(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_extensionover(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildExtension_SC.extensionover)
}

// optional uint32 retcode = 2;
inline bool MSG_Ret_GuildExtension_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_GuildExtension_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_GuildExtension_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildExtension_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildExtension_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildExtension_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_GuildExtension_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  retcode_ = value;
}
inline void MSG_Ret_GuildExtension_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildExtension_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Req_OneKeyApply_CS

// -------------------------------------------------------------------

// MSG_Ret_OneKeyApply_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_OneKeyApply_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_OneKeyApply_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_OneKeyApply_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_OneKeyApply_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_OneKeyApply_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_OneKeyApply_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_OneKeyApply_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_OneKeyApply_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_OneKeyApply_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Req_RecrutCondition_CS

// -------------------------------------------------------------------

// MSG_RetRecrutCondition_SC

// optional bool levelvalid = 1;
inline bool MSG_RetRecrutCondition_SC::_internal_has_levelvalid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetRecrutCondition_SC::has_levelvalid() const {
  return _internal_has_levelvalid();
}
inline void MSG_RetRecrutCondition_SC::clear_levelvalid() {
  levelvalid_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_RetRecrutCondition_SC::_internal_levelvalid() const {
  return levelvalid_;
}
inline bool MSG_RetRecrutCondition_SC::levelvalid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_RetRecrutCondition_SC.levelvalid)
  return _internal_levelvalid();
}
inline void MSG_RetRecrutCondition_SC::_internal_set_levelvalid(bool value) {
  _has_bits_[0] |= 0x00000001u;
  levelvalid_ = value;
}
inline void MSG_RetRecrutCondition_SC::set_levelvalid(bool value) {
  _internal_set_levelvalid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_RetRecrutCondition_SC.levelvalid)
}

// optional bool fightvalid = 2;
inline bool MSG_RetRecrutCondition_SC::_internal_has_fightvalid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetRecrutCondition_SC::has_fightvalid() const {
  return _internal_has_fightvalid();
}
inline void MSG_RetRecrutCondition_SC::clear_fightvalid() {
  fightvalid_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_RetRecrutCondition_SC::_internal_fightvalid() const {
  return fightvalid_;
}
inline bool MSG_RetRecrutCondition_SC::fightvalid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_RetRecrutCondition_SC.fightvalid)
  return _internal_fightvalid();
}
inline void MSG_RetRecrutCondition_SC::_internal_set_fightvalid(bool value) {
  _has_bits_[0] |= 0x00000002u;
  fightvalid_ = value;
}
inline void MSG_RetRecrutCondition_SC::set_fightvalid(bool value) {
  _internal_set_fightvalid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_RetRecrutCondition_SC.fightvalid)
}

// optional uint32 level = 3;
inline bool MSG_RetRecrutCondition_SC::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetRecrutCondition_SC::has_level() const {
  return _internal_has_level();
}
inline void MSG_RetRecrutCondition_SC::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecrutCondition_SC::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecrutCondition_SC::level() const {
  // @@protoc_insertion_point(field_get:guild.MSG_RetRecrutCondition_SC.level)
  return _internal_level();
}
inline void MSG_RetRecrutCondition_SC::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  level_ = value;
}
inline void MSG_RetRecrutCondition_SC::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:guild.MSG_RetRecrutCondition_SC.level)
}

// optional uint32 fight = 4;
inline bool MSG_RetRecrutCondition_SC::_internal_has_fight() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RetRecrutCondition_SC::has_fight() const {
  return _internal_has_fight();
}
inline void MSG_RetRecrutCondition_SC::clear_fight() {
  fight_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecrutCondition_SC::_internal_fight() const {
  return fight_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecrutCondition_SC::fight() const {
  // @@protoc_insertion_point(field_get:guild.MSG_RetRecrutCondition_SC.fight)
  return _internal_fight();
}
inline void MSG_RetRecrutCondition_SC::_internal_set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  fight_ = value;
}
inline void MSG_RetRecrutCondition_SC::set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fight(value);
  // @@protoc_insertion_point(field_set:guild.MSG_RetRecrutCondition_SC.fight)
}

// -------------------------------------------------------------------

// MSG_Req_ModifyRecrutCondition_CS

// optional bool levelvalid = 1;
inline bool MSG_Req_ModifyRecrutCondition_CS::_internal_has_levelvalid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_ModifyRecrutCondition_CS::has_levelvalid() const {
  return _internal_has_levelvalid();
}
inline void MSG_Req_ModifyRecrutCondition_CS::clear_levelvalid() {
  levelvalid_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_Req_ModifyRecrutCondition_CS::_internal_levelvalid() const {
  return levelvalid_;
}
inline bool MSG_Req_ModifyRecrutCondition_CS::levelvalid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ModifyRecrutCondition_CS.levelvalid)
  return _internal_levelvalid();
}
inline void MSG_Req_ModifyRecrutCondition_CS::_internal_set_levelvalid(bool value) {
  _has_bits_[0] |= 0x00000001u;
  levelvalid_ = value;
}
inline void MSG_Req_ModifyRecrutCondition_CS::set_levelvalid(bool value) {
  _internal_set_levelvalid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ModifyRecrutCondition_CS.levelvalid)
}

// optional bool fightvalid = 2;
inline bool MSG_Req_ModifyRecrutCondition_CS::_internal_has_fightvalid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_ModifyRecrutCondition_CS::has_fightvalid() const {
  return _internal_has_fightvalid();
}
inline void MSG_Req_ModifyRecrutCondition_CS::clear_fightvalid() {
  fightvalid_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Req_ModifyRecrutCondition_CS::_internal_fightvalid() const {
  return fightvalid_;
}
inline bool MSG_Req_ModifyRecrutCondition_CS::fightvalid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ModifyRecrutCondition_CS.fightvalid)
  return _internal_fightvalid();
}
inline void MSG_Req_ModifyRecrutCondition_CS::_internal_set_fightvalid(bool value) {
  _has_bits_[0] |= 0x00000002u;
  fightvalid_ = value;
}
inline void MSG_Req_ModifyRecrutCondition_CS::set_fightvalid(bool value) {
  _internal_set_fightvalid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ModifyRecrutCondition_CS.fightvalid)
}

// optional uint32 level = 3;
inline bool MSG_Req_ModifyRecrutCondition_CS::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Req_ModifyRecrutCondition_CS::has_level() const {
  return _internal_has_level();
}
inline void MSG_Req_ModifyRecrutCondition_CS::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ModifyRecrutCondition_CS::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ModifyRecrutCondition_CS::level() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ModifyRecrutCondition_CS.level)
  return _internal_level();
}
inline void MSG_Req_ModifyRecrutCondition_CS::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  level_ = value;
}
inline void MSG_Req_ModifyRecrutCondition_CS::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ModifyRecrutCondition_CS.level)
}

// optional uint32 fight = 4;
inline bool MSG_Req_ModifyRecrutCondition_CS::_internal_has_fight() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Req_ModifyRecrutCondition_CS::has_fight() const {
  return _internal_has_fight();
}
inline void MSG_Req_ModifyRecrutCondition_CS::clear_fight() {
  fight_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ModifyRecrutCondition_CS::_internal_fight() const {
  return fight_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ModifyRecrutCondition_CS::fight() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_ModifyRecrutCondition_CS.fight)
  return _internal_fight();
}
inline void MSG_Req_ModifyRecrutCondition_CS::_internal_set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  fight_ = value;
}
inline void MSG_Req_ModifyRecrutCondition_CS::set_fight(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fight(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_ModifyRecrutCondition_CS.fight)
}

// -------------------------------------------------------------------

// MSG_Req_GuildTechnique_CS

// -------------------------------------------------------------------

// TechniqueInfo

// optional uint32 techid = 1;
inline bool TechniqueInfo::_internal_has_techid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TechniqueInfo::has_techid() const {
  return _internal_has_techid();
}
inline void TechniqueInfo::clear_techid() {
  techid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TechniqueInfo::_internal_techid() const {
  return techid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TechniqueInfo::techid() const {
  // @@protoc_insertion_point(field_get:guild.TechniqueInfo.techid)
  return _internal_techid();
}
inline void TechniqueInfo::_internal_set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  techid_ = value;
}
inline void TechniqueInfo::set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_techid(value);
  // @@protoc_insertion_point(field_set:guild.TechniqueInfo.techid)
}

// optional uint32 personallevel = 2;
inline bool TechniqueInfo::_internal_has_personallevel() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TechniqueInfo::has_personallevel() const {
  return _internal_has_personallevel();
}
inline void TechniqueInfo::clear_personallevel() {
  personallevel_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TechniqueInfo::_internal_personallevel() const {
  return personallevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TechniqueInfo::personallevel() const {
  // @@protoc_insertion_point(field_get:guild.TechniqueInfo.personallevel)
  return _internal_personallevel();
}
inline void TechniqueInfo::_internal_set_personallevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  personallevel_ = value;
}
inline void TechniqueInfo::set_personallevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_personallevel(value);
  // @@protoc_insertion_point(field_set:guild.TechniqueInfo.personallevel)
}

// optional uint32 developlevel = 3;
inline bool TechniqueInfo::_internal_has_developlevel() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TechniqueInfo::has_developlevel() const {
  return _internal_has_developlevel();
}
inline void TechniqueInfo::clear_developlevel() {
  developlevel_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TechniqueInfo::_internal_developlevel() const {
  return developlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TechniqueInfo::developlevel() const {
  // @@protoc_insertion_point(field_get:guild.TechniqueInfo.developlevel)
  return _internal_developlevel();
}
inline void TechniqueInfo::_internal_set_developlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  developlevel_ = value;
}
inline void TechniqueInfo::set_developlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_developlevel(value);
  // @@protoc_insertion_point(field_set:guild.TechniqueInfo.developlevel)
}

// optional uint32 validlevel = 4;
inline bool TechniqueInfo::_internal_has_validlevel() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TechniqueInfo::has_validlevel() const {
  return _internal_has_validlevel();
}
inline void TechniqueInfo::clear_validlevel() {
  validlevel_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TechniqueInfo::_internal_validlevel() const {
  return validlevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TechniqueInfo::validlevel() const {
  // @@protoc_insertion_point(field_get:guild.TechniqueInfo.validlevel)
  return _internal_validlevel();
}
inline void TechniqueInfo::_internal_set_validlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  validlevel_ = value;
}
inline void TechniqueInfo::set_validlevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_validlevel(value);
  // @@protoc_insertion_point(field_set:guild.TechniqueInfo.validlevel)
}

// optional bool unlock = 5;
inline bool TechniqueInfo::_internal_has_unlock() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool TechniqueInfo::has_unlock() const {
  return _internal_has_unlock();
}
inline void TechniqueInfo::clear_unlock() {
  unlock_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool TechniqueInfo::_internal_unlock() const {
  return unlock_;
}
inline bool TechniqueInfo::unlock() const {
  // @@protoc_insertion_point(field_get:guild.TechniqueInfo.unlock)
  return _internal_unlock();
}
inline void TechniqueInfo::_internal_set_unlock(bool value) {
  _has_bits_[0] |= 0x00000010u;
  unlock_ = value;
}
inline void TechniqueInfo::set_unlock(bool value) {
  _internal_set_unlock(value);
  // @@protoc_insertion_point(field_set:guild.TechniqueInfo.unlock)
}

// -------------------------------------------------------------------

// MSG_Ret_GuildTechnique_SC

// repeated .guild.TechniqueInfo info = 1;
inline int MSG_Ret_GuildTechnique_SC::_internal_info_size() const {
  return info_.size();
}
inline int MSG_Ret_GuildTechnique_SC::info_size() const {
  return _internal_info_size();
}
inline void MSG_Ret_GuildTechnique_SC::clear_info() {
  info_.Clear();
}
inline ::guild::TechniqueInfo* MSG_Ret_GuildTechnique_SC::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildTechnique_SC.info)
  return info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::TechniqueInfo >*
MSG_Ret_GuildTechnique_SC::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:guild.MSG_Ret_GuildTechnique_SC.info)
  return &info_;
}
inline const ::guild::TechniqueInfo& MSG_Ret_GuildTechnique_SC::_internal_info(int index) const {
  return info_.Get(index);
}
inline const ::guild::TechniqueInfo& MSG_Ret_GuildTechnique_SC::info(int index) const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildTechnique_SC.info)
  return _internal_info(index);
}
inline ::guild::TechniqueInfo* MSG_Ret_GuildTechnique_SC::_internal_add_info() {
  return info_.Add();
}
inline ::guild::TechniqueInfo* MSG_Ret_GuildTechnique_SC::add_info() {
  // @@protoc_insertion_point(field_add:guild.MSG_Ret_GuildTechnique_SC.info)
  return _internal_add_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::TechniqueInfo >&
MSG_Ret_GuildTechnique_SC::info() const {
  // @@protoc_insertion_point(field_list:guild.MSG_Ret_GuildTechnique_SC.info)
  return info_;
}

// -------------------------------------------------------------------

// MSG_Req_TechniqueUpGrade_CS

// optional uint32 techid = 1;
inline bool MSG_Req_TechniqueUpGrade_CS::_internal_has_techid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_TechniqueUpGrade_CS::has_techid() const {
  return _internal_has_techid();
}
inline void MSG_Req_TechniqueUpGrade_CS::clear_techid() {
  techid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_TechniqueUpGrade_CS::_internal_techid() const {
  return techid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_TechniqueUpGrade_CS::techid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_TechniqueUpGrade_CS.techid)
  return _internal_techid();
}
inline void MSG_Req_TechniqueUpGrade_CS::_internal_set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  techid_ = value;
}
inline void MSG_Req_TechniqueUpGrade_CS::set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_techid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_TechniqueUpGrade_CS.techid)
}

// -------------------------------------------------------------------

// MSG_Ret_TechniqueUpGrade_SC

// optional uint32 retcode = 1;
inline bool MSG_Ret_TechniqueUpGrade_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_TechniqueUpGrade_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_TechniqueUpGrade_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_TechniqueUpGrade_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_TechniqueUpGrade_SC::retcode() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_TechniqueUpGrade_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_TechniqueUpGrade_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_Ret_TechniqueUpGrade_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_TechniqueUpGrade_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_Ret_RefreshTechniqueInfo_SC

// optional .guild.TechniqueInfo info = 1;
inline bool MSG_Ret_RefreshTechniqueInfo_SC::_internal_has_info() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || info_ != nullptr);
  return value;
}
inline bool MSG_Ret_RefreshTechniqueInfo_SC::has_info() const {
  return _internal_has_info();
}
inline void MSG_Ret_RefreshTechniqueInfo_SC::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::guild::TechniqueInfo& MSG_Ret_RefreshTechniqueInfo_SC::_internal_info() const {
  const ::guild::TechniqueInfo* p = info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::guild::TechniqueInfo*>(
      &::guild::_TechniqueInfo_default_instance_);
}
inline const ::guild::TechniqueInfo& MSG_Ret_RefreshTechniqueInfo_SC::info() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_RefreshTechniqueInfo_SC.info)
  return _internal_info();
}
inline ::guild::TechniqueInfo* MSG_Ret_RefreshTechniqueInfo_SC::release_info() {
  // @@protoc_insertion_point(field_release:guild.MSG_Ret_RefreshTechniqueInfo_SC.info)
  _has_bits_[0] &= ~0x00000001u;
  ::guild::TechniqueInfo* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::guild::TechniqueInfo* MSG_Ret_RefreshTechniqueInfo_SC::_internal_mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::guild::TechniqueInfo>(GetArenaNoVirtual());
    info_ = p;
  }
  return info_;
}
inline ::guild::TechniqueInfo* MSG_Ret_RefreshTechniqueInfo_SC::mutable_info() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_RefreshTechniqueInfo_SC.info)
  return _internal_mutable_info();
}
inline void MSG_Ret_RefreshTechniqueInfo_SC::set_allocated_info(::guild::TechniqueInfo* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Ret_RefreshTechniqueInfo_SC.info)
}

// -------------------------------------------------------------------

// MSG_Req_TechniqueDevelop_CS

// optional uint32 techid = 1;
inline bool MSG_Req_TechniqueDevelop_CS::_internal_has_techid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_TechniqueDevelop_CS::has_techid() const {
  return _internal_has_techid();
}
inline void MSG_Req_TechniqueDevelop_CS::clear_techid() {
  techid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_TechniqueDevelop_CS::_internal_techid() const {
  return techid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_TechniqueDevelop_CS::techid() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_TechniqueDevelop_CS.techid)
  return _internal_techid();
}
inline void MSG_Req_TechniqueDevelop_CS::_internal_set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  techid_ = value;
}
inline void MSG_Req_TechniqueDevelop_CS::set_techid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_techid(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_TechniqueDevelop_CS.techid)
}

// -------------------------------------------------------------------

// MSG_Ret_TechniqueDevelop_SC

// optional uint32 salary = 1;
inline bool MSG_Ret_TechniqueDevelop_SC::_internal_has_salary() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_TechniqueDevelop_SC::has_salary() const {
  return _internal_has_salary();
}
inline void MSG_Ret_TechniqueDevelop_SC::clear_salary() {
  salary_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_TechniqueDevelop_SC::_internal_salary() const {
  return salary_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_TechniqueDevelop_SC::salary() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_TechniqueDevelop_SC.salary)
  return _internal_salary();
}
inline void MSG_Ret_TechniqueDevelop_SC::_internal_set_salary(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  salary_ = value;
}
inline void MSG_Ret_TechniqueDevelop_SC::set_salary(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_salary(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_TechniqueDevelop_SC.salary)
}

// -------------------------------------------------------------------

// MSG_Req_GuildPartyActivityInfo_CS

// -------------------------------------------------------------------

// MSG_Ret_GuildPartyActivityInfo_SC

// optional uint32 lefttimes = 1;
inline bool MSG_Ret_GuildPartyActivityInfo_SC::_internal_has_lefttimes() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GuildPartyActivityInfo_SC::has_lefttimes() const {
  return _internal_has_lefttimes();
}
inline void MSG_Ret_GuildPartyActivityInfo_SC::clear_lefttimes() {
  lefttimes_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildPartyActivityInfo_SC::_internal_lefttimes() const {
  return lefttimes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildPartyActivityInfo_SC::lefttimes() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildPartyActivityInfo_SC.lefttimes)
  return _internal_lefttimes();
}
inline void MSG_Ret_GuildPartyActivityInfo_SC::_internal_set_lefttimes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  lefttimes_ = value;
}
inline void MSG_Ret_GuildPartyActivityInfo_SC::set_lefttimes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lefttimes(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildPartyActivityInfo_SC.lefttimes)
}

// -------------------------------------------------------------------

// MSG_Req_StartGuildParty_CS

// -------------------------------------------------------------------

// MSG_Ret_GuildPartyActivityData_SC

// optional uint32 endtime = 1;
inline bool MSG_Ret_GuildPartyActivityData_SC::_internal_has_endtime() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GuildPartyActivityData_SC::has_endtime() const {
  return _internal_has_endtime();
}
inline void MSG_Ret_GuildPartyActivityData_SC::clear_endtime() {
  endtime_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildPartyActivityData_SC::_internal_endtime() const {
  return endtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_GuildPartyActivityData_SC::endtime() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildPartyActivityData_SC.endtime)
  return _internal_endtime();
}
inline void MSG_Ret_GuildPartyActivityData_SC::_internal_set_endtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  endtime_ = value;
}
inline void MSG_Ret_GuildPartyActivityData_SC::set_endtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_endtime(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_GuildPartyActivityData_SC.endtime)
}

// -------------------------------------------------------------------

// MSG_Ret_FellowshipSurvey_SC

// optional uint32 question_a = 1;
inline bool MSG_Ret_FellowshipSurvey_SC::_internal_has_question_a() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_FellowshipSurvey_SC::has_question_a() const {
  return _internal_has_question_a();
}
inline void MSG_Ret_FellowshipSurvey_SC::clear_question_a() {
  question_a_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_FellowshipSurvey_SC::_internal_question_a() const {
  return question_a_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_FellowshipSurvey_SC::question_a() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_FellowshipSurvey_SC.question_a)
  return _internal_question_a();
}
inline void MSG_Ret_FellowshipSurvey_SC::_internal_set_question_a(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  question_a_ = value;
}
inline void MSG_Ret_FellowshipSurvey_SC::set_question_a(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_question_a(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_FellowshipSurvey_SC.question_a)
}

// optional uint32 question_b = 2;
inline bool MSG_Ret_FellowshipSurvey_SC::_internal_has_question_b() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_FellowshipSurvey_SC::has_question_b() const {
  return _internal_has_question_b();
}
inline void MSG_Ret_FellowshipSurvey_SC::clear_question_b() {
  question_b_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_FellowshipSurvey_SC::_internal_question_b() const {
  return question_b_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_FellowshipSurvey_SC::question_b() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_FellowshipSurvey_SC.question_b)
  return _internal_question_b();
}
inline void MSG_Ret_FellowshipSurvey_SC::_internal_set_question_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  question_b_ = value;
}
inline void MSG_Ret_FellowshipSurvey_SC::set_question_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_question_b(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_FellowshipSurvey_SC.question_b)
}

// optional uint32 question_c = 3;
inline bool MSG_Ret_FellowshipSurvey_SC::_internal_has_question_c() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_FellowshipSurvey_SC::has_question_c() const {
  return _internal_has_question_c();
}
inline void MSG_Ret_FellowshipSurvey_SC::clear_question_c() {
  question_c_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_FellowshipSurvey_SC::_internal_question_c() const {
  return question_c_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_FellowshipSurvey_SC::question_c() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_FellowshipSurvey_SC.question_c)
  return _internal_question_c();
}
inline void MSG_Ret_FellowshipSurvey_SC::_internal_set_question_c(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  question_c_ = value;
}
inline void MSG_Ret_FellowshipSurvey_SC::set_question_c(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_question_c(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Ret_FellowshipSurvey_SC.question_c)
}

// -------------------------------------------------------------------

// MSG_Req_SubmitFellowshipSurvey_CS

// optional uint32 question_a = 1;
inline bool MSG_Req_SubmitFellowshipSurvey_CS::_internal_has_question_a() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_SubmitFellowshipSurvey_CS::has_question_a() const {
  return _internal_has_question_a();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::clear_question_a() {
  question_a_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitFellowshipSurvey_CS::_internal_question_a() const {
  return question_a_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitFellowshipSurvey_CS::question_a() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_SubmitFellowshipSurvey_CS.question_a)
  return _internal_question_a();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::_internal_set_question_a(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  question_a_ = value;
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::set_question_a(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_question_a(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_SubmitFellowshipSurvey_CS.question_a)
}

// optional uint32 question_b = 2;
inline bool MSG_Req_SubmitFellowshipSurvey_CS::_internal_has_question_b() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Req_SubmitFellowshipSurvey_CS::has_question_b() const {
  return _internal_has_question_b();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::clear_question_b() {
  question_b_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitFellowshipSurvey_CS::_internal_question_b() const {
  return question_b_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitFellowshipSurvey_CS::question_b() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_SubmitFellowshipSurvey_CS.question_b)
  return _internal_question_b();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::_internal_set_question_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  question_b_ = value;
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::set_question_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_question_b(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_SubmitFellowshipSurvey_CS.question_b)
}

// optional uint32 question_c = 3;
inline bool MSG_Req_SubmitFellowshipSurvey_CS::_internal_has_question_c() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Req_SubmitFellowshipSurvey_CS::has_question_c() const {
  return _internal_has_question_c();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::clear_question_c() {
  question_c_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitFellowshipSurvey_CS::_internal_question_c() const {
  return question_c_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitFellowshipSurvey_CS::question_c() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_SubmitFellowshipSurvey_CS.question_c)
  return _internal_question_c();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::_internal_set_question_c(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  question_c_ = value;
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::set_question_c(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_question_c(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_SubmitFellowshipSurvey_CS.question_c)
}

// optional uint32 answer_a = 4;
inline bool MSG_Req_SubmitFellowshipSurvey_CS::_internal_has_answer_a() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Req_SubmitFellowshipSurvey_CS::has_answer_a() const {
  return _internal_has_answer_a();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::clear_answer_a() {
  answer_a_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitFellowshipSurvey_CS::_internal_answer_a() const {
  return answer_a_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitFellowshipSurvey_CS::answer_a() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_a)
  return _internal_answer_a();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::_internal_set_answer_a(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  answer_a_ = value;
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::set_answer_a(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_answer_a(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_a)
}

// optional uint32 answer_b = 5;
inline bool MSG_Req_SubmitFellowshipSurvey_CS::_internal_has_answer_b() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Req_SubmitFellowshipSurvey_CS::has_answer_b() const {
  return _internal_has_answer_b();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::clear_answer_b() {
  answer_b_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitFellowshipSurvey_CS::_internal_answer_b() const {
  return answer_b_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SubmitFellowshipSurvey_CS::answer_b() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_b)
  return _internal_answer_b();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::_internal_set_answer_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  answer_b_ = value;
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::set_answer_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_answer_b(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_b)
}

// optional string answer_c = 6;
inline bool MSG_Req_SubmitFellowshipSurvey_CS::_internal_has_answer_c() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_SubmitFellowshipSurvey_CS::has_answer_c() const {
  return _internal_has_answer_c();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::clear_answer_c() {
  answer_c_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_SubmitFellowshipSurvey_CS::answer_c() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_c)
  return _internal_answer_c();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::set_answer_c(const std::string& value) {
  _internal_set_answer_c(value);
  // @@protoc_insertion_point(field_set:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_c)
}
inline std::string* MSG_Req_SubmitFellowshipSurvey_CS::mutable_answer_c() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_c)
  return _internal_mutable_answer_c();
}
inline const std::string& MSG_Req_SubmitFellowshipSurvey_CS::_internal_answer_c() const {
  return answer_c_.GetNoArena();
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::_internal_set_answer_c(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  answer_c_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::set_answer_c(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  answer_c_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_c)
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::set_answer_c(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  answer_c_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_c)
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::set_answer_c(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  answer_c_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_c)
}
inline std::string* MSG_Req_SubmitFellowshipSurvey_CS::_internal_mutable_answer_c() {
  _has_bits_[0] |= 0x00000001u;
  return answer_c_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_SubmitFellowshipSurvey_CS::release_answer_c() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_c)
  if (!_internal_has_answer_c()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return answer_c_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_SubmitFellowshipSurvey_CS::set_allocated_answer_c(std::string* answer_c) {
  if (answer_c != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  answer_c_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), answer_c);
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_SubmitFellowshipSurvey_CS.answer_c)
}

// -------------------------------------------------------------------

// MSG_ReqDonateSalary_CS

// optional uint32 value = 1;
inline bool MSG_ReqDonateSalary_CS::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqDonateSalary_CS::has_value() const {
  return _internal_has_value();
}
inline void MSG_ReqDonateSalary_CS::clear_value() {
  value_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqDonateSalary_CS::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqDonateSalary_CS::value() const {
  // @@protoc_insertion_point(field_get:guild.MSG_ReqDonateSalary_CS.value)
  return _internal_value();
}
inline void MSG_ReqDonateSalary_CS::_internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void MSG_ReqDonateSalary_CS::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:guild.MSG_ReqDonateSalary_CS.value)
}

// -------------------------------------------------------------------

// MSG_ReqUserCntData_CSC

// optional .guild.UserDataType type = 1;
inline bool MSG_ReqUserCntData_CSC::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqUserCntData_CSC::has_type() const {
  return _internal_has_type();
}
inline void MSG_ReqUserCntData_CSC::clear_type() {
  type_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::guild::UserDataType MSG_ReqUserCntData_CSC::_internal_type() const {
  return static_cast< ::guild::UserDataType >(type_);
}
inline ::guild::UserDataType MSG_ReqUserCntData_CSC::type() const {
  // @@protoc_insertion_point(field_get:guild.MSG_ReqUserCntData_CSC.type)
  return _internal_type();
}
inline void MSG_ReqUserCntData_CSC::_internal_set_type(::guild::UserDataType value) {
  assert(::guild::UserDataType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void MSG_ReqUserCntData_CSC::set_type(::guild::UserDataType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:guild.MSG_ReqUserCntData_CSC.type)
}

// optional uint32 value = 2;
inline bool MSG_ReqUserCntData_CSC::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqUserCntData_CSC::has_value() const {
  return _internal_has_value();
}
inline void MSG_ReqUserCntData_CSC::clear_value() {
  value_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqUserCntData_CSC::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqUserCntData_CSC::value() const {
  // @@protoc_insertion_point(field_get:guild.MSG_ReqUserCntData_CSC.value)
  return _internal_value();
}
inline void MSG_ReqUserCntData_CSC::_internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void MSG_ReqUserCntData_CSC::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:guild.MSG_ReqUserCntData_CSC.value)
}

// -------------------------------------------------------------------

// guildSkill

// optional uint32 skillid = 1;
inline bool guildSkill::_internal_has_skillid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool guildSkill::has_skillid() const {
  return _internal_has_skillid();
}
inline void guildSkill::clear_skillid() {
  skillid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildSkill::_internal_skillid() const {
  return skillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildSkill::skillid() const {
  // @@protoc_insertion_point(field_get:guild.guildSkill.skillid)
  return _internal_skillid();
}
inline void guildSkill::_internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  skillid_ = value;
}
inline void guildSkill::set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillid(value);
  // @@protoc_insertion_point(field_set:guild.guildSkill.skillid)
}

// optional uint32 skilllv = 2;
inline bool guildSkill::_internal_has_skilllv() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool guildSkill::has_skilllv() const {
  return _internal_has_skilllv();
}
inline void guildSkill::clear_skilllv() {
  skilllv_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildSkill::_internal_skilllv() const {
  return skilllv_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 guildSkill::skilllv() const {
  // @@protoc_insertion_point(field_get:guild.guildSkill.skilllv)
  return _internal_skilllv();
}
inline void guildSkill::_internal_set_skilllv(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  skilllv_ = value;
}
inline void guildSkill::set_skilllv(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skilllv(value);
  // @@protoc_insertion_point(field_set:guild.guildSkill.skilllv)
}

// -------------------------------------------------------------------

// MSG_Req_GuildSkill_CS

// -------------------------------------------------------------------

// MSG_Ret_GuildSkill_SC

// repeated .guild.guildSkill skillinfo = 1;
inline int MSG_Ret_GuildSkill_SC::_internal_skillinfo_size() const {
  return skillinfo_.size();
}
inline int MSG_Ret_GuildSkill_SC::skillinfo_size() const {
  return _internal_skillinfo_size();
}
inline void MSG_Ret_GuildSkill_SC::clear_skillinfo() {
  skillinfo_.Clear();
}
inline ::guild::guildSkill* MSG_Ret_GuildSkill_SC::mutable_skillinfo(int index) {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Ret_GuildSkill_SC.skillinfo)
  return skillinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildSkill >*
MSG_Ret_GuildSkill_SC::mutable_skillinfo() {
  // @@protoc_insertion_point(field_mutable_list:guild.MSG_Ret_GuildSkill_SC.skillinfo)
  return &skillinfo_;
}
inline const ::guild::guildSkill& MSG_Ret_GuildSkill_SC::_internal_skillinfo(int index) const {
  return skillinfo_.Get(index);
}
inline const ::guild::guildSkill& MSG_Ret_GuildSkill_SC::skillinfo(int index) const {
  // @@protoc_insertion_point(field_get:guild.MSG_Ret_GuildSkill_SC.skillinfo)
  return _internal_skillinfo(index);
}
inline ::guild::guildSkill* MSG_Ret_GuildSkill_SC::_internal_add_skillinfo() {
  return skillinfo_.Add();
}
inline ::guild::guildSkill* MSG_Ret_GuildSkill_SC::add_skillinfo() {
  // @@protoc_insertion_point(field_add:guild.MSG_Ret_GuildSkill_SC.skillinfo)
  return _internal_add_skillinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::guild::guildSkill >&
MSG_Ret_GuildSkill_SC::skillinfo() const {
  // @@protoc_insertion_point(field_list:guild.MSG_Ret_GuildSkill_SC.skillinfo)
  return skillinfo_;
}

// -------------------------------------------------------------------

// MSG_Req_LearnGuildSkill_CSC

// optional .guild.guildSkill skillinfo = 1;
inline bool MSG_Req_LearnGuildSkill_CSC::_internal_has_skillinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || skillinfo_ != nullptr);
  return value;
}
inline bool MSG_Req_LearnGuildSkill_CSC::has_skillinfo() const {
  return _internal_has_skillinfo();
}
inline void MSG_Req_LearnGuildSkill_CSC::clear_skillinfo() {
  if (skillinfo_ != nullptr) skillinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::guild::guildSkill& MSG_Req_LearnGuildSkill_CSC::_internal_skillinfo() const {
  const ::guild::guildSkill* p = skillinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::guild::guildSkill*>(
      &::guild::_guildSkill_default_instance_);
}
inline const ::guild::guildSkill& MSG_Req_LearnGuildSkill_CSC::skillinfo() const {
  // @@protoc_insertion_point(field_get:guild.MSG_Req_LearnGuildSkill_CSC.skillinfo)
  return _internal_skillinfo();
}
inline ::guild::guildSkill* MSG_Req_LearnGuildSkill_CSC::release_skillinfo() {
  // @@protoc_insertion_point(field_release:guild.MSG_Req_LearnGuildSkill_CSC.skillinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::guild::guildSkill* temp = skillinfo_;
  skillinfo_ = nullptr;
  return temp;
}
inline ::guild::guildSkill* MSG_Req_LearnGuildSkill_CSC::_internal_mutable_skillinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (skillinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::guild::guildSkill>(GetArenaNoVirtual());
    skillinfo_ = p;
  }
  return skillinfo_;
}
inline ::guild::guildSkill* MSG_Req_LearnGuildSkill_CSC::mutable_skillinfo() {
  // @@protoc_insertion_point(field_mutable:guild.MSG_Req_LearnGuildSkill_CSC.skillinfo)
  return _internal_mutable_skillinfo();
}
inline void MSG_Req_LearnGuildSkill_CSC::set_allocated_skillinfo(::guild::guildSkill* skillinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete skillinfo_;
  }
  if (skillinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      skillinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, skillinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  skillinfo_ = skillinfo;
  // @@protoc_insertion_point(field_set_allocated:guild.MSG_Req_LearnGuildSkill_CSC.skillinfo)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace guild

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::guild::GuildValueType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::guild::GuildValueType>() {
  return ::guild::GuildValueType_descriptor();
}
template <> struct is_proto_enum< ::guild::GuildMemberPosition> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::guild::GuildMemberPosition>() {
  return ::guild::GuildMemberPosition_descriptor();
}
template <> struct is_proto_enum< ::guild::GuildStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::guild::GuildStatus>() {
  return ::guild::GuildStatus_descriptor();
}
template <> struct is_proto_enum< ::guild::GuildPrivilege> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::guild::GuildPrivilege>() {
  return ::guild::GuildPrivilege_descriptor();
}
template <> struct is_proto_enum< ::guild::UserDataType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::guild::UserDataType>() {
  return ::guild::UserDataType_descriptor();
}
template <> struct is_proto_enum< ::guild::ReqMemberListType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::guild::ReqMemberListType>() {
  return ::guild::ReqMemberListType_descriptor();
}
template <> struct is_proto_enum< ::guild::GuildBuildingType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::guild::GuildBuildingType>() {
  return ::guild::GuildBuildingType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_guild_2eproto
