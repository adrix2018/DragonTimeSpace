// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: massive.proto

#include "massive.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_massive_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GeneRemakeItem_massive_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_massive_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GiftItem_massive_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_massive_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VitalityItem_massive_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_massive_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VitalityReward_massive_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_massive_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_VitalityUserInfo_massive_2eproto;
namespace massive {
class MSG_Ret_GuideHistory_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_GuideHistory_SC> _instance;
} _MSG_Ret_GuideHistory_SC_default_instance_;
class MSG_Req_GuideStart_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_GuideStart_CS> _instance;
} _MSG_Req_GuideStart_CS_default_instance_;
class MSG_Ret_GuideStart_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_GuideStart_SC> _instance;
} _MSG_Ret_GuideStart_SC_default_instance_;
class MSG_Req_GuideOver_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_GuideOver_CS> _instance;
} _MSG_Req_GuideOver_CS_default_instance_;
class MSG_Ret_GuideOver_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_GuideOver_SC> _instance;
} _MSG_Ret_GuideOver_SC_default_instance_;
class MSG_RetCurrencyChange_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetCurrencyChange_SC> _instance;
} _MSG_RetCurrencyChange_SC_default_instance_;
class MSG_ReqCrystalNumToday_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqCrystalNumToday_CS> _instance;
} _MSG_ReqCrystalNumToday_CS_default_instance_;
class MSG_RetCrystalNumToday_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetCrystalNumToday_SC> _instance;
} _MSG_RetCrystalNumToday_SC_default_instance_;
class MSG_ReqStartAIRunning_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqStartAIRunning_CS> _instance;
} _MSG_ReqStartAIRunning_CS_default_instance_;
class MSG_RetStartAIRunning_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetStartAIRunning_SC> _instance;
} _MSG_RetStartAIRunning_SC_default_instance_;
class MSG_RetUserSysSetting_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetUserSysSetting_SC> _instance;
} _MSG_RetUserSysSetting_SC_default_instance_;
class MSG_ReqUserSysSetting_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqUserSysSetting_CS> _instance;
} _MSG_ReqUserSysSetting_CS_default_instance_;
class GiftItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GiftItem> _instance;
} _GiftItem_default_instance_;
class MSG_Ret_SuccessOpenGift_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_SuccessOpenGift_SC> _instance;
} _MSG_Ret_SuccessOpenGift_SC_default_instance_;
class MSG_ReqVitalityDegree_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqVitalityDegree_CS> _instance;
} _MSG_ReqVitalityDegree_CS_default_instance_;
class VitalityItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VitalityItem> _instance;
} _VitalityItem_default_instance_;
class VitalityRewardDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VitalityReward> _instance;
} _VitalityReward_default_instance_;
class VitalityUserInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VitalityUserInfo> _instance;
} _VitalityUserInfo_default_instance_;
class MSG_RetVitalityDegree_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetVitalityDegree_SC> _instance;
} _MSG_RetVitalityDegree_SC_default_instance_;
class MSG_ReqGetVitalityAward_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqGetVitalityAward_CS> _instance;
} _MSG_ReqGetVitalityAward_CS_default_instance_;
class MSG_RetGetVitalityAward_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetGetVitalityAward_SC> _instance;
} _MSG_RetGetVitalityAward_SC_default_instance_;
class MSG_ReqGeneRemakeInfo_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqGeneRemakeInfo_CS> _instance;
} _MSG_ReqGeneRemakeInfo_CS_default_instance_;
class GeneRemakeItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GeneRemakeItem> _instance;
} _GeneRemakeItem_default_instance_;
class MSG_RetGeneRemakeInfo_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetGeneRemakeInfo_SC> _instance;
} _MSG_RetGeneRemakeInfo_SC_default_instance_;
class MSG_ReqStrengthenGene_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqStrengthenGene_CS> _instance;
} _MSG_ReqStrengthenGene_CS_default_instance_;
class MSG_RetStrengthenGene_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetStrengthenGene_SC> _instance;
} _MSG_RetStrengthenGene_SC_default_instance_;
class MSG_Req_HoldonUser_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_HoldonUser_CS> _instance;
} _MSG_Req_HoldonUser_CS_default_instance_;
class MSG_Ret_HoldonUser_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_HoldonUser_SC> _instance;
} _MSG_Ret_HoldonUser_SC_default_instance_;
class MSG_Ret_HoldonUser_Interrupt_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_HoldonUser_Interrupt_SC> _instance;
} _MSG_Ret_HoldonUser_Interrupt_SC_default_instance_;
class MSG_ReqMakingItem_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqMakingItem_CS> _instance;
} _MSG_ReqMakingItem_CS_default_instance_;
class MSG_RetMakingItem_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetMakingItem_SC> _instance;
} _MSG_RetMakingItem_SC_default_instance_;
class MSG_Req_StruggleShape_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_StruggleShape_CS> _instance;
} _MSG_Req_StruggleShape_CS_default_instance_;
class MSG_Req_DivorceStuck_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_DivorceStuck_CS> _instance;
} _MSG_Req_DivorceStuck_CS_default_instance_;
class MSG_Req_Survey_Info_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_Survey_Info_CS> _instance;
} _MSG_Req_Survey_Info_CS_default_instance_;
class MSG_Ret_Survey_Info_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_Survey_Info_SC> _instance;
} _MSG_Ret_Survey_Info_SC_default_instance_;
class MSG_Req_GetSurveyReward_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_GetSurveyReward_CS> _instance;
} _MSG_Req_GetSurveyReward_CS_default_instance_;
class MSG_Ret_GetSurveyReward_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_GetSurveyReward_SC> _instance;
} _MSG_Ret_GetSurveyReward_SC_default_instance_;
class MSG_Ret_Wegame_Fcm_InfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_Wegame_Fcm_Info> _instance;
} _MSG_Ret_Wegame_Fcm_Info_default_instance_;
}  // namespace massive
static void InitDefaultsscc_info_GeneRemakeItem_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_GeneRemakeItem_default_instance_;
    new (ptr) ::massive::GeneRemakeItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::GeneRemakeItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GeneRemakeItem_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GeneRemakeItem_massive_2eproto}, {}};

static void InitDefaultsscc_info_GiftItem_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_GiftItem_default_instance_;
    new (ptr) ::massive::GiftItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::GiftItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GiftItem_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GiftItem_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqCrystalNumToday_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_ReqCrystalNumToday_CS_default_instance_;
    new (ptr) ::massive::MSG_ReqCrystalNumToday_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_ReqCrystalNumToday_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqCrystalNumToday_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqCrystalNumToday_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqGeneRemakeInfo_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_ReqGeneRemakeInfo_CS_default_instance_;
    new (ptr) ::massive::MSG_ReqGeneRemakeInfo_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_ReqGeneRemakeInfo_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqGeneRemakeInfo_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqGeneRemakeInfo_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqGetVitalityAward_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_ReqGetVitalityAward_CS_default_instance_;
    new (ptr) ::massive::MSG_ReqGetVitalityAward_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_ReqGetVitalityAward_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqGetVitalityAward_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqGetVitalityAward_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqMakingItem_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_ReqMakingItem_CS_default_instance_;
    new (ptr) ::massive::MSG_ReqMakingItem_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_ReqMakingItem_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqMakingItem_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqMakingItem_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqStartAIRunning_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_ReqStartAIRunning_CS_default_instance_;
    new (ptr) ::massive::MSG_ReqStartAIRunning_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_ReqStartAIRunning_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqStartAIRunning_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqStartAIRunning_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqStrengthenGene_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_ReqStrengthenGene_CS_default_instance_;
    new (ptr) ::massive::MSG_ReqStrengthenGene_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_ReqStrengthenGene_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqStrengthenGene_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqStrengthenGene_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqUserSysSetting_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_ReqUserSysSetting_CS_default_instance_;
    new (ptr) ::massive::MSG_ReqUserSysSetting_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_ReqUserSysSetting_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqUserSysSetting_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqUserSysSetting_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqVitalityDegree_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_ReqVitalityDegree_CS_default_instance_;
    new (ptr) ::massive::MSG_ReqVitalityDegree_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_ReqVitalityDegree_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqVitalityDegree_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqVitalityDegree_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_DivorceStuck_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Req_DivorceStuck_CS_default_instance_;
    new (ptr) ::massive::MSG_Req_DivorceStuck_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Req_DivorceStuck_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_DivorceStuck_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_DivorceStuck_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_GetSurveyReward_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Req_GetSurveyReward_CS_default_instance_;
    new (ptr) ::massive::MSG_Req_GetSurveyReward_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Req_GetSurveyReward_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_GetSurveyReward_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_GetSurveyReward_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_GuideOver_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Req_GuideOver_CS_default_instance_;
    new (ptr) ::massive::MSG_Req_GuideOver_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Req_GuideOver_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_GuideOver_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_GuideOver_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_GuideStart_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Req_GuideStart_CS_default_instance_;
    new (ptr) ::massive::MSG_Req_GuideStart_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Req_GuideStart_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_GuideStart_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_GuideStart_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_HoldonUser_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Req_HoldonUser_CS_default_instance_;
    new (ptr) ::massive::MSG_Req_HoldonUser_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Req_HoldonUser_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_HoldonUser_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_HoldonUser_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_StruggleShape_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Req_StruggleShape_CS_default_instance_;
    new (ptr) ::massive::MSG_Req_StruggleShape_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Req_StruggleShape_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_StruggleShape_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_StruggleShape_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_Survey_Info_CS_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Req_Survey_Info_CS_default_instance_;
    new (ptr) ::massive::MSG_Req_Survey_Info_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Req_Survey_Info_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_Survey_Info_CS_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_Survey_Info_CS_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_RetCrystalNumToday_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_RetCrystalNumToday_SC_default_instance_;
    new (ptr) ::massive::MSG_RetCrystalNumToday_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_RetCrystalNumToday_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_RetCrystalNumToday_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_RetCrystalNumToday_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_RetCurrencyChange_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_RetCurrencyChange_SC_default_instance_;
    new (ptr) ::massive::MSG_RetCurrencyChange_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_RetCurrencyChange_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_RetCurrencyChange_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_RetCurrencyChange_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_RetGeneRemakeInfo_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_RetGeneRemakeInfo_SC_default_instance_;
    new (ptr) ::massive::MSG_RetGeneRemakeInfo_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_RetGeneRemakeInfo_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_RetGeneRemakeInfo_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_RetGeneRemakeInfo_SC_massive_2eproto}, {
      &scc_info_GeneRemakeItem_massive_2eproto.base,}};

static void InitDefaultsscc_info_MSG_RetGetVitalityAward_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_RetGetVitalityAward_SC_default_instance_;
    new (ptr) ::massive::MSG_RetGetVitalityAward_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_RetGetVitalityAward_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_RetGetVitalityAward_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_RetGetVitalityAward_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_RetMakingItem_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_RetMakingItem_SC_default_instance_;
    new (ptr) ::massive::MSG_RetMakingItem_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_RetMakingItem_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_RetMakingItem_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_RetMakingItem_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_RetStartAIRunning_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_RetStartAIRunning_SC_default_instance_;
    new (ptr) ::massive::MSG_RetStartAIRunning_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_RetStartAIRunning_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_RetStartAIRunning_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_RetStartAIRunning_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_RetStrengthenGene_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_RetStrengthenGene_SC_default_instance_;
    new (ptr) ::massive::MSG_RetStrengthenGene_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_RetStrengthenGene_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_RetStrengthenGene_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_RetStrengthenGene_SC_massive_2eproto}, {
      &scc_info_GeneRemakeItem_massive_2eproto.base,}};

static void InitDefaultsscc_info_MSG_RetUserSysSetting_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_RetUserSysSetting_SC_default_instance_;
    new (ptr) ::massive::MSG_RetUserSysSetting_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_RetUserSysSetting_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_RetUserSysSetting_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_RetUserSysSetting_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_RetVitalityDegree_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_RetVitalityDegree_SC_default_instance_;
    new (ptr) ::massive::MSG_RetVitalityDegree_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_RetVitalityDegree_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_RetVitalityDegree_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_RetVitalityDegree_SC_massive_2eproto}, {
      &scc_info_VitalityUserInfo_massive_2eproto.base,}};

static void InitDefaultsscc_info_MSG_Ret_GetSurveyReward_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Ret_GetSurveyReward_SC_default_instance_;
    new (ptr) ::massive::MSG_Ret_GetSurveyReward_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Ret_GetSurveyReward_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_GetSurveyReward_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_GetSurveyReward_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_GuideHistory_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Ret_GuideHistory_SC_default_instance_;
    new (ptr) ::massive::MSG_Ret_GuideHistory_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Ret_GuideHistory_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_GuideHistory_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_GuideHistory_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_GuideOver_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Ret_GuideOver_SC_default_instance_;
    new (ptr) ::massive::MSG_Ret_GuideOver_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Ret_GuideOver_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_GuideOver_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_GuideOver_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_GuideStart_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Ret_GuideStart_SC_default_instance_;
    new (ptr) ::massive::MSG_Ret_GuideStart_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Ret_GuideStart_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_GuideStart_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_GuideStart_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_HoldonUser_Interrupt_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Ret_HoldonUser_Interrupt_SC_default_instance_;
    new (ptr) ::massive::MSG_Ret_HoldonUser_Interrupt_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Ret_HoldonUser_Interrupt_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_HoldonUser_Interrupt_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_HoldonUser_Interrupt_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_HoldonUser_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Ret_HoldonUser_SC_default_instance_;
    new (ptr) ::massive::MSG_Ret_HoldonUser_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Ret_HoldonUser_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_HoldonUser_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_HoldonUser_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_SuccessOpenGift_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Ret_SuccessOpenGift_SC_default_instance_;
    new (ptr) ::massive::MSG_Ret_SuccessOpenGift_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Ret_SuccessOpenGift_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_Ret_SuccessOpenGift_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_Ret_SuccessOpenGift_SC_massive_2eproto}, {
      &scc_info_GiftItem_massive_2eproto.base,}};

static void InitDefaultsscc_info_MSG_Ret_Survey_Info_SC_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Ret_Survey_Info_SC_default_instance_;
    new (ptr) ::massive::MSG_Ret_Survey_Info_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Ret_Survey_Info_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_Survey_Info_SC_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_Survey_Info_SC_massive_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_Wegame_Fcm_Info_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_MSG_Ret_Wegame_Fcm_Info_default_instance_;
    new (ptr) ::massive::MSG_Ret_Wegame_Fcm_Info();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::MSG_Ret_Wegame_Fcm_Info::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_Wegame_Fcm_Info_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_Wegame_Fcm_Info_massive_2eproto}, {}};

static void InitDefaultsscc_info_VitalityItem_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_VitalityItem_default_instance_;
    new (ptr) ::massive::VitalityItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::VitalityItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VitalityItem_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VitalityItem_massive_2eproto}, {}};

static void InitDefaultsscc_info_VitalityReward_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_VitalityReward_default_instance_;
    new (ptr) ::massive::VitalityReward();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::VitalityReward::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VitalityReward_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VitalityReward_massive_2eproto}, {}};

static void InitDefaultsscc_info_VitalityUserInfo_massive_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::massive::_VitalityUserInfo_default_instance_;
    new (ptr) ::massive::VitalityUserInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::massive::VitalityUserInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_VitalityUserInfo_massive_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_VitalityUserInfo_massive_2eproto}, {
      &scc_info_VitalityItem_massive_2eproto.base,
      &scc_info_VitalityReward_massive_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_massive_2eproto[38];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_massive_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_massive_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_massive_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GuideHistory_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GuideHistory_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GuideHistory_SC, guideids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_GuideStart_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_GuideStart_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_GuideStart_CS, guideid_),
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GuideStart_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GuideStart_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GuideStart_SC, guideid_),
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_GuideOver_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_GuideOver_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_GuideOver_CS, guideid_),
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GuideOver_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GuideOver_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GuideOver_SC, guideid_),
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetCurrencyChange_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetCurrencyChange_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetCurrencyChange_SC, currencyid_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetCurrencyChange_SC, changenum_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetCurrencyChange_SC, isadd_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetCurrencyChange_SC, everydaynum_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqCrystalNumToday_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqCrystalNumToday_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetCrystalNumToday_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetCrystalNumToday_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetCrystalNumToday_SC, bluecrystal_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetCrystalNumToday_SC, purplecrystal_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqStartAIRunning_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqStartAIRunning_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetStartAIRunning_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetStartAIRunning_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetUserSysSetting_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetUserSysSetting_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetUserSysSetting_SC, setting_),
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqUserSysSetting_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqUserSysSetting_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqUserSysSetting_CS, id_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqUserSysSetting_CS, set_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::massive::GiftItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::GiftItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::GiftItem, objid_),
  PROTOBUF_FIELD_OFFSET(::massive::GiftItem, num_),
  PROTOBUF_FIELD_OFFSET(::massive::GiftItem, bind_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_SuccessOpenGift_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_SuccessOpenGift_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_SuccessOpenGift_SC, giftid_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_SuccessOpenGift_SC, objs_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqVitalityDegree_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqVitalityDegree_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::VitalityItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::VitalityItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::VitalityItem, id_),
  PROTOBUF_FIELD_OFFSET(::massive::VitalityItem, attendtimes_),
  PROTOBUF_FIELD_OFFSET(::massive::VitalityItem, vitalitydegree_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::massive::VitalityReward, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::VitalityReward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::VitalityReward, degree_),
  PROTOBUF_FIELD_OFFSET(::massive::VitalityReward, state_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::massive::VitalityUserInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::VitalityUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::VitalityUserInfo, totaldegree_),
  PROTOBUF_FIELD_OFFSET(::massive::VitalityUserInfo, item_),
  PROTOBUF_FIELD_OFFSET(::massive::VitalityUserInfo, reward_),
  PROTOBUF_FIELD_OFFSET(::massive::VitalityUserInfo, attendtime_),
  0,
  ~0u,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetVitalityDegree_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetVitalityDegree_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetVitalityDegree_SC, info_),
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqGetVitalityAward_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqGetVitalityAward_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqGetVitalityAward_CS, degree_),
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetGetVitalityAward_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetGetVitalityAward_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetGetVitalityAward_SC, degree_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetGetVitalityAward_SC, errcode_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqGeneRemakeInfo_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqGeneRemakeInfo_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::GeneRemakeItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::GeneRemakeItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::GeneRemakeItem, genetype_),
  PROTOBUF_FIELD_OFFSET(::massive::GeneRemakeItem, level_),
  PROTOBUF_FIELD_OFFSET(::massive::GeneRemakeItem, exp_),
  PROTOBUF_FIELD_OFFSET(::massive::GeneRemakeItem, value_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetGeneRemakeInfo_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetGeneRemakeInfo_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetGeneRemakeInfo_SC, data_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqStrengthenGene_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqStrengthenGene_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqStrengthenGene_CS, genetype_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqStrengthenGene_CS, type_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetStrengthenGene_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetStrengthenGene_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetStrengthenGene_SC, retcode_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetStrengthenGene_SC, data_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_HoldonUser_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_HoldonUser_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_HoldonUser_CS, thisid_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_HoldonUser_CS, type_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_HoldonUser_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_HoldonUser_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_HoldonUser_SC, thisid_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_HoldonUser_SC, needtime_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_HoldonUser_SC, retcode_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_HoldonUser_SC, type_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_HoldonUser_Interrupt_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_HoldonUser_Interrupt_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_HoldonUser_Interrupt_SC, thisid_),
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqMakingItem_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqMakingItem_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_ReqMakingItem_CS, making_itemid_),
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetMakingItem_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetMakingItem_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetMakingItem_SC, result_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetMakingItem_SC, making_itemid_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_RetMakingItem_SC, objid_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_StruggleShape_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_StruggleShape_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_DivorceStuck_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_DivorceStuck_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_Survey_Info_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_Survey_Info_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_Survey_Info_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_Survey_Info_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_Survey_Info_SC, survey_id_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_GetSurveyReward_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_GetSurveyReward_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Req_GetSurveyReward_CS, survey_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GetSurveyReward_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GetSurveyReward_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GetSurveyReward_SC, survey_id_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_GetSurveyReward_SC, retcode_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_Wegame_Fcm_Info, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_Wegame_Fcm_Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::massive::MSG_Ret_Wegame_Fcm_Info, ratio_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::massive::MSG_Ret_GuideHistory_SC)},
  { 7, 13, sizeof(::massive::MSG_Req_GuideStart_CS)},
  { 14, 20, sizeof(::massive::MSG_Ret_GuideStart_SC)},
  { 21, 27, sizeof(::massive::MSG_Req_GuideOver_CS)},
  { 28, 34, sizeof(::massive::MSG_Ret_GuideOver_SC)},
  { 35, 44, sizeof(::massive::MSG_RetCurrencyChange_SC)},
  { 48, 53, sizeof(::massive::MSG_ReqCrystalNumToday_CS)},
  { 53, 60, sizeof(::massive::MSG_RetCrystalNumToday_SC)},
  { 62, 67, sizeof(::massive::MSG_ReqStartAIRunning_CS)},
  { 67, 72, sizeof(::massive::MSG_RetStartAIRunning_SC)},
  { 72, 78, sizeof(::massive::MSG_RetUserSysSetting_SC)},
  { 79, 86, sizeof(::massive::MSG_ReqUserSysSetting_CS)},
  { 88, 96, sizeof(::massive::GiftItem)},
  { 99, 106, sizeof(::massive::MSG_Ret_SuccessOpenGift_SC)},
  { 108, 113, sizeof(::massive::MSG_ReqVitalityDegree_CS)},
  { 113, 121, sizeof(::massive::VitalityItem)},
  { 124, 131, sizeof(::massive::VitalityReward)},
  { 133, 142, sizeof(::massive::VitalityUserInfo)},
  { 146, 152, sizeof(::massive::MSG_RetVitalityDegree_SC)},
  { 153, 159, sizeof(::massive::MSG_ReqGetVitalityAward_CS)},
  { 160, 167, sizeof(::massive::MSG_RetGetVitalityAward_SC)},
  { 169, 174, sizeof(::massive::MSG_ReqGeneRemakeInfo_CS)},
  { 174, 183, sizeof(::massive::GeneRemakeItem)},
  { 187, 193, sizeof(::massive::MSG_RetGeneRemakeInfo_SC)},
  { 194, 201, sizeof(::massive::MSG_ReqStrengthenGene_CS)},
  { 203, 210, sizeof(::massive::MSG_RetStrengthenGene_SC)},
  { 212, 219, sizeof(::massive::MSG_Req_HoldonUser_CS)},
  { 221, 230, sizeof(::massive::MSG_Ret_HoldonUser_SC)},
  { 234, 240, sizeof(::massive::MSG_Ret_HoldonUser_Interrupt_SC)},
  { 241, 247, sizeof(::massive::MSG_ReqMakingItem_CS)},
  { 248, 256, sizeof(::massive::MSG_RetMakingItem_SC)},
  { 259, 264, sizeof(::massive::MSG_Req_StruggleShape_CS)},
  { 264, 269, sizeof(::massive::MSG_Req_DivorceStuck_CS)},
  { 269, 274, sizeof(::massive::MSG_Req_Survey_Info_CS)},
  { 274, 280, sizeof(::massive::MSG_Ret_Survey_Info_SC)},
  { 281, 287, sizeof(::massive::MSG_Req_GetSurveyReward_CS)},
  { 288, 295, sizeof(::massive::MSG_Ret_GetSurveyReward_SC)},
  { 297, 303, sizeof(::massive::MSG_Ret_Wegame_Fcm_Info)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Ret_GuideHistory_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Req_GuideStart_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Ret_GuideStart_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Req_GuideOver_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Ret_GuideOver_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_RetCurrencyChange_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_ReqCrystalNumToday_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_RetCrystalNumToday_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_ReqStartAIRunning_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_RetStartAIRunning_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_RetUserSysSetting_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_ReqUserSysSetting_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_GiftItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Ret_SuccessOpenGift_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_ReqVitalityDegree_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_VitalityItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_VitalityReward_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_VitalityUserInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_RetVitalityDegree_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_ReqGetVitalityAward_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_RetGetVitalityAward_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_ReqGeneRemakeInfo_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_GeneRemakeItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_RetGeneRemakeInfo_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_ReqStrengthenGene_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_RetStrengthenGene_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Req_HoldonUser_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Ret_HoldonUser_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Ret_HoldonUser_Interrupt_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_ReqMakingItem_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_RetMakingItem_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Req_StruggleShape_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Req_DivorceStuck_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Req_Survey_Info_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Ret_Survey_Info_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Req_GetSurveyReward_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Ret_GetSurveyReward_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::massive::_MSG_Ret_Wegame_Fcm_Info_default_instance_),
};

const char descriptor_table_protodef_massive_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmassive.proto\022\007massive\"+\n\027MSG_Ret_Guid"
  "eHistory_SC\022\020\n\010guideids\030\001 \003(\r\"(\n\025MSG_Req"
  "_GuideStart_CS\022\017\n\007guideid\030\001 \001(\r\"(\n\025MSG_R"
  "et_GuideStart_SC\022\017\n\007guideid\030\001 \001(\r\"\'\n\024MSG"
  "_Req_GuideOver_CS\022\017\n\007guideid\030\001 \001(\r\"\'\n\024MS"
  "G_Ret_GuideOver_SC\022\017\n\007guideid\030\001 \001(\r\"e\n\030M"
  "SG_RetCurrencyChange_SC\022\022\n\ncurrencyid\030\001 "
  "\001(\r\022\021\n\tchangenum\030\002 \001(\r\022\r\n\005isadd\030\003 \001(\010\022\023\n"
  "\013everydaynum\030\004 \001(\r\"\033\n\031MSG_ReqCrystalNumT"
  "oday_CS\"G\n\031MSG_RetCrystalNumToday_SC\022\023\n\013"
  "bluecrystal\030\001 \001(\r\022\025\n\rpurplecrystal\030\002 \001(\r"
  "\"\032\n\030MSG_ReqStartAIRunning_CS\"\032\n\030MSG_RetS"
  "tartAIRunning_SC\"+\n\030MSG_RetUserSysSettin"
  "g_SC\022\017\n\007setting\030\001 \001(\t\"3\n\030MSG_ReqUserSysS"
  "etting_CS\022\n\n\002id\030\001 \001(\r\022\013\n\003set\030\002 \001(\010\"4\n\010Gi"
  "ftItem\022\r\n\005objid\030\001 \001(\r\022\013\n\003num\030\002 \001(\r\022\014\n\004bi"
  "nd\030\003 \001(\r\"M\n\032MSG_Ret_SuccessOpenGift_SC\022\016"
  "\n\006giftid\030\001 \001(\r\022\037\n\004objs\030\002 \003(\0132\021.massive.G"
  "iftItem\"\032\n\030MSG_ReqVitalityDegree_CS\"G\n\014V"
  "italityItem\022\n\n\002id\030\001 \001(\r\022\023\n\013attendtimes\030\002"
  " \001(\r\022\026\n\016vitalitydegree\030\003 \001(\r\"/\n\016Vitality"
  "Reward\022\016\n\006degree\030\001 \001(\r\022\r\n\005state\030\002 \001(\r\"\211\001"
  "\n\020VitalityUserInfo\022\023\n\013totaldegree\030\001 \001(\r\022"
  "#\n\004item\030\002 \003(\0132\025.massive.VitalityItem\022\'\n\006"
  "reward\030\003 \003(\0132\027.massive.VitalityReward\022\022\n"
  "\nattendtime\030\004 \001(\r\"C\n\030MSG_RetVitalityDegr"
  "ee_SC\022\'\n\004info\030\001 \001(\0132\031.massive.VitalityUs"
  "erInfo\",\n\032MSG_ReqGetVitalityAward_CS\022\016\n\006"
  "degree\030\001 \001(\r\"=\n\032MSG_RetGetVitalityAward_"
  "SC\022\016\n\006degree\030\001 \001(\r\022\017\n\007errcode\030\002 \001(\r\"\032\n\030M"
  "SG_ReqGeneRemakeInfo_CS\"M\n\016GeneRemakeIte"
  "m\022\020\n\010genetype\030\001 \001(\r\022\r\n\005level\030\002 \001(\r\022\013\n\003ex"
  "p\030\003 \001(\r\022\r\n\005value\030\004 \001(\r\"A\n\030MSG_RetGeneRem"
  "akeInfo_SC\022%\n\004data\030\001 \003(\0132\027.massive.GeneR"
  "emakeItem\":\n\030MSG_ReqStrengthenGene_CS\022\020\n"
  "\010genetype\030\001 \001(\r\022\014\n\004type\030\002 \001(\r\"R\n\030MSG_Ret"
  "StrengthenGene_SC\022\017\n\007retcode\030\001 \001(\r\022%\n\004da"
  "ta\030\002 \001(\0132\027.massive.GeneRemakeItem\"5\n\025MSG"
  "_Req_HoldonUser_CS\022\016\n\006thisid\030\001 \001(\004\022\014\n\004ty"
  "pe\030\002 \001(\r\"X\n\025MSG_Ret_HoldonUser_SC\022\016\n\006thi"
  "sid\030\001 \001(\004\022\020\n\010needtime\030\002 \001(\r\022\017\n\007retcode\030\003"
  " \001(\r\022\014\n\004type\030\004 \001(\r\"1\n\037MSG_Ret_HoldonUser"
  "_Interrupt_SC\022\016\n\006thisid\030\001 \001(\004\"-\n\024MSG_Req"
  "MakingItem_CS\022\025\n\rmaking_itemid\030\001 \001(\r\"L\n\024"
  "MSG_RetMakingItem_SC\022\016\n\006result\030\001 \001(\r\022\025\n\r"
  "making_itemid\030\002 \001(\r\022\r\n\005objid\030\003 \001(\r\"\032\n\030MS"
  "G_Req_StruggleShape_CS\"\031\n\027MSG_Req_Divorc"
  "eStuck_CS\"\030\n\026MSG_Req_Survey_Info_CS\"+\n\026M"
  "SG_Ret_Survey_Info_SC\022\021\n\tsurvey_id\030\001 \003(\r"
  "\"/\n\032MSG_Req_GetSurveyReward_CS\022\021\n\tsurvey"
  "_id\030\001 \001(\r\"@\n\032MSG_Ret_GetSurveyReward_SC\022"
  "\021\n\tsurvey_id\030\001 \001(\r\022\017\n\007retcode\030\002 \001(\r\"(\n\027M"
  "SG_Ret_Wegame_Fcm_Info\022\r\n\005ratio\030\001 \001(\r*\347\001"
  "\n\025GetSurveyRewardResult\022\035\n\031GET_SURVEY_RE"
  "WARD_SUCCESS\020\000\022\036\n\032GET_SURVEY_REWARD_PROC"
  "LOCK\020\001\022$\n GET_SURVEY_REWARD_NOT_MEET_LIM"
  "IT\020\002\022\035\n\031GET_SURVEY_REWARD_HAS_GOT\020\003\022&\n\"G"
  "ET_SURVEY_REWARD_SURVEY_NOT_EXIST\020\004\022\"\n\036G"
  "ET_SURVEY_REWARD_UNKNOW_ERROR\020\005"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_massive_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_massive_2eproto_sccs[38] = {
  &scc_info_GeneRemakeItem_massive_2eproto.base,
  &scc_info_GiftItem_massive_2eproto.base,
  &scc_info_MSG_ReqCrystalNumToday_CS_massive_2eproto.base,
  &scc_info_MSG_ReqGeneRemakeInfo_CS_massive_2eproto.base,
  &scc_info_MSG_ReqGetVitalityAward_CS_massive_2eproto.base,
  &scc_info_MSG_ReqMakingItem_CS_massive_2eproto.base,
  &scc_info_MSG_ReqStartAIRunning_CS_massive_2eproto.base,
  &scc_info_MSG_ReqStrengthenGene_CS_massive_2eproto.base,
  &scc_info_MSG_ReqUserSysSetting_CS_massive_2eproto.base,
  &scc_info_MSG_ReqVitalityDegree_CS_massive_2eproto.base,
  &scc_info_MSG_Req_DivorceStuck_CS_massive_2eproto.base,
  &scc_info_MSG_Req_GetSurveyReward_CS_massive_2eproto.base,
  &scc_info_MSG_Req_GuideOver_CS_massive_2eproto.base,
  &scc_info_MSG_Req_GuideStart_CS_massive_2eproto.base,
  &scc_info_MSG_Req_HoldonUser_CS_massive_2eproto.base,
  &scc_info_MSG_Req_StruggleShape_CS_massive_2eproto.base,
  &scc_info_MSG_Req_Survey_Info_CS_massive_2eproto.base,
  &scc_info_MSG_RetCrystalNumToday_SC_massive_2eproto.base,
  &scc_info_MSG_RetCurrencyChange_SC_massive_2eproto.base,
  &scc_info_MSG_RetGeneRemakeInfo_SC_massive_2eproto.base,
  &scc_info_MSG_RetGetVitalityAward_SC_massive_2eproto.base,
  &scc_info_MSG_RetMakingItem_SC_massive_2eproto.base,
  &scc_info_MSG_RetStartAIRunning_SC_massive_2eproto.base,
  &scc_info_MSG_RetStrengthenGene_SC_massive_2eproto.base,
  &scc_info_MSG_RetUserSysSetting_SC_massive_2eproto.base,
  &scc_info_MSG_RetVitalityDegree_SC_massive_2eproto.base,
  &scc_info_MSG_Ret_GetSurveyReward_SC_massive_2eproto.base,
  &scc_info_MSG_Ret_GuideHistory_SC_massive_2eproto.base,
  &scc_info_MSG_Ret_GuideOver_SC_massive_2eproto.base,
  &scc_info_MSG_Ret_GuideStart_SC_massive_2eproto.base,
  &scc_info_MSG_Ret_HoldonUser_Interrupt_SC_massive_2eproto.base,
  &scc_info_MSG_Ret_HoldonUser_SC_massive_2eproto.base,
  &scc_info_MSG_Ret_SuccessOpenGift_SC_massive_2eproto.base,
  &scc_info_MSG_Ret_Survey_Info_SC_massive_2eproto.base,
  &scc_info_MSG_Ret_Wegame_Fcm_Info_massive_2eproto.base,
  &scc_info_VitalityItem_massive_2eproto.base,
  &scc_info_VitalityReward_massive_2eproto.base,
  &scc_info_VitalityUserInfo_massive_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_massive_2eproto_once;
static bool descriptor_table_massive_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_massive_2eproto = {
  &descriptor_table_massive_2eproto_initialized, descriptor_table_protodef_massive_2eproto, "massive.proto", 2351,
  &descriptor_table_massive_2eproto_once, descriptor_table_massive_2eproto_sccs, descriptor_table_massive_2eproto_deps, 38, 0,
  schemas, file_default_instances, TableStruct_massive_2eproto::offsets,
  file_level_metadata_massive_2eproto, 38, file_level_enum_descriptors_massive_2eproto, file_level_service_descriptors_massive_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_massive_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_massive_2eproto)), true);
namespace massive {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetSurveyRewardResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_massive_2eproto);
  return file_level_enum_descriptors_massive_2eproto[0];
}
bool GetSurveyRewardResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MSG_Ret_GuideHistory_SC::InitAsDefaultInstance() {
}
class MSG_Ret_GuideHistory_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_GuideHistory_SC>()._has_bits_);
};

MSG_Ret_GuideHistory_SC::MSG_Ret_GuideHistory_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Ret_GuideHistory_SC)
}
MSG_Ret_GuideHistory_SC::MSG_Ret_GuideHistory_SC(const MSG_Ret_GuideHistory_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      guideids_(from.guideids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Ret_GuideHistory_SC)
}

void MSG_Ret_GuideHistory_SC::SharedCtor() {
}

MSG_Ret_GuideHistory_SC::~MSG_Ret_GuideHistory_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_Ret_GuideHistory_SC)
  SharedDtor();
}

void MSG_Ret_GuideHistory_SC::SharedDtor() {
}

void MSG_Ret_GuideHistory_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_GuideHistory_SC& MSG_Ret_GuideHistory_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_GuideHistory_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_GuideHistory_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Ret_GuideHistory_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guideids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_GuideHistory_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 guideids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_guideids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_guideids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_GuideHistory_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Ret_GuideHistory_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 guideids = 1;
  for (int i = 0, n = this->_internal_guideids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guideids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Ret_GuideHistory_SC)
  return target;
}

size_t MSG_Ret_GuideHistory_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Ret_GuideHistory_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 guideids = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->guideids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_guideids_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_GuideHistory_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Ret_GuideHistory_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_GuideHistory_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_GuideHistory_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Ret_GuideHistory_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Ret_GuideHistory_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_GuideHistory_SC::MergeFrom(const MSG_Ret_GuideHistory_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Ret_GuideHistory_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guideids_.MergeFrom(from.guideids_);
}

void MSG_Ret_GuideHistory_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Ret_GuideHistory_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_GuideHistory_SC::CopyFrom(const MSG_Ret_GuideHistory_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Ret_GuideHistory_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_GuideHistory_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_GuideHistory_SC::InternalSwap(MSG_Ret_GuideHistory_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  guideids_.InternalSwap(&other->guideids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_GuideHistory_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_GuideStart_CS::InitAsDefaultInstance() {
}
class MSG_Req_GuideStart_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_GuideStart_CS>()._has_bits_);
  static void set_has_guideid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_GuideStart_CS::MSG_Req_GuideStart_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Req_GuideStart_CS)
}
MSG_Req_GuideStart_CS::MSG_Req_GuideStart_CS(const MSG_Req_GuideStart_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guideid_ = from.guideid_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Req_GuideStart_CS)
}

void MSG_Req_GuideStart_CS::SharedCtor() {
  guideid_ = 0u;
}

MSG_Req_GuideStart_CS::~MSG_Req_GuideStart_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_Req_GuideStart_CS)
  SharedDtor();
}

void MSG_Req_GuideStart_CS::SharedDtor() {
}

void MSG_Req_GuideStart_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_GuideStart_CS& MSG_Req_GuideStart_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_GuideStart_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_GuideStart_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Req_GuideStart_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guideid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_GuideStart_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guideid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guideid(&has_bits);
          guideid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_GuideStart_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Req_GuideStart_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guideid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guideid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Req_GuideStart_CS)
  return target;
}

size_t MSG_Req_GuideStart_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Req_GuideStart_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guideid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guideid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_GuideStart_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Req_GuideStart_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_GuideStart_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_GuideStart_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Req_GuideStart_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Req_GuideStart_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_GuideStart_CS::MergeFrom(const MSG_Req_GuideStart_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Req_GuideStart_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guideid()) {
    _internal_set_guideid(from._internal_guideid());
  }
}

void MSG_Req_GuideStart_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Req_GuideStart_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_GuideStart_CS::CopyFrom(const MSG_Req_GuideStart_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Req_GuideStart_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_GuideStart_CS::IsInitialized() const {
  return true;
}

void MSG_Req_GuideStart_CS::InternalSwap(MSG_Req_GuideStart_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guideid_, other->guideid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_GuideStart_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_GuideStart_SC::InitAsDefaultInstance() {
}
class MSG_Ret_GuideStart_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_GuideStart_SC>()._has_bits_);
  static void set_has_guideid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_GuideStart_SC::MSG_Ret_GuideStart_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Ret_GuideStart_SC)
}
MSG_Ret_GuideStart_SC::MSG_Ret_GuideStart_SC(const MSG_Ret_GuideStart_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guideid_ = from.guideid_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Ret_GuideStart_SC)
}

void MSG_Ret_GuideStart_SC::SharedCtor() {
  guideid_ = 0u;
}

MSG_Ret_GuideStart_SC::~MSG_Ret_GuideStart_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_Ret_GuideStart_SC)
  SharedDtor();
}

void MSG_Ret_GuideStart_SC::SharedDtor() {
}

void MSG_Ret_GuideStart_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_GuideStart_SC& MSG_Ret_GuideStart_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_GuideStart_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_GuideStart_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Ret_GuideStart_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guideid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_GuideStart_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guideid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guideid(&has_bits);
          guideid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_GuideStart_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Ret_GuideStart_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guideid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guideid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Ret_GuideStart_SC)
  return target;
}

size_t MSG_Ret_GuideStart_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Ret_GuideStart_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guideid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guideid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_GuideStart_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Ret_GuideStart_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_GuideStart_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_GuideStart_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Ret_GuideStart_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Ret_GuideStart_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_GuideStart_SC::MergeFrom(const MSG_Ret_GuideStart_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Ret_GuideStart_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guideid()) {
    _internal_set_guideid(from._internal_guideid());
  }
}

void MSG_Ret_GuideStart_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Ret_GuideStart_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_GuideStart_SC::CopyFrom(const MSG_Ret_GuideStart_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Ret_GuideStart_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_GuideStart_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_GuideStart_SC::InternalSwap(MSG_Ret_GuideStart_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guideid_, other->guideid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_GuideStart_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_GuideOver_CS::InitAsDefaultInstance() {
}
class MSG_Req_GuideOver_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_GuideOver_CS>()._has_bits_);
  static void set_has_guideid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_GuideOver_CS::MSG_Req_GuideOver_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Req_GuideOver_CS)
}
MSG_Req_GuideOver_CS::MSG_Req_GuideOver_CS(const MSG_Req_GuideOver_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guideid_ = from.guideid_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Req_GuideOver_CS)
}

void MSG_Req_GuideOver_CS::SharedCtor() {
  guideid_ = 0u;
}

MSG_Req_GuideOver_CS::~MSG_Req_GuideOver_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_Req_GuideOver_CS)
  SharedDtor();
}

void MSG_Req_GuideOver_CS::SharedDtor() {
}

void MSG_Req_GuideOver_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_GuideOver_CS& MSG_Req_GuideOver_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_GuideOver_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_GuideOver_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Req_GuideOver_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guideid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_GuideOver_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guideid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guideid(&has_bits);
          guideid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_GuideOver_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Req_GuideOver_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guideid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guideid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Req_GuideOver_CS)
  return target;
}

size_t MSG_Req_GuideOver_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Req_GuideOver_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guideid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guideid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_GuideOver_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Req_GuideOver_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_GuideOver_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_GuideOver_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Req_GuideOver_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Req_GuideOver_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_GuideOver_CS::MergeFrom(const MSG_Req_GuideOver_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Req_GuideOver_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guideid()) {
    _internal_set_guideid(from._internal_guideid());
  }
}

void MSG_Req_GuideOver_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Req_GuideOver_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_GuideOver_CS::CopyFrom(const MSG_Req_GuideOver_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Req_GuideOver_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_GuideOver_CS::IsInitialized() const {
  return true;
}

void MSG_Req_GuideOver_CS::InternalSwap(MSG_Req_GuideOver_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guideid_, other->guideid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_GuideOver_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_GuideOver_SC::InitAsDefaultInstance() {
}
class MSG_Ret_GuideOver_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_GuideOver_SC>()._has_bits_);
  static void set_has_guideid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_GuideOver_SC::MSG_Ret_GuideOver_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Ret_GuideOver_SC)
}
MSG_Ret_GuideOver_SC::MSG_Ret_GuideOver_SC(const MSG_Ret_GuideOver_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guideid_ = from.guideid_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Ret_GuideOver_SC)
}

void MSG_Ret_GuideOver_SC::SharedCtor() {
  guideid_ = 0u;
}

MSG_Ret_GuideOver_SC::~MSG_Ret_GuideOver_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_Ret_GuideOver_SC)
  SharedDtor();
}

void MSG_Ret_GuideOver_SC::SharedDtor() {
}

void MSG_Ret_GuideOver_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_GuideOver_SC& MSG_Ret_GuideOver_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_GuideOver_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_GuideOver_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Ret_GuideOver_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guideid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_GuideOver_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guideid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guideid(&has_bits);
          guideid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_GuideOver_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Ret_GuideOver_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guideid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guideid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Ret_GuideOver_SC)
  return target;
}

size_t MSG_Ret_GuideOver_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Ret_GuideOver_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guideid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guideid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_GuideOver_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Ret_GuideOver_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_GuideOver_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_GuideOver_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Ret_GuideOver_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Ret_GuideOver_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_GuideOver_SC::MergeFrom(const MSG_Ret_GuideOver_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Ret_GuideOver_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guideid()) {
    _internal_set_guideid(from._internal_guideid());
  }
}

void MSG_Ret_GuideOver_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Ret_GuideOver_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_GuideOver_SC::CopyFrom(const MSG_Ret_GuideOver_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Ret_GuideOver_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_GuideOver_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_GuideOver_SC::InternalSwap(MSG_Ret_GuideOver_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guideid_, other->guideid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_GuideOver_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetCurrencyChange_SC::InitAsDefaultInstance() {
}
class MSG_RetCurrencyChange_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetCurrencyChange_SC>()._has_bits_);
  static void set_has_currencyid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_changenum(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_isadd(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_everydaynum(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

MSG_RetCurrencyChange_SC::MSG_RetCurrencyChange_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_RetCurrencyChange_SC)
}
MSG_RetCurrencyChange_SC::MSG_RetCurrencyChange_SC(const MSG_RetCurrencyChange_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&currencyid_, &from.currencyid_,
    static_cast<size_t>(reinterpret_cast<char*>(&everydaynum_) -
    reinterpret_cast<char*>(&currencyid_)) + sizeof(everydaynum_));
  // @@protoc_insertion_point(copy_constructor:massive.MSG_RetCurrencyChange_SC)
}

void MSG_RetCurrencyChange_SC::SharedCtor() {
  ::memset(&currencyid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&everydaynum_) -
      reinterpret_cast<char*>(&currencyid_)) + sizeof(everydaynum_));
}

MSG_RetCurrencyChange_SC::~MSG_RetCurrencyChange_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_RetCurrencyChange_SC)
  SharedDtor();
}

void MSG_RetCurrencyChange_SC::SharedDtor() {
}

void MSG_RetCurrencyChange_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetCurrencyChange_SC& MSG_RetCurrencyChange_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetCurrencyChange_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetCurrencyChange_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_RetCurrencyChange_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&currencyid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&everydaynum_) -
        reinterpret_cast<char*>(&currencyid_)) + sizeof(everydaynum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetCurrencyChange_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 currencyid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_currencyid(&has_bits);
          currencyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 changenum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_changenum(&has_bits);
          changenum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool isadd = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_isadd(&has_bits);
          isadd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 everydaynum = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_everydaynum(&has_bits);
          everydaynum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetCurrencyChange_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_RetCurrencyChange_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 currencyid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_currencyid(), target);
  }

  // optional uint32 changenum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_changenum(), target);
  }

  // optional bool isadd = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_isadd(), target);
  }

  // optional uint32 everydaynum = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_everydaynum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_RetCurrencyChange_SC)
  return target;
}

size_t MSG_RetCurrencyChange_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_RetCurrencyChange_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 currencyid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_currencyid());
    }

    // optional uint32 changenum = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_changenum());
    }

    // optional bool isadd = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional uint32 everydaynum = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_everydaynum());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetCurrencyChange_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_RetCurrencyChange_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetCurrencyChange_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetCurrencyChange_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_RetCurrencyChange_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_RetCurrencyChange_SC)
    MergeFrom(*source);
  }
}

void MSG_RetCurrencyChange_SC::MergeFrom(const MSG_RetCurrencyChange_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_RetCurrencyChange_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      currencyid_ = from.currencyid_;
    }
    if (cached_has_bits & 0x00000002u) {
      changenum_ = from.changenum_;
    }
    if (cached_has_bits & 0x00000004u) {
      isadd_ = from.isadd_;
    }
    if (cached_has_bits & 0x00000008u) {
      everydaynum_ = from.everydaynum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_RetCurrencyChange_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_RetCurrencyChange_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetCurrencyChange_SC::CopyFrom(const MSG_RetCurrencyChange_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_RetCurrencyChange_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetCurrencyChange_SC::IsInitialized() const {
  return true;
}

void MSG_RetCurrencyChange_SC::InternalSwap(MSG_RetCurrencyChange_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(currencyid_, other->currencyid_);
  swap(changenum_, other->changenum_);
  swap(isadd_, other->isadd_);
  swap(everydaynum_, other->everydaynum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetCurrencyChange_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqCrystalNumToday_CS::InitAsDefaultInstance() {
}
class MSG_ReqCrystalNumToday_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqCrystalNumToday_CS>()._has_bits_);
};

MSG_ReqCrystalNumToday_CS::MSG_ReqCrystalNumToday_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_ReqCrystalNumToday_CS)
}
MSG_ReqCrystalNumToday_CS::MSG_ReqCrystalNumToday_CS(const MSG_ReqCrystalNumToday_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_ReqCrystalNumToday_CS)
}

void MSG_ReqCrystalNumToday_CS::SharedCtor() {
}

MSG_ReqCrystalNumToday_CS::~MSG_ReqCrystalNumToday_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_ReqCrystalNumToday_CS)
  SharedDtor();
}

void MSG_ReqCrystalNumToday_CS::SharedDtor() {
}

void MSG_ReqCrystalNumToday_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqCrystalNumToday_CS& MSG_ReqCrystalNumToday_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqCrystalNumToday_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqCrystalNumToday_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_ReqCrystalNumToday_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqCrystalNumToday_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqCrystalNumToday_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_ReqCrystalNumToday_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_ReqCrystalNumToday_CS)
  return target;
}

size_t MSG_ReqCrystalNumToday_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_ReqCrystalNumToday_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqCrystalNumToday_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_ReqCrystalNumToday_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqCrystalNumToday_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqCrystalNumToday_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_ReqCrystalNumToday_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_ReqCrystalNumToday_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqCrystalNumToday_CS::MergeFrom(const MSG_ReqCrystalNumToday_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_ReqCrystalNumToday_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_ReqCrystalNumToday_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_ReqCrystalNumToday_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqCrystalNumToday_CS::CopyFrom(const MSG_ReqCrystalNumToday_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_ReqCrystalNumToday_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqCrystalNumToday_CS::IsInitialized() const {
  return true;
}

void MSG_ReqCrystalNumToday_CS::InternalSwap(MSG_ReqCrystalNumToday_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqCrystalNumToday_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetCrystalNumToday_SC::InitAsDefaultInstance() {
}
class MSG_RetCrystalNumToday_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetCrystalNumToday_SC>()._has_bits_);
  static void set_has_bluecrystal(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_purplecrystal(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_RetCrystalNumToday_SC::MSG_RetCrystalNumToday_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_RetCrystalNumToday_SC)
}
MSG_RetCrystalNumToday_SC::MSG_RetCrystalNumToday_SC(const MSG_RetCrystalNumToday_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bluecrystal_, &from.bluecrystal_,
    static_cast<size_t>(reinterpret_cast<char*>(&purplecrystal_) -
    reinterpret_cast<char*>(&bluecrystal_)) + sizeof(purplecrystal_));
  // @@protoc_insertion_point(copy_constructor:massive.MSG_RetCrystalNumToday_SC)
}

void MSG_RetCrystalNumToday_SC::SharedCtor() {
  ::memset(&bluecrystal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&purplecrystal_) -
      reinterpret_cast<char*>(&bluecrystal_)) + sizeof(purplecrystal_));
}

MSG_RetCrystalNumToday_SC::~MSG_RetCrystalNumToday_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_RetCrystalNumToday_SC)
  SharedDtor();
}

void MSG_RetCrystalNumToday_SC::SharedDtor() {
}

void MSG_RetCrystalNumToday_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetCrystalNumToday_SC& MSG_RetCrystalNumToday_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetCrystalNumToday_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetCrystalNumToday_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_RetCrystalNumToday_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&bluecrystal_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&purplecrystal_) -
        reinterpret_cast<char*>(&bluecrystal_)) + sizeof(purplecrystal_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetCrystalNumToday_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 bluecrystal = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_bluecrystal(&has_bits);
          bluecrystal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 purplecrystal = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_purplecrystal(&has_bits);
          purplecrystal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetCrystalNumToday_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_RetCrystalNumToday_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 bluecrystal = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_bluecrystal(), target);
  }

  // optional uint32 purplecrystal = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_purplecrystal(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_RetCrystalNumToday_SC)
  return target;
}

size_t MSG_RetCrystalNumToday_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_RetCrystalNumToday_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 bluecrystal = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bluecrystal());
    }

    // optional uint32 purplecrystal = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_purplecrystal());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetCrystalNumToday_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_RetCrystalNumToday_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetCrystalNumToday_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetCrystalNumToday_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_RetCrystalNumToday_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_RetCrystalNumToday_SC)
    MergeFrom(*source);
  }
}

void MSG_RetCrystalNumToday_SC::MergeFrom(const MSG_RetCrystalNumToday_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_RetCrystalNumToday_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      bluecrystal_ = from.bluecrystal_;
    }
    if (cached_has_bits & 0x00000002u) {
      purplecrystal_ = from.purplecrystal_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_RetCrystalNumToday_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_RetCrystalNumToday_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetCrystalNumToday_SC::CopyFrom(const MSG_RetCrystalNumToday_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_RetCrystalNumToday_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetCrystalNumToday_SC::IsInitialized() const {
  return true;
}

void MSG_RetCrystalNumToday_SC::InternalSwap(MSG_RetCrystalNumToday_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(bluecrystal_, other->bluecrystal_);
  swap(purplecrystal_, other->purplecrystal_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetCrystalNumToday_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqStartAIRunning_CS::InitAsDefaultInstance() {
}
class MSG_ReqStartAIRunning_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqStartAIRunning_CS>()._has_bits_);
};

MSG_ReqStartAIRunning_CS::MSG_ReqStartAIRunning_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_ReqStartAIRunning_CS)
}
MSG_ReqStartAIRunning_CS::MSG_ReqStartAIRunning_CS(const MSG_ReqStartAIRunning_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_ReqStartAIRunning_CS)
}

void MSG_ReqStartAIRunning_CS::SharedCtor() {
}

MSG_ReqStartAIRunning_CS::~MSG_ReqStartAIRunning_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_ReqStartAIRunning_CS)
  SharedDtor();
}

void MSG_ReqStartAIRunning_CS::SharedDtor() {
}

void MSG_ReqStartAIRunning_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqStartAIRunning_CS& MSG_ReqStartAIRunning_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqStartAIRunning_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqStartAIRunning_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_ReqStartAIRunning_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqStartAIRunning_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqStartAIRunning_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_ReqStartAIRunning_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_ReqStartAIRunning_CS)
  return target;
}

size_t MSG_ReqStartAIRunning_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_ReqStartAIRunning_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqStartAIRunning_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_ReqStartAIRunning_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqStartAIRunning_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqStartAIRunning_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_ReqStartAIRunning_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_ReqStartAIRunning_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqStartAIRunning_CS::MergeFrom(const MSG_ReqStartAIRunning_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_ReqStartAIRunning_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_ReqStartAIRunning_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_ReqStartAIRunning_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqStartAIRunning_CS::CopyFrom(const MSG_ReqStartAIRunning_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_ReqStartAIRunning_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqStartAIRunning_CS::IsInitialized() const {
  return true;
}

void MSG_ReqStartAIRunning_CS::InternalSwap(MSG_ReqStartAIRunning_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqStartAIRunning_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetStartAIRunning_SC::InitAsDefaultInstance() {
}
class MSG_RetStartAIRunning_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetStartAIRunning_SC>()._has_bits_);
};

MSG_RetStartAIRunning_SC::MSG_RetStartAIRunning_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_RetStartAIRunning_SC)
}
MSG_RetStartAIRunning_SC::MSG_RetStartAIRunning_SC(const MSG_RetStartAIRunning_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_RetStartAIRunning_SC)
}

void MSG_RetStartAIRunning_SC::SharedCtor() {
}

MSG_RetStartAIRunning_SC::~MSG_RetStartAIRunning_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_RetStartAIRunning_SC)
  SharedDtor();
}

void MSG_RetStartAIRunning_SC::SharedDtor() {
}

void MSG_RetStartAIRunning_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetStartAIRunning_SC& MSG_RetStartAIRunning_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetStartAIRunning_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetStartAIRunning_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_RetStartAIRunning_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetStartAIRunning_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetStartAIRunning_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_RetStartAIRunning_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_RetStartAIRunning_SC)
  return target;
}

size_t MSG_RetStartAIRunning_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_RetStartAIRunning_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetStartAIRunning_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_RetStartAIRunning_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetStartAIRunning_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetStartAIRunning_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_RetStartAIRunning_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_RetStartAIRunning_SC)
    MergeFrom(*source);
  }
}

void MSG_RetStartAIRunning_SC::MergeFrom(const MSG_RetStartAIRunning_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_RetStartAIRunning_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_RetStartAIRunning_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_RetStartAIRunning_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetStartAIRunning_SC::CopyFrom(const MSG_RetStartAIRunning_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_RetStartAIRunning_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetStartAIRunning_SC::IsInitialized() const {
  return true;
}

void MSG_RetStartAIRunning_SC::InternalSwap(MSG_RetStartAIRunning_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetStartAIRunning_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetUserSysSetting_SC::InitAsDefaultInstance() {
}
class MSG_RetUserSysSetting_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetUserSysSetting_SC>()._has_bits_);
  static void set_has_setting(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_RetUserSysSetting_SC::MSG_RetUserSysSetting_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_RetUserSysSetting_SC)
}
MSG_RetUserSysSetting_SC::MSG_RetUserSysSetting_SC(const MSG_RetUserSysSetting_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_setting()) {
    setting_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.setting_);
  }
  // @@protoc_insertion_point(copy_constructor:massive.MSG_RetUserSysSetting_SC)
}

void MSG_RetUserSysSetting_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_RetUserSysSetting_SC_massive_2eproto.base);
  setting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MSG_RetUserSysSetting_SC::~MSG_RetUserSysSetting_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_RetUserSysSetting_SC)
  SharedDtor();
}

void MSG_RetUserSysSetting_SC::SharedDtor() {
  setting_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MSG_RetUserSysSetting_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetUserSysSetting_SC& MSG_RetUserSysSetting_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetUserSysSetting_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetUserSysSetting_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_RetUserSysSetting_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    setting_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetUserSysSetting_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string setting = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_setting();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "massive.MSG_RetUserSysSetting_SC.setting");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetUserSysSetting_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_RetUserSysSetting_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string setting = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_setting().data(), static_cast<int>(this->_internal_setting().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "massive.MSG_RetUserSysSetting_SC.setting");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_setting(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_RetUserSysSetting_SC)
  return target;
}

size_t MSG_RetUserSysSetting_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_RetUserSysSetting_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string setting = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_setting());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetUserSysSetting_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_RetUserSysSetting_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetUserSysSetting_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetUserSysSetting_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_RetUserSysSetting_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_RetUserSysSetting_SC)
    MergeFrom(*source);
  }
}

void MSG_RetUserSysSetting_SC::MergeFrom(const MSG_RetUserSysSetting_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_RetUserSysSetting_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_setting()) {
    _has_bits_[0] |= 0x00000001u;
    setting_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.setting_);
  }
}

void MSG_RetUserSysSetting_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_RetUserSysSetting_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetUserSysSetting_SC::CopyFrom(const MSG_RetUserSysSetting_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_RetUserSysSetting_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetUserSysSetting_SC::IsInitialized() const {
  return true;
}

void MSG_RetUserSysSetting_SC::InternalSwap(MSG_RetUserSysSetting_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  setting_.Swap(&other->setting_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetUserSysSetting_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqUserSysSetting_CS::InitAsDefaultInstance() {
}
class MSG_ReqUserSysSetting_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqUserSysSetting_CS>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_set(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_ReqUserSysSetting_CS::MSG_ReqUserSysSetting_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_ReqUserSysSetting_CS)
}
MSG_ReqUserSysSetting_CS::MSG_ReqUserSysSetting_CS(const MSG_ReqUserSysSetting_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&set_) -
    reinterpret_cast<char*>(&id_)) + sizeof(set_));
  // @@protoc_insertion_point(copy_constructor:massive.MSG_ReqUserSysSetting_CS)
}

void MSG_ReqUserSysSetting_CS::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&set_) -
      reinterpret_cast<char*>(&id_)) + sizeof(set_));
}

MSG_ReqUserSysSetting_CS::~MSG_ReqUserSysSetting_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_ReqUserSysSetting_CS)
  SharedDtor();
}

void MSG_ReqUserSysSetting_CS::SharedDtor() {
}

void MSG_ReqUserSysSetting_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqUserSysSetting_CS& MSG_ReqUserSysSetting_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqUserSysSetting_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqUserSysSetting_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_ReqUserSysSetting_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&set_) -
        reinterpret_cast<char*>(&id_)) + sizeof(set_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqUserSysSetting_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool set = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_set(&has_bits);
          set_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqUserSysSetting_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_ReqUserSysSetting_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // optional bool set = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_set(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_ReqUserSysSetting_CS)
  return target;
}

size_t MSG_ReqUserSysSetting_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_ReqUserSysSetting_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_id());
    }

    // optional bool set = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqUserSysSetting_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_ReqUserSysSetting_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqUserSysSetting_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqUserSysSetting_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_ReqUserSysSetting_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_ReqUserSysSetting_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqUserSysSetting_CS::MergeFrom(const MSG_ReqUserSysSetting_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_ReqUserSysSetting_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      set_ = from.set_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_ReqUserSysSetting_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_ReqUserSysSetting_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqUserSysSetting_CS::CopyFrom(const MSG_ReqUserSysSetting_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_ReqUserSysSetting_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqUserSysSetting_CS::IsInitialized() const {
  return true;
}

void MSG_ReqUserSysSetting_CS::InternalSwap(MSG_ReqUserSysSetting_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(id_, other->id_);
  swap(set_, other->set_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqUserSysSetting_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GiftItem::InitAsDefaultInstance() {
}
class GiftItem::_Internal {
 public:
  using HasBits = decltype(std::declval<GiftItem>()._has_bits_);
  static void set_has_objid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_num(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_bind(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

GiftItem::GiftItem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.GiftItem)
}
GiftItem::GiftItem(const GiftItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objid_, &from.objid_,
    static_cast<size_t>(reinterpret_cast<char*>(&bind_) -
    reinterpret_cast<char*>(&objid_)) + sizeof(bind_));
  // @@protoc_insertion_point(copy_constructor:massive.GiftItem)
}

void GiftItem::SharedCtor() {
  ::memset(&objid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bind_) -
      reinterpret_cast<char*>(&objid_)) + sizeof(bind_));
}

GiftItem::~GiftItem() {
  // @@protoc_insertion_point(destructor:massive.GiftItem)
  SharedDtor();
}

void GiftItem::SharedDtor() {
}

void GiftItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GiftItem& GiftItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GiftItem_massive_2eproto.base);
  return *internal_default_instance();
}


void GiftItem::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.GiftItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&objid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bind_) -
        reinterpret_cast<char*>(&objid_)) + sizeof(bind_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GiftItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 objid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_objid(&has_bits);
          objid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_num(&has_bits);
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 bind = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_bind(&has_bits);
          bind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GiftItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.GiftItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 objid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_objid(), target);
  }

  // optional uint32 num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_num(), target);
  }

  // optional uint32 bind = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_bind(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.GiftItem)
  return target;
}

size_t GiftItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.GiftItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 objid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_objid());
    }

    // optional uint32 num = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_num());
    }

    // optional uint32 bind = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_bind());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GiftItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.GiftItem)
  GOOGLE_DCHECK_NE(&from, this);
  const GiftItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GiftItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.GiftItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.GiftItem)
    MergeFrom(*source);
  }
}

void GiftItem::MergeFrom(const GiftItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.GiftItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      objid_ = from.objid_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000004u) {
      bind_ = from.bind_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GiftItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.GiftItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftItem::CopyFrom(const GiftItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.GiftItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftItem::IsInitialized() const {
  return true;
}

void GiftItem::InternalSwap(GiftItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(objid_, other->objid_);
  swap(num_, other->num_);
  swap(bind_, other->bind_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GiftItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_SuccessOpenGift_SC::InitAsDefaultInstance() {
}
class MSG_Ret_SuccessOpenGift_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_SuccessOpenGift_SC>()._has_bits_);
  static void set_has_giftid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_SuccessOpenGift_SC::MSG_Ret_SuccessOpenGift_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Ret_SuccessOpenGift_SC)
}
MSG_Ret_SuccessOpenGift_SC::MSG_Ret_SuccessOpenGift_SC(const MSG_Ret_SuccessOpenGift_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      objs_(from.objs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  giftid_ = from.giftid_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Ret_SuccessOpenGift_SC)
}

void MSG_Ret_SuccessOpenGift_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_SuccessOpenGift_SC_massive_2eproto.base);
  giftid_ = 0u;
}

MSG_Ret_SuccessOpenGift_SC::~MSG_Ret_SuccessOpenGift_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_Ret_SuccessOpenGift_SC)
  SharedDtor();
}

void MSG_Ret_SuccessOpenGift_SC::SharedDtor() {
}

void MSG_Ret_SuccessOpenGift_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_SuccessOpenGift_SC& MSG_Ret_SuccessOpenGift_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_SuccessOpenGift_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_SuccessOpenGift_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Ret_SuccessOpenGift_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objs_.Clear();
  giftid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_SuccessOpenGift_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 giftid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_giftid(&has_bits);
          giftid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .massive.GiftItem objs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_SuccessOpenGift_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Ret_SuccessOpenGift_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 giftid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_giftid(), target);
  }

  // repeated .massive.GiftItem objs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_objs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_objs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Ret_SuccessOpenGift_SC)
  return target;
}

size_t MSG_Ret_SuccessOpenGift_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Ret_SuccessOpenGift_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .massive.GiftItem objs = 2;
  total_size += 1UL * this->_internal_objs_size();
  for (const auto& msg : this->objs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 giftid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_giftid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_SuccessOpenGift_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Ret_SuccessOpenGift_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_SuccessOpenGift_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_SuccessOpenGift_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Ret_SuccessOpenGift_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Ret_SuccessOpenGift_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_SuccessOpenGift_SC::MergeFrom(const MSG_Ret_SuccessOpenGift_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Ret_SuccessOpenGift_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objs_.MergeFrom(from.objs_);
  if (from._internal_has_giftid()) {
    _internal_set_giftid(from._internal_giftid());
  }
}

void MSG_Ret_SuccessOpenGift_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Ret_SuccessOpenGift_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_SuccessOpenGift_SC::CopyFrom(const MSG_Ret_SuccessOpenGift_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Ret_SuccessOpenGift_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_SuccessOpenGift_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_SuccessOpenGift_SC::InternalSwap(MSG_Ret_SuccessOpenGift_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  objs_.InternalSwap(&other->objs_);
  swap(giftid_, other->giftid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_SuccessOpenGift_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqVitalityDegree_CS::InitAsDefaultInstance() {
}
class MSG_ReqVitalityDegree_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqVitalityDegree_CS>()._has_bits_);
};

MSG_ReqVitalityDegree_CS::MSG_ReqVitalityDegree_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_ReqVitalityDegree_CS)
}
MSG_ReqVitalityDegree_CS::MSG_ReqVitalityDegree_CS(const MSG_ReqVitalityDegree_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_ReqVitalityDegree_CS)
}

void MSG_ReqVitalityDegree_CS::SharedCtor() {
}

MSG_ReqVitalityDegree_CS::~MSG_ReqVitalityDegree_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_ReqVitalityDegree_CS)
  SharedDtor();
}

void MSG_ReqVitalityDegree_CS::SharedDtor() {
}

void MSG_ReqVitalityDegree_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqVitalityDegree_CS& MSG_ReqVitalityDegree_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqVitalityDegree_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqVitalityDegree_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_ReqVitalityDegree_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqVitalityDegree_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqVitalityDegree_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_ReqVitalityDegree_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_ReqVitalityDegree_CS)
  return target;
}

size_t MSG_ReqVitalityDegree_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_ReqVitalityDegree_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqVitalityDegree_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_ReqVitalityDegree_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqVitalityDegree_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqVitalityDegree_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_ReqVitalityDegree_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_ReqVitalityDegree_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqVitalityDegree_CS::MergeFrom(const MSG_ReqVitalityDegree_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_ReqVitalityDegree_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_ReqVitalityDegree_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_ReqVitalityDegree_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqVitalityDegree_CS::CopyFrom(const MSG_ReqVitalityDegree_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_ReqVitalityDegree_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqVitalityDegree_CS::IsInitialized() const {
  return true;
}

void MSG_ReqVitalityDegree_CS::InternalSwap(MSG_ReqVitalityDegree_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqVitalityDegree_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VitalityItem::InitAsDefaultInstance() {
}
class VitalityItem::_Internal {
 public:
  using HasBits = decltype(std::declval<VitalityItem>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_attendtimes(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_vitalitydegree(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

VitalityItem::VitalityItem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.VitalityItem)
}
VitalityItem::VitalityItem(const VitalityItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&vitalitydegree_) -
    reinterpret_cast<char*>(&id_)) + sizeof(vitalitydegree_));
  // @@protoc_insertion_point(copy_constructor:massive.VitalityItem)
}

void VitalityItem::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vitalitydegree_) -
      reinterpret_cast<char*>(&id_)) + sizeof(vitalitydegree_));
}

VitalityItem::~VitalityItem() {
  // @@protoc_insertion_point(destructor:massive.VitalityItem)
  SharedDtor();
}

void VitalityItem::SharedDtor() {
}

void VitalityItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VitalityItem& VitalityItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VitalityItem_massive_2eproto.base);
  return *internal_default_instance();
}


void VitalityItem::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.VitalityItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vitalitydegree_) -
        reinterpret_cast<char*>(&id_)) + sizeof(vitalitydegree_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* VitalityItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 attendtimes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_attendtimes(&has_bits);
          attendtimes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 vitalitydegree = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_vitalitydegree(&has_bits);
          vitalitydegree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VitalityItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.VitalityItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // optional uint32 attendtimes = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_attendtimes(), target);
  }

  // optional uint32 vitalitydegree = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_vitalitydegree(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.VitalityItem)
  return target;
}

size_t VitalityItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.VitalityItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_id());
    }

    // optional uint32 attendtimes = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_attendtimes());
    }

    // optional uint32 vitalitydegree = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_vitalitydegree());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VitalityItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.VitalityItem)
  GOOGLE_DCHECK_NE(&from, this);
  const VitalityItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VitalityItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.VitalityItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.VitalityItem)
    MergeFrom(*source);
  }
}

void VitalityItem::MergeFrom(const VitalityItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.VitalityItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      attendtimes_ = from.attendtimes_;
    }
    if (cached_has_bits & 0x00000004u) {
      vitalitydegree_ = from.vitalitydegree_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VitalityItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.VitalityItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VitalityItem::CopyFrom(const VitalityItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.VitalityItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VitalityItem::IsInitialized() const {
  return true;
}

void VitalityItem::InternalSwap(VitalityItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(id_, other->id_);
  swap(attendtimes_, other->attendtimes_);
  swap(vitalitydegree_, other->vitalitydegree_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VitalityItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VitalityReward::InitAsDefaultInstance() {
}
class VitalityReward::_Internal {
 public:
  using HasBits = decltype(std::declval<VitalityReward>()._has_bits_);
  static void set_has_degree(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

VitalityReward::VitalityReward()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.VitalityReward)
}
VitalityReward::VitalityReward(const VitalityReward& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&degree_, &from.degree_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&degree_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:massive.VitalityReward)
}

void VitalityReward::SharedCtor() {
  ::memset(&degree_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&degree_)) + sizeof(state_));
}

VitalityReward::~VitalityReward() {
  // @@protoc_insertion_point(destructor:massive.VitalityReward)
  SharedDtor();
}

void VitalityReward::SharedDtor() {
}

void VitalityReward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VitalityReward& VitalityReward::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VitalityReward_massive_2eproto.base);
  return *internal_default_instance();
}


void VitalityReward::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.VitalityReward)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&degree_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&degree_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* VitalityReward::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 degree = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_degree(&has_bits);
          degree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_state(&has_bits);
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VitalityReward::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.VitalityReward)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 degree = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_degree(), target);
  }

  // optional uint32 state = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.VitalityReward)
  return target;
}

size_t VitalityReward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.VitalityReward)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 degree = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_degree());
    }

    // optional uint32 state = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_state());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VitalityReward::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.VitalityReward)
  GOOGLE_DCHECK_NE(&from, this);
  const VitalityReward* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VitalityReward>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.VitalityReward)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.VitalityReward)
    MergeFrom(*source);
  }
}

void VitalityReward::MergeFrom(const VitalityReward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.VitalityReward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      degree_ = from.degree_;
    }
    if (cached_has_bits & 0x00000002u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VitalityReward::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.VitalityReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VitalityReward::CopyFrom(const VitalityReward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.VitalityReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VitalityReward::IsInitialized() const {
  return true;
}

void VitalityReward::InternalSwap(VitalityReward* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(degree_, other->degree_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VitalityReward::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VitalityUserInfo::InitAsDefaultInstance() {
}
class VitalityUserInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<VitalityUserInfo>()._has_bits_);
  static void set_has_totaldegree(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_attendtime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

VitalityUserInfo::VitalityUserInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.VitalityUserInfo)
}
VitalityUserInfo::VitalityUserInfo(const VitalityUserInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_(from.item_),
      reward_(from.reward_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&totaldegree_, &from.totaldegree_,
    static_cast<size_t>(reinterpret_cast<char*>(&attendtime_) -
    reinterpret_cast<char*>(&totaldegree_)) + sizeof(attendtime_));
  // @@protoc_insertion_point(copy_constructor:massive.VitalityUserInfo)
}

void VitalityUserInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VitalityUserInfo_massive_2eproto.base);
  ::memset(&totaldegree_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attendtime_) -
      reinterpret_cast<char*>(&totaldegree_)) + sizeof(attendtime_));
}

VitalityUserInfo::~VitalityUserInfo() {
  // @@protoc_insertion_point(destructor:massive.VitalityUserInfo)
  SharedDtor();
}

void VitalityUserInfo::SharedDtor() {
}

void VitalityUserInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VitalityUserInfo& VitalityUserInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VitalityUserInfo_massive_2eproto.base);
  return *internal_default_instance();
}


void VitalityUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.VitalityUserInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  reward_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&totaldegree_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&attendtime_) -
        reinterpret_cast<char*>(&totaldegree_)) + sizeof(attendtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* VitalityUserInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 totaldegree = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_totaldegree(&has_bits);
          totaldegree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .massive.VitalityItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .massive.VitalityReward reward = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reward(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 attendtime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_attendtime(&has_bits);
          attendtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VitalityUserInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.VitalityUserInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 totaldegree = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_totaldegree(), target);
  }

  // repeated .massive.VitalityItem item = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_item_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_item(i), target, stream);
  }

  // repeated .massive.VitalityReward reward = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reward_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_reward(i), target, stream);
  }

  // optional uint32 attendtime = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_attendtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.VitalityUserInfo)
  return target;
}

size_t VitalityUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.VitalityUserInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .massive.VitalityItem item = 2;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->item_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .massive.VitalityReward reward = 3;
  total_size += 1UL * this->_internal_reward_size();
  for (const auto& msg : this->reward_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 totaldegree = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_totaldegree());
    }

    // optional uint32 attendtime = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_attendtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VitalityUserInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.VitalityUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const VitalityUserInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VitalityUserInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.VitalityUserInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.VitalityUserInfo)
    MergeFrom(*source);
  }
}

void VitalityUserInfo::MergeFrom(const VitalityUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.VitalityUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
  reward_.MergeFrom(from.reward_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      totaldegree_ = from.totaldegree_;
    }
    if (cached_has_bits & 0x00000002u) {
      attendtime_ = from.attendtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VitalityUserInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.VitalityUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VitalityUserInfo::CopyFrom(const VitalityUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.VitalityUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VitalityUserInfo::IsInitialized() const {
  return true;
}

void VitalityUserInfo::InternalSwap(VitalityUserInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_.InternalSwap(&other->item_);
  reward_.InternalSwap(&other->reward_);
  swap(totaldegree_, other->totaldegree_);
  swap(attendtime_, other->attendtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VitalityUserInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetVitalityDegree_SC::InitAsDefaultInstance() {
  ::massive::_MSG_RetVitalityDegree_SC_default_instance_._instance.get_mutable()->info_ = const_cast< ::massive::VitalityUserInfo*>(
      ::massive::VitalityUserInfo::internal_default_instance());
}
class MSG_RetVitalityDegree_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetVitalityDegree_SC>()._has_bits_);
  static const ::massive::VitalityUserInfo& info(const MSG_RetVitalityDegree_SC* msg);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::massive::VitalityUserInfo&
MSG_RetVitalityDegree_SC::_Internal::info(const MSG_RetVitalityDegree_SC* msg) {
  return *msg->info_;
}
MSG_RetVitalityDegree_SC::MSG_RetVitalityDegree_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_RetVitalityDegree_SC)
}
MSG_RetVitalityDegree_SC::MSG_RetVitalityDegree_SC(const MSG_RetVitalityDegree_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_info()) {
    info_ = new ::massive::VitalityUserInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:massive.MSG_RetVitalityDegree_SC)
}

void MSG_RetVitalityDegree_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_RetVitalityDegree_SC_massive_2eproto.base);
  info_ = nullptr;
}

MSG_RetVitalityDegree_SC::~MSG_RetVitalityDegree_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_RetVitalityDegree_SC)
  SharedDtor();
}

void MSG_RetVitalityDegree_SC::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void MSG_RetVitalityDegree_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetVitalityDegree_SC& MSG_RetVitalityDegree_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetVitalityDegree_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetVitalityDegree_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_RetVitalityDegree_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != nullptr);
    info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetVitalityDegree_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .massive.VitalityUserInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetVitalityDegree_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_RetVitalityDegree_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .massive.VitalityUserInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_RetVitalityDegree_SC)
  return target;
}

size_t MSG_RetVitalityDegree_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_RetVitalityDegree_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .massive.VitalityUserInfo info = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetVitalityDegree_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_RetVitalityDegree_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetVitalityDegree_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetVitalityDegree_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_RetVitalityDegree_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_RetVitalityDegree_SC)
    MergeFrom(*source);
  }
}

void MSG_RetVitalityDegree_SC::MergeFrom(const MSG_RetVitalityDegree_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_RetVitalityDegree_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _internal_mutable_info()->::massive::VitalityUserInfo::MergeFrom(from._internal_info());
  }
}

void MSG_RetVitalityDegree_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_RetVitalityDegree_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetVitalityDegree_SC::CopyFrom(const MSG_RetVitalityDegree_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_RetVitalityDegree_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetVitalityDegree_SC::IsInitialized() const {
  return true;
}

void MSG_RetVitalityDegree_SC::InternalSwap(MSG_RetVitalityDegree_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(info_, other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetVitalityDegree_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqGetVitalityAward_CS::InitAsDefaultInstance() {
}
class MSG_ReqGetVitalityAward_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqGetVitalityAward_CS>()._has_bits_);
  static void set_has_degree(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_ReqGetVitalityAward_CS::MSG_ReqGetVitalityAward_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_ReqGetVitalityAward_CS)
}
MSG_ReqGetVitalityAward_CS::MSG_ReqGetVitalityAward_CS(const MSG_ReqGetVitalityAward_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  degree_ = from.degree_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_ReqGetVitalityAward_CS)
}

void MSG_ReqGetVitalityAward_CS::SharedCtor() {
  degree_ = 0u;
}

MSG_ReqGetVitalityAward_CS::~MSG_ReqGetVitalityAward_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_ReqGetVitalityAward_CS)
  SharedDtor();
}

void MSG_ReqGetVitalityAward_CS::SharedDtor() {
}

void MSG_ReqGetVitalityAward_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqGetVitalityAward_CS& MSG_ReqGetVitalityAward_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqGetVitalityAward_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqGetVitalityAward_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_ReqGetVitalityAward_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  degree_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqGetVitalityAward_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 degree = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_degree(&has_bits);
          degree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqGetVitalityAward_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_ReqGetVitalityAward_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 degree = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_degree(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_ReqGetVitalityAward_CS)
  return target;
}

size_t MSG_ReqGetVitalityAward_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_ReqGetVitalityAward_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 degree = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_degree());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqGetVitalityAward_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_ReqGetVitalityAward_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqGetVitalityAward_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqGetVitalityAward_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_ReqGetVitalityAward_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_ReqGetVitalityAward_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqGetVitalityAward_CS::MergeFrom(const MSG_ReqGetVitalityAward_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_ReqGetVitalityAward_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_degree()) {
    _internal_set_degree(from._internal_degree());
  }
}

void MSG_ReqGetVitalityAward_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_ReqGetVitalityAward_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqGetVitalityAward_CS::CopyFrom(const MSG_ReqGetVitalityAward_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_ReqGetVitalityAward_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqGetVitalityAward_CS::IsInitialized() const {
  return true;
}

void MSG_ReqGetVitalityAward_CS::InternalSwap(MSG_ReqGetVitalityAward_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(degree_, other->degree_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqGetVitalityAward_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetGetVitalityAward_SC::InitAsDefaultInstance() {
}
class MSG_RetGetVitalityAward_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetGetVitalityAward_SC>()._has_bits_);
  static void set_has_degree(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_errcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_RetGetVitalityAward_SC::MSG_RetGetVitalityAward_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_RetGetVitalityAward_SC)
}
MSG_RetGetVitalityAward_SC::MSG_RetGetVitalityAward_SC(const MSG_RetGetVitalityAward_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&degree_, &from.degree_,
    static_cast<size_t>(reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&degree_)) + sizeof(errcode_));
  // @@protoc_insertion_point(copy_constructor:massive.MSG_RetGetVitalityAward_SC)
}

void MSG_RetGetVitalityAward_SC::SharedCtor() {
  ::memset(&degree_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&degree_)) + sizeof(errcode_));
}

MSG_RetGetVitalityAward_SC::~MSG_RetGetVitalityAward_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_RetGetVitalityAward_SC)
  SharedDtor();
}

void MSG_RetGetVitalityAward_SC::SharedDtor() {
}

void MSG_RetGetVitalityAward_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetGetVitalityAward_SC& MSG_RetGetVitalityAward_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetGetVitalityAward_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetGetVitalityAward_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_RetGetVitalityAward_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&degree_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&errcode_) -
        reinterpret_cast<char*>(&degree_)) + sizeof(errcode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetGetVitalityAward_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 degree = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_degree(&has_bits);
          degree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 errcode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_errcode(&has_bits);
          errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetGetVitalityAward_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_RetGetVitalityAward_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 degree = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_degree(), target);
  }

  // optional uint32 errcode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_RetGetVitalityAward_SC)
  return target;
}

size_t MSG_RetGetVitalityAward_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_RetGetVitalityAward_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 degree = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_degree());
    }

    // optional uint32 errcode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_errcode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetGetVitalityAward_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_RetGetVitalityAward_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetGetVitalityAward_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetGetVitalityAward_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_RetGetVitalityAward_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_RetGetVitalityAward_SC)
    MergeFrom(*source);
  }
}

void MSG_RetGetVitalityAward_SC::MergeFrom(const MSG_RetGetVitalityAward_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_RetGetVitalityAward_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      degree_ = from.degree_;
    }
    if (cached_has_bits & 0x00000002u) {
      errcode_ = from.errcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_RetGetVitalityAward_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_RetGetVitalityAward_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetGetVitalityAward_SC::CopyFrom(const MSG_RetGetVitalityAward_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_RetGetVitalityAward_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetGetVitalityAward_SC::IsInitialized() const {
  return true;
}

void MSG_RetGetVitalityAward_SC::InternalSwap(MSG_RetGetVitalityAward_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(degree_, other->degree_);
  swap(errcode_, other->errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetGetVitalityAward_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqGeneRemakeInfo_CS::InitAsDefaultInstance() {
}
class MSG_ReqGeneRemakeInfo_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqGeneRemakeInfo_CS>()._has_bits_);
};

MSG_ReqGeneRemakeInfo_CS::MSG_ReqGeneRemakeInfo_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_ReqGeneRemakeInfo_CS)
}
MSG_ReqGeneRemakeInfo_CS::MSG_ReqGeneRemakeInfo_CS(const MSG_ReqGeneRemakeInfo_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_ReqGeneRemakeInfo_CS)
}

void MSG_ReqGeneRemakeInfo_CS::SharedCtor() {
}

MSG_ReqGeneRemakeInfo_CS::~MSG_ReqGeneRemakeInfo_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_ReqGeneRemakeInfo_CS)
  SharedDtor();
}

void MSG_ReqGeneRemakeInfo_CS::SharedDtor() {
}

void MSG_ReqGeneRemakeInfo_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqGeneRemakeInfo_CS& MSG_ReqGeneRemakeInfo_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqGeneRemakeInfo_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqGeneRemakeInfo_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_ReqGeneRemakeInfo_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqGeneRemakeInfo_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqGeneRemakeInfo_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_ReqGeneRemakeInfo_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_ReqGeneRemakeInfo_CS)
  return target;
}

size_t MSG_ReqGeneRemakeInfo_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_ReqGeneRemakeInfo_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqGeneRemakeInfo_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_ReqGeneRemakeInfo_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqGeneRemakeInfo_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqGeneRemakeInfo_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_ReqGeneRemakeInfo_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_ReqGeneRemakeInfo_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqGeneRemakeInfo_CS::MergeFrom(const MSG_ReqGeneRemakeInfo_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_ReqGeneRemakeInfo_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_ReqGeneRemakeInfo_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_ReqGeneRemakeInfo_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqGeneRemakeInfo_CS::CopyFrom(const MSG_ReqGeneRemakeInfo_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_ReqGeneRemakeInfo_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqGeneRemakeInfo_CS::IsInitialized() const {
  return true;
}

void MSG_ReqGeneRemakeInfo_CS::InternalSwap(MSG_ReqGeneRemakeInfo_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqGeneRemakeInfo_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GeneRemakeItem::InitAsDefaultInstance() {
}
class GeneRemakeItem::_Internal {
 public:
  using HasBits = decltype(std::declval<GeneRemakeItem>()._has_bits_);
  static void set_has_genetype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_level(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_exp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

GeneRemakeItem::GeneRemakeItem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.GeneRemakeItem)
}
GeneRemakeItem::GeneRemakeItem(const GeneRemakeItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&genetype_, &from.genetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&genetype_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:massive.GeneRemakeItem)
}

void GeneRemakeItem::SharedCtor() {
  ::memset(&genetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&genetype_)) + sizeof(value_));
}

GeneRemakeItem::~GeneRemakeItem() {
  // @@protoc_insertion_point(destructor:massive.GeneRemakeItem)
  SharedDtor();
}

void GeneRemakeItem::SharedDtor() {
}

void GeneRemakeItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GeneRemakeItem& GeneRemakeItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GeneRemakeItem_massive_2eproto.base);
  return *internal_default_instance();
}


void GeneRemakeItem::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.GeneRemakeItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&genetype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&genetype_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GeneRemakeItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 genetype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_genetype(&has_bits);
          genetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_level(&has_bits);
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 exp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_exp(&has_bits);
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_value(&has_bits);
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GeneRemakeItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.GeneRemakeItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 genetype = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_genetype(), target);
  }

  // optional uint32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_level(), target);
  }

  // optional uint32 exp = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_exp(), target);
  }

  // optional uint32 value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.GeneRemakeItem)
  return target;
}

size_t GeneRemakeItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.GeneRemakeItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 genetype = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_genetype());
    }

    // optional uint32 level = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_level());
    }

    // optional uint32 exp = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_exp());
    }

    // optional uint32 value = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_value());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GeneRemakeItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.GeneRemakeItem)
  GOOGLE_DCHECK_NE(&from, this);
  const GeneRemakeItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GeneRemakeItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.GeneRemakeItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.GeneRemakeItem)
    MergeFrom(*source);
  }
}

void GeneRemakeItem::MergeFrom(const GeneRemakeItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.GeneRemakeItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      genetype_ = from.genetype_;
    }
    if (cached_has_bits & 0x00000002u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000004u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00000008u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GeneRemakeItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.GeneRemakeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneRemakeItem::CopyFrom(const GeneRemakeItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.GeneRemakeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneRemakeItem::IsInitialized() const {
  return true;
}

void GeneRemakeItem::InternalSwap(GeneRemakeItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(genetype_, other->genetype_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GeneRemakeItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetGeneRemakeInfo_SC::InitAsDefaultInstance() {
}
class MSG_RetGeneRemakeInfo_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetGeneRemakeInfo_SC>()._has_bits_);
};

MSG_RetGeneRemakeInfo_SC::MSG_RetGeneRemakeInfo_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_RetGeneRemakeInfo_SC)
}
MSG_RetGeneRemakeInfo_SC::MSG_RetGeneRemakeInfo_SC(const MSG_RetGeneRemakeInfo_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_RetGeneRemakeInfo_SC)
}

void MSG_RetGeneRemakeInfo_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_RetGeneRemakeInfo_SC_massive_2eproto.base);
}

MSG_RetGeneRemakeInfo_SC::~MSG_RetGeneRemakeInfo_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_RetGeneRemakeInfo_SC)
  SharedDtor();
}

void MSG_RetGeneRemakeInfo_SC::SharedDtor() {
}

void MSG_RetGeneRemakeInfo_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetGeneRemakeInfo_SC& MSG_RetGeneRemakeInfo_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetGeneRemakeInfo_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetGeneRemakeInfo_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_RetGeneRemakeInfo_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetGeneRemakeInfo_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .massive.GeneRemakeItem data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetGeneRemakeInfo_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_RetGeneRemakeInfo_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .massive.GeneRemakeItem data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_RetGeneRemakeInfo_SC)
  return target;
}

size_t MSG_RetGeneRemakeInfo_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_RetGeneRemakeInfo_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .massive.GeneRemakeItem data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetGeneRemakeInfo_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_RetGeneRemakeInfo_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetGeneRemakeInfo_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetGeneRemakeInfo_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_RetGeneRemakeInfo_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_RetGeneRemakeInfo_SC)
    MergeFrom(*source);
  }
}

void MSG_RetGeneRemakeInfo_SC::MergeFrom(const MSG_RetGeneRemakeInfo_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_RetGeneRemakeInfo_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void MSG_RetGeneRemakeInfo_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_RetGeneRemakeInfo_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetGeneRemakeInfo_SC::CopyFrom(const MSG_RetGeneRemakeInfo_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_RetGeneRemakeInfo_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetGeneRemakeInfo_SC::IsInitialized() const {
  return true;
}

void MSG_RetGeneRemakeInfo_SC::InternalSwap(MSG_RetGeneRemakeInfo_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetGeneRemakeInfo_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqStrengthenGene_CS::InitAsDefaultInstance() {
}
class MSG_ReqStrengthenGene_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqStrengthenGene_CS>()._has_bits_);
  static void set_has_genetype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_ReqStrengthenGene_CS::MSG_ReqStrengthenGene_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_ReqStrengthenGene_CS)
}
MSG_ReqStrengthenGene_CS::MSG_ReqStrengthenGene_CS(const MSG_ReqStrengthenGene_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&genetype_, &from.genetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&genetype_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:massive.MSG_ReqStrengthenGene_CS)
}

void MSG_ReqStrengthenGene_CS::SharedCtor() {
  ::memset(&genetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&genetype_)) + sizeof(type_));
}

MSG_ReqStrengthenGene_CS::~MSG_ReqStrengthenGene_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_ReqStrengthenGene_CS)
  SharedDtor();
}

void MSG_ReqStrengthenGene_CS::SharedDtor() {
}

void MSG_ReqStrengthenGene_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqStrengthenGene_CS& MSG_ReqStrengthenGene_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqStrengthenGene_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqStrengthenGene_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_ReqStrengthenGene_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&genetype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&genetype_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqStrengthenGene_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 genetype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_genetype(&has_bits);
          genetype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqStrengthenGene_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_ReqStrengthenGene_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 genetype = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_genetype(), target);
  }

  // optional uint32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_ReqStrengthenGene_CS)
  return target;
}

size_t MSG_ReqStrengthenGene_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_ReqStrengthenGene_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 genetype = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_genetype());
    }

    // optional uint32 type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqStrengthenGene_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_ReqStrengthenGene_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqStrengthenGene_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqStrengthenGene_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_ReqStrengthenGene_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_ReqStrengthenGene_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqStrengthenGene_CS::MergeFrom(const MSG_ReqStrengthenGene_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_ReqStrengthenGene_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      genetype_ = from.genetype_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_ReqStrengthenGene_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_ReqStrengthenGene_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqStrengthenGene_CS::CopyFrom(const MSG_ReqStrengthenGene_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_ReqStrengthenGene_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqStrengthenGene_CS::IsInitialized() const {
  return true;
}

void MSG_ReqStrengthenGene_CS::InternalSwap(MSG_ReqStrengthenGene_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(genetype_, other->genetype_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqStrengthenGene_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetStrengthenGene_SC::InitAsDefaultInstance() {
  ::massive::_MSG_RetStrengthenGene_SC_default_instance_._instance.get_mutable()->data_ = const_cast< ::massive::GeneRemakeItem*>(
      ::massive::GeneRemakeItem::internal_default_instance());
}
class MSG_RetStrengthenGene_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetStrengthenGene_SC>()._has_bits_);
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::massive::GeneRemakeItem& data(const MSG_RetStrengthenGene_SC* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::massive::GeneRemakeItem&
MSG_RetStrengthenGene_SC::_Internal::data(const MSG_RetStrengthenGene_SC* msg) {
  return *msg->data_;
}
MSG_RetStrengthenGene_SC::MSG_RetStrengthenGene_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_RetStrengthenGene_SC)
}
MSG_RetStrengthenGene_SC::MSG_RetStrengthenGene_SC(const MSG_RetStrengthenGene_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::massive::GeneRemakeItem(*from.data_);
  } else {
    data_ = nullptr;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_RetStrengthenGene_SC)
}

void MSG_RetStrengthenGene_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_RetStrengthenGene_SC_massive_2eproto.base);
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&data_)) + sizeof(retcode_));
}

MSG_RetStrengthenGene_SC::~MSG_RetStrengthenGene_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_RetStrengthenGene_SC)
  SharedDtor();
}

void MSG_RetStrengthenGene_SC::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void MSG_RetStrengthenGene_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetStrengthenGene_SC& MSG_RetStrengthenGene_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetStrengthenGene_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetStrengthenGene_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_RetStrengthenGene_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(data_ != nullptr);
    data_->Clear();
  }
  retcode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetStrengthenGene_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 retcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .massive.GeneRemakeItem data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetStrengthenGene_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_RetStrengthenGene_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 retcode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  // optional .massive.GeneRemakeItem data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_RetStrengthenGene_SC)
  return target;
}

size_t MSG_RetStrengthenGene_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_RetStrengthenGene_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .massive.GeneRemakeItem data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_);
    }

    // optional uint32 retcode = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetStrengthenGene_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_RetStrengthenGene_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetStrengthenGene_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetStrengthenGene_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_RetStrengthenGene_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_RetStrengthenGene_SC)
    MergeFrom(*source);
  }
}

void MSG_RetStrengthenGene_SC::MergeFrom(const MSG_RetStrengthenGene_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_RetStrengthenGene_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_data()->::massive::GeneRemakeItem::MergeFrom(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_RetStrengthenGene_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_RetStrengthenGene_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetStrengthenGene_SC::CopyFrom(const MSG_RetStrengthenGene_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_RetStrengthenGene_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetStrengthenGene_SC::IsInitialized() const {
  return true;
}

void MSG_RetStrengthenGene_SC::InternalSwap(MSG_RetStrengthenGene_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(data_, other->data_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetStrengthenGene_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_HoldonUser_CS::InitAsDefaultInstance() {
}
class MSG_Req_HoldonUser_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_HoldonUser_CS>()._has_bits_);
  static void set_has_thisid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_Req_HoldonUser_CS::MSG_Req_HoldonUser_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Req_HoldonUser_CS)
}
MSG_Req_HoldonUser_CS::MSG_Req_HoldonUser_CS(const MSG_Req_HoldonUser_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&thisid_, &from.thisid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&thisid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Req_HoldonUser_CS)
}

void MSG_Req_HoldonUser_CS::SharedCtor() {
  ::memset(&thisid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&thisid_)) + sizeof(type_));
}

MSG_Req_HoldonUser_CS::~MSG_Req_HoldonUser_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_Req_HoldonUser_CS)
  SharedDtor();
}

void MSG_Req_HoldonUser_CS::SharedDtor() {
}

void MSG_Req_HoldonUser_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_HoldonUser_CS& MSG_Req_HoldonUser_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_HoldonUser_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_HoldonUser_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Req_HoldonUser_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&thisid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&thisid_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_HoldonUser_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 thisid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_thisid(&has_bits);
          thisid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_HoldonUser_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Req_HoldonUser_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 thisid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_thisid(), target);
  }

  // optional uint32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Req_HoldonUser_CS)
  return target;
}

size_t MSG_Req_HoldonUser_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Req_HoldonUser_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 thisid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_thisid());
    }

    // optional uint32 type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_HoldonUser_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Req_HoldonUser_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_HoldonUser_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_HoldonUser_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Req_HoldonUser_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Req_HoldonUser_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_HoldonUser_CS::MergeFrom(const MSG_Req_HoldonUser_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Req_HoldonUser_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      thisid_ = from.thisid_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Req_HoldonUser_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Req_HoldonUser_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_HoldonUser_CS::CopyFrom(const MSG_Req_HoldonUser_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Req_HoldonUser_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_HoldonUser_CS::IsInitialized() const {
  return true;
}

void MSG_Req_HoldonUser_CS::InternalSwap(MSG_Req_HoldonUser_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(thisid_, other->thisid_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_HoldonUser_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_HoldonUser_SC::InitAsDefaultInstance() {
}
class MSG_Ret_HoldonUser_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_HoldonUser_SC>()._has_bits_);
  static void set_has_thisid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_needtime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

MSG_Ret_HoldonUser_SC::MSG_Ret_HoldonUser_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Ret_HoldonUser_SC)
}
MSG_Ret_HoldonUser_SC::MSG_Ret_HoldonUser_SC(const MSG_Ret_HoldonUser_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&thisid_, &from.thisid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&thisid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Ret_HoldonUser_SC)
}

void MSG_Ret_HoldonUser_SC::SharedCtor() {
  ::memset(&thisid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&thisid_)) + sizeof(type_));
}

MSG_Ret_HoldonUser_SC::~MSG_Ret_HoldonUser_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_Ret_HoldonUser_SC)
  SharedDtor();
}

void MSG_Ret_HoldonUser_SC::SharedDtor() {
}

void MSG_Ret_HoldonUser_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_HoldonUser_SC& MSG_Ret_HoldonUser_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_HoldonUser_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_HoldonUser_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Ret_HoldonUser_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&thisid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&thisid_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_HoldonUser_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 thisid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_thisid(&has_bits);
          thisid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 needtime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_needtime(&has_bits);
          needtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 retcode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_HoldonUser_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Ret_HoldonUser_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 thisid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_thisid(), target);
  }

  // optional uint32 needtime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_needtime(), target);
  }

  // optional uint32 retcode = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_retcode(), target);
  }

  // optional uint32 type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Ret_HoldonUser_SC)
  return target;
}

size_t MSG_Ret_HoldonUser_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Ret_HoldonUser_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint64 thisid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_thisid());
    }

    // optional uint32 needtime = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_needtime());
    }

    // optional uint32 retcode = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

    // optional uint32 type = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_HoldonUser_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Ret_HoldonUser_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_HoldonUser_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_HoldonUser_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Ret_HoldonUser_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Ret_HoldonUser_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_HoldonUser_SC::MergeFrom(const MSG_Ret_HoldonUser_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Ret_HoldonUser_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      thisid_ = from.thisid_;
    }
    if (cached_has_bits & 0x00000002u) {
      needtime_ = from.needtime_;
    }
    if (cached_has_bits & 0x00000004u) {
      retcode_ = from.retcode_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_HoldonUser_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Ret_HoldonUser_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_HoldonUser_SC::CopyFrom(const MSG_Ret_HoldonUser_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Ret_HoldonUser_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_HoldonUser_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_HoldonUser_SC::InternalSwap(MSG_Ret_HoldonUser_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(thisid_, other->thisid_);
  swap(needtime_, other->needtime_);
  swap(retcode_, other->retcode_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_HoldonUser_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_HoldonUser_Interrupt_SC::InitAsDefaultInstance() {
}
class MSG_Ret_HoldonUser_Interrupt_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_HoldonUser_Interrupt_SC>()._has_bits_);
  static void set_has_thisid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_HoldonUser_Interrupt_SC::MSG_Ret_HoldonUser_Interrupt_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Ret_HoldonUser_Interrupt_SC)
}
MSG_Ret_HoldonUser_Interrupt_SC::MSG_Ret_HoldonUser_Interrupt_SC(const MSG_Ret_HoldonUser_Interrupt_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  thisid_ = from.thisid_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Ret_HoldonUser_Interrupt_SC)
}

void MSG_Ret_HoldonUser_Interrupt_SC::SharedCtor() {
  thisid_ = PROTOBUF_ULONGLONG(0);
}

MSG_Ret_HoldonUser_Interrupt_SC::~MSG_Ret_HoldonUser_Interrupt_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_Ret_HoldonUser_Interrupt_SC)
  SharedDtor();
}

void MSG_Ret_HoldonUser_Interrupt_SC::SharedDtor() {
}

void MSG_Ret_HoldonUser_Interrupt_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_HoldonUser_Interrupt_SC& MSG_Ret_HoldonUser_Interrupt_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_HoldonUser_Interrupt_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_HoldonUser_Interrupt_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Ret_HoldonUser_Interrupt_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  thisid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_HoldonUser_Interrupt_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 thisid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_thisid(&has_bits);
          thisid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_HoldonUser_Interrupt_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Ret_HoldonUser_Interrupt_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 thisid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_thisid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Ret_HoldonUser_Interrupt_SC)
  return target;
}

size_t MSG_Ret_HoldonUser_Interrupt_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Ret_HoldonUser_Interrupt_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 thisid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_thisid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_HoldonUser_Interrupt_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Ret_HoldonUser_Interrupt_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_HoldonUser_Interrupt_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_HoldonUser_Interrupt_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Ret_HoldonUser_Interrupt_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Ret_HoldonUser_Interrupt_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_HoldonUser_Interrupt_SC::MergeFrom(const MSG_Ret_HoldonUser_Interrupt_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Ret_HoldonUser_Interrupt_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_thisid()) {
    _internal_set_thisid(from._internal_thisid());
  }
}

void MSG_Ret_HoldonUser_Interrupt_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Ret_HoldonUser_Interrupt_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_HoldonUser_Interrupt_SC::CopyFrom(const MSG_Ret_HoldonUser_Interrupt_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Ret_HoldonUser_Interrupt_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_HoldonUser_Interrupt_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_HoldonUser_Interrupt_SC::InternalSwap(MSG_Ret_HoldonUser_Interrupt_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(thisid_, other->thisid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_HoldonUser_Interrupt_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqMakingItem_CS::InitAsDefaultInstance() {
}
class MSG_ReqMakingItem_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqMakingItem_CS>()._has_bits_);
  static void set_has_making_itemid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_ReqMakingItem_CS::MSG_ReqMakingItem_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_ReqMakingItem_CS)
}
MSG_ReqMakingItem_CS::MSG_ReqMakingItem_CS(const MSG_ReqMakingItem_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  making_itemid_ = from.making_itemid_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_ReqMakingItem_CS)
}

void MSG_ReqMakingItem_CS::SharedCtor() {
  making_itemid_ = 0u;
}

MSG_ReqMakingItem_CS::~MSG_ReqMakingItem_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_ReqMakingItem_CS)
  SharedDtor();
}

void MSG_ReqMakingItem_CS::SharedDtor() {
}

void MSG_ReqMakingItem_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqMakingItem_CS& MSG_ReqMakingItem_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqMakingItem_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqMakingItem_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_ReqMakingItem_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  making_itemid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqMakingItem_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 making_itemid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_making_itemid(&has_bits);
          making_itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqMakingItem_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_ReqMakingItem_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 making_itemid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_making_itemid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_ReqMakingItem_CS)
  return target;
}

size_t MSG_ReqMakingItem_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_ReqMakingItem_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 making_itemid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_making_itemid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqMakingItem_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_ReqMakingItem_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqMakingItem_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqMakingItem_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_ReqMakingItem_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_ReqMakingItem_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqMakingItem_CS::MergeFrom(const MSG_ReqMakingItem_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_ReqMakingItem_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_making_itemid()) {
    _internal_set_making_itemid(from._internal_making_itemid());
  }
}

void MSG_ReqMakingItem_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_ReqMakingItem_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqMakingItem_CS::CopyFrom(const MSG_ReqMakingItem_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_ReqMakingItem_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqMakingItem_CS::IsInitialized() const {
  return true;
}

void MSG_ReqMakingItem_CS::InternalSwap(MSG_ReqMakingItem_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(making_itemid_, other->making_itemid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqMakingItem_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetMakingItem_SC::InitAsDefaultInstance() {
}
class MSG_RetMakingItem_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetMakingItem_SC>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_making_itemid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_objid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

MSG_RetMakingItem_SC::MSG_RetMakingItem_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_RetMakingItem_SC)
}
MSG_RetMakingItem_SC::MSG_RetMakingItem_SC(const MSG_RetMakingItem_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&objid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(objid_));
  // @@protoc_insertion_point(copy_constructor:massive.MSG_RetMakingItem_SC)
}

void MSG_RetMakingItem_SC::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objid_) -
      reinterpret_cast<char*>(&result_)) + sizeof(objid_));
}

MSG_RetMakingItem_SC::~MSG_RetMakingItem_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_RetMakingItem_SC)
  SharedDtor();
}

void MSG_RetMakingItem_SC::SharedDtor() {
}

void MSG_RetMakingItem_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetMakingItem_SC& MSG_RetMakingItem_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetMakingItem_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetMakingItem_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_RetMakingItem_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&objid_) -
        reinterpret_cast<char*>(&result_)) + sizeof(objid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetMakingItem_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 making_itemid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_making_itemid(&has_bits);
          making_itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 objid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_objid(&has_bits);
          objid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetMakingItem_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_RetMakingItem_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_result(), target);
  }

  // optional uint32 making_itemid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_making_itemid(), target);
  }

  // optional uint32 objid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_objid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_RetMakingItem_SC)
  return target;
}

size_t MSG_RetMakingItem_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_RetMakingItem_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 result = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_result());
    }

    // optional uint32 making_itemid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_making_itemid());
    }

    // optional uint32 objid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_objid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetMakingItem_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_RetMakingItem_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetMakingItem_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetMakingItem_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_RetMakingItem_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_RetMakingItem_SC)
    MergeFrom(*source);
  }
}

void MSG_RetMakingItem_SC::MergeFrom(const MSG_RetMakingItem_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_RetMakingItem_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      making_itemid_ = from.making_itemid_;
    }
    if (cached_has_bits & 0x00000004u) {
      objid_ = from.objid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_RetMakingItem_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_RetMakingItem_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetMakingItem_SC::CopyFrom(const MSG_RetMakingItem_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_RetMakingItem_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetMakingItem_SC::IsInitialized() const {
  return true;
}

void MSG_RetMakingItem_SC::InternalSwap(MSG_RetMakingItem_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
  swap(making_itemid_, other->making_itemid_);
  swap(objid_, other->objid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetMakingItem_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_StruggleShape_CS::InitAsDefaultInstance() {
}
class MSG_Req_StruggleShape_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_StruggleShape_CS>()._has_bits_);
};

MSG_Req_StruggleShape_CS::MSG_Req_StruggleShape_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Req_StruggleShape_CS)
}
MSG_Req_StruggleShape_CS::MSG_Req_StruggleShape_CS(const MSG_Req_StruggleShape_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Req_StruggleShape_CS)
}

void MSG_Req_StruggleShape_CS::SharedCtor() {
}

MSG_Req_StruggleShape_CS::~MSG_Req_StruggleShape_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_Req_StruggleShape_CS)
  SharedDtor();
}

void MSG_Req_StruggleShape_CS::SharedDtor() {
}

void MSG_Req_StruggleShape_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_StruggleShape_CS& MSG_Req_StruggleShape_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_StruggleShape_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_StruggleShape_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Req_StruggleShape_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_StruggleShape_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_StruggleShape_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Req_StruggleShape_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Req_StruggleShape_CS)
  return target;
}

size_t MSG_Req_StruggleShape_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Req_StruggleShape_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_StruggleShape_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Req_StruggleShape_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_StruggleShape_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_StruggleShape_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Req_StruggleShape_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Req_StruggleShape_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_StruggleShape_CS::MergeFrom(const MSG_Req_StruggleShape_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Req_StruggleShape_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_Req_StruggleShape_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Req_StruggleShape_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_StruggleShape_CS::CopyFrom(const MSG_Req_StruggleShape_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Req_StruggleShape_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_StruggleShape_CS::IsInitialized() const {
  return true;
}

void MSG_Req_StruggleShape_CS::InternalSwap(MSG_Req_StruggleShape_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_StruggleShape_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_DivorceStuck_CS::InitAsDefaultInstance() {
}
class MSG_Req_DivorceStuck_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_DivorceStuck_CS>()._has_bits_);
};

MSG_Req_DivorceStuck_CS::MSG_Req_DivorceStuck_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Req_DivorceStuck_CS)
}
MSG_Req_DivorceStuck_CS::MSG_Req_DivorceStuck_CS(const MSG_Req_DivorceStuck_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Req_DivorceStuck_CS)
}

void MSG_Req_DivorceStuck_CS::SharedCtor() {
}

MSG_Req_DivorceStuck_CS::~MSG_Req_DivorceStuck_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_Req_DivorceStuck_CS)
  SharedDtor();
}

void MSG_Req_DivorceStuck_CS::SharedDtor() {
}

void MSG_Req_DivorceStuck_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_DivorceStuck_CS& MSG_Req_DivorceStuck_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_DivorceStuck_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_DivorceStuck_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Req_DivorceStuck_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_DivorceStuck_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_DivorceStuck_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Req_DivorceStuck_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Req_DivorceStuck_CS)
  return target;
}

size_t MSG_Req_DivorceStuck_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Req_DivorceStuck_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_DivorceStuck_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Req_DivorceStuck_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_DivorceStuck_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_DivorceStuck_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Req_DivorceStuck_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Req_DivorceStuck_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_DivorceStuck_CS::MergeFrom(const MSG_Req_DivorceStuck_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Req_DivorceStuck_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_Req_DivorceStuck_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Req_DivorceStuck_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_DivorceStuck_CS::CopyFrom(const MSG_Req_DivorceStuck_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Req_DivorceStuck_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_DivorceStuck_CS::IsInitialized() const {
  return true;
}

void MSG_Req_DivorceStuck_CS::InternalSwap(MSG_Req_DivorceStuck_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_DivorceStuck_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_Survey_Info_CS::InitAsDefaultInstance() {
}
class MSG_Req_Survey_Info_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_Survey_Info_CS>()._has_bits_);
};

MSG_Req_Survey_Info_CS::MSG_Req_Survey_Info_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Req_Survey_Info_CS)
}
MSG_Req_Survey_Info_CS::MSG_Req_Survey_Info_CS(const MSG_Req_Survey_Info_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Req_Survey_Info_CS)
}

void MSG_Req_Survey_Info_CS::SharedCtor() {
}

MSG_Req_Survey_Info_CS::~MSG_Req_Survey_Info_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_Req_Survey_Info_CS)
  SharedDtor();
}

void MSG_Req_Survey_Info_CS::SharedDtor() {
}

void MSG_Req_Survey_Info_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_Survey_Info_CS& MSG_Req_Survey_Info_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_Survey_Info_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_Survey_Info_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Req_Survey_Info_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_Survey_Info_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_Survey_Info_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Req_Survey_Info_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Req_Survey_Info_CS)
  return target;
}

size_t MSG_Req_Survey_Info_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Req_Survey_Info_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_Survey_Info_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Req_Survey_Info_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_Survey_Info_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_Survey_Info_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Req_Survey_Info_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Req_Survey_Info_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_Survey_Info_CS::MergeFrom(const MSG_Req_Survey_Info_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Req_Survey_Info_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_Req_Survey_Info_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Req_Survey_Info_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_Survey_Info_CS::CopyFrom(const MSG_Req_Survey_Info_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Req_Survey_Info_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_Survey_Info_CS::IsInitialized() const {
  return true;
}

void MSG_Req_Survey_Info_CS::InternalSwap(MSG_Req_Survey_Info_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_Survey_Info_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_Survey_Info_SC::InitAsDefaultInstance() {
}
class MSG_Ret_Survey_Info_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_Survey_Info_SC>()._has_bits_);
};

MSG_Ret_Survey_Info_SC::MSG_Ret_Survey_Info_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Ret_Survey_Info_SC)
}
MSG_Ret_Survey_Info_SC::MSG_Ret_Survey_Info_SC(const MSG_Ret_Survey_Info_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      survey_id_(from.survey_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Ret_Survey_Info_SC)
}

void MSG_Ret_Survey_Info_SC::SharedCtor() {
}

MSG_Ret_Survey_Info_SC::~MSG_Ret_Survey_Info_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_Ret_Survey_Info_SC)
  SharedDtor();
}

void MSG_Ret_Survey_Info_SC::SharedDtor() {
}

void MSG_Ret_Survey_Info_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_Survey_Info_SC& MSG_Ret_Survey_Info_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_Survey_Info_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_Survey_Info_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Ret_Survey_Info_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  survey_id_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_Survey_Info_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 survey_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_survey_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_survey_id(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_Survey_Info_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Ret_Survey_Info_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 survey_id = 1;
  for (int i = 0, n = this->_internal_survey_id_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_survey_id(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Ret_Survey_Info_SC)
  return target;
}

size_t MSG_Ret_Survey_Info_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Ret_Survey_Info_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 survey_id = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->survey_id_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_survey_id_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_Survey_Info_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Ret_Survey_Info_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_Survey_Info_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_Survey_Info_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Ret_Survey_Info_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Ret_Survey_Info_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_Survey_Info_SC::MergeFrom(const MSG_Ret_Survey_Info_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Ret_Survey_Info_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  survey_id_.MergeFrom(from.survey_id_);
}

void MSG_Ret_Survey_Info_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Ret_Survey_Info_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_Survey_Info_SC::CopyFrom(const MSG_Ret_Survey_Info_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Ret_Survey_Info_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_Survey_Info_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_Survey_Info_SC::InternalSwap(MSG_Ret_Survey_Info_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  survey_id_.InternalSwap(&other->survey_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_Survey_Info_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_GetSurveyReward_CS::InitAsDefaultInstance() {
}
class MSG_Req_GetSurveyReward_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_GetSurveyReward_CS>()._has_bits_);
  static void set_has_survey_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_GetSurveyReward_CS::MSG_Req_GetSurveyReward_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Req_GetSurveyReward_CS)
}
MSG_Req_GetSurveyReward_CS::MSG_Req_GetSurveyReward_CS(const MSG_Req_GetSurveyReward_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  survey_id_ = from.survey_id_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Req_GetSurveyReward_CS)
}

void MSG_Req_GetSurveyReward_CS::SharedCtor() {
  survey_id_ = 0u;
}

MSG_Req_GetSurveyReward_CS::~MSG_Req_GetSurveyReward_CS() {
  // @@protoc_insertion_point(destructor:massive.MSG_Req_GetSurveyReward_CS)
  SharedDtor();
}

void MSG_Req_GetSurveyReward_CS::SharedDtor() {
}

void MSG_Req_GetSurveyReward_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_GetSurveyReward_CS& MSG_Req_GetSurveyReward_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_GetSurveyReward_CS_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_GetSurveyReward_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Req_GetSurveyReward_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  survey_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_GetSurveyReward_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 survey_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_survey_id(&has_bits);
          survey_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_GetSurveyReward_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Req_GetSurveyReward_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_survey_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Req_GetSurveyReward_CS)
  return target;
}

size_t MSG_Req_GetSurveyReward_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Req_GetSurveyReward_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 survey_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_survey_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_GetSurveyReward_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Req_GetSurveyReward_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_GetSurveyReward_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_GetSurveyReward_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Req_GetSurveyReward_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Req_GetSurveyReward_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_GetSurveyReward_CS::MergeFrom(const MSG_Req_GetSurveyReward_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Req_GetSurveyReward_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_survey_id()) {
    _internal_set_survey_id(from._internal_survey_id());
  }
}

void MSG_Req_GetSurveyReward_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Req_GetSurveyReward_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_GetSurveyReward_CS::CopyFrom(const MSG_Req_GetSurveyReward_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Req_GetSurveyReward_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_GetSurveyReward_CS::IsInitialized() const {
  return true;
}

void MSG_Req_GetSurveyReward_CS::InternalSwap(MSG_Req_GetSurveyReward_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(survey_id_, other->survey_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_GetSurveyReward_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_GetSurveyReward_SC::InitAsDefaultInstance() {
}
class MSG_Ret_GetSurveyReward_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_GetSurveyReward_SC>()._has_bits_);
  static void set_has_survey_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_Ret_GetSurveyReward_SC::MSG_Ret_GetSurveyReward_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Ret_GetSurveyReward_SC)
}
MSG_Ret_GetSurveyReward_SC::MSG_Ret_GetSurveyReward_SC(const MSG_Ret_GetSurveyReward_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&survey_id_, &from.survey_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&survey_id_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Ret_GetSurveyReward_SC)
}

void MSG_Ret_GetSurveyReward_SC::SharedCtor() {
  ::memset(&survey_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&survey_id_)) + sizeof(retcode_));
}

MSG_Ret_GetSurveyReward_SC::~MSG_Ret_GetSurveyReward_SC() {
  // @@protoc_insertion_point(destructor:massive.MSG_Ret_GetSurveyReward_SC)
  SharedDtor();
}

void MSG_Ret_GetSurveyReward_SC::SharedDtor() {
}

void MSG_Ret_GetSurveyReward_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_GetSurveyReward_SC& MSG_Ret_GetSurveyReward_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_GetSurveyReward_SC_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_GetSurveyReward_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Ret_GetSurveyReward_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&survey_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&retcode_) -
        reinterpret_cast<char*>(&survey_id_)) + sizeof(retcode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_GetSurveyReward_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 survey_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_survey_id(&has_bits);
          survey_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 retcode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_GetSurveyReward_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Ret_GetSurveyReward_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_survey_id(), target);
  }

  // optional uint32 retcode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Ret_GetSurveyReward_SC)
  return target;
}

size_t MSG_Ret_GetSurveyReward_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Ret_GetSurveyReward_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 survey_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_survey_id());
    }

    // optional uint32 retcode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_GetSurveyReward_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Ret_GetSurveyReward_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_GetSurveyReward_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_GetSurveyReward_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Ret_GetSurveyReward_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Ret_GetSurveyReward_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_GetSurveyReward_SC::MergeFrom(const MSG_Ret_GetSurveyReward_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Ret_GetSurveyReward_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      survey_id_ = from.survey_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_GetSurveyReward_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Ret_GetSurveyReward_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_GetSurveyReward_SC::CopyFrom(const MSG_Ret_GetSurveyReward_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Ret_GetSurveyReward_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_GetSurveyReward_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_GetSurveyReward_SC::InternalSwap(MSG_Ret_GetSurveyReward_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(survey_id_, other->survey_id_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_GetSurveyReward_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_Wegame_Fcm_Info::InitAsDefaultInstance() {
}
class MSG_Ret_Wegame_Fcm_Info::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_Wegame_Fcm_Info>()._has_bits_);
  static void set_has_ratio(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_Wegame_Fcm_Info::MSG_Ret_Wegame_Fcm_Info()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:massive.MSG_Ret_Wegame_Fcm_Info)
}
MSG_Ret_Wegame_Fcm_Info::MSG_Ret_Wegame_Fcm_Info(const MSG_Ret_Wegame_Fcm_Info& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ratio_ = from.ratio_;
  // @@protoc_insertion_point(copy_constructor:massive.MSG_Ret_Wegame_Fcm_Info)
}

void MSG_Ret_Wegame_Fcm_Info::SharedCtor() {
  ratio_ = 0u;
}

MSG_Ret_Wegame_Fcm_Info::~MSG_Ret_Wegame_Fcm_Info() {
  // @@protoc_insertion_point(destructor:massive.MSG_Ret_Wegame_Fcm_Info)
  SharedDtor();
}

void MSG_Ret_Wegame_Fcm_Info::SharedDtor() {
}

void MSG_Ret_Wegame_Fcm_Info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_Wegame_Fcm_Info& MSG_Ret_Wegame_Fcm_Info::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_Wegame_Fcm_Info_massive_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_Wegame_Fcm_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:massive.MSG_Ret_Wegame_Fcm_Info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ratio_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_Wegame_Fcm_Info::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 ratio = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_ratio(&has_bits);
          ratio_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_Wegame_Fcm_Info::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:massive.MSG_Ret_Wegame_Fcm_Info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ratio = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ratio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:massive.MSG_Ret_Wegame_Fcm_Info)
  return target;
}

size_t MSG_Ret_Wegame_Fcm_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:massive.MSG_Ret_Wegame_Fcm_Info)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 ratio = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ratio());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_Wegame_Fcm_Info::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:massive.MSG_Ret_Wegame_Fcm_Info)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_Wegame_Fcm_Info* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_Wegame_Fcm_Info>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:massive.MSG_Ret_Wegame_Fcm_Info)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:massive.MSG_Ret_Wegame_Fcm_Info)
    MergeFrom(*source);
  }
}

void MSG_Ret_Wegame_Fcm_Info::MergeFrom(const MSG_Ret_Wegame_Fcm_Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:massive.MSG_Ret_Wegame_Fcm_Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_ratio()) {
    _internal_set_ratio(from._internal_ratio());
  }
}

void MSG_Ret_Wegame_Fcm_Info::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:massive.MSG_Ret_Wegame_Fcm_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_Wegame_Fcm_Info::CopyFrom(const MSG_Ret_Wegame_Fcm_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:massive.MSG_Ret_Wegame_Fcm_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_Wegame_Fcm_Info::IsInitialized() const {
  return true;
}

void MSG_Ret_Wegame_Fcm_Info::InternalSwap(MSG_Ret_Wegame_Fcm_Info* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ratio_, other->ratio_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_Wegame_Fcm_Info::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace massive
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::massive::MSG_Ret_GuideHistory_SC* Arena::CreateMaybeMessage< ::massive::MSG_Ret_GuideHistory_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Ret_GuideHistory_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Req_GuideStart_CS* Arena::CreateMaybeMessage< ::massive::MSG_Req_GuideStart_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Req_GuideStart_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Ret_GuideStart_SC* Arena::CreateMaybeMessage< ::massive::MSG_Ret_GuideStart_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Ret_GuideStart_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Req_GuideOver_CS* Arena::CreateMaybeMessage< ::massive::MSG_Req_GuideOver_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Req_GuideOver_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Ret_GuideOver_SC* Arena::CreateMaybeMessage< ::massive::MSG_Ret_GuideOver_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Ret_GuideOver_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_RetCurrencyChange_SC* Arena::CreateMaybeMessage< ::massive::MSG_RetCurrencyChange_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_RetCurrencyChange_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_ReqCrystalNumToday_CS* Arena::CreateMaybeMessage< ::massive::MSG_ReqCrystalNumToday_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_ReqCrystalNumToday_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_RetCrystalNumToday_SC* Arena::CreateMaybeMessage< ::massive::MSG_RetCrystalNumToday_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_RetCrystalNumToday_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_ReqStartAIRunning_CS* Arena::CreateMaybeMessage< ::massive::MSG_ReqStartAIRunning_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_ReqStartAIRunning_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_RetStartAIRunning_SC* Arena::CreateMaybeMessage< ::massive::MSG_RetStartAIRunning_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_RetStartAIRunning_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_RetUserSysSetting_SC* Arena::CreateMaybeMessage< ::massive::MSG_RetUserSysSetting_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_RetUserSysSetting_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_ReqUserSysSetting_CS* Arena::CreateMaybeMessage< ::massive::MSG_ReqUserSysSetting_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_ReqUserSysSetting_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::GiftItem* Arena::CreateMaybeMessage< ::massive::GiftItem >(Arena* arena) {
  return Arena::CreateInternal< ::massive::GiftItem >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Ret_SuccessOpenGift_SC* Arena::CreateMaybeMessage< ::massive::MSG_Ret_SuccessOpenGift_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Ret_SuccessOpenGift_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_ReqVitalityDegree_CS* Arena::CreateMaybeMessage< ::massive::MSG_ReqVitalityDegree_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_ReqVitalityDegree_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::VitalityItem* Arena::CreateMaybeMessage< ::massive::VitalityItem >(Arena* arena) {
  return Arena::CreateInternal< ::massive::VitalityItem >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::VitalityReward* Arena::CreateMaybeMessage< ::massive::VitalityReward >(Arena* arena) {
  return Arena::CreateInternal< ::massive::VitalityReward >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::VitalityUserInfo* Arena::CreateMaybeMessage< ::massive::VitalityUserInfo >(Arena* arena) {
  return Arena::CreateInternal< ::massive::VitalityUserInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_RetVitalityDegree_SC* Arena::CreateMaybeMessage< ::massive::MSG_RetVitalityDegree_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_RetVitalityDegree_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_ReqGetVitalityAward_CS* Arena::CreateMaybeMessage< ::massive::MSG_ReqGetVitalityAward_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_ReqGetVitalityAward_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_RetGetVitalityAward_SC* Arena::CreateMaybeMessage< ::massive::MSG_RetGetVitalityAward_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_RetGetVitalityAward_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_ReqGeneRemakeInfo_CS* Arena::CreateMaybeMessage< ::massive::MSG_ReqGeneRemakeInfo_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_ReqGeneRemakeInfo_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::GeneRemakeItem* Arena::CreateMaybeMessage< ::massive::GeneRemakeItem >(Arena* arena) {
  return Arena::CreateInternal< ::massive::GeneRemakeItem >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_RetGeneRemakeInfo_SC* Arena::CreateMaybeMessage< ::massive::MSG_RetGeneRemakeInfo_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_RetGeneRemakeInfo_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_ReqStrengthenGene_CS* Arena::CreateMaybeMessage< ::massive::MSG_ReqStrengthenGene_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_ReqStrengthenGene_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_RetStrengthenGene_SC* Arena::CreateMaybeMessage< ::massive::MSG_RetStrengthenGene_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_RetStrengthenGene_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Req_HoldonUser_CS* Arena::CreateMaybeMessage< ::massive::MSG_Req_HoldonUser_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Req_HoldonUser_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Ret_HoldonUser_SC* Arena::CreateMaybeMessage< ::massive::MSG_Ret_HoldonUser_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Ret_HoldonUser_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Ret_HoldonUser_Interrupt_SC* Arena::CreateMaybeMessage< ::massive::MSG_Ret_HoldonUser_Interrupt_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Ret_HoldonUser_Interrupt_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_ReqMakingItem_CS* Arena::CreateMaybeMessage< ::massive::MSG_ReqMakingItem_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_ReqMakingItem_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_RetMakingItem_SC* Arena::CreateMaybeMessage< ::massive::MSG_RetMakingItem_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_RetMakingItem_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Req_StruggleShape_CS* Arena::CreateMaybeMessage< ::massive::MSG_Req_StruggleShape_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Req_StruggleShape_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Req_DivorceStuck_CS* Arena::CreateMaybeMessage< ::massive::MSG_Req_DivorceStuck_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Req_DivorceStuck_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Req_Survey_Info_CS* Arena::CreateMaybeMessage< ::massive::MSG_Req_Survey_Info_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Req_Survey_Info_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Ret_Survey_Info_SC* Arena::CreateMaybeMessage< ::massive::MSG_Ret_Survey_Info_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Ret_Survey_Info_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Req_GetSurveyReward_CS* Arena::CreateMaybeMessage< ::massive::MSG_Req_GetSurveyReward_CS >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Req_GetSurveyReward_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Ret_GetSurveyReward_SC* Arena::CreateMaybeMessage< ::massive::MSG_Ret_GetSurveyReward_SC >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Ret_GetSurveyReward_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::massive::MSG_Ret_Wegame_Fcm_Info* Arena::CreateMaybeMessage< ::massive::MSG_Ret_Wegame_Fcm_Info >(Arena* arena) {
  return Arena::CreateInternal< ::massive::MSG_Ret_Wegame_Fcm_Info >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
