// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_object_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_object_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_object_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_object_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[49]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_2eproto;
namespace Obj {
class CardData;
class CardDataDefaultTypeInternal;
extern CardDataDefaultTypeInternal _CardData_default_instance_;
class CardEffectItem;
class CardEffectItemDefaultTypeInternal;
extern CardEffectItemDefaultTypeInternal _CardEffectItem_default_instance_;
class CardPackInfo;
class CardPackInfoDefaultTypeInternal;
extern CardPackInfoDefaultTypeInternal _CardPackInfo_default_instance_;
class EquipData;
class EquipDataDefaultTypeInternal;
extern EquipDataDefaultTypeInternal _EquipData_default_instance_;
class EquipRandInfo;
class EquipRandInfoDefaultTypeInternal;
extern EquipRandInfoDefaultTypeInternal _EquipRandInfo_default_instance_;
class MSG_MergeObjs_CS;
class MSG_MergeObjs_CSDefaultTypeInternal;
extern MSG_MergeObjs_CSDefaultTypeInternal _MSG_MergeObjs_CS_default_instance_;
class MSG_MergeObjs_SC;
class MSG_MergeObjs_SCDefaultTypeInternal;
extern MSG_MergeObjs_SCDefaultTypeInternal _MSG_MergeObjs_SC_default_instance_;
class MSG_PackData_SC;
class MSG_PackData_SCDefaultTypeInternal;
extern MSG_PackData_SCDefaultTypeInternal _MSG_PackData_SC_default_instance_;
class MSG_PackUnlock_CS;
class MSG_PackUnlock_CSDefaultTypeInternal;
extern MSG_PackUnlock_CSDefaultTypeInternal _MSG_PackUnlock_CS_default_instance_;
class MSG_PackUnlock_SC;
class MSG_PackUnlock_SCDefaultTypeInternal;
extern MSG_PackUnlock_SCDefaultTypeInternal _MSG_PackUnlock_SC_default_instance_;
class MSG_RefreshObjs_SC;
class MSG_RefreshObjs_SCDefaultTypeInternal;
extern MSG_RefreshObjs_SCDefaultTypeInternal _MSG_RefreshObjs_SC_default_instance_;
class MSG_RemoveObject_SC;
class MSG_RemoveObject_SCDefaultTypeInternal;
extern MSG_RemoveObject_SCDefaultTypeInternal _MSG_RemoveObject_SC_default_instance_;
class MSG_ReqAcepVIPCardPrize_CS;
class MSG_ReqAcepVIPCardPrize_CSDefaultTypeInternal;
extern MSG_ReqAcepVIPCardPrize_CSDefaultTypeInternal _MSG_ReqAcepVIPCardPrize_CS_default_instance_;
class MSG_ReqBuyVIPCard_CS;
class MSG_ReqBuyVIPCard_CSDefaultTypeInternal;
extern MSG_ReqBuyVIPCard_CSDefaultTypeInternal _MSG_ReqBuyVIPCard_CS_default_instance_;
class MSG_ReqCardPackInfo_CS;
class MSG_ReqCardPackInfo_CSDefaultTypeInternal;
extern MSG_ReqCardPackInfo_CSDefaultTypeInternal _MSG_ReqCardPackInfo_CS_default_instance_;
class MSG_ReqCheckItemDueTime_CS;
class MSG_ReqCheckItemDueTime_CSDefaultTypeInternal;
extern MSG_ReqCheckItemDueTime_CSDefaultTypeInternal _MSG_ReqCheckItemDueTime_CS_default_instance_;
class MSG_ReqCurrencyExchange_CS;
class MSG_ReqCurrencyExchange_CSDefaultTypeInternal;
extern MSG_ReqCurrencyExchange_CSDefaultTypeInternal _MSG_ReqCurrencyExchange_CS_default_instance_;
class MSG_ReqDestroyObject_CS;
class MSG_ReqDestroyObject_CSDefaultTypeInternal;
extern MSG_ReqDestroyObject_CSDefaultTypeInternal _MSG_ReqDestroyObject_CS_default_instance_;
class MSG_ReqFixUpDurability_CS;
class MSG_ReqFixUpDurability_CSDefaultTypeInternal;
extern MSG_ReqFixUpDurability_CSDefaultTypeInternal _MSG_ReqFixUpDurability_CS_default_instance_;
class MSG_ReqGetVIPCardInfo_CS;
class MSG_ReqGetVIPCardInfo_CSDefaultTypeInternal;
extern MSG_ReqGetVIPCardInfo_CSDefaultTypeInternal _MSG_ReqGetVIPCardInfo_CS_default_instance_;
class MSG_ReqMoveObject_CS;
class MSG_ReqMoveObject_CSDefaultTypeInternal;
extern MSG_ReqMoveObject_CSDefaultTypeInternal _MSG_ReqMoveObject_CS_default_instance_;
class MSG_ReqOpItemLock_CS;
class MSG_ReqOpItemLock_CSDefaultTypeInternal;
extern MSG_ReqOpItemLock_CSDefaultTypeInternal _MSG_ReqOpItemLock_CS_default_instance_;
class MSG_ReqPutOffCard_CS;
class MSG_ReqPutOffCard_CSDefaultTypeInternal;
extern MSG_ReqPutOffCard_CSDefaultTypeInternal _MSG_ReqPutOffCard_CS_default_instance_;
class MSG_ReqPutOnCard_CS;
class MSG_ReqPutOnCard_CSDefaultTypeInternal;
extern MSG_ReqPutOnCard_CSDefaultTypeInternal _MSG_ReqPutOnCard_CS_default_instance_;
class MSG_ReqRaffVIPCardPrize_CS;
class MSG_ReqRaffVIPCardPrize_CSDefaultTypeInternal;
extern MSG_ReqRaffVIPCardPrize_CSDefaultTypeInternal _MSG_ReqRaffVIPCardPrize_CS_default_instance_;
class MSG_ReqSellObject_CS;
class MSG_ReqSellObject_CSDefaultTypeInternal;
extern MSG_ReqSellObject_CSDefaultTypeInternal _MSG_ReqSellObject_CS_default_instance_;
class MSG_ReqSplitObject_CS;
class MSG_ReqSplitObject_CSDefaultTypeInternal;
extern MSG_ReqSplitObject_CSDefaultTypeInternal _MSG_ReqSplitObject_CS_default_instance_;
class MSG_ReqSwapCard_CS;
class MSG_ReqSwapCard_CSDefaultTypeInternal;
extern MSG_ReqSwapCard_CSDefaultTypeInternal _MSG_ReqSwapCard_CS_default_instance_;
class MSG_ReqSwapObject_CS;
class MSG_ReqSwapObject_CSDefaultTypeInternal;
extern MSG_ReqSwapObject_CSDefaultTypeInternal _MSG_ReqSwapObject_CS_default_instance_;
class MSG_ReqTransMoney_CS;
class MSG_ReqTransMoney_CSDefaultTypeInternal;
extern MSG_ReqTransMoney_CSDefaultTypeInternal _MSG_ReqTransMoney_CS_default_instance_;
class MSG_ReqUseCapsule_CS;
class MSG_ReqUseCapsule_CSDefaultTypeInternal;
extern MSG_ReqUseCapsule_CSDefaultTypeInternal _MSG_ReqUseCapsule_CS_default_instance_;
class MSG_ReqUseObject_CS;
class MSG_ReqUseObject_CSDefaultTypeInternal;
extern MSG_ReqUseObject_CSDefaultTypeInternal _MSG_ReqUseObject_CS_default_instance_;
class MSG_ReqUseObject_Special_CS;
class MSG_ReqUseObject_Special_CSDefaultTypeInternal;
extern MSG_ReqUseObject_Special_CSDefaultTypeInternal _MSG_ReqUseObject_Special_CS_default_instance_;
class MSG_RetAcepVIPCardPrize_SC;
class MSG_RetAcepVIPCardPrize_SCDefaultTypeInternal;
extern MSG_RetAcepVIPCardPrize_SCDefaultTypeInternal _MSG_RetAcepVIPCardPrize_SC_default_instance_;
class MSG_RetBuyVIPCard_SC;
class MSG_RetBuyVIPCard_SCDefaultTypeInternal;
extern MSG_RetBuyVIPCard_SCDefaultTypeInternal _MSG_RetBuyVIPCard_SC_default_instance_;
class MSG_RetCardPackInfo_SC;
class MSG_RetCardPackInfo_SCDefaultTypeInternal;
extern MSG_RetCardPackInfo_SCDefaultTypeInternal _MSG_RetCardPackInfo_SC_default_instance_;
class MSG_RetCurrencyExchange_SC;
class MSG_RetCurrencyExchange_SCDefaultTypeInternal;
extern MSG_RetCurrencyExchange_SCDefaultTypeInternal _MSG_RetCurrencyExchange_SC_default_instance_;
class MSG_RetGetVIPCardInfo_SC;
class MSG_RetGetVIPCardInfo_SCDefaultTypeInternal;
extern MSG_RetGetVIPCardInfo_SCDefaultTypeInternal _MSG_RetGetVIPCardInfo_SC_default_instance_;
class MSG_RetRaffVIPCardPrize_SC;
class MSG_RetRaffVIPCardPrize_SCDefaultTypeInternal;
extern MSG_RetRaffVIPCardPrize_SCDefaultTypeInternal _MSG_RetRaffVIPCardPrize_SC_default_instance_;
class MSG_TidyPack_CS;
class MSG_TidyPack_CSDefaultTypeInternal;
extern MSG_TidyPack_CSDefaultTypeInternal _MSG_TidyPack_CS_default_instance_;
class MSG_TidyPack_SC;
class MSG_TidyPack_SCDefaultTypeInternal;
extern MSG_TidyPack_SCDefaultTypeInternal _MSG_TidyPack_SC_default_instance_;
class MSG_UnwearEquip_CS;
class MSG_UnwearEquip_CSDefaultTypeInternal;
extern MSG_UnwearEquip_CSDefaultTypeInternal _MSG_UnwearEquip_CS_default_instance_;
class MSG_UnwearEquip_SC;
class MSG_UnwearEquip_SCDefaultTypeInternal;
extern MSG_UnwearEquip_SCDefaultTypeInternal _MSG_UnwearEquip_SC_default_instance_;
class MSG_WearEquip_CS;
class MSG_WearEquip_CSDefaultTypeInternal;
extern MSG_WearEquip_CSDefaultTypeInternal _MSG_WearEquip_CS_default_instance_;
class MSG_WearEquip_SC;
class MSG_WearEquip_SCDefaultTypeInternal;
extern MSG_WearEquip_SCDefaultTypeInternal _MSG_WearEquip_SC_default_instance_;
class PrizeBase;
class PrizeBaseDefaultTypeInternal;
extern PrizeBaseDefaultTypeInternal _PrizeBase_default_instance_;
class VIPCardInfo;
class VIPCardInfoDefaultTypeInternal;
extern VIPCardInfoDefaultTypeInternal _VIPCardInfo_default_instance_;
class t_Object;
class t_ObjectDefaultTypeInternal;
extern t_ObjectDefaultTypeInternal _t_Object_default_instance_;
class t_TidyPackInfo;
class t_TidyPackInfoDefaultTypeInternal;
extern t_TidyPackInfoDefaultTypeInternal _t_TidyPackInfo_default_instance_;
}  // namespace Obj
PROTOBUF_NAMESPACE_OPEN
template<> ::Obj::CardData* Arena::CreateMaybeMessage<::Obj::CardData>(Arena*);
template<> ::Obj::CardEffectItem* Arena::CreateMaybeMessage<::Obj::CardEffectItem>(Arena*);
template<> ::Obj::CardPackInfo* Arena::CreateMaybeMessage<::Obj::CardPackInfo>(Arena*);
template<> ::Obj::EquipData* Arena::CreateMaybeMessage<::Obj::EquipData>(Arena*);
template<> ::Obj::EquipRandInfo* Arena::CreateMaybeMessage<::Obj::EquipRandInfo>(Arena*);
template<> ::Obj::MSG_MergeObjs_CS* Arena::CreateMaybeMessage<::Obj::MSG_MergeObjs_CS>(Arena*);
template<> ::Obj::MSG_MergeObjs_SC* Arena::CreateMaybeMessage<::Obj::MSG_MergeObjs_SC>(Arena*);
template<> ::Obj::MSG_PackData_SC* Arena::CreateMaybeMessage<::Obj::MSG_PackData_SC>(Arena*);
template<> ::Obj::MSG_PackUnlock_CS* Arena::CreateMaybeMessage<::Obj::MSG_PackUnlock_CS>(Arena*);
template<> ::Obj::MSG_PackUnlock_SC* Arena::CreateMaybeMessage<::Obj::MSG_PackUnlock_SC>(Arena*);
template<> ::Obj::MSG_RefreshObjs_SC* Arena::CreateMaybeMessage<::Obj::MSG_RefreshObjs_SC>(Arena*);
template<> ::Obj::MSG_RemoveObject_SC* Arena::CreateMaybeMessage<::Obj::MSG_RemoveObject_SC>(Arena*);
template<> ::Obj::MSG_ReqAcepVIPCardPrize_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqAcepVIPCardPrize_CS>(Arena*);
template<> ::Obj::MSG_ReqBuyVIPCard_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqBuyVIPCard_CS>(Arena*);
template<> ::Obj::MSG_ReqCardPackInfo_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqCardPackInfo_CS>(Arena*);
template<> ::Obj::MSG_ReqCheckItemDueTime_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqCheckItemDueTime_CS>(Arena*);
template<> ::Obj::MSG_ReqCurrencyExchange_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqCurrencyExchange_CS>(Arena*);
template<> ::Obj::MSG_ReqDestroyObject_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqDestroyObject_CS>(Arena*);
template<> ::Obj::MSG_ReqFixUpDurability_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqFixUpDurability_CS>(Arena*);
template<> ::Obj::MSG_ReqGetVIPCardInfo_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqGetVIPCardInfo_CS>(Arena*);
template<> ::Obj::MSG_ReqMoveObject_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqMoveObject_CS>(Arena*);
template<> ::Obj::MSG_ReqOpItemLock_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqOpItemLock_CS>(Arena*);
template<> ::Obj::MSG_ReqPutOffCard_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqPutOffCard_CS>(Arena*);
template<> ::Obj::MSG_ReqPutOnCard_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqPutOnCard_CS>(Arena*);
template<> ::Obj::MSG_ReqRaffVIPCardPrize_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqRaffVIPCardPrize_CS>(Arena*);
template<> ::Obj::MSG_ReqSellObject_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqSellObject_CS>(Arena*);
template<> ::Obj::MSG_ReqSplitObject_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqSplitObject_CS>(Arena*);
template<> ::Obj::MSG_ReqSwapCard_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqSwapCard_CS>(Arena*);
template<> ::Obj::MSG_ReqSwapObject_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqSwapObject_CS>(Arena*);
template<> ::Obj::MSG_ReqTransMoney_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqTransMoney_CS>(Arena*);
template<> ::Obj::MSG_ReqUseCapsule_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqUseCapsule_CS>(Arena*);
template<> ::Obj::MSG_ReqUseObject_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqUseObject_CS>(Arena*);
template<> ::Obj::MSG_ReqUseObject_Special_CS* Arena::CreateMaybeMessage<::Obj::MSG_ReqUseObject_Special_CS>(Arena*);
template<> ::Obj::MSG_RetAcepVIPCardPrize_SC* Arena::CreateMaybeMessage<::Obj::MSG_RetAcepVIPCardPrize_SC>(Arena*);
template<> ::Obj::MSG_RetBuyVIPCard_SC* Arena::CreateMaybeMessage<::Obj::MSG_RetBuyVIPCard_SC>(Arena*);
template<> ::Obj::MSG_RetCardPackInfo_SC* Arena::CreateMaybeMessage<::Obj::MSG_RetCardPackInfo_SC>(Arena*);
template<> ::Obj::MSG_RetCurrencyExchange_SC* Arena::CreateMaybeMessage<::Obj::MSG_RetCurrencyExchange_SC>(Arena*);
template<> ::Obj::MSG_RetGetVIPCardInfo_SC* Arena::CreateMaybeMessage<::Obj::MSG_RetGetVIPCardInfo_SC>(Arena*);
template<> ::Obj::MSG_RetRaffVIPCardPrize_SC* Arena::CreateMaybeMessage<::Obj::MSG_RetRaffVIPCardPrize_SC>(Arena*);
template<> ::Obj::MSG_TidyPack_CS* Arena::CreateMaybeMessage<::Obj::MSG_TidyPack_CS>(Arena*);
template<> ::Obj::MSG_TidyPack_SC* Arena::CreateMaybeMessage<::Obj::MSG_TidyPack_SC>(Arena*);
template<> ::Obj::MSG_UnwearEquip_CS* Arena::CreateMaybeMessage<::Obj::MSG_UnwearEquip_CS>(Arena*);
template<> ::Obj::MSG_UnwearEquip_SC* Arena::CreateMaybeMessage<::Obj::MSG_UnwearEquip_SC>(Arena*);
template<> ::Obj::MSG_WearEquip_CS* Arena::CreateMaybeMessage<::Obj::MSG_WearEquip_CS>(Arena*);
template<> ::Obj::MSG_WearEquip_SC* Arena::CreateMaybeMessage<::Obj::MSG_WearEquip_SC>(Arena*);
template<> ::Obj::PrizeBase* Arena::CreateMaybeMessage<::Obj::PrizeBase>(Arena*);
template<> ::Obj::VIPCardInfo* Arena::CreateMaybeMessage<::Obj::VIPCardInfo>(Arena*);
template<> ::Obj::t_Object* Arena::CreateMaybeMessage<::Obj::t_Object>(Arena*);
template<> ::Obj::t_TidyPackInfo* Arena::CreateMaybeMessage<::Obj::t_TidyPackInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Obj {

enum PackType : int {
  PACK_TYPE_NONE = 0,
  PACK_TYPE_MAIN = 1,
  PACK_TYPE_EQUIP = 2,
  PACK_TYPE_QUEST = 3,
  PACK_TYPE_HERO_CARD = 4,
  PACK_TYPE_WAREHOUSE1 = 5,
  PACK_TYPE_WAREHOUSE2 = 6,
  PACK_TYPE_WAREHOUSE3 = 7,
  PACK_TYPE_WAREHOUSE4 = 8,
  PACK_TYPE_CPASULE = 9,
  PACK_TYPE_MAX = 10
};
bool PackType_IsValid(int value);
constexpr PackType PackType_MIN = PACK_TYPE_NONE;
constexpr PackType PackType_MAX = PACK_TYPE_MAX;
constexpr int PackType_ARRAYSIZE = PackType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PackType_descriptor();
template<typename T>
inline const std::string& PackType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PackType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PackType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PackType_descriptor(), enum_t_value);
}
inline bool PackType_Parse(
    const std::string& name, PackType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PackType>(
    PackType_descriptor(), name, value);
}
enum SpecialType : int {
  EQUIP_CAREER_NOLIMIT = 999
};
bool SpecialType_IsValid(int value);
constexpr SpecialType SpecialType_MIN = EQUIP_CAREER_NOLIMIT;
constexpr SpecialType SpecialType_MAX = EQUIP_CAREER_NOLIMIT;
constexpr int SpecialType_ARRAYSIZE = SpecialType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SpecialType_descriptor();
template<typename T>
inline const std::string& SpecialType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SpecialType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SpecialType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SpecialType_descriptor(), enum_t_value);
}
inline bool SpecialType_Parse(
    const std::string& name, SpecialType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SpecialType>(
    SpecialType_descriptor(), name, value);
}
enum ObjectType : int {
  OBJTYPE_WEAPON_NPC = 0,
  OBJTYPE_WEAPON_MIN = 1,
  OBJTYPE_SINGLE_SWORD = 1,
  OBJTYPE_TWO_DAGGER = 2,
  OBJTYPE_DOUBLE_GREATSWORD = 3,
  OBJTYPE_MAGIC_BALL = 4,
  OBJTYPE_WEAPON_MAX = 20,
  OBJTYPE_EQUIP_MIN = 21,
  OBJTYPE_EQUIP_HEAD = 21,
  OBJTYPE_EQUIP_SHOULDER = 22,
  OBJTYPE_EQUIP_CHEST = 23,
  OBJTYPE_EQUIP_HAND = 24,
  OBJTYPE_EQUIP_WAIST = 25,
  OBJTYPE_EQUIP_LEG = 26,
  OBJTYPE_EQUIP_FOOT = 27,
  OBJTYPE_EQUIP_NECK = 28,
  OBJTYPE_EQUIP_ACCESSORY = 29,
  OBJTYPE_EQUIP_WEAPON = 30,
  OBJTYPE_EQUIP_MAX = 31,
  OBJTYPE_RES = 41,
  OBJTYPE_SPET_EXP = 42,
  OBJTYPE_FRIENDOATH = 43,
  OBJTYPE_QUEST = 45,
  OBJTYPE_PET = 46,
  OBJTYPE_GIFT_BAG = 47,
  OBJTYPE_CAN_USE = 48,
  OBJTYPE_HERO = 49,
  OBJTYPE_RUNE = 50,
  OBJTYPE_RING_QUEST = 51,
  OBJTYPE_TREASURE_RADAR = 52,
  OBJTYPE_CARD = 53,
  OBJTYPE_QUEST2 = 60,
  OBJTYPE_DNA = 61,
  OBJTYPE_DNA2 = 62,
  OBJTYPE_CLEAR_BATTLESTATE = 63,
  OBJTYPE_SKILL = 64,
  OBJTYPE_EVOLUTION = 65,
  OBJTYPE_AVATAR = 66,
  OBJTYPE_NORMAL_ITEM_QUEST = 67,
  OBJTYPE_CAPSULE = 68,
  OBJTYPE_MAX = 69
};
bool ObjectType_IsValid(int value);
constexpr ObjectType ObjectType_MIN = OBJTYPE_WEAPON_NPC;
constexpr ObjectType ObjectType_MAX = OBJTYPE_MAX;
constexpr int ObjectType_ARRAYSIZE = ObjectType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObjectType_descriptor();
template<typename T>
inline const std::string& ObjectType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ObjectType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ObjectType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ObjectType_descriptor(), enum_t_value);
}
inline bool ObjectType_Parse(
    const std::string& name, ObjectType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ObjectType>(
    ObjectType_descriptor(), name, value);
}
enum ObjectId : int {
  APPRENT_LETTER = 103,
  VATALITY_PILL = 108,
  REMOVE_ERROR_CAPSULE = 109,
  INTELLECTUALITY_CAPSULE = 110,
  TIME_CAPSULE = 111
};
bool ObjectId_IsValid(int value);
constexpr ObjectId ObjectId_MIN = APPRENT_LETTER;
constexpr ObjectId ObjectId_MAX = TIME_CAPSULE;
constexpr int ObjectId_ARRAYSIZE = ObjectId_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObjectId_descriptor();
template<typename T>
inline const std::string& ObjectId_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ObjectId>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ObjectId_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ObjectId_descriptor(), enum_t_value);
}
inline bool ObjectId_Parse(
    const std::string& name, ObjectId* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ObjectId>(
    ObjectId_descriptor(), name, value);
}
enum EquipType : int {
  EQUIP_HEAD = 0,
  EQUIP_SHOULDER = 1,
  EQUIP_CHEST = 2,
  EQUIP_HAND = 3,
  EQUIP_WAIST = 4,
  EQUIP_LEG = 5,
  EQUIP_FOOT = 6,
  EQUIP_NECK = 7,
  EQUIP_ACCESSORY_1 = 8,
  EQUIP_ACCESSORY_2 = 9,
  EQUIP_WEAPON = 10,
  EQUIP_INVALID_POS = 11
};
bool EquipType_IsValid(int value);
constexpr EquipType EquipType_MIN = EQUIP_HEAD;
constexpr EquipType EquipType_MAX = EQUIP_INVALID_POS;
constexpr int EquipType_ARRAYSIZE = EquipType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EquipType_descriptor();
template<typename T>
inline const std::string& EquipType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EquipType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EquipType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EquipType_descriptor(), enum_t_value);
}
inline bool EquipType_Parse(
    const std::string& name, EquipType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EquipType>(
    EquipType_descriptor(), name, value);
}
enum RaffUseType : int {
  RAFFUSETYPE_FREETIMES = 0,
  RAFFUSETYPE_OBJECT = 1
};
bool RaffUseType_IsValid(int value);
constexpr RaffUseType RaffUseType_MIN = RAFFUSETYPE_FREETIMES;
constexpr RaffUseType RaffUseType_MAX = RAFFUSETYPE_OBJECT;
constexpr int RaffUseType_ARRAYSIZE = RaffUseType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RaffUseType_descriptor();
template<typename T>
inline const std::string& RaffUseType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RaffUseType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RaffUseType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RaffUseType_descriptor(), enum_t_value);
}
inline bool RaffUseType_Parse(
    const std::string& name, RaffUseType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RaffUseType>(
    RaffUseType_descriptor(), name, value);
}
enum Equip8Prop : int {
  BASIC_PROP = 1,
  PROP_1 = 2,
  PROP_2 = 3,
  SUFFIX_1 = 4,
  SUFFIX_2 = 5,
  SUFFIX_3 = 6,
  SUFFIX_4 = 7,
  FIXED_PROP = 8
};
bool Equip8Prop_IsValid(int value);
constexpr Equip8Prop Equip8Prop_MIN = BASIC_PROP;
constexpr Equip8Prop Equip8Prop_MAX = FIXED_PROP;
constexpr int Equip8Prop_ARRAYSIZE = Equip8Prop_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Equip8Prop_descriptor();
template<typename T>
inline const std::string& Equip8Prop_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Equip8Prop>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Equip8Prop_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Equip8Prop_descriptor(), enum_t_value);
}
inline bool Equip8Prop_Parse(
    const std::string& name, Equip8Prop* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Equip8Prop>(
    Equip8Prop_descriptor(), name, value);
}
// ===================================================================

class EquipData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.EquipData) */ {
 public:
  EquipData();
  virtual ~EquipData();

  EquipData(const EquipData& from);
  EquipData(EquipData&& from) noexcept
    : EquipData() {
    *this = ::std::move(from);
  }

  inline EquipData& operator=(const EquipData& from) {
    CopyFrom(from);
    return *this;
  }
  inline EquipData& operator=(EquipData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EquipData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EquipData* internal_default_instance() {
    return reinterpret_cast<const EquipData*>(
               &_EquipData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EquipData& a, EquipData& b) {
    a.Swap(&b);
  }
  inline void Swap(EquipData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EquipData* New() const final {
    return CreateMaybeMessage<EquipData>(nullptr);
  }

  EquipData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EquipData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EquipData& from);
  void MergeFrom(const EquipData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EquipData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.EquipData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWeaponattFieldNumber = 1,
    kPdamFieldNumber = 2,
    kMdamFieldNumber = 3,
    kPdefFieldNumber = 4,
    kMdefFieldNumber = 5,
    kMaxhpFieldNumber = 6,
    kStrFieldNumber = 7,
    kDexFieldNumber = 8,
    kIntelFieldNumber = 9,
    kPhyFieldNumber = 10,
    kBangFieldNumber = 11,
    kToughnessFieldNumber = 12,
    kBlockFieldNumber = 13,
    kPenetrateFieldNumber = 14,
    kAccurateFieldNumber = 15,
    kHoldFieldNumber = 16,
    kDeflectFieldNumber = 17,
    kBangextradamageFieldNumber = 18,
    kToughnessreducedamageFieldNumber = 19,
    kBlockreducedamageFieldNumber = 20,
    kPenetrateextradamageFieldNumber = 21,
    kAccurateextradamageFieldNumber = 22,
    kHoldreducedamageFieldNumber = 23,
    kDeflectreducedamageFieldNumber = 24,
    kMaxmpFieldNumber = 25,
    kMissFieldNumber = 26,
    kHitFieldNumber = 27,
    kFiremasteryFieldNumber = 28,
    kIcemasteryFieldNumber = 29,
    kLightningmasteryFieldNumber = 30,
    kBrightmasteryFieldNumber = 31,
    kDarkmasteryFieldNumber = 32,
    kFireresistFieldNumber = 33,
    kIceresistFieldNumber = 34,
    kLightningresistFieldNumber = 35,
    kBrightresistFieldNumber = 36,
    kDarkresistFieldNumber = 37,
    kFirepenFieldNumber = 38,
    kIcepenFieldNumber = 39,
    kLightningpenFieldNumber = 40,
    kBrightpenFieldNumber = 41,
    kDarkpenFieldNumber = 42,
    kBlowintFieldNumber = 43,
    kKnockintFieldNumber = 44,
    kFloatintFieldNumber = 45,
    kSuperhitintFieldNumber = 46,
    kBlowresistFieldNumber = 47,
    kKnockresistFieldNumber = 48,
    kFloatresistFieldNumber = 49,
    kSuperhitresistFieldNumber = 50,
    kStiffaddtimeFieldNumber = 51,
    kStiffdectimeFieldNumber = 52,
    kBlowdectimeFieldNumber = 53,
    kKnockdectimeFieldNumber = 54,
    kFloatdectimeFieldNumber = 55,
    kSuperhitdectimeFieldNumber = 56,
  };
  // optional uint32 weaponatt = 1;
  bool has_weaponatt() const;
  private:
  bool _internal_has_weaponatt() const;
  public:
  void clear_weaponatt();
  ::PROTOBUF_NAMESPACE_ID::uint32 weaponatt() const;
  void set_weaponatt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_weaponatt() const;
  void _internal_set_weaponatt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pdam = 2;
  bool has_pdam() const;
  private:
  bool _internal_has_pdam() const;
  public:
  void clear_pdam();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdam() const;
  void set_pdam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdam() const;
  void _internal_set_pdam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 mdam = 3;
  bool has_mdam() const;
  private:
  bool _internal_has_mdam() const;
  public:
  void clear_mdam();
  ::PROTOBUF_NAMESPACE_ID::uint32 mdam() const;
  void set_mdam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mdam() const;
  void _internal_set_mdam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pdef = 4;
  bool has_pdef() const;
  private:
  bool _internal_has_pdef() const;
  public:
  void clear_pdef();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdef() const;
  void set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdef() const;
  void _internal_set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 mdef = 5;
  bool has_mdef() const;
  private:
  bool _internal_has_mdef() const;
  public:
  void clear_mdef();
  ::PROTOBUF_NAMESPACE_ID::uint32 mdef() const;
  void set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mdef() const;
  void _internal_set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxhp = 6;
  bool has_maxhp() const;
  private:
  bool _internal_has_maxhp() const;
  public:
  void clear_maxhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp() const;
  void set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxhp() const;
  void _internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 str = 7;
  bool has_str() const;
  private:
  bool _internal_has_str() const;
  public:
  void clear_str();
  ::PROTOBUF_NAMESPACE_ID::uint32 str() const;
  void set_str(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_str() const;
  void _internal_set_str(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dex = 8;
  bool has_dex() const;
  private:
  bool _internal_has_dex() const;
  public:
  void clear_dex();
  ::PROTOBUF_NAMESPACE_ID::uint32 dex() const;
  void set_dex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dex() const;
  void _internal_set_dex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 intel = 9;
  bool has_intel() const;
  private:
  bool _internal_has_intel() const;
  public:
  void clear_intel();
  ::PROTOBUF_NAMESPACE_ID::uint32 intel() const;
  void set_intel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_intel() const;
  void _internal_set_intel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 phy = 10;
  bool has_phy() const;
  private:
  bool _internal_has_phy() const;
  public:
  void clear_phy();
  ::PROTOBUF_NAMESPACE_ID::uint32 phy() const;
  void set_phy(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_phy() const;
  void _internal_set_phy(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bang = 11;
  bool has_bang() const;
  private:
  bool _internal_has_bang() const;
  public:
  void clear_bang();
  ::PROTOBUF_NAMESPACE_ID::uint32 bang() const;
  void set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bang() const;
  void _internal_set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 toughness = 12;
  bool has_toughness() const;
  private:
  bool _internal_has_toughness() const;
  public:
  void clear_toughness();
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness() const;
  void set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_toughness() const;
  void _internal_set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 block = 13;
  bool has_block() const;
  private:
  bool _internal_has_block() const;
  public:
  void clear_block();
  ::PROTOBUF_NAMESPACE_ID::uint32 block() const;
  void set_block(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_block() const;
  void _internal_set_block(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 penetrate = 14;
  bool has_penetrate() const;
  private:
  bool _internal_has_penetrate() const;
  public:
  void clear_penetrate();
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrate() const;
  void set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_penetrate() const;
  void _internal_set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 accurate = 15;
  bool has_accurate() const;
  private:
  bool _internal_has_accurate() const;
  public:
  void clear_accurate();
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate() const;
  void set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accurate() const;
  void _internal_set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hold = 16;
  bool has_hold() const;
  private:
  bool _internal_has_hold() const;
  public:
  void clear_hold();
  ::PROTOBUF_NAMESPACE_ID::uint32 hold() const;
  void set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hold() const;
  void _internal_set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 deflect = 17;
  bool has_deflect() const;
  private:
  bool _internal_has_deflect() const;
  public:
  void clear_deflect();
  ::PROTOBUF_NAMESPACE_ID::uint32 deflect() const;
  void set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deflect() const;
  void _internal_set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bangextradamage = 18;
  bool has_bangextradamage() const;
  private:
  bool _internal_has_bangextradamage() const;
  public:
  void clear_bangextradamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 bangextradamage() const;
  void set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bangextradamage() const;
  void _internal_set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 toughnessreducedamage = 19;
  bool has_toughnessreducedamage() const;
  private:
  bool _internal_has_toughnessreducedamage() const;
  public:
  void clear_toughnessreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 toughnessreducedamage() const;
  void set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_toughnessreducedamage() const;
  void _internal_set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 blockreducedamage = 20;
  bool has_blockreducedamage() const;
  private:
  bool _internal_has_blockreducedamage() const;
  public:
  void clear_blockreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 blockreducedamage() const;
  void set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blockreducedamage() const;
  void _internal_set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 penetrateextradamage = 21;
  bool has_penetrateextradamage() const;
  private:
  bool _internal_has_penetrateextradamage() const;
  public:
  void clear_penetrateextradamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrateextradamage() const;
  void set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_penetrateextradamage() const;
  void _internal_set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 accurateextradamage = 22;
  bool has_accurateextradamage() const;
  private:
  bool _internal_has_accurateextradamage() const;
  public:
  void clear_accurateextradamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 accurateextradamage() const;
  void set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accurateextradamage() const;
  void _internal_set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 holdreducedamage = 23;
  bool has_holdreducedamage() const;
  private:
  bool _internal_has_holdreducedamage() const;
  public:
  void clear_holdreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 holdreducedamage() const;
  void set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_holdreducedamage() const;
  void _internal_set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 deflectreducedamage = 24;
  bool has_deflectreducedamage() const;
  private:
  bool _internal_has_deflectreducedamage() const;
  public:
  void clear_deflectreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 deflectreducedamage() const;
  void set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deflectreducedamage() const;
  void _internal_set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxmp = 25;
  bool has_maxmp() const;
  private:
  bool _internal_has_maxmp() const;
  public:
  void clear_maxmp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxmp() const;
  void set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxmp() const;
  void _internal_set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 miss = 26;
  bool has_miss() const;
  private:
  bool _internal_has_miss() const;
  public:
  void clear_miss();
  ::PROTOBUF_NAMESPACE_ID::uint32 miss() const;
  void set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_miss() const;
  void _internal_set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hit = 27;
  bool has_hit() const;
  private:
  bool _internal_has_hit() const;
  public:
  void clear_hit();
  ::PROTOBUF_NAMESPACE_ID::uint32 hit() const;
  void set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hit() const;
  void _internal_set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 firemastery = 28;
  bool has_firemastery() const;
  private:
  bool _internal_has_firemastery() const;
  public:
  void clear_firemastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 firemastery() const;
  void set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_firemastery() const;
  void _internal_set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 icemastery = 29;
  bool has_icemastery() const;
  private:
  bool _internal_has_icemastery() const;
  public:
  void clear_icemastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 icemastery() const;
  void set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_icemastery() const;
  void _internal_set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lightningmastery = 30;
  bool has_lightningmastery() const;
  private:
  bool _internal_has_lightningmastery() const;
  public:
  void clear_lightningmastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningmastery() const;
  void set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lightningmastery() const;
  void _internal_set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 brightmastery = 31;
  bool has_brightmastery() const;
  private:
  bool _internal_has_brightmastery() const;
  public:
  void clear_brightmastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 brightmastery() const;
  void set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brightmastery() const;
  void _internal_set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 darkmastery = 32;
  bool has_darkmastery() const;
  private:
  bool _internal_has_darkmastery() const;
  public:
  void clear_darkmastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 darkmastery() const;
  void set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_darkmastery() const;
  void _internal_set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 fireresist = 33;
  bool has_fireresist() const;
  private:
  bool _internal_has_fireresist() const;
  public:
  void clear_fireresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 fireresist() const;
  void set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fireresist() const;
  void _internal_set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 iceresist = 34;
  bool has_iceresist() const;
  private:
  bool _internal_has_iceresist() const;
  public:
  void clear_iceresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 iceresist() const;
  void set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_iceresist() const;
  void _internal_set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lightningresist = 35;
  bool has_lightningresist() const;
  private:
  bool _internal_has_lightningresist() const;
  public:
  void clear_lightningresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningresist() const;
  void set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lightningresist() const;
  void _internal_set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 brightresist = 36;
  bool has_brightresist() const;
  private:
  bool _internal_has_brightresist() const;
  public:
  void clear_brightresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 brightresist() const;
  void set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brightresist() const;
  void _internal_set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 darkresist = 37;
  bool has_darkresist() const;
  private:
  bool _internal_has_darkresist() const;
  public:
  void clear_darkresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 darkresist() const;
  void set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_darkresist() const;
  void _internal_set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 firepen = 38;
  bool has_firepen() const;
  private:
  bool _internal_has_firepen() const;
  public:
  void clear_firepen();
  ::PROTOBUF_NAMESPACE_ID::uint32 firepen() const;
  void set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_firepen() const;
  void _internal_set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 icepen = 39;
  bool has_icepen() const;
  private:
  bool _internal_has_icepen() const;
  public:
  void clear_icepen();
  ::PROTOBUF_NAMESPACE_ID::uint32 icepen() const;
  void set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_icepen() const;
  void _internal_set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lightningpen = 40;
  bool has_lightningpen() const;
  private:
  bool _internal_has_lightningpen() const;
  public:
  void clear_lightningpen();
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningpen() const;
  void set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lightningpen() const;
  void _internal_set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 brightpen = 41;
  bool has_brightpen() const;
  private:
  bool _internal_has_brightpen() const;
  public:
  void clear_brightpen();
  ::PROTOBUF_NAMESPACE_ID::uint32 brightpen() const;
  void set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brightpen() const;
  void _internal_set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 darkpen = 42;
  bool has_darkpen() const;
  private:
  bool _internal_has_darkpen() const;
  public:
  void clear_darkpen();
  ::PROTOBUF_NAMESPACE_ID::uint32 darkpen() const;
  void set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_darkpen() const;
  void _internal_set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 blowint = 43;
  bool has_blowint() const;
  private:
  bool _internal_has_blowint() const;
  public:
  void clear_blowint();
  ::PROTOBUF_NAMESPACE_ID::uint32 blowint() const;
  void set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blowint() const;
  void _internal_set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 knockint = 44;
  bool has_knockint() const;
  private:
  bool _internal_has_knockint() const;
  public:
  void clear_knockint();
  ::PROTOBUF_NAMESPACE_ID::uint32 knockint() const;
  void set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_knockint() const;
  void _internal_set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 floatint = 45;
  bool has_floatint() const;
  private:
  bool _internal_has_floatint() const;
  public:
  void clear_floatint();
  ::PROTOBUF_NAMESPACE_ID::uint32 floatint() const;
  void set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_floatint() const;
  void _internal_set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 superhitint = 46;
  bool has_superhitint() const;
  private:
  bool _internal_has_superhitint() const;
  public:
  void clear_superhitint();
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitint() const;
  void set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_superhitint() const;
  void _internal_set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 blowresist = 47;
  bool has_blowresist() const;
  private:
  bool _internal_has_blowresist() const;
  public:
  void clear_blowresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 blowresist() const;
  void set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blowresist() const;
  void _internal_set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 knockresist = 48;
  bool has_knockresist() const;
  private:
  bool _internal_has_knockresist() const;
  public:
  void clear_knockresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 knockresist() const;
  void set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_knockresist() const;
  void _internal_set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 floatresist = 49;
  bool has_floatresist() const;
  private:
  bool _internal_has_floatresist() const;
  public:
  void clear_floatresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 floatresist() const;
  void set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_floatresist() const;
  void _internal_set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 superhitresist = 50;
  bool has_superhitresist() const;
  private:
  bool _internal_has_superhitresist() const;
  public:
  void clear_superhitresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitresist() const;
  void set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_superhitresist() const;
  void _internal_set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 stiffaddtime = 51;
  bool has_stiffaddtime() const;
  private:
  bool _internal_has_stiffaddtime() const;
  public:
  void clear_stiffaddtime();
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffaddtime() const;
  void set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stiffaddtime() const;
  void _internal_set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 stiffdectime = 52;
  bool has_stiffdectime() const;
  private:
  bool _internal_has_stiffdectime() const;
  public:
  void clear_stiffdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffdectime() const;
  void set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stiffdectime() const;
  void _internal_set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 blowdectime = 53;
  bool has_blowdectime() const;
  private:
  bool _internal_has_blowdectime() const;
  public:
  void clear_blowdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 blowdectime() const;
  void set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blowdectime() const;
  void _internal_set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 knockdectime = 54;
  bool has_knockdectime() const;
  private:
  bool _internal_has_knockdectime() const;
  public:
  void clear_knockdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 knockdectime() const;
  void set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_knockdectime() const;
  void _internal_set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 floatdectime = 55;
  bool has_floatdectime() const;
  private:
  bool _internal_has_floatdectime() const;
  public:
  void clear_floatdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 floatdectime() const;
  void set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_floatdectime() const;
  void _internal_set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 superhitdectime = 56;
  bool has_superhitdectime() const;
  private:
  bool _internal_has_superhitdectime() const;
  public:
  void clear_superhitdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitdectime() const;
  void set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_superhitdectime() const;
  void _internal_set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.EquipData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 weaponatt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mdam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdef_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mdef_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 str_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 intel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 phy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bang_;
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness_;
  ::PROTOBUF_NAMESPACE_ID::uint32 block_;
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deflect_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bangextradamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 toughnessreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blockreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrateextradamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accurateextradamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 holdreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deflectreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxmp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 miss_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 firemastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 icemastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningmastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brightmastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 darkmastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fireresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 iceresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brightresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 darkresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 firepen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 icepen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningpen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brightpen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 darkpen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blowint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 knockint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 floatint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blowresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 knockresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 floatresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffaddtime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blowdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 knockdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 floatdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitdectime_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class EquipRandInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.EquipRandInfo) */ {
 public:
  EquipRandInfo();
  virtual ~EquipRandInfo();

  EquipRandInfo(const EquipRandInfo& from);
  EquipRandInfo(EquipRandInfo&& from) noexcept
    : EquipRandInfo() {
    *this = ::std::move(from);
  }

  inline EquipRandInfo& operator=(const EquipRandInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline EquipRandInfo& operator=(EquipRandInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EquipRandInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EquipRandInfo* internal_default_instance() {
    return reinterpret_cast<const EquipRandInfo*>(
               &_EquipRandInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EquipRandInfo& a, EquipRandInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(EquipRandInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EquipRandInfo* New() const final {
    return CreateMaybeMessage<EquipRandInfo>(nullptr);
  }

  EquipRandInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EquipRandInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EquipRandInfo& from);
  void MergeFrom(const EquipRandInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EquipRandInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.EquipRandInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 2,
    kValueFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // optional uint32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 value = 3;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .Obj.Equip8Prop type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::Obj::Equip8Prop type() const;
  void set_type(::Obj::Equip8Prop value);
  private:
  ::Obj::Equip8Prop _internal_type() const;
  void _internal_set_type(::Obj::Equip8Prop value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.EquipRandInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  int type_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class CardEffectItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.CardEffectItem) */ {
 public:
  CardEffectItem();
  virtual ~CardEffectItem();

  CardEffectItem(const CardEffectItem& from);
  CardEffectItem(CardEffectItem&& from) noexcept
    : CardEffectItem() {
    *this = ::std::move(from);
  }

  inline CardEffectItem& operator=(const CardEffectItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CardEffectItem& operator=(CardEffectItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CardEffectItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CardEffectItem* internal_default_instance() {
    return reinterpret_cast<const CardEffectItem*>(
               &_CardEffectItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CardEffectItem& a, CardEffectItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CardEffectItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CardEffectItem* New() const final {
    return CreateMaybeMessage<CardEffectItem>(nullptr);
  }

  CardEffectItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CardEffectItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CardEffectItem& from);
  void MergeFrom(const CardEffectItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CardEffectItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.CardEffectItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVarnameFieldNumber = 4,
    kIdFieldNumber = 1,
    kTriggerFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // optional string varname = 4;
  bool has_varname() const;
  private:
  bool _internal_has_varname() const;
  public:
  void clear_varname();
  const std::string& varname() const;
  void set_varname(const std::string& value);
  void set_varname(std::string&& value);
  void set_varname(const char* value);
  void set_varname(const char* value, size_t size);
  std::string* mutable_varname();
  std::string* release_varname();
  void set_allocated_varname(std::string* varname);
  private:
  const std::string& _internal_varname() const;
  void _internal_set_varname(const std::string& value);
  std::string* _internal_mutable_varname();
  public:

  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 trigger = 2;
  bool has_trigger() const;
  private:
  bool _internal_has_trigger() const;
  public:
  void clear_trigger();
  ::PROTOBUF_NAMESPACE_ID::uint32 trigger() const;
  void set_trigger(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_trigger() const;
  void _internal_set_trigger(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 value = 3;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.CardEffectItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr varname_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 trigger_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class CardData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.CardData) */ {
 public:
  CardData();
  virtual ~CardData();

  CardData(const CardData& from);
  CardData(CardData&& from) noexcept
    : CardData() {
    *this = ::std::move(from);
  }

  inline CardData& operator=(const CardData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CardData& operator=(CardData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CardData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CardData* internal_default_instance() {
    return reinterpret_cast<const CardData*>(
               &_CardData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CardData& a, CardData& b) {
    a.Swap(&b);
  }
  inline void Swap(CardData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CardData* New() const final {
    return CreateMaybeMessage<CardData>(nullptr);
  }

  CardData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CardData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CardData& from);
  void MergeFrom(const CardData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CardData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.CardData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBaseEffectFieldNumber = 4,
    kRandEffectFieldNumber = 5,
    kCardtypeFieldNumber = 1,
    kCardstarFieldNumber = 2,
    kCardgroupFieldNumber = 3,
    kDurabilityFieldNumber = 6,
  };
  // repeated .Obj.CardEffectItem base_effect = 4;
  int base_effect_size() const;
  private:
  int _internal_base_effect_size() const;
  public:
  void clear_base_effect();
  ::Obj::CardEffectItem* mutable_base_effect(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::CardEffectItem >*
      mutable_base_effect();
  private:
  const ::Obj::CardEffectItem& _internal_base_effect(int index) const;
  ::Obj::CardEffectItem* _internal_add_base_effect();
  public:
  const ::Obj::CardEffectItem& base_effect(int index) const;
  ::Obj::CardEffectItem* add_base_effect();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::CardEffectItem >&
      base_effect() const;

  // repeated .Obj.CardEffectItem rand_effect = 5;
  int rand_effect_size() const;
  private:
  int _internal_rand_effect_size() const;
  public:
  void clear_rand_effect();
  ::Obj::CardEffectItem* mutable_rand_effect(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::CardEffectItem >*
      mutable_rand_effect();
  private:
  const ::Obj::CardEffectItem& _internal_rand_effect(int index) const;
  ::Obj::CardEffectItem* _internal_add_rand_effect();
  public:
  const ::Obj::CardEffectItem& rand_effect(int index) const;
  ::Obj::CardEffectItem* add_rand_effect();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::CardEffectItem >&
      rand_effect() const;

  // optional uint32 cardtype = 1;
  bool has_cardtype() const;
  private:
  bool _internal_has_cardtype() const;
  public:
  void clear_cardtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 cardtype() const;
  void set_cardtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cardtype() const;
  void _internal_set_cardtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cardstar = 2;
  bool has_cardstar() const;
  private:
  bool _internal_has_cardstar() const;
  public:
  void clear_cardstar();
  ::PROTOBUF_NAMESPACE_ID::uint32 cardstar() const;
  void set_cardstar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cardstar() const;
  void _internal_set_cardstar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cardgroup = 3;
  bool has_cardgroup() const;
  private:
  bool _internal_has_cardgroup() const;
  public:
  void clear_cardgroup();
  ::PROTOBUF_NAMESPACE_ID::uint32 cardgroup() const;
  void set_cardgroup(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cardgroup() const;
  void _internal_set_cardgroup(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 durability = 6;
  bool has_durability() const;
  private:
  bool _internal_has_durability() const;
  public:
  void clear_durability();
  ::PROTOBUF_NAMESPACE_ID::uint32 durability() const;
  void set_durability(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_durability() const;
  void _internal_set_durability(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.CardData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::CardEffectItem > base_effect_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::CardEffectItem > rand_effect_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cardtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cardstar_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cardgroup_;
  ::PROTOBUF_NAMESPACE_ID::uint32 durability_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class t_Object :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.t_Object) */ {
 public:
  t_Object();
  virtual ~t_Object();

  t_Object(const t_Object& from);
  t_Object(t_Object&& from) noexcept
    : t_Object() {
    *this = ::std::move(from);
  }

  inline t_Object& operator=(const t_Object& from) {
    CopyFrom(from);
    return *this;
  }
  inline t_Object& operator=(t_Object&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const t_Object& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const t_Object* internal_default_instance() {
    return reinterpret_cast<const t_Object*>(
               &_t_Object_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(t_Object& a, t_Object& b) {
    a.Swap(&b);
  }
  inline void Swap(t_Object* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline t_Object* New() const final {
    return CreateMaybeMessage<t_Object>(nullptr);
  }

  t_Object* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<t_Object>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const t_Object& from);
  void MergeFrom(const t_Object& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(t_Object* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.t_Object";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEquiprandFieldNumber = 14,
    kThisidFieldNumber = 2,
    kNameFieldNumber = 5,
    kEquippropFieldNumber = 13,
    kCardDataFieldNumber = 16,
    kBaseidFieldNumber = 1,
    kTypeFieldNumber = 3,
    kPacktypeFieldNumber = 4,
    kNumFieldNumber = 6,
    kBindFieldNumber = 7,
    kGridXFieldNumber = 8,
    kGridYFieldNumber = 9,
    kQualityFieldNumber = 10,
    kLevelFieldNumber = 11,
    kTimerFieldNumber = 12,
    kNextusetimeFieldNumber = 15,
    kLockEndTimeFieldNumber = 17,
    kTradetimeFieldNumber = 18,
  };
  // repeated .Obj.EquipRandInfo equiprand = 14;
  int equiprand_size() const;
  private:
  int _internal_equiprand_size() const;
  public:
  void clear_equiprand();
  ::Obj::EquipRandInfo* mutable_equiprand(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::EquipRandInfo >*
      mutable_equiprand();
  private:
  const ::Obj::EquipRandInfo& _internal_equiprand(int index) const;
  ::Obj::EquipRandInfo* _internal_add_equiprand();
  public:
  const ::Obj::EquipRandInfo& equiprand(int index) const;
  ::Obj::EquipRandInfo* add_equiprand();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::EquipRandInfo >&
      equiprand() const;

  // optional string thisid = 2;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional string name = 5;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional .Obj.EquipData equipprop = 13;
  bool has_equipprop() const;
  private:
  bool _internal_has_equipprop() const;
  public:
  void clear_equipprop();
  const ::Obj::EquipData& equipprop() const;
  ::Obj::EquipData* release_equipprop();
  ::Obj::EquipData* mutable_equipprop();
  void set_allocated_equipprop(::Obj::EquipData* equipprop);
  private:
  const ::Obj::EquipData& _internal_equipprop() const;
  ::Obj::EquipData* _internal_mutable_equipprop();
  public:

  // optional .Obj.CardData card_data = 16;
  bool has_card_data() const;
  private:
  bool _internal_has_card_data() const;
  public:
  void clear_card_data();
  const ::Obj::CardData& card_data() const;
  ::Obj::CardData* release_card_data();
  ::Obj::CardData* mutable_card_data();
  void set_allocated_card_data(::Obj::CardData* card_data);
  private:
  const ::Obj::CardData& _internal_card_data() const;
  ::Obj::CardData* _internal_mutable_card_data();
  public:

  // optional uint32 baseid = 1;
  bool has_baseid() const;
  private:
  bool _internal_has_baseid() const;
  public:
  void clear_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid() const;
  void set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseid() const;
  void _internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .Obj.ObjectType type = 3;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::Obj::ObjectType type() const;
  void set_type(::Obj::ObjectType value);
  private:
  ::Obj::ObjectType _internal_type() const;
  void _internal_set_type(::Obj::ObjectType value);
  public:

  // optional .Obj.PackType packtype = 4;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // optional uint32 num = 6;
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bind = 7;
  bool has_bind() const;
  private:
  bool _internal_has_bind() const;
  public:
  void clear_bind();
  ::PROTOBUF_NAMESPACE_ID::uint32 bind() const;
  void set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bind() const;
  void _internal_set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 grid_x = 8;
  bool has_grid_x() const;
  private:
  bool _internal_has_grid_x() const;
  public:
  void clear_grid_x();
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_x() const;
  void set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid_x() const;
  void _internal_set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 grid_y = 9;
  bool has_grid_y() const;
  private:
  bool _internal_has_grid_y() const;
  public:
  void clear_grid_y();
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_y() const;
  void set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid_y() const;
  void _internal_set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quality = 10;
  bool has_quality() const;
  private:
  bool _internal_has_quality() const;
  public:
  void clear_quality();
  ::PROTOBUF_NAMESPACE_ID::uint32 quality() const;
  void set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quality() const;
  void _internal_set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 11;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 timer = 12;
  bool has_timer() const;
  private:
  bool _internal_has_timer() const;
  public:
  void clear_timer();
  ::PROTOBUF_NAMESPACE_ID::uint32 timer() const;
  void set_timer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_timer() const;
  void _internal_set_timer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 nextusetime = 15;
  bool has_nextusetime() const;
  private:
  bool _internal_has_nextusetime() const;
  public:
  void clear_nextusetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 nextusetime() const;
  void set_nextusetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nextusetime() const;
  void _internal_set_nextusetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 lock_end_time = 17;
  bool has_lock_end_time() const;
  private:
  bool _internal_has_lock_end_time() const;
  public:
  void clear_lock_end_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 lock_end_time() const;
  void set_lock_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lock_end_time() const;
  void _internal_set_lock_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tradetime = 18;
  bool has_tradetime() const;
  private:
  bool _internal_has_tradetime() const;
  public:
  void clear_tradetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 tradetime() const;
  void set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tradetime() const;
  void _internal_set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.t_Object)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::EquipRandInfo > equiprand_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::Obj::EquipData* equipprop_;
  ::Obj::CardData* card_data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid_;
  int type_;
  int packtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bind_;
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_x_;
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_y_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quality_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 timer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nextusetime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lock_end_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tradetime_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class PrizeBase :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.PrizeBase) */ {
 public:
  PrizeBase();
  virtual ~PrizeBase();

  PrizeBase(const PrizeBase& from);
  PrizeBase(PrizeBase&& from) noexcept
    : PrizeBase() {
    *this = ::std::move(from);
  }

  inline PrizeBase& operator=(const PrizeBase& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrizeBase& operator=(PrizeBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PrizeBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrizeBase* internal_default_instance() {
    return reinterpret_cast<const PrizeBase*>(
               &_PrizeBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PrizeBase& a, PrizeBase& b) {
    a.Swap(&b);
  }
  inline void Swap(PrizeBase* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PrizeBase* New() const final {
    return CreateMaybeMessage<PrizeBase>(nullptr);
  }

  PrizeBase* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PrizeBase>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PrizeBase& from);
  void MergeFrom(const PrizeBase& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrizeBase* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.PrizeBase";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kQuantityFieldNumber = 2,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quantity = 2;
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity() const;
  void set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quantity() const;
  void _internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.PrizeBase)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class VIPCardInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.VIPCardInfo) */ {
 public:
  VIPCardInfo();
  virtual ~VIPCardInfo();

  VIPCardInfo(const VIPCardInfo& from);
  VIPCardInfo(VIPCardInfo&& from) noexcept
    : VIPCardInfo() {
    *this = ::std::move(from);
  }

  inline VIPCardInfo& operator=(const VIPCardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline VIPCardInfo& operator=(VIPCardInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VIPCardInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VIPCardInfo* internal_default_instance() {
    return reinterpret_cast<const VIPCardInfo*>(
               &_VIPCardInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(VIPCardInfo& a, VIPCardInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(VIPCardInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VIPCardInfo* New() const final {
    return CreateMaybeMessage<VIPCardInfo>(nullptr);
  }

  VIPCardInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VIPCardInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VIPCardInfo& from);
  void MergeFrom(const VIPCardInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VIPCardInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.VIPCardInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArrprizeFieldNumber = 5,
    kRemaintimeFieldNumber = 1,
    kRaffcountFieldNumber = 2,
    kTotalRaffcountFieldNumber = 3,
    kDayprizeStateFieldNumber = 4,
    kObjraffcountFieldNumber = 6,
  };
  // repeated .Obj.PrizeBase arrprize = 5;
  int arrprize_size() const;
  private:
  int _internal_arrprize_size() const;
  public:
  void clear_arrprize();
  ::Obj::PrizeBase* mutable_arrprize(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::PrizeBase >*
      mutable_arrprize();
  private:
  const ::Obj::PrizeBase& _internal_arrprize(int index) const;
  ::Obj::PrizeBase* _internal_add_arrprize();
  public:
  const ::Obj::PrizeBase& arrprize(int index) const;
  ::Obj::PrizeBase* add_arrprize();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::PrizeBase >&
      arrprize() const;

  // optional uint64 remaintime = 1;
  bool has_remaintime() const;
  private:
  bool _internal_has_remaintime() const;
  public:
  void clear_remaintime();
  ::PROTOBUF_NAMESPACE_ID::uint64 remaintime() const;
  void set_remaintime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_remaintime() const;
  void _internal_set_remaintime(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 raffcount = 2;
  bool has_raffcount() const;
  private:
  bool _internal_has_raffcount() const;
  public:
  void clear_raffcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 raffcount() const;
  void set_raffcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_raffcount() const;
  void _internal_set_raffcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 total_raffcount = 3;
  bool has_total_raffcount() const;
  private:
  bool _internal_has_total_raffcount() const;
  public:
  void clear_total_raffcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_raffcount() const;
  void set_total_raffcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_raffcount() const;
  void _internal_set_total_raffcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dayprize_state = 4;
  bool has_dayprize_state() const;
  private:
  bool _internal_has_dayprize_state() const;
  public:
  void clear_dayprize_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 dayprize_state() const;
  void set_dayprize_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dayprize_state() const;
  void _internal_set_dayprize_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 objraffcount = 6;
  bool has_objraffcount() const;
  private:
  bool _internal_has_objraffcount() const;
  public:
  void clear_objraffcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 objraffcount() const;
  void set_objraffcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_objraffcount() const;
  void _internal_set_objraffcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.VIPCardInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::PrizeBase > arrprize_;
  ::PROTOBUF_NAMESPACE_ID::uint64 remaintime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 raffcount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_raffcount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dayprize_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 objraffcount_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_RefreshObjs_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_RefreshObjs_SC) */ {
 public:
  MSG_RefreshObjs_SC();
  virtual ~MSG_RefreshObjs_SC();

  MSG_RefreshObjs_SC(const MSG_RefreshObjs_SC& from);
  MSG_RefreshObjs_SC(MSG_RefreshObjs_SC&& from) noexcept
    : MSG_RefreshObjs_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RefreshObjs_SC& operator=(const MSG_RefreshObjs_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RefreshObjs_SC& operator=(MSG_RefreshObjs_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RefreshObjs_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RefreshObjs_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RefreshObjs_SC*>(
               &_MSG_RefreshObjs_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_RefreshObjs_SC& a, MSG_RefreshObjs_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RefreshObjs_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RefreshObjs_SC* New() const final {
    return CreateMaybeMessage<MSG_RefreshObjs_SC>(nullptr);
  }

  MSG_RefreshObjs_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RefreshObjs_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RefreshObjs_SC& from);
  void MergeFrom(const MSG_RefreshObjs_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RefreshObjs_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_RefreshObjs_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjsFieldNumber = 1,
    kShowAddnewAnimFieldNumber = 2,
  };
  // repeated .Obj.t_Object objs = 1;
  int objs_size() const;
  private:
  int _internal_objs_size() const;
  public:
  void clear_objs();
  ::Obj::t_Object* mutable_objs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >*
      mutable_objs();
  private:
  const ::Obj::t_Object& _internal_objs(int index) const;
  ::Obj::t_Object* _internal_add_objs();
  public:
  const ::Obj::t_Object& objs(int index) const;
  ::Obj::t_Object* add_objs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >&
      objs() const;

  // optional bool show_addnew_anim = 2 [default = true];
  bool has_show_addnew_anim() const;
  private:
  bool _internal_has_show_addnew_anim() const;
  public:
  void clear_show_addnew_anim();
  bool show_addnew_anim() const;
  void set_show_addnew_anim(bool value);
  private:
  bool _internal_show_addnew_anim() const;
  void _internal_set_show_addnew_anim(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_RefreshObjs_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object > objs_;
  bool show_addnew_anim_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_PackData_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_PackData_SC) */ {
 public:
  MSG_PackData_SC();
  virtual ~MSG_PackData_SC();

  MSG_PackData_SC(const MSG_PackData_SC& from);
  MSG_PackData_SC(MSG_PackData_SC&& from) noexcept
    : MSG_PackData_SC() {
    *this = ::std::move(from);
  }

  inline MSG_PackData_SC& operator=(const MSG_PackData_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_PackData_SC& operator=(MSG_PackData_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_PackData_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_PackData_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_PackData_SC*>(
               &_MSG_PackData_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_PackData_SC& a, MSG_PackData_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_PackData_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_PackData_SC* New() const final {
    return CreateMaybeMessage<MSG_PackData_SC>(nullptr);
  }

  MSG_PackData_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_PackData_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_PackData_SC& from);
  void MergeFrom(const MSG_PackData_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_PackData_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_PackData_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 5,
    kPacktypeFieldNumber = 1,
    kWidthFieldNumber = 2,
    kHeightFieldNumber = 3,
    kValidsizeFieldNumber = 4,
    kUnlockcountFieldNumber = 6,
  };
  // optional .Obj.MSG_RefreshObjs_SC objects = 5;
  bool has_objects() const;
  private:
  bool _internal_has_objects() const;
  public:
  void clear_objects();
  const ::Obj::MSG_RefreshObjs_SC& objects() const;
  ::Obj::MSG_RefreshObjs_SC* release_objects();
  ::Obj::MSG_RefreshObjs_SC* mutable_objects();
  void set_allocated_objects(::Obj::MSG_RefreshObjs_SC* objects);
  private:
  const ::Obj::MSG_RefreshObjs_SC& _internal_objects() const;
  ::Obj::MSG_RefreshObjs_SC* _internal_mutable_objects();
  public:

  // required .Obj.PackType packtype = 1;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // optional uint32 width = 2;
  bool has_width() const;
  private:
  bool _internal_has_width() const;
  public:
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::uint32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 height = 3;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 validsize = 4;
  bool has_validsize() const;
  private:
  bool _internal_has_validsize() const;
  public:
  void clear_validsize();
  ::PROTOBUF_NAMESPACE_ID::uint32 validsize() const;
  void set_validsize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_validsize() const;
  void _internal_set_validsize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 unlockcount = 6;
  bool has_unlockcount() const;
  private:
  bool _internal_has_unlockcount() const;
  public:
  void clear_unlockcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 unlockcount() const;
  void set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unlockcount() const;
  void _internal_set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_PackData_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::Obj::MSG_RefreshObjs_SC* objects_;
  int packtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 width_;
  ::PROTOBUF_NAMESPACE_ID::uint32 height_;
  ::PROTOBUF_NAMESPACE_ID::uint32 validsize_;
  ::PROTOBUF_NAMESPACE_ID::uint32 unlockcount_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_WearEquip_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_WearEquip_CS) */ {
 public:
  MSG_WearEquip_CS();
  virtual ~MSG_WearEquip_CS();

  MSG_WearEquip_CS(const MSG_WearEquip_CS& from);
  MSG_WearEquip_CS(MSG_WearEquip_CS&& from) noexcept
    : MSG_WearEquip_CS() {
    *this = ::std::move(from);
  }

  inline MSG_WearEquip_CS& operator=(const MSG_WearEquip_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_WearEquip_CS& operator=(MSG_WearEquip_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_WearEquip_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_WearEquip_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_WearEquip_CS*>(
               &_MSG_WearEquip_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_WearEquip_CS& a, MSG_WearEquip_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_WearEquip_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_WearEquip_CS* New() const final {
    return CreateMaybeMessage<MSG_WearEquip_CS>(nullptr);
  }

  MSG_WearEquip_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_WearEquip_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_WearEquip_CS& from);
  void MergeFrom(const MSG_WearEquip_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_WearEquip_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_WearEquip_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_WearEquip_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_WearEquip_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_WearEquip_SC) */ {
 public:
  MSG_WearEquip_SC();
  virtual ~MSG_WearEquip_SC();

  MSG_WearEquip_SC(const MSG_WearEquip_SC& from);
  MSG_WearEquip_SC(MSG_WearEquip_SC&& from) noexcept
    : MSG_WearEquip_SC() {
    *this = ::std::move(from);
  }

  inline MSG_WearEquip_SC& operator=(const MSG_WearEquip_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_WearEquip_SC& operator=(MSG_WearEquip_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_WearEquip_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_WearEquip_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_WearEquip_SC*>(
               &_MSG_WearEquip_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MSG_WearEquip_SC& a, MSG_WearEquip_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_WearEquip_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_WearEquip_SC* New() const final {
    return CreateMaybeMessage<MSG_WearEquip_SC>(nullptr);
  }

  MSG_WearEquip_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_WearEquip_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_WearEquip_SC& from);
  void MergeFrom(const MSG_WearEquip_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_WearEquip_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_WearEquip_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_WearEquip_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_RemoveObject_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_RemoveObject_SC) */ {
 public:
  MSG_RemoveObject_SC();
  virtual ~MSG_RemoveObject_SC();

  MSG_RemoveObject_SC(const MSG_RemoveObject_SC& from);
  MSG_RemoveObject_SC(MSG_RemoveObject_SC&& from) noexcept
    : MSG_RemoveObject_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RemoveObject_SC& operator=(const MSG_RemoveObject_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RemoveObject_SC& operator=(MSG_RemoveObject_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RemoveObject_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RemoveObject_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RemoveObject_SC*>(
               &_MSG_RemoveObject_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_RemoveObject_SC& a, MSG_RemoveObject_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RemoveObject_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RemoveObject_SC* New() const final {
    return CreateMaybeMessage<MSG_RemoveObject_SC>(nullptr);
  }

  MSG_RemoveObject_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RemoveObject_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RemoveObject_SC& from);
  void MergeFrom(const MSG_RemoveObject_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RemoveObject_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_RemoveObject_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdsFieldNumber = 1,
  };
  // repeated string ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;
  public:
  void clear_ids();
  const std::string& ids(int index) const;
  std::string* mutable_ids(int index);
  void set_ids(int index, const std::string& value);
  void set_ids(int index, std::string&& value);
  void set_ids(int index, const char* value);
  void set_ids(int index, const char* value, size_t size);
  std::string* add_ids();
  void add_ids(const std::string& value);
  void add_ids(std::string&& value);
  void add_ids(const char* value);
  void add_ids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_ids();
  private:
  const std::string& _internal_ids(int index) const;
  std::string* _internal_add_ids();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_RemoveObject_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> ids_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_UnwearEquip_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_UnwearEquip_CS) */ {
 public:
  MSG_UnwearEquip_CS();
  virtual ~MSG_UnwearEquip_CS();

  MSG_UnwearEquip_CS(const MSG_UnwearEquip_CS& from);
  MSG_UnwearEquip_CS(MSG_UnwearEquip_CS&& from) noexcept
    : MSG_UnwearEquip_CS() {
    *this = ::std::move(from);
  }

  inline MSG_UnwearEquip_CS& operator=(const MSG_UnwearEquip_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_UnwearEquip_CS& operator=(MSG_UnwearEquip_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_UnwearEquip_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_UnwearEquip_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_UnwearEquip_CS*>(
               &_MSG_UnwearEquip_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_UnwearEquip_CS& a, MSG_UnwearEquip_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_UnwearEquip_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_UnwearEquip_CS* New() const final {
    return CreateMaybeMessage<MSG_UnwearEquip_CS>(nullptr);
  }

  MSG_UnwearEquip_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_UnwearEquip_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_UnwearEquip_CS& from);
  void MergeFrom(const MSG_UnwearEquip_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_UnwearEquip_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_UnwearEquip_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_UnwearEquip_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_UnwearEquip_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_UnwearEquip_SC) */ {
 public:
  MSG_UnwearEquip_SC();
  virtual ~MSG_UnwearEquip_SC();

  MSG_UnwearEquip_SC(const MSG_UnwearEquip_SC& from);
  MSG_UnwearEquip_SC(MSG_UnwearEquip_SC&& from) noexcept
    : MSG_UnwearEquip_SC() {
    *this = ::std::move(from);
  }

  inline MSG_UnwearEquip_SC& operator=(const MSG_UnwearEquip_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_UnwearEquip_SC& operator=(MSG_UnwearEquip_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_UnwearEquip_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_UnwearEquip_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_UnwearEquip_SC*>(
               &_MSG_UnwearEquip_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_UnwearEquip_SC& a, MSG_UnwearEquip_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_UnwearEquip_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_UnwearEquip_SC* New() const final {
    return CreateMaybeMessage<MSG_UnwearEquip_SC>(nullptr);
  }

  MSG_UnwearEquip_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_UnwearEquip_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_UnwearEquip_SC& from);
  void MergeFrom(const MSG_UnwearEquip_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_UnwearEquip_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_UnwearEquip_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_UnwearEquip_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqCheckItemDueTime_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqCheckItemDueTime_CS) */ {
 public:
  MSG_ReqCheckItemDueTime_CS();
  virtual ~MSG_ReqCheckItemDueTime_CS();

  MSG_ReqCheckItemDueTime_CS(const MSG_ReqCheckItemDueTime_CS& from);
  MSG_ReqCheckItemDueTime_CS(MSG_ReqCheckItemDueTime_CS&& from) noexcept
    : MSG_ReqCheckItemDueTime_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqCheckItemDueTime_CS& operator=(const MSG_ReqCheckItemDueTime_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqCheckItemDueTime_CS& operator=(MSG_ReqCheckItemDueTime_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqCheckItemDueTime_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqCheckItemDueTime_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqCheckItemDueTime_CS*>(
               &_MSG_ReqCheckItemDueTime_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MSG_ReqCheckItemDueTime_CS& a, MSG_ReqCheckItemDueTime_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqCheckItemDueTime_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqCheckItemDueTime_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqCheckItemDueTime_CS>(nullptr);
  }

  MSG_ReqCheckItemDueTime_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqCheckItemDueTime_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqCheckItemDueTime_CS& from);
  void MergeFrom(const MSG_ReqCheckItemDueTime_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqCheckItemDueTime_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqCheckItemDueTime_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqCheckItemDueTime_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqUseObject_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqUseObject_CS) */ {
 public:
  MSG_ReqUseObject_CS();
  virtual ~MSG_ReqUseObject_CS();

  MSG_ReqUseObject_CS(const MSG_ReqUseObject_CS& from);
  MSG_ReqUseObject_CS(MSG_ReqUseObject_CS&& from) noexcept
    : MSG_ReqUseObject_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqUseObject_CS& operator=(const MSG_ReqUseObject_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqUseObject_CS& operator=(MSG_ReqUseObject_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqUseObject_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqUseObject_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqUseObject_CS*>(
               &_MSG_ReqUseObject_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MSG_ReqUseObject_CS& a, MSG_ReqUseObject_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqUseObject_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqUseObject_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqUseObject_CS>(nullptr);
  }

  MSG_ReqUseObject_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqUseObject_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqUseObject_CS& from);
  void MergeFrom(const MSG_ReqUseObject_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqUseObject_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqUseObject_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kNumFieldNumber = 2,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional uint32 num = 2 [default = 1];
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqUseObject_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqUseObject_Special_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqUseObject_Special_CS) */ {
 public:
  MSG_ReqUseObject_Special_CS();
  virtual ~MSG_ReqUseObject_Special_CS();

  MSG_ReqUseObject_Special_CS(const MSG_ReqUseObject_Special_CS& from);
  MSG_ReqUseObject_Special_CS(MSG_ReqUseObject_Special_CS&& from) noexcept
    : MSG_ReqUseObject_Special_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqUseObject_Special_CS& operator=(const MSG_ReqUseObject_Special_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqUseObject_Special_CS& operator=(MSG_ReqUseObject_Special_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqUseObject_Special_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqUseObject_Special_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqUseObject_Special_CS*>(
               &_MSG_ReqUseObject_Special_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MSG_ReqUseObject_Special_CS& a, MSG_ReqUseObject_Special_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqUseObject_Special_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqUseObject_Special_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqUseObject_Special_CS>(nullptr);
  }

  MSG_ReqUseObject_Special_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqUseObject_Special_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqUseObject_Special_CS& from);
  void MergeFrom(const MSG_ReqUseObject_Special_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqUseObject_Special_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqUseObject_Special_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kNpcidFieldNumber = 3,
    kPosxFieldNumber = 4,
    kPosyFieldNumber = 5,
    kNumFieldNumber = 2,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional uint64 npcid = 3;
  bool has_npcid() const;
  private:
  bool _internal_has_npcid() const;
  public:
  void clear_npcid();
  ::PROTOBUF_NAMESPACE_ID::uint64 npcid() const;
  void set_npcid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_npcid() const;
  void _internal_set_npcid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional float posx = 4;
  bool has_posx() const;
  private:
  bool _internal_has_posx() const;
  public:
  void clear_posx();
  float posx() const;
  void set_posx(float value);
  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);
  public:

  // optional float posy = 5;
  bool has_posy() const;
  private:
  bool _internal_has_posy() const;
  public:
  void clear_posy();
  float posy() const;
  void set_posy(float value);
  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);
  public:

  // optional uint32 num = 2 [default = 1];
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqUseObject_Special_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 npcid_;
  float posx_;
  float posy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_PackUnlock_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_PackUnlock_CS) */ {
 public:
  MSG_PackUnlock_CS();
  virtual ~MSG_PackUnlock_CS();

  MSG_PackUnlock_CS(const MSG_PackUnlock_CS& from);
  MSG_PackUnlock_CS(MSG_PackUnlock_CS&& from) noexcept
    : MSG_PackUnlock_CS() {
    *this = ::std::move(from);
  }

  inline MSG_PackUnlock_CS& operator=(const MSG_PackUnlock_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_PackUnlock_CS& operator=(MSG_PackUnlock_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_PackUnlock_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_PackUnlock_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_PackUnlock_CS*>(
               &_MSG_PackUnlock_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MSG_PackUnlock_CS& a, MSG_PackUnlock_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_PackUnlock_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_PackUnlock_CS* New() const final {
    return CreateMaybeMessage<MSG_PackUnlock_CS>(nullptr);
  }

  MSG_PackUnlock_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_PackUnlock_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_PackUnlock_CS& from);
  void MergeFrom(const MSG_PackUnlock_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_PackUnlock_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_PackUnlock_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPacktypeFieldNumber = 1,
  };
  // required .Obj.PackType packtype = 1;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_PackUnlock_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int packtype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_PackUnlock_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_PackUnlock_SC) */ {
 public:
  MSG_PackUnlock_SC();
  virtual ~MSG_PackUnlock_SC();

  MSG_PackUnlock_SC(const MSG_PackUnlock_SC& from);
  MSG_PackUnlock_SC(MSG_PackUnlock_SC&& from) noexcept
    : MSG_PackUnlock_SC() {
    *this = ::std::move(from);
  }

  inline MSG_PackUnlock_SC& operator=(const MSG_PackUnlock_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_PackUnlock_SC& operator=(MSG_PackUnlock_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_PackUnlock_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_PackUnlock_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_PackUnlock_SC*>(
               &_MSG_PackUnlock_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MSG_PackUnlock_SC& a, MSG_PackUnlock_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_PackUnlock_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_PackUnlock_SC* New() const final {
    return CreateMaybeMessage<MSG_PackUnlock_SC>(nullptr);
  }

  MSG_PackUnlock_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_PackUnlock_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_PackUnlock_SC& from);
  void MergeFrom(const MSG_PackUnlock_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_PackUnlock_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_PackUnlock_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPacktypeFieldNumber = 1,
    kUnlockcountFieldNumber = 2,
    kMaxsizeFieldNumber = 3,
    kResultFieldNumber = 4,
  };
  // required .Obj.PackType packtype = 1;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // optional uint32 unlockcount = 2;
  bool has_unlockcount() const;
  private:
  bool _internal_has_unlockcount() const;
  public:
  void clear_unlockcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 unlockcount() const;
  void set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unlockcount() const;
  void _internal_set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxsize = 3;
  bool has_maxsize() const;
  private:
  bool _internal_has_maxsize() const;
  public:
  void clear_maxsize();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxsize() const;
  void set_maxsize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxsize() const;
  void _internal_set_maxsize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool result = 4;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_PackUnlock_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int packtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 unlockcount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxsize_;
  bool result_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_MergeObjs_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_MergeObjs_CS) */ {
 public:
  MSG_MergeObjs_CS();
  virtual ~MSG_MergeObjs_CS();

  MSG_MergeObjs_CS(const MSG_MergeObjs_CS& from);
  MSG_MergeObjs_CS(MSG_MergeObjs_CS&& from) noexcept
    : MSG_MergeObjs_CS() {
    *this = ::std::move(from);
  }

  inline MSG_MergeObjs_CS& operator=(const MSG_MergeObjs_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_MergeObjs_CS& operator=(MSG_MergeObjs_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_MergeObjs_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_MergeObjs_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_MergeObjs_CS*>(
               &_MSG_MergeObjs_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MSG_MergeObjs_CS& a, MSG_MergeObjs_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_MergeObjs_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_MergeObjs_CS* New() const final {
    return CreateMaybeMessage<MSG_MergeObjs_CS>(nullptr);
  }

  MSG_MergeObjs_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_MergeObjs_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_MergeObjs_CS& from);
  void MergeFrom(const MSG_MergeObjs_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_MergeObjs_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_MergeObjs_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcthisidsFieldNumber = 2,
    kDstthisidsFieldNumber = 3,
    kPacktypeFieldNumber = 1,
    kDstPacktypeFieldNumber = 4,
  };
  // repeated string srcthisids = 2;
  int srcthisids_size() const;
  private:
  int _internal_srcthisids_size() const;
  public:
  void clear_srcthisids();
  const std::string& srcthisids(int index) const;
  std::string* mutable_srcthisids(int index);
  void set_srcthisids(int index, const std::string& value);
  void set_srcthisids(int index, std::string&& value);
  void set_srcthisids(int index, const char* value);
  void set_srcthisids(int index, const char* value, size_t size);
  std::string* add_srcthisids();
  void add_srcthisids(const std::string& value);
  void add_srcthisids(std::string&& value);
  void add_srcthisids(const char* value);
  void add_srcthisids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& srcthisids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_srcthisids();
  private:
  const std::string& _internal_srcthisids(int index) const;
  std::string* _internal_add_srcthisids();
  public:

  // repeated string dstthisids = 3;
  int dstthisids_size() const;
  private:
  int _internal_dstthisids_size() const;
  public:
  void clear_dstthisids();
  const std::string& dstthisids(int index) const;
  std::string* mutable_dstthisids(int index);
  void set_dstthisids(int index, const std::string& value);
  void set_dstthisids(int index, std::string&& value);
  void set_dstthisids(int index, const char* value);
  void set_dstthisids(int index, const char* value, size_t size);
  std::string* add_dstthisids();
  void add_dstthisids(const std::string& value);
  void add_dstthisids(std::string&& value);
  void add_dstthisids(const char* value);
  void add_dstthisids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& dstthisids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_dstthisids();
  private:
  const std::string& _internal_dstthisids(int index) const;
  std::string* _internal_add_dstthisids();
  public:

  // required .Obj.PackType packtype = 1;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // optional .Obj.PackType dst_packtype = 4;
  bool has_dst_packtype() const;
  private:
  bool _internal_has_dst_packtype() const;
  public:
  void clear_dst_packtype();
  ::Obj::PackType dst_packtype() const;
  void set_dst_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_dst_packtype() const;
  void _internal_set_dst_packtype(::Obj::PackType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_MergeObjs_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> srcthisids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> dstthisids_;
  int packtype_;
  int dst_packtype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_MergeObjs_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_MergeObjs_SC) */ {
 public:
  MSG_MergeObjs_SC();
  virtual ~MSG_MergeObjs_SC();

  MSG_MergeObjs_SC(const MSG_MergeObjs_SC& from);
  MSG_MergeObjs_SC(MSG_MergeObjs_SC&& from) noexcept
    : MSG_MergeObjs_SC() {
    *this = ::std::move(from);
  }

  inline MSG_MergeObjs_SC& operator=(const MSG_MergeObjs_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_MergeObjs_SC& operator=(MSG_MergeObjs_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_MergeObjs_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_MergeObjs_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_MergeObjs_SC*>(
               &_MSG_MergeObjs_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MSG_MergeObjs_SC& a, MSG_MergeObjs_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_MergeObjs_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_MergeObjs_SC* New() const final {
    return CreateMaybeMessage<MSG_MergeObjs_SC>(nullptr);
  }

  MSG_MergeObjs_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_MergeObjs_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_MergeObjs_SC& from);
  void MergeFrom(const MSG_MergeObjs_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_MergeObjs_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_MergeObjs_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPacktypeFieldNumber = 1,
    kResultFieldNumber = 2,
    kDstPacktypeFieldNumber = 3,
  };
  // required .Obj.PackType packtype = 1;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // optional bool result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // optional .Obj.PackType dst_packtype = 3;
  bool has_dst_packtype() const;
  private:
  bool _internal_has_dst_packtype() const;
  public:
  void clear_dst_packtype();
  ::Obj::PackType dst_packtype() const;
  void set_dst_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_dst_packtype() const;
  void _internal_set_dst_packtype(::Obj::PackType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_MergeObjs_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int packtype_;
  bool result_;
  int dst_packtype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class t_TidyPackInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.t_TidyPackInfo) */ {
 public:
  t_TidyPackInfo();
  virtual ~t_TidyPackInfo();

  t_TidyPackInfo(const t_TidyPackInfo& from);
  t_TidyPackInfo(t_TidyPackInfo&& from) noexcept
    : t_TidyPackInfo() {
    *this = ::std::move(from);
  }

  inline t_TidyPackInfo& operator=(const t_TidyPackInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline t_TidyPackInfo& operator=(t_TidyPackInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const t_TidyPackInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const t_TidyPackInfo* internal_default_instance() {
    return reinterpret_cast<const t_TidyPackInfo*>(
               &_t_TidyPackInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(t_TidyPackInfo& a, t_TidyPackInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(t_TidyPackInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline t_TidyPackInfo* New() const final {
    return CreateMaybeMessage<t_TidyPackInfo>(nullptr);
  }

  t_TidyPackInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<t_TidyPackInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const t_TidyPackInfo& from);
  void MergeFrom(const t_TidyPackInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(t_TidyPackInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.t_TidyPackInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kGridXFieldNumber = 2,
    kGridYFieldNumber = 3,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional uint32 grid_x = 2;
  bool has_grid_x() const;
  private:
  bool _internal_has_grid_x() const;
  public:
  void clear_grid_x();
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_x() const;
  void set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid_x() const;
  void _internal_set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 grid_y = 3;
  bool has_grid_y() const;
  private:
  bool _internal_has_grid_y() const;
  public:
  void clear_grid_y();
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_y() const;
  void set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid_y() const;
  void _internal_set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.t_TidyPackInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_x_;
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_y_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_TidyPack_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_TidyPack_CS) */ {
 public:
  MSG_TidyPack_CS();
  virtual ~MSG_TidyPack_CS();

  MSG_TidyPack_CS(const MSG_TidyPack_CS& from);
  MSG_TidyPack_CS(MSG_TidyPack_CS&& from) noexcept
    : MSG_TidyPack_CS() {
    *this = ::std::move(from);
  }

  inline MSG_TidyPack_CS& operator=(const MSG_TidyPack_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_TidyPack_CS& operator=(MSG_TidyPack_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_TidyPack_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_TidyPack_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_TidyPack_CS*>(
               &_MSG_TidyPack_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(MSG_TidyPack_CS& a, MSG_TidyPack_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_TidyPack_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_TidyPack_CS* New() const final {
    return CreateMaybeMessage<MSG_TidyPack_CS>(nullptr);
  }

  MSG_TidyPack_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_TidyPack_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_TidyPack_CS& from);
  void MergeFrom(const MSG_TidyPack_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_TidyPack_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_TidyPack_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfosFieldNumber = 2,
    kPacktypeFieldNumber = 1,
  };
  // repeated .Obj.t_TidyPackInfo infos = 2;
  int infos_size() const;
  private:
  int _internal_infos_size() const;
  public:
  void clear_infos();
  ::Obj::t_TidyPackInfo* mutable_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_TidyPackInfo >*
      mutable_infos();
  private:
  const ::Obj::t_TidyPackInfo& _internal_infos(int index) const;
  ::Obj::t_TidyPackInfo* _internal_add_infos();
  public:
  const ::Obj::t_TidyPackInfo& infos(int index) const;
  ::Obj::t_TidyPackInfo* add_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_TidyPackInfo >&
      infos() const;

  // required .Obj.PackType packtype = 1;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_TidyPack_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_TidyPackInfo > infos_;
  int packtype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_TidyPack_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_TidyPack_SC) */ {
 public:
  MSG_TidyPack_SC();
  virtual ~MSG_TidyPack_SC();

  MSG_TidyPack_SC(const MSG_TidyPack_SC& from);
  MSG_TidyPack_SC(MSG_TidyPack_SC&& from) noexcept
    : MSG_TidyPack_SC() {
    *this = ::std::move(from);
  }

  inline MSG_TidyPack_SC& operator=(const MSG_TidyPack_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_TidyPack_SC& operator=(MSG_TidyPack_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_TidyPack_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_TidyPack_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_TidyPack_SC*>(
               &_MSG_TidyPack_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(MSG_TidyPack_SC& a, MSG_TidyPack_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_TidyPack_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_TidyPack_SC* New() const final {
    return CreateMaybeMessage<MSG_TidyPack_SC>(nullptr);
  }

  MSG_TidyPack_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_TidyPack_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_TidyPack_SC& from);
  void MergeFrom(const MSG_TidyPack_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_TidyPack_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_TidyPack_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPacktypeFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // required .Obj.PackType packtype = 1;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // optional bool result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_TidyPack_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int packtype_;
  bool result_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSellObject_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqSellObject_CS) */ {
 public:
  MSG_ReqSellObject_CS();
  virtual ~MSG_ReqSellObject_CS();

  MSG_ReqSellObject_CS(const MSG_ReqSellObject_CS& from);
  MSG_ReqSellObject_CS(MSG_ReqSellObject_CS&& from) noexcept
    : MSG_ReqSellObject_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSellObject_CS& operator=(const MSG_ReqSellObject_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSellObject_CS& operator=(MSG_ReqSellObject_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSellObject_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSellObject_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSellObject_CS*>(
               &_MSG_ReqSellObject_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(MSG_ReqSellObject_CS& a, MSG_ReqSellObject_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSellObject_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSellObject_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSellObject_CS>(nullptr);
  }

  MSG_ReqSellObject_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSellObject_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSellObject_CS& from);
  void MergeFrom(const MSG_ReqSellObject_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSellObject_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqSellObject_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kPasswdFieldNumber = 3,
    kNumFieldNumber = 2,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional string passwd = 3;
  bool has_passwd() const;
  private:
  bool _internal_has_passwd() const;
  public:
  void clear_passwd();
  const std::string& passwd() const;
  void set_passwd(const std::string& value);
  void set_passwd(std::string&& value);
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  std::string* mutable_passwd();
  std::string* release_passwd();
  void set_allocated_passwd(std::string* passwd);
  private:
  const std::string& _internal_passwd() const;
  void _internal_set_passwd(const std::string& value);
  std::string* _internal_mutable_passwd();
  public:

  // optional uint32 num = 2 [default = 1];
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqSellObject_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr passwd_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqMoveObject_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqMoveObject_CS) */ {
 public:
  MSG_ReqMoveObject_CS();
  virtual ~MSG_ReqMoveObject_CS();

  MSG_ReqMoveObject_CS(const MSG_ReqMoveObject_CS& from);
  MSG_ReqMoveObject_CS(MSG_ReqMoveObject_CS&& from) noexcept
    : MSG_ReqMoveObject_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqMoveObject_CS& operator=(const MSG_ReqMoveObject_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqMoveObject_CS& operator=(MSG_ReqMoveObject_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqMoveObject_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqMoveObject_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqMoveObject_CS*>(
               &_MSG_ReqMoveObject_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(MSG_ReqMoveObject_CS& a, MSG_ReqMoveObject_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqMoveObject_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqMoveObject_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqMoveObject_CS>(nullptr);
  }

  MSG_ReqMoveObject_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqMoveObject_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqMoveObject_CS& from);
  void MergeFrom(const MSG_ReqMoveObject_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqMoveObject_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqMoveObject_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kGridXFieldNumber = 2,
    kGridYFieldNumber = 3,
    kPacktypeFieldNumber = 4,
    kDstPacktypeFieldNumber = 5,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional uint32 grid_x = 2;
  bool has_grid_x() const;
  private:
  bool _internal_has_grid_x() const;
  public:
  void clear_grid_x();
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_x() const;
  void set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid_x() const;
  void _internal_set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 grid_y = 3;
  bool has_grid_y() const;
  private:
  bool _internal_has_grid_y() const;
  public:
  void clear_grid_y();
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_y() const;
  void set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid_y() const;
  void _internal_set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .Obj.PackType packtype = 4;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // optional .Obj.PackType dst_packtype = 5;
  bool has_dst_packtype() const;
  private:
  bool _internal_has_dst_packtype() const;
  public:
  void clear_dst_packtype();
  ::Obj::PackType dst_packtype() const;
  void set_dst_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_dst_packtype() const;
  void _internal_set_dst_packtype(::Obj::PackType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqMoveObject_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_x_;
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_y_;
  int packtype_;
  int dst_packtype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSwapObject_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqSwapObject_CS) */ {
 public:
  MSG_ReqSwapObject_CS();
  virtual ~MSG_ReqSwapObject_CS();

  MSG_ReqSwapObject_CS(const MSG_ReqSwapObject_CS& from);
  MSG_ReqSwapObject_CS(MSG_ReqSwapObject_CS&& from) noexcept
    : MSG_ReqSwapObject_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSwapObject_CS& operator=(const MSG_ReqSwapObject_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSwapObject_CS& operator=(MSG_ReqSwapObject_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSwapObject_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSwapObject_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSwapObject_CS*>(
               &_MSG_ReqSwapObject_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(MSG_ReqSwapObject_CS& a, MSG_ReqSwapObject_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSwapObject_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSwapObject_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSwapObject_CS>(nullptr);
  }

  MSG_ReqSwapObject_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSwapObject_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSwapObject_CS& from);
  void MergeFrom(const MSG_ReqSwapObject_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSwapObject_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqSwapObject_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcThisidFieldNumber = 1,
    kDstThisidFieldNumber = 2,
    kDstPacktypeFieldNumber = 3,
    kPacktypeFieldNumber = 4,
  };
  // optional string src_thisid = 1;
  bool has_src_thisid() const;
  private:
  bool _internal_has_src_thisid() const;
  public:
  void clear_src_thisid();
  const std::string& src_thisid() const;
  void set_src_thisid(const std::string& value);
  void set_src_thisid(std::string&& value);
  void set_src_thisid(const char* value);
  void set_src_thisid(const char* value, size_t size);
  std::string* mutable_src_thisid();
  std::string* release_src_thisid();
  void set_allocated_src_thisid(std::string* src_thisid);
  private:
  const std::string& _internal_src_thisid() const;
  void _internal_set_src_thisid(const std::string& value);
  std::string* _internal_mutable_src_thisid();
  public:

  // optional string dst_thisid = 2;
  bool has_dst_thisid() const;
  private:
  bool _internal_has_dst_thisid() const;
  public:
  void clear_dst_thisid();
  const std::string& dst_thisid() const;
  void set_dst_thisid(const std::string& value);
  void set_dst_thisid(std::string&& value);
  void set_dst_thisid(const char* value);
  void set_dst_thisid(const char* value, size_t size);
  std::string* mutable_dst_thisid();
  std::string* release_dst_thisid();
  void set_allocated_dst_thisid(std::string* dst_thisid);
  private:
  const std::string& _internal_dst_thisid() const;
  void _internal_set_dst_thisid(const std::string& value);
  std::string* _internal_mutable_dst_thisid();
  public:

  // optional .Obj.PackType dst_packtype = 3;
  bool has_dst_packtype() const;
  private:
  bool _internal_has_dst_packtype() const;
  public:
  void clear_dst_packtype();
  ::Obj::PackType dst_packtype() const;
  void set_dst_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_dst_packtype() const;
  void _internal_set_dst_packtype(::Obj::PackType value);
  public:

  // required .Obj.PackType packtype = 4;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqSwapObject_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr src_thisid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dst_thisid_;
  int dst_packtype_;
  int packtype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqDestroyObject_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqDestroyObject_CS) */ {
 public:
  MSG_ReqDestroyObject_CS();
  virtual ~MSG_ReqDestroyObject_CS();

  MSG_ReqDestroyObject_CS(const MSG_ReqDestroyObject_CS& from);
  MSG_ReqDestroyObject_CS(MSG_ReqDestroyObject_CS&& from) noexcept
    : MSG_ReqDestroyObject_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqDestroyObject_CS& operator=(const MSG_ReqDestroyObject_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqDestroyObject_CS& operator=(MSG_ReqDestroyObject_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqDestroyObject_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqDestroyObject_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqDestroyObject_CS*>(
               &_MSG_ReqDestroyObject_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(MSG_ReqDestroyObject_CS& a, MSG_ReqDestroyObject_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqDestroyObject_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqDestroyObject_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqDestroyObject_CS>(nullptr);
  }

  MSG_ReqDestroyObject_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqDestroyObject_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqDestroyObject_CS& from);
  void MergeFrom(const MSG_ReqDestroyObject_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqDestroyObject_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqDestroyObject_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kPasswdFieldNumber = 3,
    kPacktypeFieldNumber = 2,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional string passwd = 3;
  bool has_passwd() const;
  private:
  bool _internal_has_passwd() const;
  public:
  void clear_passwd();
  const std::string& passwd() const;
  void set_passwd(const std::string& value);
  void set_passwd(std::string&& value);
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  std::string* mutable_passwd();
  std::string* release_passwd();
  void set_allocated_passwd(std::string* passwd);
  private:
  const std::string& _internal_passwd() const;
  void _internal_set_passwd(const std::string& value);
  std::string* _internal_mutable_passwd();
  public:

  // required .Obj.PackType packtype = 2;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqDestroyObject_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr passwd_;
  int packtype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqPutOnCard_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqPutOnCard_CS) */ {
 public:
  MSG_ReqPutOnCard_CS();
  virtual ~MSG_ReqPutOnCard_CS();

  MSG_ReqPutOnCard_CS(const MSG_ReqPutOnCard_CS& from);
  MSG_ReqPutOnCard_CS(MSG_ReqPutOnCard_CS&& from) noexcept
    : MSG_ReqPutOnCard_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqPutOnCard_CS& operator=(const MSG_ReqPutOnCard_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqPutOnCard_CS& operator=(MSG_ReqPutOnCard_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqPutOnCard_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqPutOnCard_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqPutOnCard_CS*>(
               &_MSG_ReqPutOnCard_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(MSG_ReqPutOnCard_CS& a, MSG_ReqPutOnCard_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqPutOnCard_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqPutOnCard_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqPutOnCard_CS>(nullptr);
  }

  MSG_ReqPutOnCard_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqPutOnCard_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqPutOnCard_CS& from);
  void MergeFrom(const MSG_ReqPutOnCard_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqPutOnCard_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqPutOnCard_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kGridXFieldNumber = 2,
    kGridYFieldNumber = 3,
    kPacktypeFieldNumber = 4,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional uint32 grid_x = 2;
  bool has_grid_x() const;
  private:
  bool _internal_has_grid_x() const;
  public:
  void clear_grid_x();
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_x() const;
  void set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid_x() const;
  void _internal_set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 grid_y = 3;
  bool has_grid_y() const;
  private:
  bool _internal_has_grid_y() const;
  public:
  void clear_grid_y();
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_y() const;
  void set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid_y() const;
  void _internal_set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .Obj.PackType packtype = 4;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqPutOnCard_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_x_;
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_y_;
  int packtype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqPutOffCard_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqPutOffCard_CS) */ {
 public:
  MSG_ReqPutOffCard_CS();
  virtual ~MSG_ReqPutOffCard_CS();

  MSG_ReqPutOffCard_CS(const MSG_ReqPutOffCard_CS& from);
  MSG_ReqPutOffCard_CS(MSG_ReqPutOffCard_CS&& from) noexcept
    : MSG_ReqPutOffCard_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqPutOffCard_CS& operator=(const MSG_ReqPutOffCard_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqPutOffCard_CS& operator=(MSG_ReqPutOffCard_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqPutOffCard_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqPutOffCard_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqPutOffCard_CS*>(
               &_MSG_ReqPutOffCard_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(MSG_ReqPutOffCard_CS& a, MSG_ReqPutOffCard_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqPutOffCard_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqPutOffCard_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqPutOffCard_CS>(nullptr);
  }

  MSG_ReqPutOffCard_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqPutOffCard_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqPutOffCard_CS& from);
  void MergeFrom(const MSG_ReqPutOffCard_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqPutOffCard_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqPutOffCard_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kGridXFieldNumber = 2,
    kGridYFieldNumber = 3,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional uint32 grid_x = 2;
  bool has_grid_x() const;
  private:
  bool _internal_has_grid_x() const;
  public:
  void clear_grid_x();
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_x() const;
  void set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid_x() const;
  void _internal_set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 grid_y = 3;
  bool has_grid_y() const;
  private:
  bool _internal_has_grid_y() const;
  public:
  void clear_grid_y();
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_y() const;
  void set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid_y() const;
  void _internal_set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqPutOffCard_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_x_;
  ::PROTOBUF_NAMESPACE_ID::uint32 grid_y_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSwapCard_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqSwapCard_CS) */ {
 public:
  MSG_ReqSwapCard_CS();
  virtual ~MSG_ReqSwapCard_CS();

  MSG_ReqSwapCard_CS(const MSG_ReqSwapCard_CS& from);
  MSG_ReqSwapCard_CS(MSG_ReqSwapCard_CS&& from) noexcept
    : MSG_ReqSwapCard_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSwapCard_CS& operator=(const MSG_ReqSwapCard_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSwapCard_CS& operator=(MSG_ReqSwapCard_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSwapCard_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSwapCard_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSwapCard_CS*>(
               &_MSG_ReqSwapCard_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(MSG_ReqSwapCard_CS& a, MSG_ReqSwapCard_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSwapCard_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSwapCard_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSwapCard_CS>(nullptr);
  }

  MSG_ReqSwapCard_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSwapCard_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSwapCard_CS& from);
  void MergeFrom(const MSG_ReqSwapCard_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSwapCard_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqSwapCard_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcThisidFieldNumber = 1,
    kDstThisidFieldNumber = 2,
  };
  // optional string src_thisid = 1;
  bool has_src_thisid() const;
  private:
  bool _internal_has_src_thisid() const;
  public:
  void clear_src_thisid();
  const std::string& src_thisid() const;
  void set_src_thisid(const std::string& value);
  void set_src_thisid(std::string&& value);
  void set_src_thisid(const char* value);
  void set_src_thisid(const char* value, size_t size);
  std::string* mutable_src_thisid();
  std::string* release_src_thisid();
  void set_allocated_src_thisid(std::string* src_thisid);
  private:
  const std::string& _internal_src_thisid() const;
  void _internal_set_src_thisid(const std::string& value);
  std::string* _internal_mutable_src_thisid();
  public:

  // optional string dst_thisid = 2;
  bool has_dst_thisid() const;
  private:
  bool _internal_has_dst_thisid() const;
  public:
  void clear_dst_thisid();
  const std::string& dst_thisid() const;
  void set_dst_thisid(const std::string& value);
  void set_dst_thisid(std::string&& value);
  void set_dst_thisid(const char* value);
  void set_dst_thisid(const char* value, size_t size);
  std::string* mutable_dst_thisid();
  std::string* release_dst_thisid();
  void set_allocated_dst_thisid(std::string* dst_thisid);
  private:
  const std::string& _internal_dst_thisid() const;
  void _internal_set_dst_thisid(const std::string& value);
  std::string* _internal_mutable_dst_thisid();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqSwapCard_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr src_thisid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dst_thisid_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqCardPackInfo_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqCardPackInfo_CS) */ {
 public:
  MSG_ReqCardPackInfo_CS();
  virtual ~MSG_ReqCardPackInfo_CS();

  MSG_ReqCardPackInfo_CS(const MSG_ReqCardPackInfo_CS& from);
  MSG_ReqCardPackInfo_CS(MSG_ReqCardPackInfo_CS&& from) noexcept
    : MSG_ReqCardPackInfo_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqCardPackInfo_CS& operator=(const MSG_ReqCardPackInfo_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqCardPackInfo_CS& operator=(MSG_ReqCardPackInfo_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqCardPackInfo_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqCardPackInfo_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqCardPackInfo_CS*>(
               &_MSG_ReqCardPackInfo_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(MSG_ReqCardPackInfo_CS& a, MSG_ReqCardPackInfo_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqCardPackInfo_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqCardPackInfo_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqCardPackInfo_CS>(nullptr);
  }

  MSG_ReqCardPackInfo_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqCardPackInfo_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqCardPackInfo_CS& from);
  void MergeFrom(const MSG_ReqCardPackInfo_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqCardPackInfo_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqCardPackInfo_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqCardPackInfo_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class CardPackInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.CardPackInfo) */ {
 public:
  CardPackInfo();
  virtual ~CardPackInfo();

  CardPackInfo(const CardPackInfo& from);
  CardPackInfo(CardPackInfo&& from) noexcept
    : CardPackInfo() {
    *this = ::std::move(from);
  }

  inline CardPackInfo& operator=(const CardPackInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CardPackInfo& operator=(CardPackInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CardPackInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CardPackInfo* internal_default_instance() {
    return reinterpret_cast<const CardPackInfo*>(
               &_CardPackInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CardPackInfo& a, CardPackInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CardPackInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CardPackInfo* New() const final {
    return CreateMaybeMessage<CardPackInfo>(nullptr);
  }

  CardPackInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CardPackInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CardPackInfo& from);
  void MergeFrom(const CardPackInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CardPackInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.CardPackInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjsFieldNumber = 7,
    kGoldOpenedNumFieldNumber = 1,
    kWoodOpenedNumFieldNumber = 2,
    kWaterOpenedNumFieldNumber = 3,
    kFireOpenedNumFieldNumber = 4,
    kEarthOpenedNumFieldNumber = 5,
    kHeroBaseidFieldNumber = 6,
  };
  // repeated .Obj.t_Object objs = 7;
  int objs_size() const;
  private:
  int _internal_objs_size() const;
  public:
  void clear_objs();
  ::Obj::t_Object* mutable_objs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >*
      mutable_objs();
  private:
  const ::Obj::t_Object& _internal_objs(int index) const;
  ::Obj::t_Object* _internal_add_objs();
  public:
  const ::Obj::t_Object& objs(int index) const;
  ::Obj::t_Object* add_objs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >&
      objs() const;

  // optional uint32 gold_opened_num = 1;
  bool has_gold_opened_num() const;
  private:
  bool _internal_has_gold_opened_num() const;
  public:
  void clear_gold_opened_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 gold_opened_num() const;
  void set_gold_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gold_opened_num() const;
  void _internal_set_gold_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 wood_opened_num = 2;
  bool has_wood_opened_num() const;
  private:
  bool _internal_has_wood_opened_num() const;
  public:
  void clear_wood_opened_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 wood_opened_num() const;
  void set_wood_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_wood_opened_num() const;
  void _internal_set_wood_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 water_opened_num = 3;
  bool has_water_opened_num() const;
  private:
  bool _internal_has_water_opened_num() const;
  public:
  void clear_water_opened_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 water_opened_num() const;
  void set_water_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_water_opened_num() const;
  void _internal_set_water_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 fire_opened_num = 4;
  bool has_fire_opened_num() const;
  private:
  bool _internal_has_fire_opened_num() const;
  public:
  void clear_fire_opened_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 fire_opened_num() const;
  void set_fire_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fire_opened_num() const;
  void _internal_set_fire_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 earth_opened_num = 5;
  bool has_earth_opened_num() const;
  private:
  bool _internal_has_earth_opened_num() const;
  public:
  void clear_earth_opened_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 earth_opened_num() const;
  void set_earth_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_earth_opened_num() const;
  void _internal_set_earth_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hero_baseid = 6;
  bool has_hero_baseid() const;
  private:
  bool _internal_has_hero_baseid() const;
  public:
  void clear_hero_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_baseid() const;
  void set_hero_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hero_baseid() const;
  void _internal_set_hero_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.CardPackInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object > objs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gold_opened_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wood_opened_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 water_opened_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fire_opened_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 earth_opened_num_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_baseid_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetCardPackInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_RetCardPackInfo_SC) */ {
 public:
  MSG_RetCardPackInfo_SC();
  virtual ~MSG_RetCardPackInfo_SC();

  MSG_RetCardPackInfo_SC(const MSG_RetCardPackInfo_SC& from);
  MSG_RetCardPackInfo_SC(MSG_RetCardPackInfo_SC&& from) noexcept
    : MSG_RetCardPackInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetCardPackInfo_SC& operator=(const MSG_RetCardPackInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetCardPackInfo_SC& operator=(MSG_RetCardPackInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetCardPackInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetCardPackInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetCardPackInfo_SC*>(
               &_MSG_RetCardPackInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(MSG_RetCardPackInfo_SC& a, MSG_RetCardPackInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetCardPackInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetCardPackInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_RetCardPackInfo_SC>(nullptr);
  }

  MSG_RetCardPackInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetCardPackInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetCardPackInfo_SC& from);
  void MergeFrom(const MSG_RetCardPackInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetCardPackInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_RetCardPackInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // optional .Obj.CardPackInfo data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::Obj::CardPackInfo& data() const;
  ::Obj::CardPackInfo* release_data();
  ::Obj::CardPackInfo* mutable_data();
  void set_allocated_data(::Obj::CardPackInfo* data);
  private:
  const ::Obj::CardPackInfo& _internal_data() const;
  ::Obj::CardPackInfo* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_RetCardPackInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::Obj::CardPackInfo* data_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSplitObject_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqSplitObject_CS) */ {
 public:
  MSG_ReqSplitObject_CS();
  virtual ~MSG_ReqSplitObject_CS();

  MSG_ReqSplitObject_CS(const MSG_ReqSplitObject_CS& from);
  MSG_ReqSplitObject_CS(MSG_ReqSplitObject_CS&& from) noexcept
    : MSG_ReqSplitObject_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSplitObject_CS& operator=(const MSG_ReqSplitObject_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSplitObject_CS& operator=(MSG_ReqSplitObject_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSplitObject_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSplitObject_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSplitObject_CS*>(
               &_MSG_ReqSplitObject_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(MSG_ReqSplitObject_CS& a, MSG_ReqSplitObject_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSplitObject_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSplitObject_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSplitObject_CS>(nullptr);
  }

  MSG_ReqSplitObject_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSplitObject_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSplitObject_CS& from);
  void MergeFrom(const MSG_ReqSplitObject_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSplitObject_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqSplitObject_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kNumFieldNumber = 2,
    kPacktypeFieldNumber = 3,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional uint32 num = 2;
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .Obj.PackType packtype = 3;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqSplitObject_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  int packtype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqOpItemLock_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqOpItemLock_CS) */ {
 public:
  MSG_ReqOpItemLock_CS();
  virtual ~MSG_ReqOpItemLock_CS();

  MSG_ReqOpItemLock_CS(const MSG_ReqOpItemLock_CS& from);
  MSG_ReqOpItemLock_CS(MSG_ReqOpItemLock_CS&& from) noexcept
    : MSG_ReqOpItemLock_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqOpItemLock_CS& operator=(const MSG_ReqOpItemLock_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqOpItemLock_CS& operator=(MSG_ReqOpItemLock_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqOpItemLock_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqOpItemLock_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqOpItemLock_CS*>(
               &_MSG_ReqOpItemLock_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(MSG_ReqOpItemLock_CS& a, MSG_ReqOpItemLock_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqOpItemLock_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqOpItemLock_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqOpItemLock_CS>(nullptr);
  }

  MSG_ReqOpItemLock_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqOpItemLock_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqOpItemLock_CS& from);
  void MergeFrom(const MSG_ReqOpItemLock_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqOpItemLock_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqOpItemLock_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kPasswdFieldNumber = 4,
    kPacktypeFieldNumber = 2,
    kOpcodeFieldNumber = 3,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional string passwd = 4;
  bool has_passwd() const;
  private:
  bool _internal_has_passwd() const;
  public:
  void clear_passwd();
  const std::string& passwd() const;
  void set_passwd(const std::string& value);
  void set_passwd(std::string&& value);
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  std::string* mutable_passwd();
  std::string* release_passwd();
  void set_allocated_passwd(std::string* passwd);
  private:
  const std::string& _internal_passwd() const;
  void _internal_set_passwd(const std::string& value);
  std::string* _internal_mutable_passwd();
  public:

  // optional .Obj.PackType packtype = 2;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // optional uint32 opcode = 3;
  bool has_opcode() const;
  private:
  bool _internal_has_opcode() const;
  public:
  void clear_opcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 opcode() const;
  void set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_opcode() const;
  void _internal_set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqOpItemLock_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr passwd_;
  int packtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 opcode_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqGetVIPCardInfo_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqGetVIPCardInfo_CS) */ {
 public:
  MSG_ReqGetVIPCardInfo_CS();
  virtual ~MSG_ReqGetVIPCardInfo_CS();

  MSG_ReqGetVIPCardInfo_CS(const MSG_ReqGetVIPCardInfo_CS& from);
  MSG_ReqGetVIPCardInfo_CS(MSG_ReqGetVIPCardInfo_CS&& from) noexcept
    : MSG_ReqGetVIPCardInfo_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqGetVIPCardInfo_CS& operator=(const MSG_ReqGetVIPCardInfo_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqGetVIPCardInfo_CS& operator=(MSG_ReqGetVIPCardInfo_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqGetVIPCardInfo_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqGetVIPCardInfo_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqGetVIPCardInfo_CS*>(
               &_MSG_ReqGetVIPCardInfo_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(MSG_ReqGetVIPCardInfo_CS& a, MSG_ReqGetVIPCardInfo_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqGetVIPCardInfo_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqGetVIPCardInfo_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqGetVIPCardInfo_CS>(nullptr);
  }

  MSG_ReqGetVIPCardInfo_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqGetVIPCardInfo_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqGetVIPCardInfo_CS& from);
  void MergeFrom(const MSG_ReqGetVIPCardInfo_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqGetVIPCardInfo_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqGetVIPCardInfo_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqGetVIPCardInfo_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetGetVIPCardInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_RetGetVIPCardInfo_SC) */ {
 public:
  MSG_RetGetVIPCardInfo_SC();
  virtual ~MSG_RetGetVIPCardInfo_SC();

  MSG_RetGetVIPCardInfo_SC(const MSG_RetGetVIPCardInfo_SC& from);
  MSG_RetGetVIPCardInfo_SC(MSG_RetGetVIPCardInfo_SC&& from) noexcept
    : MSG_RetGetVIPCardInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetGetVIPCardInfo_SC& operator=(const MSG_RetGetVIPCardInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetGetVIPCardInfo_SC& operator=(MSG_RetGetVIPCardInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetGetVIPCardInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetGetVIPCardInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetGetVIPCardInfo_SC*>(
               &_MSG_RetGetVIPCardInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(MSG_RetGetVIPCardInfo_SC& a, MSG_RetGetVIPCardInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetGetVIPCardInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetGetVIPCardInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_RetGetVIPCardInfo_SC>(nullptr);
  }

  MSG_RetGetVIPCardInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetGetVIPCardInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetGetVIPCardInfo_SC& from);
  void MergeFrom(const MSG_RetGetVIPCardInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetGetVIPCardInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_RetGetVIPCardInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVipcardinfoFieldNumber = 1,
  };
  // optional .Obj.VIPCardInfo vipcardinfo = 1;
  bool has_vipcardinfo() const;
  private:
  bool _internal_has_vipcardinfo() const;
  public:
  void clear_vipcardinfo();
  const ::Obj::VIPCardInfo& vipcardinfo() const;
  ::Obj::VIPCardInfo* release_vipcardinfo();
  ::Obj::VIPCardInfo* mutable_vipcardinfo();
  void set_allocated_vipcardinfo(::Obj::VIPCardInfo* vipcardinfo);
  private:
  const ::Obj::VIPCardInfo& _internal_vipcardinfo() const;
  ::Obj::VIPCardInfo* _internal_mutable_vipcardinfo();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_RetGetVIPCardInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::Obj::VIPCardInfo* vipcardinfo_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqBuyVIPCard_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqBuyVIPCard_CS) */ {
 public:
  MSG_ReqBuyVIPCard_CS();
  virtual ~MSG_ReqBuyVIPCard_CS();

  MSG_ReqBuyVIPCard_CS(const MSG_ReqBuyVIPCard_CS& from);
  MSG_ReqBuyVIPCard_CS(MSG_ReqBuyVIPCard_CS&& from) noexcept
    : MSG_ReqBuyVIPCard_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqBuyVIPCard_CS& operator=(const MSG_ReqBuyVIPCard_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqBuyVIPCard_CS& operator=(MSG_ReqBuyVIPCard_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqBuyVIPCard_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqBuyVIPCard_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqBuyVIPCard_CS*>(
               &_MSG_ReqBuyVIPCard_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(MSG_ReqBuyVIPCard_CS& a, MSG_ReqBuyVIPCard_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqBuyVIPCard_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqBuyVIPCard_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqBuyVIPCard_CS>(nullptr);
  }

  MSG_ReqBuyVIPCard_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqBuyVIPCard_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqBuyVIPCard_CS& from);
  void MergeFrom(const MSG_ReqBuyVIPCard_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqBuyVIPCard_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqBuyVIPCard_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardidFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // optional uint32 cardid = 1;
  bool has_cardid() const;
  private:
  bool _internal_has_cardid() const;
  public:
  void clear_cardid();
  ::PROTOBUF_NAMESPACE_ID::uint32 cardid() const;
  void set_cardid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cardid() const;
  void _internal_set_cardid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 count = 2 [default = 1];
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqBuyVIPCard_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cardid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetBuyVIPCard_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_RetBuyVIPCard_SC) */ {
 public:
  MSG_RetBuyVIPCard_SC();
  virtual ~MSG_RetBuyVIPCard_SC();

  MSG_RetBuyVIPCard_SC(const MSG_RetBuyVIPCard_SC& from);
  MSG_RetBuyVIPCard_SC(MSG_RetBuyVIPCard_SC&& from) noexcept
    : MSG_RetBuyVIPCard_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetBuyVIPCard_SC& operator=(const MSG_RetBuyVIPCard_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetBuyVIPCard_SC& operator=(MSG_RetBuyVIPCard_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetBuyVIPCard_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetBuyVIPCard_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetBuyVIPCard_SC*>(
               &_MSG_RetBuyVIPCard_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(MSG_RetBuyVIPCard_SC& a, MSG_RetBuyVIPCard_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetBuyVIPCard_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetBuyVIPCard_SC* New() const final {
    return CreateMaybeMessage<MSG_RetBuyVIPCard_SC>(nullptr);
  }

  MSG_RetBuyVIPCard_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetBuyVIPCard_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetBuyVIPCard_SC& from);
  void MergeFrom(const MSG_RetBuyVIPCard_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetBuyVIPCard_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_RetBuyVIPCard_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVipcardinfoFieldNumber = 1,
  };
  // optional .Obj.VIPCardInfo vipcardinfo = 1;
  bool has_vipcardinfo() const;
  private:
  bool _internal_has_vipcardinfo() const;
  public:
  void clear_vipcardinfo();
  const ::Obj::VIPCardInfo& vipcardinfo() const;
  ::Obj::VIPCardInfo* release_vipcardinfo();
  ::Obj::VIPCardInfo* mutable_vipcardinfo();
  void set_allocated_vipcardinfo(::Obj::VIPCardInfo* vipcardinfo);
  private:
  const ::Obj::VIPCardInfo& _internal_vipcardinfo() const;
  ::Obj::VIPCardInfo* _internal_mutable_vipcardinfo();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_RetBuyVIPCard_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::Obj::VIPCardInfo* vipcardinfo_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqAcepVIPCardPrize_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqAcepVIPCardPrize_CS) */ {
 public:
  MSG_ReqAcepVIPCardPrize_CS();
  virtual ~MSG_ReqAcepVIPCardPrize_CS();

  MSG_ReqAcepVIPCardPrize_CS(const MSG_ReqAcepVIPCardPrize_CS& from);
  MSG_ReqAcepVIPCardPrize_CS(MSG_ReqAcepVIPCardPrize_CS&& from) noexcept
    : MSG_ReqAcepVIPCardPrize_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqAcepVIPCardPrize_CS& operator=(const MSG_ReqAcepVIPCardPrize_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqAcepVIPCardPrize_CS& operator=(MSG_ReqAcepVIPCardPrize_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqAcepVIPCardPrize_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqAcepVIPCardPrize_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqAcepVIPCardPrize_CS*>(
               &_MSG_ReqAcepVIPCardPrize_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(MSG_ReqAcepVIPCardPrize_CS& a, MSG_ReqAcepVIPCardPrize_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqAcepVIPCardPrize_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqAcepVIPCardPrize_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqAcepVIPCardPrize_CS>(nullptr);
  }

  MSG_ReqAcepVIPCardPrize_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqAcepVIPCardPrize_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqAcepVIPCardPrize_CS& from);
  void MergeFrom(const MSG_ReqAcepVIPCardPrize_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqAcepVIPCardPrize_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqAcepVIPCardPrize_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqAcepVIPCardPrize_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetAcepVIPCardPrize_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_RetAcepVIPCardPrize_SC) */ {
 public:
  MSG_RetAcepVIPCardPrize_SC();
  virtual ~MSG_RetAcepVIPCardPrize_SC();

  MSG_RetAcepVIPCardPrize_SC(const MSG_RetAcepVIPCardPrize_SC& from);
  MSG_RetAcepVIPCardPrize_SC(MSG_RetAcepVIPCardPrize_SC&& from) noexcept
    : MSG_RetAcepVIPCardPrize_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetAcepVIPCardPrize_SC& operator=(const MSG_RetAcepVIPCardPrize_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetAcepVIPCardPrize_SC& operator=(MSG_RetAcepVIPCardPrize_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetAcepVIPCardPrize_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetAcepVIPCardPrize_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetAcepVIPCardPrize_SC*>(
               &_MSG_RetAcepVIPCardPrize_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(MSG_RetAcepVIPCardPrize_SC& a, MSG_RetAcepVIPCardPrize_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetAcepVIPCardPrize_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetAcepVIPCardPrize_SC* New() const final {
    return CreateMaybeMessage<MSG_RetAcepVIPCardPrize_SC>(nullptr);
  }

  MSG_RetAcepVIPCardPrize_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetAcepVIPCardPrize_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetAcepVIPCardPrize_SC& from);
  void MergeFrom(const MSG_RetAcepVIPCardPrize_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetAcepVIPCardPrize_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_RetAcepVIPCardPrize_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVipcardinfoFieldNumber = 1,
  };
  // optional .Obj.VIPCardInfo vipcardinfo = 1;
  bool has_vipcardinfo() const;
  private:
  bool _internal_has_vipcardinfo() const;
  public:
  void clear_vipcardinfo();
  const ::Obj::VIPCardInfo& vipcardinfo() const;
  ::Obj::VIPCardInfo* release_vipcardinfo();
  ::Obj::VIPCardInfo* mutable_vipcardinfo();
  void set_allocated_vipcardinfo(::Obj::VIPCardInfo* vipcardinfo);
  private:
  const ::Obj::VIPCardInfo& _internal_vipcardinfo() const;
  ::Obj::VIPCardInfo* _internal_mutable_vipcardinfo();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_RetAcepVIPCardPrize_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::Obj::VIPCardInfo* vipcardinfo_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqRaffVIPCardPrize_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqRaffVIPCardPrize_CS) */ {
 public:
  MSG_ReqRaffVIPCardPrize_CS();
  virtual ~MSG_ReqRaffVIPCardPrize_CS();

  MSG_ReqRaffVIPCardPrize_CS(const MSG_ReqRaffVIPCardPrize_CS& from);
  MSG_ReqRaffVIPCardPrize_CS(MSG_ReqRaffVIPCardPrize_CS&& from) noexcept
    : MSG_ReqRaffVIPCardPrize_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqRaffVIPCardPrize_CS& operator=(const MSG_ReqRaffVIPCardPrize_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqRaffVIPCardPrize_CS& operator=(MSG_ReqRaffVIPCardPrize_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqRaffVIPCardPrize_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqRaffVIPCardPrize_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqRaffVIPCardPrize_CS*>(
               &_MSG_ReqRaffVIPCardPrize_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(MSG_ReqRaffVIPCardPrize_CS& a, MSG_ReqRaffVIPCardPrize_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqRaffVIPCardPrize_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqRaffVIPCardPrize_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqRaffVIPCardPrize_CS>(nullptr);
  }

  MSG_ReqRaffVIPCardPrize_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqRaffVIPCardPrize_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqRaffVIPCardPrize_CS& from);
  void MergeFrom(const MSG_ReqRaffVIPCardPrize_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqRaffVIPCardPrize_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqRaffVIPCardPrize_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUsetypeFieldNumber = 1,
  };
  // optional .Obj.RaffUseType usetype = 1;
  bool has_usetype() const;
  private:
  bool _internal_has_usetype() const;
  public:
  void clear_usetype();
  ::Obj::RaffUseType usetype() const;
  void set_usetype(::Obj::RaffUseType value);
  private:
  ::Obj::RaffUseType _internal_usetype() const;
  void _internal_set_usetype(::Obj::RaffUseType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqRaffVIPCardPrize_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int usetype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRaffVIPCardPrize_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_RetRaffVIPCardPrize_SC) */ {
 public:
  MSG_RetRaffVIPCardPrize_SC();
  virtual ~MSG_RetRaffVIPCardPrize_SC();

  MSG_RetRaffVIPCardPrize_SC(const MSG_RetRaffVIPCardPrize_SC& from);
  MSG_RetRaffVIPCardPrize_SC(MSG_RetRaffVIPCardPrize_SC&& from) noexcept
    : MSG_RetRaffVIPCardPrize_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRaffVIPCardPrize_SC& operator=(const MSG_RetRaffVIPCardPrize_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRaffVIPCardPrize_SC& operator=(MSG_RetRaffVIPCardPrize_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRaffVIPCardPrize_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRaffVIPCardPrize_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRaffVIPCardPrize_SC*>(
               &_MSG_RetRaffVIPCardPrize_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(MSG_RetRaffVIPCardPrize_SC& a, MSG_RetRaffVIPCardPrize_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRaffVIPCardPrize_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRaffVIPCardPrize_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRaffVIPCardPrize_SC>(nullptr);
  }

  MSG_RetRaffVIPCardPrize_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRaffVIPCardPrize_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRaffVIPCardPrize_SC& from);
  void MergeFrom(const MSG_RetRaffVIPCardPrize_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRaffVIPCardPrize_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_RetRaffVIPCardPrize_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVipcardinfoFieldNumber = 1,
    kIdFieldNumber = 2,
    kQuantityFieldNumber = 3,
  };
  // optional .Obj.VIPCardInfo vipcardinfo = 1;
  bool has_vipcardinfo() const;
  private:
  bool _internal_has_vipcardinfo() const;
  public:
  void clear_vipcardinfo();
  const ::Obj::VIPCardInfo& vipcardinfo() const;
  ::Obj::VIPCardInfo* release_vipcardinfo();
  ::Obj::VIPCardInfo* mutable_vipcardinfo();
  void set_allocated_vipcardinfo(::Obj::VIPCardInfo* vipcardinfo);
  private:
  const ::Obj::VIPCardInfo& _internal_vipcardinfo() const;
  ::Obj::VIPCardInfo* _internal_mutable_vipcardinfo();
  public:

  // optional uint32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quantity = 3;
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity() const;
  void set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quantity() const;
  void _internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_RetRaffVIPCardPrize_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::Obj::VIPCardInfo* vipcardinfo_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqCurrencyExchange_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqCurrencyExchange_CS) */ {
 public:
  MSG_ReqCurrencyExchange_CS();
  virtual ~MSG_ReqCurrencyExchange_CS();

  MSG_ReqCurrencyExchange_CS(const MSG_ReqCurrencyExchange_CS& from);
  MSG_ReqCurrencyExchange_CS(MSG_ReqCurrencyExchange_CS&& from) noexcept
    : MSG_ReqCurrencyExchange_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqCurrencyExchange_CS& operator=(const MSG_ReqCurrencyExchange_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqCurrencyExchange_CS& operator=(MSG_ReqCurrencyExchange_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqCurrencyExchange_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqCurrencyExchange_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqCurrencyExchange_CS*>(
               &_MSG_ReqCurrencyExchange_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(MSG_ReqCurrencyExchange_CS& a, MSG_ReqCurrencyExchange_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqCurrencyExchange_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqCurrencyExchange_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqCurrencyExchange_CS>(nullptr);
  }

  MSG_ReqCurrencyExchange_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqCurrencyExchange_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqCurrencyExchange_CS& from);
  void MergeFrom(const MSG_ReqCurrencyExchange_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqCurrencyExchange_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqCurrencyExchange_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUsequantityFieldNumber = 1,
  };
  // optional uint32 usequantity = 1;
  bool has_usequantity() const;
  private:
  bool _internal_has_usequantity() const;
  public:
  void clear_usequantity();
  ::PROTOBUF_NAMESPACE_ID::uint32 usequantity() const;
  void set_usequantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_usequantity() const;
  void _internal_set_usequantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqCurrencyExchange_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 usequantity_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetCurrencyExchange_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_RetCurrencyExchange_SC) */ {
 public:
  MSG_RetCurrencyExchange_SC();
  virtual ~MSG_RetCurrencyExchange_SC();

  MSG_RetCurrencyExchange_SC(const MSG_RetCurrencyExchange_SC& from);
  MSG_RetCurrencyExchange_SC(MSG_RetCurrencyExchange_SC&& from) noexcept
    : MSG_RetCurrencyExchange_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetCurrencyExchange_SC& operator=(const MSG_RetCurrencyExchange_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetCurrencyExchange_SC& operator=(MSG_RetCurrencyExchange_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetCurrencyExchange_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetCurrencyExchange_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetCurrencyExchange_SC*>(
               &_MSG_RetCurrencyExchange_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(MSG_RetCurrencyExchange_SC& a, MSG_RetCurrencyExchange_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetCurrencyExchange_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetCurrencyExchange_SC* New() const final {
    return CreateMaybeMessage<MSG_RetCurrencyExchange_SC>(nullptr);
  }

  MSG_RetCurrencyExchange_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetCurrencyExchange_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetCurrencyExchange_SC& from);
  void MergeFrom(const MSG_RetCurrencyExchange_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetCurrencyExchange_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_RetCurrencyExchange_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional uint32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_RetCurrencyExchange_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqTransMoney_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqTransMoney_CS) */ {
 public:
  MSG_ReqTransMoney_CS();
  virtual ~MSG_ReqTransMoney_CS();

  MSG_ReqTransMoney_CS(const MSG_ReqTransMoney_CS& from);
  MSG_ReqTransMoney_CS(MSG_ReqTransMoney_CS&& from) noexcept
    : MSG_ReqTransMoney_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqTransMoney_CS& operator=(const MSG_ReqTransMoney_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqTransMoney_CS& operator=(MSG_ReqTransMoney_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqTransMoney_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqTransMoney_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqTransMoney_CS*>(
               &_MSG_ReqTransMoney_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(MSG_ReqTransMoney_CS& a, MSG_ReqTransMoney_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqTransMoney_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqTransMoney_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqTransMoney_CS>(nullptr);
  }

  MSG_ReqTransMoney_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqTransMoney_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqTransMoney_CS& from);
  void MergeFrom(const MSG_ReqTransMoney_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqTransMoney_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqTransMoney_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPacktypeFieldNumber = 1,
    kDstPacktypeFieldNumber = 2,
    kResourceIDFieldNumber = 3,
    kQuantityFieldNumber = 4,
  };
  // optional .Obj.PackType packtype = 1;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // optional .Obj.PackType dst_packtype = 2;
  bool has_dst_packtype() const;
  private:
  bool _internal_has_dst_packtype() const;
  public:
  void clear_dst_packtype();
  ::Obj::PackType dst_packtype() const;
  void set_dst_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_dst_packtype() const;
  void _internal_set_dst_packtype(::Obj::PackType value);
  public:

  // optional uint32 resourceID = 3;
  bool has_resourceid() const;
  private:
  bool _internal_has_resourceid() const;
  public:
  void clear_resourceid();
  ::PROTOBUF_NAMESPACE_ID::uint32 resourceid() const;
  void set_resourceid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_resourceid() const;
  void _internal_set_resourceid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quantity = 4;
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity() const;
  void set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quantity() const;
  void _internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqTransMoney_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int packtype_;
  int dst_packtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 resourceid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqFixUpDurability_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqFixUpDurability_CS) */ {
 public:
  MSG_ReqFixUpDurability_CS();
  virtual ~MSG_ReqFixUpDurability_CS();

  MSG_ReqFixUpDurability_CS(const MSG_ReqFixUpDurability_CS& from);
  MSG_ReqFixUpDurability_CS(MSG_ReqFixUpDurability_CS&& from) noexcept
    : MSG_ReqFixUpDurability_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqFixUpDurability_CS& operator=(const MSG_ReqFixUpDurability_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqFixUpDurability_CS& operator=(MSG_ReqFixUpDurability_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqFixUpDurability_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqFixUpDurability_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqFixUpDurability_CS*>(
               &_MSG_ReqFixUpDurability_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(MSG_ReqFixUpDurability_CS& a, MSG_ReqFixUpDurability_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqFixUpDurability_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqFixUpDurability_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqFixUpDurability_CS>(nullptr);
  }

  MSG_ReqFixUpDurability_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqFixUpDurability_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqFixUpDurability_CS& from);
  void MergeFrom(const MSG_ReqFixUpDurability_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqFixUpDurability_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqFixUpDurability_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 2,
    kPacktypeFieldNumber = 1,
  };
  // optional string thisid = 2;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional .Obj.PackType packtype = 1;
  bool has_packtype() const;
  private:
  bool _internal_has_packtype() const;
  public:
  void clear_packtype();
  ::Obj::PackType packtype() const;
  void set_packtype(::Obj::PackType value);
  private:
  ::Obj::PackType _internal_packtype() const;
  void _internal_set_packtype(::Obj::PackType value);
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqFixUpDurability_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  int packtype_;
  friend struct ::TableStruct_object_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqUseCapsule_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Obj.MSG_ReqUseCapsule_CS) */ {
 public:
  MSG_ReqUseCapsule_CS();
  virtual ~MSG_ReqUseCapsule_CS();

  MSG_ReqUseCapsule_CS(const MSG_ReqUseCapsule_CS& from);
  MSG_ReqUseCapsule_CS(MSG_ReqUseCapsule_CS&& from) noexcept
    : MSG_ReqUseCapsule_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqUseCapsule_CS& operator=(const MSG_ReqUseCapsule_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqUseCapsule_CS& operator=(MSG_ReqUseCapsule_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqUseCapsule_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqUseCapsule_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqUseCapsule_CS*>(
               &_MSG_ReqUseCapsule_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(MSG_ReqUseCapsule_CS& a, MSG_ReqUseCapsule_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqUseCapsule_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqUseCapsule_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqUseCapsule_CS>(nullptr);
  }

  MSG_ReqUseCapsule_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqUseCapsule_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqUseCapsule_CS& from);
  void MergeFrom(const MSG_ReqUseCapsule_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqUseCapsule_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Obj.MSG_ReqUseCapsule_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_2eproto);
    return ::descriptor_table_object_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // @@protoc_insertion_point(class_scope:Obj.MSG_ReqUseCapsule_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  friend struct ::TableStruct_object_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EquipData

// optional uint32 weaponatt = 1;
inline bool EquipData::_internal_has_weaponatt() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool EquipData::has_weaponatt() const {
  return _internal_has_weaponatt();
}
inline void EquipData::clear_weaponatt() {
  weaponatt_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_weaponatt() const {
  return weaponatt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::weaponatt() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.weaponatt)
  return _internal_weaponatt();
}
inline void EquipData::_internal_set_weaponatt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  weaponatt_ = value;
}
inline void EquipData::set_weaponatt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_weaponatt(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.weaponatt)
}

// optional uint32 pdam = 2;
inline bool EquipData::_internal_has_pdam() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool EquipData::has_pdam() const {
  return _internal_has_pdam();
}
inline void EquipData::clear_pdam() {
  pdam_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_pdam() const {
  return pdam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::pdam() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.pdam)
  return _internal_pdam();
}
inline void EquipData::_internal_set_pdam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pdam_ = value;
}
inline void EquipData::set_pdam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdam(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.pdam)
}

// optional uint32 mdam = 3;
inline bool EquipData::_internal_has_mdam() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool EquipData::has_mdam() const {
  return _internal_has_mdam();
}
inline void EquipData::clear_mdam() {
  mdam_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_mdam() const {
  return mdam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::mdam() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.mdam)
  return _internal_mdam();
}
inline void EquipData::_internal_set_mdam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  mdam_ = value;
}
inline void EquipData::set_mdam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mdam(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.mdam)
}

// optional uint32 pdef = 4;
inline bool EquipData::_internal_has_pdef() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool EquipData::has_pdef() const {
  return _internal_has_pdef();
}
inline void EquipData::clear_pdef() {
  pdef_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_pdef() const {
  return pdef_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::pdef() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.pdef)
  return _internal_pdef();
}
inline void EquipData::_internal_set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  pdef_ = value;
}
inline void EquipData::set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdef(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.pdef)
}

// optional uint32 mdef = 5;
inline bool EquipData::_internal_has_mdef() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool EquipData::has_mdef() const {
  return _internal_has_mdef();
}
inline void EquipData::clear_mdef() {
  mdef_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_mdef() const {
  return mdef_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::mdef() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.mdef)
  return _internal_mdef();
}
inline void EquipData::_internal_set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  mdef_ = value;
}
inline void EquipData::set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mdef(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.mdef)
}

// optional uint32 maxhp = 6;
inline bool EquipData::_internal_has_maxhp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool EquipData::has_maxhp() const {
  return _internal_has_maxhp();
}
inline void EquipData::clear_maxhp() {
  maxhp_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_maxhp() const {
  return maxhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::maxhp() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.maxhp)
  return _internal_maxhp();
}
inline void EquipData::_internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  maxhp_ = value;
}
inline void EquipData::set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxhp(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.maxhp)
}

// optional uint32 str = 7;
inline bool EquipData::_internal_has_str() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool EquipData::has_str() const {
  return _internal_has_str();
}
inline void EquipData::clear_str() {
  str_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_str() const {
  return str_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::str() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.str)
  return _internal_str();
}
inline void EquipData::_internal_set_str(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  str_ = value;
}
inline void EquipData::set_str(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_str(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.str)
}

// optional uint32 dex = 8;
inline bool EquipData::_internal_has_dex() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool EquipData::has_dex() const {
  return _internal_has_dex();
}
inline void EquipData::clear_dex() {
  dex_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_dex() const {
  return dex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::dex() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.dex)
  return _internal_dex();
}
inline void EquipData::_internal_set_dex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  dex_ = value;
}
inline void EquipData::set_dex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dex(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.dex)
}

// optional uint32 intel = 9;
inline bool EquipData::_internal_has_intel() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool EquipData::has_intel() const {
  return _internal_has_intel();
}
inline void EquipData::clear_intel() {
  intel_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_intel() const {
  return intel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::intel() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.intel)
  return _internal_intel();
}
inline void EquipData::_internal_set_intel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  intel_ = value;
}
inline void EquipData::set_intel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_intel(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.intel)
}

// optional uint32 phy = 10;
inline bool EquipData::_internal_has_phy() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool EquipData::has_phy() const {
  return _internal_has_phy();
}
inline void EquipData::clear_phy() {
  phy_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_phy() const {
  return phy_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::phy() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.phy)
  return _internal_phy();
}
inline void EquipData::_internal_set_phy(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  phy_ = value;
}
inline void EquipData::set_phy(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_phy(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.phy)
}

// optional uint32 bang = 11;
inline bool EquipData::_internal_has_bang() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool EquipData::has_bang() const {
  return _internal_has_bang();
}
inline void EquipData::clear_bang() {
  bang_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_bang() const {
  return bang_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::bang() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.bang)
  return _internal_bang();
}
inline void EquipData::_internal_set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  bang_ = value;
}
inline void EquipData::set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bang(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.bang)
}

// optional uint32 toughness = 12;
inline bool EquipData::_internal_has_toughness() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool EquipData::has_toughness() const {
  return _internal_has_toughness();
}
inline void EquipData::clear_toughness() {
  toughness_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_toughness() const {
  return toughness_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::toughness() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.toughness)
  return _internal_toughness();
}
inline void EquipData::_internal_set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  toughness_ = value;
}
inline void EquipData::set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_toughness(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.toughness)
}

// optional uint32 block = 13;
inline bool EquipData::_internal_has_block() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool EquipData::has_block() const {
  return _internal_has_block();
}
inline void EquipData::clear_block() {
  block_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_block() const {
  return block_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::block() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.block)
  return _internal_block();
}
inline void EquipData::_internal_set_block(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  block_ = value;
}
inline void EquipData::set_block(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_block(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.block)
}

// optional uint32 penetrate = 14;
inline bool EquipData::_internal_has_penetrate() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool EquipData::has_penetrate() const {
  return _internal_has_penetrate();
}
inline void EquipData::clear_penetrate() {
  penetrate_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_penetrate() const {
  return penetrate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::penetrate() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.penetrate)
  return _internal_penetrate();
}
inline void EquipData::_internal_set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  penetrate_ = value;
}
inline void EquipData::set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_penetrate(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.penetrate)
}

// optional uint32 accurate = 15;
inline bool EquipData::_internal_has_accurate() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool EquipData::has_accurate() const {
  return _internal_has_accurate();
}
inline void EquipData::clear_accurate() {
  accurate_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_accurate() const {
  return accurate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::accurate() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.accurate)
  return _internal_accurate();
}
inline void EquipData::_internal_set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  accurate_ = value;
}
inline void EquipData::set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accurate(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.accurate)
}

// optional uint32 hold = 16;
inline bool EquipData::_internal_has_hold() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool EquipData::has_hold() const {
  return _internal_has_hold();
}
inline void EquipData::clear_hold() {
  hold_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_hold() const {
  return hold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::hold() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.hold)
  return _internal_hold();
}
inline void EquipData::_internal_set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  hold_ = value;
}
inline void EquipData::set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hold(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.hold)
}

// optional uint32 deflect = 17;
inline bool EquipData::_internal_has_deflect() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool EquipData::has_deflect() const {
  return _internal_has_deflect();
}
inline void EquipData::clear_deflect() {
  deflect_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_deflect() const {
  return deflect_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::deflect() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.deflect)
  return _internal_deflect();
}
inline void EquipData::_internal_set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  deflect_ = value;
}
inline void EquipData::set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deflect(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.deflect)
}

// optional uint32 bangextradamage = 18;
inline bool EquipData::_internal_has_bangextradamage() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool EquipData::has_bangextradamage() const {
  return _internal_has_bangextradamage();
}
inline void EquipData::clear_bangextradamage() {
  bangextradamage_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_bangextradamage() const {
  return bangextradamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::bangextradamage() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.bangextradamage)
  return _internal_bangextradamage();
}
inline void EquipData::_internal_set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  bangextradamage_ = value;
}
inline void EquipData::set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bangextradamage(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.bangextradamage)
}

// optional uint32 toughnessreducedamage = 19;
inline bool EquipData::_internal_has_toughnessreducedamage() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool EquipData::has_toughnessreducedamage() const {
  return _internal_has_toughnessreducedamage();
}
inline void EquipData::clear_toughnessreducedamage() {
  toughnessreducedamage_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_toughnessreducedamage() const {
  return toughnessreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::toughnessreducedamage() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.toughnessreducedamage)
  return _internal_toughnessreducedamage();
}
inline void EquipData::_internal_set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  toughnessreducedamage_ = value;
}
inline void EquipData::set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_toughnessreducedamage(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.toughnessreducedamage)
}

// optional uint32 blockreducedamage = 20;
inline bool EquipData::_internal_has_blockreducedamage() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool EquipData::has_blockreducedamage() const {
  return _internal_has_blockreducedamage();
}
inline void EquipData::clear_blockreducedamage() {
  blockreducedamage_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_blockreducedamage() const {
  return blockreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::blockreducedamage() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.blockreducedamage)
  return _internal_blockreducedamage();
}
inline void EquipData::_internal_set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  blockreducedamage_ = value;
}
inline void EquipData::set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blockreducedamage(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.blockreducedamage)
}

// optional uint32 penetrateextradamage = 21;
inline bool EquipData::_internal_has_penetrateextradamage() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool EquipData::has_penetrateextradamage() const {
  return _internal_has_penetrateextradamage();
}
inline void EquipData::clear_penetrateextradamage() {
  penetrateextradamage_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_penetrateextradamage() const {
  return penetrateextradamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::penetrateextradamage() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.penetrateextradamage)
  return _internal_penetrateextradamage();
}
inline void EquipData::_internal_set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  penetrateextradamage_ = value;
}
inline void EquipData::set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_penetrateextradamage(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.penetrateextradamage)
}

// optional uint32 accurateextradamage = 22;
inline bool EquipData::_internal_has_accurateextradamage() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool EquipData::has_accurateextradamage() const {
  return _internal_has_accurateextradamage();
}
inline void EquipData::clear_accurateextradamage() {
  accurateextradamage_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_accurateextradamage() const {
  return accurateextradamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::accurateextradamage() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.accurateextradamage)
  return _internal_accurateextradamage();
}
inline void EquipData::_internal_set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  accurateextradamage_ = value;
}
inline void EquipData::set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accurateextradamage(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.accurateextradamage)
}

// optional uint32 holdreducedamage = 23;
inline bool EquipData::_internal_has_holdreducedamage() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool EquipData::has_holdreducedamage() const {
  return _internal_has_holdreducedamage();
}
inline void EquipData::clear_holdreducedamage() {
  holdreducedamage_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_holdreducedamage() const {
  return holdreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::holdreducedamage() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.holdreducedamage)
  return _internal_holdreducedamage();
}
inline void EquipData::_internal_set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  holdreducedamage_ = value;
}
inline void EquipData::set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_holdreducedamage(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.holdreducedamage)
}

// optional uint32 deflectreducedamage = 24;
inline bool EquipData::_internal_has_deflectreducedamage() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool EquipData::has_deflectreducedamage() const {
  return _internal_has_deflectreducedamage();
}
inline void EquipData::clear_deflectreducedamage() {
  deflectreducedamage_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_deflectreducedamage() const {
  return deflectreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::deflectreducedamage() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.deflectreducedamage)
  return _internal_deflectreducedamage();
}
inline void EquipData::_internal_set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  deflectreducedamage_ = value;
}
inline void EquipData::set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deflectreducedamage(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.deflectreducedamage)
}

// optional uint32 maxmp = 25;
inline bool EquipData::_internal_has_maxmp() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool EquipData::has_maxmp() const {
  return _internal_has_maxmp();
}
inline void EquipData::clear_maxmp() {
  maxmp_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_maxmp() const {
  return maxmp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::maxmp() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.maxmp)
  return _internal_maxmp();
}
inline void EquipData::_internal_set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  maxmp_ = value;
}
inline void EquipData::set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxmp(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.maxmp)
}

// optional uint32 miss = 26;
inline bool EquipData::_internal_has_miss() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool EquipData::has_miss() const {
  return _internal_has_miss();
}
inline void EquipData::clear_miss() {
  miss_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_miss() const {
  return miss_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::miss() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.miss)
  return _internal_miss();
}
inline void EquipData::_internal_set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  miss_ = value;
}
inline void EquipData::set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_miss(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.miss)
}

// optional uint32 hit = 27;
inline bool EquipData::_internal_has_hit() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool EquipData::has_hit() const {
  return _internal_has_hit();
}
inline void EquipData::clear_hit() {
  hit_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_hit() const {
  return hit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::hit() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.hit)
  return _internal_hit();
}
inline void EquipData::_internal_set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  hit_ = value;
}
inline void EquipData::set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hit(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.hit)
}

// optional uint32 firemastery = 28;
inline bool EquipData::_internal_has_firemastery() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool EquipData::has_firemastery() const {
  return _internal_has_firemastery();
}
inline void EquipData::clear_firemastery() {
  firemastery_ = 0u;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_firemastery() const {
  return firemastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::firemastery() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.firemastery)
  return _internal_firemastery();
}
inline void EquipData::_internal_set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x08000000u;
  firemastery_ = value;
}
inline void EquipData::set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_firemastery(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.firemastery)
}

// optional uint32 icemastery = 29;
inline bool EquipData::_internal_has_icemastery() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool EquipData::has_icemastery() const {
  return _internal_has_icemastery();
}
inline void EquipData::clear_icemastery() {
  icemastery_ = 0u;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_icemastery() const {
  return icemastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::icemastery() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.icemastery)
  return _internal_icemastery();
}
inline void EquipData::_internal_set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x10000000u;
  icemastery_ = value;
}
inline void EquipData::set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_icemastery(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.icemastery)
}

// optional uint32 lightningmastery = 30;
inline bool EquipData::_internal_has_lightningmastery() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool EquipData::has_lightningmastery() const {
  return _internal_has_lightningmastery();
}
inline void EquipData::clear_lightningmastery() {
  lightningmastery_ = 0u;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_lightningmastery() const {
  return lightningmastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::lightningmastery() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.lightningmastery)
  return _internal_lightningmastery();
}
inline void EquipData::_internal_set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x20000000u;
  lightningmastery_ = value;
}
inline void EquipData::set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lightningmastery(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.lightningmastery)
}

// optional uint32 brightmastery = 31;
inline bool EquipData::_internal_has_brightmastery() const {
  bool value = (_has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool EquipData::has_brightmastery() const {
  return _internal_has_brightmastery();
}
inline void EquipData::clear_brightmastery() {
  brightmastery_ = 0u;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_brightmastery() const {
  return brightmastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::brightmastery() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.brightmastery)
  return _internal_brightmastery();
}
inline void EquipData::_internal_set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x40000000u;
  brightmastery_ = value;
}
inline void EquipData::set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brightmastery(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.brightmastery)
}

// optional uint32 darkmastery = 32;
inline bool EquipData::_internal_has_darkmastery() const {
  bool value = (_has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline bool EquipData::has_darkmastery() const {
  return _internal_has_darkmastery();
}
inline void EquipData::clear_darkmastery() {
  darkmastery_ = 0u;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_darkmastery() const {
  return darkmastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::darkmastery() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.darkmastery)
  return _internal_darkmastery();
}
inline void EquipData::_internal_set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x80000000u;
  darkmastery_ = value;
}
inline void EquipData::set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_darkmastery(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.darkmastery)
}

// optional uint32 fireresist = 33;
inline bool EquipData::_internal_has_fireresist() const {
  bool value = (_has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline bool EquipData::has_fireresist() const {
  return _internal_has_fireresist();
}
inline void EquipData::clear_fireresist() {
  fireresist_ = 0u;
  _has_bits_[1] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_fireresist() const {
  return fireresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::fireresist() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.fireresist)
  return _internal_fireresist();
}
inline void EquipData::_internal_set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000001u;
  fireresist_ = value;
}
inline void EquipData::set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fireresist(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.fireresist)
}

// optional uint32 iceresist = 34;
inline bool EquipData::_internal_has_iceresist() const {
  bool value = (_has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline bool EquipData::has_iceresist() const {
  return _internal_has_iceresist();
}
inline void EquipData::clear_iceresist() {
  iceresist_ = 0u;
  _has_bits_[1] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_iceresist() const {
  return iceresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::iceresist() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.iceresist)
  return _internal_iceresist();
}
inline void EquipData::_internal_set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000002u;
  iceresist_ = value;
}
inline void EquipData::set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_iceresist(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.iceresist)
}

// optional uint32 lightningresist = 35;
inline bool EquipData::_internal_has_lightningresist() const {
  bool value = (_has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline bool EquipData::has_lightningresist() const {
  return _internal_has_lightningresist();
}
inline void EquipData::clear_lightningresist() {
  lightningresist_ = 0u;
  _has_bits_[1] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_lightningresist() const {
  return lightningresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::lightningresist() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.lightningresist)
  return _internal_lightningresist();
}
inline void EquipData::_internal_set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000004u;
  lightningresist_ = value;
}
inline void EquipData::set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lightningresist(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.lightningresist)
}

// optional uint32 brightresist = 36;
inline bool EquipData::_internal_has_brightresist() const {
  bool value = (_has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline bool EquipData::has_brightresist() const {
  return _internal_has_brightresist();
}
inline void EquipData::clear_brightresist() {
  brightresist_ = 0u;
  _has_bits_[1] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_brightresist() const {
  return brightresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::brightresist() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.brightresist)
  return _internal_brightresist();
}
inline void EquipData::_internal_set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000008u;
  brightresist_ = value;
}
inline void EquipData::set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brightresist(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.brightresist)
}

// optional uint32 darkresist = 37;
inline bool EquipData::_internal_has_darkresist() const {
  bool value = (_has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline bool EquipData::has_darkresist() const {
  return _internal_has_darkresist();
}
inline void EquipData::clear_darkresist() {
  darkresist_ = 0u;
  _has_bits_[1] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_darkresist() const {
  return darkresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::darkresist() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.darkresist)
  return _internal_darkresist();
}
inline void EquipData::_internal_set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000010u;
  darkresist_ = value;
}
inline void EquipData::set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_darkresist(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.darkresist)
}

// optional uint32 firepen = 38;
inline bool EquipData::_internal_has_firepen() const {
  bool value = (_has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline bool EquipData::has_firepen() const {
  return _internal_has_firepen();
}
inline void EquipData::clear_firepen() {
  firepen_ = 0u;
  _has_bits_[1] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_firepen() const {
  return firepen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::firepen() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.firepen)
  return _internal_firepen();
}
inline void EquipData::_internal_set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000020u;
  firepen_ = value;
}
inline void EquipData::set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_firepen(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.firepen)
}

// optional uint32 icepen = 39;
inline bool EquipData::_internal_has_icepen() const {
  bool value = (_has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline bool EquipData::has_icepen() const {
  return _internal_has_icepen();
}
inline void EquipData::clear_icepen() {
  icepen_ = 0u;
  _has_bits_[1] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_icepen() const {
  return icepen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::icepen() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.icepen)
  return _internal_icepen();
}
inline void EquipData::_internal_set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000040u;
  icepen_ = value;
}
inline void EquipData::set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_icepen(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.icepen)
}

// optional uint32 lightningpen = 40;
inline bool EquipData::_internal_has_lightningpen() const {
  bool value = (_has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline bool EquipData::has_lightningpen() const {
  return _internal_has_lightningpen();
}
inline void EquipData::clear_lightningpen() {
  lightningpen_ = 0u;
  _has_bits_[1] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_lightningpen() const {
  return lightningpen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::lightningpen() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.lightningpen)
  return _internal_lightningpen();
}
inline void EquipData::_internal_set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000080u;
  lightningpen_ = value;
}
inline void EquipData::set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lightningpen(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.lightningpen)
}

// optional uint32 brightpen = 41;
inline bool EquipData::_internal_has_brightpen() const {
  bool value = (_has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline bool EquipData::has_brightpen() const {
  return _internal_has_brightpen();
}
inline void EquipData::clear_brightpen() {
  brightpen_ = 0u;
  _has_bits_[1] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_brightpen() const {
  return brightpen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::brightpen() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.brightpen)
  return _internal_brightpen();
}
inline void EquipData::_internal_set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000100u;
  brightpen_ = value;
}
inline void EquipData::set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brightpen(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.brightpen)
}

// optional uint32 darkpen = 42;
inline bool EquipData::_internal_has_darkpen() const {
  bool value = (_has_bits_[1] & 0x00000200u) != 0;
  return value;
}
inline bool EquipData::has_darkpen() const {
  return _internal_has_darkpen();
}
inline void EquipData::clear_darkpen() {
  darkpen_ = 0u;
  _has_bits_[1] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_darkpen() const {
  return darkpen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::darkpen() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.darkpen)
  return _internal_darkpen();
}
inline void EquipData::_internal_set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000200u;
  darkpen_ = value;
}
inline void EquipData::set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_darkpen(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.darkpen)
}

// optional uint32 blowint = 43;
inline bool EquipData::_internal_has_blowint() const {
  bool value = (_has_bits_[1] & 0x00000400u) != 0;
  return value;
}
inline bool EquipData::has_blowint() const {
  return _internal_has_blowint();
}
inline void EquipData::clear_blowint() {
  blowint_ = 0u;
  _has_bits_[1] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_blowint() const {
  return blowint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::blowint() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.blowint)
  return _internal_blowint();
}
inline void EquipData::_internal_set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000400u;
  blowint_ = value;
}
inline void EquipData::set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blowint(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.blowint)
}

// optional uint32 knockint = 44;
inline bool EquipData::_internal_has_knockint() const {
  bool value = (_has_bits_[1] & 0x00000800u) != 0;
  return value;
}
inline bool EquipData::has_knockint() const {
  return _internal_has_knockint();
}
inline void EquipData::clear_knockint() {
  knockint_ = 0u;
  _has_bits_[1] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_knockint() const {
  return knockint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::knockint() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.knockint)
  return _internal_knockint();
}
inline void EquipData::_internal_set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000800u;
  knockint_ = value;
}
inline void EquipData::set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_knockint(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.knockint)
}

// optional uint32 floatint = 45;
inline bool EquipData::_internal_has_floatint() const {
  bool value = (_has_bits_[1] & 0x00001000u) != 0;
  return value;
}
inline bool EquipData::has_floatint() const {
  return _internal_has_floatint();
}
inline void EquipData::clear_floatint() {
  floatint_ = 0u;
  _has_bits_[1] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_floatint() const {
  return floatint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::floatint() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.floatint)
  return _internal_floatint();
}
inline void EquipData::_internal_set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00001000u;
  floatint_ = value;
}
inline void EquipData::set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_floatint(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.floatint)
}

// optional uint32 superhitint = 46;
inline bool EquipData::_internal_has_superhitint() const {
  bool value = (_has_bits_[1] & 0x00002000u) != 0;
  return value;
}
inline bool EquipData::has_superhitint() const {
  return _internal_has_superhitint();
}
inline void EquipData::clear_superhitint() {
  superhitint_ = 0u;
  _has_bits_[1] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_superhitint() const {
  return superhitint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::superhitint() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.superhitint)
  return _internal_superhitint();
}
inline void EquipData::_internal_set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00002000u;
  superhitint_ = value;
}
inline void EquipData::set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_superhitint(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.superhitint)
}

// optional uint32 blowresist = 47;
inline bool EquipData::_internal_has_blowresist() const {
  bool value = (_has_bits_[1] & 0x00004000u) != 0;
  return value;
}
inline bool EquipData::has_blowresist() const {
  return _internal_has_blowresist();
}
inline void EquipData::clear_blowresist() {
  blowresist_ = 0u;
  _has_bits_[1] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_blowresist() const {
  return blowresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::blowresist() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.blowresist)
  return _internal_blowresist();
}
inline void EquipData::_internal_set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00004000u;
  blowresist_ = value;
}
inline void EquipData::set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blowresist(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.blowresist)
}

// optional uint32 knockresist = 48;
inline bool EquipData::_internal_has_knockresist() const {
  bool value = (_has_bits_[1] & 0x00008000u) != 0;
  return value;
}
inline bool EquipData::has_knockresist() const {
  return _internal_has_knockresist();
}
inline void EquipData::clear_knockresist() {
  knockresist_ = 0u;
  _has_bits_[1] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_knockresist() const {
  return knockresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::knockresist() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.knockresist)
  return _internal_knockresist();
}
inline void EquipData::_internal_set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00008000u;
  knockresist_ = value;
}
inline void EquipData::set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_knockresist(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.knockresist)
}

// optional uint32 floatresist = 49;
inline bool EquipData::_internal_has_floatresist() const {
  bool value = (_has_bits_[1] & 0x00010000u) != 0;
  return value;
}
inline bool EquipData::has_floatresist() const {
  return _internal_has_floatresist();
}
inline void EquipData::clear_floatresist() {
  floatresist_ = 0u;
  _has_bits_[1] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_floatresist() const {
  return floatresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::floatresist() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.floatresist)
  return _internal_floatresist();
}
inline void EquipData::_internal_set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00010000u;
  floatresist_ = value;
}
inline void EquipData::set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_floatresist(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.floatresist)
}

// optional uint32 superhitresist = 50;
inline bool EquipData::_internal_has_superhitresist() const {
  bool value = (_has_bits_[1] & 0x00020000u) != 0;
  return value;
}
inline bool EquipData::has_superhitresist() const {
  return _internal_has_superhitresist();
}
inline void EquipData::clear_superhitresist() {
  superhitresist_ = 0u;
  _has_bits_[1] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_superhitresist() const {
  return superhitresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::superhitresist() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.superhitresist)
  return _internal_superhitresist();
}
inline void EquipData::_internal_set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00020000u;
  superhitresist_ = value;
}
inline void EquipData::set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_superhitresist(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.superhitresist)
}

// optional uint32 stiffaddtime = 51;
inline bool EquipData::_internal_has_stiffaddtime() const {
  bool value = (_has_bits_[1] & 0x00040000u) != 0;
  return value;
}
inline bool EquipData::has_stiffaddtime() const {
  return _internal_has_stiffaddtime();
}
inline void EquipData::clear_stiffaddtime() {
  stiffaddtime_ = 0u;
  _has_bits_[1] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_stiffaddtime() const {
  return stiffaddtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::stiffaddtime() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.stiffaddtime)
  return _internal_stiffaddtime();
}
inline void EquipData::_internal_set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00040000u;
  stiffaddtime_ = value;
}
inline void EquipData::set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stiffaddtime(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.stiffaddtime)
}

// optional uint32 stiffdectime = 52;
inline bool EquipData::_internal_has_stiffdectime() const {
  bool value = (_has_bits_[1] & 0x00080000u) != 0;
  return value;
}
inline bool EquipData::has_stiffdectime() const {
  return _internal_has_stiffdectime();
}
inline void EquipData::clear_stiffdectime() {
  stiffdectime_ = 0u;
  _has_bits_[1] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_stiffdectime() const {
  return stiffdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::stiffdectime() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.stiffdectime)
  return _internal_stiffdectime();
}
inline void EquipData::_internal_set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00080000u;
  stiffdectime_ = value;
}
inline void EquipData::set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stiffdectime(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.stiffdectime)
}

// optional uint32 blowdectime = 53;
inline bool EquipData::_internal_has_blowdectime() const {
  bool value = (_has_bits_[1] & 0x00100000u) != 0;
  return value;
}
inline bool EquipData::has_blowdectime() const {
  return _internal_has_blowdectime();
}
inline void EquipData::clear_blowdectime() {
  blowdectime_ = 0u;
  _has_bits_[1] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_blowdectime() const {
  return blowdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::blowdectime() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.blowdectime)
  return _internal_blowdectime();
}
inline void EquipData::_internal_set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00100000u;
  blowdectime_ = value;
}
inline void EquipData::set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blowdectime(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.blowdectime)
}

// optional uint32 knockdectime = 54;
inline bool EquipData::_internal_has_knockdectime() const {
  bool value = (_has_bits_[1] & 0x00200000u) != 0;
  return value;
}
inline bool EquipData::has_knockdectime() const {
  return _internal_has_knockdectime();
}
inline void EquipData::clear_knockdectime() {
  knockdectime_ = 0u;
  _has_bits_[1] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_knockdectime() const {
  return knockdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::knockdectime() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.knockdectime)
  return _internal_knockdectime();
}
inline void EquipData::_internal_set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00200000u;
  knockdectime_ = value;
}
inline void EquipData::set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_knockdectime(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.knockdectime)
}

// optional uint32 floatdectime = 55;
inline bool EquipData::_internal_has_floatdectime() const {
  bool value = (_has_bits_[1] & 0x00400000u) != 0;
  return value;
}
inline bool EquipData::has_floatdectime() const {
  return _internal_has_floatdectime();
}
inline void EquipData::clear_floatdectime() {
  floatdectime_ = 0u;
  _has_bits_[1] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_floatdectime() const {
  return floatdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::floatdectime() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.floatdectime)
  return _internal_floatdectime();
}
inline void EquipData::_internal_set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00400000u;
  floatdectime_ = value;
}
inline void EquipData::set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_floatdectime(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.floatdectime)
}

// optional uint32 superhitdectime = 56;
inline bool EquipData::_internal_has_superhitdectime() const {
  bool value = (_has_bits_[1] & 0x00800000u) != 0;
  return value;
}
inline bool EquipData::has_superhitdectime() const {
  return _internal_has_superhitdectime();
}
inline void EquipData::clear_superhitdectime() {
  superhitdectime_ = 0u;
  _has_bits_[1] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::_internal_superhitdectime() const {
  return superhitdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipData::superhitdectime() const {
  // @@protoc_insertion_point(field_get:Obj.EquipData.superhitdectime)
  return _internal_superhitdectime();
}
inline void EquipData::_internal_set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00800000u;
  superhitdectime_ = value;
}
inline void EquipData::set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_superhitdectime(value);
  // @@protoc_insertion_point(field_set:Obj.EquipData.superhitdectime)
}

// -------------------------------------------------------------------

// EquipRandInfo

// optional .Obj.Equip8Prop type = 1;
inline bool EquipRandInfo::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool EquipRandInfo::has_type() const {
  return _internal_has_type();
}
inline void EquipRandInfo::clear_type() {
  type_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::Obj::Equip8Prop EquipRandInfo::_internal_type() const {
  return static_cast< ::Obj::Equip8Prop >(type_);
}
inline ::Obj::Equip8Prop EquipRandInfo::type() const {
  // @@protoc_insertion_point(field_get:Obj.EquipRandInfo.type)
  return _internal_type();
}
inline void EquipRandInfo::_internal_set_type(::Obj::Equip8Prop value) {
  assert(::Obj::Equip8Prop_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
}
inline void EquipRandInfo::set_type(::Obj::Equip8Prop value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Obj.EquipRandInfo.type)
}

// optional uint32 id = 2;
inline bool EquipRandInfo::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool EquipRandInfo::has_id() const {
  return _internal_has_id();
}
inline void EquipRandInfo::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipRandInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipRandInfo::id() const {
  // @@protoc_insertion_point(field_get:Obj.EquipRandInfo.id)
  return _internal_id();
}
inline void EquipRandInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void EquipRandInfo::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Obj.EquipRandInfo.id)
}

// optional uint32 value = 3;
inline bool EquipRandInfo::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool EquipRandInfo::has_value() const {
  return _internal_has_value();
}
inline void EquipRandInfo::clear_value() {
  value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipRandInfo::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EquipRandInfo::value() const {
  // @@protoc_insertion_point(field_get:Obj.EquipRandInfo.value)
  return _internal_value();
}
inline void EquipRandInfo::_internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
}
inline void EquipRandInfo::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:Obj.EquipRandInfo.value)
}

// -------------------------------------------------------------------

// CardEffectItem

// optional uint32 id = 1;
inline bool CardEffectItem::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CardEffectItem::has_id() const {
  return _internal_has_id();
}
inline void CardEffectItem::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardEffectItem::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardEffectItem::id() const {
  // @@protoc_insertion_point(field_get:Obj.CardEffectItem.id)
  return _internal_id();
}
inline void CardEffectItem::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void CardEffectItem::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Obj.CardEffectItem.id)
}

// optional uint32 trigger = 2;
inline bool CardEffectItem::_internal_has_trigger() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CardEffectItem::has_trigger() const {
  return _internal_has_trigger();
}
inline void CardEffectItem::clear_trigger() {
  trigger_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardEffectItem::_internal_trigger() const {
  return trigger_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardEffectItem::trigger() const {
  // @@protoc_insertion_point(field_get:Obj.CardEffectItem.trigger)
  return _internal_trigger();
}
inline void CardEffectItem::_internal_set_trigger(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  trigger_ = value;
}
inline void CardEffectItem::set_trigger(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_trigger(value);
  // @@protoc_insertion_point(field_set:Obj.CardEffectItem.trigger)
}

// optional uint32 value = 3;
inline bool CardEffectItem::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CardEffectItem::has_value() const {
  return _internal_has_value();
}
inline void CardEffectItem::clear_value() {
  value_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardEffectItem::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardEffectItem::value() const {
  // @@protoc_insertion_point(field_get:Obj.CardEffectItem.value)
  return _internal_value();
}
inline void CardEffectItem::_internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  value_ = value;
}
inline void CardEffectItem::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:Obj.CardEffectItem.value)
}

// optional string varname = 4;
inline bool CardEffectItem::_internal_has_varname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CardEffectItem::has_varname() const {
  return _internal_has_varname();
}
inline void CardEffectItem::clear_varname() {
  varname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CardEffectItem::varname() const {
  // @@protoc_insertion_point(field_get:Obj.CardEffectItem.varname)
  return _internal_varname();
}
inline void CardEffectItem::set_varname(const std::string& value) {
  _internal_set_varname(value);
  // @@protoc_insertion_point(field_set:Obj.CardEffectItem.varname)
}
inline std::string* CardEffectItem::mutable_varname() {
  // @@protoc_insertion_point(field_mutable:Obj.CardEffectItem.varname)
  return _internal_mutable_varname();
}
inline const std::string& CardEffectItem::_internal_varname() const {
  return varname_.GetNoArena();
}
inline void CardEffectItem::_internal_set_varname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  varname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CardEffectItem::set_varname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  varname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.CardEffectItem.varname)
}
inline void CardEffectItem::set_varname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  varname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.CardEffectItem.varname)
}
inline void CardEffectItem::set_varname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  varname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.CardEffectItem.varname)
}
inline std::string* CardEffectItem::_internal_mutable_varname() {
  _has_bits_[0] |= 0x00000001u;
  return varname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CardEffectItem::release_varname() {
  // @@protoc_insertion_point(field_release:Obj.CardEffectItem.varname)
  if (!_internal_has_varname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return varname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CardEffectItem::set_allocated_varname(std::string* varname) {
  if (varname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  varname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), varname);
  // @@protoc_insertion_point(field_set_allocated:Obj.CardEffectItem.varname)
}

// -------------------------------------------------------------------

// CardData

// optional uint32 cardtype = 1;
inline bool CardData::_internal_has_cardtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CardData::has_cardtype() const {
  return _internal_has_cardtype();
}
inline void CardData::clear_cardtype() {
  cardtype_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardData::_internal_cardtype() const {
  return cardtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardData::cardtype() const {
  // @@protoc_insertion_point(field_get:Obj.CardData.cardtype)
  return _internal_cardtype();
}
inline void CardData::_internal_set_cardtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  cardtype_ = value;
}
inline void CardData::set_cardtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cardtype(value);
  // @@protoc_insertion_point(field_set:Obj.CardData.cardtype)
}

// optional uint32 cardstar = 2;
inline bool CardData::_internal_has_cardstar() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CardData::has_cardstar() const {
  return _internal_has_cardstar();
}
inline void CardData::clear_cardstar() {
  cardstar_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardData::_internal_cardstar() const {
  return cardstar_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardData::cardstar() const {
  // @@protoc_insertion_point(field_get:Obj.CardData.cardstar)
  return _internal_cardstar();
}
inline void CardData::_internal_set_cardstar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  cardstar_ = value;
}
inline void CardData::set_cardstar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cardstar(value);
  // @@protoc_insertion_point(field_set:Obj.CardData.cardstar)
}

// optional uint32 cardgroup = 3;
inline bool CardData::_internal_has_cardgroup() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CardData::has_cardgroup() const {
  return _internal_has_cardgroup();
}
inline void CardData::clear_cardgroup() {
  cardgroup_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardData::_internal_cardgroup() const {
  return cardgroup_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardData::cardgroup() const {
  // @@protoc_insertion_point(field_get:Obj.CardData.cardgroup)
  return _internal_cardgroup();
}
inline void CardData::_internal_set_cardgroup(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  cardgroup_ = value;
}
inline void CardData::set_cardgroup(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cardgroup(value);
  // @@protoc_insertion_point(field_set:Obj.CardData.cardgroup)
}

// repeated .Obj.CardEffectItem base_effect = 4;
inline int CardData::_internal_base_effect_size() const {
  return base_effect_.size();
}
inline int CardData::base_effect_size() const {
  return _internal_base_effect_size();
}
inline void CardData::clear_base_effect() {
  base_effect_.Clear();
}
inline ::Obj::CardEffectItem* CardData::mutable_base_effect(int index) {
  // @@protoc_insertion_point(field_mutable:Obj.CardData.base_effect)
  return base_effect_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::CardEffectItem >*
CardData::mutable_base_effect() {
  // @@protoc_insertion_point(field_mutable_list:Obj.CardData.base_effect)
  return &base_effect_;
}
inline const ::Obj::CardEffectItem& CardData::_internal_base_effect(int index) const {
  return base_effect_.Get(index);
}
inline const ::Obj::CardEffectItem& CardData::base_effect(int index) const {
  // @@protoc_insertion_point(field_get:Obj.CardData.base_effect)
  return _internal_base_effect(index);
}
inline ::Obj::CardEffectItem* CardData::_internal_add_base_effect() {
  return base_effect_.Add();
}
inline ::Obj::CardEffectItem* CardData::add_base_effect() {
  // @@protoc_insertion_point(field_add:Obj.CardData.base_effect)
  return _internal_add_base_effect();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::CardEffectItem >&
CardData::base_effect() const {
  // @@protoc_insertion_point(field_list:Obj.CardData.base_effect)
  return base_effect_;
}

// repeated .Obj.CardEffectItem rand_effect = 5;
inline int CardData::_internal_rand_effect_size() const {
  return rand_effect_.size();
}
inline int CardData::rand_effect_size() const {
  return _internal_rand_effect_size();
}
inline void CardData::clear_rand_effect() {
  rand_effect_.Clear();
}
inline ::Obj::CardEffectItem* CardData::mutable_rand_effect(int index) {
  // @@protoc_insertion_point(field_mutable:Obj.CardData.rand_effect)
  return rand_effect_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::CardEffectItem >*
CardData::mutable_rand_effect() {
  // @@protoc_insertion_point(field_mutable_list:Obj.CardData.rand_effect)
  return &rand_effect_;
}
inline const ::Obj::CardEffectItem& CardData::_internal_rand_effect(int index) const {
  return rand_effect_.Get(index);
}
inline const ::Obj::CardEffectItem& CardData::rand_effect(int index) const {
  // @@protoc_insertion_point(field_get:Obj.CardData.rand_effect)
  return _internal_rand_effect(index);
}
inline ::Obj::CardEffectItem* CardData::_internal_add_rand_effect() {
  return rand_effect_.Add();
}
inline ::Obj::CardEffectItem* CardData::add_rand_effect() {
  // @@protoc_insertion_point(field_add:Obj.CardData.rand_effect)
  return _internal_add_rand_effect();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::CardEffectItem >&
CardData::rand_effect() const {
  // @@protoc_insertion_point(field_list:Obj.CardData.rand_effect)
  return rand_effect_;
}

// optional uint32 durability = 6;
inline bool CardData::_internal_has_durability() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CardData::has_durability() const {
  return _internal_has_durability();
}
inline void CardData::clear_durability() {
  durability_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardData::_internal_durability() const {
  return durability_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardData::durability() const {
  // @@protoc_insertion_point(field_get:Obj.CardData.durability)
  return _internal_durability();
}
inline void CardData::_internal_set_durability(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  durability_ = value;
}
inline void CardData::set_durability(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_durability(value);
  // @@protoc_insertion_point(field_set:Obj.CardData.durability)
}

// -------------------------------------------------------------------

// t_Object

// optional uint32 baseid = 1;
inline bool t_Object::_internal_has_baseid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool t_Object::has_baseid() const {
  return _internal_has_baseid();
}
inline void t_Object::clear_baseid() {
  baseid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_baseid() const {
  return baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::baseid() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.baseid)
  return _internal_baseid();
}
inline void t_Object::_internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  baseid_ = value;
}
inline void t_Object::set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseid(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.baseid)
}

// optional string thisid = 2;
inline bool t_Object::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool t_Object::has_thisid() const {
  return _internal_has_thisid();
}
inline void t_Object::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& t_Object::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.thisid)
  return _internal_thisid();
}
inline void t_Object::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.thisid)
}
inline std::string* t_Object::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.t_Object.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& t_Object::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void t_Object::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void t_Object::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.t_Object.thisid)
}
inline void t_Object::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.t_Object.thisid)
}
inline void t_Object::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.t_Object.thisid)
}
inline std::string* t_Object::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* t_Object::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.t_Object.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void t_Object::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.t_Object.thisid)
}

// optional .Obj.ObjectType type = 3;
inline bool t_Object::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool t_Object::has_type() const {
  return _internal_has_type();
}
inline void t_Object::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::Obj::ObjectType t_Object::_internal_type() const {
  return static_cast< ::Obj::ObjectType >(type_);
}
inline ::Obj::ObjectType t_Object::type() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.type)
  return _internal_type();
}
inline void t_Object::_internal_set_type(::Obj::ObjectType value) {
  assert(::Obj::ObjectType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  type_ = value;
}
inline void t_Object::set_type(::Obj::ObjectType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.type)
}

// optional .Obj.PackType packtype = 4;
inline bool t_Object::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool t_Object::has_packtype() const {
  return _internal_has_packtype();
}
inline void t_Object::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::Obj::PackType t_Object::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType t_Object::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.packtype)
  return _internal_packtype();
}
inline void t_Object::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  packtype_ = value;
}
inline void t_Object::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.packtype)
}

// optional string name = 5;
inline bool t_Object::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool t_Object::has_name() const {
  return _internal_has_name();
}
inline void t_Object::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& t_Object::name() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.name)
  return _internal_name();
}
inline void t_Object::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.name)
}
inline std::string* t_Object::mutable_name() {
  // @@protoc_insertion_point(field_mutable:Obj.t_Object.name)
  return _internal_mutable_name();
}
inline const std::string& t_Object::_internal_name() const {
  return name_.GetNoArena();
}
inline void t_Object::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void t_Object::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.t_Object.name)
}
inline void t_Object::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.t_Object.name)
}
inline void t_Object::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.t_Object.name)
}
inline std::string* t_Object::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000002u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* t_Object::release_name() {
  // @@protoc_insertion_point(field_release:Obj.t_Object.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void t_Object::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Obj.t_Object.name)
}

// optional uint32 num = 6;
inline bool t_Object::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool t_Object::has_num() const {
  return _internal_has_num();
}
inline void t_Object::clear_num() {
  num_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::num() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.num)
  return _internal_num();
}
inline void t_Object::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  num_ = value;
}
inline void t_Object::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.num)
}

// optional uint32 bind = 7;
inline bool t_Object::_internal_has_bind() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool t_Object::has_bind() const {
  return _internal_has_bind();
}
inline void t_Object::clear_bind() {
  bind_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_bind() const {
  return bind_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::bind() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.bind)
  return _internal_bind();
}
inline void t_Object::_internal_set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  bind_ = value;
}
inline void t_Object::set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bind(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.bind)
}

// optional uint32 grid_x = 8;
inline bool t_Object::_internal_has_grid_x() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool t_Object::has_grid_x() const {
  return _internal_has_grid_x();
}
inline void t_Object::clear_grid_x() {
  grid_x_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_grid_x() const {
  return grid_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::grid_x() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.grid_x)
  return _internal_grid_x();
}
inline void t_Object::_internal_set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  grid_x_ = value;
}
inline void t_Object::set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_grid_x(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.grid_x)
}

// optional uint32 grid_y = 9;
inline bool t_Object::_internal_has_grid_y() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool t_Object::has_grid_y() const {
  return _internal_has_grid_y();
}
inline void t_Object::clear_grid_y() {
  grid_y_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_grid_y() const {
  return grid_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::grid_y() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.grid_y)
  return _internal_grid_y();
}
inline void t_Object::_internal_set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  grid_y_ = value;
}
inline void t_Object::set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_grid_y(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.grid_y)
}

// optional uint32 quality = 10;
inline bool t_Object::_internal_has_quality() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool t_Object::has_quality() const {
  return _internal_has_quality();
}
inline void t_Object::clear_quality() {
  quality_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_quality() const {
  return quality_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::quality() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.quality)
  return _internal_quality();
}
inline void t_Object::_internal_set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  quality_ = value;
}
inline void t_Object::set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quality(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.quality)
}

// optional uint32 level = 11;
inline bool t_Object::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool t_Object::has_level() const {
  return _internal_has_level();
}
inline void t_Object::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::level() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.level)
  return _internal_level();
}
inline void t_Object::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  level_ = value;
}
inline void t_Object::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.level)
}

// optional uint32 timer = 12;
inline bool t_Object::_internal_has_timer() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool t_Object::has_timer() const {
  return _internal_has_timer();
}
inline void t_Object::clear_timer() {
  timer_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_timer() const {
  return timer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::timer() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.timer)
  return _internal_timer();
}
inline void t_Object::_internal_set_timer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  timer_ = value;
}
inline void t_Object::set_timer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_timer(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.timer)
}

// optional .Obj.EquipData equipprop = 13;
inline bool t_Object::_internal_has_equipprop() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || equipprop_ != nullptr);
  return value;
}
inline bool t_Object::has_equipprop() const {
  return _internal_has_equipprop();
}
inline void t_Object::clear_equipprop() {
  if (equipprop_ != nullptr) equipprop_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::Obj::EquipData& t_Object::_internal_equipprop() const {
  const ::Obj::EquipData* p = equipprop_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::EquipData*>(
      &::Obj::_EquipData_default_instance_);
}
inline const ::Obj::EquipData& t_Object::equipprop() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.equipprop)
  return _internal_equipprop();
}
inline ::Obj::EquipData* t_Object::release_equipprop() {
  // @@protoc_insertion_point(field_release:Obj.t_Object.equipprop)
  _has_bits_[0] &= ~0x00000004u;
  ::Obj::EquipData* temp = equipprop_;
  equipprop_ = nullptr;
  return temp;
}
inline ::Obj::EquipData* t_Object::_internal_mutable_equipprop() {
  _has_bits_[0] |= 0x00000004u;
  if (equipprop_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::EquipData>(GetArenaNoVirtual());
    equipprop_ = p;
  }
  return equipprop_;
}
inline ::Obj::EquipData* t_Object::mutable_equipprop() {
  // @@protoc_insertion_point(field_mutable:Obj.t_Object.equipprop)
  return _internal_mutable_equipprop();
}
inline void t_Object::set_allocated_equipprop(::Obj::EquipData* equipprop) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete equipprop_;
  }
  if (equipprop) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      equipprop = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, equipprop, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  equipprop_ = equipprop;
  // @@protoc_insertion_point(field_set_allocated:Obj.t_Object.equipprop)
}

// repeated .Obj.EquipRandInfo equiprand = 14;
inline int t_Object::_internal_equiprand_size() const {
  return equiprand_.size();
}
inline int t_Object::equiprand_size() const {
  return _internal_equiprand_size();
}
inline void t_Object::clear_equiprand() {
  equiprand_.Clear();
}
inline ::Obj::EquipRandInfo* t_Object::mutable_equiprand(int index) {
  // @@protoc_insertion_point(field_mutable:Obj.t_Object.equiprand)
  return equiprand_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::EquipRandInfo >*
t_Object::mutable_equiprand() {
  // @@protoc_insertion_point(field_mutable_list:Obj.t_Object.equiprand)
  return &equiprand_;
}
inline const ::Obj::EquipRandInfo& t_Object::_internal_equiprand(int index) const {
  return equiprand_.Get(index);
}
inline const ::Obj::EquipRandInfo& t_Object::equiprand(int index) const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.equiprand)
  return _internal_equiprand(index);
}
inline ::Obj::EquipRandInfo* t_Object::_internal_add_equiprand() {
  return equiprand_.Add();
}
inline ::Obj::EquipRandInfo* t_Object::add_equiprand() {
  // @@protoc_insertion_point(field_add:Obj.t_Object.equiprand)
  return _internal_add_equiprand();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::EquipRandInfo >&
t_Object::equiprand() const {
  // @@protoc_insertion_point(field_list:Obj.t_Object.equiprand)
  return equiprand_;
}

// optional uint32 nextusetime = 15;
inline bool t_Object::_internal_has_nextusetime() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool t_Object::has_nextusetime() const {
  return _internal_has_nextusetime();
}
inline void t_Object::clear_nextusetime() {
  nextusetime_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_nextusetime() const {
  return nextusetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::nextusetime() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.nextusetime)
  return _internal_nextusetime();
}
inline void t_Object::_internal_set_nextusetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  nextusetime_ = value;
}
inline void t_Object::set_nextusetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_nextusetime(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.nextusetime)
}

// optional .Obj.CardData card_data = 16;
inline bool t_Object::_internal_has_card_data() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || card_data_ != nullptr);
  return value;
}
inline bool t_Object::has_card_data() const {
  return _internal_has_card_data();
}
inline void t_Object::clear_card_data() {
  if (card_data_ != nullptr) card_data_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::Obj::CardData& t_Object::_internal_card_data() const {
  const ::Obj::CardData* p = card_data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::CardData*>(
      &::Obj::_CardData_default_instance_);
}
inline const ::Obj::CardData& t_Object::card_data() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.card_data)
  return _internal_card_data();
}
inline ::Obj::CardData* t_Object::release_card_data() {
  // @@protoc_insertion_point(field_release:Obj.t_Object.card_data)
  _has_bits_[0] &= ~0x00000008u;
  ::Obj::CardData* temp = card_data_;
  card_data_ = nullptr;
  return temp;
}
inline ::Obj::CardData* t_Object::_internal_mutable_card_data() {
  _has_bits_[0] |= 0x00000008u;
  if (card_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::CardData>(GetArenaNoVirtual());
    card_data_ = p;
  }
  return card_data_;
}
inline ::Obj::CardData* t_Object::mutable_card_data() {
  // @@protoc_insertion_point(field_mutable:Obj.t_Object.card_data)
  return _internal_mutable_card_data();
}
inline void t_Object::set_allocated_card_data(::Obj::CardData* card_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete card_data_;
  }
  if (card_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      card_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, card_data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  card_data_ = card_data;
  // @@protoc_insertion_point(field_set_allocated:Obj.t_Object.card_data)
}

// optional uint32 lock_end_time = 17;
inline bool t_Object::_internal_has_lock_end_time() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool t_Object::has_lock_end_time() const {
  return _internal_has_lock_end_time();
}
inline void t_Object::clear_lock_end_time() {
  lock_end_time_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_lock_end_time() const {
  return lock_end_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::lock_end_time() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.lock_end_time)
  return _internal_lock_end_time();
}
inline void t_Object::_internal_set_lock_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  lock_end_time_ = value;
}
inline void t_Object::set_lock_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lock_end_time(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.lock_end_time)
}

// optional uint32 tradetime = 18;
inline bool t_Object::_internal_has_tradetime() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool t_Object::has_tradetime() const {
  return _internal_has_tradetime();
}
inline void t_Object::clear_tradetime() {
  tradetime_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::_internal_tradetime() const {
  return tradetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_Object::tradetime() const {
  // @@protoc_insertion_point(field_get:Obj.t_Object.tradetime)
  return _internal_tradetime();
}
inline void t_Object::_internal_set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  tradetime_ = value;
}
inline void t_Object::set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tradetime(value);
  // @@protoc_insertion_point(field_set:Obj.t_Object.tradetime)
}

// -------------------------------------------------------------------

// PrizeBase

// optional uint32 id = 1;
inline bool PrizeBase::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PrizeBase::has_id() const {
  return _internal_has_id();
}
inline void PrizeBase::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PrizeBase::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PrizeBase::id() const {
  // @@protoc_insertion_point(field_get:Obj.PrizeBase.id)
  return _internal_id();
}
inline void PrizeBase::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void PrizeBase::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Obj.PrizeBase.id)
}

// optional uint32 quantity = 2;
inline bool PrizeBase::_internal_has_quantity() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PrizeBase::has_quantity() const {
  return _internal_has_quantity();
}
inline void PrizeBase::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PrizeBase::_internal_quantity() const {
  return quantity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PrizeBase::quantity() const {
  // @@protoc_insertion_point(field_get:Obj.PrizeBase.quantity)
  return _internal_quantity();
}
inline void PrizeBase::_internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quantity_ = value;
}
inline void PrizeBase::set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:Obj.PrizeBase.quantity)
}

// -------------------------------------------------------------------

// VIPCardInfo

// optional uint64 remaintime = 1;
inline bool VIPCardInfo::_internal_has_remaintime() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool VIPCardInfo::has_remaintime() const {
  return _internal_has_remaintime();
}
inline void VIPCardInfo::clear_remaintime() {
  remaintime_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VIPCardInfo::_internal_remaintime() const {
  return remaintime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VIPCardInfo::remaintime() const {
  // @@protoc_insertion_point(field_get:Obj.VIPCardInfo.remaintime)
  return _internal_remaintime();
}
inline void VIPCardInfo::_internal_set_remaintime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  remaintime_ = value;
}
inline void VIPCardInfo::set_remaintime(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_remaintime(value);
  // @@protoc_insertion_point(field_set:Obj.VIPCardInfo.remaintime)
}

// optional uint32 raffcount = 2;
inline bool VIPCardInfo::_internal_has_raffcount() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool VIPCardInfo::has_raffcount() const {
  return _internal_has_raffcount();
}
inline void VIPCardInfo::clear_raffcount() {
  raffcount_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VIPCardInfo::_internal_raffcount() const {
  return raffcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VIPCardInfo::raffcount() const {
  // @@protoc_insertion_point(field_get:Obj.VIPCardInfo.raffcount)
  return _internal_raffcount();
}
inline void VIPCardInfo::_internal_set_raffcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  raffcount_ = value;
}
inline void VIPCardInfo::set_raffcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_raffcount(value);
  // @@protoc_insertion_point(field_set:Obj.VIPCardInfo.raffcount)
}

// optional uint32 total_raffcount = 3;
inline bool VIPCardInfo::_internal_has_total_raffcount() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool VIPCardInfo::has_total_raffcount() const {
  return _internal_has_total_raffcount();
}
inline void VIPCardInfo::clear_total_raffcount() {
  total_raffcount_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VIPCardInfo::_internal_total_raffcount() const {
  return total_raffcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VIPCardInfo::total_raffcount() const {
  // @@protoc_insertion_point(field_get:Obj.VIPCardInfo.total_raffcount)
  return _internal_total_raffcount();
}
inline void VIPCardInfo::_internal_set_total_raffcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  total_raffcount_ = value;
}
inline void VIPCardInfo::set_total_raffcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_raffcount(value);
  // @@protoc_insertion_point(field_set:Obj.VIPCardInfo.total_raffcount)
}

// optional uint32 dayprize_state = 4;
inline bool VIPCardInfo::_internal_has_dayprize_state() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool VIPCardInfo::has_dayprize_state() const {
  return _internal_has_dayprize_state();
}
inline void VIPCardInfo::clear_dayprize_state() {
  dayprize_state_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VIPCardInfo::_internal_dayprize_state() const {
  return dayprize_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VIPCardInfo::dayprize_state() const {
  // @@protoc_insertion_point(field_get:Obj.VIPCardInfo.dayprize_state)
  return _internal_dayprize_state();
}
inline void VIPCardInfo::_internal_set_dayprize_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  dayprize_state_ = value;
}
inline void VIPCardInfo::set_dayprize_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dayprize_state(value);
  // @@protoc_insertion_point(field_set:Obj.VIPCardInfo.dayprize_state)
}

// repeated .Obj.PrizeBase arrprize = 5;
inline int VIPCardInfo::_internal_arrprize_size() const {
  return arrprize_.size();
}
inline int VIPCardInfo::arrprize_size() const {
  return _internal_arrprize_size();
}
inline void VIPCardInfo::clear_arrprize() {
  arrprize_.Clear();
}
inline ::Obj::PrizeBase* VIPCardInfo::mutable_arrprize(int index) {
  // @@protoc_insertion_point(field_mutable:Obj.VIPCardInfo.arrprize)
  return arrprize_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::PrizeBase >*
VIPCardInfo::mutable_arrprize() {
  // @@protoc_insertion_point(field_mutable_list:Obj.VIPCardInfo.arrprize)
  return &arrprize_;
}
inline const ::Obj::PrizeBase& VIPCardInfo::_internal_arrprize(int index) const {
  return arrprize_.Get(index);
}
inline const ::Obj::PrizeBase& VIPCardInfo::arrprize(int index) const {
  // @@protoc_insertion_point(field_get:Obj.VIPCardInfo.arrprize)
  return _internal_arrprize(index);
}
inline ::Obj::PrizeBase* VIPCardInfo::_internal_add_arrprize() {
  return arrprize_.Add();
}
inline ::Obj::PrizeBase* VIPCardInfo::add_arrprize() {
  // @@protoc_insertion_point(field_add:Obj.VIPCardInfo.arrprize)
  return _internal_add_arrprize();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::PrizeBase >&
VIPCardInfo::arrprize() const {
  // @@protoc_insertion_point(field_list:Obj.VIPCardInfo.arrprize)
  return arrprize_;
}

// optional uint32 objraffcount = 6;
inline bool VIPCardInfo::_internal_has_objraffcount() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool VIPCardInfo::has_objraffcount() const {
  return _internal_has_objraffcount();
}
inline void VIPCardInfo::clear_objraffcount() {
  objraffcount_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VIPCardInfo::_internal_objraffcount() const {
  return objraffcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VIPCardInfo::objraffcount() const {
  // @@protoc_insertion_point(field_get:Obj.VIPCardInfo.objraffcount)
  return _internal_objraffcount();
}
inline void VIPCardInfo::_internal_set_objraffcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  objraffcount_ = value;
}
inline void VIPCardInfo::set_objraffcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_objraffcount(value);
  // @@protoc_insertion_point(field_set:Obj.VIPCardInfo.objraffcount)
}

// -------------------------------------------------------------------

// MSG_RefreshObjs_SC

// repeated .Obj.t_Object objs = 1;
inline int MSG_RefreshObjs_SC::_internal_objs_size() const {
  return objs_.size();
}
inline int MSG_RefreshObjs_SC::objs_size() const {
  return _internal_objs_size();
}
inline void MSG_RefreshObjs_SC::clear_objs() {
  objs_.Clear();
}
inline ::Obj::t_Object* MSG_RefreshObjs_SC::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_RefreshObjs_SC.objs)
  return objs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >*
MSG_RefreshObjs_SC::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:Obj.MSG_RefreshObjs_SC.objs)
  return &objs_;
}
inline const ::Obj::t_Object& MSG_RefreshObjs_SC::_internal_objs(int index) const {
  return objs_.Get(index);
}
inline const ::Obj::t_Object& MSG_RefreshObjs_SC::objs(int index) const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RefreshObjs_SC.objs)
  return _internal_objs(index);
}
inline ::Obj::t_Object* MSG_RefreshObjs_SC::_internal_add_objs() {
  return objs_.Add();
}
inline ::Obj::t_Object* MSG_RefreshObjs_SC::add_objs() {
  // @@protoc_insertion_point(field_add:Obj.MSG_RefreshObjs_SC.objs)
  return _internal_add_objs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >&
MSG_RefreshObjs_SC::objs() const {
  // @@protoc_insertion_point(field_list:Obj.MSG_RefreshObjs_SC.objs)
  return objs_;
}

// optional bool show_addnew_anim = 2 [default = true];
inline bool MSG_RefreshObjs_SC::_internal_has_show_addnew_anim() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RefreshObjs_SC::has_show_addnew_anim() const {
  return _internal_has_show_addnew_anim();
}
inline void MSG_RefreshObjs_SC::clear_show_addnew_anim() {
  show_addnew_anim_ = true;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_RefreshObjs_SC::_internal_show_addnew_anim() const {
  return show_addnew_anim_;
}
inline bool MSG_RefreshObjs_SC::show_addnew_anim() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RefreshObjs_SC.show_addnew_anim)
  return _internal_show_addnew_anim();
}
inline void MSG_RefreshObjs_SC::_internal_set_show_addnew_anim(bool value) {
  _has_bits_[0] |= 0x00000001u;
  show_addnew_anim_ = value;
}
inline void MSG_RefreshObjs_SC::set_show_addnew_anim(bool value) {
  _internal_set_show_addnew_anim(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_RefreshObjs_SC.show_addnew_anim)
}

// -------------------------------------------------------------------

// MSG_PackData_SC

// required .Obj.PackType packtype = 1;
inline bool MSG_PackData_SC::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_PackData_SC::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_PackData_SC::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::Obj::PackType MSG_PackData_SC::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_PackData_SC::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackData_SC.packtype)
  return _internal_packtype();
}
inline void MSG_PackData_SC::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  packtype_ = value;
}
inline void MSG_PackData_SC::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_PackData_SC.packtype)
}

// optional uint32 width = 2;
inline bool MSG_PackData_SC::_internal_has_width() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_PackData_SC::has_width() const {
  return _internal_has_width();
}
inline void MSG_PackData_SC::clear_width() {
  width_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackData_SC::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackData_SC::width() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackData_SC.width)
  return _internal_width();
}
inline void MSG_PackData_SC::_internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  width_ = value;
}
inline void MSG_PackData_SC::set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_PackData_SC.width)
}

// optional uint32 height = 3;
inline bool MSG_PackData_SC::_internal_has_height() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_PackData_SC::has_height() const {
  return _internal_has_height();
}
inline void MSG_PackData_SC::clear_height() {
  height_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackData_SC::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackData_SC::height() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackData_SC.height)
  return _internal_height();
}
inline void MSG_PackData_SC::_internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  height_ = value;
}
inline void MSG_PackData_SC::set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_PackData_SC.height)
}

// optional uint32 validsize = 4;
inline bool MSG_PackData_SC::_internal_has_validsize() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_PackData_SC::has_validsize() const {
  return _internal_has_validsize();
}
inline void MSG_PackData_SC::clear_validsize() {
  validsize_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackData_SC::_internal_validsize() const {
  return validsize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackData_SC::validsize() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackData_SC.validsize)
  return _internal_validsize();
}
inline void MSG_PackData_SC::_internal_set_validsize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  validsize_ = value;
}
inline void MSG_PackData_SC::set_validsize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_validsize(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_PackData_SC.validsize)
}

// optional .Obj.MSG_RefreshObjs_SC objects = 5;
inline bool MSG_PackData_SC::_internal_has_objects() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || objects_ != nullptr);
  return value;
}
inline bool MSG_PackData_SC::has_objects() const {
  return _internal_has_objects();
}
inline void MSG_PackData_SC::clear_objects() {
  if (objects_ != nullptr) objects_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::Obj::MSG_RefreshObjs_SC& MSG_PackData_SC::_internal_objects() const {
  const ::Obj::MSG_RefreshObjs_SC* p = objects_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::MSG_RefreshObjs_SC*>(
      &::Obj::_MSG_RefreshObjs_SC_default_instance_);
}
inline const ::Obj::MSG_RefreshObjs_SC& MSG_PackData_SC::objects() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackData_SC.objects)
  return _internal_objects();
}
inline ::Obj::MSG_RefreshObjs_SC* MSG_PackData_SC::release_objects() {
  // @@protoc_insertion_point(field_release:Obj.MSG_PackData_SC.objects)
  _has_bits_[0] &= ~0x00000001u;
  ::Obj::MSG_RefreshObjs_SC* temp = objects_;
  objects_ = nullptr;
  return temp;
}
inline ::Obj::MSG_RefreshObjs_SC* MSG_PackData_SC::_internal_mutable_objects() {
  _has_bits_[0] |= 0x00000001u;
  if (objects_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::MSG_RefreshObjs_SC>(GetArenaNoVirtual());
    objects_ = p;
  }
  return objects_;
}
inline ::Obj::MSG_RefreshObjs_SC* MSG_PackData_SC::mutable_objects() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_PackData_SC.objects)
  return _internal_mutable_objects();
}
inline void MSG_PackData_SC::set_allocated_objects(::Obj::MSG_RefreshObjs_SC* objects) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete objects_;
  }
  if (objects) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      objects = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, objects, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  objects_ = objects;
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_PackData_SC.objects)
}

// optional uint32 unlockcount = 6;
inline bool MSG_PackData_SC::_internal_has_unlockcount() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_PackData_SC::has_unlockcount() const {
  return _internal_has_unlockcount();
}
inline void MSG_PackData_SC::clear_unlockcount() {
  unlockcount_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackData_SC::_internal_unlockcount() const {
  return unlockcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackData_SC::unlockcount() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackData_SC.unlockcount)
  return _internal_unlockcount();
}
inline void MSG_PackData_SC::_internal_set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  unlockcount_ = value;
}
inline void MSG_PackData_SC::set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_unlockcount(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_PackData_SC.unlockcount)
}

// -------------------------------------------------------------------

// MSG_WearEquip_CS

// optional string thisid = 1;
inline bool MSG_WearEquip_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_WearEquip_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_WearEquip_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_WearEquip_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_WearEquip_CS.thisid)
  return _internal_thisid();
}
inline void MSG_WearEquip_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_WearEquip_CS.thisid)
}
inline std::string* MSG_WearEquip_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_WearEquip_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_WearEquip_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_WearEquip_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_WearEquip_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_WearEquip_CS.thisid)
}
inline void MSG_WearEquip_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_WearEquip_CS.thisid)
}
inline void MSG_WearEquip_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_WearEquip_CS.thisid)
}
inline std::string* MSG_WearEquip_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_WearEquip_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_WearEquip_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_WearEquip_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_WearEquip_CS.thisid)
}

// -------------------------------------------------------------------

// MSG_WearEquip_SC

// optional string thisid = 1;
inline bool MSG_WearEquip_SC::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_WearEquip_SC::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_WearEquip_SC::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_WearEquip_SC::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_WearEquip_SC.thisid)
  return _internal_thisid();
}
inline void MSG_WearEquip_SC::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_WearEquip_SC.thisid)
}
inline std::string* MSG_WearEquip_SC::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_WearEquip_SC.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_WearEquip_SC::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_WearEquip_SC::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_WearEquip_SC::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_WearEquip_SC.thisid)
}
inline void MSG_WearEquip_SC::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_WearEquip_SC.thisid)
}
inline void MSG_WearEquip_SC::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_WearEquip_SC.thisid)
}
inline std::string* MSG_WearEquip_SC::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_WearEquip_SC::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_WearEquip_SC.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_WearEquip_SC::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_WearEquip_SC.thisid)
}

// -------------------------------------------------------------------

// MSG_RemoveObject_SC

// repeated string ids = 1;
inline int MSG_RemoveObject_SC::_internal_ids_size() const {
  return ids_.size();
}
inline int MSG_RemoveObject_SC::ids_size() const {
  return _internal_ids_size();
}
inline void MSG_RemoveObject_SC::clear_ids() {
  ids_.Clear();
}
inline std::string* MSG_RemoveObject_SC::add_ids() {
  // @@protoc_insertion_point(field_add_mutable:Obj.MSG_RemoveObject_SC.ids)
  return _internal_add_ids();
}
inline const std::string& MSG_RemoveObject_SC::_internal_ids(int index) const {
  return ids_.Get(index);
}
inline const std::string& MSG_RemoveObject_SC::ids(int index) const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RemoveObject_SC.ids)
  return _internal_ids(index);
}
inline std::string* MSG_RemoveObject_SC::mutable_ids(int index) {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_RemoveObject_SC.ids)
  return ids_.Mutable(index);
}
inline void MSG_RemoveObject_SC::set_ids(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:Obj.MSG_RemoveObject_SC.ids)
  ids_.Mutable(index)->assign(value);
}
inline void MSG_RemoveObject_SC::set_ids(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:Obj.MSG_RemoveObject_SC.ids)
  ids_.Mutable(index)->assign(std::move(value));
}
inline void MSG_RemoveObject_SC::set_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Obj.MSG_RemoveObject_SC.ids)
}
inline void MSG_RemoveObject_SC::set_ids(int index, const char* value, size_t size) {
  ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_RemoveObject_SC.ids)
}
inline std::string* MSG_RemoveObject_SC::_internal_add_ids() {
  return ids_.Add();
}
inline void MSG_RemoveObject_SC::add_ids(const std::string& value) {
  ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Obj.MSG_RemoveObject_SC.ids)
}
inline void MSG_RemoveObject_SC::add_ids(std::string&& value) {
  ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Obj.MSG_RemoveObject_SC.ids)
}
inline void MSG_RemoveObject_SC::add_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Obj.MSG_RemoveObject_SC.ids)
}
inline void MSG_RemoveObject_SC::add_ids(const char* value, size_t size) {
  ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Obj.MSG_RemoveObject_SC.ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MSG_RemoveObject_SC::ids() const {
  // @@protoc_insertion_point(field_list:Obj.MSG_RemoveObject_SC.ids)
  return ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MSG_RemoveObject_SC::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:Obj.MSG_RemoveObject_SC.ids)
  return &ids_;
}

// -------------------------------------------------------------------

// MSG_UnwearEquip_CS

// optional string thisid = 1;
inline bool MSG_UnwearEquip_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_UnwearEquip_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_UnwearEquip_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_UnwearEquip_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_UnwearEquip_CS.thisid)
  return _internal_thisid();
}
inline void MSG_UnwearEquip_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_UnwearEquip_CS.thisid)
}
inline std::string* MSG_UnwearEquip_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_UnwearEquip_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_UnwearEquip_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_UnwearEquip_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_UnwearEquip_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_UnwearEquip_CS.thisid)
}
inline void MSG_UnwearEquip_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_UnwearEquip_CS.thisid)
}
inline void MSG_UnwearEquip_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_UnwearEquip_CS.thisid)
}
inline std::string* MSG_UnwearEquip_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_UnwearEquip_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_UnwearEquip_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_UnwearEquip_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_UnwearEquip_CS.thisid)
}

// -------------------------------------------------------------------

// MSG_UnwearEquip_SC

// optional string thisid = 1;
inline bool MSG_UnwearEquip_SC::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_UnwearEquip_SC::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_UnwearEquip_SC::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_UnwearEquip_SC::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_UnwearEquip_SC.thisid)
  return _internal_thisid();
}
inline void MSG_UnwearEquip_SC::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_UnwearEquip_SC.thisid)
}
inline std::string* MSG_UnwearEquip_SC::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_UnwearEquip_SC.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_UnwearEquip_SC::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_UnwearEquip_SC::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_UnwearEquip_SC::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_UnwearEquip_SC.thisid)
}
inline void MSG_UnwearEquip_SC::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_UnwearEquip_SC.thisid)
}
inline void MSG_UnwearEquip_SC::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_UnwearEquip_SC.thisid)
}
inline std::string* MSG_UnwearEquip_SC::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_UnwearEquip_SC::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_UnwearEquip_SC.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_UnwearEquip_SC::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_UnwearEquip_SC.thisid)
}

// -------------------------------------------------------------------

// MSG_ReqCheckItemDueTime_CS

// -------------------------------------------------------------------

// MSG_ReqUseObject_CS

// optional string thisid = 1;
inline bool MSG_ReqUseObject_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqUseObject_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqUseObject_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqUseObject_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqUseObject_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqUseObject_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqUseObject_CS.thisid)
}
inline std::string* MSG_ReqUseObject_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqUseObject_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqUseObject_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqUseObject_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqUseObject_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqUseObject_CS.thisid)
}
inline void MSG_ReqUseObject_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqUseObject_CS.thisid)
}
inline void MSG_ReqUseObject_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqUseObject_CS.thisid)
}
inline std::string* MSG_ReqUseObject_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqUseObject_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqUseObject_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqUseObject_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqUseObject_CS.thisid)
}

// optional uint32 num = 2 [default = 1];
inline bool MSG_ReqUseObject_CS::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqUseObject_CS::has_num() const {
  return _internal_has_num();
}
inline void MSG_ReqUseObject_CS::clear_num() {
  num_ = 1u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqUseObject_CS::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqUseObject_CS::num() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqUseObject_CS.num)
  return _internal_num();
}
inline void MSG_ReqUseObject_CS::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_ = value;
}
inline void MSG_ReqUseObject_CS::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqUseObject_CS.num)
}

// -------------------------------------------------------------------

// MSG_ReqUseObject_Special_CS

// optional string thisid = 1;
inline bool MSG_ReqUseObject_Special_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqUseObject_Special_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqUseObject_Special_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqUseObject_Special_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqUseObject_Special_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqUseObject_Special_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqUseObject_Special_CS.thisid)
}
inline std::string* MSG_ReqUseObject_Special_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqUseObject_Special_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqUseObject_Special_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqUseObject_Special_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqUseObject_Special_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqUseObject_Special_CS.thisid)
}
inline void MSG_ReqUseObject_Special_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqUseObject_Special_CS.thisid)
}
inline void MSG_ReqUseObject_Special_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqUseObject_Special_CS.thisid)
}
inline std::string* MSG_ReqUseObject_Special_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqUseObject_Special_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqUseObject_Special_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqUseObject_Special_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqUseObject_Special_CS.thisid)
}

// optional uint32 num = 2 [default = 1];
inline bool MSG_ReqUseObject_Special_CS::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_ReqUseObject_Special_CS::has_num() const {
  return _internal_has_num();
}
inline void MSG_ReqUseObject_Special_CS::clear_num() {
  num_ = 1u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqUseObject_Special_CS::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqUseObject_Special_CS::num() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqUseObject_Special_CS.num)
  return _internal_num();
}
inline void MSG_ReqUseObject_Special_CS::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  num_ = value;
}
inline void MSG_ReqUseObject_Special_CS::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqUseObject_Special_CS.num)
}

// optional uint64 npcid = 3;
inline bool MSG_ReqUseObject_Special_CS::_internal_has_npcid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqUseObject_Special_CS::has_npcid() const {
  return _internal_has_npcid();
}
inline void MSG_ReqUseObject_Special_CS::clear_npcid() {
  npcid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_ReqUseObject_Special_CS::_internal_npcid() const {
  return npcid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_ReqUseObject_Special_CS::npcid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqUseObject_Special_CS.npcid)
  return _internal_npcid();
}
inline void MSG_ReqUseObject_Special_CS::_internal_set_npcid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  npcid_ = value;
}
inline void MSG_ReqUseObject_Special_CS::set_npcid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_npcid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqUseObject_Special_CS.npcid)
}

// optional float posx = 4;
inline bool MSG_ReqUseObject_Special_CS::_internal_has_posx() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqUseObject_Special_CS::has_posx() const {
  return _internal_has_posx();
}
inline void MSG_ReqUseObject_Special_CS::clear_posx() {
  posx_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float MSG_ReqUseObject_Special_CS::_internal_posx() const {
  return posx_;
}
inline float MSG_ReqUseObject_Special_CS::posx() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqUseObject_Special_CS.posx)
  return _internal_posx();
}
inline void MSG_ReqUseObject_Special_CS::_internal_set_posx(float value) {
  _has_bits_[0] |= 0x00000004u;
  posx_ = value;
}
inline void MSG_ReqUseObject_Special_CS::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqUseObject_Special_CS.posx)
}

// optional float posy = 5;
inline bool MSG_ReqUseObject_Special_CS::_internal_has_posy() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqUseObject_Special_CS::has_posy() const {
  return _internal_has_posy();
}
inline void MSG_ReqUseObject_Special_CS::clear_posy() {
  posy_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float MSG_ReqUseObject_Special_CS::_internal_posy() const {
  return posy_;
}
inline float MSG_ReqUseObject_Special_CS::posy() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqUseObject_Special_CS.posy)
  return _internal_posy();
}
inline void MSG_ReqUseObject_Special_CS::_internal_set_posy(float value) {
  _has_bits_[0] |= 0x00000008u;
  posy_ = value;
}
inline void MSG_ReqUseObject_Special_CS::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqUseObject_Special_CS.posy)
}

// -------------------------------------------------------------------

// MSG_PackUnlock_CS

// required .Obj.PackType packtype = 1;
inline bool MSG_PackUnlock_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_PackUnlock_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_PackUnlock_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Obj::PackType MSG_PackUnlock_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_PackUnlock_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackUnlock_CS.packtype)
  return _internal_packtype();
}
inline void MSG_PackUnlock_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  packtype_ = value;
}
inline void MSG_PackUnlock_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_PackUnlock_CS.packtype)
}

// -------------------------------------------------------------------

// MSG_PackUnlock_SC

// required .Obj.PackType packtype = 1;
inline bool MSG_PackUnlock_SC::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_PackUnlock_SC::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_PackUnlock_SC::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Obj::PackType MSG_PackUnlock_SC::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_PackUnlock_SC::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackUnlock_SC.packtype)
  return _internal_packtype();
}
inline void MSG_PackUnlock_SC::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  packtype_ = value;
}
inline void MSG_PackUnlock_SC::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_PackUnlock_SC.packtype)
}

// optional uint32 unlockcount = 2;
inline bool MSG_PackUnlock_SC::_internal_has_unlockcount() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_PackUnlock_SC::has_unlockcount() const {
  return _internal_has_unlockcount();
}
inline void MSG_PackUnlock_SC::clear_unlockcount() {
  unlockcount_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackUnlock_SC::_internal_unlockcount() const {
  return unlockcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackUnlock_SC::unlockcount() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackUnlock_SC.unlockcount)
  return _internal_unlockcount();
}
inline void MSG_PackUnlock_SC::_internal_set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  unlockcount_ = value;
}
inline void MSG_PackUnlock_SC::set_unlockcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_unlockcount(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_PackUnlock_SC.unlockcount)
}

// optional uint32 maxsize = 3;
inline bool MSG_PackUnlock_SC::_internal_has_maxsize() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_PackUnlock_SC::has_maxsize() const {
  return _internal_has_maxsize();
}
inline void MSG_PackUnlock_SC::clear_maxsize() {
  maxsize_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackUnlock_SC::_internal_maxsize() const {
  return maxsize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PackUnlock_SC::maxsize() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackUnlock_SC.maxsize)
  return _internal_maxsize();
}
inline void MSG_PackUnlock_SC::_internal_set_maxsize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  maxsize_ = value;
}
inline void MSG_PackUnlock_SC::set_maxsize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxsize(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_PackUnlock_SC.maxsize)
}

// optional bool result = 4;
inline bool MSG_PackUnlock_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_PackUnlock_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_PackUnlock_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool MSG_PackUnlock_SC::_internal_result() const {
  return result_;
}
inline bool MSG_PackUnlock_SC::result() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_PackUnlock_SC.result)
  return _internal_result();
}
inline void MSG_PackUnlock_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000008u;
  result_ = value;
}
inline void MSG_PackUnlock_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_PackUnlock_SC.result)
}

// -------------------------------------------------------------------

// MSG_MergeObjs_CS

// required .Obj.PackType packtype = 1;
inline bool MSG_MergeObjs_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_MergeObjs_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_MergeObjs_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Obj::PackType MSG_MergeObjs_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_MergeObjs_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_MergeObjs_CS.packtype)
  return _internal_packtype();
}
inline void MSG_MergeObjs_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  packtype_ = value;
}
inline void MSG_MergeObjs_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_MergeObjs_CS.packtype)
}

// repeated string srcthisids = 2;
inline int MSG_MergeObjs_CS::_internal_srcthisids_size() const {
  return srcthisids_.size();
}
inline int MSG_MergeObjs_CS::srcthisids_size() const {
  return _internal_srcthisids_size();
}
inline void MSG_MergeObjs_CS::clear_srcthisids() {
  srcthisids_.Clear();
}
inline std::string* MSG_MergeObjs_CS::add_srcthisids() {
  // @@protoc_insertion_point(field_add_mutable:Obj.MSG_MergeObjs_CS.srcthisids)
  return _internal_add_srcthisids();
}
inline const std::string& MSG_MergeObjs_CS::_internal_srcthisids(int index) const {
  return srcthisids_.Get(index);
}
inline const std::string& MSG_MergeObjs_CS::srcthisids(int index) const {
  // @@protoc_insertion_point(field_get:Obj.MSG_MergeObjs_CS.srcthisids)
  return _internal_srcthisids(index);
}
inline std::string* MSG_MergeObjs_CS::mutable_srcthisids(int index) {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_MergeObjs_CS.srcthisids)
  return srcthisids_.Mutable(index);
}
inline void MSG_MergeObjs_CS::set_srcthisids(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:Obj.MSG_MergeObjs_CS.srcthisids)
  srcthisids_.Mutable(index)->assign(value);
}
inline void MSG_MergeObjs_CS::set_srcthisids(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:Obj.MSG_MergeObjs_CS.srcthisids)
  srcthisids_.Mutable(index)->assign(std::move(value));
}
inline void MSG_MergeObjs_CS::set_srcthisids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  srcthisids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Obj.MSG_MergeObjs_CS.srcthisids)
}
inline void MSG_MergeObjs_CS::set_srcthisids(int index, const char* value, size_t size) {
  srcthisids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_MergeObjs_CS.srcthisids)
}
inline std::string* MSG_MergeObjs_CS::_internal_add_srcthisids() {
  return srcthisids_.Add();
}
inline void MSG_MergeObjs_CS::add_srcthisids(const std::string& value) {
  srcthisids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Obj.MSG_MergeObjs_CS.srcthisids)
}
inline void MSG_MergeObjs_CS::add_srcthisids(std::string&& value) {
  srcthisids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Obj.MSG_MergeObjs_CS.srcthisids)
}
inline void MSG_MergeObjs_CS::add_srcthisids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  srcthisids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Obj.MSG_MergeObjs_CS.srcthisids)
}
inline void MSG_MergeObjs_CS::add_srcthisids(const char* value, size_t size) {
  srcthisids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Obj.MSG_MergeObjs_CS.srcthisids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MSG_MergeObjs_CS::srcthisids() const {
  // @@protoc_insertion_point(field_list:Obj.MSG_MergeObjs_CS.srcthisids)
  return srcthisids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MSG_MergeObjs_CS::mutable_srcthisids() {
  // @@protoc_insertion_point(field_mutable_list:Obj.MSG_MergeObjs_CS.srcthisids)
  return &srcthisids_;
}

// repeated string dstthisids = 3;
inline int MSG_MergeObjs_CS::_internal_dstthisids_size() const {
  return dstthisids_.size();
}
inline int MSG_MergeObjs_CS::dstthisids_size() const {
  return _internal_dstthisids_size();
}
inline void MSG_MergeObjs_CS::clear_dstthisids() {
  dstthisids_.Clear();
}
inline std::string* MSG_MergeObjs_CS::add_dstthisids() {
  // @@protoc_insertion_point(field_add_mutable:Obj.MSG_MergeObjs_CS.dstthisids)
  return _internal_add_dstthisids();
}
inline const std::string& MSG_MergeObjs_CS::_internal_dstthisids(int index) const {
  return dstthisids_.Get(index);
}
inline const std::string& MSG_MergeObjs_CS::dstthisids(int index) const {
  // @@protoc_insertion_point(field_get:Obj.MSG_MergeObjs_CS.dstthisids)
  return _internal_dstthisids(index);
}
inline std::string* MSG_MergeObjs_CS::mutable_dstthisids(int index) {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_MergeObjs_CS.dstthisids)
  return dstthisids_.Mutable(index);
}
inline void MSG_MergeObjs_CS::set_dstthisids(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:Obj.MSG_MergeObjs_CS.dstthisids)
  dstthisids_.Mutable(index)->assign(value);
}
inline void MSG_MergeObjs_CS::set_dstthisids(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:Obj.MSG_MergeObjs_CS.dstthisids)
  dstthisids_.Mutable(index)->assign(std::move(value));
}
inline void MSG_MergeObjs_CS::set_dstthisids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  dstthisids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Obj.MSG_MergeObjs_CS.dstthisids)
}
inline void MSG_MergeObjs_CS::set_dstthisids(int index, const char* value, size_t size) {
  dstthisids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_MergeObjs_CS.dstthisids)
}
inline std::string* MSG_MergeObjs_CS::_internal_add_dstthisids() {
  return dstthisids_.Add();
}
inline void MSG_MergeObjs_CS::add_dstthisids(const std::string& value) {
  dstthisids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Obj.MSG_MergeObjs_CS.dstthisids)
}
inline void MSG_MergeObjs_CS::add_dstthisids(std::string&& value) {
  dstthisids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Obj.MSG_MergeObjs_CS.dstthisids)
}
inline void MSG_MergeObjs_CS::add_dstthisids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  dstthisids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Obj.MSG_MergeObjs_CS.dstthisids)
}
inline void MSG_MergeObjs_CS::add_dstthisids(const char* value, size_t size) {
  dstthisids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Obj.MSG_MergeObjs_CS.dstthisids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MSG_MergeObjs_CS::dstthisids() const {
  // @@protoc_insertion_point(field_list:Obj.MSG_MergeObjs_CS.dstthisids)
  return dstthisids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MSG_MergeObjs_CS::mutable_dstthisids() {
  // @@protoc_insertion_point(field_mutable_list:Obj.MSG_MergeObjs_CS.dstthisids)
  return &dstthisids_;
}

// optional .Obj.PackType dst_packtype = 4;
inline bool MSG_MergeObjs_CS::_internal_has_dst_packtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_MergeObjs_CS::has_dst_packtype() const {
  return _internal_has_dst_packtype();
}
inline void MSG_MergeObjs_CS::clear_dst_packtype() {
  dst_packtype_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::Obj::PackType MSG_MergeObjs_CS::_internal_dst_packtype() const {
  return static_cast< ::Obj::PackType >(dst_packtype_);
}
inline ::Obj::PackType MSG_MergeObjs_CS::dst_packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_MergeObjs_CS.dst_packtype)
  return _internal_dst_packtype();
}
inline void MSG_MergeObjs_CS::_internal_set_dst_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  dst_packtype_ = value;
}
inline void MSG_MergeObjs_CS::set_dst_packtype(::Obj::PackType value) {
  _internal_set_dst_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_MergeObjs_CS.dst_packtype)
}

// -------------------------------------------------------------------

// MSG_MergeObjs_SC

// required .Obj.PackType packtype = 1;
inline bool MSG_MergeObjs_SC::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_MergeObjs_SC::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_MergeObjs_SC::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Obj::PackType MSG_MergeObjs_SC::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_MergeObjs_SC::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_MergeObjs_SC.packtype)
  return _internal_packtype();
}
inline void MSG_MergeObjs_SC::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  packtype_ = value;
}
inline void MSG_MergeObjs_SC::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_MergeObjs_SC.packtype)
}

// optional bool result = 2;
inline bool MSG_MergeObjs_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_MergeObjs_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_MergeObjs_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_MergeObjs_SC::_internal_result() const {
  return result_;
}
inline bool MSG_MergeObjs_SC::result() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_MergeObjs_SC.result)
  return _internal_result();
}
inline void MSG_MergeObjs_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void MSG_MergeObjs_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_MergeObjs_SC.result)
}

// optional .Obj.PackType dst_packtype = 3;
inline bool MSG_MergeObjs_SC::_internal_has_dst_packtype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_MergeObjs_SC::has_dst_packtype() const {
  return _internal_has_dst_packtype();
}
inline void MSG_MergeObjs_SC::clear_dst_packtype() {
  dst_packtype_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::Obj::PackType MSG_MergeObjs_SC::_internal_dst_packtype() const {
  return static_cast< ::Obj::PackType >(dst_packtype_);
}
inline ::Obj::PackType MSG_MergeObjs_SC::dst_packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_MergeObjs_SC.dst_packtype)
  return _internal_dst_packtype();
}
inline void MSG_MergeObjs_SC::_internal_set_dst_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  dst_packtype_ = value;
}
inline void MSG_MergeObjs_SC::set_dst_packtype(::Obj::PackType value) {
  _internal_set_dst_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_MergeObjs_SC.dst_packtype)
}

// -------------------------------------------------------------------

// t_TidyPackInfo

// optional string thisid = 1;
inline bool t_TidyPackInfo::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool t_TidyPackInfo::has_thisid() const {
  return _internal_has_thisid();
}
inline void t_TidyPackInfo::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& t_TidyPackInfo::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.t_TidyPackInfo.thisid)
  return _internal_thisid();
}
inline void t_TidyPackInfo::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.t_TidyPackInfo.thisid)
}
inline std::string* t_TidyPackInfo::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.t_TidyPackInfo.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& t_TidyPackInfo::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void t_TidyPackInfo::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void t_TidyPackInfo::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.t_TidyPackInfo.thisid)
}
inline void t_TidyPackInfo::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.t_TidyPackInfo.thisid)
}
inline void t_TidyPackInfo::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.t_TidyPackInfo.thisid)
}
inline std::string* t_TidyPackInfo::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* t_TidyPackInfo::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.t_TidyPackInfo.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void t_TidyPackInfo::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.t_TidyPackInfo.thisid)
}

// optional uint32 grid_x = 2;
inline bool t_TidyPackInfo::_internal_has_grid_x() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool t_TidyPackInfo::has_grid_x() const {
  return _internal_has_grid_x();
}
inline void t_TidyPackInfo::clear_grid_x() {
  grid_x_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_TidyPackInfo::_internal_grid_x() const {
  return grid_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_TidyPackInfo::grid_x() const {
  // @@protoc_insertion_point(field_get:Obj.t_TidyPackInfo.grid_x)
  return _internal_grid_x();
}
inline void t_TidyPackInfo::_internal_set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  grid_x_ = value;
}
inline void t_TidyPackInfo::set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_grid_x(value);
  // @@protoc_insertion_point(field_set:Obj.t_TidyPackInfo.grid_x)
}

// optional uint32 grid_y = 3;
inline bool t_TidyPackInfo::_internal_has_grid_y() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool t_TidyPackInfo::has_grid_y() const {
  return _internal_has_grid_y();
}
inline void t_TidyPackInfo::clear_grid_y() {
  grid_y_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_TidyPackInfo::_internal_grid_y() const {
  return grid_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 t_TidyPackInfo::grid_y() const {
  // @@protoc_insertion_point(field_get:Obj.t_TidyPackInfo.grid_y)
  return _internal_grid_y();
}
inline void t_TidyPackInfo::_internal_set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  grid_y_ = value;
}
inline void t_TidyPackInfo::set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_grid_y(value);
  // @@protoc_insertion_point(field_set:Obj.t_TidyPackInfo.grid_y)
}

// -------------------------------------------------------------------

// MSG_TidyPack_CS

// required .Obj.PackType packtype = 1;
inline bool MSG_TidyPack_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_TidyPack_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_TidyPack_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Obj::PackType MSG_TidyPack_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_TidyPack_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_TidyPack_CS.packtype)
  return _internal_packtype();
}
inline void MSG_TidyPack_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  packtype_ = value;
}
inline void MSG_TidyPack_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_TidyPack_CS.packtype)
}

// repeated .Obj.t_TidyPackInfo infos = 2;
inline int MSG_TidyPack_CS::_internal_infos_size() const {
  return infos_.size();
}
inline int MSG_TidyPack_CS::infos_size() const {
  return _internal_infos_size();
}
inline void MSG_TidyPack_CS::clear_infos() {
  infos_.Clear();
}
inline ::Obj::t_TidyPackInfo* MSG_TidyPack_CS::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_TidyPack_CS.infos)
  return infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_TidyPackInfo >*
MSG_TidyPack_CS::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:Obj.MSG_TidyPack_CS.infos)
  return &infos_;
}
inline const ::Obj::t_TidyPackInfo& MSG_TidyPack_CS::_internal_infos(int index) const {
  return infos_.Get(index);
}
inline const ::Obj::t_TidyPackInfo& MSG_TidyPack_CS::infos(int index) const {
  // @@protoc_insertion_point(field_get:Obj.MSG_TidyPack_CS.infos)
  return _internal_infos(index);
}
inline ::Obj::t_TidyPackInfo* MSG_TidyPack_CS::_internal_add_infos() {
  return infos_.Add();
}
inline ::Obj::t_TidyPackInfo* MSG_TidyPack_CS::add_infos() {
  // @@protoc_insertion_point(field_add:Obj.MSG_TidyPack_CS.infos)
  return _internal_add_infos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_TidyPackInfo >&
MSG_TidyPack_CS::infos() const {
  // @@protoc_insertion_point(field_list:Obj.MSG_TidyPack_CS.infos)
  return infos_;
}

// -------------------------------------------------------------------

// MSG_TidyPack_SC

// required .Obj.PackType packtype = 1;
inline bool MSG_TidyPack_SC::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_TidyPack_SC::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_TidyPack_SC::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Obj::PackType MSG_TidyPack_SC::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_TidyPack_SC::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_TidyPack_SC.packtype)
  return _internal_packtype();
}
inline void MSG_TidyPack_SC::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  packtype_ = value;
}
inline void MSG_TidyPack_SC::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_TidyPack_SC.packtype)
}

// optional bool result = 2;
inline bool MSG_TidyPack_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_TidyPack_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_TidyPack_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_TidyPack_SC::_internal_result() const {
  return result_;
}
inline bool MSG_TidyPack_SC::result() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_TidyPack_SC.result)
  return _internal_result();
}
inline void MSG_TidyPack_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void MSG_TidyPack_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_TidyPack_SC.result)
}

// -------------------------------------------------------------------

// MSG_ReqSellObject_CS

// optional string thisid = 1;
inline bool MSG_ReqSellObject_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSellObject_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqSellObject_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqSellObject_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSellObject_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqSellObject_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSellObject_CS.thisid)
}
inline std::string* MSG_ReqSellObject_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqSellObject_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqSellObject_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqSellObject_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqSellObject_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqSellObject_CS.thisid)
}
inline void MSG_ReqSellObject_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqSellObject_CS.thisid)
}
inline void MSG_ReqSellObject_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqSellObject_CS.thisid)
}
inline std::string* MSG_ReqSellObject_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqSellObject_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqSellObject_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqSellObject_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqSellObject_CS.thisid)
}

// optional uint32 num = 2 [default = 1];
inline bool MSG_ReqSellObject_CS::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqSellObject_CS::has_num() const {
  return _internal_has_num();
}
inline void MSG_ReqSellObject_CS::clear_num() {
  num_ = 1u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSellObject_CS::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSellObject_CS::num() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSellObject_CS.num)
  return _internal_num();
}
inline void MSG_ReqSellObject_CS::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_ = value;
}
inline void MSG_ReqSellObject_CS::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSellObject_CS.num)
}

// optional string passwd = 3;
inline bool MSG_ReqSellObject_CS::_internal_has_passwd() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqSellObject_CS::has_passwd() const {
  return _internal_has_passwd();
}
inline void MSG_ReqSellObject_CS::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_ReqSellObject_CS::passwd() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSellObject_CS.passwd)
  return _internal_passwd();
}
inline void MSG_ReqSellObject_CS::set_passwd(const std::string& value) {
  _internal_set_passwd(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSellObject_CS.passwd)
}
inline std::string* MSG_ReqSellObject_CS::mutable_passwd() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqSellObject_CS.passwd)
  return _internal_mutable_passwd();
}
inline const std::string& MSG_ReqSellObject_CS::_internal_passwd() const {
  return passwd_.GetNoArena();
}
inline void MSG_ReqSellObject_CS::_internal_set_passwd(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqSellObject_CS::set_passwd(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqSellObject_CS.passwd)
}
inline void MSG_ReqSellObject_CS::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqSellObject_CS.passwd)
}
inline void MSG_ReqSellObject_CS::set_passwd(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqSellObject_CS.passwd)
}
inline std::string* MSG_ReqSellObject_CS::_internal_mutable_passwd() {
  _has_bits_[0] |= 0x00000002u;
  return passwd_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqSellObject_CS::release_passwd() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqSellObject_CS.passwd)
  if (!_internal_has_passwd()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return passwd_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqSellObject_CS::set_allocated_passwd(std::string* passwd) {
  if (passwd != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  passwd_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqSellObject_CS.passwd)
}

// -------------------------------------------------------------------

// MSG_ReqMoveObject_CS

// optional string thisid = 1;
inline bool MSG_ReqMoveObject_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqMoveObject_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqMoveObject_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqMoveObject_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqMoveObject_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqMoveObject_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqMoveObject_CS.thisid)
}
inline std::string* MSG_ReqMoveObject_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqMoveObject_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqMoveObject_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqMoveObject_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqMoveObject_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqMoveObject_CS.thisid)
}
inline void MSG_ReqMoveObject_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqMoveObject_CS.thisid)
}
inline void MSG_ReqMoveObject_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqMoveObject_CS.thisid)
}
inline std::string* MSG_ReqMoveObject_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqMoveObject_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqMoveObject_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqMoveObject_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqMoveObject_CS.thisid)
}

// optional uint32 grid_x = 2;
inline bool MSG_ReqMoveObject_CS::_internal_has_grid_x() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqMoveObject_CS::has_grid_x() const {
  return _internal_has_grid_x();
}
inline void MSG_ReqMoveObject_CS::clear_grid_x() {
  grid_x_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqMoveObject_CS::_internal_grid_x() const {
  return grid_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqMoveObject_CS::grid_x() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqMoveObject_CS.grid_x)
  return _internal_grid_x();
}
inline void MSG_ReqMoveObject_CS::_internal_set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  grid_x_ = value;
}
inline void MSG_ReqMoveObject_CS::set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_grid_x(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqMoveObject_CS.grid_x)
}

// optional uint32 grid_y = 3;
inline bool MSG_ReqMoveObject_CS::_internal_has_grid_y() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqMoveObject_CS::has_grid_y() const {
  return _internal_has_grid_y();
}
inline void MSG_ReqMoveObject_CS::clear_grid_y() {
  grid_y_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqMoveObject_CS::_internal_grid_y() const {
  return grid_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqMoveObject_CS::grid_y() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqMoveObject_CS.grid_y)
  return _internal_grid_y();
}
inline void MSG_ReqMoveObject_CS::_internal_set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  grid_y_ = value;
}
inline void MSG_ReqMoveObject_CS::set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_grid_y(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqMoveObject_CS.grid_y)
}

// required .Obj.PackType packtype = 4;
inline bool MSG_ReqMoveObject_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqMoveObject_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_ReqMoveObject_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::Obj::PackType MSG_ReqMoveObject_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_ReqMoveObject_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqMoveObject_CS.packtype)
  return _internal_packtype();
}
inline void MSG_ReqMoveObject_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  packtype_ = value;
}
inline void MSG_ReqMoveObject_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqMoveObject_CS.packtype)
}

// optional .Obj.PackType dst_packtype = 5;
inline bool MSG_ReqMoveObject_CS::_internal_has_dst_packtype() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_ReqMoveObject_CS::has_dst_packtype() const {
  return _internal_has_dst_packtype();
}
inline void MSG_ReqMoveObject_CS::clear_dst_packtype() {
  dst_packtype_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::Obj::PackType MSG_ReqMoveObject_CS::_internal_dst_packtype() const {
  return static_cast< ::Obj::PackType >(dst_packtype_);
}
inline ::Obj::PackType MSG_ReqMoveObject_CS::dst_packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqMoveObject_CS.dst_packtype)
  return _internal_dst_packtype();
}
inline void MSG_ReqMoveObject_CS::_internal_set_dst_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  dst_packtype_ = value;
}
inline void MSG_ReqMoveObject_CS::set_dst_packtype(::Obj::PackType value) {
  _internal_set_dst_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqMoveObject_CS.dst_packtype)
}

// -------------------------------------------------------------------

// MSG_ReqSwapObject_CS

// optional string src_thisid = 1;
inline bool MSG_ReqSwapObject_CS::_internal_has_src_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSwapObject_CS::has_src_thisid() const {
  return _internal_has_src_thisid();
}
inline void MSG_ReqSwapObject_CS::clear_src_thisid() {
  src_thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqSwapObject_CS::src_thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSwapObject_CS.src_thisid)
  return _internal_src_thisid();
}
inline void MSG_ReqSwapObject_CS::set_src_thisid(const std::string& value) {
  _internal_set_src_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSwapObject_CS.src_thisid)
}
inline std::string* MSG_ReqSwapObject_CS::mutable_src_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqSwapObject_CS.src_thisid)
  return _internal_mutable_src_thisid();
}
inline const std::string& MSG_ReqSwapObject_CS::_internal_src_thisid() const {
  return src_thisid_.GetNoArena();
}
inline void MSG_ReqSwapObject_CS::_internal_set_src_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  src_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqSwapObject_CS::set_src_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  src_thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqSwapObject_CS.src_thisid)
}
inline void MSG_ReqSwapObject_CS::set_src_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  src_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqSwapObject_CS.src_thisid)
}
inline void MSG_ReqSwapObject_CS::set_src_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  src_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqSwapObject_CS.src_thisid)
}
inline std::string* MSG_ReqSwapObject_CS::_internal_mutable_src_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return src_thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqSwapObject_CS::release_src_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqSwapObject_CS.src_thisid)
  if (!_internal_has_src_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return src_thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqSwapObject_CS::set_allocated_src_thisid(std::string* src_thisid) {
  if (src_thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  src_thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), src_thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqSwapObject_CS.src_thisid)
}

// optional string dst_thisid = 2;
inline bool MSG_ReqSwapObject_CS::_internal_has_dst_thisid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqSwapObject_CS::has_dst_thisid() const {
  return _internal_has_dst_thisid();
}
inline void MSG_ReqSwapObject_CS::clear_dst_thisid() {
  dst_thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_ReqSwapObject_CS::dst_thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSwapObject_CS.dst_thisid)
  return _internal_dst_thisid();
}
inline void MSG_ReqSwapObject_CS::set_dst_thisid(const std::string& value) {
  _internal_set_dst_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSwapObject_CS.dst_thisid)
}
inline std::string* MSG_ReqSwapObject_CS::mutable_dst_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqSwapObject_CS.dst_thisid)
  return _internal_mutable_dst_thisid();
}
inline const std::string& MSG_ReqSwapObject_CS::_internal_dst_thisid() const {
  return dst_thisid_.GetNoArena();
}
inline void MSG_ReqSwapObject_CS::_internal_set_dst_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  dst_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqSwapObject_CS::set_dst_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  dst_thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqSwapObject_CS.dst_thisid)
}
inline void MSG_ReqSwapObject_CS::set_dst_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  dst_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqSwapObject_CS.dst_thisid)
}
inline void MSG_ReqSwapObject_CS::set_dst_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  dst_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqSwapObject_CS.dst_thisid)
}
inline std::string* MSG_ReqSwapObject_CS::_internal_mutable_dst_thisid() {
  _has_bits_[0] |= 0x00000002u;
  return dst_thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqSwapObject_CS::release_dst_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqSwapObject_CS.dst_thisid)
  if (!_internal_has_dst_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return dst_thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqSwapObject_CS::set_allocated_dst_thisid(std::string* dst_thisid) {
  if (dst_thisid != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dst_thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dst_thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqSwapObject_CS.dst_thisid)
}

// optional .Obj.PackType dst_packtype = 3;
inline bool MSG_ReqSwapObject_CS::_internal_has_dst_packtype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqSwapObject_CS::has_dst_packtype() const {
  return _internal_has_dst_packtype();
}
inline void MSG_ReqSwapObject_CS::clear_dst_packtype() {
  dst_packtype_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::Obj::PackType MSG_ReqSwapObject_CS::_internal_dst_packtype() const {
  return static_cast< ::Obj::PackType >(dst_packtype_);
}
inline ::Obj::PackType MSG_ReqSwapObject_CS::dst_packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSwapObject_CS.dst_packtype)
  return _internal_dst_packtype();
}
inline void MSG_ReqSwapObject_CS::_internal_set_dst_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  dst_packtype_ = value;
}
inline void MSG_ReqSwapObject_CS::set_dst_packtype(::Obj::PackType value) {
  _internal_set_dst_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSwapObject_CS.dst_packtype)
}

// required .Obj.PackType packtype = 4;
inline bool MSG_ReqSwapObject_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqSwapObject_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_ReqSwapObject_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::Obj::PackType MSG_ReqSwapObject_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_ReqSwapObject_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSwapObject_CS.packtype)
  return _internal_packtype();
}
inline void MSG_ReqSwapObject_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  packtype_ = value;
}
inline void MSG_ReqSwapObject_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSwapObject_CS.packtype)
}

// -------------------------------------------------------------------

// MSG_ReqDestroyObject_CS

// optional string thisid = 1;
inline bool MSG_ReqDestroyObject_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqDestroyObject_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqDestroyObject_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqDestroyObject_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqDestroyObject_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqDestroyObject_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqDestroyObject_CS.thisid)
}
inline std::string* MSG_ReqDestroyObject_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqDestroyObject_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqDestroyObject_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqDestroyObject_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqDestroyObject_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqDestroyObject_CS.thisid)
}
inline void MSG_ReqDestroyObject_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqDestroyObject_CS.thisid)
}
inline void MSG_ReqDestroyObject_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqDestroyObject_CS.thisid)
}
inline std::string* MSG_ReqDestroyObject_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqDestroyObject_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqDestroyObject_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqDestroyObject_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqDestroyObject_CS.thisid)
}

// required .Obj.PackType packtype = 2;
inline bool MSG_ReqDestroyObject_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqDestroyObject_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_ReqDestroyObject_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::Obj::PackType MSG_ReqDestroyObject_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_ReqDestroyObject_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqDestroyObject_CS.packtype)
  return _internal_packtype();
}
inline void MSG_ReqDestroyObject_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  packtype_ = value;
}
inline void MSG_ReqDestroyObject_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqDestroyObject_CS.packtype)
}

// optional string passwd = 3;
inline bool MSG_ReqDestroyObject_CS::_internal_has_passwd() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqDestroyObject_CS::has_passwd() const {
  return _internal_has_passwd();
}
inline void MSG_ReqDestroyObject_CS::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_ReqDestroyObject_CS::passwd() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqDestroyObject_CS.passwd)
  return _internal_passwd();
}
inline void MSG_ReqDestroyObject_CS::set_passwd(const std::string& value) {
  _internal_set_passwd(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqDestroyObject_CS.passwd)
}
inline std::string* MSG_ReqDestroyObject_CS::mutable_passwd() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqDestroyObject_CS.passwd)
  return _internal_mutable_passwd();
}
inline const std::string& MSG_ReqDestroyObject_CS::_internal_passwd() const {
  return passwd_.GetNoArena();
}
inline void MSG_ReqDestroyObject_CS::_internal_set_passwd(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqDestroyObject_CS::set_passwd(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqDestroyObject_CS.passwd)
}
inline void MSG_ReqDestroyObject_CS::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqDestroyObject_CS.passwd)
}
inline void MSG_ReqDestroyObject_CS::set_passwd(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqDestroyObject_CS.passwd)
}
inline std::string* MSG_ReqDestroyObject_CS::_internal_mutable_passwd() {
  _has_bits_[0] |= 0x00000002u;
  return passwd_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqDestroyObject_CS::release_passwd() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqDestroyObject_CS.passwd)
  if (!_internal_has_passwd()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return passwd_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqDestroyObject_CS::set_allocated_passwd(std::string* passwd) {
  if (passwd != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  passwd_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqDestroyObject_CS.passwd)
}

// -------------------------------------------------------------------

// MSG_ReqPutOnCard_CS

// optional string thisid = 1;
inline bool MSG_ReqPutOnCard_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqPutOnCard_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqPutOnCard_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqPutOnCard_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqPutOnCard_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqPutOnCard_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqPutOnCard_CS.thisid)
}
inline std::string* MSG_ReqPutOnCard_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqPutOnCard_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqPutOnCard_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqPutOnCard_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqPutOnCard_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqPutOnCard_CS.thisid)
}
inline void MSG_ReqPutOnCard_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqPutOnCard_CS.thisid)
}
inline void MSG_ReqPutOnCard_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqPutOnCard_CS.thisid)
}
inline std::string* MSG_ReqPutOnCard_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqPutOnCard_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqPutOnCard_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqPutOnCard_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqPutOnCard_CS.thisid)
}

// optional uint32 grid_x = 2;
inline bool MSG_ReqPutOnCard_CS::_internal_has_grid_x() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqPutOnCard_CS::has_grid_x() const {
  return _internal_has_grid_x();
}
inline void MSG_ReqPutOnCard_CS::clear_grid_x() {
  grid_x_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOnCard_CS::_internal_grid_x() const {
  return grid_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOnCard_CS::grid_x() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqPutOnCard_CS.grid_x)
  return _internal_grid_x();
}
inline void MSG_ReqPutOnCard_CS::_internal_set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  grid_x_ = value;
}
inline void MSG_ReqPutOnCard_CS::set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_grid_x(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqPutOnCard_CS.grid_x)
}

// optional uint32 grid_y = 3;
inline bool MSG_ReqPutOnCard_CS::_internal_has_grid_y() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqPutOnCard_CS::has_grid_y() const {
  return _internal_has_grid_y();
}
inline void MSG_ReqPutOnCard_CS::clear_grid_y() {
  grid_y_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOnCard_CS::_internal_grid_y() const {
  return grid_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOnCard_CS::grid_y() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqPutOnCard_CS.grid_y)
  return _internal_grid_y();
}
inline void MSG_ReqPutOnCard_CS::_internal_set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  grid_y_ = value;
}
inline void MSG_ReqPutOnCard_CS::set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_grid_y(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqPutOnCard_CS.grid_y)
}

// optional .Obj.PackType packtype = 4;
inline bool MSG_ReqPutOnCard_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqPutOnCard_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_ReqPutOnCard_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::Obj::PackType MSG_ReqPutOnCard_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_ReqPutOnCard_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqPutOnCard_CS.packtype)
  return _internal_packtype();
}
inline void MSG_ReqPutOnCard_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  packtype_ = value;
}
inline void MSG_ReqPutOnCard_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqPutOnCard_CS.packtype)
}

// -------------------------------------------------------------------

// MSG_ReqPutOffCard_CS

// optional string thisid = 1;
inline bool MSG_ReqPutOffCard_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqPutOffCard_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqPutOffCard_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqPutOffCard_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqPutOffCard_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqPutOffCard_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqPutOffCard_CS.thisid)
}
inline std::string* MSG_ReqPutOffCard_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqPutOffCard_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqPutOffCard_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqPutOffCard_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqPutOffCard_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqPutOffCard_CS.thisid)
}
inline void MSG_ReqPutOffCard_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqPutOffCard_CS.thisid)
}
inline void MSG_ReqPutOffCard_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqPutOffCard_CS.thisid)
}
inline std::string* MSG_ReqPutOffCard_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqPutOffCard_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqPutOffCard_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqPutOffCard_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqPutOffCard_CS.thisid)
}

// optional uint32 grid_x = 2;
inline bool MSG_ReqPutOffCard_CS::_internal_has_grid_x() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqPutOffCard_CS::has_grid_x() const {
  return _internal_has_grid_x();
}
inline void MSG_ReqPutOffCard_CS::clear_grid_x() {
  grid_x_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOffCard_CS::_internal_grid_x() const {
  return grid_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOffCard_CS::grid_x() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqPutOffCard_CS.grid_x)
  return _internal_grid_x();
}
inline void MSG_ReqPutOffCard_CS::_internal_set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  grid_x_ = value;
}
inline void MSG_ReqPutOffCard_CS::set_grid_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_grid_x(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqPutOffCard_CS.grid_x)
}

// optional uint32 grid_y = 3;
inline bool MSG_ReqPutOffCard_CS::_internal_has_grid_y() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqPutOffCard_CS::has_grid_y() const {
  return _internal_has_grid_y();
}
inline void MSG_ReqPutOffCard_CS::clear_grid_y() {
  grid_y_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOffCard_CS::_internal_grid_y() const {
  return grid_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqPutOffCard_CS::grid_y() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqPutOffCard_CS.grid_y)
  return _internal_grid_y();
}
inline void MSG_ReqPutOffCard_CS::_internal_set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  grid_y_ = value;
}
inline void MSG_ReqPutOffCard_CS::set_grid_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_grid_y(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqPutOffCard_CS.grid_y)
}

// -------------------------------------------------------------------

// MSG_ReqSwapCard_CS

// optional string src_thisid = 1;
inline bool MSG_ReqSwapCard_CS::_internal_has_src_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSwapCard_CS::has_src_thisid() const {
  return _internal_has_src_thisid();
}
inline void MSG_ReqSwapCard_CS::clear_src_thisid() {
  src_thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqSwapCard_CS::src_thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSwapCard_CS.src_thisid)
  return _internal_src_thisid();
}
inline void MSG_ReqSwapCard_CS::set_src_thisid(const std::string& value) {
  _internal_set_src_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSwapCard_CS.src_thisid)
}
inline std::string* MSG_ReqSwapCard_CS::mutable_src_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqSwapCard_CS.src_thisid)
  return _internal_mutable_src_thisid();
}
inline const std::string& MSG_ReqSwapCard_CS::_internal_src_thisid() const {
  return src_thisid_.GetNoArena();
}
inline void MSG_ReqSwapCard_CS::_internal_set_src_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  src_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqSwapCard_CS::set_src_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  src_thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqSwapCard_CS.src_thisid)
}
inline void MSG_ReqSwapCard_CS::set_src_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  src_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqSwapCard_CS.src_thisid)
}
inline void MSG_ReqSwapCard_CS::set_src_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  src_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqSwapCard_CS.src_thisid)
}
inline std::string* MSG_ReqSwapCard_CS::_internal_mutable_src_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return src_thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqSwapCard_CS::release_src_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqSwapCard_CS.src_thisid)
  if (!_internal_has_src_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return src_thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqSwapCard_CS::set_allocated_src_thisid(std::string* src_thisid) {
  if (src_thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  src_thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), src_thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqSwapCard_CS.src_thisid)
}

// optional string dst_thisid = 2;
inline bool MSG_ReqSwapCard_CS::_internal_has_dst_thisid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqSwapCard_CS::has_dst_thisid() const {
  return _internal_has_dst_thisid();
}
inline void MSG_ReqSwapCard_CS::clear_dst_thisid() {
  dst_thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_ReqSwapCard_CS::dst_thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSwapCard_CS.dst_thisid)
  return _internal_dst_thisid();
}
inline void MSG_ReqSwapCard_CS::set_dst_thisid(const std::string& value) {
  _internal_set_dst_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSwapCard_CS.dst_thisid)
}
inline std::string* MSG_ReqSwapCard_CS::mutable_dst_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqSwapCard_CS.dst_thisid)
  return _internal_mutable_dst_thisid();
}
inline const std::string& MSG_ReqSwapCard_CS::_internal_dst_thisid() const {
  return dst_thisid_.GetNoArena();
}
inline void MSG_ReqSwapCard_CS::_internal_set_dst_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  dst_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqSwapCard_CS::set_dst_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  dst_thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqSwapCard_CS.dst_thisid)
}
inline void MSG_ReqSwapCard_CS::set_dst_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  dst_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqSwapCard_CS.dst_thisid)
}
inline void MSG_ReqSwapCard_CS::set_dst_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  dst_thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqSwapCard_CS.dst_thisid)
}
inline std::string* MSG_ReqSwapCard_CS::_internal_mutable_dst_thisid() {
  _has_bits_[0] |= 0x00000002u;
  return dst_thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqSwapCard_CS::release_dst_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqSwapCard_CS.dst_thisid)
  if (!_internal_has_dst_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return dst_thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqSwapCard_CS::set_allocated_dst_thisid(std::string* dst_thisid) {
  if (dst_thisid != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dst_thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dst_thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqSwapCard_CS.dst_thisid)
}

// -------------------------------------------------------------------

// MSG_ReqCardPackInfo_CS

// -------------------------------------------------------------------

// CardPackInfo

// optional uint32 gold_opened_num = 1;
inline bool CardPackInfo::_internal_has_gold_opened_num() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CardPackInfo::has_gold_opened_num() const {
  return _internal_has_gold_opened_num();
}
inline void CardPackInfo::clear_gold_opened_num() {
  gold_opened_num_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::_internal_gold_opened_num() const {
  return gold_opened_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::gold_opened_num() const {
  // @@protoc_insertion_point(field_get:Obj.CardPackInfo.gold_opened_num)
  return _internal_gold_opened_num();
}
inline void CardPackInfo::_internal_set_gold_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  gold_opened_num_ = value;
}
inline void CardPackInfo::set_gold_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gold_opened_num(value);
  // @@protoc_insertion_point(field_set:Obj.CardPackInfo.gold_opened_num)
}

// optional uint32 wood_opened_num = 2;
inline bool CardPackInfo::_internal_has_wood_opened_num() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CardPackInfo::has_wood_opened_num() const {
  return _internal_has_wood_opened_num();
}
inline void CardPackInfo::clear_wood_opened_num() {
  wood_opened_num_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::_internal_wood_opened_num() const {
  return wood_opened_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::wood_opened_num() const {
  // @@protoc_insertion_point(field_get:Obj.CardPackInfo.wood_opened_num)
  return _internal_wood_opened_num();
}
inline void CardPackInfo::_internal_set_wood_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  wood_opened_num_ = value;
}
inline void CardPackInfo::set_wood_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_wood_opened_num(value);
  // @@protoc_insertion_point(field_set:Obj.CardPackInfo.wood_opened_num)
}

// optional uint32 water_opened_num = 3;
inline bool CardPackInfo::_internal_has_water_opened_num() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CardPackInfo::has_water_opened_num() const {
  return _internal_has_water_opened_num();
}
inline void CardPackInfo::clear_water_opened_num() {
  water_opened_num_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::_internal_water_opened_num() const {
  return water_opened_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::water_opened_num() const {
  // @@protoc_insertion_point(field_get:Obj.CardPackInfo.water_opened_num)
  return _internal_water_opened_num();
}
inline void CardPackInfo::_internal_set_water_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  water_opened_num_ = value;
}
inline void CardPackInfo::set_water_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_water_opened_num(value);
  // @@protoc_insertion_point(field_set:Obj.CardPackInfo.water_opened_num)
}

// optional uint32 fire_opened_num = 4;
inline bool CardPackInfo::_internal_has_fire_opened_num() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CardPackInfo::has_fire_opened_num() const {
  return _internal_has_fire_opened_num();
}
inline void CardPackInfo::clear_fire_opened_num() {
  fire_opened_num_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::_internal_fire_opened_num() const {
  return fire_opened_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::fire_opened_num() const {
  // @@protoc_insertion_point(field_get:Obj.CardPackInfo.fire_opened_num)
  return _internal_fire_opened_num();
}
inline void CardPackInfo::_internal_set_fire_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  fire_opened_num_ = value;
}
inline void CardPackInfo::set_fire_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fire_opened_num(value);
  // @@protoc_insertion_point(field_set:Obj.CardPackInfo.fire_opened_num)
}

// optional uint32 earth_opened_num = 5;
inline bool CardPackInfo::_internal_has_earth_opened_num() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CardPackInfo::has_earth_opened_num() const {
  return _internal_has_earth_opened_num();
}
inline void CardPackInfo::clear_earth_opened_num() {
  earth_opened_num_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::_internal_earth_opened_num() const {
  return earth_opened_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::earth_opened_num() const {
  // @@protoc_insertion_point(field_get:Obj.CardPackInfo.earth_opened_num)
  return _internal_earth_opened_num();
}
inline void CardPackInfo::_internal_set_earth_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  earth_opened_num_ = value;
}
inline void CardPackInfo::set_earth_opened_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_earth_opened_num(value);
  // @@protoc_insertion_point(field_set:Obj.CardPackInfo.earth_opened_num)
}

// optional uint32 hero_baseid = 6;
inline bool CardPackInfo::_internal_has_hero_baseid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CardPackInfo::has_hero_baseid() const {
  return _internal_has_hero_baseid();
}
inline void CardPackInfo::clear_hero_baseid() {
  hero_baseid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::_internal_hero_baseid() const {
  return hero_baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CardPackInfo::hero_baseid() const {
  // @@protoc_insertion_point(field_get:Obj.CardPackInfo.hero_baseid)
  return _internal_hero_baseid();
}
inline void CardPackInfo::_internal_set_hero_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  hero_baseid_ = value;
}
inline void CardPackInfo::set_hero_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hero_baseid(value);
  // @@protoc_insertion_point(field_set:Obj.CardPackInfo.hero_baseid)
}

// repeated .Obj.t_Object objs = 7;
inline int CardPackInfo::_internal_objs_size() const {
  return objs_.size();
}
inline int CardPackInfo::objs_size() const {
  return _internal_objs_size();
}
inline void CardPackInfo::clear_objs() {
  objs_.Clear();
}
inline ::Obj::t_Object* CardPackInfo::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:Obj.CardPackInfo.objs)
  return objs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >*
CardPackInfo::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:Obj.CardPackInfo.objs)
  return &objs_;
}
inline const ::Obj::t_Object& CardPackInfo::_internal_objs(int index) const {
  return objs_.Get(index);
}
inline const ::Obj::t_Object& CardPackInfo::objs(int index) const {
  // @@protoc_insertion_point(field_get:Obj.CardPackInfo.objs)
  return _internal_objs(index);
}
inline ::Obj::t_Object* CardPackInfo::_internal_add_objs() {
  return objs_.Add();
}
inline ::Obj::t_Object* CardPackInfo::add_objs() {
  // @@protoc_insertion_point(field_add:Obj.CardPackInfo.objs)
  return _internal_add_objs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >&
CardPackInfo::objs() const {
  // @@protoc_insertion_point(field_list:Obj.CardPackInfo.objs)
  return objs_;
}

// -------------------------------------------------------------------

// MSG_RetCardPackInfo_SC

// optional .Obj.CardPackInfo data = 1;
inline bool MSG_RetCardPackInfo_SC::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool MSG_RetCardPackInfo_SC::has_data() const {
  return _internal_has_data();
}
inline void MSG_RetCardPackInfo_SC::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::Obj::CardPackInfo& MSG_RetCardPackInfo_SC::_internal_data() const {
  const ::Obj::CardPackInfo* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::CardPackInfo*>(
      &::Obj::_CardPackInfo_default_instance_);
}
inline const ::Obj::CardPackInfo& MSG_RetCardPackInfo_SC::data() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RetCardPackInfo_SC.data)
  return _internal_data();
}
inline ::Obj::CardPackInfo* MSG_RetCardPackInfo_SC::release_data() {
  // @@protoc_insertion_point(field_release:Obj.MSG_RetCardPackInfo_SC.data)
  _has_bits_[0] &= ~0x00000001u;
  ::Obj::CardPackInfo* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::Obj::CardPackInfo* MSG_RetCardPackInfo_SC::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::CardPackInfo>(GetArenaNoVirtual());
    data_ = p;
  }
  return data_;
}
inline ::Obj::CardPackInfo* MSG_RetCardPackInfo_SC::mutable_data() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_RetCardPackInfo_SC.data)
  return _internal_mutable_data();
}
inline void MSG_RetCardPackInfo_SC::set_allocated_data(::Obj::CardPackInfo* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_RetCardPackInfo_SC.data)
}

// -------------------------------------------------------------------

// MSG_ReqSplitObject_CS

// optional string thisid = 1;
inline bool MSG_ReqSplitObject_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSplitObject_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqSplitObject_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqSplitObject_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSplitObject_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqSplitObject_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSplitObject_CS.thisid)
}
inline std::string* MSG_ReqSplitObject_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqSplitObject_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqSplitObject_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqSplitObject_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqSplitObject_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqSplitObject_CS.thisid)
}
inline void MSG_ReqSplitObject_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqSplitObject_CS.thisid)
}
inline void MSG_ReqSplitObject_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqSplitObject_CS.thisid)
}
inline std::string* MSG_ReqSplitObject_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqSplitObject_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqSplitObject_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqSplitObject_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqSplitObject_CS.thisid)
}

// optional uint32 num = 2;
inline bool MSG_ReqSplitObject_CS::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqSplitObject_CS::has_num() const {
  return _internal_has_num();
}
inline void MSG_ReqSplitObject_CS::clear_num() {
  num_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSplitObject_CS::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSplitObject_CS::num() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSplitObject_CS.num)
  return _internal_num();
}
inline void MSG_ReqSplitObject_CS::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_ = value;
}
inline void MSG_ReqSplitObject_CS::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSplitObject_CS.num)
}

// optional .Obj.PackType packtype = 3;
inline bool MSG_ReqSplitObject_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqSplitObject_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_ReqSplitObject_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::Obj::PackType MSG_ReqSplitObject_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_ReqSplitObject_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqSplitObject_CS.packtype)
  return _internal_packtype();
}
inline void MSG_ReqSplitObject_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  packtype_ = value;
}
inline void MSG_ReqSplitObject_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqSplitObject_CS.packtype)
}

// -------------------------------------------------------------------

// MSG_ReqOpItemLock_CS

// optional string thisid = 1;
inline bool MSG_ReqOpItemLock_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqOpItemLock_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqOpItemLock_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqOpItemLock_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqOpItemLock_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqOpItemLock_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqOpItemLock_CS.thisid)
}
inline std::string* MSG_ReqOpItemLock_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqOpItemLock_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqOpItemLock_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqOpItemLock_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqOpItemLock_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqOpItemLock_CS.thisid)
}
inline void MSG_ReqOpItemLock_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqOpItemLock_CS.thisid)
}
inline void MSG_ReqOpItemLock_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqOpItemLock_CS.thisid)
}
inline std::string* MSG_ReqOpItemLock_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqOpItemLock_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqOpItemLock_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqOpItemLock_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqOpItemLock_CS.thisid)
}

// optional .Obj.PackType packtype = 2;
inline bool MSG_ReqOpItemLock_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqOpItemLock_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_ReqOpItemLock_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::Obj::PackType MSG_ReqOpItemLock_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_ReqOpItemLock_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqOpItemLock_CS.packtype)
  return _internal_packtype();
}
inline void MSG_ReqOpItemLock_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  packtype_ = value;
}
inline void MSG_ReqOpItemLock_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqOpItemLock_CS.packtype)
}

// optional uint32 opcode = 3;
inline bool MSG_ReqOpItemLock_CS::_internal_has_opcode() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqOpItemLock_CS::has_opcode() const {
  return _internal_has_opcode();
}
inline void MSG_ReqOpItemLock_CS::clear_opcode() {
  opcode_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqOpItemLock_CS::_internal_opcode() const {
  return opcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqOpItemLock_CS::opcode() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqOpItemLock_CS.opcode)
  return _internal_opcode();
}
inline void MSG_ReqOpItemLock_CS::_internal_set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  opcode_ = value;
}
inline void MSG_ReqOpItemLock_CS::set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_opcode(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqOpItemLock_CS.opcode)
}

// optional string passwd = 4;
inline bool MSG_ReqOpItemLock_CS::_internal_has_passwd() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqOpItemLock_CS::has_passwd() const {
  return _internal_has_passwd();
}
inline void MSG_ReqOpItemLock_CS::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_ReqOpItemLock_CS::passwd() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqOpItemLock_CS.passwd)
  return _internal_passwd();
}
inline void MSG_ReqOpItemLock_CS::set_passwd(const std::string& value) {
  _internal_set_passwd(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqOpItemLock_CS.passwd)
}
inline std::string* MSG_ReqOpItemLock_CS::mutable_passwd() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqOpItemLock_CS.passwd)
  return _internal_mutable_passwd();
}
inline const std::string& MSG_ReqOpItemLock_CS::_internal_passwd() const {
  return passwd_.GetNoArena();
}
inline void MSG_ReqOpItemLock_CS::_internal_set_passwd(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqOpItemLock_CS::set_passwd(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqOpItemLock_CS.passwd)
}
inline void MSG_ReqOpItemLock_CS::set_passwd(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqOpItemLock_CS.passwd)
}
inline void MSG_ReqOpItemLock_CS::set_passwd(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  passwd_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqOpItemLock_CS.passwd)
}
inline std::string* MSG_ReqOpItemLock_CS::_internal_mutable_passwd() {
  _has_bits_[0] |= 0x00000002u;
  return passwd_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqOpItemLock_CS::release_passwd() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqOpItemLock_CS.passwd)
  if (!_internal_has_passwd()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return passwd_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqOpItemLock_CS::set_allocated_passwd(std::string* passwd) {
  if (passwd != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  passwd_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqOpItemLock_CS.passwd)
}

// -------------------------------------------------------------------

// MSG_ReqGetVIPCardInfo_CS

// -------------------------------------------------------------------

// MSG_RetGetVIPCardInfo_SC

// optional .Obj.VIPCardInfo vipcardinfo = 1;
inline bool MSG_RetGetVIPCardInfo_SC::_internal_has_vipcardinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || vipcardinfo_ != nullptr);
  return value;
}
inline bool MSG_RetGetVIPCardInfo_SC::has_vipcardinfo() const {
  return _internal_has_vipcardinfo();
}
inline void MSG_RetGetVIPCardInfo_SC::clear_vipcardinfo() {
  if (vipcardinfo_ != nullptr) vipcardinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::Obj::VIPCardInfo& MSG_RetGetVIPCardInfo_SC::_internal_vipcardinfo() const {
  const ::Obj::VIPCardInfo* p = vipcardinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::VIPCardInfo*>(
      &::Obj::_VIPCardInfo_default_instance_);
}
inline const ::Obj::VIPCardInfo& MSG_RetGetVIPCardInfo_SC::vipcardinfo() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RetGetVIPCardInfo_SC.vipcardinfo)
  return _internal_vipcardinfo();
}
inline ::Obj::VIPCardInfo* MSG_RetGetVIPCardInfo_SC::release_vipcardinfo() {
  // @@protoc_insertion_point(field_release:Obj.MSG_RetGetVIPCardInfo_SC.vipcardinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::Obj::VIPCardInfo* temp = vipcardinfo_;
  vipcardinfo_ = nullptr;
  return temp;
}
inline ::Obj::VIPCardInfo* MSG_RetGetVIPCardInfo_SC::_internal_mutable_vipcardinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (vipcardinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::VIPCardInfo>(GetArenaNoVirtual());
    vipcardinfo_ = p;
  }
  return vipcardinfo_;
}
inline ::Obj::VIPCardInfo* MSG_RetGetVIPCardInfo_SC::mutable_vipcardinfo() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_RetGetVIPCardInfo_SC.vipcardinfo)
  return _internal_mutable_vipcardinfo();
}
inline void MSG_RetGetVIPCardInfo_SC::set_allocated_vipcardinfo(::Obj::VIPCardInfo* vipcardinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete vipcardinfo_;
  }
  if (vipcardinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vipcardinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vipcardinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  vipcardinfo_ = vipcardinfo;
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_RetGetVIPCardInfo_SC.vipcardinfo)
}

// -------------------------------------------------------------------

// MSG_ReqBuyVIPCard_CS

// optional uint32 cardid = 1;
inline bool MSG_ReqBuyVIPCard_CS::_internal_has_cardid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqBuyVIPCard_CS::has_cardid() const {
  return _internal_has_cardid();
}
inline void MSG_ReqBuyVIPCard_CS::clear_cardid() {
  cardid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyVIPCard_CS::_internal_cardid() const {
  return cardid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyVIPCard_CS::cardid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqBuyVIPCard_CS.cardid)
  return _internal_cardid();
}
inline void MSG_ReqBuyVIPCard_CS::_internal_set_cardid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  cardid_ = value;
}
inline void MSG_ReqBuyVIPCard_CS::set_cardid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cardid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqBuyVIPCard_CS.cardid)
}

// optional uint32 count = 2 [default = 1];
inline bool MSG_ReqBuyVIPCard_CS::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqBuyVIPCard_CS::has_count() const {
  return _internal_has_count();
}
inline void MSG_ReqBuyVIPCard_CS::clear_count() {
  count_ = 1u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyVIPCard_CS::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyVIPCard_CS::count() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqBuyVIPCard_CS.count)
  return _internal_count();
}
inline void MSG_ReqBuyVIPCard_CS::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
}
inline void MSG_ReqBuyVIPCard_CS::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqBuyVIPCard_CS.count)
}

// -------------------------------------------------------------------

// MSG_RetBuyVIPCard_SC

// optional .Obj.VIPCardInfo vipcardinfo = 1;
inline bool MSG_RetBuyVIPCard_SC::_internal_has_vipcardinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || vipcardinfo_ != nullptr);
  return value;
}
inline bool MSG_RetBuyVIPCard_SC::has_vipcardinfo() const {
  return _internal_has_vipcardinfo();
}
inline void MSG_RetBuyVIPCard_SC::clear_vipcardinfo() {
  if (vipcardinfo_ != nullptr) vipcardinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::Obj::VIPCardInfo& MSG_RetBuyVIPCard_SC::_internal_vipcardinfo() const {
  const ::Obj::VIPCardInfo* p = vipcardinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::VIPCardInfo*>(
      &::Obj::_VIPCardInfo_default_instance_);
}
inline const ::Obj::VIPCardInfo& MSG_RetBuyVIPCard_SC::vipcardinfo() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RetBuyVIPCard_SC.vipcardinfo)
  return _internal_vipcardinfo();
}
inline ::Obj::VIPCardInfo* MSG_RetBuyVIPCard_SC::release_vipcardinfo() {
  // @@protoc_insertion_point(field_release:Obj.MSG_RetBuyVIPCard_SC.vipcardinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::Obj::VIPCardInfo* temp = vipcardinfo_;
  vipcardinfo_ = nullptr;
  return temp;
}
inline ::Obj::VIPCardInfo* MSG_RetBuyVIPCard_SC::_internal_mutable_vipcardinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (vipcardinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::VIPCardInfo>(GetArenaNoVirtual());
    vipcardinfo_ = p;
  }
  return vipcardinfo_;
}
inline ::Obj::VIPCardInfo* MSG_RetBuyVIPCard_SC::mutable_vipcardinfo() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_RetBuyVIPCard_SC.vipcardinfo)
  return _internal_mutable_vipcardinfo();
}
inline void MSG_RetBuyVIPCard_SC::set_allocated_vipcardinfo(::Obj::VIPCardInfo* vipcardinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete vipcardinfo_;
  }
  if (vipcardinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vipcardinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vipcardinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  vipcardinfo_ = vipcardinfo;
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_RetBuyVIPCard_SC.vipcardinfo)
}

// -------------------------------------------------------------------

// MSG_ReqAcepVIPCardPrize_CS

// -------------------------------------------------------------------

// MSG_RetAcepVIPCardPrize_SC

// optional .Obj.VIPCardInfo vipcardinfo = 1;
inline bool MSG_RetAcepVIPCardPrize_SC::_internal_has_vipcardinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || vipcardinfo_ != nullptr);
  return value;
}
inline bool MSG_RetAcepVIPCardPrize_SC::has_vipcardinfo() const {
  return _internal_has_vipcardinfo();
}
inline void MSG_RetAcepVIPCardPrize_SC::clear_vipcardinfo() {
  if (vipcardinfo_ != nullptr) vipcardinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::Obj::VIPCardInfo& MSG_RetAcepVIPCardPrize_SC::_internal_vipcardinfo() const {
  const ::Obj::VIPCardInfo* p = vipcardinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::VIPCardInfo*>(
      &::Obj::_VIPCardInfo_default_instance_);
}
inline const ::Obj::VIPCardInfo& MSG_RetAcepVIPCardPrize_SC::vipcardinfo() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RetAcepVIPCardPrize_SC.vipcardinfo)
  return _internal_vipcardinfo();
}
inline ::Obj::VIPCardInfo* MSG_RetAcepVIPCardPrize_SC::release_vipcardinfo() {
  // @@protoc_insertion_point(field_release:Obj.MSG_RetAcepVIPCardPrize_SC.vipcardinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::Obj::VIPCardInfo* temp = vipcardinfo_;
  vipcardinfo_ = nullptr;
  return temp;
}
inline ::Obj::VIPCardInfo* MSG_RetAcepVIPCardPrize_SC::_internal_mutable_vipcardinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (vipcardinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::VIPCardInfo>(GetArenaNoVirtual());
    vipcardinfo_ = p;
  }
  return vipcardinfo_;
}
inline ::Obj::VIPCardInfo* MSG_RetAcepVIPCardPrize_SC::mutable_vipcardinfo() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_RetAcepVIPCardPrize_SC.vipcardinfo)
  return _internal_mutable_vipcardinfo();
}
inline void MSG_RetAcepVIPCardPrize_SC::set_allocated_vipcardinfo(::Obj::VIPCardInfo* vipcardinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete vipcardinfo_;
  }
  if (vipcardinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vipcardinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vipcardinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  vipcardinfo_ = vipcardinfo;
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_RetAcepVIPCardPrize_SC.vipcardinfo)
}

// -------------------------------------------------------------------

// MSG_ReqRaffVIPCardPrize_CS

// optional .Obj.RaffUseType usetype = 1;
inline bool MSG_ReqRaffVIPCardPrize_CS::_internal_has_usetype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqRaffVIPCardPrize_CS::has_usetype() const {
  return _internal_has_usetype();
}
inline void MSG_ReqRaffVIPCardPrize_CS::clear_usetype() {
  usetype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Obj::RaffUseType MSG_ReqRaffVIPCardPrize_CS::_internal_usetype() const {
  return static_cast< ::Obj::RaffUseType >(usetype_);
}
inline ::Obj::RaffUseType MSG_ReqRaffVIPCardPrize_CS::usetype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqRaffVIPCardPrize_CS.usetype)
  return _internal_usetype();
}
inline void MSG_ReqRaffVIPCardPrize_CS::_internal_set_usetype(::Obj::RaffUseType value) {
  assert(::Obj::RaffUseType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  usetype_ = value;
}
inline void MSG_ReqRaffVIPCardPrize_CS::set_usetype(::Obj::RaffUseType value) {
  _internal_set_usetype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqRaffVIPCardPrize_CS.usetype)
}

// -------------------------------------------------------------------

// MSG_RetRaffVIPCardPrize_SC

// optional .Obj.VIPCardInfo vipcardinfo = 1;
inline bool MSG_RetRaffVIPCardPrize_SC::_internal_has_vipcardinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || vipcardinfo_ != nullptr);
  return value;
}
inline bool MSG_RetRaffVIPCardPrize_SC::has_vipcardinfo() const {
  return _internal_has_vipcardinfo();
}
inline void MSG_RetRaffVIPCardPrize_SC::clear_vipcardinfo() {
  if (vipcardinfo_ != nullptr) vipcardinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::Obj::VIPCardInfo& MSG_RetRaffVIPCardPrize_SC::_internal_vipcardinfo() const {
  const ::Obj::VIPCardInfo* p = vipcardinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::VIPCardInfo*>(
      &::Obj::_VIPCardInfo_default_instance_);
}
inline const ::Obj::VIPCardInfo& MSG_RetRaffVIPCardPrize_SC::vipcardinfo() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RetRaffVIPCardPrize_SC.vipcardinfo)
  return _internal_vipcardinfo();
}
inline ::Obj::VIPCardInfo* MSG_RetRaffVIPCardPrize_SC::release_vipcardinfo() {
  // @@protoc_insertion_point(field_release:Obj.MSG_RetRaffVIPCardPrize_SC.vipcardinfo)
  _has_bits_[0] &= ~0x00000001u;
  ::Obj::VIPCardInfo* temp = vipcardinfo_;
  vipcardinfo_ = nullptr;
  return temp;
}
inline ::Obj::VIPCardInfo* MSG_RetRaffVIPCardPrize_SC::_internal_mutable_vipcardinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (vipcardinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::VIPCardInfo>(GetArenaNoVirtual());
    vipcardinfo_ = p;
  }
  return vipcardinfo_;
}
inline ::Obj::VIPCardInfo* MSG_RetRaffVIPCardPrize_SC::mutable_vipcardinfo() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_RetRaffVIPCardPrize_SC.vipcardinfo)
  return _internal_mutable_vipcardinfo();
}
inline void MSG_RetRaffVIPCardPrize_SC::set_allocated_vipcardinfo(::Obj::VIPCardInfo* vipcardinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete vipcardinfo_;
  }
  if (vipcardinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vipcardinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vipcardinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  vipcardinfo_ = vipcardinfo;
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_RetRaffVIPCardPrize_SC.vipcardinfo)
}

// optional uint32 id = 2;
inline bool MSG_RetRaffVIPCardPrize_SC::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetRaffVIPCardPrize_SC::has_id() const {
  return _internal_has_id();
}
inline void MSG_RetRaffVIPCardPrize_SC::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRaffVIPCardPrize_SC::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRaffVIPCardPrize_SC::id() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RetRaffVIPCardPrize_SC.id)
  return _internal_id();
}
inline void MSG_RetRaffVIPCardPrize_SC::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void MSG_RetRaffVIPCardPrize_SC::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_RetRaffVIPCardPrize_SC.id)
}

// optional uint32 quantity = 3;
inline bool MSG_RetRaffVIPCardPrize_SC::_internal_has_quantity() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetRaffVIPCardPrize_SC::has_quantity() const {
  return _internal_has_quantity();
}
inline void MSG_RetRaffVIPCardPrize_SC::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRaffVIPCardPrize_SC::_internal_quantity() const {
  return quantity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRaffVIPCardPrize_SC::quantity() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RetRaffVIPCardPrize_SC.quantity)
  return _internal_quantity();
}
inline void MSG_RetRaffVIPCardPrize_SC::_internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  quantity_ = value;
}
inline void MSG_RetRaffVIPCardPrize_SC::set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_RetRaffVIPCardPrize_SC.quantity)
}

// -------------------------------------------------------------------

// MSG_ReqCurrencyExchange_CS

// optional uint32 usequantity = 1;
inline bool MSG_ReqCurrencyExchange_CS::_internal_has_usequantity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqCurrencyExchange_CS::has_usequantity() const {
  return _internal_has_usequantity();
}
inline void MSG_ReqCurrencyExchange_CS::clear_usequantity() {
  usequantity_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCurrencyExchange_CS::_internal_usequantity() const {
  return usequantity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqCurrencyExchange_CS::usequantity() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqCurrencyExchange_CS.usequantity)
  return _internal_usequantity();
}
inline void MSG_ReqCurrencyExchange_CS::_internal_set_usequantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  usequantity_ = value;
}
inline void MSG_ReqCurrencyExchange_CS::set_usequantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_usequantity(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqCurrencyExchange_CS.usequantity)
}

// -------------------------------------------------------------------

// MSG_RetCurrencyExchange_SC

// optional uint32 result = 1;
inline bool MSG_RetCurrencyExchange_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetCurrencyExchange_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_RetCurrencyExchange_SC::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetCurrencyExchange_SC::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetCurrencyExchange_SC::result() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_RetCurrencyExchange_SC.result)
  return _internal_result();
}
inline void MSG_RetCurrencyExchange_SC::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void MSG_RetCurrencyExchange_SC::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_RetCurrencyExchange_SC.result)
}

// -------------------------------------------------------------------

// MSG_ReqTransMoney_CS

// optional .Obj.PackType packtype = 1;
inline bool MSG_ReqTransMoney_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqTransMoney_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_ReqTransMoney_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Obj::PackType MSG_ReqTransMoney_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_ReqTransMoney_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqTransMoney_CS.packtype)
  return _internal_packtype();
}
inline void MSG_ReqTransMoney_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  packtype_ = value;
}
inline void MSG_ReqTransMoney_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqTransMoney_CS.packtype)
}

// optional .Obj.PackType dst_packtype = 2;
inline bool MSG_ReqTransMoney_CS::_internal_has_dst_packtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqTransMoney_CS::has_dst_packtype() const {
  return _internal_has_dst_packtype();
}
inline void MSG_ReqTransMoney_CS::clear_dst_packtype() {
  dst_packtype_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::Obj::PackType MSG_ReqTransMoney_CS::_internal_dst_packtype() const {
  return static_cast< ::Obj::PackType >(dst_packtype_);
}
inline ::Obj::PackType MSG_ReqTransMoney_CS::dst_packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqTransMoney_CS.dst_packtype)
  return _internal_dst_packtype();
}
inline void MSG_ReqTransMoney_CS::_internal_set_dst_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  dst_packtype_ = value;
}
inline void MSG_ReqTransMoney_CS::set_dst_packtype(::Obj::PackType value) {
  _internal_set_dst_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqTransMoney_CS.dst_packtype)
}

// optional uint32 resourceID = 3;
inline bool MSG_ReqTransMoney_CS::_internal_has_resourceid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqTransMoney_CS::has_resourceid() const {
  return _internal_has_resourceid();
}
inline void MSG_ReqTransMoney_CS::clear_resourceid() {
  resourceid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqTransMoney_CS::_internal_resourceid() const {
  return resourceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqTransMoney_CS::resourceid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqTransMoney_CS.resourceID)
  return _internal_resourceid();
}
inline void MSG_ReqTransMoney_CS::_internal_set_resourceid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  resourceid_ = value;
}
inline void MSG_ReqTransMoney_CS::set_resourceid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_resourceid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqTransMoney_CS.resourceID)
}

// optional uint32 quantity = 4;
inline bool MSG_ReqTransMoney_CS::_internal_has_quantity() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqTransMoney_CS::has_quantity() const {
  return _internal_has_quantity();
}
inline void MSG_ReqTransMoney_CS::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqTransMoney_CS::_internal_quantity() const {
  return quantity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqTransMoney_CS::quantity() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqTransMoney_CS.quantity)
  return _internal_quantity();
}
inline void MSG_ReqTransMoney_CS::_internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  quantity_ = value;
}
inline void MSG_ReqTransMoney_CS::set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqTransMoney_CS.quantity)
}

// -------------------------------------------------------------------

// MSG_ReqFixUpDurability_CS

// optional .Obj.PackType packtype = 1;
inline bool MSG_ReqFixUpDurability_CS::_internal_has_packtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqFixUpDurability_CS::has_packtype() const {
  return _internal_has_packtype();
}
inline void MSG_ReqFixUpDurability_CS::clear_packtype() {
  packtype_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::Obj::PackType MSG_ReqFixUpDurability_CS::_internal_packtype() const {
  return static_cast< ::Obj::PackType >(packtype_);
}
inline ::Obj::PackType MSG_ReqFixUpDurability_CS::packtype() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqFixUpDurability_CS.packtype)
  return _internal_packtype();
}
inline void MSG_ReqFixUpDurability_CS::_internal_set_packtype(::Obj::PackType value) {
  assert(::Obj::PackType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  packtype_ = value;
}
inline void MSG_ReqFixUpDurability_CS::set_packtype(::Obj::PackType value) {
  _internal_set_packtype(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqFixUpDurability_CS.packtype)
}

// optional string thisid = 2;
inline bool MSG_ReqFixUpDurability_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqFixUpDurability_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqFixUpDurability_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqFixUpDurability_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqFixUpDurability_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqFixUpDurability_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqFixUpDurability_CS.thisid)
}
inline std::string* MSG_ReqFixUpDurability_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqFixUpDurability_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqFixUpDurability_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqFixUpDurability_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqFixUpDurability_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqFixUpDurability_CS.thisid)
}
inline void MSG_ReqFixUpDurability_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqFixUpDurability_CS.thisid)
}
inline void MSG_ReqFixUpDurability_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqFixUpDurability_CS.thisid)
}
inline std::string* MSG_ReqFixUpDurability_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqFixUpDurability_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqFixUpDurability_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqFixUpDurability_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqFixUpDurability_CS.thisid)
}

// -------------------------------------------------------------------

// MSG_ReqUseCapsule_CS

// optional string thisid = 1;
inline bool MSG_ReqUseCapsule_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqUseCapsule_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqUseCapsule_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqUseCapsule_CS::thisid() const {
  // @@protoc_insertion_point(field_get:Obj.MSG_ReqUseCapsule_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqUseCapsule_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:Obj.MSG_ReqUseCapsule_CS.thisid)
}
inline std::string* MSG_ReqUseCapsule_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:Obj.MSG_ReqUseCapsule_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqUseCapsule_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqUseCapsule_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqUseCapsule_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Obj.MSG_ReqUseCapsule_CS.thisid)
}
inline void MSG_ReqUseCapsule_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Obj.MSG_ReqUseCapsule_CS.thisid)
}
inline void MSG_ReqUseCapsule_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Obj.MSG_ReqUseCapsule_CS.thisid)
}
inline std::string* MSG_ReqUseCapsule_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqUseCapsule_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:Obj.MSG_ReqUseCapsule_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqUseCapsule_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:Obj.MSG_ReqUseCapsule_CS.thisid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Obj

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Obj::PackType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Obj::PackType>() {
  return ::Obj::PackType_descriptor();
}
template <> struct is_proto_enum< ::Obj::SpecialType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Obj::SpecialType>() {
  return ::Obj::SpecialType_descriptor();
}
template <> struct is_proto_enum< ::Obj::ObjectType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Obj::ObjectType>() {
  return ::Obj::ObjectType_descriptor();
}
template <> struct is_proto_enum< ::Obj::ObjectId> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Obj::ObjectId>() {
  return ::Obj::ObjectId_descriptor();
}
template <> struct is_proto_enum< ::Obj::EquipType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Obj::EquipType>() {
  return ::Obj::EquipType_descriptor();
}
template <> struct is_proto_enum< ::Obj::RaffUseType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Obj::RaffUseType>() {
  return ::Obj::RaffUseType_descriptor();
}
template <> struct is_proto_enum< ::Obj::Equip8Prop> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Obj::Equip8Prop>() {
  return ::Obj::Equip8Prop_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_object_2eproto
