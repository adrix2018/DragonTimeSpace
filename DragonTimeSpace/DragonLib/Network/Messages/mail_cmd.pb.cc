// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail_cmd.proto

#include "mail_cmd.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_object_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_t_Object_object_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hero_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_Hero_hero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mail_5fcmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_mail_item_mail_5fcmd_2eproto;
namespace mail {
class mail_itemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<mail_item> _instance;
} _mail_item_default_instance_;
class MSG_Req_MailList_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_MailList_CS> _instance;
} _MSG_Req_MailList_CS_default_instance_;
class MSG_Ret_MailList_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_MailList_SC> _instance;
} _MSG_Ret_MailList_SC_default_instance_;
class MSG_Ret_RefreshMail_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_RefreshMail_SC> _instance;
} _MSG_Ret_RefreshMail_SC_default_instance_;
class MSG_Ret_RefreshMailState_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_RefreshMailState_SC> _instance;
} _MSG_Ret_RefreshMailState_SC_default_instance_;
class MSG_Req_OpenMail_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_OpenMail_CS> _instance;
} _MSG_Req_OpenMail_CS_default_instance_;
class MSG_Req_GetAttachment_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_GetAttachment_CS> _instance;
} _MSG_Req_GetAttachment_CS_default_instance_;
class MSG_Ret_GetAttachment_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_GetAttachment_SC> _instance;
} _MSG_Ret_GetAttachment_SC_default_instance_;
class MSG_Req_GetAllAttachment_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_GetAllAttachment_CS> _instance;
} _MSG_Req_GetAllAttachment_CS_default_instance_;
class MSG_Req_DeleteMail_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_DeleteMail_CS> _instance;
} _MSG_Req_DeleteMail_CS_default_instance_;
class MSG_Ret_DeleteMail_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_DeleteMail_SC> _instance;
} _MSG_Ret_DeleteMail_SC_default_instance_;
class MSG_Req_DeleteAllMail_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_DeleteAllMail_CS> _instance;
} _MSG_Req_DeleteAllMail_CS_default_instance_;
}  // namespace mail
static void InitDefaultsscc_info_MSG_Req_DeleteAllMail_CS_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Req_DeleteAllMail_CS_default_instance_;
    new (ptr) ::mail::MSG_Req_DeleteAllMail_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Req_DeleteAllMail_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_DeleteAllMail_CS_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_DeleteAllMail_CS_mail_5fcmd_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_DeleteMail_CS_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Req_DeleteMail_CS_default_instance_;
    new (ptr) ::mail::MSG_Req_DeleteMail_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Req_DeleteMail_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_DeleteMail_CS_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_DeleteMail_CS_mail_5fcmd_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_GetAllAttachment_CS_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Req_GetAllAttachment_CS_default_instance_;
    new (ptr) ::mail::MSG_Req_GetAllAttachment_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Req_GetAllAttachment_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_GetAllAttachment_CS_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_GetAllAttachment_CS_mail_5fcmd_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_GetAttachment_CS_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Req_GetAttachment_CS_default_instance_;
    new (ptr) ::mail::MSG_Req_GetAttachment_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Req_GetAttachment_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_GetAttachment_CS_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_GetAttachment_CS_mail_5fcmd_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_MailList_CS_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Req_MailList_CS_default_instance_;
    new (ptr) ::mail::MSG_Req_MailList_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Req_MailList_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_MailList_CS_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_MailList_CS_mail_5fcmd_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_OpenMail_CS_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Req_OpenMail_CS_default_instance_;
    new (ptr) ::mail::MSG_Req_OpenMail_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Req_OpenMail_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_OpenMail_CS_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_OpenMail_CS_mail_5fcmd_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_DeleteMail_SC_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Ret_DeleteMail_SC_default_instance_;
    new (ptr) ::mail::MSG_Ret_DeleteMail_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Ret_DeleteMail_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_DeleteMail_SC_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_DeleteMail_SC_mail_5fcmd_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_GetAttachment_SC_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Ret_GetAttachment_SC_default_instance_;
    new (ptr) ::mail::MSG_Ret_GetAttachment_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Ret_GetAttachment_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_GetAttachment_SC_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_GetAttachment_SC_mail_5fcmd_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_MailList_SC_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Ret_MailList_SC_default_instance_;
    new (ptr) ::mail::MSG_Ret_MailList_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Ret_MailList_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_Ret_MailList_SC_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_Ret_MailList_SC_mail_5fcmd_2eproto}, {
      &scc_info_mail_item_mail_5fcmd_2eproto.base,}};

static void InitDefaultsscc_info_MSG_Ret_RefreshMailState_SC_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Ret_RefreshMailState_SC_default_instance_;
    new (ptr) ::mail::MSG_Ret_RefreshMailState_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Ret_RefreshMailState_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_RefreshMailState_SC_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_RefreshMailState_SC_mail_5fcmd_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_RefreshMail_SC_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_MSG_Ret_RefreshMail_SC_default_instance_;
    new (ptr) ::mail::MSG_Ret_RefreshMail_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::MSG_Ret_RefreshMail_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_Ret_RefreshMail_SC_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_Ret_RefreshMail_SC_mail_5fcmd_2eproto}, {
      &scc_info_mail_item_mail_5fcmd_2eproto.base,}};

static void InitDefaultsscc_info_mail_item_mail_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mail::_mail_item_default_instance_;
    new (ptr) ::mail::mail_item();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mail::mail_item::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_mail_item_mail_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_mail_item_mail_5fcmd_2eproto}, {
      &scc_info_t_Object_object_2eproto.base,
      &scc_info_Hero_hero_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mail_5fcmd_2eproto[12];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_mail_5fcmd_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mail_5fcmd_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mail_5fcmd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, mailid_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, fromid_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, fromname_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, title_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, text_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, createtime_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, deltime_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, state_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, itemgot_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, obj_list_),
  PROTOBUF_FIELD_OFFSET(::mail::mail_item, hero_list_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_MailList_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_MailList_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_MailList_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_MailList_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_MailList_SC, items_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_RefreshMail_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_RefreshMail_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_RefreshMail_SC, item_),
  0,
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_RefreshMailState_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_RefreshMailState_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_RefreshMailState_SC, mailid_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_RefreshMailState_SC, state_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_OpenMail_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_OpenMail_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_OpenMail_CS, mailid_),
  0,
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_GetAttachment_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_GetAttachment_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_GetAttachment_CS, mailid_),
  0,
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_GetAttachment_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_GetAttachment_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_GetAttachment_SC, mailid_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_GetAttachment_SC, ret_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_GetAllAttachment_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_GetAllAttachment_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_DeleteMail_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_DeleteMail_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_DeleteMail_CS, mailid_),
  0,
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_DeleteMail_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_DeleteMail_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_DeleteMail_SC, mailid_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Ret_DeleteMail_SC, ret_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_DeleteAllMail_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mail::MSG_Req_DeleteAllMail_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 16, sizeof(::mail::mail_item)},
  { 27, 32, sizeof(::mail::MSG_Req_MailList_CS)},
  { 32, 38, sizeof(::mail::MSG_Ret_MailList_SC)},
  { 39, 45, sizeof(::mail::MSG_Ret_RefreshMail_SC)},
  { 46, 53, sizeof(::mail::MSG_Ret_RefreshMailState_SC)},
  { 55, 61, sizeof(::mail::MSG_Req_OpenMail_CS)},
  { 62, 68, sizeof(::mail::MSG_Req_GetAttachment_CS)},
  { 69, 76, sizeof(::mail::MSG_Ret_GetAttachment_SC)},
  { 78, 83, sizeof(::mail::MSG_Req_GetAllAttachment_CS)},
  { 83, 89, sizeof(::mail::MSG_Req_DeleteMail_CS)},
  { 90, 97, sizeof(::mail::MSG_Ret_DeleteMail_SC)},
  { 99, 104, sizeof(::mail::MSG_Req_DeleteAllMail_CS)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_mail_item_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Req_MailList_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Ret_MailList_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Ret_RefreshMail_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Ret_RefreshMailState_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Req_OpenMail_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Req_GetAttachment_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Ret_GetAttachment_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Req_GetAllAttachment_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Req_DeleteMail_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Ret_DeleteMail_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mail::_MSG_Req_DeleteAllMail_CS_default_instance_),
};

const char descriptor_table_protodef_mail_5fcmd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016mail_cmd.proto\022\004mail\032\014object.proto\032\nhe"
  "ro.proto\"\337\001\n\tmail_item\022\016\n\006mailid\030\001 \001(\t\022\016"
  "\n\006fromid\030\002 \001(\t\022\020\n\010fromname\030\003 \001(\t\022\r\n\005titl"
  "e\030\004 \001(\t\022\014\n\004text\030\005 \001(\t\022\022\n\ncreatetime\030\006 \001("
  "\t\022\017\n\007deltime\030\007 \001(\t\022\r\n\005state\030\010 \001(\r\022\017\n\007ite"
  "mgot\030\t \001(\r\022\037\n\010obj_list\030\n \003(\0132\r.Obj.t_Obj"
  "ect\022\035\n\thero_list\030\013 \003(\0132\n.hero.Hero\"\025\n\023MS"
  "G_Req_MailList_CS\"5\n\023MSG_Ret_MailList_SC"
  "\022\036\n\005items\030\001 \003(\0132\017.mail.mail_item\"7\n\026MSG_"
  "Ret_RefreshMail_SC\022\035\n\004item\030\001 \001(\0132\017.mail."
  "mail_item\"<\n\033MSG_Ret_RefreshMailState_SC"
  "\022\016\n\006mailid\030\001 \001(\004\022\r\n\005state\030\002 \001(\r\"%\n\023MSG_R"
  "eq_OpenMail_CS\022\016\n\006mailid\030\001 \001(\004\"*\n\030MSG_Re"
  "q_GetAttachment_CS\022\016\n\006mailid\030\001 \001(\t\"7\n\030MS"
  "G_Ret_GetAttachment_SC\022\016\n\006mailid\030\001 \001(\004\022\013"
  "\n\003ret\030\002 \001(\010\"\035\n\033MSG_Req_GetAllAttachment_"
  "CS\"\'\n\025MSG_Req_DeleteMail_CS\022\016\n\006mailid\030\001 "
  "\001(\004\"4\n\025MSG_Ret_DeleteMail_SC\022\016\n\006mailid\030\001"
  " \003(\t\022\013\n\003ret\030\002 \001(\010\"\032\n\030MSG_Req_DeleteAllMa"
  "il_CS*a\n\tMailState\022\025\n\021MAIL_STATE_UNREAD\020"
  "\001\022\022\n\016MAIL_STATE_DEL\020\002\022\024\n\020MAIL_STATE_DELA"
  "Y\020\003\022\023\n\017MAIL_STATE_OPEN\020\004*Z\n\017MailAttachSt"
  "ate\022\022\n\016MAIL_NO_ATTACH\020\000\022\031\n\025MAIL_HAS_ATTA"
  "CH_DRAWN\020\001\022\030\n\024MAIL_ATTACH_CAN_DRAW\020\002"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mail_5fcmd_2eproto_deps[2] = {
  &::descriptor_table_hero_2eproto,
  &::descriptor_table_object_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mail_5fcmd_2eproto_sccs[12] = {
  &scc_info_MSG_Req_DeleteAllMail_CS_mail_5fcmd_2eproto.base,
  &scc_info_MSG_Req_DeleteMail_CS_mail_5fcmd_2eproto.base,
  &scc_info_MSG_Req_GetAllAttachment_CS_mail_5fcmd_2eproto.base,
  &scc_info_MSG_Req_GetAttachment_CS_mail_5fcmd_2eproto.base,
  &scc_info_MSG_Req_MailList_CS_mail_5fcmd_2eproto.base,
  &scc_info_MSG_Req_OpenMail_CS_mail_5fcmd_2eproto.base,
  &scc_info_MSG_Ret_DeleteMail_SC_mail_5fcmd_2eproto.base,
  &scc_info_MSG_Ret_GetAttachment_SC_mail_5fcmd_2eproto.base,
  &scc_info_MSG_Ret_MailList_SC_mail_5fcmd_2eproto.base,
  &scc_info_MSG_Ret_RefreshMailState_SC_mail_5fcmd_2eproto.base,
  &scc_info_MSG_Ret_RefreshMail_SC_mail_5fcmd_2eproto.base,
  &scc_info_mail_item_mail_5fcmd_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mail_5fcmd_2eproto_once;
static bool descriptor_table_mail_5fcmd_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mail_5fcmd_2eproto = {
  &descriptor_table_mail_5fcmd_2eproto_initialized, descriptor_table_protodef_mail_5fcmd_2eproto, "mail_cmd.proto", 956,
  &descriptor_table_mail_5fcmd_2eproto_once, descriptor_table_mail_5fcmd_2eproto_sccs, descriptor_table_mail_5fcmd_2eproto_deps, 12, 2,
  schemas, file_default_instances, TableStruct_mail_5fcmd_2eproto::offsets,
  file_level_metadata_mail_5fcmd_2eproto, 12, file_level_enum_descriptors_mail_5fcmd_2eproto, file_level_service_descriptors_mail_5fcmd_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mail_5fcmd_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mail_5fcmd_2eproto)), true);
namespace mail {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MailState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mail_5fcmd_2eproto);
  return file_level_enum_descriptors_mail_5fcmd_2eproto[0];
}
bool MailState_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MailAttachState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mail_5fcmd_2eproto);
  return file_level_enum_descriptors_mail_5fcmd_2eproto[1];
}
bool MailAttachState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void mail_item::InitAsDefaultInstance() {
}
class mail_item::_Internal {
 public:
  using HasBits = decltype(std::declval<mail_item>()._has_bits_);
  static void set_has_mailid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_fromid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_fromname(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_text(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_createtime(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_deltime(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_itemgot(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

void mail_item::clear_obj_list() {
  obj_list_.Clear();
}
void mail_item::clear_hero_list() {
  hero_list_.Clear();
}
mail_item::mail_item()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.mail_item)
}
mail_item::mail_item(const mail_item& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      obj_list_(from.obj_list_),
      hero_list_(from.hero_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mailid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_mailid()) {
    mailid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.mailid_);
  }
  fromid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_fromid()) {
    fromid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fromid_);
  }
  fromname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_fromname()) {
    fromname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fromname_);
  }
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_title()) {
    title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_text()) {
    text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  createtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_createtime()) {
    createtime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.createtime_);
  }
  deltime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_deltime()) {
    deltime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.deltime_);
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemgot_) -
    reinterpret_cast<char*>(&state_)) + sizeof(itemgot_));
  // @@protoc_insertion_point(copy_constructor:mail.mail_item)
}

void mail_item::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_mail_item_mail_5fcmd_2eproto.base);
  mailid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fromid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fromname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  createtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deltime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemgot_) -
      reinterpret_cast<char*>(&state_)) + sizeof(itemgot_));
}

mail_item::~mail_item() {
  // @@protoc_insertion_point(destructor:mail.mail_item)
  SharedDtor();
}

void mail_item::SharedDtor() {
  mailid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fromid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fromname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deltime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void mail_item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const mail_item& mail_item::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_mail_item_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void mail_item::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.mail_item)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_list_.Clear();
  hero_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      mailid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      fromid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      fromname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      text_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      createtime_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      deltime_.ClearNonDefaultToEmptyNoArena();
    }
  }
  state_ = 0u;
  itemgot_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* mail_item::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string mailid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mailid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mail.mail_item.mailid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string fromid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_fromid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mail.mail_item.fromid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string fromname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_fromname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mail.mail_item.fromname");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string title = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mail.mail_item.title");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string text = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mail.mail_item.text");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string createtime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_createtime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mail.mail_item.createtime");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string deltime = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_deltime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mail.mail_item.deltime");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 state = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_state(&has_bits);
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 itemgot = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_itemgot(&has_bits);
          itemgot_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Obj.t_Object obj_list = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_obj_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .hero.Hero hero_list = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_hero_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* mail_item::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.mail_item)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string mailid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_mailid().data(), static_cast<int>(this->_internal_mailid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mail.mail_item.mailid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mailid(), target);
  }

  // optional string fromid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_fromid().data(), static_cast<int>(this->_internal_fromid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mail.mail_item.fromid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_fromid(), target);
  }

  // optional string fromname = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_fromname().data(), static_cast<int>(this->_internal_fromname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mail.mail_item.fromname");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_fromname(), target);
  }

  // optional string title = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mail.mail_item.title");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_title(), target);
  }

  // optional string text = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mail.mail_item.text");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_text(), target);
  }

  // optional string createtime = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_createtime().data(), static_cast<int>(this->_internal_createtime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mail.mail_item.createtime");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_createtime(), target);
  }

  // optional string deltime = 7;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_deltime().data(), static_cast<int>(this->_internal_deltime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mail.mail_item.deltime");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_deltime(), target);
  }

  // optional uint32 state = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_state(), target);
  }

  // optional uint32 itemgot = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_itemgot(), target);
  }

  // repeated .Obj.t_Object obj_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_obj_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_obj_list(i), target, stream);
  }

  // repeated .hero.Hero hero_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_hero_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_hero_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.mail_item)
  return target;
}

size_t mail_item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.mail_item)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Obj.t_Object obj_list = 10;
  total_size += 1UL * this->_internal_obj_list_size();
  for (const auto& msg : this->obj_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .hero.Hero hero_list = 11;
  total_size += 1UL * this->_internal_hero_list_size();
  for (const auto& msg : this->hero_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string mailid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_mailid());
    }

    // optional string fromid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_fromid());
    }

    // optional string fromname = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_fromname());
    }

    // optional string title = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_title());
    }

    // optional string text = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text());
    }

    // optional string createtime = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_createtime());
    }

    // optional string deltime = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_deltime());
    }

    // optional uint32 state = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_state());
    }

  }
  // optional uint32 itemgot = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_itemgot());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mail_item::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.mail_item)
  GOOGLE_DCHECK_NE(&from, this);
  const mail_item* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<mail_item>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.mail_item)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.mail_item)
    MergeFrom(*source);
  }
}

void mail_item::MergeFrom(const mail_item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.mail_item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obj_list_.MergeFrom(from.obj_list_);
  hero_list_.MergeFrom(from.hero_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      mailid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.mailid_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      fromid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fromid_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      fromname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fromname_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      title_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      text_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      createtime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.createtime_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      deltime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.deltime_);
    }
    if (cached_has_bits & 0x00000080u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_itemgot(from._internal_itemgot());
  }
}

void mail_item::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.mail_item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mail_item::CopyFrom(const mail_item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.mail_item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mail_item::IsInitialized() const {
  return true;
}

void mail_item::InternalSwap(mail_item* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  obj_list_.InternalSwap(&other->obj_list_);
  hero_list_.InternalSwap(&other->hero_list_);
  mailid_.Swap(&other->mailid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fromid_.Swap(&other->fromid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fromname_.Swap(&other->fromname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  createtime_.Swap(&other->createtime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  deltime_.Swap(&other->deltime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
  swap(itemgot_, other->itemgot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata mail_item::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_MailList_CS::InitAsDefaultInstance() {
}
class MSG_Req_MailList_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_MailList_CS>()._has_bits_);
};

MSG_Req_MailList_CS::MSG_Req_MailList_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Req_MailList_CS)
}
MSG_Req_MailList_CS::MSG_Req_MailList_CS(const MSG_Req_MailList_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Req_MailList_CS)
}

void MSG_Req_MailList_CS::SharedCtor() {
}

MSG_Req_MailList_CS::~MSG_Req_MailList_CS() {
  // @@protoc_insertion_point(destructor:mail.MSG_Req_MailList_CS)
  SharedDtor();
}

void MSG_Req_MailList_CS::SharedDtor() {
}

void MSG_Req_MailList_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_MailList_CS& MSG_Req_MailList_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_MailList_CS_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_MailList_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Req_MailList_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_MailList_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_MailList_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Req_MailList_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Req_MailList_CS)
  return target;
}

size_t MSG_Req_MailList_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Req_MailList_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_MailList_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Req_MailList_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_MailList_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_MailList_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Req_MailList_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Req_MailList_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_MailList_CS::MergeFrom(const MSG_Req_MailList_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Req_MailList_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_Req_MailList_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Req_MailList_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_MailList_CS::CopyFrom(const MSG_Req_MailList_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Req_MailList_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_MailList_CS::IsInitialized() const {
  return true;
}

void MSG_Req_MailList_CS::InternalSwap(MSG_Req_MailList_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_MailList_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_MailList_SC::InitAsDefaultInstance() {
}
class MSG_Ret_MailList_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_MailList_SC>()._has_bits_);
};

MSG_Ret_MailList_SC::MSG_Ret_MailList_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Ret_MailList_SC)
}
MSG_Ret_MailList_SC::MSG_Ret_MailList_SC(const MSG_Ret_MailList_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Ret_MailList_SC)
}

void MSG_Ret_MailList_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_MailList_SC_mail_5fcmd_2eproto.base);
}

MSG_Ret_MailList_SC::~MSG_Ret_MailList_SC() {
  // @@protoc_insertion_point(destructor:mail.MSG_Ret_MailList_SC)
  SharedDtor();
}

void MSG_Ret_MailList_SC::SharedDtor() {
}

void MSG_Ret_MailList_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_MailList_SC& MSG_Ret_MailList_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_MailList_SC_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_MailList_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Ret_MailList_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_MailList_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mail.mail_item items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_MailList_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Ret_MailList_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mail.mail_item items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Ret_MailList_SC)
  return target;
}

size_t MSG_Ret_MailList_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Ret_MailList_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mail.mail_item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_MailList_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Ret_MailList_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_MailList_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_MailList_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Ret_MailList_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Ret_MailList_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_MailList_SC::MergeFrom(const MSG_Ret_MailList_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Ret_MailList_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void MSG_Ret_MailList_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Ret_MailList_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_MailList_SC::CopyFrom(const MSG_Ret_MailList_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Ret_MailList_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_MailList_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_MailList_SC::InternalSwap(MSG_Ret_MailList_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_MailList_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_RefreshMail_SC::InitAsDefaultInstance() {
  ::mail::_MSG_Ret_RefreshMail_SC_default_instance_._instance.get_mutable()->item_ = const_cast< ::mail::mail_item*>(
      ::mail::mail_item::internal_default_instance());
}
class MSG_Ret_RefreshMail_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_RefreshMail_SC>()._has_bits_);
  static const ::mail::mail_item& item(const MSG_Ret_RefreshMail_SC* msg);
  static void set_has_item(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mail::mail_item&
MSG_Ret_RefreshMail_SC::_Internal::item(const MSG_Ret_RefreshMail_SC* msg) {
  return *msg->item_;
}
MSG_Ret_RefreshMail_SC::MSG_Ret_RefreshMail_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Ret_RefreshMail_SC)
}
MSG_Ret_RefreshMail_SC::MSG_Ret_RefreshMail_SC(const MSG_Ret_RefreshMail_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::mail::mail_item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Ret_RefreshMail_SC)
}

void MSG_Ret_RefreshMail_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_RefreshMail_SC_mail_5fcmd_2eproto.base);
  item_ = nullptr;
}

MSG_Ret_RefreshMail_SC::~MSG_Ret_RefreshMail_SC() {
  // @@protoc_insertion_point(destructor:mail.MSG_Ret_RefreshMail_SC)
  SharedDtor();
}

void MSG_Ret_RefreshMail_SC::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void MSG_Ret_RefreshMail_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_RefreshMail_SC& MSG_Ret_RefreshMail_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_RefreshMail_SC_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_RefreshMail_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Ret_RefreshMail_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(item_ != nullptr);
    item_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_RefreshMail_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .mail.mail_item item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_RefreshMail_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Ret_RefreshMail_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mail.mail_item item = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Ret_RefreshMail_SC)
  return target;
}

size_t MSG_Ret_RefreshMail_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Ret_RefreshMail_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .mail.mail_item item = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_RefreshMail_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Ret_RefreshMail_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_RefreshMail_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_RefreshMail_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Ret_RefreshMail_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Ret_RefreshMail_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_RefreshMail_SC::MergeFrom(const MSG_Ret_RefreshMail_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Ret_RefreshMail_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _internal_mutable_item()->::mail::mail_item::MergeFrom(from._internal_item());
  }
}

void MSG_Ret_RefreshMail_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Ret_RefreshMail_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_RefreshMail_SC::CopyFrom(const MSG_Ret_RefreshMail_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Ret_RefreshMail_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_RefreshMail_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_RefreshMail_SC::InternalSwap(MSG_Ret_RefreshMail_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_RefreshMail_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_RefreshMailState_SC::InitAsDefaultInstance() {
}
class MSG_Ret_RefreshMailState_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_RefreshMailState_SC>()._has_bits_);
  static void set_has_mailid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_Ret_RefreshMailState_SC::MSG_Ret_RefreshMailState_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Ret_RefreshMailState_SC)
}
MSG_Ret_RefreshMailState_SC::MSG_Ret_RefreshMailState_SC(const MSG_Ret_RefreshMailState_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mailid_, &from.mailid_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&mailid_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Ret_RefreshMailState_SC)
}

void MSG_Ret_RefreshMailState_SC::SharedCtor() {
  ::memset(&mailid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&mailid_)) + sizeof(state_));
}

MSG_Ret_RefreshMailState_SC::~MSG_Ret_RefreshMailState_SC() {
  // @@protoc_insertion_point(destructor:mail.MSG_Ret_RefreshMailState_SC)
  SharedDtor();
}

void MSG_Ret_RefreshMailState_SC::SharedDtor() {
}

void MSG_Ret_RefreshMailState_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_RefreshMailState_SC& MSG_Ret_RefreshMailState_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_RefreshMailState_SC_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_RefreshMailState_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Ret_RefreshMailState_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&mailid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&state_) -
        reinterpret_cast<char*>(&mailid_)) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_RefreshMailState_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 mailid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_mailid(&has_bits);
          mailid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_state(&has_bits);
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_RefreshMailState_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Ret_RefreshMailState_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 mailid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_mailid(), target);
  }

  // optional uint32 state = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Ret_RefreshMailState_SC)
  return target;
}

size_t MSG_Ret_RefreshMailState_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Ret_RefreshMailState_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 mailid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_mailid());
    }

    // optional uint32 state = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_state());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_RefreshMailState_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Ret_RefreshMailState_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_RefreshMailState_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_RefreshMailState_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Ret_RefreshMailState_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Ret_RefreshMailState_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_RefreshMailState_SC::MergeFrom(const MSG_Ret_RefreshMailState_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Ret_RefreshMailState_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mailid_ = from.mailid_;
    }
    if (cached_has_bits & 0x00000002u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_RefreshMailState_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Ret_RefreshMailState_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_RefreshMailState_SC::CopyFrom(const MSG_Ret_RefreshMailState_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Ret_RefreshMailState_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_RefreshMailState_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_RefreshMailState_SC::InternalSwap(MSG_Ret_RefreshMailState_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(mailid_, other->mailid_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_RefreshMailState_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_OpenMail_CS::InitAsDefaultInstance() {
}
class MSG_Req_OpenMail_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_OpenMail_CS>()._has_bits_);
  static void set_has_mailid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_OpenMail_CS::MSG_Req_OpenMail_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Req_OpenMail_CS)
}
MSG_Req_OpenMail_CS::MSG_Req_OpenMail_CS(const MSG_Req_OpenMail_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mailid_ = from.mailid_;
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Req_OpenMail_CS)
}

void MSG_Req_OpenMail_CS::SharedCtor() {
  mailid_ = PROTOBUF_ULONGLONG(0);
}

MSG_Req_OpenMail_CS::~MSG_Req_OpenMail_CS() {
  // @@protoc_insertion_point(destructor:mail.MSG_Req_OpenMail_CS)
  SharedDtor();
}

void MSG_Req_OpenMail_CS::SharedDtor() {
}

void MSG_Req_OpenMail_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_OpenMail_CS& MSG_Req_OpenMail_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_OpenMail_CS_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_OpenMail_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Req_OpenMail_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mailid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_OpenMail_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 mailid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_mailid(&has_bits);
          mailid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_OpenMail_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Req_OpenMail_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 mailid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_mailid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Req_OpenMail_CS)
  return target;
}

size_t MSG_Req_OpenMail_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Req_OpenMail_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 mailid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_mailid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_OpenMail_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Req_OpenMail_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_OpenMail_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_OpenMail_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Req_OpenMail_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Req_OpenMail_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_OpenMail_CS::MergeFrom(const MSG_Req_OpenMail_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Req_OpenMail_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mailid()) {
    _internal_set_mailid(from._internal_mailid());
  }
}

void MSG_Req_OpenMail_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Req_OpenMail_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_OpenMail_CS::CopyFrom(const MSG_Req_OpenMail_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Req_OpenMail_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_OpenMail_CS::IsInitialized() const {
  return true;
}

void MSG_Req_OpenMail_CS::InternalSwap(MSG_Req_OpenMail_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(mailid_, other->mailid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_OpenMail_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_GetAttachment_CS::InitAsDefaultInstance() {
}
class MSG_Req_GetAttachment_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_GetAttachment_CS>()._has_bits_);
  static void set_has_mailid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_GetAttachment_CS::MSG_Req_GetAttachment_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Req_GetAttachment_CS)
}
MSG_Req_GetAttachment_CS::MSG_Req_GetAttachment_CS(const MSG_Req_GetAttachment_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mailid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_mailid()) {
    mailid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.mailid_);
  }
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Req_GetAttachment_CS)
}

void MSG_Req_GetAttachment_CS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Req_GetAttachment_CS_mail_5fcmd_2eproto.base);
  mailid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MSG_Req_GetAttachment_CS::~MSG_Req_GetAttachment_CS() {
  // @@protoc_insertion_point(destructor:mail.MSG_Req_GetAttachment_CS)
  SharedDtor();
}

void MSG_Req_GetAttachment_CS::SharedDtor() {
  mailid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MSG_Req_GetAttachment_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_GetAttachment_CS& MSG_Req_GetAttachment_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_GetAttachment_CS_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_GetAttachment_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Req_GetAttachment_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mailid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_GetAttachment_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string mailid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mailid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mail.MSG_Req_GetAttachment_CS.mailid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_GetAttachment_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Req_GetAttachment_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string mailid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_mailid().data(), static_cast<int>(this->_internal_mailid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mail.MSG_Req_GetAttachment_CS.mailid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mailid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Req_GetAttachment_CS)
  return target;
}

size_t MSG_Req_GetAttachment_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Req_GetAttachment_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string mailid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mailid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_GetAttachment_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Req_GetAttachment_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_GetAttachment_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_GetAttachment_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Req_GetAttachment_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Req_GetAttachment_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_GetAttachment_CS::MergeFrom(const MSG_Req_GetAttachment_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Req_GetAttachment_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mailid()) {
    _has_bits_[0] |= 0x00000001u;
    mailid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.mailid_);
  }
}

void MSG_Req_GetAttachment_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Req_GetAttachment_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_GetAttachment_CS::CopyFrom(const MSG_Req_GetAttachment_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Req_GetAttachment_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_GetAttachment_CS::IsInitialized() const {
  return true;
}

void MSG_Req_GetAttachment_CS::InternalSwap(MSG_Req_GetAttachment_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mailid_.Swap(&other->mailid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_GetAttachment_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_GetAttachment_SC::InitAsDefaultInstance() {
}
class MSG_Ret_GetAttachment_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_GetAttachment_SC>()._has_bits_);
  static void set_has_mailid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ret(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_Ret_GetAttachment_SC::MSG_Ret_GetAttachment_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Ret_GetAttachment_SC)
}
MSG_Ret_GetAttachment_SC::MSG_Ret_GetAttachment_SC(const MSG_Ret_GetAttachment_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mailid_, &from.mailid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&mailid_)) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Ret_GetAttachment_SC)
}

void MSG_Ret_GetAttachment_SC::SharedCtor() {
  ::memset(&mailid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&mailid_)) + sizeof(ret_));
}

MSG_Ret_GetAttachment_SC::~MSG_Ret_GetAttachment_SC() {
  // @@protoc_insertion_point(destructor:mail.MSG_Ret_GetAttachment_SC)
  SharedDtor();
}

void MSG_Ret_GetAttachment_SC::SharedDtor() {
}

void MSG_Ret_GetAttachment_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_GetAttachment_SC& MSG_Ret_GetAttachment_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_GetAttachment_SC_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_GetAttachment_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Ret_GetAttachment_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&mailid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ret_) -
        reinterpret_cast<char*>(&mailid_)) + sizeof(ret_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_GetAttachment_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 mailid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_mailid(&has_bits);
          mailid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool ret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ret(&has_bits);
          ret_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_GetAttachment_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Ret_GetAttachment_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 mailid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_mailid(), target);
  }

  // optional bool ret = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_ret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Ret_GetAttachment_SC)
  return target;
}

size_t MSG_Ret_GetAttachment_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Ret_GetAttachment_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 mailid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_mailid());
    }

    // optional bool ret = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_GetAttachment_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Ret_GetAttachment_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_GetAttachment_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_GetAttachment_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Ret_GetAttachment_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Ret_GetAttachment_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_GetAttachment_SC::MergeFrom(const MSG_Ret_GetAttachment_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Ret_GetAttachment_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mailid_ = from.mailid_;
    }
    if (cached_has_bits & 0x00000002u) {
      ret_ = from.ret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_GetAttachment_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Ret_GetAttachment_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_GetAttachment_SC::CopyFrom(const MSG_Ret_GetAttachment_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Ret_GetAttachment_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_GetAttachment_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_GetAttachment_SC::InternalSwap(MSG_Ret_GetAttachment_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(mailid_, other->mailid_);
  swap(ret_, other->ret_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_GetAttachment_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_GetAllAttachment_CS::InitAsDefaultInstance() {
}
class MSG_Req_GetAllAttachment_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_GetAllAttachment_CS>()._has_bits_);
};

MSG_Req_GetAllAttachment_CS::MSG_Req_GetAllAttachment_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Req_GetAllAttachment_CS)
}
MSG_Req_GetAllAttachment_CS::MSG_Req_GetAllAttachment_CS(const MSG_Req_GetAllAttachment_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Req_GetAllAttachment_CS)
}

void MSG_Req_GetAllAttachment_CS::SharedCtor() {
}

MSG_Req_GetAllAttachment_CS::~MSG_Req_GetAllAttachment_CS() {
  // @@protoc_insertion_point(destructor:mail.MSG_Req_GetAllAttachment_CS)
  SharedDtor();
}

void MSG_Req_GetAllAttachment_CS::SharedDtor() {
}

void MSG_Req_GetAllAttachment_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_GetAllAttachment_CS& MSG_Req_GetAllAttachment_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_GetAllAttachment_CS_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_GetAllAttachment_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Req_GetAllAttachment_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_GetAllAttachment_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_GetAllAttachment_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Req_GetAllAttachment_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Req_GetAllAttachment_CS)
  return target;
}

size_t MSG_Req_GetAllAttachment_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Req_GetAllAttachment_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_GetAllAttachment_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Req_GetAllAttachment_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_GetAllAttachment_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_GetAllAttachment_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Req_GetAllAttachment_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Req_GetAllAttachment_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_GetAllAttachment_CS::MergeFrom(const MSG_Req_GetAllAttachment_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Req_GetAllAttachment_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_Req_GetAllAttachment_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Req_GetAllAttachment_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_GetAllAttachment_CS::CopyFrom(const MSG_Req_GetAllAttachment_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Req_GetAllAttachment_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_GetAllAttachment_CS::IsInitialized() const {
  return true;
}

void MSG_Req_GetAllAttachment_CS::InternalSwap(MSG_Req_GetAllAttachment_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_GetAllAttachment_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_DeleteMail_CS::InitAsDefaultInstance() {
}
class MSG_Req_DeleteMail_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_DeleteMail_CS>()._has_bits_);
  static void set_has_mailid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_DeleteMail_CS::MSG_Req_DeleteMail_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Req_DeleteMail_CS)
}
MSG_Req_DeleteMail_CS::MSG_Req_DeleteMail_CS(const MSG_Req_DeleteMail_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mailid_ = from.mailid_;
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Req_DeleteMail_CS)
}

void MSG_Req_DeleteMail_CS::SharedCtor() {
  mailid_ = PROTOBUF_ULONGLONG(0);
}

MSG_Req_DeleteMail_CS::~MSG_Req_DeleteMail_CS() {
  // @@protoc_insertion_point(destructor:mail.MSG_Req_DeleteMail_CS)
  SharedDtor();
}

void MSG_Req_DeleteMail_CS::SharedDtor() {
}

void MSG_Req_DeleteMail_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_DeleteMail_CS& MSG_Req_DeleteMail_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_DeleteMail_CS_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_DeleteMail_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Req_DeleteMail_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mailid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_DeleteMail_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 mailid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_mailid(&has_bits);
          mailid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_DeleteMail_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Req_DeleteMail_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 mailid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_mailid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Req_DeleteMail_CS)
  return target;
}

size_t MSG_Req_DeleteMail_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Req_DeleteMail_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 mailid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_mailid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_DeleteMail_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Req_DeleteMail_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_DeleteMail_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_DeleteMail_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Req_DeleteMail_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Req_DeleteMail_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_DeleteMail_CS::MergeFrom(const MSG_Req_DeleteMail_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Req_DeleteMail_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mailid()) {
    _internal_set_mailid(from._internal_mailid());
  }
}

void MSG_Req_DeleteMail_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Req_DeleteMail_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_DeleteMail_CS::CopyFrom(const MSG_Req_DeleteMail_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Req_DeleteMail_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_DeleteMail_CS::IsInitialized() const {
  return true;
}

void MSG_Req_DeleteMail_CS::InternalSwap(MSG_Req_DeleteMail_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(mailid_, other->mailid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_DeleteMail_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_DeleteMail_SC::InitAsDefaultInstance() {
}
class MSG_Ret_DeleteMail_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_DeleteMail_SC>()._has_bits_);
  static void set_has_ret(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_DeleteMail_SC::MSG_Ret_DeleteMail_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Ret_DeleteMail_SC)
}
MSG_Ret_DeleteMail_SC::MSG_Ret_DeleteMail_SC(const MSG_Ret_DeleteMail_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      mailid_(from.mailid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Ret_DeleteMail_SC)
}

void MSG_Ret_DeleteMail_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_DeleteMail_SC_mail_5fcmd_2eproto.base);
  ret_ = false;
}

MSG_Ret_DeleteMail_SC::~MSG_Ret_DeleteMail_SC() {
  // @@protoc_insertion_point(destructor:mail.MSG_Ret_DeleteMail_SC)
  SharedDtor();
}

void MSG_Ret_DeleteMail_SC::SharedDtor() {
}

void MSG_Ret_DeleteMail_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_DeleteMail_SC& MSG_Ret_DeleteMail_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_DeleteMail_SC_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_DeleteMail_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Ret_DeleteMail_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mailid_.Clear();
  ret_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_DeleteMail_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string mailid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_mailid();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mail.MSG_Ret_DeleteMail_SC.mailid");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool ret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ret(&has_bits);
          ret_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_DeleteMail_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Ret_DeleteMail_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string mailid = 1;
  for (int i = 0, n = this->_internal_mailid_size(); i < n; i++) {
    const auto& s = this->_internal_mailid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mail.MSG_Ret_DeleteMail_SC.mailid");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool ret = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_ret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Ret_DeleteMail_SC)
  return target;
}

size_t MSG_Ret_DeleteMail_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Ret_DeleteMail_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string mailid = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(mailid_.size());
  for (int i = 0, n = mailid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      mailid_.Get(i));
  }

  // optional bool ret = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_DeleteMail_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Ret_DeleteMail_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_DeleteMail_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_DeleteMail_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Ret_DeleteMail_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Ret_DeleteMail_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_DeleteMail_SC::MergeFrom(const MSG_Ret_DeleteMail_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Ret_DeleteMail_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mailid_.MergeFrom(from.mailid_);
  if (from._internal_has_ret()) {
    _internal_set_ret(from._internal_ret());
  }
}

void MSG_Ret_DeleteMail_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Ret_DeleteMail_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_DeleteMail_SC::CopyFrom(const MSG_Ret_DeleteMail_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Ret_DeleteMail_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_DeleteMail_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_DeleteMail_SC::InternalSwap(MSG_Ret_DeleteMail_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mailid_.InternalSwap(&other->mailid_);
  swap(ret_, other->ret_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_DeleteMail_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_DeleteAllMail_CS::InitAsDefaultInstance() {
}
class MSG_Req_DeleteAllMail_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_DeleteAllMail_CS>()._has_bits_);
};

MSG_Req_DeleteAllMail_CS::MSG_Req_DeleteAllMail_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mail.MSG_Req_DeleteAllMail_CS)
}
MSG_Req_DeleteAllMail_CS::MSG_Req_DeleteAllMail_CS(const MSG_Req_DeleteAllMail_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mail.MSG_Req_DeleteAllMail_CS)
}

void MSG_Req_DeleteAllMail_CS::SharedCtor() {
}

MSG_Req_DeleteAllMail_CS::~MSG_Req_DeleteAllMail_CS() {
  // @@protoc_insertion_point(destructor:mail.MSG_Req_DeleteAllMail_CS)
  SharedDtor();
}

void MSG_Req_DeleteAllMail_CS::SharedDtor() {
}

void MSG_Req_DeleteAllMail_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_DeleteAllMail_CS& MSG_Req_DeleteAllMail_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_DeleteAllMail_CS_mail_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_DeleteAllMail_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:mail.MSG_Req_DeleteAllMail_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_DeleteAllMail_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_DeleteAllMail_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mail.MSG_Req_DeleteAllMail_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mail.MSG_Req_DeleteAllMail_CS)
  return target;
}

size_t MSG_Req_DeleteAllMail_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mail.MSG_Req_DeleteAllMail_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_DeleteAllMail_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mail.MSG_Req_DeleteAllMail_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_DeleteAllMail_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_DeleteAllMail_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mail.MSG_Req_DeleteAllMail_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mail.MSG_Req_DeleteAllMail_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_DeleteAllMail_CS::MergeFrom(const MSG_Req_DeleteAllMail_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mail.MSG_Req_DeleteAllMail_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_Req_DeleteAllMail_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mail.MSG_Req_DeleteAllMail_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_DeleteAllMail_CS::CopyFrom(const MSG_Req_DeleteAllMail_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mail.MSG_Req_DeleteAllMail_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_DeleteAllMail_CS::IsInitialized() const {
  return true;
}

void MSG_Req_DeleteAllMail_CS::InternalSwap(MSG_Req_DeleteAllMail_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_DeleteAllMail_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mail
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mail::mail_item* Arena::CreateMaybeMessage< ::mail::mail_item >(Arena* arena) {
  return Arena::CreateInternal< ::mail::mail_item >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Req_MailList_CS* Arena::CreateMaybeMessage< ::mail::MSG_Req_MailList_CS >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Req_MailList_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Ret_MailList_SC* Arena::CreateMaybeMessage< ::mail::MSG_Ret_MailList_SC >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Ret_MailList_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Ret_RefreshMail_SC* Arena::CreateMaybeMessage< ::mail::MSG_Ret_RefreshMail_SC >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Ret_RefreshMail_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Ret_RefreshMailState_SC* Arena::CreateMaybeMessage< ::mail::MSG_Ret_RefreshMailState_SC >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Ret_RefreshMailState_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Req_OpenMail_CS* Arena::CreateMaybeMessage< ::mail::MSG_Req_OpenMail_CS >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Req_OpenMail_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Req_GetAttachment_CS* Arena::CreateMaybeMessage< ::mail::MSG_Req_GetAttachment_CS >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Req_GetAttachment_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Ret_GetAttachment_SC* Arena::CreateMaybeMessage< ::mail::MSG_Ret_GetAttachment_SC >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Ret_GetAttachment_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Req_GetAllAttachment_CS* Arena::CreateMaybeMessage< ::mail::MSG_Req_GetAllAttachment_CS >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Req_GetAllAttachment_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Req_DeleteMail_CS* Arena::CreateMaybeMessage< ::mail::MSG_Req_DeleteMail_CS >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Req_DeleteMail_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Ret_DeleteMail_SC* Arena::CreateMaybeMessage< ::mail::MSG_Ret_DeleteMail_SC >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Ret_DeleteMail_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::mail::MSG_Req_DeleteAllMail_CS* Arena::CreateMaybeMessage< ::mail::MSG_Req_DeleteAllMail_CS >(Arena* arena) {
  return Arena::CreateInternal< ::mail::MSG_Req_DeleteAllMail_CS >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
