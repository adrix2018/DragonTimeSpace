// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trade.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_trade_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_trade_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_enum.pb.h"
#include "object.pb.h"
#include "hero.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_trade_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_trade_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[28]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_trade_2eproto;
namespace trade {
class MSG_ReqBuyItem_CS;
class MSG_ReqBuyItem_CSDefaultTypeInternal;
extern MSG_ReqBuyItem_CSDefaultTypeInternal _MSG_ReqBuyItem_CS_default_instance_;
class MSG_ReqGetNewestStaff_CS;
class MSG_ReqGetNewestStaff_CSDefaultTypeInternal;
extern MSG_ReqGetNewestStaff_CSDefaultTypeInternal _MSG_ReqGetNewestStaff_CS_default_instance_;
class MSG_ReqRecommandPrice_CS;
class MSG_ReqRecommandPrice_CSDefaultTypeInternal;
extern MSG_ReqRecommandPrice_CSDefaultTypeInternal _MSG_ReqRecommandPrice_CS_default_instance_;
class MSG_ReqSellStaff_CS;
class MSG_ReqSellStaff_CSDefaultTypeInternal;
extern MSG_ReqSellStaff_CSDefaultTypeInternal _MSG_ReqSellStaff_CS_default_instance_;
class MSG_ReqSellingStaff_CS;
class MSG_ReqSellingStaff_CSDefaultTypeInternal;
extern MSG_ReqSellingStaff_CSDefaultTypeInternal _MSG_ReqSellingStaff_CS_default_instance_;
class MSG_ReqStopSellStaff_CS;
class MSG_ReqStopSellStaff_CSDefaultTypeInternal;
extern MSG_ReqStopSellStaff_CSDefaultTypeInternal _MSG_ReqStopSellStaff_CS_default_instance_;
class MSG_ReqSubSellingList_CS;
class MSG_ReqSubSellingList_CSDefaultTypeInternal;
extern MSG_ReqSubSellingList_CSDefaultTypeInternal _MSG_ReqSubSellingList_CS_default_instance_;
class MSG_ReqSublistPage_CS;
class MSG_ReqSublistPage_CSDefaultTypeInternal;
extern MSG_ReqSublistPage_CSDefaultTypeInternal _MSG_ReqSublistPage_CS_default_instance_;
class MSG_ReqTradeItemHistory_CS;
class MSG_ReqTradeItemHistory_CSDefaultTypeInternal;
extern MSG_ReqTradeItemHistory_CSDefaultTypeInternal _MSG_ReqTradeItemHistory_CS_default_instance_;
class MSG_ReqUserTradeHistory_CS;
class MSG_ReqUserTradeHistory_CSDefaultTypeInternal;
extern MSG_ReqUserTradeHistory_CSDefaultTypeInternal _MSG_ReqUserTradeHistory_CS_default_instance_;
class MSG_ReqWatchList_CS;
class MSG_ReqWatchList_CSDefaultTypeInternal;
extern MSG_ReqWatchList_CSDefaultTypeInternal _MSG_ReqWatchList_CS_default_instance_;
class MSG_ReqWatchTradeItem_CS;
class MSG_ReqWatchTradeItem_CSDefaultTypeInternal;
extern MSG_ReqWatchTradeItem_CSDefaultTypeInternal _MSG_ReqWatchTradeItem_CS_default_instance_;
class MSG_RetBuyItem_SC;
class MSG_RetBuyItem_SCDefaultTypeInternal;
extern MSG_RetBuyItem_SCDefaultTypeInternal _MSG_RetBuyItem_SC_default_instance_;
class MSG_RetGetNewestStaff_SC;
class MSG_RetGetNewestStaff_SCDefaultTypeInternal;
extern MSG_RetGetNewestStaff_SCDefaultTypeInternal _MSG_RetGetNewestStaff_SC_default_instance_;
class MSG_RetRecommandPrice_SC;
class MSG_RetRecommandPrice_SCDefaultTypeInternal;
extern MSG_RetRecommandPrice_SCDefaultTypeInternal _MSG_RetRecommandPrice_SC_default_instance_;
class MSG_RetSellStaff_SC;
class MSG_RetSellStaff_SCDefaultTypeInternal;
extern MSG_RetSellStaff_SCDefaultTypeInternal _MSG_RetSellStaff_SC_default_instance_;
class MSG_RetSellingStaff_SC;
class MSG_RetSellingStaff_SCDefaultTypeInternal;
extern MSG_RetSellingStaff_SCDefaultTypeInternal _MSG_RetSellingStaff_SC_default_instance_;
class MSG_RetStopSellStaff_SC;
class MSG_RetStopSellStaff_SCDefaultTypeInternal;
extern MSG_RetStopSellStaff_SCDefaultTypeInternal _MSG_RetStopSellStaff_SC_default_instance_;
class MSG_RetSubSellingList_SC;
class MSG_RetSubSellingList_SCDefaultTypeInternal;
extern MSG_RetSubSellingList_SCDefaultTypeInternal _MSG_RetSubSellingList_SC_default_instance_;
class MSG_RetSublistPage_SC;
class MSG_RetSublistPage_SCDefaultTypeInternal;
extern MSG_RetSublistPage_SCDefaultTypeInternal _MSG_RetSublistPage_SC_default_instance_;
class MSG_RetTradeItemHistory_SC;
class MSG_RetTradeItemHistory_SCDefaultTypeInternal;
extern MSG_RetTradeItemHistory_SCDefaultTypeInternal _MSG_RetTradeItemHistory_SC_default_instance_;
class MSG_RetUserTradeHistory_SC;
class MSG_RetUserTradeHistory_SCDefaultTypeInternal;
extern MSG_RetUserTradeHistory_SCDefaultTypeInternal _MSG_RetUserTradeHistory_SC_default_instance_;
class MSG_RetWatchList_SC;
class MSG_RetWatchList_SCDefaultTypeInternal;
extern MSG_RetWatchList_SCDefaultTypeInternal _MSG_RetWatchList_SC_default_instance_;
class MSG_RetWatchTradeItem_SC;
class MSG_RetWatchTradeItem_SCDefaultTypeInternal;
extern MSG_RetWatchTradeItem_SCDefaultTypeInternal _MSG_RetWatchTradeItem_SC_default_instance_;
class TradeHistoryItem;
class TradeHistoryItemDefaultTypeInternal;
extern TradeHistoryItemDefaultTypeInternal _TradeHistoryItem_default_instance_;
class TradeItem;
class TradeItemDefaultTypeInternal;
extern TradeItemDefaultTypeInternal _TradeItem_default_instance_;
class TradeItemData;
class TradeItemDataDefaultTypeInternal;
extern TradeItemDataDefaultTypeInternal _TradeItemData_default_instance_;
class UserTradeItem;
class UserTradeItemDefaultTypeInternal;
extern UserTradeItemDefaultTypeInternal _UserTradeItem_default_instance_;
}  // namespace trade
PROTOBUF_NAMESPACE_OPEN
template<> ::trade::MSG_ReqBuyItem_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqBuyItem_CS>(Arena*);
template<> ::trade::MSG_ReqGetNewestStaff_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqGetNewestStaff_CS>(Arena*);
template<> ::trade::MSG_ReqRecommandPrice_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqRecommandPrice_CS>(Arena*);
template<> ::trade::MSG_ReqSellStaff_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqSellStaff_CS>(Arena*);
template<> ::trade::MSG_ReqSellingStaff_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqSellingStaff_CS>(Arena*);
template<> ::trade::MSG_ReqStopSellStaff_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqStopSellStaff_CS>(Arena*);
template<> ::trade::MSG_ReqSubSellingList_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqSubSellingList_CS>(Arena*);
template<> ::trade::MSG_ReqSublistPage_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqSublistPage_CS>(Arena*);
template<> ::trade::MSG_ReqTradeItemHistory_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqTradeItemHistory_CS>(Arena*);
template<> ::trade::MSG_ReqUserTradeHistory_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqUserTradeHistory_CS>(Arena*);
template<> ::trade::MSG_ReqWatchList_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqWatchList_CS>(Arena*);
template<> ::trade::MSG_ReqWatchTradeItem_CS* Arena::CreateMaybeMessage<::trade::MSG_ReqWatchTradeItem_CS>(Arena*);
template<> ::trade::MSG_RetBuyItem_SC* Arena::CreateMaybeMessage<::trade::MSG_RetBuyItem_SC>(Arena*);
template<> ::trade::MSG_RetGetNewestStaff_SC* Arena::CreateMaybeMessage<::trade::MSG_RetGetNewestStaff_SC>(Arena*);
template<> ::trade::MSG_RetRecommandPrice_SC* Arena::CreateMaybeMessage<::trade::MSG_RetRecommandPrice_SC>(Arena*);
template<> ::trade::MSG_RetSellStaff_SC* Arena::CreateMaybeMessage<::trade::MSG_RetSellStaff_SC>(Arena*);
template<> ::trade::MSG_RetSellingStaff_SC* Arena::CreateMaybeMessage<::trade::MSG_RetSellingStaff_SC>(Arena*);
template<> ::trade::MSG_RetStopSellStaff_SC* Arena::CreateMaybeMessage<::trade::MSG_RetStopSellStaff_SC>(Arena*);
template<> ::trade::MSG_RetSubSellingList_SC* Arena::CreateMaybeMessage<::trade::MSG_RetSubSellingList_SC>(Arena*);
template<> ::trade::MSG_RetSublistPage_SC* Arena::CreateMaybeMessage<::trade::MSG_RetSublistPage_SC>(Arena*);
template<> ::trade::MSG_RetTradeItemHistory_SC* Arena::CreateMaybeMessage<::trade::MSG_RetTradeItemHistory_SC>(Arena*);
template<> ::trade::MSG_RetUserTradeHistory_SC* Arena::CreateMaybeMessage<::trade::MSG_RetUserTradeHistory_SC>(Arena*);
template<> ::trade::MSG_RetWatchList_SC* Arena::CreateMaybeMessage<::trade::MSG_RetWatchList_SC>(Arena*);
template<> ::trade::MSG_RetWatchTradeItem_SC* Arena::CreateMaybeMessage<::trade::MSG_RetWatchTradeItem_SC>(Arena*);
template<> ::trade::TradeHistoryItem* Arena::CreateMaybeMessage<::trade::TradeHistoryItem>(Arena*);
template<> ::trade::TradeItem* Arena::CreateMaybeMessage<::trade::TradeItem>(Arena*);
template<> ::trade::TradeItemData* Arena::CreateMaybeMessage<::trade::TradeItemData>(Arena*);
template<> ::trade::UserTradeItem* Arena::CreateMaybeMessage<::trade::UserTradeItem>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace trade {

enum TradeOP : int {
  SELL = 1,
  BUY = 2
};
bool TradeOP_IsValid(int value);
constexpr TradeOP TradeOP_MIN = SELL;
constexpr TradeOP TradeOP_MAX = BUY;
constexpr int TradeOP_ARRAYSIZE = TradeOP_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TradeOP_descriptor();
template<typename T>
inline const std::string& TradeOP_Name(T enum_t_value) {
  static_assert(::std::is_same<T, TradeOP>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function TradeOP_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    TradeOP_descriptor(), enum_t_value);
}
inline bool TradeOP_Parse(
    const std::string& name, TradeOP* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<TradeOP>(
    TradeOP_descriptor(), name, value);
}
// ===================================================================

class MSG_ReqSellStaff_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqSellStaff_CS) */ {
 public:
  MSG_ReqSellStaff_CS();
  virtual ~MSG_ReqSellStaff_CS();

  MSG_ReqSellStaff_CS(const MSG_ReqSellStaff_CS& from);
  MSG_ReqSellStaff_CS(MSG_ReqSellStaff_CS&& from) noexcept
    : MSG_ReqSellStaff_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSellStaff_CS& operator=(const MSG_ReqSellStaff_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSellStaff_CS& operator=(MSG_ReqSellStaff_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSellStaff_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSellStaff_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSellStaff_CS*>(
               &_MSG_ReqSellStaff_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MSG_ReqSellStaff_CS& a, MSG_ReqSellStaff_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSellStaff_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSellStaff_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSellStaff_CS>(nullptr);
  }

  MSG_ReqSellStaff_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSellStaff_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSellStaff_CS& from);
  void MergeFrom(const MSG_ReqSellStaff_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSellStaff_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqSellStaff_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 2,
    kItemtypeFieldNumber = 1,
    kBaseidFieldNumber = 3,
    kPriceFieldNumber = 4,
    kNumFieldNumber = 5,
  };
  // optional string thisid = 2;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // required .msg.SELLTYPE itemtype = 1;
  bool has_itemtype() const;
  private:
  bool _internal_has_itemtype() const;
  public:
  void clear_itemtype();
  ::msg::SELLTYPE itemtype() const;
  void set_itemtype(::msg::SELLTYPE value);
  private:
  ::msg::SELLTYPE _internal_itemtype() const;
  void _internal_set_itemtype(::msg::SELLTYPE value);
  public:

  // optional uint32 baseid = 3;
  bool has_baseid() const;
  private:
  bool _internal_has_baseid() const;
  public:
  void clear_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid() const;
  void set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseid() const;
  void _internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 price = 4;
  bool has_price() const;
  private:
  bool _internal_has_price() const;
  public:
  void clear_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 price() const;
  void set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_price() const;
  void _internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 num = 5;
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqSellStaff_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  int itemtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetSellStaff_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetSellStaff_SC) */ {
 public:
  MSG_RetSellStaff_SC();
  virtual ~MSG_RetSellStaff_SC();

  MSG_RetSellStaff_SC(const MSG_RetSellStaff_SC& from);
  MSG_RetSellStaff_SC(MSG_RetSellStaff_SC&& from) noexcept
    : MSG_RetSellStaff_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetSellStaff_SC& operator=(const MSG_RetSellStaff_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetSellStaff_SC& operator=(MSG_RetSellStaff_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetSellStaff_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetSellStaff_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetSellStaff_SC*>(
               &_MSG_RetSellStaff_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MSG_RetSellStaff_SC& a, MSG_RetSellStaff_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetSellStaff_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetSellStaff_SC* New() const final {
    return CreateMaybeMessage<MSG_RetSellStaff_SC>(nullptr);
  }

  MSG_RetSellStaff_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetSellStaff_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetSellStaff_SC& from);
  void MergeFrom(const MSG_RetSellStaff_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetSellStaff_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetSellStaff_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_RetSellStaff_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class TradeItemData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.TradeItemData) */ {
 public:
  TradeItemData();
  virtual ~TradeItemData();

  TradeItemData(const TradeItemData& from);
  TradeItemData(TradeItemData&& from) noexcept
    : TradeItemData() {
    *this = ::std::move(from);
  }

  inline TradeItemData& operator=(const TradeItemData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TradeItemData& operator=(TradeItemData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TradeItemData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TradeItemData* internal_default_instance() {
    return reinterpret_cast<const TradeItemData*>(
               &_TradeItemData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TradeItemData& a, TradeItemData& b) {
    a.Swap(&b);
  }
  inline void Swap(TradeItemData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TradeItemData* New() const final {
    return CreateMaybeMessage<TradeItemData>(nullptr);
  }

  TradeItemData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TradeItemData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TradeItemData& from);
  void MergeFrom(const TradeItemData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TradeItemData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.TradeItemData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjdataFieldNumber = 2,
    kHerodataFieldNumber = 3,
    kItemtypeFieldNumber = 1,
  };
  // optional .Obj.t_Object objdata = 2;
  bool has_objdata() const;
  private:
  bool _internal_has_objdata() const;
  public:
  void clear_objdata();
  const ::Obj::t_Object& objdata() const;
  ::Obj::t_Object* release_objdata();
  ::Obj::t_Object* mutable_objdata();
  void set_allocated_objdata(::Obj::t_Object* objdata);
  private:
  const ::Obj::t_Object& _internal_objdata() const;
  ::Obj::t_Object* _internal_mutable_objdata();
  public:

  // optional .hero.Hero herodata = 3;
  bool has_herodata() const;
  private:
  bool _internal_has_herodata() const;
  public:
  void clear_herodata();
  const ::hero::Hero& herodata() const;
  ::hero::Hero* release_herodata();
  ::hero::Hero* mutable_herodata();
  void set_allocated_herodata(::hero::Hero* herodata);
  private:
  const ::hero::Hero& _internal_herodata() const;
  ::hero::Hero* _internal_mutable_herodata();
  public:

  // required .msg.SELLTYPE itemtype = 1;
  bool has_itemtype() const;
  private:
  bool _internal_has_itemtype() const;
  public:
  void clear_itemtype();
  ::msg::SELLTYPE itemtype() const;
  void set_itemtype(::msg::SELLTYPE value);
  private:
  ::msg::SELLTYPE _internal_itemtype() const;
  void _internal_set_itemtype(::msg::SELLTYPE value);
  public:

  // @@protoc_insertion_point(class_scope:trade.TradeItemData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::Obj::t_Object* objdata_;
  ::hero::Hero* herodata_;
  int itemtype_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class TradeItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.TradeItem) */ {
 public:
  TradeItem();
  virtual ~TradeItem();

  TradeItem(const TradeItem& from);
  TradeItem(TradeItem&& from) noexcept
    : TradeItem() {
    *this = ::std::move(from);
  }

  inline TradeItem& operator=(const TradeItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline TradeItem& operator=(TradeItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TradeItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TradeItem* internal_default_instance() {
    return reinterpret_cast<const TradeItem*>(
               &_TradeItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(TradeItem& a, TradeItem& b) {
    a.Swap(&b);
  }
  inline void Swap(TradeItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TradeItem* New() const final {
    return CreateMaybeMessage<TradeItem>(nullptr);
  }

  TradeItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TradeItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TradeItem& from);
  void MergeFrom(const TradeItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TradeItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.TradeItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kDataFieldNumber = 4,
    kPriceFieldNumber = 2,
    kSelltimeFieldNumber = 3,
    kIsshowFieldNumber = 5,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional .trade.TradeItemData data = 4;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::trade::TradeItemData& data() const;
  ::trade::TradeItemData* release_data();
  ::trade::TradeItemData* mutable_data();
  void set_allocated_data(::trade::TradeItemData* data);
  private:
  const ::trade::TradeItemData& _internal_data() const;
  ::trade::TradeItemData* _internal_mutable_data();
  public:

  // optional uint32 price = 2;
  bool has_price() const;
  private:
  bool _internal_has_price() const;
  public:
  void clear_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 price() const;
  void set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_price() const;
  void _internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 selltime = 3;
  bool has_selltime() const;
  private:
  bool _internal_has_selltime() const;
  public:
  void clear_selltime();
  ::PROTOBUF_NAMESPACE_ID::uint32 selltime() const;
  void set_selltime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_selltime() const;
  void _internal_set_selltime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool isshow = 5;
  bool has_isshow() const;
  private:
  bool _internal_has_isshow() const;
  public:
  void clear_isshow();
  bool isshow() const;
  void set_isshow(bool value);
  private:
  bool _internal_isshow() const;
  void _internal_set_isshow(bool value);
  public:

  // @@protoc_insertion_point(class_scope:trade.TradeItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::trade::TradeItemData* data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 selltime_;
  bool isshow_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSellingStaff_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqSellingStaff_CS) */ {
 public:
  MSG_ReqSellingStaff_CS();
  virtual ~MSG_ReqSellingStaff_CS();

  MSG_ReqSellingStaff_CS(const MSG_ReqSellingStaff_CS& from);
  MSG_ReqSellingStaff_CS(MSG_ReqSellingStaff_CS&& from) noexcept
    : MSG_ReqSellingStaff_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSellingStaff_CS& operator=(const MSG_ReqSellingStaff_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSellingStaff_CS& operator=(MSG_ReqSellingStaff_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSellingStaff_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSellingStaff_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSellingStaff_CS*>(
               &_MSG_ReqSellingStaff_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MSG_ReqSellingStaff_CS& a, MSG_ReqSellingStaff_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSellingStaff_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSellingStaff_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSellingStaff_CS>(nullptr);
  }

  MSG_ReqSellingStaff_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSellingStaff_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSellingStaff_CS& from);
  void MergeFrom(const MSG_ReqSellingStaff_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSellingStaff_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqSellingStaff_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqSellingStaff_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetSellingStaff_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetSellingStaff_SC) */ {
 public:
  MSG_RetSellingStaff_SC();
  virtual ~MSG_RetSellingStaff_SC();

  MSG_RetSellingStaff_SC(const MSG_RetSellingStaff_SC& from);
  MSG_RetSellingStaff_SC(MSG_RetSellingStaff_SC&& from) noexcept
    : MSG_RetSellingStaff_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetSellingStaff_SC& operator=(const MSG_RetSellingStaff_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetSellingStaff_SC& operator=(MSG_RetSellingStaff_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetSellingStaff_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetSellingStaff_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetSellingStaff_SC*>(
               &_MSG_RetSellingStaff_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MSG_RetSellingStaff_SC& a, MSG_RetSellingStaff_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetSellingStaff_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetSellingStaff_SC* New() const final {
    return CreateMaybeMessage<MSG_RetSellingStaff_SC>(nullptr);
  }

  MSG_RetSellingStaff_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetSellingStaff_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetSellingStaff_SC& from);
  void MergeFrom(const MSG_RetSellingStaff_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetSellingStaff_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetSellingStaff_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemlistFieldNumber = 1,
  };
  // repeated .trade.TradeItem itemlist = 1;
  int itemlist_size() const;
  private:
  int _internal_itemlist_size() const;
  public:
  void clear_itemlist();
  ::trade::TradeItem* mutable_itemlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >*
      mutable_itemlist();
  private:
  const ::trade::TradeItem& _internal_itemlist(int index) const;
  ::trade::TradeItem* _internal_add_itemlist();
  public:
  const ::trade::TradeItem& itemlist(int index) const;
  ::trade::TradeItem* add_itemlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >&
      itemlist() const;

  // @@protoc_insertion_point(class_scope:trade.MSG_RetSellingStaff_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem > itemlist_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqRecommandPrice_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqRecommandPrice_CS) */ {
 public:
  MSG_ReqRecommandPrice_CS();
  virtual ~MSG_ReqRecommandPrice_CS();

  MSG_ReqRecommandPrice_CS(const MSG_ReqRecommandPrice_CS& from);
  MSG_ReqRecommandPrice_CS(MSG_ReqRecommandPrice_CS&& from) noexcept
    : MSG_ReqRecommandPrice_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqRecommandPrice_CS& operator=(const MSG_ReqRecommandPrice_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqRecommandPrice_CS& operator=(MSG_ReqRecommandPrice_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqRecommandPrice_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqRecommandPrice_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqRecommandPrice_CS*>(
               &_MSG_ReqRecommandPrice_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MSG_ReqRecommandPrice_CS& a, MSG_ReqRecommandPrice_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqRecommandPrice_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqRecommandPrice_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqRecommandPrice_CS>(nullptr);
  }

  MSG_ReqRecommandPrice_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqRecommandPrice_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqRecommandPrice_CS& from);
  void MergeFrom(const MSG_ReqRecommandPrice_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqRecommandPrice_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqRecommandPrice_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemtypeFieldNumber = 1,
    kBaseidFieldNumber = 2,
  };
  // required .msg.SELLTYPE itemtype = 1;
  bool has_itemtype() const;
  private:
  bool _internal_has_itemtype() const;
  public:
  void clear_itemtype();
  ::msg::SELLTYPE itemtype() const;
  void set_itemtype(::msg::SELLTYPE value);
  private:
  ::msg::SELLTYPE _internal_itemtype() const;
  void _internal_set_itemtype(::msg::SELLTYPE value);
  public:

  // optional uint32 baseid = 2;
  bool has_baseid() const;
  private:
  bool _internal_has_baseid() const;
  public:
  void clear_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid() const;
  void set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseid() const;
  void _internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqRecommandPrice_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int itemtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRecommandPrice_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetRecommandPrice_SC) */ {
 public:
  MSG_RetRecommandPrice_SC();
  virtual ~MSG_RetRecommandPrice_SC();

  MSG_RetRecommandPrice_SC(const MSG_RetRecommandPrice_SC& from);
  MSG_RetRecommandPrice_SC(MSG_RetRecommandPrice_SC&& from) noexcept
    : MSG_RetRecommandPrice_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRecommandPrice_SC& operator=(const MSG_RetRecommandPrice_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRecommandPrice_SC& operator=(MSG_RetRecommandPrice_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRecommandPrice_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRecommandPrice_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRecommandPrice_SC*>(
               &_MSG_RetRecommandPrice_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_RetRecommandPrice_SC& a, MSG_RetRecommandPrice_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRecommandPrice_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRecommandPrice_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRecommandPrice_SC>(nullptr);
  }

  MSG_RetRecommandPrice_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRecommandPrice_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRecommandPrice_SC& from);
  void MergeFrom(const MSG_RetRecommandPrice_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRecommandPrice_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetRecommandPrice_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemtypeFieldNumber = 1,
    kBaseidFieldNumber = 2,
    kPriceFieldNumber = 3,
  };
  // required .msg.SELLTYPE itemtype = 1;
  bool has_itemtype() const;
  private:
  bool _internal_has_itemtype() const;
  public:
  void clear_itemtype();
  ::msg::SELLTYPE itemtype() const;
  void set_itemtype(::msg::SELLTYPE value);
  private:
  ::msg::SELLTYPE _internal_itemtype() const;
  void _internal_set_itemtype(::msg::SELLTYPE value);
  public:

  // optional uint32 baseid = 2;
  bool has_baseid() const;
  private:
  bool _internal_has_baseid() const;
  public:
  void clear_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid() const;
  void set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseid() const;
  void _internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 price = 3;
  bool has_price() const;
  private:
  bool _internal_has_price() const;
  public:
  void clear_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 price() const;
  void set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_price() const;
  void _internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_RetRecommandPrice_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int itemtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 price_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqStopSellStaff_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqStopSellStaff_CS) */ {
 public:
  MSG_ReqStopSellStaff_CS();
  virtual ~MSG_ReqStopSellStaff_CS();

  MSG_ReqStopSellStaff_CS(const MSG_ReqStopSellStaff_CS& from);
  MSG_ReqStopSellStaff_CS(MSG_ReqStopSellStaff_CS&& from) noexcept
    : MSG_ReqStopSellStaff_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqStopSellStaff_CS& operator=(const MSG_ReqStopSellStaff_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqStopSellStaff_CS& operator=(MSG_ReqStopSellStaff_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqStopSellStaff_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqStopSellStaff_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqStopSellStaff_CS*>(
               &_MSG_ReqStopSellStaff_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_ReqStopSellStaff_CS& a, MSG_ReqStopSellStaff_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqStopSellStaff_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqStopSellStaff_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqStopSellStaff_CS>(nullptr);
  }

  MSG_ReqStopSellStaff_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqStopSellStaff_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqStopSellStaff_CS& from);
  void MergeFrom(const MSG_ReqStopSellStaff_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqStopSellStaff_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqStopSellStaff_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqStopSellStaff_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetStopSellStaff_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetStopSellStaff_SC) */ {
 public:
  MSG_RetStopSellStaff_SC();
  virtual ~MSG_RetStopSellStaff_SC();

  MSG_RetStopSellStaff_SC(const MSG_RetStopSellStaff_SC& from);
  MSG_RetStopSellStaff_SC(MSG_RetStopSellStaff_SC&& from) noexcept
    : MSG_RetStopSellStaff_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetStopSellStaff_SC& operator=(const MSG_RetStopSellStaff_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetStopSellStaff_SC& operator=(MSG_RetStopSellStaff_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetStopSellStaff_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetStopSellStaff_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetStopSellStaff_SC*>(
               &_MSG_RetStopSellStaff_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_RetStopSellStaff_SC& a, MSG_RetStopSellStaff_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetStopSellStaff_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetStopSellStaff_SC* New() const final {
    return CreateMaybeMessage<MSG_RetStopSellStaff_SC>(nullptr);
  }

  MSG_RetStopSellStaff_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetStopSellStaff_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetStopSellStaff_SC& from);
  void MergeFrom(const MSG_RetStopSellStaff_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetStopSellStaff_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetStopSellStaff_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_RetStopSellStaff_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSubSellingList_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqSubSellingList_CS) */ {
 public:
  MSG_ReqSubSellingList_CS();
  virtual ~MSG_ReqSubSellingList_CS();

  MSG_ReqSubSellingList_CS(const MSG_ReqSubSellingList_CS& from);
  MSG_ReqSubSellingList_CS(MSG_ReqSubSellingList_CS&& from) noexcept
    : MSG_ReqSubSellingList_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSubSellingList_CS& operator=(const MSG_ReqSubSellingList_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSubSellingList_CS& operator=(MSG_ReqSubSellingList_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSubSellingList_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSubSellingList_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSubSellingList_CS*>(
               &_MSG_ReqSubSellingList_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MSG_ReqSubSellingList_CS& a, MSG_ReqSubSellingList_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSubSellingList_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSubSellingList_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSubSellingList_CS>(nullptr);
  }

  MSG_ReqSubSellingList_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSubSellingList_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSubSellingList_CS& from);
  void MergeFrom(const MSG_ReqSubSellingList_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSubSellingList_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqSubSellingList_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdlistFieldNumber = 3,
    kItemtypeFieldNumber = 1,
    kLevelstarFieldNumber = 2,
    kCheckshowFieldNumber = 4,
  };
  // repeated uint32 idlist = 3;
  int idlist_size() const;
  private:
  int _internal_idlist_size() const;
  public:
  void clear_idlist();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_idlist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_idlist() const;
  void _internal_add_idlist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_idlist();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 idlist(int index) const;
  void set_idlist(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_idlist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      idlist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_idlist();

  // required .msg.SELLTYPE itemtype = 1;
  bool has_itemtype() const;
  private:
  bool _internal_has_itemtype() const;
  public:
  void clear_itemtype();
  ::msg::SELLTYPE itemtype() const;
  void set_itemtype(::msg::SELLTYPE value);
  private:
  ::msg::SELLTYPE _internal_itemtype() const;
  void _internal_set_itemtype(::msg::SELLTYPE value);
  public:

  // optional uint32 levelstar = 2;
  bool has_levelstar() const;
  private:
  bool _internal_has_levelstar() const;
  public:
  void clear_levelstar();
  ::PROTOBUF_NAMESPACE_ID::uint32 levelstar() const;
  void set_levelstar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_levelstar() const;
  void _internal_set_levelstar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool checkshow = 4;
  bool has_checkshow() const;
  private:
  bool _internal_has_checkshow() const;
  public:
  void clear_checkshow();
  bool checkshow() const;
  void set_checkshow(bool value);
  private:
  bool _internal_checkshow() const;
  void _internal_set_checkshow(bool value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqSubSellingList_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > idlist_;
  int itemtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 levelstar_;
  bool checkshow_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetSubSellingList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetSubSellingList_SC) */ {
 public:
  MSG_RetSubSellingList_SC();
  virtual ~MSG_RetSubSellingList_SC();

  MSG_RetSubSellingList_SC(const MSG_RetSubSellingList_SC& from);
  MSG_RetSubSellingList_SC(MSG_RetSubSellingList_SC&& from) noexcept
    : MSG_RetSubSellingList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetSubSellingList_SC& operator=(const MSG_RetSubSellingList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetSubSellingList_SC& operator=(MSG_RetSubSellingList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetSubSellingList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetSubSellingList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetSubSellingList_SC*>(
               &_MSG_RetSubSellingList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_RetSubSellingList_SC& a, MSG_RetSubSellingList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetSubSellingList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetSubSellingList_SC* New() const final {
    return CreateMaybeMessage<MSG_RetSubSellingList_SC>(nullptr);
  }

  MSG_RetSubSellingList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetSubSellingList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetSubSellingList_SC& from);
  void MergeFrom(const MSG_RetSubSellingList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetSubSellingList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetSubSellingList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTotalpageFieldNumber = 1,
  };
  // optional uint32 totalpage = 1;
  bool has_totalpage() const;
  private:
  bool _internal_has_totalpage() const;
  public:
  void clear_totalpage();
  ::PROTOBUF_NAMESPACE_ID::uint32 totalpage() const;
  void set_totalpage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_totalpage() const;
  void _internal_set_totalpage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_RetSubSellingList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 totalpage_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqBuyItem_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqBuyItem_CS) */ {
 public:
  MSG_ReqBuyItem_CS();
  virtual ~MSG_ReqBuyItem_CS();

  MSG_ReqBuyItem_CS(const MSG_ReqBuyItem_CS& from);
  MSG_ReqBuyItem_CS(MSG_ReqBuyItem_CS&& from) noexcept
    : MSG_ReqBuyItem_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqBuyItem_CS& operator=(const MSG_ReqBuyItem_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqBuyItem_CS& operator=(MSG_ReqBuyItem_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqBuyItem_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqBuyItem_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqBuyItem_CS*>(
               &_MSG_ReqBuyItem_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_ReqBuyItem_CS& a, MSG_ReqBuyItem_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqBuyItem_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqBuyItem_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqBuyItem_CS>(nullptr);
  }

  MSG_ReqBuyItem_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqBuyItem_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqBuyItem_CS& from);
  void MergeFrom(const MSG_ReqBuyItem_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqBuyItem_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqBuyItem_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 5,
    kItemtypeFieldNumber = 1,
    kBaseidFieldNumber = 2,
    kLevelstarFieldNumber = 3,
    kNumFieldNumber = 4,
  };
  // optional string thisid = 5;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // required .msg.SELLTYPE itemtype = 1;
  bool has_itemtype() const;
  private:
  bool _internal_has_itemtype() const;
  public:
  void clear_itemtype();
  ::msg::SELLTYPE itemtype() const;
  void set_itemtype(::msg::SELLTYPE value);
  private:
  ::msg::SELLTYPE _internal_itemtype() const;
  void _internal_set_itemtype(::msg::SELLTYPE value);
  public:

  // optional uint32 baseid = 2;
  bool has_baseid() const;
  private:
  bool _internal_has_baseid() const;
  public:
  void clear_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid() const;
  void set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseid() const;
  void _internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 levelstar = 3;
  bool has_levelstar() const;
  private:
  bool _internal_has_levelstar() const;
  public:
  void clear_levelstar();
  ::PROTOBUF_NAMESPACE_ID::uint32 levelstar() const;
  void set_levelstar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_levelstar() const;
  void _internal_set_levelstar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 num = 4;
  bool has_num() const;
  private:
  bool _internal_has_num() const;
  public:
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqBuyItem_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  int itemtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 levelstar_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetBuyItem_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetBuyItem_SC) */ {
 public:
  MSG_RetBuyItem_SC();
  virtual ~MSG_RetBuyItem_SC();

  MSG_RetBuyItem_SC(const MSG_RetBuyItem_SC& from);
  MSG_RetBuyItem_SC(MSG_RetBuyItem_SC&& from) noexcept
    : MSG_RetBuyItem_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetBuyItem_SC& operator=(const MSG_RetBuyItem_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetBuyItem_SC& operator=(MSG_RetBuyItem_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetBuyItem_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetBuyItem_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetBuyItem_SC*>(
               &_MSG_RetBuyItem_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_RetBuyItem_SC& a, MSG_RetBuyItem_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetBuyItem_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetBuyItem_SC* New() const final {
    return CreateMaybeMessage<MSG_RetBuyItem_SC>(nullptr);
  }

  MSG_RetBuyItem_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetBuyItem_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetBuyItem_SC& from);
  void MergeFrom(const MSG_RetBuyItem_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetBuyItem_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetBuyItem_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_RetBuyItem_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqTradeItemHistory_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqTradeItemHistory_CS) */ {
 public:
  MSG_ReqTradeItemHistory_CS();
  virtual ~MSG_ReqTradeItemHistory_CS();

  MSG_ReqTradeItemHistory_CS(const MSG_ReqTradeItemHistory_CS& from);
  MSG_ReqTradeItemHistory_CS(MSG_ReqTradeItemHistory_CS&& from) noexcept
    : MSG_ReqTradeItemHistory_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqTradeItemHistory_CS& operator=(const MSG_ReqTradeItemHistory_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqTradeItemHistory_CS& operator=(MSG_ReqTradeItemHistory_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqTradeItemHistory_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqTradeItemHistory_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqTradeItemHistory_CS*>(
               &_MSG_ReqTradeItemHistory_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MSG_ReqTradeItemHistory_CS& a, MSG_ReqTradeItemHistory_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqTradeItemHistory_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqTradeItemHistory_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqTradeItemHistory_CS>(nullptr);
  }

  MSG_ReqTradeItemHistory_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqTradeItemHistory_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqTradeItemHistory_CS& from);
  void MergeFrom(const MSG_ReqTradeItemHistory_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqTradeItemHistory_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqTradeItemHistory_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemtypeFieldNumber = 1,
    kBaseidFieldNumber = 2,
  };
  // required .msg.SELLTYPE itemtype = 1;
  bool has_itemtype() const;
  private:
  bool _internal_has_itemtype() const;
  public:
  void clear_itemtype();
  ::msg::SELLTYPE itemtype() const;
  void set_itemtype(::msg::SELLTYPE value);
  private:
  ::msg::SELLTYPE _internal_itemtype() const;
  void _internal_set_itemtype(::msg::SELLTYPE value);
  public:

  // optional uint32 baseid = 2;
  bool has_baseid() const;
  private:
  bool _internal_has_baseid() const;
  public:
  void clear_baseid();
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid() const;
  void set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baseid() const;
  void _internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqTradeItemHistory_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int itemtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baseid_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class TradeHistoryItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.TradeHistoryItem) */ {
 public:
  TradeHistoryItem();
  virtual ~TradeHistoryItem();

  TradeHistoryItem(const TradeHistoryItem& from);
  TradeHistoryItem(TradeHistoryItem&& from) noexcept
    : TradeHistoryItem() {
    *this = ::std::move(from);
  }

  inline TradeHistoryItem& operator=(const TradeHistoryItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline TradeHistoryItem& operator=(TradeHistoryItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TradeHistoryItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TradeHistoryItem* internal_default_instance() {
    return reinterpret_cast<const TradeHistoryItem*>(
               &_TradeHistoryItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(TradeHistoryItem& a, TradeHistoryItem& b) {
    a.Swap(&b);
  }
  inline void Swap(TradeHistoryItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TradeHistoryItem* New() const final {
    return CreateMaybeMessage<TradeHistoryItem>(nullptr);
  }

  TradeHistoryItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TradeHistoryItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TradeHistoryItem& from);
  void MergeFrom(const TradeHistoryItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TradeHistoryItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.TradeHistoryItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
    kPriceFieldNumber = 2,
    kTradetimeFieldNumber = 3,
  };
  // optional .trade.TradeItemData data = 1;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::trade::TradeItemData& data() const;
  ::trade::TradeItemData* release_data();
  ::trade::TradeItemData* mutable_data();
  void set_allocated_data(::trade::TradeItemData* data);
  private:
  const ::trade::TradeItemData& _internal_data() const;
  ::trade::TradeItemData* _internal_mutable_data();
  public:

  // optional uint32 price = 2;
  bool has_price() const;
  private:
  bool _internal_has_price() const;
  public:
  void clear_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 price() const;
  void set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_price() const;
  void _internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tradetime = 3;
  bool has_tradetime() const;
  private:
  bool _internal_has_tradetime() const;
  public:
  void clear_tradetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 tradetime() const;
  void set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tradetime() const;
  void _internal_set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.TradeHistoryItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::trade::TradeItemData* data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tradetime_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetTradeItemHistory_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetTradeItemHistory_SC) */ {
 public:
  MSG_RetTradeItemHistory_SC();
  virtual ~MSG_RetTradeItemHistory_SC();

  MSG_RetTradeItemHistory_SC(const MSG_RetTradeItemHistory_SC& from);
  MSG_RetTradeItemHistory_SC(MSG_RetTradeItemHistory_SC&& from) noexcept
    : MSG_RetTradeItemHistory_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetTradeItemHistory_SC& operator=(const MSG_RetTradeItemHistory_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetTradeItemHistory_SC& operator=(MSG_RetTradeItemHistory_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetTradeItemHistory_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetTradeItemHistory_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetTradeItemHistory_SC*>(
               &_MSG_RetTradeItemHistory_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MSG_RetTradeItemHistory_SC& a, MSG_RetTradeItemHistory_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetTradeItemHistory_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetTradeItemHistory_SC* New() const final {
    return CreateMaybeMessage<MSG_RetTradeItemHistory_SC>(nullptr);
  }

  MSG_RetTradeItemHistory_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetTradeItemHistory_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetTradeItemHistory_SC& from);
  void MergeFrom(const MSG_RetTradeItemHistory_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetTradeItemHistory_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetTradeItemHistory_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
  };
  // repeated .trade.TradeHistoryItem item = 1;
  int item_size() const;
  private:
  int _internal_item_size() const;
  public:
  void clear_item();
  ::trade::TradeHistoryItem* mutable_item(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeHistoryItem >*
      mutable_item();
  private:
  const ::trade::TradeHistoryItem& _internal_item(int index) const;
  ::trade::TradeHistoryItem* _internal_add_item();
  public:
  const ::trade::TradeHistoryItem& item(int index) const;
  ::trade::TradeHistoryItem* add_item();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeHistoryItem >&
      item() const;

  // @@protoc_insertion_point(class_scope:trade.MSG_RetTradeItemHistory_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeHistoryItem > item_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSublistPage_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqSublistPage_CS) */ {
 public:
  MSG_ReqSublistPage_CS();
  virtual ~MSG_ReqSublistPage_CS();

  MSG_ReqSublistPage_CS(const MSG_ReqSublistPage_CS& from);
  MSG_ReqSublistPage_CS(MSG_ReqSublistPage_CS&& from) noexcept
    : MSG_ReqSublistPage_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSublistPage_CS& operator=(const MSG_ReqSublistPage_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSublistPage_CS& operator=(MSG_ReqSublistPage_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSublistPage_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSublistPage_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSublistPage_CS*>(
               &_MSG_ReqSublistPage_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MSG_ReqSublistPage_CS& a, MSG_ReqSublistPage_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSublistPage_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSublistPage_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSublistPage_CS>(nullptr);
  }

  MSG_ReqSublistPage_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSublistPage_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSublistPage_CS& from);
  void MergeFrom(const MSG_ReqSublistPage_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSublistPage_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqSublistPage_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
  };
  // optional uint32 page = 1;
  bool has_page() const;
  private:
  bool _internal_has_page() const;
  public:
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::uint32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqSublistPage_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 page_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetSublistPage_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetSublistPage_SC) */ {
 public:
  MSG_RetSublistPage_SC();
  virtual ~MSG_RetSublistPage_SC();

  MSG_RetSublistPage_SC(const MSG_RetSublistPage_SC& from);
  MSG_RetSublistPage_SC(MSG_RetSublistPage_SC&& from) noexcept
    : MSG_RetSublistPage_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetSublistPage_SC& operator=(const MSG_RetSublistPage_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetSublistPage_SC& operator=(MSG_RetSublistPage_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetSublistPage_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetSublistPage_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetSublistPage_SC*>(
               &_MSG_RetSublistPage_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MSG_RetSublistPage_SC& a, MSG_RetSublistPage_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetSublistPage_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetSublistPage_SC* New() const final {
    return CreateMaybeMessage<MSG_RetSublistPage_SC>(nullptr);
  }

  MSG_RetSublistPage_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetSublistPage_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetSublistPage_SC& from);
  void MergeFrom(const MSG_RetSublistPage_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetSublistPage_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetSublistPage_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
  };
  // repeated .trade.TradeItem item = 1;
  int item_size() const;
  private:
  int _internal_item_size() const;
  public:
  void clear_item();
  ::trade::TradeItem* mutable_item(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >*
      mutable_item();
  private:
  const ::trade::TradeItem& _internal_item(int index) const;
  ::trade::TradeItem* _internal_add_item();
  public:
  const ::trade::TradeItem& item(int index) const;
  ::trade::TradeItem* add_item();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >&
      item() const;

  // @@protoc_insertion_point(class_scope:trade.MSG_RetSublistPage_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem > item_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqWatchTradeItem_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqWatchTradeItem_CS) */ {
 public:
  MSG_ReqWatchTradeItem_CS();
  virtual ~MSG_ReqWatchTradeItem_CS();

  MSG_ReqWatchTradeItem_CS(const MSG_ReqWatchTradeItem_CS& from);
  MSG_ReqWatchTradeItem_CS(MSG_ReqWatchTradeItem_CS&& from) noexcept
    : MSG_ReqWatchTradeItem_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqWatchTradeItem_CS& operator=(const MSG_ReqWatchTradeItem_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqWatchTradeItem_CS& operator=(MSG_ReqWatchTradeItem_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqWatchTradeItem_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqWatchTradeItem_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqWatchTradeItem_CS*>(
               &_MSG_ReqWatchTradeItem_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MSG_ReqWatchTradeItem_CS& a, MSG_ReqWatchTradeItem_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqWatchTradeItem_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqWatchTradeItem_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqWatchTradeItem_CS>(nullptr);
  }

  MSG_ReqWatchTradeItem_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqWatchTradeItem_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqWatchTradeItem_CS& from);
  void MergeFrom(const MSG_ReqWatchTradeItem_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqWatchTradeItem_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqWatchTradeItem_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kIsonFieldNumber = 2,
    kIsshowFieldNumber = 3,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional bool ison = 2;
  bool has_ison() const;
  private:
  bool _internal_has_ison() const;
  public:
  void clear_ison();
  bool ison() const;
  void set_ison(bool value);
  private:
  bool _internal_ison() const;
  void _internal_set_ison(bool value);
  public:

  // optional bool isshow = 3;
  bool has_isshow() const;
  private:
  bool _internal_has_isshow() const;
  public:
  void clear_isshow();
  bool isshow() const;
  void set_isshow(bool value);
  private:
  bool _internal_isshow() const;
  void _internal_set_isshow(bool value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqWatchTradeItem_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  bool ison_;
  bool isshow_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetWatchTradeItem_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetWatchTradeItem_SC) */ {
 public:
  MSG_RetWatchTradeItem_SC();
  virtual ~MSG_RetWatchTradeItem_SC();

  MSG_RetWatchTradeItem_SC(const MSG_RetWatchTradeItem_SC& from);
  MSG_RetWatchTradeItem_SC(MSG_RetWatchTradeItem_SC&& from) noexcept
    : MSG_RetWatchTradeItem_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetWatchTradeItem_SC& operator=(const MSG_RetWatchTradeItem_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetWatchTradeItem_SC& operator=(MSG_RetWatchTradeItem_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetWatchTradeItem_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetWatchTradeItem_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetWatchTradeItem_SC*>(
               &_MSG_RetWatchTradeItem_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MSG_RetWatchTradeItem_SC& a, MSG_RetWatchTradeItem_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetWatchTradeItem_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetWatchTradeItem_SC* New() const final {
    return CreateMaybeMessage<MSG_RetWatchTradeItem_SC>(nullptr);
  }

  MSG_RetWatchTradeItem_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetWatchTradeItem_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetWatchTradeItem_SC& from);
  void MergeFrom(const MSG_RetWatchTradeItem_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetWatchTradeItem_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetWatchTradeItem_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 2,
    kRetcodeFieldNumber = 1,
    kIsonFieldNumber = 3,
    kIsshowFieldNumber = 4,
  };
  // optional string thisid = 2;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool ison = 3;
  bool has_ison() const;
  private:
  bool _internal_has_ison() const;
  public:
  void clear_ison();
  bool ison() const;
  void set_ison(bool value);
  private:
  bool _internal_ison() const;
  void _internal_set_ison(bool value);
  public:

  // optional bool isshow = 4;
  bool has_isshow() const;
  private:
  bool _internal_has_isshow() const;
  public:
  void clear_isshow();
  bool isshow() const;
  void set_isshow(bool value);
  private:
  bool _internal_isshow() const;
  void _internal_set_isshow(bool value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_RetWatchTradeItem_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  bool ison_;
  bool isshow_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqWatchList_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqWatchList_CS) */ {
 public:
  MSG_ReqWatchList_CS();
  virtual ~MSG_ReqWatchList_CS();

  MSG_ReqWatchList_CS(const MSG_ReqWatchList_CS& from);
  MSG_ReqWatchList_CS(MSG_ReqWatchList_CS&& from) noexcept
    : MSG_ReqWatchList_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqWatchList_CS& operator=(const MSG_ReqWatchList_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqWatchList_CS& operator=(MSG_ReqWatchList_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqWatchList_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqWatchList_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqWatchList_CS*>(
               &_MSG_ReqWatchList_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MSG_ReqWatchList_CS& a, MSG_ReqWatchList_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqWatchList_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqWatchList_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqWatchList_CS>(nullptr);
  }

  MSG_ReqWatchList_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqWatchList_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqWatchList_CS& from);
  void MergeFrom(const MSG_ReqWatchList_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqWatchList_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqWatchList_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsshowFieldNumber = 1,
  };
  // optional bool isshow = 1;
  bool has_isshow() const;
  private:
  bool _internal_has_isshow() const;
  public:
  void clear_isshow();
  bool isshow() const;
  void set_isshow(bool value);
  private:
  bool _internal_isshow() const;
  void _internal_set_isshow(bool value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqWatchList_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool isshow_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetWatchList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetWatchList_SC) */ {
 public:
  MSG_RetWatchList_SC();
  virtual ~MSG_RetWatchList_SC();

  MSG_RetWatchList_SC(const MSG_RetWatchList_SC& from);
  MSG_RetWatchList_SC(MSG_RetWatchList_SC&& from) noexcept
    : MSG_RetWatchList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetWatchList_SC& operator=(const MSG_RetWatchList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetWatchList_SC& operator=(MSG_RetWatchList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetWatchList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetWatchList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetWatchList_SC*>(
               &_MSG_RetWatchList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(MSG_RetWatchList_SC& a, MSG_RetWatchList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetWatchList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetWatchList_SC* New() const final {
    return CreateMaybeMessage<MSG_RetWatchList_SC>(nullptr);
  }

  MSG_RetWatchList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetWatchList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetWatchList_SC& from);
  void MergeFrom(const MSG_RetWatchList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetWatchList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetWatchList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 2,
    kIsshowFieldNumber = 1,
  };
  // repeated .trade.TradeItem item = 2;
  int item_size() const;
  private:
  int _internal_item_size() const;
  public:
  void clear_item();
  ::trade::TradeItem* mutable_item(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >*
      mutable_item();
  private:
  const ::trade::TradeItem& _internal_item(int index) const;
  ::trade::TradeItem* _internal_add_item();
  public:
  const ::trade::TradeItem& item(int index) const;
  ::trade::TradeItem* add_item();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >&
      item() const;

  // optional bool isshow = 1;
  bool has_isshow() const;
  private:
  bool _internal_has_isshow() const;
  public:
  void clear_isshow();
  bool isshow() const;
  void set_isshow(bool value);
  private:
  bool _internal_isshow() const;
  void _internal_set_isshow(bool value);
  public:

  // @@protoc_insertion_point(class_scope:trade.MSG_RetWatchList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem > item_;
  bool isshow_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqUserTradeHistory_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqUserTradeHistory_CS) */ {
 public:
  MSG_ReqUserTradeHistory_CS();
  virtual ~MSG_ReqUserTradeHistory_CS();

  MSG_ReqUserTradeHistory_CS(const MSG_ReqUserTradeHistory_CS& from);
  MSG_ReqUserTradeHistory_CS(MSG_ReqUserTradeHistory_CS&& from) noexcept
    : MSG_ReqUserTradeHistory_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqUserTradeHistory_CS& operator=(const MSG_ReqUserTradeHistory_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqUserTradeHistory_CS& operator=(MSG_ReqUserTradeHistory_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqUserTradeHistory_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqUserTradeHistory_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqUserTradeHistory_CS*>(
               &_MSG_ReqUserTradeHistory_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(MSG_ReqUserTradeHistory_CS& a, MSG_ReqUserTradeHistory_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqUserTradeHistory_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqUserTradeHistory_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqUserTradeHistory_CS>(nullptr);
  }

  MSG_ReqUserTradeHistory_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqUserTradeHistory_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqUserTradeHistory_CS& from);
  void MergeFrom(const MSG_ReqUserTradeHistory_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqUserTradeHistory_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqUserTradeHistory_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqUserTradeHistory_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class UserTradeItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.UserTradeItem) */ {
 public:
  UserTradeItem();
  virtual ~UserTradeItem();

  UserTradeItem(const UserTradeItem& from);
  UserTradeItem(UserTradeItem&& from) noexcept
    : UserTradeItem() {
    *this = ::std::move(from);
  }

  inline UserTradeItem& operator=(const UserTradeItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserTradeItem& operator=(UserTradeItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserTradeItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserTradeItem* internal_default_instance() {
    return reinterpret_cast<const UserTradeItem*>(
               &_UserTradeItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(UserTradeItem& a, UserTradeItem& b) {
    a.Swap(&b);
  }
  inline void Swap(UserTradeItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserTradeItem* New() const final {
    return CreateMaybeMessage<UserTradeItem>(nullptr);
  }

  UserTradeItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserTradeItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserTradeItem& from);
  void MergeFrom(const UserTradeItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserTradeItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.UserTradeItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 2,
    kJudgeduetimeFieldNumber = 3,
    kOpFieldNumber = 1,
  };
  // optional .trade.TradeHistoryItem item = 2;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  const ::trade::TradeHistoryItem& item() const;
  ::trade::TradeHistoryItem* release_item();
  ::trade::TradeHistoryItem* mutable_item();
  void set_allocated_item(::trade::TradeHistoryItem* item);
  private:
  const ::trade::TradeHistoryItem& _internal_item() const;
  ::trade::TradeHistoryItem* _internal_mutable_item();
  public:

  // optional uint32 judgeduetime = 3;
  bool has_judgeduetime() const;
  private:
  bool _internal_has_judgeduetime() const;
  public:
  void clear_judgeduetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 judgeduetime() const;
  void set_judgeduetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_judgeduetime() const;
  void _internal_set_judgeduetime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .trade.TradeOP op = 1;
  bool has_op() const;
  private:
  bool _internal_has_op() const;
  public:
  void clear_op();
  ::trade::TradeOP op() const;
  void set_op(::trade::TradeOP value);
  private:
  ::trade::TradeOP _internal_op() const;
  void _internal_set_op(::trade::TradeOP value);
  public:

  // @@protoc_insertion_point(class_scope:trade.UserTradeItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::trade::TradeHistoryItem* item_;
  ::PROTOBUF_NAMESPACE_ID::uint32 judgeduetime_;
  int op_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetUserTradeHistory_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetUserTradeHistory_SC) */ {
 public:
  MSG_RetUserTradeHistory_SC();
  virtual ~MSG_RetUserTradeHistory_SC();

  MSG_RetUserTradeHistory_SC(const MSG_RetUserTradeHistory_SC& from);
  MSG_RetUserTradeHistory_SC(MSG_RetUserTradeHistory_SC&& from) noexcept
    : MSG_RetUserTradeHistory_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetUserTradeHistory_SC& operator=(const MSG_RetUserTradeHistory_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetUserTradeHistory_SC& operator=(MSG_RetUserTradeHistory_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetUserTradeHistory_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetUserTradeHistory_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetUserTradeHistory_SC*>(
               &_MSG_RetUserTradeHistory_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(MSG_RetUserTradeHistory_SC& a, MSG_RetUserTradeHistory_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetUserTradeHistory_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetUserTradeHistory_SC* New() const final {
    return CreateMaybeMessage<MSG_RetUserTradeHistory_SC>(nullptr);
  }

  MSG_RetUserTradeHistory_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetUserTradeHistory_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetUserTradeHistory_SC& from);
  void MergeFrom(const MSG_RetUserTradeHistory_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetUserTradeHistory_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetUserTradeHistory_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOneFieldNumber = 1,
  };
  // repeated .trade.UserTradeItem one = 1;
  int one_size() const;
  private:
  int _internal_one_size() const;
  public:
  void clear_one();
  ::trade::UserTradeItem* mutable_one(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::UserTradeItem >*
      mutable_one();
  private:
  const ::trade::UserTradeItem& _internal_one(int index) const;
  ::trade::UserTradeItem* _internal_add_one();
  public:
  const ::trade::UserTradeItem& one(int index) const;
  ::trade::UserTradeItem* add_one();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::UserTradeItem >&
      one() const;

  // @@protoc_insertion_point(class_scope:trade.MSG_RetUserTradeHistory_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::UserTradeItem > one_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqGetNewestStaff_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_ReqGetNewestStaff_CS) */ {
 public:
  MSG_ReqGetNewestStaff_CS();
  virtual ~MSG_ReqGetNewestStaff_CS();

  MSG_ReqGetNewestStaff_CS(const MSG_ReqGetNewestStaff_CS& from);
  MSG_ReqGetNewestStaff_CS(MSG_ReqGetNewestStaff_CS&& from) noexcept
    : MSG_ReqGetNewestStaff_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqGetNewestStaff_CS& operator=(const MSG_ReqGetNewestStaff_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqGetNewestStaff_CS& operator=(MSG_ReqGetNewestStaff_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqGetNewestStaff_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqGetNewestStaff_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqGetNewestStaff_CS*>(
               &_MSG_ReqGetNewestStaff_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(MSG_ReqGetNewestStaff_CS& a, MSG_ReqGetNewestStaff_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqGetNewestStaff_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqGetNewestStaff_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqGetNewestStaff_CS>(nullptr);
  }

  MSG_ReqGetNewestStaff_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqGetNewestStaff_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqGetNewestStaff_CS& from);
  void MergeFrom(const MSG_ReqGetNewestStaff_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqGetNewestStaff_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_ReqGetNewestStaff_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:trade.MSG_ReqGetNewestStaff_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_trade_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetGetNewestStaff_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:trade.MSG_RetGetNewestStaff_SC) */ {
 public:
  MSG_RetGetNewestStaff_SC();
  virtual ~MSG_RetGetNewestStaff_SC();

  MSG_RetGetNewestStaff_SC(const MSG_RetGetNewestStaff_SC& from);
  MSG_RetGetNewestStaff_SC(MSG_RetGetNewestStaff_SC&& from) noexcept
    : MSG_RetGetNewestStaff_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetGetNewestStaff_SC& operator=(const MSG_RetGetNewestStaff_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetGetNewestStaff_SC& operator=(MSG_RetGetNewestStaff_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetGetNewestStaff_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetGetNewestStaff_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetGetNewestStaff_SC*>(
               &_MSG_RetGetNewestStaff_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(MSG_RetGetNewestStaff_SC& a, MSG_RetGetNewestStaff_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetGetNewestStaff_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetGetNewestStaff_SC* New() const final {
    return CreateMaybeMessage<MSG_RetGetNewestStaff_SC>(nullptr);
  }

  MSG_RetGetNewestStaff_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetGetNewestStaff_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetGetNewestStaff_SC& from);
  void MergeFrom(const MSG_RetGetNewestStaff_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetGetNewestStaff_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "trade.MSG_RetGetNewestStaff_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_trade_2eproto);
    return ::descriptor_table_trade_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemlistFieldNumber = 1,
  };
  // repeated .trade.TradeItem itemlist = 1;
  int itemlist_size() const;
  private:
  int _internal_itemlist_size() const;
  public:
  void clear_itemlist();
  ::trade::TradeItem* mutable_itemlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >*
      mutable_itemlist();
  private:
  const ::trade::TradeItem& _internal_itemlist(int index) const;
  ::trade::TradeItem* _internal_add_itemlist();
  public:
  const ::trade::TradeItem& itemlist(int index) const;
  ::trade::TradeItem* add_itemlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >&
      itemlist() const;

  // @@protoc_insertion_point(class_scope:trade.MSG_RetGetNewestStaff_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem > itemlist_;
  friend struct ::TableStruct_trade_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MSG_ReqSellStaff_CS

// required .msg.SELLTYPE itemtype = 1;
inline bool MSG_ReqSellStaff_CS::_internal_has_itemtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqSellStaff_CS::has_itemtype() const {
  return _internal_has_itemtype();
}
inline void MSG_ReqSellStaff_CS::clear_itemtype() {
  itemtype_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::msg::SELLTYPE MSG_ReqSellStaff_CS::_internal_itemtype() const {
  return static_cast< ::msg::SELLTYPE >(itemtype_);
}
inline ::msg::SELLTYPE MSG_ReqSellStaff_CS::itemtype() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqSellStaff_CS.itemtype)
  return _internal_itemtype();
}
inline void MSG_ReqSellStaff_CS::_internal_set_itemtype(::msg::SELLTYPE value) {
  assert(::msg::SELLTYPE_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  itemtype_ = value;
}
inline void MSG_ReqSellStaff_CS::set_itemtype(::msg::SELLTYPE value) {
  _internal_set_itemtype(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqSellStaff_CS.itemtype)
}

// optional string thisid = 2;
inline bool MSG_ReqSellStaff_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSellStaff_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqSellStaff_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqSellStaff_CS::thisid() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqSellStaff_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqSellStaff_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqSellStaff_CS.thisid)
}
inline std::string* MSG_ReqSellStaff_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:trade.MSG_ReqSellStaff_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqSellStaff_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqSellStaff_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqSellStaff_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trade.MSG_ReqSellStaff_CS.thisid)
}
inline void MSG_ReqSellStaff_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MSG_ReqSellStaff_CS.thisid)
}
inline void MSG_ReqSellStaff_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MSG_ReqSellStaff_CS.thisid)
}
inline std::string* MSG_ReqSellStaff_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqSellStaff_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:trade.MSG_ReqSellStaff_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqSellStaff_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:trade.MSG_ReqSellStaff_CS.thisid)
}

// optional uint32 baseid = 3;
inline bool MSG_ReqSellStaff_CS::_internal_has_baseid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqSellStaff_CS::has_baseid() const {
  return _internal_has_baseid();
}
inline void MSG_ReqSellStaff_CS::clear_baseid() {
  baseid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSellStaff_CS::_internal_baseid() const {
  return baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSellStaff_CS::baseid() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqSellStaff_CS.baseid)
  return _internal_baseid();
}
inline void MSG_ReqSellStaff_CS::_internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  baseid_ = value;
}
inline void MSG_ReqSellStaff_CS::set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseid(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqSellStaff_CS.baseid)
}

// optional uint32 price = 4;
inline bool MSG_ReqSellStaff_CS::_internal_has_price() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqSellStaff_CS::has_price() const {
  return _internal_has_price();
}
inline void MSG_ReqSellStaff_CS::clear_price() {
  price_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSellStaff_CS::_internal_price() const {
  return price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSellStaff_CS::price() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqSellStaff_CS.price)
  return _internal_price();
}
inline void MSG_ReqSellStaff_CS::_internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  price_ = value;
}
inline void MSG_ReqSellStaff_CS::set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqSellStaff_CS.price)
}

// optional uint32 num = 5;
inline bool MSG_ReqSellStaff_CS::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_ReqSellStaff_CS::has_num() const {
  return _internal_has_num();
}
inline void MSG_ReqSellStaff_CS::clear_num() {
  num_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSellStaff_CS::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSellStaff_CS::num() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqSellStaff_CS.num)
  return _internal_num();
}
inline void MSG_ReqSellStaff_CS::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  num_ = value;
}
inline void MSG_ReqSellStaff_CS::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqSellStaff_CS.num)
}

// -------------------------------------------------------------------

// MSG_RetSellStaff_SC

// optional uint32 retcode = 1;
inline bool MSG_RetSellStaff_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetSellStaff_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetSellStaff_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSellStaff_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSellStaff_SC::retcode() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetSellStaff_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetSellStaff_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_RetSellStaff_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetSellStaff_SC.retcode)
}

// -------------------------------------------------------------------

// TradeItemData

// required .msg.SELLTYPE itemtype = 1;
inline bool TradeItemData::_internal_has_itemtype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TradeItemData::has_itemtype() const {
  return _internal_has_itemtype();
}
inline void TradeItemData::clear_itemtype() {
  itemtype_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::msg::SELLTYPE TradeItemData::_internal_itemtype() const {
  return static_cast< ::msg::SELLTYPE >(itemtype_);
}
inline ::msg::SELLTYPE TradeItemData::itemtype() const {
  // @@protoc_insertion_point(field_get:trade.TradeItemData.itemtype)
  return _internal_itemtype();
}
inline void TradeItemData::_internal_set_itemtype(::msg::SELLTYPE value) {
  assert(::msg::SELLTYPE_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  itemtype_ = value;
}
inline void TradeItemData::set_itemtype(::msg::SELLTYPE value) {
  _internal_set_itemtype(value);
  // @@protoc_insertion_point(field_set:trade.TradeItemData.itemtype)
}

// optional .Obj.t_Object objdata = 2;
inline bool TradeItemData::_internal_has_objdata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || objdata_ != nullptr);
  return value;
}
inline bool TradeItemData::has_objdata() const {
  return _internal_has_objdata();
}
inline const ::Obj::t_Object& TradeItemData::_internal_objdata() const {
  const ::Obj::t_Object* p = objdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::t_Object*>(
      &::Obj::_t_Object_default_instance_);
}
inline const ::Obj::t_Object& TradeItemData::objdata() const {
  // @@protoc_insertion_point(field_get:trade.TradeItemData.objdata)
  return _internal_objdata();
}
inline ::Obj::t_Object* TradeItemData::release_objdata() {
  // @@protoc_insertion_point(field_release:trade.TradeItemData.objdata)
  _has_bits_[0] &= ~0x00000001u;
  ::Obj::t_Object* temp = objdata_;
  objdata_ = nullptr;
  return temp;
}
inline ::Obj::t_Object* TradeItemData::_internal_mutable_objdata() {
  _has_bits_[0] |= 0x00000001u;
  if (objdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::t_Object>(GetArenaNoVirtual());
    objdata_ = p;
  }
  return objdata_;
}
inline ::Obj::t_Object* TradeItemData::mutable_objdata() {
  // @@protoc_insertion_point(field_mutable:trade.TradeItemData.objdata)
  return _internal_mutable_objdata();
}
inline void TradeItemData::set_allocated_objdata(::Obj::t_Object* objdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(objdata_);
  }
  if (objdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      objdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, objdata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  objdata_ = objdata;
  // @@protoc_insertion_point(field_set_allocated:trade.TradeItemData.objdata)
}

// optional .hero.Hero herodata = 3;
inline bool TradeItemData::_internal_has_herodata() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || herodata_ != nullptr);
  return value;
}
inline bool TradeItemData::has_herodata() const {
  return _internal_has_herodata();
}
inline const ::hero::Hero& TradeItemData::_internal_herodata() const {
  const ::hero::Hero* p = herodata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero::Hero*>(
      &::hero::_Hero_default_instance_);
}
inline const ::hero::Hero& TradeItemData::herodata() const {
  // @@protoc_insertion_point(field_get:trade.TradeItemData.herodata)
  return _internal_herodata();
}
inline ::hero::Hero* TradeItemData::release_herodata() {
  // @@protoc_insertion_point(field_release:trade.TradeItemData.herodata)
  _has_bits_[0] &= ~0x00000002u;
  ::hero::Hero* temp = herodata_;
  herodata_ = nullptr;
  return temp;
}
inline ::hero::Hero* TradeItemData::_internal_mutable_herodata() {
  _has_bits_[0] |= 0x00000002u;
  if (herodata_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero::Hero>(GetArenaNoVirtual());
    herodata_ = p;
  }
  return herodata_;
}
inline ::hero::Hero* TradeItemData::mutable_herodata() {
  // @@protoc_insertion_point(field_mutable:trade.TradeItemData.herodata)
  return _internal_mutable_herodata();
}
inline void TradeItemData::set_allocated_herodata(::hero::Hero* herodata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(herodata_);
  }
  if (herodata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      herodata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, herodata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  herodata_ = herodata;
  // @@protoc_insertion_point(field_set_allocated:trade.TradeItemData.herodata)
}

// -------------------------------------------------------------------

// TradeItem

// optional string thisid = 1;
inline bool TradeItem::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TradeItem::has_thisid() const {
  return _internal_has_thisid();
}
inline void TradeItem::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TradeItem::thisid() const {
  // @@protoc_insertion_point(field_get:trade.TradeItem.thisid)
  return _internal_thisid();
}
inline void TradeItem::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:trade.TradeItem.thisid)
}
inline std::string* TradeItem::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:trade.TradeItem.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& TradeItem::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void TradeItem::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TradeItem::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trade.TradeItem.thisid)
}
inline void TradeItem::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.TradeItem.thisid)
}
inline void TradeItem::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.TradeItem.thisid)
}
inline std::string* TradeItem::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TradeItem::release_thisid() {
  // @@protoc_insertion_point(field_release:trade.TradeItem.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TradeItem::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:trade.TradeItem.thisid)
}

// optional uint32 price = 2;
inline bool TradeItem::_internal_has_price() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TradeItem::has_price() const {
  return _internal_has_price();
}
inline void TradeItem::clear_price() {
  price_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TradeItem::_internal_price() const {
  return price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TradeItem::price() const {
  // @@protoc_insertion_point(field_get:trade.TradeItem.price)
  return _internal_price();
}
inline void TradeItem::_internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  price_ = value;
}
inline void TradeItem::set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:trade.TradeItem.price)
}

// optional uint32 selltime = 3;
inline bool TradeItem::_internal_has_selltime() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TradeItem::has_selltime() const {
  return _internal_has_selltime();
}
inline void TradeItem::clear_selltime() {
  selltime_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TradeItem::_internal_selltime() const {
  return selltime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TradeItem::selltime() const {
  // @@protoc_insertion_point(field_get:trade.TradeItem.selltime)
  return _internal_selltime();
}
inline void TradeItem::_internal_set_selltime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  selltime_ = value;
}
inline void TradeItem::set_selltime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_selltime(value);
  // @@protoc_insertion_point(field_set:trade.TradeItem.selltime)
}

// optional .trade.TradeItemData data = 4;
inline bool TradeItem::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool TradeItem::has_data() const {
  return _internal_has_data();
}
inline void TradeItem::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::trade::TradeItemData& TradeItem::_internal_data() const {
  const ::trade::TradeItemData* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::trade::TradeItemData*>(
      &::trade::_TradeItemData_default_instance_);
}
inline const ::trade::TradeItemData& TradeItem::data() const {
  // @@protoc_insertion_point(field_get:trade.TradeItem.data)
  return _internal_data();
}
inline ::trade::TradeItemData* TradeItem::release_data() {
  // @@protoc_insertion_point(field_release:trade.TradeItem.data)
  _has_bits_[0] &= ~0x00000002u;
  ::trade::TradeItemData* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::trade::TradeItemData* TradeItem::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000002u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::trade::TradeItemData>(GetArenaNoVirtual());
    data_ = p;
  }
  return data_;
}
inline ::trade::TradeItemData* TradeItem::mutable_data() {
  // @@protoc_insertion_point(field_mutable:trade.TradeItem.data)
  return _internal_mutable_data();
}
inline void TradeItem::set_allocated_data(::trade::TradeItemData* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:trade.TradeItem.data)
}

// optional bool isshow = 5;
inline bool TradeItem::_internal_has_isshow() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool TradeItem::has_isshow() const {
  return _internal_has_isshow();
}
inline void TradeItem::clear_isshow() {
  isshow_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool TradeItem::_internal_isshow() const {
  return isshow_;
}
inline bool TradeItem::isshow() const {
  // @@protoc_insertion_point(field_get:trade.TradeItem.isshow)
  return _internal_isshow();
}
inline void TradeItem::_internal_set_isshow(bool value) {
  _has_bits_[0] |= 0x00000010u;
  isshow_ = value;
}
inline void TradeItem::set_isshow(bool value) {
  _internal_set_isshow(value);
  // @@protoc_insertion_point(field_set:trade.TradeItem.isshow)
}

// -------------------------------------------------------------------

// MSG_ReqSellingStaff_CS

// -------------------------------------------------------------------

// MSG_RetSellingStaff_SC

// repeated .trade.TradeItem itemlist = 1;
inline int MSG_RetSellingStaff_SC::_internal_itemlist_size() const {
  return itemlist_.size();
}
inline int MSG_RetSellingStaff_SC::itemlist_size() const {
  return _internal_itemlist_size();
}
inline void MSG_RetSellingStaff_SC::clear_itemlist() {
  itemlist_.Clear();
}
inline ::trade::TradeItem* MSG_RetSellingStaff_SC::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:trade.MSG_RetSellingStaff_SC.itemlist)
  return itemlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >*
MSG_RetSellingStaff_SC::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:trade.MSG_RetSellingStaff_SC.itemlist)
  return &itemlist_;
}
inline const ::trade::TradeItem& MSG_RetSellingStaff_SC::_internal_itemlist(int index) const {
  return itemlist_.Get(index);
}
inline const ::trade::TradeItem& MSG_RetSellingStaff_SC::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetSellingStaff_SC.itemlist)
  return _internal_itemlist(index);
}
inline ::trade::TradeItem* MSG_RetSellingStaff_SC::_internal_add_itemlist() {
  return itemlist_.Add();
}
inline ::trade::TradeItem* MSG_RetSellingStaff_SC::add_itemlist() {
  // @@protoc_insertion_point(field_add:trade.MSG_RetSellingStaff_SC.itemlist)
  return _internal_add_itemlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >&
MSG_RetSellingStaff_SC::itemlist() const {
  // @@protoc_insertion_point(field_list:trade.MSG_RetSellingStaff_SC.itemlist)
  return itemlist_;
}

// -------------------------------------------------------------------

// MSG_ReqRecommandPrice_CS

// required .msg.SELLTYPE itemtype = 1;
inline bool MSG_ReqRecommandPrice_CS::_internal_has_itemtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqRecommandPrice_CS::has_itemtype() const {
  return _internal_has_itemtype();
}
inline void MSG_ReqRecommandPrice_CS::clear_itemtype() {
  itemtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::msg::SELLTYPE MSG_ReqRecommandPrice_CS::_internal_itemtype() const {
  return static_cast< ::msg::SELLTYPE >(itemtype_);
}
inline ::msg::SELLTYPE MSG_ReqRecommandPrice_CS::itemtype() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqRecommandPrice_CS.itemtype)
  return _internal_itemtype();
}
inline void MSG_ReqRecommandPrice_CS::_internal_set_itemtype(::msg::SELLTYPE value) {
  assert(::msg::SELLTYPE_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  itemtype_ = value;
}
inline void MSG_ReqRecommandPrice_CS::set_itemtype(::msg::SELLTYPE value) {
  _internal_set_itemtype(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqRecommandPrice_CS.itemtype)
}

// optional uint32 baseid = 2;
inline bool MSG_ReqRecommandPrice_CS::_internal_has_baseid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqRecommandPrice_CS::has_baseid() const {
  return _internal_has_baseid();
}
inline void MSG_ReqRecommandPrice_CS::clear_baseid() {
  baseid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqRecommandPrice_CS::_internal_baseid() const {
  return baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqRecommandPrice_CS::baseid() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqRecommandPrice_CS.baseid)
  return _internal_baseid();
}
inline void MSG_ReqRecommandPrice_CS::_internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  baseid_ = value;
}
inline void MSG_ReqRecommandPrice_CS::set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseid(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqRecommandPrice_CS.baseid)
}

// -------------------------------------------------------------------

// MSG_RetRecommandPrice_SC

// required .msg.SELLTYPE itemtype = 1;
inline bool MSG_RetRecommandPrice_SC::_internal_has_itemtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetRecommandPrice_SC::has_itemtype() const {
  return _internal_has_itemtype();
}
inline void MSG_RetRecommandPrice_SC::clear_itemtype() {
  itemtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::msg::SELLTYPE MSG_RetRecommandPrice_SC::_internal_itemtype() const {
  return static_cast< ::msg::SELLTYPE >(itemtype_);
}
inline ::msg::SELLTYPE MSG_RetRecommandPrice_SC::itemtype() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetRecommandPrice_SC.itemtype)
  return _internal_itemtype();
}
inline void MSG_RetRecommandPrice_SC::_internal_set_itemtype(::msg::SELLTYPE value) {
  assert(::msg::SELLTYPE_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  itemtype_ = value;
}
inline void MSG_RetRecommandPrice_SC::set_itemtype(::msg::SELLTYPE value) {
  _internal_set_itemtype(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetRecommandPrice_SC.itemtype)
}

// optional uint32 baseid = 2;
inline bool MSG_RetRecommandPrice_SC::_internal_has_baseid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetRecommandPrice_SC::has_baseid() const {
  return _internal_has_baseid();
}
inline void MSG_RetRecommandPrice_SC::clear_baseid() {
  baseid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecommandPrice_SC::_internal_baseid() const {
  return baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecommandPrice_SC::baseid() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetRecommandPrice_SC.baseid)
  return _internal_baseid();
}
inline void MSG_RetRecommandPrice_SC::_internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  baseid_ = value;
}
inline void MSG_RetRecommandPrice_SC::set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseid(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetRecommandPrice_SC.baseid)
}

// optional uint32 price = 3;
inline bool MSG_RetRecommandPrice_SC::_internal_has_price() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetRecommandPrice_SC::has_price() const {
  return _internal_has_price();
}
inline void MSG_RetRecommandPrice_SC::clear_price() {
  price_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecommandPrice_SC::_internal_price() const {
  return price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetRecommandPrice_SC::price() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetRecommandPrice_SC.price)
  return _internal_price();
}
inline void MSG_RetRecommandPrice_SC::_internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  price_ = value;
}
inline void MSG_RetRecommandPrice_SC::set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetRecommandPrice_SC.price)
}

// -------------------------------------------------------------------

// MSG_ReqStopSellStaff_CS

// optional string thisid = 1;
inline bool MSG_ReqStopSellStaff_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqStopSellStaff_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqStopSellStaff_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqStopSellStaff_CS::thisid() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqStopSellStaff_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqStopSellStaff_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqStopSellStaff_CS.thisid)
}
inline std::string* MSG_ReqStopSellStaff_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:trade.MSG_ReqStopSellStaff_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqStopSellStaff_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqStopSellStaff_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqStopSellStaff_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trade.MSG_ReqStopSellStaff_CS.thisid)
}
inline void MSG_ReqStopSellStaff_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MSG_ReqStopSellStaff_CS.thisid)
}
inline void MSG_ReqStopSellStaff_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MSG_ReqStopSellStaff_CS.thisid)
}
inline std::string* MSG_ReqStopSellStaff_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqStopSellStaff_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:trade.MSG_ReqStopSellStaff_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqStopSellStaff_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:trade.MSG_ReqStopSellStaff_CS.thisid)
}

// -------------------------------------------------------------------

// MSG_RetStopSellStaff_SC

// optional uint32 retcode = 1;
inline bool MSG_RetStopSellStaff_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetStopSellStaff_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetStopSellStaff_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetStopSellStaff_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetStopSellStaff_SC::retcode() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetStopSellStaff_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetStopSellStaff_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_RetStopSellStaff_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetStopSellStaff_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_ReqSubSellingList_CS

// required .msg.SELLTYPE itemtype = 1;
inline bool MSG_ReqSubSellingList_CS::_internal_has_itemtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSubSellingList_CS::has_itemtype() const {
  return _internal_has_itemtype();
}
inline void MSG_ReqSubSellingList_CS::clear_itemtype() {
  itemtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::msg::SELLTYPE MSG_ReqSubSellingList_CS::_internal_itemtype() const {
  return static_cast< ::msg::SELLTYPE >(itemtype_);
}
inline ::msg::SELLTYPE MSG_ReqSubSellingList_CS::itemtype() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqSubSellingList_CS.itemtype)
  return _internal_itemtype();
}
inline void MSG_ReqSubSellingList_CS::_internal_set_itemtype(::msg::SELLTYPE value) {
  assert(::msg::SELLTYPE_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  itemtype_ = value;
}
inline void MSG_ReqSubSellingList_CS::set_itemtype(::msg::SELLTYPE value) {
  _internal_set_itemtype(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqSubSellingList_CS.itemtype)
}

// optional uint32 levelstar = 2;
inline bool MSG_ReqSubSellingList_CS::_internal_has_levelstar() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqSubSellingList_CS::has_levelstar() const {
  return _internal_has_levelstar();
}
inline void MSG_ReqSubSellingList_CS::clear_levelstar() {
  levelstar_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSubSellingList_CS::_internal_levelstar() const {
  return levelstar_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSubSellingList_CS::levelstar() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqSubSellingList_CS.levelstar)
  return _internal_levelstar();
}
inline void MSG_ReqSubSellingList_CS::_internal_set_levelstar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  levelstar_ = value;
}
inline void MSG_ReqSubSellingList_CS::set_levelstar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_levelstar(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqSubSellingList_CS.levelstar)
}

// repeated uint32 idlist = 3;
inline int MSG_ReqSubSellingList_CS::_internal_idlist_size() const {
  return idlist_.size();
}
inline int MSG_ReqSubSellingList_CS::idlist_size() const {
  return _internal_idlist_size();
}
inline void MSG_ReqSubSellingList_CS::clear_idlist() {
  idlist_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSubSellingList_CS::_internal_idlist(int index) const {
  return idlist_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSubSellingList_CS::idlist(int index) const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqSubSellingList_CS.idlist)
  return _internal_idlist(index);
}
inline void MSG_ReqSubSellingList_CS::set_idlist(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  idlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqSubSellingList_CS.idlist)
}
inline void MSG_ReqSubSellingList_CS::_internal_add_idlist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  idlist_.Add(value);
}
inline void MSG_ReqSubSellingList_CS::add_idlist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_idlist(value);
  // @@protoc_insertion_point(field_add:trade.MSG_ReqSubSellingList_CS.idlist)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_ReqSubSellingList_CS::_internal_idlist() const {
  return idlist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_ReqSubSellingList_CS::idlist() const {
  // @@protoc_insertion_point(field_list:trade.MSG_ReqSubSellingList_CS.idlist)
  return _internal_idlist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_ReqSubSellingList_CS::_internal_mutable_idlist() {
  return &idlist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_ReqSubSellingList_CS::mutable_idlist() {
  // @@protoc_insertion_point(field_mutable_list:trade.MSG_ReqSubSellingList_CS.idlist)
  return _internal_mutable_idlist();
}

// optional bool checkshow = 4;
inline bool MSG_ReqSubSellingList_CS::_internal_has_checkshow() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqSubSellingList_CS::has_checkshow() const {
  return _internal_has_checkshow();
}
inline void MSG_ReqSubSellingList_CS::clear_checkshow() {
  checkshow_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool MSG_ReqSubSellingList_CS::_internal_checkshow() const {
  return checkshow_;
}
inline bool MSG_ReqSubSellingList_CS::checkshow() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqSubSellingList_CS.checkshow)
  return _internal_checkshow();
}
inline void MSG_ReqSubSellingList_CS::_internal_set_checkshow(bool value) {
  _has_bits_[0] |= 0x00000004u;
  checkshow_ = value;
}
inline void MSG_ReqSubSellingList_CS::set_checkshow(bool value) {
  _internal_set_checkshow(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqSubSellingList_CS.checkshow)
}

// -------------------------------------------------------------------

// MSG_RetSubSellingList_SC

// optional uint32 totalpage = 1;
inline bool MSG_RetSubSellingList_SC::_internal_has_totalpage() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetSubSellingList_SC::has_totalpage() const {
  return _internal_has_totalpage();
}
inline void MSG_RetSubSellingList_SC::clear_totalpage() {
  totalpage_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSubSellingList_SC::_internal_totalpage() const {
  return totalpage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSubSellingList_SC::totalpage() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetSubSellingList_SC.totalpage)
  return _internal_totalpage();
}
inline void MSG_RetSubSellingList_SC::_internal_set_totalpage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  totalpage_ = value;
}
inline void MSG_RetSubSellingList_SC::set_totalpage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_totalpage(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetSubSellingList_SC.totalpage)
}

// -------------------------------------------------------------------

// MSG_ReqBuyItem_CS

// required .msg.SELLTYPE itemtype = 1;
inline bool MSG_ReqBuyItem_CS::_internal_has_itemtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqBuyItem_CS::has_itemtype() const {
  return _internal_has_itemtype();
}
inline void MSG_ReqBuyItem_CS::clear_itemtype() {
  itemtype_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::msg::SELLTYPE MSG_ReqBuyItem_CS::_internal_itemtype() const {
  return static_cast< ::msg::SELLTYPE >(itemtype_);
}
inline ::msg::SELLTYPE MSG_ReqBuyItem_CS::itemtype() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqBuyItem_CS.itemtype)
  return _internal_itemtype();
}
inline void MSG_ReqBuyItem_CS::_internal_set_itemtype(::msg::SELLTYPE value) {
  assert(::msg::SELLTYPE_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  itemtype_ = value;
}
inline void MSG_ReqBuyItem_CS::set_itemtype(::msg::SELLTYPE value) {
  _internal_set_itemtype(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqBuyItem_CS.itemtype)
}

// optional uint32 baseid = 2;
inline bool MSG_ReqBuyItem_CS::_internal_has_baseid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqBuyItem_CS::has_baseid() const {
  return _internal_has_baseid();
}
inline void MSG_ReqBuyItem_CS::clear_baseid() {
  baseid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyItem_CS::_internal_baseid() const {
  return baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyItem_CS::baseid() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqBuyItem_CS.baseid)
  return _internal_baseid();
}
inline void MSG_ReqBuyItem_CS::_internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  baseid_ = value;
}
inline void MSG_ReqBuyItem_CS::set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseid(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqBuyItem_CS.baseid)
}

// optional uint32 levelstar = 3;
inline bool MSG_ReqBuyItem_CS::_internal_has_levelstar() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqBuyItem_CS::has_levelstar() const {
  return _internal_has_levelstar();
}
inline void MSG_ReqBuyItem_CS::clear_levelstar() {
  levelstar_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyItem_CS::_internal_levelstar() const {
  return levelstar_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyItem_CS::levelstar() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqBuyItem_CS.levelstar)
  return _internal_levelstar();
}
inline void MSG_ReqBuyItem_CS::_internal_set_levelstar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  levelstar_ = value;
}
inline void MSG_ReqBuyItem_CS::set_levelstar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_levelstar(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqBuyItem_CS.levelstar)
}

// optional uint32 num = 4;
inline bool MSG_ReqBuyItem_CS::_internal_has_num() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_ReqBuyItem_CS::has_num() const {
  return _internal_has_num();
}
inline void MSG_ReqBuyItem_CS::clear_num() {
  num_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyItem_CS::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyItem_CS::num() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqBuyItem_CS.num)
  return _internal_num();
}
inline void MSG_ReqBuyItem_CS::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  num_ = value;
}
inline void MSG_ReqBuyItem_CS::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqBuyItem_CS.num)
}

// optional string thisid = 5;
inline bool MSG_ReqBuyItem_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqBuyItem_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqBuyItem_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqBuyItem_CS::thisid() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqBuyItem_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqBuyItem_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqBuyItem_CS.thisid)
}
inline std::string* MSG_ReqBuyItem_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:trade.MSG_ReqBuyItem_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqBuyItem_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqBuyItem_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqBuyItem_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trade.MSG_ReqBuyItem_CS.thisid)
}
inline void MSG_ReqBuyItem_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MSG_ReqBuyItem_CS.thisid)
}
inline void MSG_ReqBuyItem_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MSG_ReqBuyItem_CS.thisid)
}
inline std::string* MSG_ReqBuyItem_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqBuyItem_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:trade.MSG_ReqBuyItem_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqBuyItem_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:trade.MSG_ReqBuyItem_CS.thisid)
}

// -------------------------------------------------------------------

// MSG_RetBuyItem_SC

// optional uint32 retcode = 1;
inline bool MSG_RetBuyItem_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetBuyItem_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetBuyItem_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetBuyItem_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetBuyItem_SC::retcode() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetBuyItem_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetBuyItem_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_RetBuyItem_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetBuyItem_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_ReqTradeItemHistory_CS

// required .msg.SELLTYPE itemtype = 1;
inline bool MSG_ReqTradeItemHistory_CS::_internal_has_itemtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqTradeItemHistory_CS::has_itemtype() const {
  return _internal_has_itemtype();
}
inline void MSG_ReqTradeItemHistory_CS::clear_itemtype() {
  itemtype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::msg::SELLTYPE MSG_ReqTradeItemHistory_CS::_internal_itemtype() const {
  return static_cast< ::msg::SELLTYPE >(itemtype_);
}
inline ::msg::SELLTYPE MSG_ReqTradeItemHistory_CS::itemtype() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqTradeItemHistory_CS.itemtype)
  return _internal_itemtype();
}
inline void MSG_ReqTradeItemHistory_CS::_internal_set_itemtype(::msg::SELLTYPE value) {
  assert(::msg::SELLTYPE_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  itemtype_ = value;
}
inline void MSG_ReqTradeItemHistory_CS::set_itemtype(::msg::SELLTYPE value) {
  _internal_set_itemtype(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqTradeItemHistory_CS.itemtype)
}

// optional uint32 baseid = 2;
inline bool MSG_ReqTradeItemHistory_CS::_internal_has_baseid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqTradeItemHistory_CS::has_baseid() const {
  return _internal_has_baseid();
}
inline void MSG_ReqTradeItemHistory_CS::clear_baseid() {
  baseid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqTradeItemHistory_CS::_internal_baseid() const {
  return baseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqTradeItemHistory_CS::baseid() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqTradeItemHistory_CS.baseid)
  return _internal_baseid();
}
inline void MSG_ReqTradeItemHistory_CS::_internal_set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  baseid_ = value;
}
inline void MSG_ReqTradeItemHistory_CS::set_baseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baseid(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqTradeItemHistory_CS.baseid)
}

// -------------------------------------------------------------------

// TradeHistoryItem

// optional .trade.TradeItemData data = 1;
inline bool TradeHistoryItem::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool TradeHistoryItem::has_data() const {
  return _internal_has_data();
}
inline void TradeHistoryItem::clear_data() {
  if (data_ != nullptr) data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::trade::TradeItemData& TradeHistoryItem::_internal_data() const {
  const ::trade::TradeItemData* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::trade::TradeItemData*>(
      &::trade::_TradeItemData_default_instance_);
}
inline const ::trade::TradeItemData& TradeHistoryItem::data() const {
  // @@protoc_insertion_point(field_get:trade.TradeHistoryItem.data)
  return _internal_data();
}
inline ::trade::TradeItemData* TradeHistoryItem::release_data() {
  // @@protoc_insertion_point(field_release:trade.TradeHistoryItem.data)
  _has_bits_[0] &= ~0x00000001u;
  ::trade::TradeItemData* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::trade::TradeItemData* TradeHistoryItem::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::trade::TradeItemData>(GetArenaNoVirtual());
    data_ = p;
  }
  return data_;
}
inline ::trade::TradeItemData* TradeHistoryItem::mutable_data() {
  // @@protoc_insertion_point(field_mutable:trade.TradeHistoryItem.data)
  return _internal_mutable_data();
}
inline void TradeHistoryItem::set_allocated_data(::trade::TradeItemData* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:trade.TradeHistoryItem.data)
}

// optional uint32 price = 2;
inline bool TradeHistoryItem::_internal_has_price() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TradeHistoryItem::has_price() const {
  return _internal_has_price();
}
inline void TradeHistoryItem::clear_price() {
  price_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TradeHistoryItem::_internal_price() const {
  return price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TradeHistoryItem::price() const {
  // @@protoc_insertion_point(field_get:trade.TradeHistoryItem.price)
  return _internal_price();
}
inline void TradeHistoryItem::_internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  price_ = value;
}
inline void TradeHistoryItem::set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:trade.TradeHistoryItem.price)
}

// optional uint32 tradetime = 3;
inline bool TradeHistoryItem::_internal_has_tradetime() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TradeHistoryItem::has_tradetime() const {
  return _internal_has_tradetime();
}
inline void TradeHistoryItem::clear_tradetime() {
  tradetime_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TradeHistoryItem::_internal_tradetime() const {
  return tradetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TradeHistoryItem::tradetime() const {
  // @@protoc_insertion_point(field_get:trade.TradeHistoryItem.tradetime)
  return _internal_tradetime();
}
inline void TradeHistoryItem::_internal_set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  tradetime_ = value;
}
inline void TradeHistoryItem::set_tradetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tradetime(value);
  // @@protoc_insertion_point(field_set:trade.TradeHistoryItem.tradetime)
}

// -------------------------------------------------------------------

// MSG_RetTradeItemHistory_SC

// repeated .trade.TradeHistoryItem item = 1;
inline int MSG_RetTradeItemHistory_SC::_internal_item_size() const {
  return item_.size();
}
inline int MSG_RetTradeItemHistory_SC::item_size() const {
  return _internal_item_size();
}
inline void MSG_RetTradeItemHistory_SC::clear_item() {
  item_.Clear();
}
inline ::trade::TradeHistoryItem* MSG_RetTradeItemHistory_SC::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:trade.MSG_RetTradeItemHistory_SC.item)
  return item_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeHistoryItem >*
MSG_RetTradeItemHistory_SC::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:trade.MSG_RetTradeItemHistory_SC.item)
  return &item_;
}
inline const ::trade::TradeHistoryItem& MSG_RetTradeItemHistory_SC::_internal_item(int index) const {
  return item_.Get(index);
}
inline const ::trade::TradeHistoryItem& MSG_RetTradeItemHistory_SC::item(int index) const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetTradeItemHistory_SC.item)
  return _internal_item(index);
}
inline ::trade::TradeHistoryItem* MSG_RetTradeItemHistory_SC::_internal_add_item() {
  return item_.Add();
}
inline ::trade::TradeHistoryItem* MSG_RetTradeItemHistory_SC::add_item() {
  // @@protoc_insertion_point(field_add:trade.MSG_RetTradeItemHistory_SC.item)
  return _internal_add_item();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeHistoryItem >&
MSG_RetTradeItemHistory_SC::item() const {
  // @@protoc_insertion_point(field_list:trade.MSG_RetTradeItemHistory_SC.item)
  return item_;
}

// -------------------------------------------------------------------

// MSG_ReqSublistPage_CS

// optional uint32 page = 1;
inline bool MSG_ReqSublistPage_CS::_internal_has_page() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSublistPage_CS::has_page() const {
  return _internal_has_page();
}
inline void MSG_ReqSublistPage_CS::clear_page() {
  page_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSublistPage_CS::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSublistPage_CS::page() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqSublistPage_CS.page)
  return _internal_page();
}
inline void MSG_ReqSublistPage_CS::_internal_set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  page_ = value;
}
inline void MSG_ReqSublistPage_CS::set_page(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqSublistPage_CS.page)
}

// -------------------------------------------------------------------

// MSG_RetSublistPage_SC

// repeated .trade.TradeItem item = 1;
inline int MSG_RetSublistPage_SC::_internal_item_size() const {
  return item_.size();
}
inline int MSG_RetSublistPage_SC::item_size() const {
  return _internal_item_size();
}
inline void MSG_RetSublistPage_SC::clear_item() {
  item_.Clear();
}
inline ::trade::TradeItem* MSG_RetSublistPage_SC::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:trade.MSG_RetSublistPage_SC.item)
  return item_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >*
MSG_RetSublistPage_SC::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:trade.MSG_RetSublistPage_SC.item)
  return &item_;
}
inline const ::trade::TradeItem& MSG_RetSublistPage_SC::_internal_item(int index) const {
  return item_.Get(index);
}
inline const ::trade::TradeItem& MSG_RetSublistPage_SC::item(int index) const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetSublistPage_SC.item)
  return _internal_item(index);
}
inline ::trade::TradeItem* MSG_RetSublistPage_SC::_internal_add_item() {
  return item_.Add();
}
inline ::trade::TradeItem* MSG_RetSublistPage_SC::add_item() {
  // @@protoc_insertion_point(field_add:trade.MSG_RetSublistPage_SC.item)
  return _internal_add_item();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >&
MSG_RetSublistPage_SC::item() const {
  // @@protoc_insertion_point(field_list:trade.MSG_RetSublistPage_SC.item)
  return item_;
}

// -------------------------------------------------------------------

// MSG_ReqWatchTradeItem_CS

// optional string thisid = 1;
inline bool MSG_ReqWatchTradeItem_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqWatchTradeItem_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqWatchTradeItem_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqWatchTradeItem_CS::thisid() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqWatchTradeItem_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqWatchTradeItem_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqWatchTradeItem_CS.thisid)
}
inline std::string* MSG_ReqWatchTradeItem_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:trade.MSG_ReqWatchTradeItem_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqWatchTradeItem_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqWatchTradeItem_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqWatchTradeItem_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trade.MSG_ReqWatchTradeItem_CS.thisid)
}
inline void MSG_ReqWatchTradeItem_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MSG_ReqWatchTradeItem_CS.thisid)
}
inline void MSG_ReqWatchTradeItem_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MSG_ReqWatchTradeItem_CS.thisid)
}
inline std::string* MSG_ReqWatchTradeItem_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqWatchTradeItem_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:trade.MSG_ReqWatchTradeItem_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqWatchTradeItem_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:trade.MSG_ReqWatchTradeItem_CS.thisid)
}

// optional bool ison = 2;
inline bool MSG_ReqWatchTradeItem_CS::_internal_has_ison() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqWatchTradeItem_CS::has_ison() const {
  return _internal_has_ison();
}
inline void MSG_ReqWatchTradeItem_CS::clear_ison() {
  ison_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_ReqWatchTradeItem_CS::_internal_ison() const {
  return ison_;
}
inline bool MSG_ReqWatchTradeItem_CS::ison() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqWatchTradeItem_CS.ison)
  return _internal_ison();
}
inline void MSG_ReqWatchTradeItem_CS::_internal_set_ison(bool value) {
  _has_bits_[0] |= 0x00000002u;
  ison_ = value;
}
inline void MSG_ReqWatchTradeItem_CS::set_ison(bool value) {
  _internal_set_ison(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqWatchTradeItem_CS.ison)
}

// optional bool isshow = 3;
inline bool MSG_ReqWatchTradeItem_CS::_internal_has_isshow() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqWatchTradeItem_CS::has_isshow() const {
  return _internal_has_isshow();
}
inline void MSG_ReqWatchTradeItem_CS::clear_isshow() {
  isshow_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool MSG_ReqWatchTradeItem_CS::_internal_isshow() const {
  return isshow_;
}
inline bool MSG_ReqWatchTradeItem_CS::isshow() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqWatchTradeItem_CS.isshow)
  return _internal_isshow();
}
inline void MSG_ReqWatchTradeItem_CS::_internal_set_isshow(bool value) {
  _has_bits_[0] |= 0x00000004u;
  isshow_ = value;
}
inline void MSG_ReqWatchTradeItem_CS::set_isshow(bool value) {
  _internal_set_isshow(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqWatchTradeItem_CS.isshow)
}

// -------------------------------------------------------------------

// MSG_RetWatchTradeItem_SC

// optional uint32 retcode = 1;
inline bool MSG_RetWatchTradeItem_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetWatchTradeItem_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetWatchTradeItem_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetWatchTradeItem_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetWatchTradeItem_SC::retcode() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetWatchTradeItem_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetWatchTradeItem_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  retcode_ = value;
}
inline void MSG_RetWatchTradeItem_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetWatchTradeItem_SC.retcode)
}

// optional string thisid = 2;
inline bool MSG_RetWatchTradeItem_SC::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetWatchTradeItem_SC::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_RetWatchTradeItem_SC::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_RetWatchTradeItem_SC::thisid() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetWatchTradeItem_SC.thisid)
  return _internal_thisid();
}
inline void MSG_RetWatchTradeItem_SC::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetWatchTradeItem_SC.thisid)
}
inline std::string* MSG_RetWatchTradeItem_SC::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:trade.MSG_RetWatchTradeItem_SC.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_RetWatchTradeItem_SC::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_RetWatchTradeItem_SC::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_RetWatchTradeItem_SC::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:trade.MSG_RetWatchTradeItem_SC.thisid)
}
inline void MSG_RetWatchTradeItem_SC::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MSG_RetWatchTradeItem_SC.thisid)
}
inline void MSG_RetWatchTradeItem_SC::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MSG_RetWatchTradeItem_SC.thisid)
}
inline std::string* MSG_RetWatchTradeItem_SC::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_RetWatchTradeItem_SC::release_thisid() {
  // @@protoc_insertion_point(field_release:trade.MSG_RetWatchTradeItem_SC.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_RetWatchTradeItem_SC::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:trade.MSG_RetWatchTradeItem_SC.thisid)
}

// optional bool ison = 3;
inline bool MSG_RetWatchTradeItem_SC::_internal_has_ison() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RetWatchTradeItem_SC::has_ison() const {
  return _internal_has_ison();
}
inline void MSG_RetWatchTradeItem_SC::clear_ison() {
  ison_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool MSG_RetWatchTradeItem_SC::_internal_ison() const {
  return ison_;
}
inline bool MSG_RetWatchTradeItem_SC::ison() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetWatchTradeItem_SC.ison)
  return _internal_ison();
}
inline void MSG_RetWatchTradeItem_SC::_internal_set_ison(bool value) {
  _has_bits_[0] |= 0x00000004u;
  ison_ = value;
}
inline void MSG_RetWatchTradeItem_SC::set_ison(bool value) {
  _internal_set_ison(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetWatchTradeItem_SC.ison)
}

// optional bool isshow = 4;
inline bool MSG_RetWatchTradeItem_SC::_internal_has_isshow() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RetWatchTradeItem_SC::has_isshow() const {
  return _internal_has_isshow();
}
inline void MSG_RetWatchTradeItem_SC::clear_isshow() {
  isshow_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool MSG_RetWatchTradeItem_SC::_internal_isshow() const {
  return isshow_;
}
inline bool MSG_RetWatchTradeItem_SC::isshow() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetWatchTradeItem_SC.isshow)
  return _internal_isshow();
}
inline void MSG_RetWatchTradeItem_SC::_internal_set_isshow(bool value) {
  _has_bits_[0] |= 0x00000008u;
  isshow_ = value;
}
inline void MSG_RetWatchTradeItem_SC::set_isshow(bool value) {
  _internal_set_isshow(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetWatchTradeItem_SC.isshow)
}

// -------------------------------------------------------------------

// MSG_ReqWatchList_CS

// optional bool isshow = 1;
inline bool MSG_ReqWatchList_CS::_internal_has_isshow() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqWatchList_CS::has_isshow() const {
  return _internal_has_isshow();
}
inline void MSG_ReqWatchList_CS::clear_isshow() {
  isshow_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_ReqWatchList_CS::_internal_isshow() const {
  return isshow_;
}
inline bool MSG_ReqWatchList_CS::isshow() const {
  // @@protoc_insertion_point(field_get:trade.MSG_ReqWatchList_CS.isshow)
  return _internal_isshow();
}
inline void MSG_ReqWatchList_CS::_internal_set_isshow(bool value) {
  _has_bits_[0] |= 0x00000001u;
  isshow_ = value;
}
inline void MSG_ReqWatchList_CS::set_isshow(bool value) {
  _internal_set_isshow(value);
  // @@protoc_insertion_point(field_set:trade.MSG_ReqWatchList_CS.isshow)
}

// -------------------------------------------------------------------

// MSG_RetWatchList_SC

// optional bool isshow = 1;
inline bool MSG_RetWatchList_SC::_internal_has_isshow() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetWatchList_SC::has_isshow() const {
  return _internal_has_isshow();
}
inline void MSG_RetWatchList_SC::clear_isshow() {
  isshow_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_RetWatchList_SC::_internal_isshow() const {
  return isshow_;
}
inline bool MSG_RetWatchList_SC::isshow() const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetWatchList_SC.isshow)
  return _internal_isshow();
}
inline void MSG_RetWatchList_SC::_internal_set_isshow(bool value) {
  _has_bits_[0] |= 0x00000001u;
  isshow_ = value;
}
inline void MSG_RetWatchList_SC::set_isshow(bool value) {
  _internal_set_isshow(value);
  // @@protoc_insertion_point(field_set:trade.MSG_RetWatchList_SC.isshow)
}

// repeated .trade.TradeItem item = 2;
inline int MSG_RetWatchList_SC::_internal_item_size() const {
  return item_.size();
}
inline int MSG_RetWatchList_SC::item_size() const {
  return _internal_item_size();
}
inline void MSG_RetWatchList_SC::clear_item() {
  item_.Clear();
}
inline ::trade::TradeItem* MSG_RetWatchList_SC::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:trade.MSG_RetWatchList_SC.item)
  return item_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >*
MSG_RetWatchList_SC::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:trade.MSG_RetWatchList_SC.item)
  return &item_;
}
inline const ::trade::TradeItem& MSG_RetWatchList_SC::_internal_item(int index) const {
  return item_.Get(index);
}
inline const ::trade::TradeItem& MSG_RetWatchList_SC::item(int index) const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetWatchList_SC.item)
  return _internal_item(index);
}
inline ::trade::TradeItem* MSG_RetWatchList_SC::_internal_add_item() {
  return item_.Add();
}
inline ::trade::TradeItem* MSG_RetWatchList_SC::add_item() {
  // @@protoc_insertion_point(field_add:trade.MSG_RetWatchList_SC.item)
  return _internal_add_item();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >&
MSG_RetWatchList_SC::item() const {
  // @@protoc_insertion_point(field_list:trade.MSG_RetWatchList_SC.item)
  return item_;
}

// -------------------------------------------------------------------

// MSG_ReqUserTradeHistory_CS

// -------------------------------------------------------------------

// UserTradeItem

// optional .trade.TradeOP op = 1;
inline bool UserTradeItem::_internal_has_op() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UserTradeItem::has_op() const {
  return _internal_has_op();
}
inline void UserTradeItem::clear_op() {
  op_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::trade::TradeOP UserTradeItem::_internal_op() const {
  return static_cast< ::trade::TradeOP >(op_);
}
inline ::trade::TradeOP UserTradeItem::op() const {
  // @@protoc_insertion_point(field_get:trade.UserTradeItem.op)
  return _internal_op();
}
inline void UserTradeItem::_internal_set_op(::trade::TradeOP value) {
  assert(::trade::TradeOP_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  op_ = value;
}
inline void UserTradeItem::set_op(::trade::TradeOP value) {
  _internal_set_op(value);
  // @@protoc_insertion_point(field_set:trade.UserTradeItem.op)
}

// optional .trade.TradeHistoryItem item = 2;
inline bool UserTradeItem::_internal_has_item() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || item_ != nullptr);
  return value;
}
inline bool UserTradeItem::has_item() const {
  return _internal_has_item();
}
inline void UserTradeItem::clear_item() {
  if (item_ != nullptr) item_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::trade::TradeHistoryItem& UserTradeItem::_internal_item() const {
  const ::trade::TradeHistoryItem* p = item_;
  return p != nullptr ? *p : *reinterpret_cast<const ::trade::TradeHistoryItem*>(
      &::trade::_TradeHistoryItem_default_instance_);
}
inline const ::trade::TradeHistoryItem& UserTradeItem::item() const {
  // @@protoc_insertion_point(field_get:trade.UserTradeItem.item)
  return _internal_item();
}
inline ::trade::TradeHistoryItem* UserTradeItem::release_item() {
  // @@protoc_insertion_point(field_release:trade.UserTradeItem.item)
  _has_bits_[0] &= ~0x00000001u;
  ::trade::TradeHistoryItem* temp = item_;
  item_ = nullptr;
  return temp;
}
inline ::trade::TradeHistoryItem* UserTradeItem::_internal_mutable_item() {
  _has_bits_[0] |= 0x00000001u;
  if (item_ == nullptr) {
    auto* p = CreateMaybeMessage<::trade::TradeHistoryItem>(GetArenaNoVirtual());
    item_ = p;
  }
  return item_;
}
inline ::trade::TradeHistoryItem* UserTradeItem::mutable_item() {
  // @@protoc_insertion_point(field_mutable:trade.UserTradeItem.item)
  return _internal_mutable_item();
}
inline void UserTradeItem::set_allocated_item(::trade::TradeHistoryItem* item) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete item_;
  }
  if (item) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      item = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:trade.UserTradeItem.item)
}

// optional uint32 judgeduetime = 3;
inline bool UserTradeItem::_internal_has_judgeduetime() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UserTradeItem::has_judgeduetime() const {
  return _internal_has_judgeduetime();
}
inline void UserTradeItem::clear_judgeduetime() {
  judgeduetime_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserTradeItem::_internal_judgeduetime() const {
  return judgeduetime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserTradeItem::judgeduetime() const {
  // @@protoc_insertion_point(field_get:trade.UserTradeItem.judgeduetime)
  return _internal_judgeduetime();
}
inline void UserTradeItem::_internal_set_judgeduetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  judgeduetime_ = value;
}
inline void UserTradeItem::set_judgeduetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_judgeduetime(value);
  // @@protoc_insertion_point(field_set:trade.UserTradeItem.judgeduetime)
}

// -------------------------------------------------------------------

// MSG_RetUserTradeHistory_SC

// repeated .trade.UserTradeItem one = 1;
inline int MSG_RetUserTradeHistory_SC::_internal_one_size() const {
  return one_.size();
}
inline int MSG_RetUserTradeHistory_SC::one_size() const {
  return _internal_one_size();
}
inline void MSG_RetUserTradeHistory_SC::clear_one() {
  one_.Clear();
}
inline ::trade::UserTradeItem* MSG_RetUserTradeHistory_SC::mutable_one(int index) {
  // @@protoc_insertion_point(field_mutable:trade.MSG_RetUserTradeHistory_SC.one)
  return one_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::UserTradeItem >*
MSG_RetUserTradeHistory_SC::mutable_one() {
  // @@protoc_insertion_point(field_mutable_list:trade.MSG_RetUserTradeHistory_SC.one)
  return &one_;
}
inline const ::trade::UserTradeItem& MSG_RetUserTradeHistory_SC::_internal_one(int index) const {
  return one_.Get(index);
}
inline const ::trade::UserTradeItem& MSG_RetUserTradeHistory_SC::one(int index) const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetUserTradeHistory_SC.one)
  return _internal_one(index);
}
inline ::trade::UserTradeItem* MSG_RetUserTradeHistory_SC::_internal_add_one() {
  return one_.Add();
}
inline ::trade::UserTradeItem* MSG_RetUserTradeHistory_SC::add_one() {
  // @@protoc_insertion_point(field_add:trade.MSG_RetUserTradeHistory_SC.one)
  return _internal_add_one();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::UserTradeItem >&
MSG_RetUserTradeHistory_SC::one() const {
  // @@protoc_insertion_point(field_list:trade.MSG_RetUserTradeHistory_SC.one)
  return one_;
}

// -------------------------------------------------------------------

// MSG_ReqGetNewestStaff_CS

// -------------------------------------------------------------------

// MSG_RetGetNewestStaff_SC

// repeated .trade.TradeItem itemlist = 1;
inline int MSG_RetGetNewestStaff_SC::_internal_itemlist_size() const {
  return itemlist_.size();
}
inline int MSG_RetGetNewestStaff_SC::itemlist_size() const {
  return _internal_itemlist_size();
}
inline void MSG_RetGetNewestStaff_SC::clear_itemlist() {
  itemlist_.Clear();
}
inline ::trade::TradeItem* MSG_RetGetNewestStaff_SC::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:trade.MSG_RetGetNewestStaff_SC.itemlist)
  return itemlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >*
MSG_RetGetNewestStaff_SC::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:trade.MSG_RetGetNewestStaff_SC.itemlist)
  return &itemlist_;
}
inline const ::trade::TradeItem& MSG_RetGetNewestStaff_SC::_internal_itemlist(int index) const {
  return itemlist_.Get(index);
}
inline const ::trade::TradeItem& MSG_RetGetNewestStaff_SC::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:trade.MSG_RetGetNewestStaff_SC.itemlist)
  return _internal_itemlist(index);
}
inline ::trade::TradeItem* MSG_RetGetNewestStaff_SC::_internal_add_itemlist() {
  return itemlist_.Add();
}
inline ::trade::TradeItem* MSG_RetGetNewestStaff_SC::add_itemlist() {
  // @@protoc_insertion_point(field_add:trade.MSG_RetGetNewestStaff_SC.itemlist)
  return _internal_add_itemlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::trade::TradeItem >&
MSG_RetGetNewestStaff_SC::itemlist() const {
  // @@protoc_insertion_point(field_list:trade.MSG_RetGetNewestStaff_SC.itemlist)
  return itemlist_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace trade

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::trade::TradeOP> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::trade::TradeOP>() {
  return ::trade::TradeOP_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_trade_2eproto
