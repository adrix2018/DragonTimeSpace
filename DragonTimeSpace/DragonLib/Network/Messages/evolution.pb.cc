// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: evolution.proto

#include "evolution.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace evolution {
class MSG_RetUserEvolution_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetUserEvolution_SC> _instance;
} _MSG_RetUserEvolution_SC_default_instance_;
class MSG_ReqUserEvolution_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqUserEvolution_CS> _instance;
} _MSG_ReqUserEvolution_CS_default_instance_;
}  // namespace evolution
static void InitDefaultsscc_info_MSG_ReqUserEvolution_CS_evolution_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::evolution::_MSG_ReqUserEvolution_CS_default_instance_;
    new (ptr) ::evolution::MSG_ReqUserEvolution_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::evolution::MSG_ReqUserEvolution_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqUserEvolution_CS_evolution_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqUserEvolution_CS_evolution_2eproto}, {}};

static void InitDefaultsscc_info_MSG_RetUserEvolution_SC_evolution_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::evolution::_MSG_RetUserEvolution_SC_default_instance_;
    new (ptr) ::evolution::MSG_RetUserEvolution_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::evolution::MSG_RetUserEvolution_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_RetUserEvolution_SC_evolution_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_RetUserEvolution_SC_evolution_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_evolution_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_evolution_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_evolution_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_evolution_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::evolution::MSG_RetUserEvolution_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::evolution::MSG_RetUserEvolution_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::evolution::MSG_RetUserEvolution_SC, evolutions_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::evolution::MSG_ReqUserEvolution_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::evolution::MSG_ReqUserEvolution_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::evolution::MSG_ReqUserEvolution_CS, evolutionid_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::evolution::MSG_RetUserEvolution_SC)},
  { 7, 13, sizeof(::evolution::MSG_ReqUserEvolution_CS)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::evolution::_MSG_RetUserEvolution_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::evolution::_MSG_ReqUserEvolution_CS_default_instance_),
};

const char descriptor_table_protodef_evolution_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017evolution.proto\022\tevolution\"-\n\027MSG_RetU"
  "serEvolution_SC\022\022\n\nevolutions\030\001 \003(\r\".\n\027M"
  "SG_ReqUserEvolution_CS\022\023\n\013evolutionId\030\001 "
  "\001(\r"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_evolution_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_evolution_2eproto_sccs[2] = {
  &scc_info_MSG_ReqUserEvolution_CS_evolution_2eproto.base,
  &scc_info_MSG_RetUserEvolution_SC_evolution_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_evolution_2eproto_once;
static bool descriptor_table_evolution_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_evolution_2eproto = {
  &descriptor_table_evolution_2eproto_initialized, descriptor_table_protodef_evolution_2eproto, "evolution.proto", 123,
  &descriptor_table_evolution_2eproto_once, descriptor_table_evolution_2eproto_sccs, descriptor_table_evolution_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_evolution_2eproto::offsets,
  file_level_metadata_evolution_2eproto, 2, file_level_enum_descriptors_evolution_2eproto, file_level_service_descriptors_evolution_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_evolution_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_evolution_2eproto)), true);
namespace evolution {

// ===================================================================

void MSG_RetUserEvolution_SC::InitAsDefaultInstance() {
}
class MSG_RetUserEvolution_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetUserEvolution_SC>()._has_bits_);
};

MSG_RetUserEvolution_SC::MSG_RetUserEvolution_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:evolution.MSG_RetUserEvolution_SC)
}
MSG_RetUserEvolution_SC::MSG_RetUserEvolution_SC(const MSG_RetUserEvolution_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      evolutions_(from.evolutions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:evolution.MSG_RetUserEvolution_SC)
}

void MSG_RetUserEvolution_SC::SharedCtor() {
}

MSG_RetUserEvolution_SC::~MSG_RetUserEvolution_SC() {
  // @@protoc_insertion_point(destructor:evolution.MSG_RetUserEvolution_SC)
  SharedDtor();
}

void MSG_RetUserEvolution_SC::SharedDtor() {
}

void MSG_RetUserEvolution_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetUserEvolution_SC& MSG_RetUserEvolution_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetUserEvolution_SC_evolution_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetUserEvolution_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:evolution.MSG_RetUserEvolution_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  evolutions_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetUserEvolution_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 evolutions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_evolutions(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_evolutions(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetUserEvolution_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:evolution.MSG_RetUserEvolution_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 evolutions = 1;
  for (int i = 0, n = this->_internal_evolutions_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_evolutions(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:evolution.MSG_RetUserEvolution_SC)
  return target;
}

size_t MSG_RetUserEvolution_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:evolution.MSG_RetUserEvolution_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 evolutions = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->evolutions_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_evolutions_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetUserEvolution_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:evolution.MSG_RetUserEvolution_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetUserEvolution_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetUserEvolution_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:evolution.MSG_RetUserEvolution_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:evolution.MSG_RetUserEvolution_SC)
    MergeFrom(*source);
  }
}

void MSG_RetUserEvolution_SC::MergeFrom(const MSG_RetUserEvolution_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:evolution.MSG_RetUserEvolution_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  evolutions_.MergeFrom(from.evolutions_);
}

void MSG_RetUserEvolution_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:evolution.MSG_RetUserEvolution_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetUserEvolution_SC::CopyFrom(const MSG_RetUserEvolution_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:evolution.MSG_RetUserEvolution_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetUserEvolution_SC::IsInitialized() const {
  return true;
}

void MSG_RetUserEvolution_SC::InternalSwap(MSG_RetUserEvolution_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  evolutions_.InternalSwap(&other->evolutions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetUserEvolution_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqUserEvolution_CS::InitAsDefaultInstance() {
}
class MSG_ReqUserEvolution_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqUserEvolution_CS>()._has_bits_);
  static void set_has_evolutionid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_ReqUserEvolution_CS::MSG_ReqUserEvolution_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:evolution.MSG_ReqUserEvolution_CS)
}
MSG_ReqUserEvolution_CS::MSG_ReqUserEvolution_CS(const MSG_ReqUserEvolution_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  evolutionid_ = from.evolutionid_;
  // @@protoc_insertion_point(copy_constructor:evolution.MSG_ReqUserEvolution_CS)
}

void MSG_ReqUserEvolution_CS::SharedCtor() {
  evolutionid_ = 0u;
}

MSG_ReqUserEvolution_CS::~MSG_ReqUserEvolution_CS() {
  // @@protoc_insertion_point(destructor:evolution.MSG_ReqUserEvolution_CS)
  SharedDtor();
}

void MSG_ReqUserEvolution_CS::SharedDtor() {
}

void MSG_ReqUserEvolution_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqUserEvolution_CS& MSG_ReqUserEvolution_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqUserEvolution_CS_evolution_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqUserEvolution_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:evolution.MSG_ReqUserEvolution_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  evolutionid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqUserEvolution_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 evolutionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_evolutionid(&has_bits);
          evolutionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqUserEvolution_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:evolution.MSG_ReqUserEvolution_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 evolutionId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_evolutionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:evolution.MSG_ReqUserEvolution_CS)
  return target;
}

size_t MSG_ReqUserEvolution_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:evolution.MSG_ReqUserEvolution_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 evolutionId = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_evolutionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqUserEvolution_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:evolution.MSG_ReqUserEvolution_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqUserEvolution_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqUserEvolution_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:evolution.MSG_ReqUserEvolution_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:evolution.MSG_ReqUserEvolution_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqUserEvolution_CS::MergeFrom(const MSG_ReqUserEvolution_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:evolution.MSG_ReqUserEvolution_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_evolutionid()) {
    _internal_set_evolutionid(from._internal_evolutionid());
  }
}

void MSG_ReqUserEvolution_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:evolution.MSG_ReqUserEvolution_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqUserEvolution_CS::CopyFrom(const MSG_ReqUserEvolution_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:evolution.MSG_ReqUserEvolution_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqUserEvolution_CS::IsInitialized() const {
  return true;
}

void MSG_ReqUserEvolution_CS::InternalSwap(MSG_ReqUserEvolution_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(evolutionid_, other->evolutionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqUserEvolution_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace evolution
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::evolution::MSG_RetUserEvolution_SC* Arena::CreateMaybeMessage< ::evolution::MSG_RetUserEvolution_SC >(Arena* arena) {
  return Arena::CreateInternal< ::evolution::MSG_RetUserEvolution_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::evolution::MSG_ReqUserEvolution_CS* Arena::CreateMaybeMessage< ::evolution::MSG_ReqUserEvolution_CS >(Arena* arena) {
  return Arena::CreateInternal< ::evolution::MSG_ReqUserEvolution_CS >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
