// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quest.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_quest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_quest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_quest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_quest_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[45]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_quest_2eproto;
namespace quest {
class ChangeMapFindWayInfo;
class ChangeMapFindWayInfoDefaultTypeInternal;
extern ChangeMapFindWayInfoDefaultTypeInternal _ChangeMapFindWayInfo_default_instance_;
class MSG_CartoonCompleteNotify_SC;
class MSG_CartoonCompleteNotify_SCDefaultTypeInternal;
extern MSG_CartoonCompleteNotify_SCDefaultTypeInternal _MSG_CartoonCompleteNotify_SC_default_instance_;
class MSG_NotifyClientOptional_SC;
class MSG_NotifyClientOptional_SCDefaultTypeInternal;
extern MSG_NotifyClientOptional_SCDefaultTypeInternal _MSG_NotifyClientOptional_SC_default_instance_;
class MSG_PlayBellQTEResult_CS;
class MSG_PlayBellQTEResult_CSDefaultTypeInternal;
extern MSG_PlayBellQTEResult_CSDefaultTypeInternal _MSG_PlayBellQTEResult_CS_default_instance_;
class MSG_PlayBellQTE_SC;
class MSG_PlayBellQTE_SCDefaultTypeInternal;
extern MSG_PlayBellQTE_SCDefaultTypeInternal _MSG_PlayBellQTE_SC_default_instance_;
class MSG_PlayCartoonAndGoMap_SC;
class MSG_PlayCartoonAndGoMap_SCDefaultTypeInternal;
extern MSG_PlayCartoonAndGoMap_SCDefaultTypeInternal _MSG_PlayCartoonAndGoMap_SC_default_instance_;
class MSG_ReqAbandonQuest_CS;
class MSG_ReqAbandonQuest_CSDefaultTypeInternal;
extern MSG_ReqAbandonQuest_CSDefaultTypeInternal _MSG_ReqAbandonQuest_CS_default_instance_;
class MSG_ReqChangeMapFindPath_CS;
class MSG_ReqChangeMapFindPath_CSDefaultTypeInternal;
extern MSG_ReqChangeMapFindPath_CSDefaultTypeInternal _MSG_ReqChangeMapFindPath_CS_default_instance_;
class MSG_ReqCurActiveQuest_CS;
class MSG_ReqCurActiveQuest_CSDefaultTypeInternal;
extern MSG_ReqCurActiveQuest_CSDefaultTypeInternal _MSG_ReqCurActiveQuest_CS_default_instance_;
class MSG_ReqExecuteQuest_CS;
class MSG_ReqExecuteQuest_CSDefaultTypeInternal;
extern MSG_ReqExecuteQuest_CSDefaultTypeInternal _MSG_ReqExecuteQuest_CS_default_instance_;
class MSG_ReqMapQuestInfo_CS;
class MSG_ReqMapQuestInfo_CSDefaultTypeInternal;
extern MSG_ReqMapQuestInfo_CSDefaultTypeInternal _MSG_ReqMapQuestInfo_CS_default_instance_;
class MSG_ReqRetQuestState_CSC;
class MSG_ReqRetQuestState_CSCDefaultTypeInternal;
extern MSG_ReqRetQuestState_CSCDefaultTypeInternal _MSG_ReqRetQuestState_CSC_default_instance_;
class MSG_ReqSubmitObjs_CS;
class MSG_ReqSubmitObjs_CSDefaultTypeInternal;
extern MSG_ReqSubmitObjs_CSDefaultTypeInternal _MSG_ReqSubmitObjs_CS_default_instance_;
class MSG_ReqValidQuests_CS;
class MSG_ReqValidQuests_CSDefaultTypeInternal;
extern MSG_ReqValidQuests_CSDefaultTypeInternal _MSG_ReqValidQuests_CS_default_instance_;
class MSG_Req_AnswerShareQuest_CS;
class MSG_Req_AnswerShareQuest_CSDefaultTypeInternal;
extern MSG_Req_AnswerShareQuest_CSDefaultTypeInternal _MSG_Req_AnswerShareQuest_CS_default_instance_;
class MSG_Req_CommitYQDData_CS;
class MSG_Req_CommitYQDData_CSDefaultTypeInternal;
extern MSG_Req_CommitYQDData_CSDefaultTypeInternal _MSG_Req_CommitYQDData_CS_default_instance_;
class MSG_Req_PlayYQDRetry_CS;
class MSG_Req_PlayYQDRetry_CSDefaultTypeInternal;
extern MSG_Req_PlayYQDRetry_CSDefaultTypeInternal _MSG_Req_PlayYQDRetry_CS_default_instance_;
class MSG_Req_QuestInfo_CS;
class MSG_Req_QuestInfo_CSDefaultTypeInternal;
extern MSG_Req_QuestInfo_CSDefaultTypeInternal _MSG_Req_QuestInfo_CS_default_instance_;
class MSG_Req_SetQuestNeedShow_CS;
class MSG_Req_SetQuestNeedShow_CSDefaultTypeInternal;
extern MSG_Req_SetQuestNeedShow_CSDefaultTypeInternal _MSG_Req_SetQuestNeedShow_CS_default_instance_;
class MSG_Req_ShareQuestToTeamMember_CS;
class MSG_Req_ShareQuestToTeamMember_CSDefaultTypeInternal;
extern MSG_Req_ShareQuestToTeamMember_CSDefaultTypeInternal _MSG_Req_ShareQuestToTeamMember_CS_default_instance_;
class MSG_Req_VisitNpcTrade_CS;
class MSG_Req_VisitNpcTrade_CSDefaultTypeInternal;
extern MSG_Req_VisitNpcTrade_CSDefaultTypeInternal _MSG_Req_VisitNpcTrade_CS_default_instance_;
class MSG_RetAbandonQuest_SC;
class MSG_RetAbandonQuest_SCDefaultTypeInternal;
extern MSG_RetAbandonQuest_SCDefaultTypeInternal _MSG_RetAbandonQuest_SC_default_instance_;
class MSG_RetChangeMapFindPath_SC;
class MSG_RetChangeMapFindPath_SCDefaultTypeInternal;
extern MSG_RetChangeMapFindPath_SCDefaultTypeInternal _MSG_RetChangeMapFindPath_SC_default_instance_;
class MSG_RetCurActiveQuest_SC;
class MSG_RetCurActiveQuest_SCDefaultTypeInternal;
extern MSG_RetCurActiveQuest_SCDefaultTypeInternal _MSG_RetCurActiveQuest_SC_default_instance_;
class MSG_RetMapQuestInfo_SC;
class MSG_RetMapQuestInfo_SCDefaultTypeInternal;
extern MSG_RetMapQuestInfo_SCDefaultTypeInternal _MSG_RetMapQuestInfo_SC_default_instance_;
class MSG_RetPlotTalkID_SC;
class MSG_RetPlotTalkID_SCDefaultTypeInternal;
extern MSG_RetPlotTalkID_SCDefaultTypeInternal _MSG_RetPlotTalkID_SC_default_instance_;
class MSG_RetRingQuestRingCount_SC;
class MSG_RetRingQuestRingCount_SCDefaultTypeInternal;
extern MSG_RetRingQuestRingCount_SCDefaultTypeInternal _MSG_RetRingQuestRingCount_SC_default_instance_;
class MSG_RetSubmitObjs_SC;
class MSG_RetSubmitObjs_SCDefaultTypeInternal;
extern MSG_RetSubmitObjs_SCDefaultTypeInternal _MSG_RetSubmitObjs_SC_default_instance_;
class MSG_RetValidQuests_SC;
class MSG_RetValidQuests_SCDefaultTypeInternal;
extern MSG_RetValidQuests_SCDefaultTypeInternal _MSG_RetValidQuests_SC_default_instance_;
class MSG_Ret_AnswerShareQuest_SC;
class MSG_Ret_AnswerShareQuest_SCDefaultTypeInternal;
extern MSG_Ret_AnswerShareQuest_SCDefaultTypeInternal _MSG_Ret_AnswerShareQuest_SC_default_instance_;
class MSG_Ret_NotifyCountDown_SC;
class MSG_Ret_NotifyCountDown_SCDefaultTypeInternal;
extern MSG_Ret_NotifyCountDown_SCDefaultTypeInternal _MSG_Ret_NotifyCountDown_SC_default_instance_;
class MSG_Ret_NotifyShareQuest_SC;
class MSG_Ret_NotifyShareQuest_SCDefaultTypeInternal;
extern MSG_Ret_NotifyShareQuest_SCDefaultTypeInternal _MSG_Ret_NotifyShareQuest_SC_default_instance_;
class MSG_Ret_QuestInfo_SC;
class MSG_Ret_QuestInfo_SCDefaultTypeInternal;
extern MSG_Ret_QuestInfo_SCDefaultTypeInternal _MSG_Ret_QuestInfo_SC_default_instance_;
class MSG_Ret_SetQuestNeedShow_SC;
class MSG_Ret_SetQuestNeedShow_SCDefaultTypeInternal;
extern MSG_Ret_SetQuestNeedShow_SCDefaultTypeInternal _MSG_Ret_SetQuestNeedShow_SC_default_instance_;
class MSG_Ret_VisitNpcTrade_SC;
class MSG_Ret_VisitNpcTrade_SCDefaultTypeInternal;
extern MSG_Ret_VisitNpcTrade_SCDefaultTypeInternal _MSG_Ret_VisitNpcTrade_SC_default_instance_;
class MSG_notifyQuestStateEffect_SC;
class MSG_notifyQuestStateEffect_SCDefaultTypeInternal;
extern MSG_notifyQuestStateEffect_SCDefaultTypeInternal _MSG_notifyQuestStateEffect_SC_default_instance_;
class MSG_notifyRefreshQuestInfo_SC;
class MSG_notifyRefreshQuestInfo_SCDefaultTypeInternal;
extern MSG_notifyRefreshQuestInfo_SCDefaultTypeInternal _MSG_notifyRefreshQuestInfo_SC_default_instance_;
class QuestStateInfo;
class QuestStateInfoDefaultTypeInternal;
extern QuestStateInfoDefaultTypeInternal _QuestStateInfo_default_instance_;
class RingQuestRingCount;
class RingQuestRingCountDefaultTypeInternal;
extern RingQuestRingCountDefaultTypeInternal _RingQuestRingCount_default_instance_;
class UnorderQuestBranchInfo;
class UnorderQuestBranchInfoDefaultTypeInternal;
extern UnorderQuestBranchInfoDefaultTypeInternal _UnorderQuestBranchInfo_default_instance_;
class npcQuestList;
class npcQuestListDefaultTypeInternal;
extern npcQuestListDefaultTypeInternal _npcQuestList_default_instance_;
class npcValidQuest;
class npcValidQuestDefaultTypeInternal;
extern npcValidQuestDefaultTypeInternal _npcValidQuest_default_instance_;
class questCRC;
class questCRCDefaultTypeInternal;
extern questCRCDefaultTypeInternal _questCRC_default_instance_;
class ringQuestInfo;
class ringQuestInfoDefaultTypeInternal;
extern ringQuestInfoDefaultTypeInternal _ringQuestInfo_default_instance_;
class validQuest;
class validQuestDefaultTypeInternal;
extern validQuestDefaultTypeInternal _validQuest_default_instance_;
}  // namespace quest
PROTOBUF_NAMESPACE_OPEN
template<> ::quest::ChangeMapFindWayInfo* Arena::CreateMaybeMessage<::quest::ChangeMapFindWayInfo>(Arena*);
template<> ::quest::MSG_CartoonCompleteNotify_SC* Arena::CreateMaybeMessage<::quest::MSG_CartoonCompleteNotify_SC>(Arena*);
template<> ::quest::MSG_NotifyClientOptional_SC* Arena::CreateMaybeMessage<::quest::MSG_NotifyClientOptional_SC>(Arena*);
template<> ::quest::MSG_PlayBellQTEResult_CS* Arena::CreateMaybeMessage<::quest::MSG_PlayBellQTEResult_CS>(Arena*);
template<> ::quest::MSG_PlayBellQTE_SC* Arena::CreateMaybeMessage<::quest::MSG_PlayBellQTE_SC>(Arena*);
template<> ::quest::MSG_PlayCartoonAndGoMap_SC* Arena::CreateMaybeMessage<::quest::MSG_PlayCartoonAndGoMap_SC>(Arena*);
template<> ::quest::MSG_ReqAbandonQuest_CS* Arena::CreateMaybeMessage<::quest::MSG_ReqAbandonQuest_CS>(Arena*);
template<> ::quest::MSG_ReqChangeMapFindPath_CS* Arena::CreateMaybeMessage<::quest::MSG_ReqChangeMapFindPath_CS>(Arena*);
template<> ::quest::MSG_ReqCurActiveQuest_CS* Arena::CreateMaybeMessage<::quest::MSG_ReqCurActiveQuest_CS>(Arena*);
template<> ::quest::MSG_ReqExecuteQuest_CS* Arena::CreateMaybeMessage<::quest::MSG_ReqExecuteQuest_CS>(Arena*);
template<> ::quest::MSG_ReqMapQuestInfo_CS* Arena::CreateMaybeMessage<::quest::MSG_ReqMapQuestInfo_CS>(Arena*);
template<> ::quest::MSG_ReqRetQuestState_CSC* Arena::CreateMaybeMessage<::quest::MSG_ReqRetQuestState_CSC>(Arena*);
template<> ::quest::MSG_ReqSubmitObjs_CS* Arena::CreateMaybeMessage<::quest::MSG_ReqSubmitObjs_CS>(Arena*);
template<> ::quest::MSG_ReqValidQuests_CS* Arena::CreateMaybeMessage<::quest::MSG_ReqValidQuests_CS>(Arena*);
template<> ::quest::MSG_Req_AnswerShareQuest_CS* Arena::CreateMaybeMessage<::quest::MSG_Req_AnswerShareQuest_CS>(Arena*);
template<> ::quest::MSG_Req_CommitYQDData_CS* Arena::CreateMaybeMessage<::quest::MSG_Req_CommitYQDData_CS>(Arena*);
template<> ::quest::MSG_Req_PlayYQDRetry_CS* Arena::CreateMaybeMessage<::quest::MSG_Req_PlayYQDRetry_CS>(Arena*);
template<> ::quest::MSG_Req_QuestInfo_CS* Arena::CreateMaybeMessage<::quest::MSG_Req_QuestInfo_CS>(Arena*);
template<> ::quest::MSG_Req_SetQuestNeedShow_CS* Arena::CreateMaybeMessage<::quest::MSG_Req_SetQuestNeedShow_CS>(Arena*);
template<> ::quest::MSG_Req_ShareQuestToTeamMember_CS* Arena::CreateMaybeMessage<::quest::MSG_Req_ShareQuestToTeamMember_CS>(Arena*);
template<> ::quest::MSG_Req_VisitNpcTrade_CS* Arena::CreateMaybeMessage<::quest::MSG_Req_VisitNpcTrade_CS>(Arena*);
template<> ::quest::MSG_RetAbandonQuest_SC* Arena::CreateMaybeMessage<::quest::MSG_RetAbandonQuest_SC>(Arena*);
template<> ::quest::MSG_RetChangeMapFindPath_SC* Arena::CreateMaybeMessage<::quest::MSG_RetChangeMapFindPath_SC>(Arena*);
template<> ::quest::MSG_RetCurActiveQuest_SC* Arena::CreateMaybeMessage<::quest::MSG_RetCurActiveQuest_SC>(Arena*);
template<> ::quest::MSG_RetMapQuestInfo_SC* Arena::CreateMaybeMessage<::quest::MSG_RetMapQuestInfo_SC>(Arena*);
template<> ::quest::MSG_RetPlotTalkID_SC* Arena::CreateMaybeMessage<::quest::MSG_RetPlotTalkID_SC>(Arena*);
template<> ::quest::MSG_RetRingQuestRingCount_SC* Arena::CreateMaybeMessage<::quest::MSG_RetRingQuestRingCount_SC>(Arena*);
template<> ::quest::MSG_RetSubmitObjs_SC* Arena::CreateMaybeMessage<::quest::MSG_RetSubmitObjs_SC>(Arena*);
template<> ::quest::MSG_RetValidQuests_SC* Arena::CreateMaybeMessage<::quest::MSG_RetValidQuests_SC>(Arena*);
template<> ::quest::MSG_Ret_AnswerShareQuest_SC* Arena::CreateMaybeMessage<::quest::MSG_Ret_AnswerShareQuest_SC>(Arena*);
template<> ::quest::MSG_Ret_NotifyCountDown_SC* Arena::CreateMaybeMessage<::quest::MSG_Ret_NotifyCountDown_SC>(Arena*);
template<> ::quest::MSG_Ret_NotifyShareQuest_SC* Arena::CreateMaybeMessage<::quest::MSG_Ret_NotifyShareQuest_SC>(Arena*);
template<> ::quest::MSG_Ret_QuestInfo_SC* Arena::CreateMaybeMessage<::quest::MSG_Ret_QuestInfo_SC>(Arena*);
template<> ::quest::MSG_Ret_SetQuestNeedShow_SC* Arena::CreateMaybeMessage<::quest::MSG_Ret_SetQuestNeedShow_SC>(Arena*);
template<> ::quest::MSG_Ret_VisitNpcTrade_SC* Arena::CreateMaybeMessage<::quest::MSG_Ret_VisitNpcTrade_SC>(Arena*);
template<> ::quest::MSG_notifyQuestStateEffect_SC* Arena::CreateMaybeMessage<::quest::MSG_notifyQuestStateEffect_SC>(Arena*);
template<> ::quest::MSG_notifyRefreshQuestInfo_SC* Arena::CreateMaybeMessage<::quest::MSG_notifyRefreshQuestInfo_SC>(Arena*);
template<> ::quest::QuestStateInfo* Arena::CreateMaybeMessage<::quest::QuestStateInfo>(Arena*);
template<> ::quest::RingQuestRingCount* Arena::CreateMaybeMessage<::quest::RingQuestRingCount>(Arena*);
template<> ::quest::UnorderQuestBranchInfo* Arena::CreateMaybeMessage<::quest::UnorderQuestBranchInfo>(Arena*);
template<> ::quest::npcQuestList* Arena::CreateMaybeMessage<::quest::npcQuestList>(Arena*);
template<> ::quest::npcValidQuest* Arena::CreateMaybeMessage<::quest::npcValidQuest>(Arena*);
template<> ::quest::questCRC* Arena::CreateMaybeMessage<::quest::questCRC>(Arena*);
template<> ::quest::ringQuestInfo* Arena::CreateMaybeMessage<::quest::ringQuestInfo>(Arena*);
template<> ::quest::validQuest* Arena::CreateMaybeMessage<::quest::validQuest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace quest {

// ===================================================================

class questCRC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.questCRC) */ {
 public:
  questCRC();
  virtual ~questCRC();

  questCRC(const questCRC& from);
  questCRC(questCRC&& from) noexcept
    : questCRC() {
    *this = ::std::move(from);
  }

  inline questCRC& operator=(const questCRC& from) {
    CopyFrom(from);
    return *this;
  }
  inline questCRC& operator=(questCRC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const questCRC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const questCRC* internal_default_instance() {
    return reinterpret_cast<const questCRC*>(
               &_questCRC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(questCRC& a, questCRC& b) {
    a.Swap(&b);
  }
  inline void Swap(questCRC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline questCRC* New() const final {
    return CreateMaybeMessage<questCRC>(nullptr);
  }

  questCRC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<questCRC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const questCRC& from);
  void MergeFrom(const questCRC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(questCRC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.questCRC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestIdFieldNumber = 1,
    kBranchIdFieldNumber = 2,
    kCrcFieldNumber = 3,
  };
  // optional uint32 quest_id = 1;
  bool has_quest_id() const;
  private:
  bool _internal_has_quest_id() const;
  public:
  void clear_quest_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 quest_id() const;
  void set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quest_id() const;
  void _internal_set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 branch_id = 2;
  bool has_branch_id() const;
  private:
  bool _internal_has_branch_id() const;
  public:
  void clear_branch_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 branch_id() const;
  void set_branch_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_branch_id() const;
  void _internal_set_branch_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 crc = 3;
  bool has_crc() const;
  private:
  bool _internal_has_crc() const;
  public:
  void clear_crc();
  ::PROTOBUF_NAMESPACE_ID::uint32 crc() const;
  void set_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_crc() const;
  void _internal_set_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.questCRC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quest_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 branch_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 crc_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class validQuest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.validQuest) */ {
 public:
  validQuest();
  virtual ~validQuest();

  validQuest(const validQuest& from);
  validQuest(validQuest&& from) noexcept
    : validQuest() {
    *this = ::std::move(from);
  }

  inline validQuest& operator=(const validQuest& from) {
    CopyFrom(from);
    return *this;
  }
  inline validQuest& operator=(validQuest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const validQuest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const validQuest* internal_default_instance() {
    return reinterpret_cast<const validQuest*>(
               &_validQuest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(validQuest& a, validQuest& b) {
    a.Swap(&b);
  }
  inline void Swap(validQuest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline validQuest* New() const final {
    return CreateMaybeMessage<validQuest>(nullptr);
  }

  validQuest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<validQuest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const validQuest& from);
  void MergeFrom(const validQuest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(validQuest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.validQuest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestIdFieldNumber = 1,
    kBranchIdFieldNumber = 2,
  };
  // optional uint32 quest_id = 1;
  bool has_quest_id() const;
  private:
  bool _internal_has_quest_id() const;
  public:
  void clear_quest_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 quest_id() const;
  void set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quest_id() const;
  void _internal_set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 branch_id = 2;
  bool has_branch_id() const;
  private:
  bool _internal_has_branch_id() const;
  public:
  void clear_branch_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 branch_id() const;
  void set_branch_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_branch_id() const;
  void _internal_set_branch_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.validQuest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quest_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 branch_id_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class npcValidQuest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.npcValidQuest) */ {
 public:
  npcValidQuest();
  virtual ~npcValidQuest();

  npcValidQuest(const npcValidQuest& from);
  npcValidQuest(npcValidQuest&& from) noexcept
    : npcValidQuest() {
    *this = ::std::move(from);
  }

  inline npcValidQuest& operator=(const npcValidQuest& from) {
    CopyFrom(from);
    return *this;
  }
  inline npcValidQuest& operator=(npcValidQuest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const npcValidQuest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const npcValidQuest* internal_default_instance() {
    return reinterpret_cast<const npcValidQuest*>(
               &_npcValidQuest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(npcValidQuest& a, npcValidQuest& b) {
    a.Swap(&b);
  }
  inline void Swap(npcValidQuest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline npcValidQuest* New() const final {
    return CreateMaybeMessage<npcValidQuest>(nullptr);
  }

  npcValidQuest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<npcValidQuest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const npcValidQuest& from);
  void MergeFrom(const npcValidQuest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(npcValidQuest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.npcValidQuest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpcidFieldNumber = 1,
    kQuestidFieldNumber = 2,
  };
  // optional uint32 npcid = 1;
  bool has_npcid() const;
  private:
  bool _internal_has_npcid() const;
  public:
  void clear_npcid();
  ::PROTOBUF_NAMESPACE_ID::uint32 npcid() const;
  void set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_npcid() const;
  void _internal_set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 questid = 2;
  bool has_questid() const;
  private:
  bool _internal_has_questid() const;
  public:
  void clear_questid();
  ::PROTOBUF_NAMESPACE_ID::uint32 questid() const;
  void set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questid() const;
  void _internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.npcValidQuest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 npcid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questid_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_VisitNpcTrade_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Req_VisitNpcTrade_CS) */ {
 public:
  MSG_Req_VisitNpcTrade_CS();
  virtual ~MSG_Req_VisitNpcTrade_CS();

  MSG_Req_VisitNpcTrade_CS(const MSG_Req_VisitNpcTrade_CS& from);
  MSG_Req_VisitNpcTrade_CS(MSG_Req_VisitNpcTrade_CS&& from) noexcept
    : MSG_Req_VisitNpcTrade_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_VisitNpcTrade_CS& operator=(const MSG_Req_VisitNpcTrade_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_VisitNpcTrade_CS& operator=(MSG_Req_VisitNpcTrade_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_VisitNpcTrade_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_VisitNpcTrade_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_VisitNpcTrade_CS*>(
               &_MSG_Req_VisitNpcTrade_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MSG_Req_VisitNpcTrade_CS& a, MSG_Req_VisitNpcTrade_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_VisitNpcTrade_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_VisitNpcTrade_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_VisitNpcTrade_CS>(nullptr);
  }

  MSG_Req_VisitNpcTrade_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_VisitNpcTrade_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_VisitNpcTrade_CS& from);
  void MergeFrom(const MSG_Req_VisitNpcTrade_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_VisitNpcTrade_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Req_VisitNpcTrade_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAllcrcFieldNumber = 2,
    kNpcTempIdFieldNumber = 1,
  };
  // repeated .quest.questCRC allcrc = 2;
  int allcrc_size() const;
  private:
  int _internal_allcrc_size() const;
  public:
  void clear_allcrc();
  ::quest::questCRC* mutable_allcrc(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::questCRC >*
      mutable_allcrc();
  private:
  const ::quest::questCRC& _internal_allcrc(int index) const;
  ::quest::questCRC* _internal_add_allcrc();
  public:
  const ::quest::questCRC& allcrc(int index) const;
  ::quest::questCRC* add_allcrc();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::questCRC >&
      allcrc() const;

  // optional uint64 npc_temp_id = 1;
  bool has_npc_temp_id() const;
  private:
  bool _internal_has_npc_temp_id() const;
  public:
  void clear_npc_temp_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 npc_temp_id() const;
  void set_npc_temp_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_npc_temp_id() const;
  void _internal_set_npc_temp_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Req_VisitNpcTrade_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::questCRC > allcrc_;
  ::PROTOBUF_NAMESPACE_ID::uint64 npc_temp_id_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_VisitNpcTrade_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Ret_VisitNpcTrade_SC) */ {
 public:
  MSG_Ret_VisitNpcTrade_SC();
  virtual ~MSG_Ret_VisitNpcTrade_SC();

  MSG_Ret_VisitNpcTrade_SC(const MSG_Ret_VisitNpcTrade_SC& from);
  MSG_Ret_VisitNpcTrade_SC(MSG_Ret_VisitNpcTrade_SC&& from) noexcept
    : MSG_Ret_VisitNpcTrade_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_VisitNpcTrade_SC& operator=(const MSG_Ret_VisitNpcTrade_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_VisitNpcTrade_SC& operator=(MSG_Ret_VisitNpcTrade_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_VisitNpcTrade_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_VisitNpcTrade_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_VisitNpcTrade_SC*>(
               &_MSG_Ret_VisitNpcTrade_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MSG_Ret_VisitNpcTrade_SC& a, MSG_Ret_VisitNpcTrade_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_VisitNpcTrade_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_VisitNpcTrade_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_VisitNpcTrade_SC>(nullptr);
  }

  MSG_Ret_VisitNpcTrade_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_VisitNpcTrade_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_VisitNpcTrade_SC& from);
  void MergeFrom(const MSG_Ret_VisitNpcTrade_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_VisitNpcTrade_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Ret_VisitNpcTrade_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAllcrcFieldNumber = 11,
    kUserMenuFieldNumber = 9,
    kNpcMenuFieldNumber = 10,
    kActionFieldNumber = 1,
    kRetcodeFieldNumber = 2,
    kNpcTempIdFieldNumber = 4,
    kFlagFieldNumber = 3,
    kTypeFieldNumber = 5,
    kConvExchangeFieldNumber = 6,
    kShowTypeFieldNumber = 7,
    kCrcRetFieldNumber = 8,
    kSourceFieldNumber = 12,
  };
  // repeated .quest.questCRC allcrc = 11;
  int allcrc_size() const;
  private:
  int _internal_allcrc_size() const;
  public:
  void clear_allcrc();
  ::quest::questCRC* mutable_allcrc(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::questCRC >*
      mutable_allcrc();
  private:
  const ::quest::questCRC& _internal_allcrc(int index) const;
  ::quest::questCRC* _internal_add_allcrc();
  public:
  const ::quest::questCRC& allcrc(int index) const;
  ::quest::questCRC* add_allcrc();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::questCRC >&
      allcrc() const;

  // optional string user_menu = 9;
  bool has_user_menu() const;
  private:
  bool _internal_has_user_menu() const;
  public:
  void clear_user_menu();
  const std::string& user_menu() const;
  void set_user_menu(const std::string& value);
  void set_user_menu(std::string&& value);
  void set_user_menu(const char* value);
  void set_user_menu(const char* value, size_t size);
  std::string* mutable_user_menu();
  std::string* release_user_menu();
  void set_allocated_user_menu(std::string* user_menu);
  private:
  const std::string& _internal_user_menu() const;
  void _internal_set_user_menu(const std::string& value);
  std::string* _internal_mutable_user_menu();
  public:

  // optional string npc_menu = 10;
  bool has_npc_menu() const;
  private:
  bool _internal_has_npc_menu() const;
  public:
  void clear_npc_menu();
  const std::string& npc_menu() const;
  void set_npc_menu(const std::string& value);
  void set_npc_menu(std::string&& value);
  void set_npc_menu(const char* value);
  void set_npc_menu(const char* value, size_t size);
  std::string* mutable_npc_menu();
  std::string* release_npc_menu();
  void set_allocated_npc_menu(std::string* npc_menu);
  private:
  const std::string& _internal_npc_menu() const;
  void _internal_set_npc_menu(const std::string& value);
  std::string* _internal_mutable_npc_menu();
  public:

  // optional uint32 action = 1;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  ::PROTOBUF_NAMESPACE_ID::uint32 action() const;
  void set_action(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_action() const;
  void _internal_set_action(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 retcode = 2;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 npc_temp_id = 4;
  bool has_npc_temp_id() const;
  private:
  bool _internal_has_npc_temp_id() const;
  public:
  void clear_npc_temp_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 npc_temp_id() const;
  void set_npc_temp_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_npc_temp_id() const;
  void _internal_set_npc_temp_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 flag = 3;
  bool has_flag() const;
  private:
  bool _internal_has_flag() const;
  public:
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flag() const;
  void _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 type = 5;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 conv_exchange = 6;
  bool has_conv_exchange() const;
  private:
  bool _internal_has_conv_exchange() const;
  public:
  void clear_conv_exchange();
  ::PROTOBUF_NAMESPACE_ID::uint32 conv_exchange() const;
  void set_conv_exchange(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_conv_exchange() const;
  void _internal_set_conv_exchange(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 show_type = 7;
  bool has_show_type() const;
  private:
  bool _internal_has_show_type() const;
  public:
  void clear_show_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 show_type() const;
  void set_show_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_show_type() const;
  void _internal_set_show_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 crc_ret = 8;
  bool has_crc_ret() const;
  private:
  bool _internal_has_crc_ret() const;
  public:
  void clear_crc_ret();
  ::PROTOBUF_NAMESPACE_ID::uint32 crc_ret() const;
  void set_crc_ret(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_crc_ret() const;
  void _internal_set_crc_ret(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 source = 12;
  bool has_source() const;
  private:
  bool _internal_has_source() const;
  public:
  void clear_source();
  ::PROTOBUF_NAMESPACE_ID::uint32 source() const;
  void set_source(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_source() const;
  void _internal_set_source(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Ret_VisitNpcTrade_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::questCRC > allcrc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr user_menu_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr npc_menu_;
  ::PROTOBUF_NAMESPACE_ID::uint32 action_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  ::PROTOBUF_NAMESPACE_ID::uint64 npc_temp_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flag_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 conv_exchange_;
  ::PROTOBUF_NAMESPACE_ID::uint32 show_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 crc_ret_;
  ::PROTOBUF_NAMESPACE_ID::uint32 source_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_QuestInfo_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Req_QuestInfo_CS) */ {
 public:
  MSG_Req_QuestInfo_CS();
  virtual ~MSG_Req_QuestInfo_CS();

  MSG_Req_QuestInfo_CS(const MSG_Req_QuestInfo_CS& from);
  MSG_Req_QuestInfo_CS(MSG_Req_QuestInfo_CS&& from) noexcept
    : MSG_Req_QuestInfo_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_QuestInfo_CS& operator=(const MSG_Req_QuestInfo_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_QuestInfo_CS& operator=(MSG_Req_QuestInfo_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_QuestInfo_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_QuestInfo_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_QuestInfo_CS*>(
               &_MSG_Req_QuestInfo_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MSG_Req_QuestInfo_CS& a, MSG_Req_QuestInfo_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_QuestInfo_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_QuestInfo_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_QuestInfo_CS>(nullptr);
  }

  MSG_Req_QuestInfo_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_QuestInfo_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_QuestInfo_CS& from);
  void MergeFrom(const MSG_Req_QuestInfo_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_QuestInfo_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Req_QuestInfo_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Req_QuestInfo_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class UnorderQuestBranchInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.UnorderQuestBranchInfo) */ {
 public:
  UnorderQuestBranchInfo();
  virtual ~UnorderQuestBranchInfo();

  UnorderQuestBranchInfo(const UnorderQuestBranchInfo& from);
  UnorderQuestBranchInfo(UnorderQuestBranchInfo&& from) noexcept
    : UnorderQuestBranchInfo() {
    *this = ::std::move(from);
  }

  inline UnorderQuestBranchInfo& operator=(const UnorderQuestBranchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnorderQuestBranchInfo& operator=(UnorderQuestBranchInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UnorderQuestBranchInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnorderQuestBranchInfo* internal_default_instance() {
    return reinterpret_cast<const UnorderQuestBranchInfo*>(
               &_UnorderQuestBranchInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(UnorderQuestBranchInfo& a, UnorderQuestBranchInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(UnorderQuestBranchInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnorderQuestBranchInfo* New() const final {
    return CreateMaybeMessage<UnorderQuestBranchInfo>(nullptr);
  }

  UnorderQuestBranchInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnorderQuestBranchInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UnorderQuestBranchInfo& from);
  void MergeFrom(const UnorderQuestBranchInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnorderQuestBranchInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.UnorderQuestBranchInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDegreevarFieldNumber = 1,
    kCurvalueFieldNumber = 2,
    kMaxvalueFieldNumber = 3,
  };
  // optional string degreevar = 1;
  bool has_degreevar() const;
  private:
  bool _internal_has_degreevar() const;
  public:
  void clear_degreevar();
  const std::string& degreevar() const;
  void set_degreevar(const std::string& value);
  void set_degreevar(std::string&& value);
  void set_degreevar(const char* value);
  void set_degreevar(const char* value, size_t size);
  std::string* mutable_degreevar();
  std::string* release_degreevar();
  void set_allocated_degreevar(std::string* degreevar);
  private:
  const std::string& _internal_degreevar() const;
  void _internal_set_degreevar(const std::string& value);
  std::string* _internal_mutable_degreevar();
  public:

  // optional uint32 curvalue = 2;
  bool has_curvalue() const;
  private:
  bool _internal_has_curvalue() const;
  public:
  void clear_curvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 curvalue() const;
  void set_curvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curvalue() const;
  void _internal_set_curvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxvalue = 3;
  bool has_maxvalue() const;
  private:
  bool _internal_has_maxvalue() const;
  public:
  void clear_maxvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxvalue() const;
  void set_maxvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxvalue() const;
  void _internal_set_maxvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.UnorderQuestBranchInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr degreevar_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curvalue_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxvalue_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_QuestInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Ret_QuestInfo_SC) */ {
 public:
  MSG_Ret_QuestInfo_SC();
  virtual ~MSG_Ret_QuestInfo_SC();

  MSG_Ret_QuestInfo_SC(const MSG_Ret_QuestInfo_SC& from);
  MSG_Ret_QuestInfo_SC(MSG_Ret_QuestInfo_SC&& from) noexcept
    : MSG_Ret_QuestInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_QuestInfo_SC& operator=(const MSG_Ret_QuestInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_QuestInfo_SC& operator=(MSG_Ret_QuestInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_QuestInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_QuestInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_QuestInfo_SC*>(
               &_MSG_Ret_QuestInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_Ret_QuestInfo_SC& a, MSG_Ret_QuestInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_QuestInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_QuestInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_QuestInfo_SC>(nullptr);
  }

  MSG_Ret_QuestInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_QuestInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_QuestInfo_SC& from);
  void MergeFrom(const MSG_Ret_QuestInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_QuestInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Ret_QuestInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExtinfoFieldNumber = 10,
    kIdFieldNumber = 1,
    kStateFieldNumber = 2,
    kScoreFieldNumber = 3,
    kCurvalueFieldNumber = 4,
    kMaxvalueFieldNumber = 5,
    kStarttimeFieldNumber = 6,
    kCurExtvalueFieldNumber = 7,
    kMaxExtvalueFieldNumber = 8,
    kLeftsecsFieldNumber = 9,
    kShowFieldNumber = 11,
  };
  // repeated .quest.UnorderQuestBranchInfo extinfo = 10;
  int extinfo_size() const;
  private:
  int _internal_extinfo_size() const;
  public:
  void clear_extinfo();
  ::quest::UnorderQuestBranchInfo* mutable_extinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::UnorderQuestBranchInfo >*
      mutable_extinfo();
  private:
  const ::quest::UnorderQuestBranchInfo& _internal_extinfo(int index) const;
  ::quest::UnorderQuestBranchInfo* _internal_add_extinfo();
  public:
  const ::quest::UnorderQuestBranchInfo& extinfo(int index) const;
  ::quest::UnorderQuestBranchInfo* add_extinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::UnorderQuestBranchInfo >&
      extinfo() const;

  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 state = 2;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 score = 3;
  bool has_score() const;
  private:
  bool _internal_has_score() const;
  public:
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 curvalue = 4;
  bool has_curvalue() const;
  private:
  bool _internal_has_curvalue() const;
  public:
  void clear_curvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 curvalue() const;
  void set_curvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curvalue() const;
  void _internal_set_curvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxvalue = 5;
  bool has_maxvalue() const;
  private:
  bool _internal_has_maxvalue() const;
  public:
  void clear_maxvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxvalue() const;
  void set_maxvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxvalue() const;
  void _internal_set_maxvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 starttime = 6;
  bool has_starttime() const;
  private:
  bool _internal_has_starttime() const;
  public:
  void clear_starttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 starttime() const;
  void set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_starttime() const;
  void _internal_set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cur_extvalue = 7;
  bool has_cur_extvalue() const;
  private:
  bool _internal_has_cur_extvalue() const;
  public:
  void clear_cur_extvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_extvalue() const;
  void set_cur_extvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cur_extvalue() const;
  void _internal_set_cur_extvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 max_extvalue = 8;
  bool has_max_extvalue() const;
  private:
  bool _internal_has_max_extvalue() const;
  public:
  void clear_max_extvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_extvalue() const;
  void set_max_extvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_extvalue() const;
  void _internal_set_max_extvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 leftsecs = 9;
  bool has_leftsecs() const;
  private:
  bool _internal_has_leftsecs() const;
  public:
  void clear_leftsecs();
  ::PROTOBUF_NAMESPACE_ID::int32 leftsecs() const;
  void set_leftsecs(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_leftsecs() const;
  void _internal_set_leftsecs(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool show = 11;
  bool has_show() const;
  private:
  bool _internal_has_show() const;
  public:
  void clear_show();
  bool show() const;
  void set_show(bool value);
  private:
  bool _internal_show() const;
  void _internal_set_show(bool value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Ret_QuestInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::UnorderQuestBranchInfo > extinfo_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 score_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curvalue_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxvalue_;
  ::PROTOBUF_NAMESPACE_ID::uint32 starttime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_extvalue_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_extvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 leftsecs_;
  bool show_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqExecuteQuest_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_ReqExecuteQuest_CS) */ {
 public:
  MSG_ReqExecuteQuest_CS();
  virtual ~MSG_ReqExecuteQuest_CS();

  MSG_ReqExecuteQuest_CS(const MSG_ReqExecuteQuest_CS& from);
  MSG_ReqExecuteQuest_CS(MSG_ReqExecuteQuest_CS&& from) noexcept
    : MSG_ReqExecuteQuest_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqExecuteQuest_CS& operator=(const MSG_ReqExecuteQuest_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqExecuteQuest_CS& operator=(MSG_ReqExecuteQuest_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqExecuteQuest_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqExecuteQuest_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqExecuteQuest_CS*>(
               &_MSG_ReqExecuteQuest_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_ReqExecuteQuest_CS& a, MSG_ReqExecuteQuest_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqExecuteQuest_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqExecuteQuest_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqExecuteQuest_CS>(nullptr);
  }

  MSG_ReqExecuteQuest_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqExecuteQuest_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqExecuteQuest_CS& from);
  void MergeFrom(const MSG_ReqExecuteQuest_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqExecuteQuest_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_ReqExecuteQuest_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetFieldNumber = 2,
    kIdFieldNumber = 1,
    kOffsetFieldNumber = 3,
    kChartargetFieldNumber = 5,
    kQuestdesccrcFieldNumber = 4,
  };
  // optional string target = 2;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  const std::string& target() const;
  void set_target(const std::string& value);
  void set_target(std::string&& value);
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  std::string* mutable_target();
  std::string* release_target();
  void set_allocated_target(std::string* target);
  private:
  const std::string& _internal_target() const;
  void _internal_set_target(const std::string& value);
  std::string* _internal_mutable_target();
  public:

  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 offset = 3;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 chartarget = 5;
  bool has_chartarget() const;
  private:
  bool _internal_has_chartarget() const;
  public:
  void clear_chartarget();
  ::PROTOBUF_NAMESPACE_ID::uint64 chartarget() const;
  void set_chartarget(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_chartarget() const;
  void _internal_set_chartarget(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 questdesccrc = 4;
  bool has_questdesccrc() const;
  private:
  bool _internal_has_questdesccrc() const;
  public:
  void clear_questdesccrc();
  ::PROTOBUF_NAMESPACE_ID::uint32 questdesccrc() const;
  void set_questdesccrc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questdesccrc() const;
  void _internal_set_questdesccrc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_ReqExecuteQuest_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr target_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  ::PROTOBUF_NAMESPACE_ID::uint64 chartarget_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questdesccrc_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqValidQuests_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_ReqValidQuests_CS) */ {
 public:
  MSG_ReqValidQuests_CS();
  virtual ~MSG_ReqValidQuests_CS();

  MSG_ReqValidQuests_CS(const MSG_ReqValidQuests_CS& from);
  MSG_ReqValidQuests_CS(MSG_ReqValidQuests_CS&& from) noexcept
    : MSG_ReqValidQuests_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqValidQuests_CS& operator=(const MSG_ReqValidQuests_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqValidQuests_CS& operator=(MSG_ReqValidQuests_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqValidQuests_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqValidQuests_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqValidQuests_CS*>(
               &_MSG_ReqValidQuests_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_ReqValidQuests_CS& a, MSG_ReqValidQuests_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqValidQuests_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqValidQuests_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqValidQuests_CS>(nullptr);
  }

  MSG_ReqValidQuests_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqValidQuests_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqValidQuests_CS& from);
  void MergeFrom(const MSG_ReqValidQuests_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqValidQuests_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_ReqValidQuests_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:quest.MSG_ReqValidQuests_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetValidQuests_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_RetValidQuests_SC) */ {
 public:
  MSG_RetValidQuests_SC();
  virtual ~MSG_RetValidQuests_SC();

  MSG_RetValidQuests_SC(const MSG_RetValidQuests_SC& from);
  MSG_RetValidQuests_SC(MSG_RetValidQuests_SC&& from) noexcept
    : MSG_RetValidQuests_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetValidQuests_SC& operator=(const MSG_RetValidQuests_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetValidQuests_SC& operator=(MSG_RetValidQuests_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetValidQuests_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetValidQuests_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetValidQuests_SC*>(
               &_MSG_RetValidQuests_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MSG_RetValidQuests_SC& a, MSG_RetValidQuests_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetValidQuests_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetValidQuests_SC* New() const final {
    return CreateMaybeMessage<MSG_RetValidQuests_SC>(nullptr);
  }

  MSG_RetValidQuests_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetValidQuests_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetValidQuests_SC& from);
  void MergeFrom(const MSG_RetValidQuests_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetValidQuests_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_RetValidQuests_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnequestFieldNumber = 1,
  };
  // repeated .quest.npcValidQuest onequest = 1;
  int onequest_size() const;
  private:
  int _internal_onequest_size() const;
  public:
  void clear_onequest();
  ::quest::npcValidQuest* mutable_onequest(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcValidQuest >*
      mutable_onequest();
  private:
  const ::quest::npcValidQuest& _internal_onequest(int index) const;
  ::quest::npcValidQuest* _internal_add_onequest();
  public:
  const ::quest::npcValidQuest& onequest(int index) const;
  ::quest::npcValidQuest* add_onequest();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcValidQuest >&
      onequest() const;

  // @@protoc_insertion_point(class_scope:quest.MSG_RetValidQuests_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcValidQuest > onequest_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqRetQuestState_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_ReqRetQuestState_CSC) */ {
 public:
  MSG_ReqRetQuestState_CSC();
  virtual ~MSG_ReqRetQuestState_CSC();

  MSG_ReqRetQuestState_CSC(const MSG_ReqRetQuestState_CSC& from);
  MSG_ReqRetQuestState_CSC(MSG_ReqRetQuestState_CSC&& from) noexcept
    : MSG_ReqRetQuestState_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_ReqRetQuestState_CSC& operator=(const MSG_ReqRetQuestState_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqRetQuestState_CSC& operator=(MSG_ReqRetQuestState_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqRetQuestState_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqRetQuestState_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqRetQuestState_CSC*>(
               &_MSG_ReqRetQuestState_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_ReqRetQuestState_CSC& a, MSG_ReqRetQuestState_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqRetQuestState_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqRetQuestState_CSC* New() const final {
    return CreateMaybeMessage<MSG_ReqRetQuestState_CSC>(nullptr);
  }

  MSG_ReqRetQuestState_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqRetQuestState_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqRetQuestState_CSC& from);
  void MergeFrom(const MSG_ReqRetQuestState_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqRetQuestState_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_ReqRetQuestState_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 state = 2;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_ReqRetQuestState_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqAbandonQuest_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_ReqAbandonQuest_CS) */ {
 public:
  MSG_ReqAbandonQuest_CS();
  virtual ~MSG_ReqAbandonQuest_CS();

  MSG_ReqAbandonQuest_CS(const MSG_ReqAbandonQuest_CS& from);
  MSG_ReqAbandonQuest_CS(MSG_ReqAbandonQuest_CS&& from) noexcept
    : MSG_ReqAbandonQuest_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqAbandonQuest_CS& operator=(const MSG_ReqAbandonQuest_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqAbandonQuest_CS& operator=(MSG_ReqAbandonQuest_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqAbandonQuest_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqAbandonQuest_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqAbandonQuest_CS*>(
               &_MSG_ReqAbandonQuest_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_ReqAbandonQuest_CS& a, MSG_ReqAbandonQuest_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqAbandonQuest_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqAbandonQuest_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqAbandonQuest_CS>(nullptr);
  }

  MSG_ReqAbandonQuest_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqAbandonQuest_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqAbandonQuest_CS& from);
  void MergeFrom(const MSG_ReqAbandonQuest_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqAbandonQuest_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_ReqAbandonQuest_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_ReqAbandonQuest_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetAbandonQuest_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_RetAbandonQuest_SC) */ {
 public:
  MSG_RetAbandonQuest_SC();
  virtual ~MSG_RetAbandonQuest_SC();

  MSG_RetAbandonQuest_SC(const MSG_RetAbandonQuest_SC& from);
  MSG_RetAbandonQuest_SC(MSG_RetAbandonQuest_SC&& from) noexcept
    : MSG_RetAbandonQuest_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetAbandonQuest_SC& operator=(const MSG_RetAbandonQuest_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetAbandonQuest_SC& operator=(MSG_RetAbandonQuest_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetAbandonQuest_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetAbandonQuest_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetAbandonQuest_SC*>(
               &_MSG_RetAbandonQuest_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_RetAbandonQuest_SC& a, MSG_RetAbandonQuest_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetAbandonQuest_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetAbandonQuest_SC* New() const final {
    return CreateMaybeMessage<MSG_RetAbandonQuest_SC>(nullptr);
  }

  MSG_RetAbandonQuest_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetAbandonQuest_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetAbandonQuest_SC& from);
  void MergeFrom(const MSG_RetAbandonQuest_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetAbandonQuest_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_RetAbandonQuest_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_RetAbandonQuest_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class QuestStateInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.QuestStateInfo) */ {
 public:
  QuestStateInfo();
  virtual ~QuestStateInfo();

  QuestStateInfo(const QuestStateInfo& from);
  QuestStateInfo(QuestStateInfo&& from) noexcept
    : QuestStateInfo() {
    *this = ::std::move(from);
  }

  inline QuestStateInfo& operator=(const QuestStateInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuestStateInfo& operator=(QuestStateInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QuestStateInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuestStateInfo* internal_default_instance() {
    return reinterpret_cast<const QuestStateInfo*>(
               &_QuestStateInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(QuestStateInfo& a, QuestStateInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(QuestStateInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QuestStateInfo* New() const final {
    return CreateMaybeMessage<QuestStateInfo>(nullptr);
  }

  QuestStateInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QuestStateInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QuestStateInfo& from);
  void MergeFrom(const QuestStateInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuestStateInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.QuestStateInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestidFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // optional uint32 questid = 1;
  bool has_questid() const;
  private:
  bool _internal_has_questid() const;
  public:
  void clear_questid();
  ::PROTOBUF_NAMESPACE_ID::uint32 questid() const;
  void set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questid() const;
  void _internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 state = 2;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.QuestStateInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class npcQuestList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.npcQuestList) */ {
 public:
  npcQuestList();
  virtual ~npcQuestList();

  npcQuestList(const npcQuestList& from);
  npcQuestList(npcQuestList&& from) noexcept
    : npcQuestList() {
    *this = ::std::move(from);
  }

  inline npcQuestList& operator=(const npcQuestList& from) {
    CopyFrom(from);
    return *this;
  }
  inline npcQuestList& operator=(npcQuestList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const npcQuestList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const npcQuestList* internal_default_instance() {
    return reinterpret_cast<const npcQuestList*>(
               &_npcQuestList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(npcQuestList& a, npcQuestList& b) {
    a.Swap(&b);
  }
  inline void Swap(npcQuestList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline npcQuestList* New() const final {
    return CreateMaybeMessage<npcQuestList>(nullptr);
  }

  npcQuestList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<npcQuestList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const npcQuestList& from);
  void MergeFrom(const npcQuestList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(npcQuestList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.npcQuestList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestsFieldNumber = 2,
    kNpcidFieldNumber = 1,
    kStateFieldNumber = 3,
  };
  // repeated .quest.QuestStateInfo quests = 2;
  int quests_size() const;
  private:
  int _internal_quests_size() const;
  public:
  void clear_quests();
  ::quest::QuestStateInfo* mutable_quests(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::QuestStateInfo >*
      mutable_quests();
  private:
  const ::quest::QuestStateInfo& _internal_quests(int index) const;
  ::quest::QuestStateInfo* _internal_add_quests();
  public:
  const ::quest::QuestStateInfo& quests(int index) const;
  ::quest::QuestStateInfo* add_quests();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::QuestStateInfo >&
      quests() const;

  // optional uint32 npcid = 1;
  bool has_npcid() const;
  private:
  bool _internal_has_npcid() const;
  public:
  void clear_npcid();
  ::PROTOBUF_NAMESPACE_ID::uint32 npcid() const;
  void set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_npcid() const;
  void _internal_set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 state = 3;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::int32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.npcQuestList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::QuestStateInfo > quests_;
  ::PROTOBUF_NAMESPACE_ID::uint32 npcid_;
  ::PROTOBUF_NAMESPACE_ID::int32 state_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqMapQuestInfo_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_ReqMapQuestInfo_CS) */ {
 public:
  MSG_ReqMapQuestInfo_CS();
  virtual ~MSG_ReqMapQuestInfo_CS();

  MSG_ReqMapQuestInfo_CS(const MSG_ReqMapQuestInfo_CS& from);
  MSG_ReqMapQuestInfo_CS(MSG_ReqMapQuestInfo_CS&& from) noexcept
    : MSG_ReqMapQuestInfo_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqMapQuestInfo_CS& operator=(const MSG_ReqMapQuestInfo_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqMapQuestInfo_CS& operator=(MSG_ReqMapQuestInfo_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqMapQuestInfo_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqMapQuestInfo_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqMapQuestInfo_CS*>(
               &_MSG_ReqMapQuestInfo_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MSG_ReqMapQuestInfo_CS& a, MSG_ReqMapQuestInfo_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqMapQuestInfo_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqMapQuestInfo_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqMapQuestInfo_CS>(nullptr);
  }

  MSG_ReqMapQuestInfo_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqMapQuestInfo_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqMapQuestInfo_CS& from);
  void MergeFrom(const MSG_ReqMapQuestInfo_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqMapQuestInfo_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_ReqMapQuestInfo_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:quest.MSG_ReqMapQuestInfo_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetMapQuestInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_RetMapQuestInfo_SC) */ {
 public:
  MSG_RetMapQuestInfo_SC();
  virtual ~MSG_RetMapQuestInfo_SC();

  MSG_RetMapQuestInfo_SC(const MSG_RetMapQuestInfo_SC& from);
  MSG_RetMapQuestInfo_SC(MSG_RetMapQuestInfo_SC&& from) noexcept
    : MSG_RetMapQuestInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetMapQuestInfo_SC& operator=(const MSG_RetMapQuestInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetMapQuestInfo_SC& operator=(MSG_RetMapQuestInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetMapQuestInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetMapQuestInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetMapQuestInfo_SC*>(
               &_MSG_RetMapQuestInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MSG_RetMapQuestInfo_SC& a, MSG_RetMapQuestInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetMapQuestInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetMapQuestInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_RetMapQuestInfo_SC>(nullptr);
  }

  MSG_RetMapQuestInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetMapQuestInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetMapQuestInfo_SC& from);
  void MergeFrom(const MSG_RetMapQuestInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetMapQuestInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_RetMapQuestInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpclistsFieldNumber = 1,
  };
  // repeated .quest.npcQuestList npclists = 1;
  int npclists_size() const;
  private:
  int _internal_npclists_size() const;
  public:
  void clear_npclists();
  ::quest::npcQuestList* mutable_npclists(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcQuestList >*
      mutable_npclists();
  private:
  const ::quest::npcQuestList& _internal_npclists(int index) const;
  ::quest::npcQuestList* _internal_add_npclists();
  public:
  const ::quest::npcQuestList& npclists(int index) const;
  ::quest::npcQuestList* add_npclists();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcQuestList >&
      npclists() const;

  // @@protoc_insertion_point(class_scope:quest.MSG_RetMapQuestInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcQuestList > npclists_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqCurActiveQuest_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_ReqCurActiveQuest_CS) */ {
 public:
  MSG_ReqCurActiveQuest_CS();
  virtual ~MSG_ReqCurActiveQuest_CS();

  MSG_ReqCurActiveQuest_CS(const MSG_ReqCurActiveQuest_CS& from);
  MSG_ReqCurActiveQuest_CS(MSG_ReqCurActiveQuest_CS&& from) noexcept
    : MSG_ReqCurActiveQuest_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqCurActiveQuest_CS& operator=(const MSG_ReqCurActiveQuest_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqCurActiveQuest_CS& operator=(MSG_ReqCurActiveQuest_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqCurActiveQuest_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqCurActiveQuest_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqCurActiveQuest_CS*>(
               &_MSG_ReqCurActiveQuest_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MSG_ReqCurActiveQuest_CS& a, MSG_ReqCurActiveQuest_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqCurActiveQuest_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqCurActiveQuest_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqCurActiveQuest_CS>(nullptr);
  }

  MSG_ReqCurActiveQuest_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqCurActiveQuest_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqCurActiveQuest_CS& from);
  void MergeFrom(const MSG_ReqCurActiveQuest_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqCurActiveQuest_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_ReqCurActiveQuest_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:quest.MSG_ReqCurActiveQuest_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class ringQuestInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.ringQuestInfo) */ {
 public:
  ringQuestInfo();
  virtual ~ringQuestInfo();

  ringQuestInfo(const ringQuestInfo& from);
  ringQuestInfo(ringQuestInfo&& from) noexcept
    : ringQuestInfo() {
    *this = ::std::move(from);
  }

  inline ringQuestInfo& operator=(const ringQuestInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ringQuestInfo& operator=(ringQuestInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ringQuestInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ringQuestInfo* internal_default_instance() {
    return reinterpret_cast<const ringQuestInfo*>(
               &_ringQuestInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ringQuestInfo& a, ringQuestInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ringQuestInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ringQuestInfo* New() const final {
    return CreateMaybeMessage<ringQuestInfo>(nullptr);
  }

  ringQuestInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ringQuestInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ringQuestInfo& from);
  void MergeFrom(const ringQuestInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ringQuestInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.ringQuestInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMainquestidFieldNumber = 1,
    kFinishringnumFieldNumber = 2,
  };
  // optional uint32 mainquestid = 1;
  bool has_mainquestid() const;
  private:
  bool _internal_has_mainquestid() const;
  public:
  void clear_mainquestid();
  ::PROTOBUF_NAMESPACE_ID::uint32 mainquestid() const;
  void set_mainquestid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mainquestid() const;
  void _internal_set_mainquestid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 finishringnum = 2;
  bool has_finishringnum() const;
  private:
  bool _internal_has_finishringnum() const;
  public:
  void clear_finishringnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 finishringnum() const;
  void set_finishringnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_finishringnum() const;
  void _internal_set_finishringnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.ringQuestInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mainquestid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 finishringnum_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetCurActiveQuest_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_RetCurActiveQuest_SC) */ {
 public:
  MSG_RetCurActiveQuest_SC();
  virtual ~MSG_RetCurActiveQuest_SC();

  MSG_RetCurActiveQuest_SC(const MSG_RetCurActiveQuest_SC& from);
  MSG_RetCurActiveQuest_SC(MSG_RetCurActiveQuest_SC&& from) noexcept
    : MSG_RetCurActiveQuest_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetCurActiveQuest_SC& operator=(const MSG_RetCurActiveQuest_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetCurActiveQuest_SC& operator=(MSG_RetCurActiveQuest_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetCurActiveQuest_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetCurActiveQuest_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetCurActiveQuest_SC*>(
               &_MSG_RetCurActiveQuest_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MSG_RetCurActiveQuest_SC& a, MSG_RetCurActiveQuest_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetCurActiveQuest_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetCurActiveQuest_SC* New() const final {
    return CreateMaybeMessage<MSG_RetCurActiveQuest_SC>(nullptr);
  }

  MSG_RetCurActiveQuest_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetCurActiveQuest_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetCurActiveQuest_SC& from);
  void MergeFrom(const MSG_RetCurActiveQuest_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetCurActiveQuest_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_RetCurActiveQuest_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
    kNewacceptFieldNumber = 2,
    kRinginfoFieldNumber = 4,
    kDayvarFieldNumber = 3,
  };
  // repeated .quest.MSG_Ret_QuestInfo_SC item = 1;
  int item_size() const;
  private:
  int _internal_item_size() const;
  public:
  void clear_item();
  ::quest::MSG_Ret_QuestInfo_SC* mutable_item(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::MSG_Ret_QuestInfo_SC >*
      mutable_item();
  private:
  const ::quest::MSG_Ret_QuestInfo_SC& _internal_item(int index) const;
  ::quest::MSG_Ret_QuestInfo_SC* _internal_add_item();
  public:
  const ::quest::MSG_Ret_QuestInfo_SC& item(int index) const;
  ::quest::MSG_Ret_QuestInfo_SC* add_item();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::MSG_Ret_QuestInfo_SC >&
      item() const;

  // repeated .quest.npcValidQuest newaccept = 2;
  int newaccept_size() const;
  private:
  int _internal_newaccept_size() const;
  public:
  void clear_newaccept();
  ::quest::npcValidQuest* mutable_newaccept(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcValidQuest >*
      mutable_newaccept();
  private:
  const ::quest::npcValidQuest& _internal_newaccept(int index) const;
  ::quest::npcValidQuest* _internal_add_newaccept();
  public:
  const ::quest::npcValidQuest& newaccept(int index) const;
  ::quest::npcValidQuest* add_newaccept();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcValidQuest >&
      newaccept() const;

  // repeated .quest.ringQuestInfo ringinfo = 4;
  int ringinfo_size() const;
  private:
  int _internal_ringinfo_size() const;
  public:
  void clear_ringinfo();
  ::quest::ringQuestInfo* mutable_ringinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::ringQuestInfo >*
      mutable_ringinfo();
  private:
  const ::quest::ringQuestInfo& _internal_ringinfo(int index) const;
  ::quest::ringQuestInfo* _internal_add_ringinfo();
  public:
  const ::quest::ringQuestInfo& ringinfo(int index) const;
  ::quest::ringQuestInfo* add_ringinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::ringQuestInfo >&
      ringinfo() const;

  // optional string dayvar = 3;
  bool has_dayvar() const;
  private:
  bool _internal_has_dayvar() const;
  public:
  void clear_dayvar();
  const std::string& dayvar() const;
  void set_dayvar(const std::string& value);
  void set_dayvar(std::string&& value);
  void set_dayvar(const char* value);
  void set_dayvar(const char* value, size_t size);
  std::string* mutable_dayvar();
  std::string* release_dayvar();
  void set_allocated_dayvar(std::string* dayvar);
  private:
  const std::string& _internal_dayvar() const;
  void _internal_set_dayvar(const std::string& value);
  std::string* _internal_mutable_dayvar();
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_RetCurActiveQuest_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::MSG_Ret_QuestInfo_SC > item_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcValidQuest > newaccept_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::ringQuestInfo > ringinfo_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dayvar_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqChangeMapFindPath_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_ReqChangeMapFindPath_CS) */ {
 public:
  MSG_ReqChangeMapFindPath_CS();
  virtual ~MSG_ReqChangeMapFindPath_CS();

  MSG_ReqChangeMapFindPath_CS(const MSG_ReqChangeMapFindPath_CS& from);
  MSG_ReqChangeMapFindPath_CS(MSG_ReqChangeMapFindPath_CS&& from) noexcept
    : MSG_ReqChangeMapFindPath_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqChangeMapFindPath_CS& operator=(const MSG_ReqChangeMapFindPath_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqChangeMapFindPath_CS& operator=(MSG_ReqChangeMapFindPath_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqChangeMapFindPath_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqChangeMapFindPath_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqChangeMapFindPath_CS*>(
               &_MSG_ReqChangeMapFindPath_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MSG_ReqChangeMapFindPath_CS& a, MSG_ReqChangeMapFindPath_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqChangeMapFindPath_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqChangeMapFindPath_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqChangeMapFindPath_CS>(nullptr);
  }

  MSG_ReqChangeMapFindPath_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqChangeMapFindPath_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqChangeMapFindPath_CS& from);
  void MergeFrom(const MSG_ReqChangeMapFindPath_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqChangeMapFindPath_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_ReqChangeMapFindPath_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathwayidFieldNumber = 1,
    kQuestidFieldNumber = 2,
    kDestxFieldNumber = 3,
    kDestyFieldNumber = 4,
  };
  // optional uint32 pathwayid = 1;
  bool has_pathwayid() const;
  private:
  bool _internal_has_pathwayid() const;
  public:
  void clear_pathwayid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pathwayid() const;
  void set_pathwayid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pathwayid() const;
  void _internal_set_pathwayid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 questid = 2;
  bool has_questid() const;
  private:
  bool _internal_has_questid() const;
  public:
  void clear_questid();
  ::PROTOBUF_NAMESPACE_ID::uint32 questid() const;
  void set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questid() const;
  void _internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 destx = 3;
  bool has_destx() const;
  private:
  bool _internal_has_destx() const;
  public:
  void clear_destx();
  ::PROTOBUF_NAMESPACE_ID::uint32 destx() const;
  void set_destx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_destx() const;
  void _internal_set_destx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 desty = 4;
  bool has_desty() const;
  private:
  bool _internal_has_desty() const;
  public:
  void clear_desty();
  ::PROTOBUF_NAMESPACE_ID::uint32 desty() const;
  void set_desty(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_desty() const;
  void _internal_set_desty(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_ReqChangeMapFindPath_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pathwayid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 destx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 desty_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetChangeMapFindPath_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_RetChangeMapFindPath_SC) */ {
 public:
  MSG_RetChangeMapFindPath_SC();
  virtual ~MSG_RetChangeMapFindPath_SC();

  MSG_RetChangeMapFindPath_SC(const MSG_RetChangeMapFindPath_SC& from);
  MSG_RetChangeMapFindPath_SC(MSG_RetChangeMapFindPath_SC&& from) noexcept
    : MSG_RetChangeMapFindPath_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetChangeMapFindPath_SC& operator=(const MSG_RetChangeMapFindPath_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetChangeMapFindPath_SC& operator=(MSG_RetChangeMapFindPath_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetChangeMapFindPath_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetChangeMapFindPath_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetChangeMapFindPath_SC*>(
               &_MSG_RetChangeMapFindPath_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(MSG_RetChangeMapFindPath_SC& a, MSG_RetChangeMapFindPath_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetChangeMapFindPath_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetChangeMapFindPath_SC* New() const final {
    return CreateMaybeMessage<MSG_RetChangeMapFindPath_SC>(nullptr);
  }

  MSG_RetChangeMapFindPath_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetChangeMapFindPath_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetChangeMapFindPath_SC& from);
  void MergeFrom(const MSG_RetChangeMapFindPath_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetChangeMapFindPath_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_RetChangeMapFindPath_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
  };
  // optional .quest.ChangeMapFindWayInfo info = 1;
  bool has_info() const;
  private:
  bool _internal_has_info() const;
  public:
  void clear_info();
  const ::quest::ChangeMapFindWayInfo& info() const;
  ::quest::ChangeMapFindWayInfo* release_info();
  ::quest::ChangeMapFindWayInfo* mutable_info();
  void set_allocated_info(::quest::ChangeMapFindWayInfo* info);
  private:
  const ::quest::ChangeMapFindWayInfo& _internal_info() const;
  ::quest::ChangeMapFindWayInfo* _internal_mutable_info();
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_RetChangeMapFindPath_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::quest::ChangeMapFindWayInfo* info_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class ChangeMapFindWayInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.ChangeMapFindWayInfo) */ {
 public:
  ChangeMapFindWayInfo();
  virtual ~ChangeMapFindWayInfo();

  ChangeMapFindWayInfo(const ChangeMapFindWayInfo& from);
  ChangeMapFindWayInfo(ChangeMapFindWayInfo&& from) noexcept
    : ChangeMapFindWayInfo() {
    *this = ::std::move(from);
  }

  inline ChangeMapFindWayInfo& operator=(const ChangeMapFindWayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChangeMapFindWayInfo& operator=(ChangeMapFindWayInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ChangeMapFindWayInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChangeMapFindWayInfo* internal_default_instance() {
    return reinterpret_cast<const ChangeMapFindWayInfo*>(
               &_ChangeMapFindWayInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(ChangeMapFindWayInfo& a, ChangeMapFindWayInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ChangeMapFindWayInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ChangeMapFindWayInfo* New() const final {
    return CreateMaybeMessage<ChangeMapFindWayInfo>(nullptr);
  }

  ChangeMapFindWayInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ChangeMapFindWayInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ChangeMapFindWayInfo& from);
  void MergeFrom(const ChangeMapFindWayInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChangeMapFindWayInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.ChangeMapFindWayInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrcodeFieldNumber = 1,
    kPathwayidFieldNumber = 2,
    kDestmapidFieldNumber = 3,
    kFindingwayFieldNumber = 4,
  };
  // optional uint32 errcode = 1;
  bool has_errcode() const;
  private:
  bool _internal_has_errcode() const;
  public:
  void clear_errcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode() const;
  void set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errcode() const;
  void _internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pathwayid = 2;
  bool has_pathwayid() const;
  private:
  bool _internal_has_pathwayid() const;
  public:
  void clear_pathwayid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pathwayid() const;
  void set_pathwayid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pathwayid() const;
  void _internal_set_pathwayid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 destmapid = 3;
  bool has_destmapid() const;
  private:
  bool _internal_has_destmapid() const;
  public:
  void clear_destmapid();
  ::PROTOBUF_NAMESPACE_ID::uint32 destmapid() const;
  void set_destmapid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_destmapid() const;
  void _internal_set_destmapid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool findingway = 4 [default = false];
  bool has_findingway() const;
  private:
  bool _internal_has_findingway() const;
  public:
  void clear_findingway();
  bool findingway() const;
  void set_findingway(bool value);
  private:
  bool _internal_findingway() const;
  void _internal_set_findingway(bool value);
  public:

  // @@protoc_insertion_point(class_scope:quest.ChangeMapFindWayInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pathwayid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 destmapid_;
  bool findingway_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetPlotTalkID_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_RetPlotTalkID_SC) */ {
 public:
  MSG_RetPlotTalkID_SC();
  virtual ~MSG_RetPlotTalkID_SC();

  MSG_RetPlotTalkID_SC(const MSG_RetPlotTalkID_SC& from);
  MSG_RetPlotTalkID_SC(MSG_RetPlotTalkID_SC&& from) noexcept
    : MSG_RetPlotTalkID_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetPlotTalkID_SC& operator=(const MSG_RetPlotTalkID_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetPlotTalkID_SC& operator=(MSG_RetPlotTalkID_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetPlotTalkID_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetPlotTalkID_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetPlotTalkID_SC*>(
               &_MSG_RetPlotTalkID_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(MSG_RetPlotTalkID_SC& a, MSG_RetPlotTalkID_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetPlotTalkID_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetPlotTalkID_SC* New() const final {
    return CreateMaybeMessage<MSG_RetPlotTalkID_SC>(nullptr);
  }

  MSG_RetPlotTalkID_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetPlotTalkID_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetPlotTalkID_SC& from);
  void MergeFrom(const MSG_RetPlotTalkID_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetPlotTalkID_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_RetPlotTalkID_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGroupidFieldNumber = 1,
  };
  // optional uint32 groupid = 1;
  bool has_groupid() const;
  private:
  bool _internal_has_groupid() const;
  public:
  void clear_groupid();
  ::PROTOBUF_NAMESPACE_ID::uint32 groupid() const;
  void set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_groupid() const;
  void _internal_set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_RetPlotTalkID_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 groupid_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_CartoonCompleteNotify_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_CartoonCompleteNotify_SC) */ {
 public:
  MSG_CartoonCompleteNotify_SC();
  virtual ~MSG_CartoonCompleteNotify_SC();

  MSG_CartoonCompleteNotify_SC(const MSG_CartoonCompleteNotify_SC& from);
  MSG_CartoonCompleteNotify_SC(MSG_CartoonCompleteNotify_SC&& from) noexcept
    : MSG_CartoonCompleteNotify_SC() {
    *this = ::std::move(from);
  }

  inline MSG_CartoonCompleteNotify_SC& operator=(const MSG_CartoonCompleteNotify_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_CartoonCompleteNotify_SC& operator=(MSG_CartoonCompleteNotify_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_CartoonCompleteNotify_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_CartoonCompleteNotify_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_CartoonCompleteNotify_SC*>(
               &_MSG_CartoonCompleteNotify_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(MSG_CartoonCompleteNotify_SC& a, MSG_CartoonCompleteNotify_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_CartoonCompleteNotify_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_CartoonCompleteNotify_SC* New() const final {
    return CreateMaybeMessage<MSG_CartoonCompleteNotify_SC>(nullptr);
  }

  MSG_CartoonCompleteNotify_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_CartoonCompleteNotify_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_CartoonCompleteNotify_SC& from);
  void MergeFrom(const MSG_CartoonCompleteNotify_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_CartoonCompleteNotify_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_CartoonCompleteNotify_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandFieldNumber = 2,
    kGroupidFieldNumber = 1,
    kDelayFieldNumber = 3,
  };
  // optional string command = 2;
  bool has_command() const;
  private:
  bool _internal_has_command() const;
  public:
  void clear_command();
  const std::string& command() const;
  void set_command(const std::string& value);
  void set_command(std::string&& value);
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  std::string* mutable_command();
  std::string* release_command();
  void set_allocated_command(std::string* command);
  private:
  const std::string& _internal_command() const;
  void _internal_set_command(const std::string& value);
  std::string* _internal_mutable_command();
  public:

  // optional uint32 groupid = 1;
  bool has_groupid() const;
  private:
  bool _internal_has_groupid() const;
  public:
  void clear_groupid();
  ::PROTOBUF_NAMESPACE_ID::uint32 groupid() const;
  void set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_groupid() const;
  void _internal_set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 delay = 3;
  bool has_delay() const;
  private:
  bool _internal_has_delay() const;
  public:
  void clear_delay();
  ::PROTOBUF_NAMESPACE_ID::uint32 delay() const;
  void set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_delay() const;
  void _internal_set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_CartoonCompleteNotify_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr command_;
  ::PROTOBUF_NAMESPACE_ID::uint32 groupid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 delay_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_PlayCartoonAndGoMap_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_PlayCartoonAndGoMap_SC) */ {
 public:
  MSG_PlayCartoonAndGoMap_SC();
  virtual ~MSG_PlayCartoonAndGoMap_SC();

  MSG_PlayCartoonAndGoMap_SC(const MSG_PlayCartoonAndGoMap_SC& from);
  MSG_PlayCartoonAndGoMap_SC(MSG_PlayCartoonAndGoMap_SC&& from) noexcept
    : MSG_PlayCartoonAndGoMap_SC() {
    *this = ::std::move(from);
  }

  inline MSG_PlayCartoonAndGoMap_SC& operator=(const MSG_PlayCartoonAndGoMap_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_PlayCartoonAndGoMap_SC& operator=(MSG_PlayCartoonAndGoMap_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_PlayCartoonAndGoMap_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_PlayCartoonAndGoMap_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_PlayCartoonAndGoMap_SC*>(
               &_MSG_PlayCartoonAndGoMap_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(MSG_PlayCartoonAndGoMap_SC& a, MSG_PlayCartoonAndGoMap_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_PlayCartoonAndGoMap_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_PlayCartoonAndGoMap_SC* New() const final {
    return CreateMaybeMessage<MSG_PlayCartoonAndGoMap_SC>(nullptr);
  }

  MSG_PlayCartoonAndGoMap_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_PlayCartoonAndGoMap_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_PlayCartoonAndGoMap_SC& from);
  void MergeFrom(const MSG_PlayCartoonAndGoMap_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_PlayCartoonAndGoMap_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_PlayCartoonAndGoMap_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandFieldNumber = 2,
    kGroupidFieldNumber = 1,
    kDelayFieldNumber = 3,
    kCallbackidFieldNumber = 4,
  };
  // optional string command = 2;
  bool has_command() const;
  private:
  bool _internal_has_command() const;
  public:
  void clear_command();
  const std::string& command() const;
  void set_command(const std::string& value);
  void set_command(std::string&& value);
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  std::string* mutable_command();
  std::string* release_command();
  void set_allocated_command(std::string* command);
  private:
  const std::string& _internal_command() const;
  void _internal_set_command(const std::string& value);
  std::string* _internal_mutable_command();
  public:

  // optional uint32 groupid = 1;
  bool has_groupid() const;
  private:
  bool _internal_has_groupid() const;
  public:
  void clear_groupid();
  ::PROTOBUF_NAMESPACE_ID::uint32 groupid() const;
  void set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_groupid() const;
  void _internal_set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 delay = 3;
  bool has_delay() const;
  private:
  bool _internal_has_delay() const;
  public:
  void clear_delay();
  ::PROTOBUF_NAMESPACE_ID::uint32 delay() const;
  void set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_delay() const;
  void _internal_set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 callbackid = 4;
  bool has_callbackid() const;
  private:
  bool _internal_has_callbackid() const;
  public:
  void clear_callbackid();
  ::PROTOBUF_NAMESPACE_ID::uint32 callbackid() const;
  void set_callbackid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_callbackid() const;
  void _internal_set_callbackid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_PlayCartoonAndGoMap_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr command_;
  ::PROTOBUF_NAMESPACE_ID::uint32 groupid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 delay_;
  ::PROTOBUF_NAMESPACE_ID::uint32 callbackid_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSubmitObjs_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_ReqSubmitObjs_CS) */ {
 public:
  MSG_ReqSubmitObjs_CS();
  virtual ~MSG_ReqSubmitObjs_CS();

  MSG_ReqSubmitObjs_CS(const MSG_ReqSubmitObjs_CS& from);
  MSG_ReqSubmitObjs_CS(MSG_ReqSubmitObjs_CS&& from) noexcept
    : MSG_ReqSubmitObjs_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSubmitObjs_CS& operator=(const MSG_ReqSubmitObjs_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSubmitObjs_CS& operator=(MSG_ReqSubmitObjs_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSubmitObjs_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSubmitObjs_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSubmitObjs_CS*>(
               &_MSG_ReqSubmitObjs_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(MSG_ReqSubmitObjs_CS& a, MSG_ReqSubmitObjs_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSubmitObjs_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSubmitObjs_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSubmitObjs_CS>(nullptr);
  }

  MSG_ReqSubmitObjs_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSubmitObjs_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSubmitObjs_CS& from);
  void MergeFrom(const MSG_ReqSubmitObjs_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSubmitObjs_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_ReqSubmitObjs_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
    kBagidFieldNumber = 2,
  };
  // repeated string thisid = 1;
  int thisid_size() const;
  private:
  int _internal_thisid_size() const;
  public:
  void clear_thisid();
  const std::string& thisid(int index) const;
  std::string* mutable_thisid(int index);
  void set_thisid(int index, const std::string& value);
  void set_thisid(int index, std::string&& value);
  void set_thisid(int index, const char* value);
  void set_thisid(int index, const char* value, size_t size);
  std::string* add_thisid();
  void add_thisid(const std::string& value);
  void add_thisid(std::string&& value);
  void add_thisid(const char* value);
  void add_thisid(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& thisid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_thisid();
  private:
  const std::string& _internal_thisid(int index) const;
  std::string* _internal_add_thisid();
  public:

  // optional uint32 bagid = 2;
  bool has_bagid() const;
  private:
  bool _internal_has_bagid() const;
  public:
  void clear_bagid();
  ::PROTOBUF_NAMESPACE_ID::uint32 bagid() const;
  void set_bagid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bagid() const;
  void _internal_set_bagid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_ReqSubmitObjs_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> thisid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bagid_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetSubmitObjs_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_RetSubmitObjs_SC) */ {
 public:
  MSG_RetSubmitObjs_SC();
  virtual ~MSG_RetSubmitObjs_SC();

  MSG_RetSubmitObjs_SC(const MSG_RetSubmitObjs_SC& from);
  MSG_RetSubmitObjs_SC(MSG_RetSubmitObjs_SC&& from) noexcept
    : MSG_RetSubmitObjs_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetSubmitObjs_SC& operator=(const MSG_RetSubmitObjs_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetSubmitObjs_SC& operator=(MSG_RetSubmitObjs_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetSubmitObjs_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetSubmitObjs_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetSubmitObjs_SC*>(
               &_MSG_RetSubmitObjs_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(MSG_RetSubmitObjs_SC& a, MSG_RetSubmitObjs_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetSubmitObjs_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetSubmitObjs_SC* New() const final {
    return CreateMaybeMessage<MSG_RetSubmitObjs_SC>(nullptr);
  }

  MSG_RetSubmitObjs_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetSubmitObjs_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetSubmitObjs_SC& from);
  void MergeFrom(const MSG_RetSubmitObjs_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetSubmitObjs_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_RetSubmitObjs_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_RetSubmitObjs_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class RingQuestRingCount :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.RingQuestRingCount) */ {
 public:
  RingQuestRingCount();
  virtual ~RingQuestRingCount();

  RingQuestRingCount(const RingQuestRingCount& from);
  RingQuestRingCount(RingQuestRingCount&& from) noexcept
    : RingQuestRingCount() {
    *this = ::std::move(from);
  }

  inline RingQuestRingCount& operator=(const RingQuestRingCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline RingQuestRingCount& operator=(RingQuestRingCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RingQuestRingCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RingQuestRingCount* internal_default_instance() {
    return reinterpret_cast<const RingQuestRingCount*>(
               &_RingQuestRingCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(RingQuestRingCount& a, RingQuestRingCount& b) {
    a.Swap(&b);
  }
  inline void Swap(RingQuestRingCount* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RingQuestRingCount* New() const final {
    return CreateMaybeMessage<RingQuestRingCount>(nullptr);
  }

  RingQuestRingCount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RingQuestRingCount>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RingQuestRingCount& from);
  void MergeFrom(const RingQuestRingCount& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RingQuestRingCount* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.RingQuestRingCount";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuesttypeFieldNumber = 1,
    kRingCountFieldNumber = 2,
  };
  // optional uint32 questtype = 1;
  bool has_questtype() const;
  private:
  bool _internal_has_questtype() const;
  public:
  void clear_questtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 questtype() const;
  void set_questtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questtype() const;
  void _internal_set_questtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ring_count = 2;
  bool has_ring_count() const;
  private:
  bool _internal_has_ring_count() const;
  public:
  void clear_ring_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 ring_count() const;
  void set_ring_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ring_count() const;
  void _internal_set_ring_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.RingQuestRingCount)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ring_count_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetRingQuestRingCount_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_RetRingQuestRingCount_SC) */ {
 public:
  MSG_RetRingQuestRingCount_SC();
  virtual ~MSG_RetRingQuestRingCount_SC();

  MSG_RetRingQuestRingCount_SC(const MSG_RetRingQuestRingCount_SC& from);
  MSG_RetRingQuestRingCount_SC(MSG_RetRingQuestRingCount_SC&& from) noexcept
    : MSG_RetRingQuestRingCount_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetRingQuestRingCount_SC& operator=(const MSG_RetRingQuestRingCount_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetRingQuestRingCount_SC& operator=(MSG_RetRingQuestRingCount_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetRingQuestRingCount_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetRingQuestRingCount_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetRingQuestRingCount_SC*>(
               &_MSG_RetRingQuestRingCount_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(MSG_RetRingQuestRingCount_SC& a, MSG_RetRingQuestRingCount_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetRingQuestRingCount_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetRingQuestRingCount_SC* New() const final {
    return CreateMaybeMessage<MSG_RetRingQuestRingCount_SC>(nullptr);
  }

  MSG_RetRingQuestRingCount_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetRingQuestRingCount_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetRingQuestRingCount_SC& from);
  void MergeFrom(const MSG_RetRingQuestRingCount_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetRingQuestRingCount_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_RetRingQuestRingCount_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRingcountFieldNumber = 1,
  };
  // repeated .quest.RingQuestRingCount ringcount = 1;
  int ringcount_size() const;
  private:
  int _internal_ringcount_size() const;
  public:
  void clear_ringcount();
  ::quest::RingQuestRingCount* mutable_ringcount(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::RingQuestRingCount >*
      mutable_ringcount();
  private:
  const ::quest::RingQuestRingCount& _internal_ringcount(int index) const;
  ::quest::RingQuestRingCount* _internal_add_ringcount();
  public:
  const ::quest::RingQuestRingCount& ringcount(int index) const;
  ::quest::RingQuestRingCount* add_ringcount();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::RingQuestRingCount >&
      ringcount() const;

  // @@protoc_insertion_point(class_scope:quest.MSG_RetRingQuestRingCount_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::RingQuestRingCount > ringcount_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_notifyRefreshQuestInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_notifyRefreshQuestInfo_SC) */ {
 public:
  MSG_notifyRefreshQuestInfo_SC();
  virtual ~MSG_notifyRefreshQuestInfo_SC();

  MSG_notifyRefreshQuestInfo_SC(const MSG_notifyRefreshQuestInfo_SC& from);
  MSG_notifyRefreshQuestInfo_SC(MSG_notifyRefreshQuestInfo_SC&& from) noexcept
    : MSG_notifyRefreshQuestInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_notifyRefreshQuestInfo_SC& operator=(const MSG_notifyRefreshQuestInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_notifyRefreshQuestInfo_SC& operator=(MSG_notifyRefreshQuestInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_notifyRefreshQuestInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_notifyRefreshQuestInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_notifyRefreshQuestInfo_SC*>(
               &_MSG_notifyRefreshQuestInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(MSG_notifyRefreshQuestInfo_SC& a, MSG_notifyRefreshQuestInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_notifyRefreshQuestInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_notifyRefreshQuestInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_notifyRefreshQuestInfo_SC>(nullptr);
  }

  MSG_notifyRefreshQuestInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_notifyRefreshQuestInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_notifyRefreshQuestInfo_SC& from);
  void MergeFrom(const MSG_notifyRefreshQuestInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_notifyRefreshQuestInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_notifyRefreshQuestInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
  };
  // repeated .quest.MSG_Ret_QuestInfo_SC item = 1;
  int item_size() const;
  private:
  int _internal_item_size() const;
  public:
  void clear_item();
  ::quest::MSG_Ret_QuestInfo_SC* mutable_item(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::MSG_Ret_QuestInfo_SC >*
      mutable_item();
  private:
  const ::quest::MSG_Ret_QuestInfo_SC& _internal_item(int index) const;
  ::quest::MSG_Ret_QuestInfo_SC* _internal_add_item();
  public:
  const ::quest::MSG_Ret_QuestInfo_SC& item(int index) const;
  ::quest::MSG_Ret_QuestInfo_SC* add_item();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::MSG_Ret_QuestInfo_SC >&
      item() const;

  // @@protoc_insertion_point(class_scope:quest.MSG_notifyRefreshQuestInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::MSG_Ret_QuestInfo_SC > item_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_PlayBellQTE_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_PlayBellQTE_SC) */ {
 public:
  MSG_PlayBellQTE_SC();
  virtual ~MSG_PlayBellQTE_SC();

  MSG_PlayBellQTE_SC(const MSG_PlayBellQTE_SC& from);
  MSG_PlayBellQTE_SC(MSG_PlayBellQTE_SC&& from) noexcept
    : MSG_PlayBellQTE_SC() {
    *this = ::std::move(from);
  }

  inline MSG_PlayBellQTE_SC& operator=(const MSG_PlayBellQTE_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_PlayBellQTE_SC& operator=(MSG_PlayBellQTE_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_PlayBellQTE_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_PlayBellQTE_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_PlayBellQTE_SC*>(
               &_MSG_PlayBellQTE_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(MSG_PlayBellQTE_SC& a, MSG_PlayBellQTE_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_PlayBellQTE_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_PlayBellQTE_SC* New() const final {
    return CreateMaybeMessage<MSG_PlayBellQTE_SC>(nullptr);
  }

  MSG_PlayBellQTE_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_PlayBellQTE_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_PlayBellQTE_SC& from);
  void MergeFrom(const MSG_PlayBellQTE_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_PlayBellQTE_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_PlayBellQTE_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQtelevelFieldNumber = 1,
  };
  // optional uint32 qtelevel = 1;
  bool has_qtelevel() const;
  private:
  bool _internal_has_qtelevel() const;
  public:
  void clear_qtelevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 qtelevel() const;
  void set_qtelevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_qtelevel() const;
  void _internal_set_qtelevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_PlayBellQTE_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 qtelevel_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_PlayBellQTEResult_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_PlayBellQTEResult_CS) */ {
 public:
  MSG_PlayBellQTEResult_CS();
  virtual ~MSG_PlayBellQTEResult_CS();

  MSG_PlayBellQTEResult_CS(const MSG_PlayBellQTEResult_CS& from);
  MSG_PlayBellQTEResult_CS(MSG_PlayBellQTEResult_CS&& from) noexcept
    : MSG_PlayBellQTEResult_CS() {
    *this = ::std::move(from);
  }

  inline MSG_PlayBellQTEResult_CS& operator=(const MSG_PlayBellQTEResult_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_PlayBellQTEResult_CS& operator=(MSG_PlayBellQTEResult_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_PlayBellQTEResult_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_PlayBellQTEResult_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_PlayBellQTEResult_CS*>(
               &_MSG_PlayBellQTEResult_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(MSG_PlayBellQTEResult_CS& a, MSG_PlayBellQTEResult_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_PlayBellQTEResult_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_PlayBellQTEResult_CS* New() const final {
    return CreateMaybeMessage<MSG_PlayBellQTEResult_CS>(nullptr);
  }

  MSG_PlayBellQTEResult_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_PlayBellQTEResult_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_PlayBellQTEResult_CS& from);
  void MergeFrom(const MSG_PlayBellQTEResult_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_PlayBellQTEResult_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_PlayBellQTEResult_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQtelevelFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // optional uint32 qtelevel = 1;
  bool has_qtelevel() const;
  private:
  bool _internal_has_qtelevel() const;
  public:
  void clear_qtelevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 qtelevel() const;
  void set_qtelevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_qtelevel() const;
  void _internal_set_qtelevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_PlayBellQTEResult_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 qtelevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_SetQuestNeedShow_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Req_SetQuestNeedShow_CS) */ {
 public:
  MSG_Req_SetQuestNeedShow_CS();
  virtual ~MSG_Req_SetQuestNeedShow_CS();

  MSG_Req_SetQuestNeedShow_CS(const MSG_Req_SetQuestNeedShow_CS& from);
  MSG_Req_SetQuestNeedShow_CS(MSG_Req_SetQuestNeedShow_CS&& from) noexcept
    : MSG_Req_SetQuestNeedShow_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_SetQuestNeedShow_CS& operator=(const MSG_Req_SetQuestNeedShow_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_SetQuestNeedShow_CS& operator=(MSG_Req_SetQuestNeedShow_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_SetQuestNeedShow_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_SetQuestNeedShow_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_SetQuestNeedShow_CS*>(
               &_MSG_Req_SetQuestNeedShow_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(MSG_Req_SetQuestNeedShow_CS& a, MSG_Req_SetQuestNeedShow_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_SetQuestNeedShow_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_SetQuestNeedShow_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_SetQuestNeedShow_CS>(nullptr);
  }

  MSG_Req_SetQuestNeedShow_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_SetQuestNeedShow_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_SetQuestNeedShow_CS& from);
  void MergeFrom(const MSG_Req_SetQuestNeedShow_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_SetQuestNeedShow_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Req_SetQuestNeedShow_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestidFieldNumber = 1,
    kShowFieldNumber = 2,
  };
  // optional uint32 questid = 1;
  bool has_questid() const;
  private:
  bool _internal_has_questid() const;
  public:
  void clear_questid();
  ::PROTOBUF_NAMESPACE_ID::uint32 questid() const;
  void set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questid() const;
  void _internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool show = 2;
  bool has_show() const;
  private:
  bool _internal_has_show() const;
  public:
  void clear_show();
  bool show() const;
  void set_show(bool value);
  private:
  bool _internal_show() const;
  void _internal_set_show(bool value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Req_SetQuestNeedShow_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questid_;
  bool show_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_SetQuestNeedShow_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Ret_SetQuestNeedShow_SC) */ {
 public:
  MSG_Ret_SetQuestNeedShow_SC();
  virtual ~MSG_Ret_SetQuestNeedShow_SC();

  MSG_Ret_SetQuestNeedShow_SC(const MSG_Ret_SetQuestNeedShow_SC& from);
  MSG_Ret_SetQuestNeedShow_SC(MSG_Ret_SetQuestNeedShow_SC&& from) noexcept
    : MSG_Ret_SetQuestNeedShow_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_SetQuestNeedShow_SC& operator=(const MSG_Ret_SetQuestNeedShow_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_SetQuestNeedShow_SC& operator=(MSG_Ret_SetQuestNeedShow_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_SetQuestNeedShow_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_SetQuestNeedShow_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_SetQuestNeedShow_SC*>(
               &_MSG_Ret_SetQuestNeedShow_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(MSG_Ret_SetQuestNeedShow_SC& a, MSG_Ret_SetQuestNeedShow_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_SetQuestNeedShow_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_SetQuestNeedShow_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_SetQuestNeedShow_SC>(nullptr);
  }

  MSG_Ret_SetQuestNeedShow_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_SetQuestNeedShow_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_SetQuestNeedShow_SC& from);
  void MergeFrom(const MSG_Ret_SetQuestNeedShow_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_SetQuestNeedShow_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Ret_SetQuestNeedShow_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestidFieldNumber = 1,
    kResultFieldNumber = 2,
    kCodeFieldNumber = 3,
  };
  // optional uint32 questid = 1;
  bool has_questid() const;
  private:
  bool _internal_has_questid() const;
  public:
  void clear_questid();
  ::PROTOBUF_NAMESPACE_ID::uint32 questid() const;
  void set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questid() const;
  void _internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // optional bool code = 3;
  bool has_code() const;
  private:
  bool _internal_has_code() const;
  public:
  void clear_code();
  bool code() const;
  void set_code(bool value);
  private:
  bool _internal_code() const;
  void _internal_set_code(bool value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Ret_SetQuestNeedShow_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questid_;
  bool result_;
  bool code_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_ShareQuestToTeamMember_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Req_ShareQuestToTeamMember_CS) */ {
 public:
  MSG_Req_ShareQuestToTeamMember_CS();
  virtual ~MSG_Req_ShareQuestToTeamMember_CS();

  MSG_Req_ShareQuestToTeamMember_CS(const MSG_Req_ShareQuestToTeamMember_CS& from);
  MSG_Req_ShareQuestToTeamMember_CS(MSG_Req_ShareQuestToTeamMember_CS&& from) noexcept
    : MSG_Req_ShareQuestToTeamMember_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_ShareQuestToTeamMember_CS& operator=(const MSG_Req_ShareQuestToTeamMember_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_ShareQuestToTeamMember_CS& operator=(MSG_Req_ShareQuestToTeamMember_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_ShareQuestToTeamMember_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_ShareQuestToTeamMember_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_ShareQuestToTeamMember_CS*>(
               &_MSG_Req_ShareQuestToTeamMember_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(MSG_Req_ShareQuestToTeamMember_CS& a, MSG_Req_ShareQuestToTeamMember_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_ShareQuestToTeamMember_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_ShareQuestToTeamMember_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_ShareQuestToTeamMember_CS>(nullptr);
  }

  MSG_Req_ShareQuestToTeamMember_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_ShareQuestToTeamMember_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_ShareQuestToTeamMember_CS& from);
  void MergeFrom(const MSG_Req_ShareQuestToTeamMember_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_ShareQuestToTeamMember_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Req_ShareQuestToTeamMember_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestidFieldNumber = 1,
  };
  // optional uint32 questid = 1;
  bool has_questid() const;
  private:
  bool _internal_has_questid() const;
  public:
  void clear_questid();
  ::PROTOBUF_NAMESPACE_ID::uint32 questid() const;
  void set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questid() const;
  void _internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Req_ShareQuestToTeamMember_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questid_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_NotifyShareQuest_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Ret_NotifyShareQuest_SC) */ {
 public:
  MSG_Ret_NotifyShareQuest_SC();
  virtual ~MSG_Ret_NotifyShareQuest_SC();

  MSG_Ret_NotifyShareQuest_SC(const MSG_Ret_NotifyShareQuest_SC& from);
  MSG_Ret_NotifyShareQuest_SC(MSG_Ret_NotifyShareQuest_SC&& from) noexcept
    : MSG_Ret_NotifyShareQuest_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_NotifyShareQuest_SC& operator=(const MSG_Ret_NotifyShareQuest_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_NotifyShareQuest_SC& operator=(MSG_Ret_NotifyShareQuest_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_NotifyShareQuest_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_NotifyShareQuest_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_NotifyShareQuest_SC*>(
               &_MSG_Ret_NotifyShareQuest_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(MSG_Ret_NotifyShareQuest_SC& a, MSG_Ret_NotifyShareQuest_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_NotifyShareQuest_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_NotifyShareQuest_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_NotifyShareQuest_SC>(nullptr);
  }

  MSG_Ret_NotifyShareQuest_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_NotifyShareQuest_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_NotifyShareQuest_SC& from);
  void MergeFrom(const MSG_Ret_NotifyShareQuest_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_NotifyShareQuest_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Ret_NotifyShareQuest_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kQuestidFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint32 questid = 2;
  bool has_questid() const;
  private:
  bool _internal_has_questid() const;
  public:
  void clear_questid();
  ::PROTOBUF_NAMESPACE_ID::uint32 questid() const;
  void set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questid() const;
  void _internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Ret_NotifyShareQuest_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questid_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_AnswerShareQuest_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Req_AnswerShareQuest_CS) */ {
 public:
  MSG_Req_AnswerShareQuest_CS();
  virtual ~MSG_Req_AnswerShareQuest_CS();

  MSG_Req_AnswerShareQuest_CS(const MSG_Req_AnswerShareQuest_CS& from);
  MSG_Req_AnswerShareQuest_CS(MSG_Req_AnswerShareQuest_CS&& from) noexcept
    : MSG_Req_AnswerShareQuest_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_AnswerShareQuest_CS& operator=(const MSG_Req_AnswerShareQuest_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_AnswerShareQuest_CS& operator=(MSG_Req_AnswerShareQuest_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_AnswerShareQuest_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_AnswerShareQuest_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_AnswerShareQuest_CS*>(
               &_MSG_Req_AnswerShareQuest_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(MSG_Req_AnswerShareQuest_CS& a, MSG_Req_AnswerShareQuest_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_AnswerShareQuest_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_AnswerShareQuest_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_AnswerShareQuest_CS>(nullptr);
  }

  MSG_Req_AnswerShareQuest_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_AnswerShareQuest_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_AnswerShareQuest_CS& from);
  void MergeFrom(const MSG_Req_AnswerShareQuest_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_AnswerShareQuest_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Req_AnswerShareQuest_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestidFieldNumber = 1,
    kAcceptFieldNumber = 2,
  };
  // optional uint32 questid = 1;
  bool has_questid() const;
  private:
  bool _internal_has_questid() const;
  public:
  void clear_questid();
  ::PROTOBUF_NAMESPACE_ID::uint32 questid() const;
  void set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questid() const;
  void _internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool accept = 2;
  bool has_accept() const;
  private:
  bool _internal_has_accept() const;
  public:
  void clear_accept();
  bool accept() const;
  void set_accept(bool value);
  private:
  bool _internal_accept() const;
  void _internal_set_accept(bool value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Req_AnswerShareQuest_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questid_;
  bool accept_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_AnswerShareQuest_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Ret_AnswerShareQuest_SC) */ {
 public:
  MSG_Ret_AnswerShareQuest_SC();
  virtual ~MSG_Ret_AnswerShareQuest_SC();

  MSG_Ret_AnswerShareQuest_SC(const MSG_Ret_AnswerShareQuest_SC& from);
  MSG_Ret_AnswerShareQuest_SC(MSG_Ret_AnswerShareQuest_SC&& from) noexcept
    : MSG_Ret_AnswerShareQuest_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_AnswerShareQuest_SC& operator=(const MSG_Ret_AnswerShareQuest_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_AnswerShareQuest_SC& operator=(MSG_Ret_AnswerShareQuest_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_AnswerShareQuest_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_AnswerShareQuest_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_AnswerShareQuest_SC*>(
               &_MSG_Ret_AnswerShareQuest_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(MSG_Ret_AnswerShareQuest_SC& a, MSG_Ret_AnswerShareQuest_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_AnswerShareQuest_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_AnswerShareQuest_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_AnswerShareQuest_SC>(nullptr);
  }

  MSG_Ret_AnswerShareQuest_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_AnswerShareQuest_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_AnswerShareQuest_SC& from);
  void MergeFrom(const MSG_Ret_AnswerShareQuest_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_AnswerShareQuest_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Ret_AnswerShareQuest_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
  };
  // optional uint32 code = 1;
  bool has_code() const;
  private:
  bool _internal_has_code() const;
  public:
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::uint32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Ret_AnswerShareQuest_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 code_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_NotifyCountDown_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Ret_NotifyCountDown_SC) */ {
 public:
  MSG_Ret_NotifyCountDown_SC();
  virtual ~MSG_Ret_NotifyCountDown_SC();

  MSG_Ret_NotifyCountDown_SC(const MSG_Ret_NotifyCountDown_SC& from);
  MSG_Ret_NotifyCountDown_SC(MSG_Ret_NotifyCountDown_SC&& from) noexcept
    : MSG_Ret_NotifyCountDown_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_NotifyCountDown_SC& operator=(const MSG_Ret_NotifyCountDown_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_NotifyCountDown_SC& operator=(MSG_Ret_NotifyCountDown_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_NotifyCountDown_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_NotifyCountDown_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_NotifyCountDown_SC*>(
               &_MSG_Ret_NotifyCountDown_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(MSG_Ret_NotifyCountDown_SC& a, MSG_Ret_NotifyCountDown_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_NotifyCountDown_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_NotifyCountDown_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_NotifyCountDown_SC>(nullptr);
  }

  MSG_Ret_NotifyCountDown_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_NotifyCountDown_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_NotifyCountDown_SC& from);
  void MergeFrom(const MSG_Ret_NotifyCountDown_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_NotifyCountDown_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Ret_NotifyCountDown_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBsetFieldNumber = 1,
    kDelayFieldNumber = 2,
    kSecondsFieldNumber = 3,
  };
  // optional bool bset = 1;
  bool has_bset() const;
  private:
  bool _internal_has_bset() const;
  public:
  void clear_bset();
  bool bset() const;
  void set_bset(bool value);
  private:
  bool _internal_bset() const;
  void _internal_set_bset(bool value);
  public:

  // optional uint32 delay = 2;
  bool has_delay() const;
  private:
  bool _internal_has_delay() const;
  public:
  void clear_delay();
  ::PROTOBUF_NAMESPACE_ID::uint32 delay() const;
  void set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_delay() const;
  void _internal_set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 seconds = 3;
  bool has_seconds() const;
  private:
  bool _internal_has_seconds() const;
  public:
  void clear_seconds();
  ::PROTOBUF_NAMESPACE_ID::uint32 seconds() const;
  void set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seconds() const;
  void _internal_set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Ret_NotifyCountDown_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool bset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 delay_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seconds_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_NotifyClientOptional_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_NotifyClientOptional_SC) */ {
 public:
  MSG_NotifyClientOptional_SC();
  virtual ~MSG_NotifyClientOptional_SC();

  MSG_NotifyClientOptional_SC(const MSG_NotifyClientOptional_SC& from);
  MSG_NotifyClientOptional_SC(MSG_NotifyClientOptional_SC&& from) noexcept
    : MSG_NotifyClientOptional_SC() {
    *this = ::std::move(from);
  }

  inline MSG_NotifyClientOptional_SC& operator=(const MSG_NotifyClientOptional_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_NotifyClientOptional_SC& operator=(MSG_NotifyClientOptional_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_NotifyClientOptional_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_NotifyClientOptional_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_NotifyClientOptional_SC*>(
               &_MSG_NotifyClientOptional_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(MSG_NotifyClientOptional_SC& a, MSG_NotifyClientOptional_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_NotifyClientOptional_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_NotifyClientOptional_SC* New() const final {
    return CreateMaybeMessage<MSG_NotifyClientOptional_SC>(nullptr);
  }

  MSG_NotifyClientOptional_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_NotifyClientOptional_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_NotifyClientOptional_SC& from);
  void MergeFrom(const MSG_NotifyClientOptional_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_NotifyClientOptional_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_NotifyClientOptional_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSettingFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // optional string setting = 2;
  bool has_setting() const;
  private:
  bool _internal_has_setting() const;
  public:
  void clear_setting();
  const std::string& setting() const;
  void set_setting(const std::string& value);
  void set_setting(std::string&& value);
  void set_setting(const char* value);
  void set_setting(const char* value, size_t size);
  std::string* mutable_setting();
  std::string* release_setting();
  void set_allocated_setting(std::string* setting);
  private:
  const std::string& _internal_setting() const;
  void _internal_set_setting(const std::string& value);
  std::string* _internal_mutable_setting();
  public:

  // optional uint32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_NotifyClientOptional_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr setting_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_notifyQuestStateEffect_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_notifyQuestStateEffect_SC) */ {
 public:
  MSG_notifyQuestStateEffect_SC();
  virtual ~MSG_notifyQuestStateEffect_SC();

  MSG_notifyQuestStateEffect_SC(const MSG_notifyQuestStateEffect_SC& from);
  MSG_notifyQuestStateEffect_SC(MSG_notifyQuestStateEffect_SC&& from) noexcept
    : MSG_notifyQuestStateEffect_SC() {
    *this = ::std::move(from);
  }

  inline MSG_notifyQuestStateEffect_SC& operator=(const MSG_notifyQuestStateEffect_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_notifyQuestStateEffect_SC& operator=(MSG_notifyQuestStateEffect_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_notifyQuestStateEffect_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_notifyQuestStateEffect_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_notifyQuestStateEffect_SC*>(
               &_MSG_notifyQuestStateEffect_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(MSG_notifyQuestStateEffect_SC& a, MSG_notifyQuestStateEffect_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_notifyQuestStateEffect_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_notifyQuestStateEffect_SC* New() const final {
    return CreateMaybeMessage<MSG_notifyQuestStateEffect_SC>(nullptr);
  }

  MSG_notifyQuestStateEffect_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_notifyQuestStateEffect_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_notifyQuestStateEffect_SC& from);
  void MergeFrom(const MSG_notifyQuestStateEffect_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_notifyQuestStateEffect_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_notifyQuestStateEffect_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestidFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // optional uint32 questid = 1;
  bool has_questid() const;
  private:
  bool _internal_has_questid() const;
  public:
  void clear_questid();
  ::PROTOBUF_NAMESPACE_ID::uint32 questid() const;
  void set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questid() const;
  void _internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 state = 2;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_notifyQuestStateEffect_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_CommitYQDData_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Req_CommitYQDData_CS) */ {
 public:
  MSG_Req_CommitYQDData_CS();
  virtual ~MSG_Req_CommitYQDData_CS();

  MSG_Req_CommitYQDData_CS(const MSG_Req_CommitYQDData_CS& from);
  MSG_Req_CommitYQDData_CS(MSG_Req_CommitYQDData_CS&& from) noexcept
    : MSG_Req_CommitYQDData_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_CommitYQDData_CS& operator=(const MSG_Req_CommitYQDData_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_CommitYQDData_CS& operator=(MSG_Req_CommitYQDData_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_CommitYQDData_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_CommitYQDData_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_CommitYQDData_CS*>(
               &_MSG_Req_CommitYQDData_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(MSG_Req_CommitYQDData_CS& a, MSG_Req_CommitYQDData_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_CommitYQDData_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_CommitYQDData_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_CommitYQDData_CS>(nullptr);
  }

  MSG_Req_CommitYQDData_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_CommitYQDData_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_CommitYQDData_CS& from);
  void MergeFrom(const MSG_Req_CommitYQDData_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_CommitYQDData_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Req_CommitYQDData_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStepFieldNumber = 1,
    kSuccessFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // optional uint32 step = 1;
  bool has_step() const;
  private:
  bool _internal_has_step() const;
  public:
  void clear_step();
  ::PROTOBUF_NAMESPACE_ID::uint32 step() const;
  void set_step(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_step() const;
  void _internal_set_step(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 success = 2;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  ::PROTOBUF_NAMESPACE_ID::uint32 success() const;
  void set_success(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_success() const;
  void _internal_set_success(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 type = 3;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Req_CommitYQDData_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 step_;
  ::PROTOBUF_NAMESPACE_ID::uint32 success_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  friend struct ::TableStruct_quest_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_PlayYQDRetry_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quest.MSG_Req_PlayYQDRetry_CS) */ {
 public:
  MSG_Req_PlayYQDRetry_CS();
  virtual ~MSG_Req_PlayYQDRetry_CS();

  MSG_Req_PlayYQDRetry_CS(const MSG_Req_PlayYQDRetry_CS& from);
  MSG_Req_PlayYQDRetry_CS(MSG_Req_PlayYQDRetry_CS&& from) noexcept
    : MSG_Req_PlayYQDRetry_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_PlayYQDRetry_CS& operator=(const MSG_Req_PlayYQDRetry_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_PlayYQDRetry_CS& operator=(MSG_Req_PlayYQDRetry_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_PlayYQDRetry_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_PlayYQDRetry_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_PlayYQDRetry_CS*>(
               &_MSG_Req_PlayYQDRetry_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(MSG_Req_PlayYQDRetry_CS& a, MSG_Req_PlayYQDRetry_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_PlayYQDRetry_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_PlayYQDRetry_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_PlayYQDRetry_CS>(nullptr);
  }

  MSG_Req_PlayYQDRetry_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_PlayYQDRetry_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_PlayYQDRetry_CS& from);
  void MergeFrom(const MSG_Req_PlayYQDRetry_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_PlayYQDRetry_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quest.MSG_Req_PlayYQDRetry_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quest_2eproto);
    return ::descriptor_table_quest_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
  };
  // optional uint32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quest.MSG_Req_PlayYQDRetry_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  friend struct ::TableStruct_quest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// questCRC

// optional uint32 quest_id = 1;
inline bool questCRC::_internal_has_quest_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool questCRC::has_quest_id() const {
  return _internal_has_quest_id();
}
inline void questCRC::clear_quest_id() {
  quest_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 questCRC::_internal_quest_id() const {
  return quest_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 questCRC::quest_id() const {
  // @@protoc_insertion_point(field_get:quest.questCRC.quest_id)
  return _internal_quest_id();
}
inline void questCRC::_internal_set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  quest_id_ = value;
}
inline void questCRC::set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quest_id(value);
  // @@protoc_insertion_point(field_set:quest.questCRC.quest_id)
}

// optional uint32 branch_id = 2;
inline bool questCRC::_internal_has_branch_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool questCRC::has_branch_id() const {
  return _internal_has_branch_id();
}
inline void questCRC::clear_branch_id() {
  branch_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 questCRC::_internal_branch_id() const {
  return branch_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 questCRC::branch_id() const {
  // @@protoc_insertion_point(field_get:quest.questCRC.branch_id)
  return _internal_branch_id();
}
inline void questCRC::_internal_set_branch_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  branch_id_ = value;
}
inline void questCRC::set_branch_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_branch_id(value);
  // @@protoc_insertion_point(field_set:quest.questCRC.branch_id)
}

// optional uint32 crc = 3;
inline bool questCRC::_internal_has_crc() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool questCRC::has_crc() const {
  return _internal_has_crc();
}
inline void questCRC::clear_crc() {
  crc_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 questCRC::_internal_crc() const {
  return crc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 questCRC::crc() const {
  // @@protoc_insertion_point(field_get:quest.questCRC.crc)
  return _internal_crc();
}
inline void questCRC::_internal_set_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  crc_ = value;
}
inline void questCRC::set_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_crc(value);
  // @@protoc_insertion_point(field_set:quest.questCRC.crc)
}

// -------------------------------------------------------------------

// validQuest

// optional uint32 quest_id = 1;
inline bool validQuest::_internal_has_quest_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool validQuest::has_quest_id() const {
  return _internal_has_quest_id();
}
inline void validQuest::clear_quest_id() {
  quest_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 validQuest::_internal_quest_id() const {
  return quest_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 validQuest::quest_id() const {
  // @@protoc_insertion_point(field_get:quest.validQuest.quest_id)
  return _internal_quest_id();
}
inline void validQuest::_internal_set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  quest_id_ = value;
}
inline void validQuest::set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quest_id(value);
  // @@protoc_insertion_point(field_set:quest.validQuest.quest_id)
}

// optional uint32 branch_id = 2;
inline bool validQuest::_internal_has_branch_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool validQuest::has_branch_id() const {
  return _internal_has_branch_id();
}
inline void validQuest::clear_branch_id() {
  branch_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 validQuest::_internal_branch_id() const {
  return branch_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 validQuest::branch_id() const {
  // @@protoc_insertion_point(field_get:quest.validQuest.branch_id)
  return _internal_branch_id();
}
inline void validQuest::_internal_set_branch_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  branch_id_ = value;
}
inline void validQuest::set_branch_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_branch_id(value);
  // @@protoc_insertion_point(field_set:quest.validQuest.branch_id)
}

// -------------------------------------------------------------------

// npcValidQuest

// optional uint32 npcid = 1;
inline bool npcValidQuest::_internal_has_npcid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool npcValidQuest::has_npcid() const {
  return _internal_has_npcid();
}
inline void npcValidQuest::clear_npcid() {
  npcid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npcValidQuest::_internal_npcid() const {
  return npcid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npcValidQuest::npcid() const {
  // @@protoc_insertion_point(field_get:quest.npcValidQuest.npcid)
  return _internal_npcid();
}
inline void npcValidQuest::_internal_set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  npcid_ = value;
}
inline void npcValidQuest::set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_npcid(value);
  // @@protoc_insertion_point(field_set:quest.npcValidQuest.npcid)
}

// optional uint32 questid = 2;
inline bool npcValidQuest::_internal_has_questid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool npcValidQuest::has_questid() const {
  return _internal_has_questid();
}
inline void npcValidQuest::clear_questid() {
  questid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npcValidQuest::_internal_questid() const {
  return questid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npcValidQuest::questid() const {
  // @@protoc_insertion_point(field_get:quest.npcValidQuest.questid)
  return _internal_questid();
}
inline void npcValidQuest::_internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  questid_ = value;
}
inline void npcValidQuest::set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questid(value);
  // @@protoc_insertion_point(field_set:quest.npcValidQuest.questid)
}

// -------------------------------------------------------------------

// MSG_Req_VisitNpcTrade_CS

// optional uint64 npc_temp_id = 1;
inline bool MSG_Req_VisitNpcTrade_CS::_internal_has_npc_temp_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_VisitNpcTrade_CS::has_npc_temp_id() const {
  return _internal_has_npc_temp_id();
}
inline void MSG_Req_VisitNpcTrade_CS::clear_npc_temp_id() {
  npc_temp_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_VisitNpcTrade_CS::_internal_npc_temp_id() const {
  return npc_temp_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_VisitNpcTrade_CS::npc_temp_id() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_VisitNpcTrade_CS.npc_temp_id)
  return _internal_npc_temp_id();
}
inline void MSG_Req_VisitNpcTrade_CS::_internal_set_npc_temp_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  npc_temp_id_ = value;
}
inline void MSG_Req_VisitNpcTrade_CS::set_npc_temp_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_npc_temp_id(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_VisitNpcTrade_CS.npc_temp_id)
}

// repeated .quest.questCRC allcrc = 2;
inline int MSG_Req_VisitNpcTrade_CS::_internal_allcrc_size() const {
  return allcrc_.size();
}
inline int MSG_Req_VisitNpcTrade_CS::allcrc_size() const {
  return _internal_allcrc_size();
}
inline void MSG_Req_VisitNpcTrade_CS::clear_allcrc() {
  allcrc_.Clear();
}
inline ::quest::questCRC* MSG_Req_VisitNpcTrade_CS::mutable_allcrc(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_Req_VisitNpcTrade_CS.allcrc)
  return allcrc_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::questCRC >*
MSG_Req_VisitNpcTrade_CS::mutable_allcrc() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_Req_VisitNpcTrade_CS.allcrc)
  return &allcrc_;
}
inline const ::quest::questCRC& MSG_Req_VisitNpcTrade_CS::_internal_allcrc(int index) const {
  return allcrc_.Get(index);
}
inline const ::quest::questCRC& MSG_Req_VisitNpcTrade_CS::allcrc(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_VisitNpcTrade_CS.allcrc)
  return _internal_allcrc(index);
}
inline ::quest::questCRC* MSG_Req_VisitNpcTrade_CS::_internal_add_allcrc() {
  return allcrc_.Add();
}
inline ::quest::questCRC* MSG_Req_VisitNpcTrade_CS::add_allcrc() {
  // @@protoc_insertion_point(field_add:quest.MSG_Req_VisitNpcTrade_CS.allcrc)
  return _internal_add_allcrc();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::questCRC >&
MSG_Req_VisitNpcTrade_CS::allcrc() const {
  // @@protoc_insertion_point(field_list:quest.MSG_Req_VisitNpcTrade_CS.allcrc)
  return allcrc_;
}

// -------------------------------------------------------------------

// MSG_Ret_VisitNpcTrade_SC

// optional uint32 action = 1;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_action() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_action() const {
  return _internal_has_action();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_action() {
  action_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::_internal_action() const {
  return action_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::action() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.action)
  return _internal_action();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_action(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  action_ = value;
}
inline void MSG_Ret_VisitNpcTrade_SC::set_action(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.action)
}

// optional uint32 retcode = 2;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::retcode() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.retcode)
  return _internal_retcode();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  retcode_ = value;
}
inline void MSG_Ret_VisitNpcTrade_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.retcode)
}

// optional uint32 flag = 3;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_flag() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_flag() const {
  return _internal_has_flag();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_flag() {
  flag_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::_internal_flag() const {
  return flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::flag() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.flag)
  return _internal_flag();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  flag_ = value;
}
inline void MSG_Ret_VisitNpcTrade_SC::set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.flag)
}

// optional uint64 npc_temp_id = 4;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_npc_temp_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_npc_temp_id() const {
  return _internal_has_npc_temp_id();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_npc_temp_id() {
  npc_temp_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_VisitNpcTrade_SC::_internal_npc_temp_id() const {
  return npc_temp_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_VisitNpcTrade_SC::npc_temp_id() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.npc_temp_id)
  return _internal_npc_temp_id();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_npc_temp_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  npc_temp_id_ = value;
}
inline void MSG_Ret_VisitNpcTrade_SC::set_npc_temp_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_npc_temp_id(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.npc_temp_id)
}

// optional uint32 type = 5;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_type() const {
  return _internal_has_type();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::type() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.type)
  return _internal_type();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  type_ = value;
}
inline void MSG_Ret_VisitNpcTrade_SC::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.type)
}

// optional uint32 conv_exchange = 6;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_conv_exchange() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_conv_exchange() const {
  return _internal_has_conv_exchange();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_conv_exchange() {
  conv_exchange_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::_internal_conv_exchange() const {
  return conv_exchange_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::conv_exchange() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.conv_exchange)
  return _internal_conv_exchange();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_conv_exchange(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  conv_exchange_ = value;
}
inline void MSG_Ret_VisitNpcTrade_SC::set_conv_exchange(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_conv_exchange(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.conv_exchange)
}

// optional uint32 show_type = 7;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_show_type() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_show_type() const {
  return _internal_has_show_type();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_show_type() {
  show_type_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::_internal_show_type() const {
  return show_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::show_type() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.show_type)
  return _internal_show_type();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_show_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  show_type_ = value;
}
inline void MSG_Ret_VisitNpcTrade_SC::set_show_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_show_type(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.show_type)
}

// optional uint32 crc_ret = 8;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_crc_ret() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_crc_ret() const {
  return _internal_has_crc_ret();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_crc_ret() {
  crc_ret_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::_internal_crc_ret() const {
  return crc_ret_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::crc_ret() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.crc_ret)
  return _internal_crc_ret();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_crc_ret(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  crc_ret_ = value;
}
inline void MSG_Ret_VisitNpcTrade_SC::set_crc_ret(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_crc_ret(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.crc_ret)
}

// optional string user_menu = 9;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_user_menu() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_user_menu() const {
  return _internal_has_user_menu();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_user_menu() {
  user_menu_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_VisitNpcTrade_SC::user_menu() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.user_menu)
  return _internal_user_menu();
}
inline void MSG_Ret_VisitNpcTrade_SC::set_user_menu(const std::string& value) {
  _internal_set_user_menu(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.user_menu)
}
inline std::string* MSG_Ret_VisitNpcTrade_SC::mutable_user_menu() {
  // @@protoc_insertion_point(field_mutable:quest.MSG_Ret_VisitNpcTrade_SC.user_menu)
  return _internal_mutable_user_menu();
}
inline const std::string& MSG_Ret_VisitNpcTrade_SC::_internal_user_menu() const {
  return user_menu_.GetNoArena();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_user_menu(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  user_menu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_VisitNpcTrade_SC::set_user_menu(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  user_menu_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quest.MSG_Ret_VisitNpcTrade_SC.user_menu)
}
inline void MSG_Ret_VisitNpcTrade_SC::set_user_menu(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  user_menu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quest.MSG_Ret_VisitNpcTrade_SC.user_menu)
}
inline void MSG_Ret_VisitNpcTrade_SC::set_user_menu(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  user_menu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quest.MSG_Ret_VisitNpcTrade_SC.user_menu)
}
inline std::string* MSG_Ret_VisitNpcTrade_SC::_internal_mutable_user_menu() {
  _has_bits_[0] |= 0x00000001u;
  return user_menu_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_VisitNpcTrade_SC::release_user_menu() {
  // @@protoc_insertion_point(field_release:quest.MSG_Ret_VisitNpcTrade_SC.user_menu)
  if (!_internal_has_user_menu()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return user_menu_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_VisitNpcTrade_SC::set_allocated_user_menu(std::string* user_menu) {
  if (user_menu != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  user_menu_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), user_menu);
  // @@protoc_insertion_point(field_set_allocated:quest.MSG_Ret_VisitNpcTrade_SC.user_menu)
}

// optional string npc_menu = 10;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_npc_menu() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_npc_menu() const {
  return _internal_has_npc_menu();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_npc_menu() {
  npc_menu_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MSG_Ret_VisitNpcTrade_SC::npc_menu() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.npc_menu)
  return _internal_npc_menu();
}
inline void MSG_Ret_VisitNpcTrade_SC::set_npc_menu(const std::string& value) {
  _internal_set_npc_menu(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.npc_menu)
}
inline std::string* MSG_Ret_VisitNpcTrade_SC::mutable_npc_menu() {
  // @@protoc_insertion_point(field_mutable:quest.MSG_Ret_VisitNpcTrade_SC.npc_menu)
  return _internal_mutable_npc_menu();
}
inline const std::string& MSG_Ret_VisitNpcTrade_SC::_internal_npc_menu() const {
  return npc_menu_.GetNoArena();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_npc_menu(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  npc_menu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_VisitNpcTrade_SC::set_npc_menu(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  npc_menu_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quest.MSG_Ret_VisitNpcTrade_SC.npc_menu)
}
inline void MSG_Ret_VisitNpcTrade_SC::set_npc_menu(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  npc_menu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quest.MSG_Ret_VisitNpcTrade_SC.npc_menu)
}
inline void MSG_Ret_VisitNpcTrade_SC::set_npc_menu(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  npc_menu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quest.MSG_Ret_VisitNpcTrade_SC.npc_menu)
}
inline std::string* MSG_Ret_VisitNpcTrade_SC::_internal_mutable_npc_menu() {
  _has_bits_[0] |= 0x00000002u;
  return npc_menu_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_VisitNpcTrade_SC::release_npc_menu() {
  // @@protoc_insertion_point(field_release:quest.MSG_Ret_VisitNpcTrade_SC.npc_menu)
  if (!_internal_has_npc_menu()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return npc_menu_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_VisitNpcTrade_SC::set_allocated_npc_menu(std::string* npc_menu) {
  if (npc_menu != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  npc_menu_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), npc_menu);
  // @@protoc_insertion_point(field_set_allocated:quest.MSG_Ret_VisitNpcTrade_SC.npc_menu)
}

// repeated .quest.questCRC allcrc = 11;
inline int MSG_Ret_VisitNpcTrade_SC::_internal_allcrc_size() const {
  return allcrc_.size();
}
inline int MSG_Ret_VisitNpcTrade_SC::allcrc_size() const {
  return _internal_allcrc_size();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_allcrc() {
  allcrc_.Clear();
}
inline ::quest::questCRC* MSG_Ret_VisitNpcTrade_SC::mutable_allcrc(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_Ret_VisitNpcTrade_SC.allcrc)
  return allcrc_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::questCRC >*
MSG_Ret_VisitNpcTrade_SC::mutable_allcrc() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_Ret_VisitNpcTrade_SC.allcrc)
  return &allcrc_;
}
inline const ::quest::questCRC& MSG_Ret_VisitNpcTrade_SC::_internal_allcrc(int index) const {
  return allcrc_.Get(index);
}
inline const ::quest::questCRC& MSG_Ret_VisitNpcTrade_SC::allcrc(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.allcrc)
  return _internal_allcrc(index);
}
inline ::quest::questCRC* MSG_Ret_VisitNpcTrade_SC::_internal_add_allcrc() {
  return allcrc_.Add();
}
inline ::quest::questCRC* MSG_Ret_VisitNpcTrade_SC::add_allcrc() {
  // @@protoc_insertion_point(field_add:quest.MSG_Ret_VisitNpcTrade_SC.allcrc)
  return _internal_add_allcrc();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::questCRC >&
MSG_Ret_VisitNpcTrade_SC::allcrc() const {
  // @@protoc_insertion_point(field_list:quest.MSG_Ret_VisitNpcTrade_SC.allcrc)
  return allcrc_;
}

// optional uint32 source = 12;
inline bool MSG_Ret_VisitNpcTrade_SC::_internal_has_source() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool MSG_Ret_VisitNpcTrade_SC::has_source() const {
  return _internal_has_source();
}
inline void MSG_Ret_VisitNpcTrade_SC::clear_source() {
  source_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::_internal_source() const {
  return source_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_VisitNpcTrade_SC::source() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_VisitNpcTrade_SC.source)
  return _internal_source();
}
inline void MSG_Ret_VisitNpcTrade_SC::_internal_set_source(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  source_ = value;
}
inline void MSG_Ret_VisitNpcTrade_SC::set_source(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_source(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_VisitNpcTrade_SC.source)
}

// -------------------------------------------------------------------

// MSG_Req_QuestInfo_CS

// optional uint32 id = 1;
inline bool MSG_Req_QuestInfo_CS::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_QuestInfo_CS::has_id() const {
  return _internal_has_id();
}
inline void MSG_Req_QuestInfo_CS::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_QuestInfo_CS::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_QuestInfo_CS::id() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_QuestInfo_CS.id)
  return _internal_id();
}
inline void MSG_Req_QuestInfo_CS::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void MSG_Req_QuestInfo_CS::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_QuestInfo_CS.id)
}

// -------------------------------------------------------------------

// UnorderQuestBranchInfo

// optional string degreevar = 1;
inline bool UnorderQuestBranchInfo::_internal_has_degreevar() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UnorderQuestBranchInfo::has_degreevar() const {
  return _internal_has_degreevar();
}
inline void UnorderQuestBranchInfo::clear_degreevar() {
  degreevar_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UnorderQuestBranchInfo::degreevar() const {
  // @@protoc_insertion_point(field_get:quest.UnorderQuestBranchInfo.degreevar)
  return _internal_degreevar();
}
inline void UnorderQuestBranchInfo::set_degreevar(const std::string& value) {
  _internal_set_degreevar(value);
  // @@protoc_insertion_point(field_set:quest.UnorderQuestBranchInfo.degreevar)
}
inline std::string* UnorderQuestBranchInfo::mutable_degreevar() {
  // @@protoc_insertion_point(field_mutable:quest.UnorderQuestBranchInfo.degreevar)
  return _internal_mutable_degreevar();
}
inline const std::string& UnorderQuestBranchInfo::_internal_degreevar() const {
  return degreevar_.GetNoArena();
}
inline void UnorderQuestBranchInfo::_internal_set_degreevar(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  degreevar_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UnorderQuestBranchInfo::set_degreevar(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  degreevar_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quest.UnorderQuestBranchInfo.degreevar)
}
inline void UnorderQuestBranchInfo::set_degreevar(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  degreevar_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quest.UnorderQuestBranchInfo.degreevar)
}
inline void UnorderQuestBranchInfo::set_degreevar(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  degreevar_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quest.UnorderQuestBranchInfo.degreevar)
}
inline std::string* UnorderQuestBranchInfo::_internal_mutable_degreevar() {
  _has_bits_[0] |= 0x00000001u;
  return degreevar_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UnorderQuestBranchInfo::release_degreevar() {
  // @@protoc_insertion_point(field_release:quest.UnorderQuestBranchInfo.degreevar)
  if (!_internal_has_degreevar()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return degreevar_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UnorderQuestBranchInfo::set_allocated_degreevar(std::string* degreevar) {
  if (degreevar != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  degreevar_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), degreevar);
  // @@protoc_insertion_point(field_set_allocated:quest.UnorderQuestBranchInfo.degreevar)
}

// optional uint32 curvalue = 2;
inline bool UnorderQuestBranchInfo::_internal_has_curvalue() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UnorderQuestBranchInfo::has_curvalue() const {
  return _internal_has_curvalue();
}
inline void UnorderQuestBranchInfo::clear_curvalue() {
  curvalue_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnorderQuestBranchInfo::_internal_curvalue() const {
  return curvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnorderQuestBranchInfo::curvalue() const {
  // @@protoc_insertion_point(field_get:quest.UnorderQuestBranchInfo.curvalue)
  return _internal_curvalue();
}
inline void UnorderQuestBranchInfo::_internal_set_curvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  curvalue_ = value;
}
inline void UnorderQuestBranchInfo::set_curvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curvalue(value);
  // @@protoc_insertion_point(field_set:quest.UnorderQuestBranchInfo.curvalue)
}

// optional uint32 maxvalue = 3;
inline bool UnorderQuestBranchInfo::_internal_has_maxvalue() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UnorderQuestBranchInfo::has_maxvalue() const {
  return _internal_has_maxvalue();
}
inline void UnorderQuestBranchInfo::clear_maxvalue() {
  maxvalue_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnorderQuestBranchInfo::_internal_maxvalue() const {
  return maxvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UnorderQuestBranchInfo::maxvalue() const {
  // @@protoc_insertion_point(field_get:quest.UnorderQuestBranchInfo.maxvalue)
  return _internal_maxvalue();
}
inline void UnorderQuestBranchInfo::_internal_set_maxvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  maxvalue_ = value;
}
inline void UnorderQuestBranchInfo::set_maxvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxvalue(value);
  // @@protoc_insertion_point(field_set:quest.UnorderQuestBranchInfo.maxvalue)
}

// -------------------------------------------------------------------

// MSG_Ret_QuestInfo_SC

// optional uint32 id = 1;
inline bool MSG_Ret_QuestInfo_SC::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_QuestInfo_SC::has_id() const {
  return _internal_has_id();
}
inline void MSG_Ret_QuestInfo_SC::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::id() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.id)
  return _internal_id();
}
inline void MSG_Ret_QuestInfo_SC::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void MSG_Ret_QuestInfo_SC::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_QuestInfo_SC.id)
}

// optional uint32 state = 2;
inline bool MSG_Ret_QuestInfo_SC::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_QuestInfo_SC::has_state() const {
  return _internal_has_state();
}
inline void MSG_Ret_QuestInfo_SC::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::state() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.state)
  return _internal_state();
}
inline void MSG_Ret_QuestInfo_SC::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  state_ = value;
}
inline void MSG_Ret_QuestInfo_SC::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_QuestInfo_SC.state)
}

// optional uint32 score = 3;
inline bool MSG_Ret_QuestInfo_SC::_internal_has_score() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_QuestInfo_SC::has_score() const {
  return _internal_has_score();
}
inline void MSG_Ret_QuestInfo_SC::clear_score() {
  score_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::score() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.score)
  return _internal_score();
}
inline void MSG_Ret_QuestInfo_SC::_internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  score_ = value;
}
inline void MSG_Ret_QuestInfo_SC::set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_QuestInfo_SC.score)
}

// optional uint32 curvalue = 4;
inline bool MSG_Ret_QuestInfo_SC::_internal_has_curvalue() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_QuestInfo_SC::has_curvalue() const {
  return _internal_has_curvalue();
}
inline void MSG_Ret_QuestInfo_SC::clear_curvalue() {
  curvalue_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::_internal_curvalue() const {
  return curvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::curvalue() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.curvalue)
  return _internal_curvalue();
}
inline void MSG_Ret_QuestInfo_SC::_internal_set_curvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  curvalue_ = value;
}
inline void MSG_Ret_QuestInfo_SC::set_curvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curvalue(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_QuestInfo_SC.curvalue)
}

// optional uint32 maxvalue = 5;
inline bool MSG_Ret_QuestInfo_SC::_internal_has_maxvalue() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_QuestInfo_SC::has_maxvalue() const {
  return _internal_has_maxvalue();
}
inline void MSG_Ret_QuestInfo_SC::clear_maxvalue() {
  maxvalue_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::_internal_maxvalue() const {
  return maxvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::maxvalue() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.maxvalue)
  return _internal_maxvalue();
}
inline void MSG_Ret_QuestInfo_SC::_internal_set_maxvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  maxvalue_ = value;
}
inline void MSG_Ret_QuestInfo_SC::set_maxvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxvalue(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_QuestInfo_SC.maxvalue)
}

// optional uint32 starttime = 6;
inline bool MSG_Ret_QuestInfo_SC::_internal_has_starttime() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool MSG_Ret_QuestInfo_SC::has_starttime() const {
  return _internal_has_starttime();
}
inline void MSG_Ret_QuestInfo_SC::clear_starttime() {
  starttime_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::_internal_starttime() const {
  return starttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::starttime() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.starttime)
  return _internal_starttime();
}
inline void MSG_Ret_QuestInfo_SC::_internal_set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  starttime_ = value;
}
inline void MSG_Ret_QuestInfo_SC::set_starttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_starttime(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_QuestInfo_SC.starttime)
}

// optional uint32 cur_extvalue = 7;
inline bool MSG_Ret_QuestInfo_SC::_internal_has_cur_extvalue() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool MSG_Ret_QuestInfo_SC::has_cur_extvalue() const {
  return _internal_has_cur_extvalue();
}
inline void MSG_Ret_QuestInfo_SC::clear_cur_extvalue() {
  cur_extvalue_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::_internal_cur_extvalue() const {
  return cur_extvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::cur_extvalue() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.cur_extvalue)
  return _internal_cur_extvalue();
}
inline void MSG_Ret_QuestInfo_SC::_internal_set_cur_extvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  cur_extvalue_ = value;
}
inline void MSG_Ret_QuestInfo_SC::set_cur_extvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cur_extvalue(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_QuestInfo_SC.cur_extvalue)
}

// optional uint32 max_extvalue = 8;
inline bool MSG_Ret_QuestInfo_SC::_internal_has_max_extvalue() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool MSG_Ret_QuestInfo_SC::has_max_extvalue() const {
  return _internal_has_max_extvalue();
}
inline void MSG_Ret_QuestInfo_SC::clear_max_extvalue() {
  max_extvalue_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::_internal_max_extvalue() const {
  return max_extvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestInfo_SC::max_extvalue() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.max_extvalue)
  return _internal_max_extvalue();
}
inline void MSG_Ret_QuestInfo_SC::_internal_set_max_extvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  max_extvalue_ = value;
}
inline void MSG_Ret_QuestInfo_SC::set_max_extvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_extvalue(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_QuestInfo_SC.max_extvalue)
}

// optional int32 leftsecs = 9;
inline bool MSG_Ret_QuestInfo_SC::_internal_has_leftsecs() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool MSG_Ret_QuestInfo_SC::has_leftsecs() const {
  return _internal_has_leftsecs();
}
inline void MSG_Ret_QuestInfo_SC::clear_leftsecs() {
  leftsecs_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG_Ret_QuestInfo_SC::_internal_leftsecs() const {
  return leftsecs_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MSG_Ret_QuestInfo_SC::leftsecs() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.leftsecs)
  return _internal_leftsecs();
}
inline void MSG_Ret_QuestInfo_SC::_internal_set_leftsecs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  leftsecs_ = value;
}
inline void MSG_Ret_QuestInfo_SC::set_leftsecs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_leftsecs(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_QuestInfo_SC.leftsecs)
}

// repeated .quest.UnorderQuestBranchInfo extinfo = 10;
inline int MSG_Ret_QuestInfo_SC::_internal_extinfo_size() const {
  return extinfo_.size();
}
inline int MSG_Ret_QuestInfo_SC::extinfo_size() const {
  return _internal_extinfo_size();
}
inline void MSG_Ret_QuestInfo_SC::clear_extinfo() {
  extinfo_.Clear();
}
inline ::quest::UnorderQuestBranchInfo* MSG_Ret_QuestInfo_SC::mutable_extinfo(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_Ret_QuestInfo_SC.extinfo)
  return extinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::UnorderQuestBranchInfo >*
MSG_Ret_QuestInfo_SC::mutable_extinfo() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_Ret_QuestInfo_SC.extinfo)
  return &extinfo_;
}
inline const ::quest::UnorderQuestBranchInfo& MSG_Ret_QuestInfo_SC::_internal_extinfo(int index) const {
  return extinfo_.Get(index);
}
inline const ::quest::UnorderQuestBranchInfo& MSG_Ret_QuestInfo_SC::extinfo(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.extinfo)
  return _internal_extinfo(index);
}
inline ::quest::UnorderQuestBranchInfo* MSG_Ret_QuestInfo_SC::_internal_add_extinfo() {
  return extinfo_.Add();
}
inline ::quest::UnorderQuestBranchInfo* MSG_Ret_QuestInfo_SC::add_extinfo() {
  // @@protoc_insertion_point(field_add:quest.MSG_Ret_QuestInfo_SC.extinfo)
  return _internal_add_extinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::UnorderQuestBranchInfo >&
MSG_Ret_QuestInfo_SC::extinfo() const {
  // @@protoc_insertion_point(field_list:quest.MSG_Ret_QuestInfo_SC.extinfo)
  return extinfo_;
}

// optional bool show = 11;
inline bool MSG_Ret_QuestInfo_SC::_internal_has_show() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool MSG_Ret_QuestInfo_SC::has_show() const {
  return _internal_has_show();
}
inline void MSG_Ret_QuestInfo_SC::clear_show() {
  show_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool MSG_Ret_QuestInfo_SC::_internal_show() const {
  return show_;
}
inline bool MSG_Ret_QuestInfo_SC::show() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_QuestInfo_SC.show)
  return _internal_show();
}
inline void MSG_Ret_QuestInfo_SC::_internal_set_show(bool value) {
  _has_bits_[0] |= 0x00000200u;
  show_ = value;
}
inline void MSG_Ret_QuestInfo_SC::set_show(bool value) {
  _internal_set_show(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_QuestInfo_SC.show)
}

// -------------------------------------------------------------------

// MSG_ReqExecuteQuest_CS

// optional uint32 id = 1;
inline bool MSG_ReqExecuteQuest_CS::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqExecuteQuest_CS::has_id() const {
  return _internal_has_id();
}
inline void MSG_ReqExecuteQuest_CS::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqExecuteQuest_CS::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqExecuteQuest_CS::id() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqExecuteQuest_CS.id)
  return _internal_id();
}
inline void MSG_ReqExecuteQuest_CS::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void MSG_ReqExecuteQuest_CS::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqExecuteQuest_CS.id)
}

// optional string target = 2;
inline bool MSG_ReqExecuteQuest_CS::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqExecuteQuest_CS::has_target() const {
  return _internal_has_target();
}
inline void MSG_ReqExecuteQuest_CS::clear_target() {
  target_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqExecuteQuest_CS::target() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqExecuteQuest_CS.target)
  return _internal_target();
}
inline void MSG_ReqExecuteQuest_CS::set_target(const std::string& value) {
  _internal_set_target(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqExecuteQuest_CS.target)
}
inline std::string* MSG_ReqExecuteQuest_CS::mutable_target() {
  // @@protoc_insertion_point(field_mutable:quest.MSG_ReqExecuteQuest_CS.target)
  return _internal_mutable_target();
}
inline const std::string& MSG_ReqExecuteQuest_CS::_internal_target() const {
  return target_.GetNoArena();
}
inline void MSG_ReqExecuteQuest_CS::_internal_set_target(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  target_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqExecuteQuest_CS::set_target(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  target_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quest.MSG_ReqExecuteQuest_CS.target)
}
inline void MSG_ReqExecuteQuest_CS::set_target(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  target_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quest.MSG_ReqExecuteQuest_CS.target)
}
inline void MSG_ReqExecuteQuest_CS::set_target(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  target_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quest.MSG_ReqExecuteQuest_CS.target)
}
inline std::string* MSG_ReqExecuteQuest_CS::_internal_mutable_target() {
  _has_bits_[0] |= 0x00000001u;
  return target_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqExecuteQuest_CS::release_target() {
  // @@protoc_insertion_point(field_release:quest.MSG_ReqExecuteQuest_CS.target)
  if (!_internal_has_target()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return target_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqExecuteQuest_CS::set_allocated_target(std::string* target) {
  if (target != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  target_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:quest.MSG_ReqExecuteQuest_CS.target)
}

// optional uint32 offset = 3;
inline bool MSG_ReqExecuteQuest_CS::_internal_has_offset() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqExecuteQuest_CS::has_offset() const {
  return _internal_has_offset();
}
inline void MSG_ReqExecuteQuest_CS::clear_offset() {
  offset_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqExecuteQuest_CS::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqExecuteQuest_CS::offset() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqExecuteQuest_CS.offset)
  return _internal_offset();
}
inline void MSG_ReqExecuteQuest_CS::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  offset_ = value;
}
inline void MSG_ReqExecuteQuest_CS::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqExecuteQuest_CS.offset)
}

// optional uint32 questdesccrc = 4;
inline bool MSG_ReqExecuteQuest_CS::_internal_has_questdesccrc() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_ReqExecuteQuest_CS::has_questdesccrc() const {
  return _internal_has_questdesccrc();
}
inline void MSG_ReqExecuteQuest_CS::clear_questdesccrc() {
  questdesccrc_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqExecuteQuest_CS::_internal_questdesccrc() const {
  return questdesccrc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqExecuteQuest_CS::questdesccrc() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqExecuteQuest_CS.questdesccrc)
  return _internal_questdesccrc();
}
inline void MSG_ReqExecuteQuest_CS::_internal_set_questdesccrc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  questdesccrc_ = value;
}
inline void MSG_ReqExecuteQuest_CS::set_questdesccrc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questdesccrc(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqExecuteQuest_CS.questdesccrc)
}

// optional uint64 chartarget = 5;
inline bool MSG_ReqExecuteQuest_CS::_internal_has_chartarget() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqExecuteQuest_CS::has_chartarget() const {
  return _internal_has_chartarget();
}
inline void MSG_ReqExecuteQuest_CS::clear_chartarget() {
  chartarget_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_ReqExecuteQuest_CS::_internal_chartarget() const {
  return chartarget_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_ReqExecuteQuest_CS::chartarget() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqExecuteQuest_CS.chartarget)
  return _internal_chartarget();
}
inline void MSG_ReqExecuteQuest_CS::_internal_set_chartarget(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  chartarget_ = value;
}
inline void MSG_ReqExecuteQuest_CS::set_chartarget(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_chartarget(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqExecuteQuest_CS.chartarget)
}

// -------------------------------------------------------------------

// MSG_ReqValidQuests_CS

// -------------------------------------------------------------------

// MSG_RetValidQuests_SC

// repeated .quest.npcValidQuest onequest = 1;
inline int MSG_RetValidQuests_SC::_internal_onequest_size() const {
  return onequest_.size();
}
inline int MSG_RetValidQuests_SC::onequest_size() const {
  return _internal_onequest_size();
}
inline void MSG_RetValidQuests_SC::clear_onequest() {
  onequest_.Clear();
}
inline ::quest::npcValidQuest* MSG_RetValidQuests_SC::mutable_onequest(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_RetValidQuests_SC.onequest)
  return onequest_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcValidQuest >*
MSG_RetValidQuests_SC::mutable_onequest() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_RetValidQuests_SC.onequest)
  return &onequest_;
}
inline const ::quest::npcValidQuest& MSG_RetValidQuests_SC::_internal_onequest(int index) const {
  return onequest_.Get(index);
}
inline const ::quest::npcValidQuest& MSG_RetValidQuests_SC::onequest(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetValidQuests_SC.onequest)
  return _internal_onequest(index);
}
inline ::quest::npcValidQuest* MSG_RetValidQuests_SC::_internal_add_onequest() {
  return onequest_.Add();
}
inline ::quest::npcValidQuest* MSG_RetValidQuests_SC::add_onequest() {
  // @@protoc_insertion_point(field_add:quest.MSG_RetValidQuests_SC.onequest)
  return _internal_add_onequest();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcValidQuest >&
MSG_RetValidQuests_SC::onequest() const {
  // @@protoc_insertion_point(field_list:quest.MSG_RetValidQuests_SC.onequest)
  return onequest_;
}

// -------------------------------------------------------------------

// MSG_ReqRetQuestState_CSC

// optional uint32 id = 1;
inline bool MSG_ReqRetQuestState_CSC::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqRetQuestState_CSC::has_id() const {
  return _internal_has_id();
}
inline void MSG_ReqRetQuestState_CSC::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqRetQuestState_CSC::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqRetQuestState_CSC::id() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqRetQuestState_CSC.id)
  return _internal_id();
}
inline void MSG_ReqRetQuestState_CSC::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void MSG_ReqRetQuestState_CSC::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqRetQuestState_CSC.id)
}

// optional uint32 state = 2;
inline bool MSG_ReqRetQuestState_CSC::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqRetQuestState_CSC::has_state() const {
  return _internal_has_state();
}
inline void MSG_ReqRetQuestState_CSC::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqRetQuestState_CSC::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqRetQuestState_CSC::state() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqRetQuestState_CSC.state)
  return _internal_state();
}
inline void MSG_ReqRetQuestState_CSC::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  state_ = value;
}
inline void MSG_ReqRetQuestState_CSC::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqRetQuestState_CSC.state)
}

// -------------------------------------------------------------------

// MSG_ReqAbandonQuest_CS

// optional uint32 id = 1;
inline bool MSG_ReqAbandonQuest_CS::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqAbandonQuest_CS::has_id() const {
  return _internal_has_id();
}
inline void MSG_ReqAbandonQuest_CS::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqAbandonQuest_CS::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqAbandonQuest_CS::id() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqAbandonQuest_CS.id)
  return _internal_id();
}
inline void MSG_ReqAbandonQuest_CS::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void MSG_ReqAbandonQuest_CS::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqAbandonQuest_CS.id)
}

// -------------------------------------------------------------------

// MSG_RetAbandonQuest_SC

// optional uint32 id = 1;
inline bool MSG_RetAbandonQuest_SC::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetAbandonQuest_SC::has_id() const {
  return _internal_has_id();
}
inline void MSG_RetAbandonQuest_SC::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetAbandonQuest_SC::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetAbandonQuest_SC::id() const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetAbandonQuest_SC.id)
  return _internal_id();
}
inline void MSG_RetAbandonQuest_SC::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void MSG_RetAbandonQuest_SC::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:quest.MSG_RetAbandonQuest_SC.id)
}

// -------------------------------------------------------------------

// QuestStateInfo

// optional uint32 questid = 1;
inline bool QuestStateInfo::_internal_has_questid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool QuestStateInfo::has_questid() const {
  return _internal_has_questid();
}
inline void QuestStateInfo::clear_questid() {
  questid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QuestStateInfo::_internal_questid() const {
  return questid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QuestStateInfo::questid() const {
  // @@protoc_insertion_point(field_get:quest.QuestStateInfo.questid)
  return _internal_questid();
}
inline void QuestStateInfo::_internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  questid_ = value;
}
inline void QuestStateInfo::set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questid(value);
  // @@protoc_insertion_point(field_set:quest.QuestStateInfo.questid)
}

// optional uint32 state = 2;
inline bool QuestStateInfo::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool QuestStateInfo::has_state() const {
  return _internal_has_state();
}
inline void QuestStateInfo::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QuestStateInfo::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QuestStateInfo::state() const {
  // @@protoc_insertion_point(field_get:quest.QuestStateInfo.state)
  return _internal_state();
}
inline void QuestStateInfo::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  state_ = value;
}
inline void QuestStateInfo::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:quest.QuestStateInfo.state)
}

// -------------------------------------------------------------------

// npcQuestList

// optional uint32 npcid = 1;
inline bool npcQuestList::_internal_has_npcid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool npcQuestList::has_npcid() const {
  return _internal_has_npcid();
}
inline void npcQuestList::clear_npcid() {
  npcid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npcQuestList::_internal_npcid() const {
  return npcid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npcQuestList::npcid() const {
  // @@protoc_insertion_point(field_get:quest.npcQuestList.npcid)
  return _internal_npcid();
}
inline void npcQuestList::_internal_set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  npcid_ = value;
}
inline void npcQuestList::set_npcid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_npcid(value);
  // @@protoc_insertion_point(field_set:quest.npcQuestList.npcid)
}

// repeated .quest.QuestStateInfo quests = 2;
inline int npcQuestList::_internal_quests_size() const {
  return quests_.size();
}
inline int npcQuestList::quests_size() const {
  return _internal_quests_size();
}
inline void npcQuestList::clear_quests() {
  quests_.Clear();
}
inline ::quest::QuestStateInfo* npcQuestList::mutable_quests(int index) {
  // @@protoc_insertion_point(field_mutable:quest.npcQuestList.quests)
  return quests_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::QuestStateInfo >*
npcQuestList::mutable_quests() {
  // @@protoc_insertion_point(field_mutable_list:quest.npcQuestList.quests)
  return &quests_;
}
inline const ::quest::QuestStateInfo& npcQuestList::_internal_quests(int index) const {
  return quests_.Get(index);
}
inline const ::quest::QuestStateInfo& npcQuestList::quests(int index) const {
  // @@protoc_insertion_point(field_get:quest.npcQuestList.quests)
  return _internal_quests(index);
}
inline ::quest::QuestStateInfo* npcQuestList::_internal_add_quests() {
  return quests_.Add();
}
inline ::quest::QuestStateInfo* npcQuestList::add_quests() {
  // @@protoc_insertion_point(field_add:quest.npcQuestList.quests)
  return _internal_add_quests();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::QuestStateInfo >&
npcQuestList::quests() const {
  // @@protoc_insertion_point(field_list:quest.npcQuestList.quests)
  return quests_;
}

// optional int32 state = 3;
inline bool npcQuestList::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool npcQuestList::has_state() const {
  return _internal_has_state();
}
inline void npcQuestList::clear_state() {
  state_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 npcQuestList::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 npcQuestList::state() const {
  // @@protoc_insertion_point(field_get:quest.npcQuestList.state)
  return _internal_state();
}
inline void npcQuestList::_internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  state_ = value;
}
inline void npcQuestList::set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:quest.npcQuestList.state)
}

// -------------------------------------------------------------------

// MSG_ReqMapQuestInfo_CS

// -------------------------------------------------------------------

// MSG_RetMapQuestInfo_SC

// repeated .quest.npcQuestList npclists = 1;
inline int MSG_RetMapQuestInfo_SC::_internal_npclists_size() const {
  return npclists_.size();
}
inline int MSG_RetMapQuestInfo_SC::npclists_size() const {
  return _internal_npclists_size();
}
inline void MSG_RetMapQuestInfo_SC::clear_npclists() {
  npclists_.Clear();
}
inline ::quest::npcQuestList* MSG_RetMapQuestInfo_SC::mutable_npclists(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_RetMapQuestInfo_SC.npclists)
  return npclists_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcQuestList >*
MSG_RetMapQuestInfo_SC::mutable_npclists() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_RetMapQuestInfo_SC.npclists)
  return &npclists_;
}
inline const ::quest::npcQuestList& MSG_RetMapQuestInfo_SC::_internal_npclists(int index) const {
  return npclists_.Get(index);
}
inline const ::quest::npcQuestList& MSG_RetMapQuestInfo_SC::npclists(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetMapQuestInfo_SC.npclists)
  return _internal_npclists(index);
}
inline ::quest::npcQuestList* MSG_RetMapQuestInfo_SC::_internal_add_npclists() {
  return npclists_.Add();
}
inline ::quest::npcQuestList* MSG_RetMapQuestInfo_SC::add_npclists() {
  // @@protoc_insertion_point(field_add:quest.MSG_RetMapQuestInfo_SC.npclists)
  return _internal_add_npclists();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcQuestList >&
MSG_RetMapQuestInfo_SC::npclists() const {
  // @@protoc_insertion_point(field_list:quest.MSG_RetMapQuestInfo_SC.npclists)
  return npclists_;
}

// -------------------------------------------------------------------

// MSG_ReqCurActiveQuest_CS

// -------------------------------------------------------------------

// ringQuestInfo

// optional uint32 mainquestid = 1;
inline bool ringQuestInfo::_internal_has_mainquestid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ringQuestInfo::has_mainquestid() const {
  return _internal_has_mainquestid();
}
inline void ringQuestInfo::clear_mainquestid() {
  mainquestid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ringQuestInfo::_internal_mainquestid() const {
  return mainquestid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ringQuestInfo::mainquestid() const {
  // @@protoc_insertion_point(field_get:quest.ringQuestInfo.mainquestid)
  return _internal_mainquestid();
}
inline void ringQuestInfo::_internal_set_mainquestid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  mainquestid_ = value;
}
inline void ringQuestInfo::set_mainquestid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mainquestid(value);
  // @@protoc_insertion_point(field_set:quest.ringQuestInfo.mainquestid)
}

// optional uint32 finishringnum = 2;
inline bool ringQuestInfo::_internal_has_finishringnum() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ringQuestInfo::has_finishringnum() const {
  return _internal_has_finishringnum();
}
inline void ringQuestInfo::clear_finishringnum() {
  finishringnum_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ringQuestInfo::_internal_finishringnum() const {
  return finishringnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ringQuestInfo::finishringnum() const {
  // @@protoc_insertion_point(field_get:quest.ringQuestInfo.finishringnum)
  return _internal_finishringnum();
}
inline void ringQuestInfo::_internal_set_finishringnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  finishringnum_ = value;
}
inline void ringQuestInfo::set_finishringnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_finishringnum(value);
  // @@protoc_insertion_point(field_set:quest.ringQuestInfo.finishringnum)
}

// -------------------------------------------------------------------

// MSG_RetCurActiveQuest_SC

// repeated .quest.MSG_Ret_QuestInfo_SC item = 1;
inline int MSG_RetCurActiveQuest_SC::_internal_item_size() const {
  return item_.size();
}
inline int MSG_RetCurActiveQuest_SC::item_size() const {
  return _internal_item_size();
}
inline void MSG_RetCurActiveQuest_SC::clear_item() {
  item_.Clear();
}
inline ::quest::MSG_Ret_QuestInfo_SC* MSG_RetCurActiveQuest_SC::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_RetCurActiveQuest_SC.item)
  return item_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::MSG_Ret_QuestInfo_SC >*
MSG_RetCurActiveQuest_SC::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_RetCurActiveQuest_SC.item)
  return &item_;
}
inline const ::quest::MSG_Ret_QuestInfo_SC& MSG_RetCurActiveQuest_SC::_internal_item(int index) const {
  return item_.Get(index);
}
inline const ::quest::MSG_Ret_QuestInfo_SC& MSG_RetCurActiveQuest_SC::item(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetCurActiveQuest_SC.item)
  return _internal_item(index);
}
inline ::quest::MSG_Ret_QuestInfo_SC* MSG_RetCurActiveQuest_SC::_internal_add_item() {
  return item_.Add();
}
inline ::quest::MSG_Ret_QuestInfo_SC* MSG_RetCurActiveQuest_SC::add_item() {
  // @@protoc_insertion_point(field_add:quest.MSG_RetCurActiveQuest_SC.item)
  return _internal_add_item();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::MSG_Ret_QuestInfo_SC >&
MSG_RetCurActiveQuest_SC::item() const {
  // @@protoc_insertion_point(field_list:quest.MSG_RetCurActiveQuest_SC.item)
  return item_;
}

// repeated .quest.npcValidQuest newaccept = 2;
inline int MSG_RetCurActiveQuest_SC::_internal_newaccept_size() const {
  return newaccept_.size();
}
inline int MSG_RetCurActiveQuest_SC::newaccept_size() const {
  return _internal_newaccept_size();
}
inline void MSG_RetCurActiveQuest_SC::clear_newaccept() {
  newaccept_.Clear();
}
inline ::quest::npcValidQuest* MSG_RetCurActiveQuest_SC::mutable_newaccept(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_RetCurActiveQuest_SC.newaccept)
  return newaccept_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcValidQuest >*
MSG_RetCurActiveQuest_SC::mutable_newaccept() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_RetCurActiveQuest_SC.newaccept)
  return &newaccept_;
}
inline const ::quest::npcValidQuest& MSG_RetCurActiveQuest_SC::_internal_newaccept(int index) const {
  return newaccept_.Get(index);
}
inline const ::quest::npcValidQuest& MSG_RetCurActiveQuest_SC::newaccept(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetCurActiveQuest_SC.newaccept)
  return _internal_newaccept(index);
}
inline ::quest::npcValidQuest* MSG_RetCurActiveQuest_SC::_internal_add_newaccept() {
  return newaccept_.Add();
}
inline ::quest::npcValidQuest* MSG_RetCurActiveQuest_SC::add_newaccept() {
  // @@protoc_insertion_point(field_add:quest.MSG_RetCurActiveQuest_SC.newaccept)
  return _internal_add_newaccept();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::npcValidQuest >&
MSG_RetCurActiveQuest_SC::newaccept() const {
  // @@protoc_insertion_point(field_list:quest.MSG_RetCurActiveQuest_SC.newaccept)
  return newaccept_;
}

// optional string dayvar = 3;
inline bool MSG_RetCurActiveQuest_SC::_internal_has_dayvar() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetCurActiveQuest_SC::has_dayvar() const {
  return _internal_has_dayvar();
}
inline void MSG_RetCurActiveQuest_SC::clear_dayvar() {
  dayvar_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_RetCurActiveQuest_SC::dayvar() const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetCurActiveQuest_SC.dayvar)
  return _internal_dayvar();
}
inline void MSG_RetCurActiveQuest_SC::set_dayvar(const std::string& value) {
  _internal_set_dayvar(value);
  // @@protoc_insertion_point(field_set:quest.MSG_RetCurActiveQuest_SC.dayvar)
}
inline std::string* MSG_RetCurActiveQuest_SC::mutable_dayvar() {
  // @@protoc_insertion_point(field_mutable:quest.MSG_RetCurActiveQuest_SC.dayvar)
  return _internal_mutable_dayvar();
}
inline const std::string& MSG_RetCurActiveQuest_SC::_internal_dayvar() const {
  return dayvar_.GetNoArena();
}
inline void MSG_RetCurActiveQuest_SC::_internal_set_dayvar(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  dayvar_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_RetCurActiveQuest_SC::set_dayvar(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  dayvar_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quest.MSG_RetCurActiveQuest_SC.dayvar)
}
inline void MSG_RetCurActiveQuest_SC::set_dayvar(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  dayvar_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quest.MSG_RetCurActiveQuest_SC.dayvar)
}
inline void MSG_RetCurActiveQuest_SC::set_dayvar(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  dayvar_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quest.MSG_RetCurActiveQuest_SC.dayvar)
}
inline std::string* MSG_RetCurActiveQuest_SC::_internal_mutable_dayvar() {
  _has_bits_[0] |= 0x00000001u;
  return dayvar_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_RetCurActiveQuest_SC::release_dayvar() {
  // @@protoc_insertion_point(field_release:quest.MSG_RetCurActiveQuest_SC.dayvar)
  if (!_internal_has_dayvar()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return dayvar_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_RetCurActiveQuest_SC::set_allocated_dayvar(std::string* dayvar) {
  if (dayvar != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  dayvar_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dayvar);
  // @@protoc_insertion_point(field_set_allocated:quest.MSG_RetCurActiveQuest_SC.dayvar)
}

// repeated .quest.ringQuestInfo ringinfo = 4;
inline int MSG_RetCurActiveQuest_SC::_internal_ringinfo_size() const {
  return ringinfo_.size();
}
inline int MSG_RetCurActiveQuest_SC::ringinfo_size() const {
  return _internal_ringinfo_size();
}
inline void MSG_RetCurActiveQuest_SC::clear_ringinfo() {
  ringinfo_.Clear();
}
inline ::quest::ringQuestInfo* MSG_RetCurActiveQuest_SC::mutable_ringinfo(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_RetCurActiveQuest_SC.ringinfo)
  return ringinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::ringQuestInfo >*
MSG_RetCurActiveQuest_SC::mutable_ringinfo() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_RetCurActiveQuest_SC.ringinfo)
  return &ringinfo_;
}
inline const ::quest::ringQuestInfo& MSG_RetCurActiveQuest_SC::_internal_ringinfo(int index) const {
  return ringinfo_.Get(index);
}
inline const ::quest::ringQuestInfo& MSG_RetCurActiveQuest_SC::ringinfo(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetCurActiveQuest_SC.ringinfo)
  return _internal_ringinfo(index);
}
inline ::quest::ringQuestInfo* MSG_RetCurActiveQuest_SC::_internal_add_ringinfo() {
  return ringinfo_.Add();
}
inline ::quest::ringQuestInfo* MSG_RetCurActiveQuest_SC::add_ringinfo() {
  // @@protoc_insertion_point(field_add:quest.MSG_RetCurActiveQuest_SC.ringinfo)
  return _internal_add_ringinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::ringQuestInfo >&
MSG_RetCurActiveQuest_SC::ringinfo() const {
  // @@protoc_insertion_point(field_list:quest.MSG_RetCurActiveQuest_SC.ringinfo)
  return ringinfo_;
}

// -------------------------------------------------------------------

// MSG_ReqChangeMapFindPath_CS

// optional uint32 pathwayid = 1;
inline bool MSG_ReqChangeMapFindPath_CS::_internal_has_pathwayid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqChangeMapFindPath_CS::has_pathwayid() const {
  return _internal_has_pathwayid();
}
inline void MSG_ReqChangeMapFindPath_CS::clear_pathwayid() {
  pathwayid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqChangeMapFindPath_CS::_internal_pathwayid() const {
  return pathwayid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqChangeMapFindPath_CS::pathwayid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqChangeMapFindPath_CS.pathwayid)
  return _internal_pathwayid();
}
inline void MSG_ReqChangeMapFindPath_CS::_internal_set_pathwayid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  pathwayid_ = value;
}
inline void MSG_ReqChangeMapFindPath_CS::set_pathwayid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pathwayid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqChangeMapFindPath_CS.pathwayid)
}

// optional uint32 questid = 2;
inline bool MSG_ReqChangeMapFindPath_CS::_internal_has_questid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqChangeMapFindPath_CS::has_questid() const {
  return _internal_has_questid();
}
inline void MSG_ReqChangeMapFindPath_CS::clear_questid() {
  questid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqChangeMapFindPath_CS::_internal_questid() const {
  return questid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqChangeMapFindPath_CS::questid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqChangeMapFindPath_CS.questid)
  return _internal_questid();
}
inline void MSG_ReqChangeMapFindPath_CS::_internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  questid_ = value;
}
inline void MSG_ReqChangeMapFindPath_CS::set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqChangeMapFindPath_CS.questid)
}

// optional uint32 destx = 3;
inline bool MSG_ReqChangeMapFindPath_CS::_internal_has_destx() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqChangeMapFindPath_CS::has_destx() const {
  return _internal_has_destx();
}
inline void MSG_ReqChangeMapFindPath_CS::clear_destx() {
  destx_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqChangeMapFindPath_CS::_internal_destx() const {
  return destx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqChangeMapFindPath_CS::destx() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqChangeMapFindPath_CS.destx)
  return _internal_destx();
}
inline void MSG_ReqChangeMapFindPath_CS::_internal_set_destx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  destx_ = value;
}
inline void MSG_ReqChangeMapFindPath_CS::set_destx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_destx(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqChangeMapFindPath_CS.destx)
}

// optional uint32 desty = 4;
inline bool MSG_ReqChangeMapFindPath_CS::_internal_has_desty() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqChangeMapFindPath_CS::has_desty() const {
  return _internal_has_desty();
}
inline void MSG_ReqChangeMapFindPath_CS::clear_desty() {
  desty_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqChangeMapFindPath_CS::_internal_desty() const {
  return desty_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqChangeMapFindPath_CS::desty() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqChangeMapFindPath_CS.desty)
  return _internal_desty();
}
inline void MSG_ReqChangeMapFindPath_CS::_internal_set_desty(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  desty_ = value;
}
inline void MSG_ReqChangeMapFindPath_CS::set_desty(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_desty(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqChangeMapFindPath_CS.desty)
}

// -------------------------------------------------------------------

// MSG_RetChangeMapFindPath_SC

// optional .quest.ChangeMapFindWayInfo info = 1;
inline bool MSG_RetChangeMapFindPath_SC::_internal_has_info() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || info_ != nullptr);
  return value;
}
inline bool MSG_RetChangeMapFindPath_SC::has_info() const {
  return _internal_has_info();
}
inline void MSG_RetChangeMapFindPath_SC::clear_info() {
  if (info_ != nullptr) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::quest::ChangeMapFindWayInfo& MSG_RetChangeMapFindPath_SC::_internal_info() const {
  const ::quest::ChangeMapFindWayInfo* p = info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::quest::ChangeMapFindWayInfo*>(
      &::quest::_ChangeMapFindWayInfo_default_instance_);
}
inline const ::quest::ChangeMapFindWayInfo& MSG_RetChangeMapFindPath_SC::info() const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetChangeMapFindPath_SC.info)
  return _internal_info();
}
inline ::quest::ChangeMapFindWayInfo* MSG_RetChangeMapFindPath_SC::release_info() {
  // @@protoc_insertion_point(field_release:quest.MSG_RetChangeMapFindPath_SC.info)
  _has_bits_[0] &= ~0x00000001u;
  ::quest::ChangeMapFindWayInfo* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::quest::ChangeMapFindWayInfo* MSG_RetChangeMapFindPath_SC::_internal_mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::quest::ChangeMapFindWayInfo>(GetArenaNoVirtual());
    info_ = p;
  }
  return info_;
}
inline ::quest::ChangeMapFindWayInfo* MSG_RetChangeMapFindPath_SC::mutable_info() {
  // @@protoc_insertion_point(field_mutable:quest.MSG_RetChangeMapFindPath_SC.info)
  return _internal_mutable_info();
}
inline void MSG_RetChangeMapFindPath_SC::set_allocated_info(::quest::ChangeMapFindWayInfo* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_;
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:quest.MSG_RetChangeMapFindPath_SC.info)
}

// -------------------------------------------------------------------

// ChangeMapFindWayInfo

// optional uint32 errcode = 1;
inline bool ChangeMapFindWayInfo::_internal_has_errcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ChangeMapFindWayInfo::has_errcode() const {
  return _internal_has_errcode();
}
inline void ChangeMapFindWayInfo::clear_errcode() {
  errcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ChangeMapFindWayInfo::_internal_errcode() const {
  return errcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ChangeMapFindWayInfo::errcode() const {
  // @@protoc_insertion_point(field_get:quest.ChangeMapFindWayInfo.errcode)
  return _internal_errcode();
}
inline void ChangeMapFindWayInfo::_internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  errcode_ = value;
}
inline void ChangeMapFindWayInfo::set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errcode(value);
  // @@protoc_insertion_point(field_set:quest.ChangeMapFindWayInfo.errcode)
}

// optional uint32 pathwayid = 2;
inline bool ChangeMapFindWayInfo::_internal_has_pathwayid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ChangeMapFindWayInfo::has_pathwayid() const {
  return _internal_has_pathwayid();
}
inline void ChangeMapFindWayInfo::clear_pathwayid() {
  pathwayid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ChangeMapFindWayInfo::_internal_pathwayid() const {
  return pathwayid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ChangeMapFindWayInfo::pathwayid() const {
  // @@protoc_insertion_point(field_get:quest.ChangeMapFindWayInfo.pathwayid)
  return _internal_pathwayid();
}
inline void ChangeMapFindWayInfo::_internal_set_pathwayid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  pathwayid_ = value;
}
inline void ChangeMapFindWayInfo::set_pathwayid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pathwayid(value);
  // @@protoc_insertion_point(field_set:quest.ChangeMapFindWayInfo.pathwayid)
}

// optional uint32 destmapid = 3;
inline bool ChangeMapFindWayInfo::_internal_has_destmapid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ChangeMapFindWayInfo::has_destmapid() const {
  return _internal_has_destmapid();
}
inline void ChangeMapFindWayInfo::clear_destmapid() {
  destmapid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ChangeMapFindWayInfo::_internal_destmapid() const {
  return destmapid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ChangeMapFindWayInfo::destmapid() const {
  // @@protoc_insertion_point(field_get:quest.ChangeMapFindWayInfo.destmapid)
  return _internal_destmapid();
}
inline void ChangeMapFindWayInfo::_internal_set_destmapid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  destmapid_ = value;
}
inline void ChangeMapFindWayInfo::set_destmapid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_destmapid(value);
  // @@protoc_insertion_point(field_set:quest.ChangeMapFindWayInfo.destmapid)
}

// optional bool findingway = 4 [default = false];
inline bool ChangeMapFindWayInfo::_internal_has_findingway() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ChangeMapFindWayInfo::has_findingway() const {
  return _internal_has_findingway();
}
inline void ChangeMapFindWayInfo::clear_findingway() {
  findingway_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool ChangeMapFindWayInfo::_internal_findingway() const {
  return findingway_;
}
inline bool ChangeMapFindWayInfo::findingway() const {
  // @@protoc_insertion_point(field_get:quest.ChangeMapFindWayInfo.findingway)
  return _internal_findingway();
}
inline void ChangeMapFindWayInfo::_internal_set_findingway(bool value) {
  _has_bits_[0] |= 0x00000008u;
  findingway_ = value;
}
inline void ChangeMapFindWayInfo::set_findingway(bool value) {
  _internal_set_findingway(value);
  // @@protoc_insertion_point(field_set:quest.ChangeMapFindWayInfo.findingway)
}

// -------------------------------------------------------------------

// MSG_RetPlotTalkID_SC

// optional uint32 groupid = 1;
inline bool MSG_RetPlotTalkID_SC::_internal_has_groupid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetPlotTalkID_SC::has_groupid() const {
  return _internal_has_groupid();
}
inline void MSG_RetPlotTalkID_SC::clear_groupid() {
  groupid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetPlotTalkID_SC::_internal_groupid() const {
  return groupid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetPlotTalkID_SC::groupid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetPlotTalkID_SC.groupid)
  return _internal_groupid();
}
inline void MSG_RetPlotTalkID_SC::_internal_set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  groupid_ = value;
}
inline void MSG_RetPlotTalkID_SC::set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_groupid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_RetPlotTalkID_SC.groupid)
}

// -------------------------------------------------------------------

// MSG_CartoonCompleteNotify_SC

// optional uint32 groupid = 1;
inline bool MSG_CartoonCompleteNotify_SC::_internal_has_groupid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_CartoonCompleteNotify_SC::has_groupid() const {
  return _internal_has_groupid();
}
inline void MSG_CartoonCompleteNotify_SC::clear_groupid() {
  groupid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_CartoonCompleteNotify_SC::_internal_groupid() const {
  return groupid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_CartoonCompleteNotify_SC::groupid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_CartoonCompleteNotify_SC.groupid)
  return _internal_groupid();
}
inline void MSG_CartoonCompleteNotify_SC::_internal_set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  groupid_ = value;
}
inline void MSG_CartoonCompleteNotify_SC::set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_groupid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_CartoonCompleteNotify_SC.groupid)
}

// optional string command = 2;
inline bool MSG_CartoonCompleteNotify_SC::_internal_has_command() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_CartoonCompleteNotify_SC::has_command() const {
  return _internal_has_command();
}
inline void MSG_CartoonCompleteNotify_SC::clear_command() {
  command_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_CartoonCompleteNotify_SC::command() const {
  // @@protoc_insertion_point(field_get:quest.MSG_CartoonCompleteNotify_SC.command)
  return _internal_command();
}
inline void MSG_CartoonCompleteNotify_SC::set_command(const std::string& value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:quest.MSG_CartoonCompleteNotify_SC.command)
}
inline std::string* MSG_CartoonCompleteNotify_SC::mutable_command() {
  // @@protoc_insertion_point(field_mutable:quest.MSG_CartoonCompleteNotify_SC.command)
  return _internal_mutable_command();
}
inline const std::string& MSG_CartoonCompleteNotify_SC::_internal_command() const {
  return command_.GetNoArena();
}
inline void MSG_CartoonCompleteNotify_SC::_internal_set_command(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  command_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_CartoonCompleteNotify_SC::set_command(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  command_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quest.MSG_CartoonCompleteNotify_SC.command)
}
inline void MSG_CartoonCompleteNotify_SC::set_command(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  command_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quest.MSG_CartoonCompleteNotify_SC.command)
}
inline void MSG_CartoonCompleteNotify_SC::set_command(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  command_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quest.MSG_CartoonCompleteNotify_SC.command)
}
inline std::string* MSG_CartoonCompleteNotify_SC::_internal_mutable_command() {
  _has_bits_[0] |= 0x00000001u;
  return command_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_CartoonCompleteNotify_SC::release_command() {
  // @@protoc_insertion_point(field_release:quest.MSG_CartoonCompleteNotify_SC.command)
  if (!_internal_has_command()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return command_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_CartoonCompleteNotify_SC::set_allocated_command(std::string* command) {
  if (command != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  command_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:quest.MSG_CartoonCompleteNotify_SC.command)
}

// optional uint32 delay = 3;
inline bool MSG_CartoonCompleteNotify_SC::_internal_has_delay() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_CartoonCompleteNotify_SC::has_delay() const {
  return _internal_has_delay();
}
inline void MSG_CartoonCompleteNotify_SC::clear_delay() {
  delay_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_CartoonCompleteNotify_SC::_internal_delay() const {
  return delay_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_CartoonCompleteNotify_SC::delay() const {
  // @@protoc_insertion_point(field_get:quest.MSG_CartoonCompleteNotify_SC.delay)
  return _internal_delay();
}
inline void MSG_CartoonCompleteNotify_SC::_internal_set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  delay_ = value;
}
inline void MSG_CartoonCompleteNotify_SC::set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_delay(value);
  // @@protoc_insertion_point(field_set:quest.MSG_CartoonCompleteNotify_SC.delay)
}

// -------------------------------------------------------------------

// MSG_PlayCartoonAndGoMap_SC

// optional uint32 groupid = 1;
inline bool MSG_PlayCartoonAndGoMap_SC::_internal_has_groupid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_PlayCartoonAndGoMap_SC::has_groupid() const {
  return _internal_has_groupid();
}
inline void MSG_PlayCartoonAndGoMap_SC::clear_groupid() {
  groupid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayCartoonAndGoMap_SC::_internal_groupid() const {
  return groupid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayCartoonAndGoMap_SC::groupid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_PlayCartoonAndGoMap_SC.groupid)
  return _internal_groupid();
}
inline void MSG_PlayCartoonAndGoMap_SC::_internal_set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  groupid_ = value;
}
inline void MSG_PlayCartoonAndGoMap_SC::set_groupid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_groupid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_PlayCartoonAndGoMap_SC.groupid)
}

// optional string command = 2;
inline bool MSG_PlayCartoonAndGoMap_SC::_internal_has_command() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_PlayCartoonAndGoMap_SC::has_command() const {
  return _internal_has_command();
}
inline void MSG_PlayCartoonAndGoMap_SC::clear_command() {
  command_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_PlayCartoonAndGoMap_SC::command() const {
  // @@protoc_insertion_point(field_get:quest.MSG_PlayCartoonAndGoMap_SC.command)
  return _internal_command();
}
inline void MSG_PlayCartoonAndGoMap_SC::set_command(const std::string& value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:quest.MSG_PlayCartoonAndGoMap_SC.command)
}
inline std::string* MSG_PlayCartoonAndGoMap_SC::mutable_command() {
  // @@protoc_insertion_point(field_mutable:quest.MSG_PlayCartoonAndGoMap_SC.command)
  return _internal_mutable_command();
}
inline const std::string& MSG_PlayCartoonAndGoMap_SC::_internal_command() const {
  return command_.GetNoArena();
}
inline void MSG_PlayCartoonAndGoMap_SC::_internal_set_command(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  command_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_PlayCartoonAndGoMap_SC::set_command(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  command_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quest.MSG_PlayCartoonAndGoMap_SC.command)
}
inline void MSG_PlayCartoonAndGoMap_SC::set_command(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  command_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quest.MSG_PlayCartoonAndGoMap_SC.command)
}
inline void MSG_PlayCartoonAndGoMap_SC::set_command(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  command_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quest.MSG_PlayCartoonAndGoMap_SC.command)
}
inline std::string* MSG_PlayCartoonAndGoMap_SC::_internal_mutable_command() {
  _has_bits_[0] |= 0x00000001u;
  return command_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_PlayCartoonAndGoMap_SC::release_command() {
  // @@protoc_insertion_point(field_release:quest.MSG_PlayCartoonAndGoMap_SC.command)
  if (!_internal_has_command()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return command_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_PlayCartoonAndGoMap_SC::set_allocated_command(std::string* command) {
  if (command != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  command_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:quest.MSG_PlayCartoonAndGoMap_SC.command)
}

// optional uint32 delay = 3;
inline bool MSG_PlayCartoonAndGoMap_SC::_internal_has_delay() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_PlayCartoonAndGoMap_SC::has_delay() const {
  return _internal_has_delay();
}
inline void MSG_PlayCartoonAndGoMap_SC::clear_delay() {
  delay_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayCartoonAndGoMap_SC::_internal_delay() const {
  return delay_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayCartoonAndGoMap_SC::delay() const {
  // @@protoc_insertion_point(field_get:quest.MSG_PlayCartoonAndGoMap_SC.delay)
  return _internal_delay();
}
inline void MSG_PlayCartoonAndGoMap_SC::_internal_set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  delay_ = value;
}
inline void MSG_PlayCartoonAndGoMap_SC::set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_delay(value);
  // @@protoc_insertion_point(field_set:quest.MSG_PlayCartoonAndGoMap_SC.delay)
}

// optional uint32 callbackid = 4;
inline bool MSG_PlayCartoonAndGoMap_SC::_internal_has_callbackid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_PlayCartoonAndGoMap_SC::has_callbackid() const {
  return _internal_has_callbackid();
}
inline void MSG_PlayCartoonAndGoMap_SC::clear_callbackid() {
  callbackid_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayCartoonAndGoMap_SC::_internal_callbackid() const {
  return callbackid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayCartoonAndGoMap_SC::callbackid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_PlayCartoonAndGoMap_SC.callbackid)
  return _internal_callbackid();
}
inline void MSG_PlayCartoonAndGoMap_SC::_internal_set_callbackid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  callbackid_ = value;
}
inline void MSG_PlayCartoonAndGoMap_SC::set_callbackid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_callbackid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_PlayCartoonAndGoMap_SC.callbackid)
}

// -------------------------------------------------------------------

// MSG_ReqSubmitObjs_CS

// repeated string thisid = 1;
inline int MSG_ReqSubmitObjs_CS::_internal_thisid_size() const {
  return thisid_.size();
}
inline int MSG_ReqSubmitObjs_CS::thisid_size() const {
  return _internal_thisid_size();
}
inline void MSG_ReqSubmitObjs_CS::clear_thisid() {
  thisid_.Clear();
}
inline std::string* MSG_ReqSubmitObjs_CS::add_thisid() {
  // @@protoc_insertion_point(field_add_mutable:quest.MSG_ReqSubmitObjs_CS.thisid)
  return _internal_add_thisid();
}
inline const std::string& MSG_ReqSubmitObjs_CS::_internal_thisid(int index) const {
  return thisid_.Get(index);
}
inline const std::string& MSG_ReqSubmitObjs_CS::thisid(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqSubmitObjs_CS.thisid)
  return _internal_thisid(index);
}
inline std::string* MSG_ReqSubmitObjs_CS::mutable_thisid(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_ReqSubmitObjs_CS.thisid)
  return thisid_.Mutable(index);
}
inline void MSG_ReqSubmitObjs_CS::set_thisid(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:quest.MSG_ReqSubmitObjs_CS.thisid)
  thisid_.Mutable(index)->assign(value);
}
inline void MSG_ReqSubmitObjs_CS::set_thisid(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:quest.MSG_ReqSubmitObjs_CS.thisid)
  thisid_.Mutable(index)->assign(std::move(value));
}
inline void MSG_ReqSubmitObjs_CS::set_thisid(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  thisid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:quest.MSG_ReqSubmitObjs_CS.thisid)
}
inline void MSG_ReqSubmitObjs_CS::set_thisid(int index, const char* value, size_t size) {
  thisid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:quest.MSG_ReqSubmitObjs_CS.thisid)
}
inline std::string* MSG_ReqSubmitObjs_CS::_internal_add_thisid() {
  return thisid_.Add();
}
inline void MSG_ReqSubmitObjs_CS::add_thisid(const std::string& value) {
  thisid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:quest.MSG_ReqSubmitObjs_CS.thisid)
}
inline void MSG_ReqSubmitObjs_CS::add_thisid(std::string&& value) {
  thisid_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:quest.MSG_ReqSubmitObjs_CS.thisid)
}
inline void MSG_ReqSubmitObjs_CS::add_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  thisid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:quest.MSG_ReqSubmitObjs_CS.thisid)
}
inline void MSG_ReqSubmitObjs_CS::add_thisid(const char* value, size_t size) {
  thisid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:quest.MSG_ReqSubmitObjs_CS.thisid)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MSG_ReqSubmitObjs_CS::thisid() const {
  // @@protoc_insertion_point(field_list:quest.MSG_ReqSubmitObjs_CS.thisid)
  return thisid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MSG_ReqSubmitObjs_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_ReqSubmitObjs_CS.thisid)
  return &thisid_;
}

// optional uint32 bagid = 2;
inline bool MSG_ReqSubmitObjs_CS::_internal_has_bagid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSubmitObjs_CS::has_bagid() const {
  return _internal_has_bagid();
}
inline void MSG_ReqSubmitObjs_CS::clear_bagid() {
  bagid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSubmitObjs_CS::_internal_bagid() const {
  return bagid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqSubmitObjs_CS::bagid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_ReqSubmitObjs_CS.bagid)
  return _internal_bagid();
}
inline void MSG_ReqSubmitObjs_CS::_internal_set_bagid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  bagid_ = value;
}
inline void MSG_ReqSubmitObjs_CS::set_bagid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bagid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_ReqSubmitObjs_CS.bagid)
}

// -------------------------------------------------------------------

// MSG_RetSubmitObjs_SC

// optional uint32 retcode = 1;
inline bool MSG_RetSubmitObjs_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetSubmitObjs_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetSubmitObjs_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSubmitObjs_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSubmitObjs_SC::retcode() const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetSubmitObjs_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetSubmitObjs_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_RetSubmitObjs_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:quest.MSG_RetSubmitObjs_SC.retcode)
}

// -------------------------------------------------------------------

// RingQuestRingCount

// optional uint32 questtype = 1;
inline bool RingQuestRingCount::_internal_has_questtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RingQuestRingCount::has_questtype() const {
  return _internal_has_questtype();
}
inline void RingQuestRingCount::clear_questtype() {
  questtype_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RingQuestRingCount::_internal_questtype() const {
  return questtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RingQuestRingCount::questtype() const {
  // @@protoc_insertion_point(field_get:quest.RingQuestRingCount.questtype)
  return _internal_questtype();
}
inline void RingQuestRingCount::_internal_set_questtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  questtype_ = value;
}
inline void RingQuestRingCount::set_questtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questtype(value);
  // @@protoc_insertion_point(field_set:quest.RingQuestRingCount.questtype)
}

// optional uint32 ring_count = 2;
inline bool RingQuestRingCount::_internal_has_ring_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RingQuestRingCount::has_ring_count() const {
  return _internal_has_ring_count();
}
inline void RingQuestRingCount::clear_ring_count() {
  ring_count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RingQuestRingCount::_internal_ring_count() const {
  return ring_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RingQuestRingCount::ring_count() const {
  // @@protoc_insertion_point(field_get:quest.RingQuestRingCount.ring_count)
  return _internal_ring_count();
}
inline void RingQuestRingCount::_internal_set_ring_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ring_count_ = value;
}
inline void RingQuestRingCount::set_ring_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ring_count(value);
  // @@protoc_insertion_point(field_set:quest.RingQuestRingCount.ring_count)
}

// -------------------------------------------------------------------

// MSG_RetRingQuestRingCount_SC

// repeated .quest.RingQuestRingCount ringcount = 1;
inline int MSG_RetRingQuestRingCount_SC::_internal_ringcount_size() const {
  return ringcount_.size();
}
inline int MSG_RetRingQuestRingCount_SC::ringcount_size() const {
  return _internal_ringcount_size();
}
inline void MSG_RetRingQuestRingCount_SC::clear_ringcount() {
  ringcount_.Clear();
}
inline ::quest::RingQuestRingCount* MSG_RetRingQuestRingCount_SC::mutable_ringcount(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_RetRingQuestRingCount_SC.ringcount)
  return ringcount_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::RingQuestRingCount >*
MSG_RetRingQuestRingCount_SC::mutable_ringcount() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_RetRingQuestRingCount_SC.ringcount)
  return &ringcount_;
}
inline const ::quest::RingQuestRingCount& MSG_RetRingQuestRingCount_SC::_internal_ringcount(int index) const {
  return ringcount_.Get(index);
}
inline const ::quest::RingQuestRingCount& MSG_RetRingQuestRingCount_SC::ringcount(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_RetRingQuestRingCount_SC.ringcount)
  return _internal_ringcount(index);
}
inline ::quest::RingQuestRingCount* MSG_RetRingQuestRingCount_SC::_internal_add_ringcount() {
  return ringcount_.Add();
}
inline ::quest::RingQuestRingCount* MSG_RetRingQuestRingCount_SC::add_ringcount() {
  // @@protoc_insertion_point(field_add:quest.MSG_RetRingQuestRingCount_SC.ringcount)
  return _internal_add_ringcount();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::RingQuestRingCount >&
MSG_RetRingQuestRingCount_SC::ringcount() const {
  // @@protoc_insertion_point(field_list:quest.MSG_RetRingQuestRingCount_SC.ringcount)
  return ringcount_;
}

// -------------------------------------------------------------------

// MSG_notifyRefreshQuestInfo_SC

// repeated .quest.MSG_Ret_QuestInfo_SC item = 1;
inline int MSG_notifyRefreshQuestInfo_SC::_internal_item_size() const {
  return item_.size();
}
inline int MSG_notifyRefreshQuestInfo_SC::item_size() const {
  return _internal_item_size();
}
inline void MSG_notifyRefreshQuestInfo_SC::clear_item() {
  item_.Clear();
}
inline ::quest::MSG_Ret_QuestInfo_SC* MSG_notifyRefreshQuestInfo_SC::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:quest.MSG_notifyRefreshQuestInfo_SC.item)
  return item_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::MSG_Ret_QuestInfo_SC >*
MSG_notifyRefreshQuestInfo_SC::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:quest.MSG_notifyRefreshQuestInfo_SC.item)
  return &item_;
}
inline const ::quest::MSG_Ret_QuestInfo_SC& MSG_notifyRefreshQuestInfo_SC::_internal_item(int index) const {
  return item_.Get(index);
}
inline const ::quest::MSG_Ret_QuestInfo_SC& MSG_notifyRefreshQuestInfo_SC::item(int index) const {
  // @@protoc_insertion_point(field_get:quest.MSG_notifyRefreshQuestInfo_SC.item)
  return _internal_item(index);
}
inline ::quest::MSG_Ret_QuestInfo_SC* MSG_notifyRefreshQuestInfo_SC::_internal_add_item() {
  return item_.Add();
}
inline ::quest::MSG_Ret_QuestInfo_SC* MSG_notifyRefreshQuestInfo_SC::add_item() {
  // @@protoc_insertion_point(field_add:quest.MSG_notifyRefreshQuestInfo_SC.item)
  return _internal_add_item();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quest::MSG_Ret_QuestInfo_SC >&
MSG_notifyRefreshQuestInfo_SC::item() const {
  // @@protoc_insertion_point(field_list:quest.MSG_notifyRefreshQuestInfo_SC.item)
  return item_;
}

// -------------------------------------------------------------------

// MSG_PlayBellQTE_SC

// optional uint32 qtelevel = 1;
inline bool MSG_PlayBellQTE_SC::_internal_has_qtelevel() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_PlayBellQTE_SC::has_qtelevel() const {
  return _internal_has_qtelevel();
}
inline void MSG_PlayBellQTE_SC::clear_qtelevel() {
  qtelevel_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayBellQTE_SC::_internal_qtelevel() const {
  return qtelevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayBellQTE_SC::qtelevel() const {
  // @@protoc_insertion_point(field_get:quest.MSG_PlayBellQTE_SC.qtelevel)
  return _internal_qtelevel();
}
inline void MSG_PlayBellQTE_SC::_internal_set_qtelevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  qtelevel_ = value;
}
inline void MSG_PlayBellQTE_SC::set_qtelevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_qtelevel(value);
  // @@protoc_insertion_point(field_set:quest.MSG_PlayBellQTE_SC.qtelevel)
}

// -------------------------------------------------------------------

// MSG_PlayBellQTEResult_CS

// optional uint32 qtelevel = 1;
inline bool MSG_PlayBellQTEResult_CS::_internal_has_qtelevel() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_PlayBellQTEResult_CS::has_qtelevel() const {
  return _internal_has_qtelevel();
}
inline void MSG_PlayBellQTEResult_CS::clear_qtelevel() {
  qtelevel_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayBellQTEResult_CS::_internal_qtelevel() const {
  return qtelevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayBellQTEResult_CS::qtelevel() const {
  // @@protoc_insertion_point(field_get:quest.MSG_PlayBellQTEResult_CS.qtelevel)
  return _internal_qtelevel();
}
inline void MSG_PlayBellQTEResult_CS::_internal_set_qtelevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  qtelevel_ = value;
}
inline void MSG_PlayBellQTEResult_CS::set_qtelevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_qtelevel(value);
  // @@protoc_insertion_point(field_set:quest.MSG_PlayBellQTEResult_CS.qtelevel)
}

// optional uint32 result = 2;
inline bool MSG_PlayBellQTEResult_CS::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_PlayBellQTEResult_CS::has_result() const {
  return _internal_has_result();
}
inline void MSG_PlayBellQTEResult_CS::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayBellQTEResult_CS::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_PlayBellQTEResult_CS::result() const {
  // @@protoc_insertion_point(field_get:quest.MSG_PlayBellQTEResult_CS.result)
  return _internal_result();
}
inline void MSG_PlayBellQTEResult_CS::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void MSG_PlayBellQTEResult_CS::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:quest.MSG_PlayBellQTEResult_CS.result)
}

// -------------------------------------------------------------------

// MSG_Req_SetQuestNeedShow_CS

// optional uint32 questid = 1;
inline bool MSG_Req_SetQuestNeedShow_CS::_internal_has_questid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_SetQuestNeedShow_CS::has_questid() const {
  return _internal_has_questid();
}
inline void MSG_Req_SetQuestNeedShow_CS::clear_questid() {
  questid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SetQuestNeedShow_CS::_internal_questid() const {
  return questid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_SetQuestNeedShow_CS::questid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_SetQuestNeedShow_CS.questid)
  return _internal_questid();
}
inline void MSG_Req_SetQuestNeedShow_CS::_internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  questid_ = value;
}
inline void MSG_Req_SetQuestNeedShow_CS::set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_SetQuestNeedShow_CS.questid)
}

// optional bool show = 2;
inline bool MSG_Req_SetQuestNeedShow_CS::_internal_has_show() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_SetQuestNeedShow_CS::has_show() const {
  return _internal_has_show();
}
inline void MSG_Req_SetQuestNeedShow_CS::clear_show() {
  show_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Req_SetQuestNeedShow_CS::_internal_show() const {
  return show_;
}
inline bool MSG_Req_SetQuestNeedShow_CS::show() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_SetQuestNeedShow_CS.show)
  return _internal_show();
}
inline void MSG_Req_SetQuestNeedShow_CS::_internal_set_show(bool value) {
  _has_bits_[0] |= 0x00000002u;
  show_ = value;
}
inline void MSG_Req_SetQuestNeedShow_CS::set_show(bool value) {
  _internal_set_show(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_SetQuestNeedShow_CS.show)
}

// -------------------------------------------------------------------

// MSG_Ret_SetQuestNeedShow_SC

// optional uint32 questid = 1;
inline bool MSG_Ret_SetQuestNeedShow_SC::_internal_has_questid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_SetQuestNeedShow_SC::has_questid() const {
  return _internal_has_questid();
}
inline void MSG_Ret_SetQuestNeedShow_SC::clear_questid() {
  questid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SetQuestNeedShow_SC::_internal_questid() const {
  return questid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SetQuestNeedShow_SC::questid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_SetQuestNeedShow_SC.questid)
  return _internal_questid();
}
inline void MSG_Ret_SetQuestNeedShow_SC::_internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  questid_ = value;
}
inline void MSG_Ret_SetQuestNeedShow_SC::set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_SetQuestNeedShow_SC.questid)
}

// optional bool result = 2;
inline bool MSG_Ret_SetQuestNeedShow_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_SetQuestNeedShow_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_Ret_SetQuestNeedShow_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Ret_SetQuestNeedShow_SC::_internal_result() const {
  return result_;
}
inline bool MSG_Ret_SetQuestNeedShow_SC::result() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_SetQuestNeedShow_SC.result)
  return _internal_result();
}
inline void MSG_Ret_SetQuestNeedShow_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void MSG_Ret_SetQuestNeedShow_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_SetQuestNeedShow_SC.result)
}

// optional bool code = 3;
inline bool MSG_Ret_SetQuestNeedShow_SC::_internal_has_code() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_SetQuestNeedShow_SC::has_code() const {
  return _internal_has_code();
}
inline void MSG_Ret_SetQuestNeedShow_SC::clear_code() {
  code_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool MSG_Ret_SetQuestNeedShow_SC::_internal_code() const {
  return code_;
}
inline bool MSG_Ret_SetQuestNeedShow_SC::code() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_SetQuestNeedShow_SC.code)
  return _internal_code();
}
inline void MSG_Ret_SetQuestNeedShow_SC::_internal_set_code(bool value) {
  _has_bits_[0] |= 0x00000004u;
  code_ = value;
}
inline void MSG_Ret_SetQuestNeedShow_SC::set_code(bool value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_SetQuestNeedShow_SC.code)
}

// -------------------------------------------------------------------

// MSG_Req_ShareQuestToTeamMember_CS

// optional uint32 questid = 1;
inline bool MSG_Req_ShareQuestToTeamMember_CS::_internal_has_questid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_ShareQuestToTeamMember_CS::has_questid() const {
  return _internal_has_questid();
}
inline void MSG_Req_ShareQuestToTeamMember_CS::clear_questid() {
  questid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ShareQuestToTeamMember_CS::_internal_questid() const {
  return questid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_ShareQuestToTeamMember_CS::questid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_ShareQuestToTeamMember_CS.questid)
  return _internal_questid();
}
inline void MSG_Req_ShareQuestToTeamMember_CS::_internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  questid_ = value;
}
inline void MSG_Req_ShareQuestToTeamMember_CS::set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_ShareQuestToTeamMember_CS.questid)
}

// -------------------------------------------------------------------

// MSG_Ret_NotifyShareQuest_SC

// optional string name = 1;
inline bool MSG_Ret_NotifyShareQuest_SC::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_NotifyShareQuest_SC::has_name() const {
  return _internal_has_name();
}
inline void MSG_Ret_NotifyShareQuest_SC::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Ret_NotifyShareQuest_SC::name() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_NotifyShareQuest_SC.name)
  return _internal_name();
}
inline void MSG_Ret_NotifyShareQuest_SC::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_NotifyShareQuest_SC.name)
}
inline std::string* MSG_Ret_NotifyShareQuest_SC::mutable_name() {
  // @@protoc_insertion_point(field_mutable:quest.MSG_Ret_NotifyShareQuest_SC.name)
  return _internal_mutable_name();
}
inline const std::string& MSG_Ret_NotifyShareQuest_SC::_internal_name() const {
  return name_.GetNoArena();
}
inline void MSG_Ret_NotifyShareQuest_SC::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Ret_NotifyShareQuest_SC::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quest.MSG_Ret_NotifyShareQuest_SC.name)
}
inline void MSG_Ret_NotifyShareQuest_SC::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quest.MSG_Ret_NotifyShareQuest_SC.name)
}
inline void MSG_Ret_NotifyShareQuest_SC::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quest.MSG_Ret_NotifyShareQuest_SC.name)
}
inline std::string* MSG_Ret_NotifyShareQuest_SC::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Ret_NotifyShareQuest_SC::release_name() {
  // @@protoc_insertion_point(field_release:quest.MSG_Ret_NotifyShareQuest_SC.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Ret_NotifyShareQuest_SC::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:quest.MSG_Ret_NotifyShareQuest_SC.name)
}

// optional uint32 questid = 2;
inline bool MSG_Ret_NotifyShareQuest_SC::_internal_has_questid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_NotifyShareQuest_SC::has_questid() const {
  return _internal_has_questid();
}
inline void MSG_Ret_NotifyShareQuest_SC::clear_questid() {
  questid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_NotifyShareQuest_SC::_internal_questid() const {
  return questid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_NotifyShareQuest_SC::questid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_NotifyShareQuest_SC.questid)
  return _internal_questid();
}
inline void MSG_Ret_NotifyShareQuest_SC::_internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  questid_ = value;
}
inline void MSG_Ret_NotifyShareQuest_SC::set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_NotifyShareQuest_SC.questid)
}

// -------------------------------------------------------------------

// MSG_Req_AnswerShareQuest_CS

// optional uint32 questid = 1;
inline bool MSG_Req_AnswerShareQuest_CS::_internal_has_questid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_AnswerShareQuest_CS::has_questid() const {
  return _internal_has_questid();
}
inline void MSG_Req_AnswerShareQuest_CS::clear_questid() {
  questid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_AnswerShareQuest_CS::_internal_questid() const {
  return questid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_AnswerShareQuest_CS::questid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_AnswerShareQuest_CS.questid)
  return _internal_questid();
}
inline void MSG_Req_AnswerShareQuest_CS::_internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  questid_ = value;
}
inline void MSG_Req_AnswerShareQuest_CS::set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_AnswerShareQuest_CS.questid)
}

// optional bool accept = 2;
inline bool MSG_Req_AnswerShareQuest_CS::_internal_has_accept() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_AnswerShareQuest_CS::has_accept() const {
  return _internal_has_accept();
}
inline void MSG_Req_AnswerShareQuest_CS::clear_accept() {
  accept_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Req_AnswerShareQuest_CS::_internal_accept() const {
  return accept_;
}
inline bool MSG_Req_AnswerShareQuest_CS::accept() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_AnswerShareQuest_CS.accept)
  return _internal_accept();
}
inline void MSG_Req_AnswerShareQuest_CS::_internal_set_accept(bool value) {
  _has_bits_[0] |= 0x00000002u;
  accept_ = value;
}
inline void MSG_Req_AnswerShareQuest_CS::set_accept(bool value) {
  _internal_set_accept(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_AnswerShareQuest_CS.accept)
}

// -------------------------------------------------------------------

// MSG_Ret_AnswerShareQuest_SC

// optional uint32 code = 1;
inline bool MSG_Ret_AnswerShareQuest_SC::_internal_has_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_AnswerShareQuest_SC::has_code() const {
  return _internal_has_code();
}
inline void MSG_Ret_AnswerShareQuest_SC::clear_code() {
  code_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_AnswerShareQuest_SC::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_AnswerShareQuest_SC::code() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_AnswerShareQuest_SC.code)
  return _internal_code();
}
inline void MSG_Ret_AnswerShareQuest_SC::_internal_set_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  code_ = value;
}
inline void MSG_Ret_AnswerShareQuest_SC::set_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_AnswerShareQuest_SC.code)
}

// -------------------------------------------------------------------

// MSG_Ret_NotifyCountDown_SC

// optional bool bset = 1;
inline bool MSG_Ret_NotifyCountDown_SC::_internal_has_bset() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_NotifyCountDown_SC::has_bset() const {
  return _internal_has_bset();
}
inline void MSG_Ret_NotifyCountDown_SC::clear_bset() {
  bset_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_Ret_NotifyCountDown_SC::_internal_bset() const {
  return bset_;
}
inline bool MSG_Ret_NotifyCountDown_SC::bset() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_NotifyCountDown_SC.bset)
  return _internal_bset();
}
inline void MSG_Ret_NotifyCountDown_SC::_internal_set_bset(bool value) {
  _has_bits_[0] |= 0x00000001u;
  bset_ = value;
}
inline void MSG_Ret_NotifyCountDown_SC::set_bset(bool value) {
  _internal_set_bset(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_NotifyCountDown_SC.bset)
}

// optional uint32 delay = 2;
inline bool MSG_Ret_NotifyCountDown_SC::_internal_has_delay() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_NotifyCountDown_SC::has_delay() const {
  return _internal_has_delay();
}
inline void MSG_Ret_NotifyCountDown_SC::clear_delay() {
  delay_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_NotifyCountDown_SC::_internal_delay() const {
  return delay_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_NotifyCountDown_SC::delay() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_NotifyCountDown_SC.delay)
  return _internal_delay();
}
inline void MSG_Ret_NotifyCountDown_SC::_internal_set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  delay_ = value;
}
inline void MSG_Ret_NotifyCountDown_SC::set_delay(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_delay(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_NotifyCountDown_SC.delay)
}

// optional uint32 seconds = 3;
inline bool MSG_Ret_NotifyCountDown_SC::_internal_has_seconds() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_NotifyCountDown_SC::has_seconds() const {
  return _internal_has_seconds();
}
inline void MSG_Ret_NotifyCountDown_SC::clear_seconds() {
  seconds_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_NotifyCountDown_SC::_internal_seconds() const {
  return seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_NotifyCountDown_SC::seconds() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Ret_NotifyCountDown_SC.seconds)
  return _internal_seconds();
}
inline void MSG_Ret_NotifyCountDown_SC::_internal_set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  seconds_ = value;
}
inline void MSG_Ret_NotifyCountDown_SC::set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seconds(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Ret_NotifyCountDown_SC.seconds)
}

// -------------------------------------------------------------------

// MSG_NotifyClientOptional_SC

// optional uint32 type = 1;
inline bool MSG_NotifyClientOptional_SC::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_NotifyClientOptional_SC::has_type() const {
  return _internal_has_type();
}
inline void MSG_NotifyClientOptional_SC::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyClientOptional_SC::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_NotifyClientOptional_SC::type() const {
  // @@protoc_insertion_point(field_get:quest.MSG_NotifyClientOptional_SC.type)
  return _internal_type();
}
inline void MSG_NotifyClientOptional_SC::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void MSG_NotifyClientOptional_SC::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:quest.MSG_NotifyClientOptional_SC.type)
}

// optional string setting = 2;
inline bool MSG_NotifyClientOptional_SC::_internal_has_setting() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_NotifyClientOptional_SC::has_setting() const {
  return _internal_has_setting();
}
inline void MSG_NotifyClientOptional_SC::clear_setting() {
  setting_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_NotifyClientOptional_SC::setting() const {
  // @@protoc_insertion_point(field_get:quest.MSG_NotifyClientOptional_SC.setting)
  return _internal_setting();
}
inline void MSG_NotifyClientOptional_SC::set_setting(const std::string& value) {
  _internal_set_setting(value);
  // @@protoc_insertion_point(field_set:quest.MSG_NotifyClientOptional_SC.setting)
}
inline std::string* MSG_NotifyClientOptional_SC::mutable_setting() {
  // @@protoc_insertion_point(field_mutable:quest.MSG_NotifyClientOptional_SC.setting)
  return _internal_mutable_setting();
}
inline const std::string& MSG_NotifyClientOptional_SC::_internal_setting() const {
  return setting_.GetNoArena();
}
inline void MSG_NotifyClientOptional_SC::_internal_set_setting(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  setting_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_NotifyClientOptional_SC::set_setting(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  setting_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:quest.MSG_NotifyClientOptional_SC.setting)
}
inline void MSG_NotifyClientOptional_SC::set_setting(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  setting_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:quest.MSG_NotifyClientOptional_SC.setting)
}
inline void MSG_NotifyClientOptional_SC::set_setting(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  setting_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:quest.MSG_NotifyClientOptional_SC.setting)
}
inline std::string* MSG_NotifyClientOptional_SC::_internal_mutable_setting() {
  _has_bits_[0] |= 0x00000001u;
  return setting_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_NotifyClientOptional_SC::release_setting() {
  // @@protoc_insertion_point(field_release:quest.MSG_NotifyClientOptional_SC.setting)
  if (!_internal_has_setting()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return setting_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_NotifyClientOptional_SC::set_allocated_setting(std::string* setting) {
  if (setting != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  setting_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), setting);
  // @@protoc_insertion_point(field_set_allocated:quest.MSG_NotifyClientOptional_SC.setting)
}

// -------------------------------------------------------------------

// MSG_notifyQuestStateEffect_SC

// optional uint32 questid = 1;
inline bool MSG_notifyQuestStateEffect_SC::_internal_has_questid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_notifyQuestStateEffect_SC::has_questid() const {
  return _internal_has_questid();
}
inline void MSG_notifyQuestStateEffect_SC::clear_questid() {
  questid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_notifyQuestStateEffect_SC::_internal_questid() const {
  return questid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_notifyQuestStateEffect_SC::questid() const {
  // @@protoc_insertion_point(field_get:quest.MSG_notifyQuestStateEffect_SC.questid)
  return _internal_questid();
}
inline void MSG_notifyQuestStateEffect_SC::_internal_set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  questid_ = value;
}
inline void MSG_notifyQuestStateEffect_SC::set_questid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questid(value);
  // @@protoc_insertion_point(field_set:quest.MSG_notifyQuestStateEffect_SC.questid)
}

// optional uint32 state = 2;
inline bool MSG_notifyQuestStateEffect_SC::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_notifyQuestStateEffect_SC::has_state() const {
  return _internal_has_state();
}
inline void MSG_notifyQuestStateEffect_SC::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_notifyQuestStateEffect_SC::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_notifyQuestStateEffect_SC::state() const {
  // @@protoc_insertion_point(field_get:quest.MSG_notifyQuestStateEffect_SC.state)
  return _internal_state();
}
inline void MSG_notifyQuestStateEffect_SC::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  state_ = value;
}
inline void MSG_notifyQuestStateEffect_SC::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:quest.MSG_notifyQuestStateEffect_SC.state)
}

// -------------------------------------------------------------------

// MSG_Req_CommitYQDData_CS

// optional uint32 step = 1;
inline bool MSG_Req_CommitYQDData_CS::_internal_has_step() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_CommitYQDData_CS::has_step() const {
  return _internal_has_step();
}
inline void MSG_Req_CommitYQDData_CS::clear_step() {
  step_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_CommitYQDData_CS::_internal_step() const {
  return step_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_CommitYQDData_CS::step() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_CommitYQDData_CS.step)
  return _internal_step();
}
inline void MSG_Req_CommitYQDData_CS::_internal_set_step(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  step_ = value;
}
inline void MSG_Req_CommitYQDData_CS::set_step(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_step(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_CommitYQDData_CS.step)
}

// optional uint32 success = 2;
inline bool MSG_Req_CommitYQDData_CS::_internal_has_success() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_CommitYQDData_CS::has_success() const {
  return _internal_has_success();
}
inline void MSG_Req_CommitYQDData_CS::clear_success() {
  success_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_CommitYQDData_CS::_internal_success() const {
  return success_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_CommitYQDData_CS::success() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_CommitYQDData_CS.success)
  return _internal_success();
}
inline void MSG_Req_CommitYQDData_CS::_internal_set_success(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  success_ = value;
}
inline void MSG_Req_CommitYQDData_CS::set_success(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_CommitYQDData_CS.success)
}

// optional uint32 type = 3;
inline bool MSG_Req_CommitYQDData_CS::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Req_CommitYQDData_CS::has_type() const {
  return _internal_has_type();
}
inline void MSG_Req_CommitYQDData_CS::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_CommitYQDData_CS::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_CommitYQDData_CS::type() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_CommitYQDData_CS.type)
  return _internal_type();
}
inline void MSG_Req_CommitYQDData_CS::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
}
inline void MSG_Req_CommitYQDData_CS::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_CommitYQDData_CS.type)
}

// -------------------------------------------------------------------

// MSG_Req_PlayYQDRetry_CS

// optional uint32 type = 1;
inline bool MSG_Req_PlayYQDRetry_CS::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_PlayYQDRetry_CS::has_type() const {
  return _internal_has_type();
}
inline void MSG_Req_PlayYQDRetry_CS::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_PlayYQDRetry_CS::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_PlayYQDRetry_CS::type() const {
  // @@protoc_insertion_point(field_get:quest.MSG_Req_PlayYQDRetry_CS.type)
  return _internal_type();
}
inline void MSG_Req_PlayYQDRetry_CS::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
}
inline void MSG_Req_PlayYQDRetry_CS::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:quest.MSG_Req_PlayYQDRetry_CS.type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace quest

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_quest_2eproto
