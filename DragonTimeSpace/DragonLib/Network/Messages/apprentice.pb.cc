// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apprentice.proto

#include "apprentice.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_apprentice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientSetInfo_apprentice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_apprentice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MasterApprenticeInfo_apprentice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_apprentice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SearchUserInfo_apprentice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_apprentice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserInfo_apprentice_2eproto;
namespace apprentice {
class UserInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UserInfo> _instance;
} _UserInfo_default_instance_;
class SearchUserInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SearchUserInfo> _instance;
} _SearchUserInfo_default_instance_;
class MasterApprenticeInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MasterApprenticeInfo> _instance;
} _MasterApprenticeInfo_default_instance_;
class MSG_Req_MasterApprenticeInfo_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_MasterApprenticeInfo_CS> _instance;
} _MSG_Req_MasterApprenticeInfo_CS_default_instance_;
class MSG_Ret_MasterApprenticeInfo_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_MasterApprenticeInfo_SC> _instance;
} _MSG_Ret_MasterApprenticeInfo_SC_default_instance_;
class MSG_Req_ApprenticeList_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_ApprenticeList_CS> _instance;
} _MSG_Req_ApprenticeList_CS_default_instance_;
class MSG_Ret_ApprenticeList_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_ApprenticeList_SC> _instance;
} _MSG_Ret_ApprenticeList_SC_default_instance_;
class MSG_Req_MasterApprenticeCount_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_MasterApprenticeCount_CS> _instance;
} _MSG_Req_MasterApprenticeCount_CS_default_instance_;
class MSG_Ret_MasterApprenticeCount_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_MasterApprenticeCount_SC> _instance;
} _MSG_Ret_MasterApprenticeCount_SC_default_instance_;
class MSG_Req_TakeMaster_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_TakeMaster_CS> _instance;
} _MSG_Req_TakeMaster_CS_default_instance_;
class MSG_Ret_ApplyTakeMaster_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_ApplyTakeMaster_SC> _instance;
} _MSG_Ret_ApplyTakeMaster_SC_default_instance_;
class MSG_Req_AnswerTakeMaster_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_AnswerTakeMaster_CS> _instance;
} _MSG_Req_AnswerTakeMaster_CS_default_instance_;
class MSG_Ret_TakeMaster_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_TakeMaster_SC> _instance;
} _MSG_Ret_TakeMaster_SC_default_instance_;
class MSG_Req_TakeApprentice_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_TakeApprentice_CS> _instance;
} _MSG_Req_TakeApprentice_CS_default_instance_;
class MSG_Ret_ApplyTakeApprentice_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_ApplyTakeApprentice_SC> _instance;
} _MSG_Ret_ApplyTakeApprentice_SC_default_instance_;
class MSG_Req_AnswerTakeApprentice_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_AnswerTakeApprentice_CS> _instance;
} _MSG_Req_AnswerTakeApprentice_CS_default_instance_;
class MSG_Ret_TakeApprentice_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_TakeApprentice_SC> _instance;
} _MSG_Ret_TakeApprentice_SC_default_instance_;
class MSG_Req_StartTakeApprentice_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_StartTakeApprentice_CS> _instance;
} _MSG_Req_StartTakeApprentice_CS_default_instance_;
class MSG_Ret_StartTakeApprentice_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_StartTakeApprentice_SC> _instance;
} _MSG_Ret_StartTakeApprentice_SC_default_instance_;
class MSG_Req_StartTakeMaster_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_StartTakeMaster_CS> _instance;
} _MSG_Req_StartTakeMaster_CS_default_instance_;
class MSG_Ret_StartTakeMaster_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_StartTakeMaster_SC> _instance;
} _MSG_Ret_StartTakeMaster_SC_default_instance_;
class MSG_Req_unpublishTakeMaster_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_unpublishTakeMaster_CS> _instance;
} _MSG_Req_unpublishTakeMaster_CS_default_instance_;
class MSG_Ret_unpublishTakeMaster_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_unpublishTakeMaster_SC> _instance;
} _MSG_Ret_unpublishTakeMaster_SC_default_instance_;
class MSG_Req_SearchMaster_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_SearchMaster_CS> _instance;
} _MSG_Req_SearchMaster_CS_default_instance_;
class MSG_Ret_SearchMaster_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_SearchMaster_SC> _instance;
} _MSG_Ret_SearchMaster_SC_default_instance_;
class MSG_Req_SearchApprentice_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_SearchApprentice_CS> _instance;
} _MSG_Req_SearchApprentice_CS_default_instance_;
class MSG_Ret_SearchApprentice_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_SearchApprentice_SC> _instance;
} _MSG_Ret_SearchApprentice_SC_default_instance_;
class MSG_Req_UserApprenticeInfo_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_UserApprenticeInfo_CS> _instance;
} _MSG_Req_UserApprenticeInfo_CS_default_instance_;
class MSG_Ret_UserApprenticeInfo_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_UserApprenticeInfo_SC> _instance;
} _MSG_Ret_UserApprenticeInfo_SC_default_instance_;
class MSG_Req_preQuitApprentice_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_preQuitApprentice_CS> _instance;
} _MSG_Req_preQuitApprentice_CS_default_instance_;
class MSG_Ret_preQuitApprentice_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_preQuitApprentice_SC> _instance;
} _MSG_Ret_preQuitApprentice_SC_default_instance_;
class MSG_Req_applyQuitApprentice_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_applyQuitApprentice_CS> _instance;
} _MSG_Req_applyQuitApprentice_CS_default_instance_;
class MSG_Ret_applyQuitApprentice_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_applyQuitApprentice_SC> _instance;
} _MSG_Ret_applyQuitApprentice_SC_default_instance_;
class MSG_Req_unQuitApprentice_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_unQuitApprentice_CS> _instance;
} _MSG_Req_unQuitApprentice_CS_default_instance_;
class MSG_Ret_unQuitApprentice_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_unQuitApprentice_SC> _instance;
} _MSG_Ret_unQuitApprentice_SC_default_instance_;
class MSG_Req_FinishApprentice_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_FinishApprentice_CS> _instance;
} _MSG_Req_FinishApprentice_CS_default_instance_;
class MSG_Ret_FinishApprentice_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_FinishApprentice_SC> _instance;
} _MSG_Ret_FinishApprentice_SC_default_instance_;
class MSG_Ret_ApprenticeChange_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Ret_ApprenticeChange_SC> _instance;
} _MSG_Ret_ApprenticeChange_SC_default_instance_;
class MSG_Req_OperateClientDatas_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_Req_OperateClientDatas_CS> _instance;
} _MSG_Req_OperateClientDatas_CS_default_instance_;
class ClientSetInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientSetInfo> _instance;
} _ClientSetInfo_default_instance_;
class MassiveClientSetInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MassiveClientSetInfo> _instance;
} _MassiveClientSetInfo_default_instance_;
}  // namespace apprentice
static void InitDefaultsscc_info_ClientSetInfo_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_ClientSetInfo_default_instance_;
    new (ptr) ::apprentice::ClientSetInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::ClientSetInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientSetInfo_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClientSetInfo_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_AnswerTakeApprentice_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_AnswerTakeApprentice_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_AnswerTakeApprentice_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_AnswerTakeApprentice_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_AnswerTakeApprentice_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_AnswerTakeApprentice_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_AnswerTakeMaster_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_AnswerTakeMaster_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_AnswerTakeMaster_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_AnswerTakeMaster_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_AnswerTakeMaster_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_AnswerTakeMaster_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_ApprenticeList_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_ApprenticeList_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_ApprenticeList_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_ApprenticeList_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_ApprenticeList_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_ApprenticeList_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_FinishApprentice_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_FinishApprentice_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_FinishApprentice_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_FinishApprentice_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_FinishApprentice_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_FinishApprentice_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_MasterApprenticeCount_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_MasterApprenticeCount_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_MasterApprenticeCount_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_MasterApprenticeCount_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_MasterApprenticeCount_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_MasterApprenticeCount_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_MasterApprenticeInfo_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_MasterApprenticeInfo_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_MasterApprenticeInfo_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_MasterApprenticeInfo_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_MasterApprenticeInfo_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_MasterApprenticeInfo_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_OperateClientDatas_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_OperateClientDatas_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_OperateClientDatas_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_OperateClientDatas_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_OperateClientDatas_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_OperateClientDatas_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_SearchApprentice_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_SearchApprentice_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_SearchApprentice_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_SearchApprentice_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_SearchApprentice_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_SearchApprentice_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_SearchMaster_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_SearchMaster_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_SearchMaster_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_SearchMaster_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_SearchMaster_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_SearchMaster_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_StartTakeApprentice_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_StartTakeApprentice_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_StartTakeApprentice_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_StartTakeApprentice_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_StartTakeApprentice_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_StartTakeApprentice_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_StartTakeMaster_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_StartTakeMaster_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_StartTakeMaster_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_StartTakeMaster_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_StartTakeMaster_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_StartTakeMaster_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_TakeApprentice_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_TakeApprentice_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_TakeApprentice_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_TakeApprentice_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_TakeApprentice_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_TakeApprentice_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_TakeMaster_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_TakeMaster_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_TakeMaster_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_TakeMaster_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_TakeMaster_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_TakeMaster_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_UserApprenticeInfo_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_UserApprenticeInfo_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_UserApprenticeInfo_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_UserApprenticeInfo_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_UserApprenticeInfo_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_UserApprenticeInfo_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_applyQuitApprentice_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_applyQuitApprentice_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_applyQuitApprentice_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_applyQuitApprentice_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_applyQuitApprentice_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_applyQuitApprentice_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_preQuitApprentice_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_preQuitApprentice_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_preQuitApprentice_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_preQuitApprentice_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_preQuitApprentice_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_preQuitApprentice_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_unQuitApprentice_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_unQuitApprentice_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_unQuitApprentice_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_unQuitApprentice_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_unQuitApprentice_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_unQuitApprentice_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Req_unpublishTakeMaster_CS_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Req_unpublishTakeMaster_CS_default_instance_;
    new (ptr) ::apprentice::MSG_Req_unpublishTakeMaster_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Req_unpublishTakeMaster_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Req_unpublishTakeMaster_CS_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Req_unpublishTakeMaster_CS_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_ApplyTakeApprentice_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_ApplyTakeApprentice_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_ApplyTakeApprentice_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_ApplyTakeApprentice_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_Ret_ApplyTakeApprentice_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_Ret_ApplyTakeApprentice_SC_apprentice_2eproto}, {
      &scc_info_UserInfo_apprentice_2eproto.base,}};

static void InitDefaultsscc_info_MSG_Ret_ApplyTakeMaster_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_ApplyTakeMaster_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_ApplyTakeMaster_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_ApplyTakeMaster_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_Ret_ApplyTakeMaster_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_Ret_ApplyTakeMaster_SC_apprentice_2eproto}, {
      &scc_info_UserInfo_apprentice_2eproto.base,}};

static void InitDefaultsscc_info_MSG_Ret_ApprenticeChange_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_ApprenticeChange_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_ApprenticeChange_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_ApprenticeChange_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_ApprenticeChange_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_ApprenticeChange_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_ApprenticeList_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_ApprenticeList_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_ApprenticeList_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_ApprenticeList_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_Ret_ApprenticeList_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_Ret_ApprenticeList_SC_apprentice_2eproto}, {
      &scc_info_UserInfo_apprentice_2eproto.base,}};

static void InitDefaultsscc_info_MSG_Ret_FinishApprentice_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_FinishApprentice_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_FinishApprentice_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_FinishApprentice_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_FinishApprentice_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_FinishApprentice_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_MasterApprenticeCount_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_MasterApprenticeCount_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_MasterApprenticeCount_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_MasterApprenticeCount_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_MasterApprenticeCount_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_MasterApprenticeCount_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_MasterApprenticeInfo_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_MasterApprenticeInfo_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_MasterApprenticeInfo_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_MasterApprenticeInfo_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_Ret_MasterApprenticeInfo_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_Ret_MasterApprenticeInfo_SC_apprentice_2eproto}, {
      &scc_info_MasterApprenticeInfo_apprentice_2eproto.base,}};

static void InitDefaultsscc_info_MSG_Ret_SearchApprentice_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_SearchApprentice_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_SearchApprentice_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_SearchApprentice_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_Ret_SearchApprentice_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_Ret_SearchApprentice_SC_apprentice_2eproto}, {
      &scc_info_SearchUserInfo_apprentice_2eproto.base,}};

static void InitDefaultsscc_info_MSG_Ret_SearchMaster_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_SearchMaster_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_SearchMaster_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_SearchMaster_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_Ret_SearchMaster_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_Ret_SearchMaster_SC_apprentice_2eproto}, {
      &scc_info_SearchUserInfo_apprentice_2eproto.base,}};

static void InitDefaultsscc_info_MSG_Ret_StartTakeApprentice_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_StartTakeApprentice_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_StartTakeApprentice_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_StartTakeApprentice_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_StartTakeApprentice_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_StartTakeApprentice_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_StartTakeMaster_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_StartTakeMaster_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_StartTakeMaster_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_StartTakeMaster_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_StartTakeMaster_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_StartTakeMaster_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_TakeApprentice_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_TakeApprentice_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_TakeApprentice_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_TakeApprentice_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_TakeApprentice_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_TakeApprentice_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_TakeMaster_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_TakeMaster_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_TakeMaster_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_TakeMaster_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_TakeMaster_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_TakeMaster_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_UserApprenticeInfo_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_UserApprenticeInfo_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_UserApprenticeInfo_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_UserApprenticeInfo_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_Ret_UserApprenticeInfo_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_Ret_UserApprenticeInfo_SC_apprentice_2eproto}, {
      &scc_info_SearchUserInfo_apprentice_2eproto.base,}};

static void InitDefaultsscc_info_MSG_Ret_applyQuitApprentice_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_applyQuitApprentice_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_applyQuitApprentice_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_applyQuitApprentice_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_applyQuitApprentice_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_applyQuitApprentice_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_preQuitApprentice_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_preQuitApprentice_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_preQuitApprentice_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_preQuitApprentice_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_preQuitApprentice_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_preQuitApprentice_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_unQuitApprentice_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_unQuitApprentice_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_unQuitApprentice_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_unQuitApprentice_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_unQuitApprentice_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_unQuitApprentice_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MSG_Ret_unpublishTakeMaster_SC_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MSG_Ret_unpublishTakeMaster_SC_default_instance_;
    new (ptr) ::apprentice::MSG_Ret_unpublishTakeMaster_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MSG_Ret_unpublishTakeMaster_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_Ret_unpublishTakeMaster_SC_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_Ret_unpublishTakeMaster_SC_apprentice_2eproto}, {}};

static void InitDefaultsscc_info_MassiveClientSetInfo_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MassiveClientSetInfo_default_instance_;
    new (ptr) ::apprentice::MassiveClientSetInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MassiveClientSetInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MassiveClientSetInfo_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MassiveClientSetInfo_apprentice_2eproto}, {
      &scc_info_ClientSetInfo_apprentice_2eproto.base,}};

static void InitDefaultsscc_info_MasterApprenticeInfo_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_MasterApprenticeInfo_default_instance_;
    new (ptr) ::apprentice::MasterApprenticeInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::MasterApprenticeInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MasterApprenticeInfo_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MasterApprenticeInfo_apprentice_2eproto}, {
      &scc_info_UserInfo_apprentice_2eproto.base,}};

static void InitDefaultsscc_info_SearchUserInfo_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_SearchUserInfo_default_instance_;
    new (ptr) ::apprentice::SearchUserInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::SearchUserInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SearchUserInfo_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SearchUserInfo_apprentice_2eproto}, {
      &scc_info_UserInfo_apprentice_2eproto.base,}};

static void InitDefaultsscc_info_UserInfo_apprentice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apprentice::_UserInfo_default_instance_;
    new (ptr) ::apprentice::UserInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apprentice::UserInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserInfo_apprentice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UserInfo_apprentice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_apprentice_2eproto[41];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_apprentice_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_apprentice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_apprentice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, charid_),
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, name_),
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, level_),
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, guildname_),
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, education_),
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, jointime_),
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, maxfight_),
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, career_),
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, quit_charid_),
  PROTOBUF_FIELD_OFFSET(::apprentice::UserInfo, quit_endtime_),
  2,
  0,
  3,
  1,
  4,
  5,
  6,
  8,
  7,
  9,
  PROTOBUF_FIELD_OFFSET(::apprentice::SearchUserInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::SearchUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::SearchUserInfo, data_),
  PROTOBUF_FIELD_OFFSET(::apprentice::SearchUserInfo, condition_online_),
  PROTOBUF_FIELD_OFFSET(::apprentice::SearchUserInfo, condition_attitude_),
  PROTOBUF_FIELD_OFFSET(::apprentice::SearchUserInfo, condition_notify_),
  1,
  2,
  3,
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MasterApprenticeInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MasterApprenticeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MasterApprenticeInfo, master_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MasterApprenticeInfo, apprentice_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_MasterApprenticeInfo_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_MasterApprenticeInfo_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeInfo_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeInfo_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeInfo_SC, data_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeInfo_SC, taking_master_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_ApprenticeList_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_ApprenticeList_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApprenticeList_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApprenticeList_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApprenticeList_SC, data_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApprenticeList_SC, taking_apprentice_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_MasterApprenticeCount_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_MasterApprenticeCount_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeCount_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeCount_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeCount_SC, max_master_count_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeCount_SC, cur_master_count_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeCount_SC, max_apprentice_count_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeCount_SC, cur_apprentice_count_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_MasterApprenticeCount_SC, punish_endtime_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_TakeMaster_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_TakeMaster_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_TakeMaster_CS, charid_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApplyTakeMaster_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApplyTakeMaster_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApplyTakeMaster_SC, applyer_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_AnswerTakeMaster_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_AnswerTakeMaster_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_AnswerTakeMaster_CS, agree_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_AnswerTakeMaster_CS, applyer_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeMaster_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeMaster_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeMaster_SC, agree_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeMaster_SC, retcode_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeMaster_SC, clear_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeMaster_SC, clear_charid_),
  0,
  1,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_TakeApprentice_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_TakeApprentice_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_TakeApprentice_CS, charid_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApplyTakeApprentice_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApplyTakeApprentice_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApplyTakeApprentice_SC, applyer_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_AnswerTakeApprentice_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_AnswerTakeApprentice_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_AnswerTakeApprentice_CS, agree_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_AnswerTakeApprentice_CS, applyer_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeApprentice_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeApprentice_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeApprentice_SC, agree_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeApprentice_SC, retcode_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeApprentice_SC, clear_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_TakeApprentice_SC, clear_charid_),
  0,
  1,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_StartTakeApprentice_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_StartTakeApprentice_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_StartTakeApprentice_CS, condition_online_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_StartTakeApprentice_CS, condition_attitude_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_StartTakeApprentice_CS, condition_notify_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_StartTakeApprentice_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_StartTakeApprentice_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_StartTakeApprentice_SC, retcode_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_StartTakeMaster_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_StartTakeMaster_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_StartTakeMaster_CS, condition_online_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_StartTakeMaster_CS, condition_attitude_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_StartTakeMaster_CS, condition_notify_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_StartTakeMaster_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_StartTakeMaster_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_StartTakeMaster_SC, retcode_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_unpublishTakeMaster_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_unpublishTakeMaster_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_unpublishTakeMaster_CS, pub_type_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_unpublishTakeMaster_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_unpublishTakeMaster_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_unpublishTakeMaster_SC, pub_type_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_unpublishTakeMaster_SC, retcode_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_SearchMaster_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_SearchMaster_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_SearchMaster_CS, condition_online_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_SearchMaster_CS, condition_attitude_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_SearchMaster_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_SearchMaster_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_SearchMaster_SC, data_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_SearchApprentice_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_SearchApprentice_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_SearchApprentice_CS, condition_online_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_SearchApprentice_CS, condition_attitude_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_SearchApprentice_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_SearchApprentice_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_SearchApprentice_SC, data_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_UserApprenticeInfo_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_UserApprenticeInfo_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_UserApprenticeInfo_CS, charid_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_UserApprenticeInfo_CS, pub_type_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_UserApprenticeInfo_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_UserApprenticeInfo_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_UserApprenticeInfo_SC, data_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_UserApprenticeInfo_SC, pub_type_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_preQuitApprentice_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_preQuitApprentice_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_preQuitApprentice_CS, targetid_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_preQuitApprentice_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_preQuitApprentice_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_preQuitApprentice_SC, targetid_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_preQuitApprentice_SC, retcode_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_preQuitApprentice_SC, quittime_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_preQuitApprentice_SC, offlinetime_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_preQuitApprentice_SC, punishtime_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_applyQuitApprentice_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_applyQuitApprentice_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_applyQuitApprentice_CS, targetid_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_applyQuitApprentice_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_applyQuitApprentice_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_applyQuitApprentice_SC, targetid_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_applyQuitApprentice_SC, retcode_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_applyQuitApprentice_SC, quit_endtime_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_unQuitApprentice_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_unQuitApprentice_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_unQuitApprentice_CS, targetid_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_unQuitApprentice_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_unQuitApprentice_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_unQuitApprentice_SC, targetid_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_unQuitApprentice_SC, retcode_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_FinishApprentice_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_FinishApprentice_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_FinishApprentice_CS, apprentid_),
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_FinishApprentice_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_FinishApprentice_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_FinishApprentice_SC, retcode_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_FinishApprentice_SC, apprentid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApprenticeChange_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApprenticeChange_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApprenticeChange_SC, changetype_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Ret_ApprenticeChange_SC, otherid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_OperateClientDatas_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_OperateClientDatas_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_OperateClientDatas_CS, op_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_OperateClientDatas_CS, key_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_OperateClientDatas_CS, value_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_OperateClientDatas_CS, retcode_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MSG_Req_OperateClientDatas_CS, type_),
  2,
  0,
  1,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::apprentice::ClientSetInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::ClientSetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::ClientSetInfo, key_),
  PROTOBUF_FIELD_OFFSET(::apprentice::ClientSetInfo, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apprentice::MassiveClientSetInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apprentice::MassiveClientSetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apprentice::MassiveClientSetInfo, data_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::apprentice::UserInfo)},
  { 25, 34, sizeof(::apprentice::SearchUserInfo)},
  { 38, 45, sizeof(::apprentice::MasterApprenticeInfo)},
  { 47, 52, sizeof(::apprentice::MSG_Req_MasterApprenticeInfo_CS)},
  { 52, 59, sizeof(::apprentice::MSG_Ret_MasterApprenticeInfo_SC)},
  { 61, 66, sizeof(::apprentice::MSG_Req_ApprenticeList_CS)},
  { 66, 73, sizeof(::apprentice::MSG_Ret_ApprenticeList_SC)},
  { 75, 80, sizeof(::apprentice::MSG_Req_MasterApprenticeCount_CS)},
  { 80, 90, sizeof(::apprentice::MSG_Ret_MasterApprenticeCount_SC)},
  { 95, 101, sizeof(::apprentice::MSG_Req_TakeMaster_CS)},
  { 102, 108, sizeof(::apprentice::MSG_Ret_ApplyTakeMaster_SC)},
  { 109, 116, sizeof(::apprentice::MSG_Req_AnswerTakeMaster_CS)},
  { 118, 127, sizeof(::apprentice::MSG_Ret_TakeMaster_SC)},
  { 131, 137, sizeof(::apprentice::MSG_Req_TakeApprentice_CS)},
  { 138, 144, sizeof(::apprentice::MSG_Ret_ApplyTakeApprentice_SC)},
  { 145, 152, sizeof(::apprentice::MSG_Req_AnswerTakeApprentice_CS)},
  { 154, 163, sizeof(::apprentice::MSG_Ret_TakeApprentice_SC)},
  { 167, 175, sizeof(::apprentice::MSG_Req_StartTakeApprentice_CS)},
  { 178, 184, sizeof(::apprentice::MSG_Ret_StartTakeApprentice_SC)},
  { 185, 193, sizeof(::apprentice::MSG_Req_StartTakeMaster_CS)},
  { 196, 202, sizeof(::apprentice::MSG_Ret_StartTakeMaster_SC)},
  { 203, 209, sizeof(::apprentice::MSG_Req_unpublishTakeMaster_CS)},
  { 210, 217, sizeof(::apprentice::MSG_Ret_unpublishTakeMaster_SC)},
  { 219, 226, sizeof(::apprentice::MSG_Req_SearchMaster_CS)},
  { 228, 234, sizeof(::apprentice::MSG_Ret_SearchMaster_SC)},
  { 235, 242, sizeof(::apprentice::MSG_Req_SearchApprentice_CS)},
  { 244, 250, sizeof(::apprentice::MSG_Ret_SearchApprentice_SC)},
  { 251, 258, sizeof(::apprentice::MSG_Req_UserApprenticeInfo_CS)},
  { 260, 267, sizeof(::apprentice::MSG_Ret_UserApprenticeInfo_SC)},
  { 269, 275, sizeof(::apprentice::MSG_Req_preQuitApprentice_CS)},
  { 276, 286, sizeof(::apprentice::MSG_Ret_preQuitApprentice_SC)},
  { 291, 297, sizeof(::apprentice::MSG_Req_applyQuitApprentice_CS)},
  { 298, 306, sizeof(::apprentice::MSG_Ret_applyQuitApprentice_SC)},
  { 309, 315, sizeof(::apprentice::MSG_Req_unQuitApprentice_CS)},
  { 316, 323, sizeof(::apprentice::MSG_Ret_unQuitApprentice_SC)},
  { 325, 331, sizeof(::apprentice::MSG_Req_FinishApprentice_CS)},
  { 332, 339, sizeof(::apprentice::MSG_Ret_FinishApprentice_SC)},
  { 341, 348, sizeof(::apprentice::MSG_Ret_ApprenticeChange_SC)},
  { 350, 360, sizeof(::apprentice::MSG_Req_OperateClientDatas_CS)},
  { 365, 372, sizeof(::apprentice::ClientSetInfo)},
  { 374, 380, sizeof(::apprentice::MassiveClientSetInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_UserInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_SearchUserInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MasterApprenticeInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_MasterApprenticeInfo_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_MasterApprenticeInfo_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_ApprenticeList_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_ApprenticeList_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_MasterApprenticeCount_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_MasterApprenticeCount_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_TakeMaster_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_ApplyTakeMaster_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_AnswerTakeMaster_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_TakeMaster_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_TakeApprentice_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_ApplyTakeApprentice_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_AnswerTakeApprentice_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_TakeApprentice_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_StartTakeApprentice_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_StartTakeApprentice_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_StartTakeMaster_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_StartTakeMaster_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_unpublishTakeMaster_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_unpublishTakeMaster_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_SearchMaster_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_SearchMaster_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_SearchApprentice_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_SearchApprentice_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_UserApprenticeInfo_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_UserApprenticeInfo_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_preQuitApprentice_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_preQuitApprentice_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_applyQuitApprentice_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_applyQuitApprentice_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_unQuitApprentice_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_unQuitApprentice_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_FinishApprentice_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_FinishApprentice_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Ret_ApprenticeChange_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MSG_Req_OperateClientDatas_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_ClientSetInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apprentice::_MassiveClientSetInfo_default_instance_),
};

const char descriptor_table_protodef_apprentice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020apprentice.proto\022\napprentice\"\274\001\n\010UserI"
  "nfo\022\016\n\006charid\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\r\n\005lev"
  "el\030\003 \001(\r\022\021\n\tguildname\030\004 \001(\t\022\021\n\teducation"
  "\030\005 \001(\r\022\020\n\010jointime\030\006 \001(\r\022\020\n\010maxfight\030\007 \001"
  "(\r\022\016\n\006career\030\010 \001(\r\022\023\n\013quit_charid\030\t \001(\004\022"
  "\024\n\014quit_endtime\030\n \001(\r\"\204\001\n\016SearchUserInfo"
  "\022\"\n\004data\030\001 \001(\0132\024.apprentice.UserInfo\022\030\n\020"
  "condition_online\030\002 \001(\r\022\032\n\022condition_atti"
  "tude\030\003 \001(\r\022\030\n\020condition_notify\030\004 \001(\t\"f\n\024"
  "MasterApprenticeInfo\022$\n\006master\030\001 \001(\0132\024.a"
  "pprentice.UserInfo\022(\n\napprentice\030\002 \003(\0132\024"
  ".apprentice.UserInfo\"!\n\037MSG_Req_MasterAp"
  "prenticeInfo_CS\"h\n\037MSG_Ret_MasterApprent"
  "iceInfo_SC\022.\n\004data\030\001 \003(\0132 .apprentice.Ma"
  "sterApprenticeInfo\022\025\n\rtaking_master\030\002 \001("
  "\010\"\033\n\031MSG_Req_ApprenticeList_CS\"Z\n\031MSG_Re"
  "t_ApprenticeList_SC\022\"\n\004data\030\001 \003(\0132\024.appr"
  "entice.UserInfo\022\031\n\021taking_apprentice\030\002 \001"
  "(\010\"\"\n MSG_Req_MasterApprenticeCount_CS\"\260"
  "\001\n MSG_Ret_MasterApprenticeCount_SC\022\030\n\020m"
  "ax_master_count\030\001 \001(\r\022\033\n\020cur_master_coun"
  "t\030\002 \001(\r:\0010\022\034\n\024max_apprentice_count\030\003 \001(\r"
  "\022\037\n\024cur_apprentice_count\030\004 \001(\r:\0010\022\026\n\016pun"
  "ish_endtime\030\005 \001(\r\"\'\n\025MSG_Req_TakeMaster_"
  "CS\022\016\n\006charid\030\001 \001(\004\"C\n\032MSG_Ret_ApplyTakeM"
  "aster_SC\022%\n\007applyer\030\001 \001(\0132\024.apprentice.U"
  "serInfo\"=\n\033MSG_Req_AnswerTakeMaster_CS\022\r"
  "\n\005agree\030\001 \001(\010\022\017\n\007applyer\030\002 \001(\004\"b\n\025MSG_Re"
  "t_TakeMaster_SC\022\r\n\005agree\030\001 \001(\010\022\017\n\007retcod"
  "e\030\002 \001(\r\022\023\n\005clear\030\003 \001(\010:\004true\022\024\n\014clear_ch"
  "arid\030\004 \001(\004\"+\n\031MSG_Req_TakeApprentice_CS\022"
  "\016\n\006charid\030\001 \001(\004\"G\n\036MSG_Ret_ApplyTakeAppr"
  "entice_SC\022%\n\007applyer\030\001 \001(\0132\024.apprentice."
  "UserInfo\"A\n\037MSG_Req_AnswerTakeApprentice"
  "_CS\022\r\n\005agree\030\001 \001(\010\022\017\n\007applyer\030\002 \001(\004\"f\n\031M"
  "SG_Ret_TakeApprentice_SC\022\r\n\005agree\030\001 \001(\010\022"
  "\017\n\007retcode\030\002 \001(\r\022\023\n\005clear\030\003 \001(\010:\004true\022\024\n"
  "\014clear_charid\030\004 \001(\004\"p\n\036MSG_Req_StartTake"
  "Apprentice_CS\022\030\n\020condition_online\030\001 \001(\r\022"
  "\032\n\022condition_attitude\030\002 \001(\r\022\030\n\020condition"
  "_notify\030\003 \001(\t\"1\n\036MSG_Ret_StartTakeAppren"
  "tice_SC\022\017\n\007retcode\030\001 \001(\r\"l\n\032MSG_Req_Star"
  "tTakeMaster_CS\022\030\n\020condition_online\030\001 \001(\r"
  "\022\032\n\022condition_attitude\030\002 \001(\r\022\030\n\020conditio"
  "n_notify\030\003 \001(\t\"-\n\032MSG_Ret_StartTakeMaste"
  "r_SC\022\017\n\007retcode\030\001 \001(\r\"2\n\036MSG_Req_unpubli"
  "shTakeMaster_CS\022\020\n\010pub_type\030\001 \001(\r\"C\n\036MSG"
  "_Ret_unpublishTakeMaster_SC\022\020\n\010pub_type\030"
  "\001 \001(\r\022\017\n\007retcode\030\002 \001(\r\"O\n\027MSG_Req_Search"
  "Master_CS\022\030\n\020condition_online\030\001 \001(\r\022\032\n\022c"
  "ondition_attitude\030\002 \001(\r\"C\n\027MSG_Ret_Searc"
  "hMaster_SC\022(\n\004data\030\001 \003(\0132\032.apprentice.Se"
  "archUserInfo\"S\n\033MSG_Req_SearchApprentice"
  "_CS\022\030\n\020condition_online\030\001 \001(\r\022\032\n\022conditi"
  "on_attitude\030\002 \001(\r\"G\n\033MSG_Ret_SearchAppre"
  "ntice_SC\022(\n\004data\030\001 \003(\0132\032.apprentice.Sear"
  "chUserInfo\"A\n\035MSG_Req_UserApprenticeInfo"
  "_CS\022\016\n\006charid\030\001 \001(\004\022\020\n\010pub_type\030\002 \001(\r\"[\n"
  "\035MSG_Ret_UserApprenticeInfo_SC\022(\n\004data\030\001"
  " \001(\0132\032.apprentice.SearchUserInfo\022\020\n\010pub_"
  "type\030\002 \001(\r\"0\n\034MSG_Req_preQuitApprentice_"
  "CS\022\020\n\010targetid\030\001 \001(\004\"|\n\034MSG_Ret_preQuitA"
  "pprentice_SC\022\020\n\010targetid\030\001 \001(\004\022\017\n\007retcod"
  "e\030\002 \001(\r\022\020\n\010quittime\030\003 \001(\r\022\023\n\013offlinetime"
  "\030\004 \001(\r\022\022\n\npunishtime\030\005 \001(\r\"2\n\036MSG_Req_ap"
  "plyQuitApprentice_CS\022\020\n\010targetid\030\001 \001(\004\"Y"
  "\n\036MSG_Ret_applyQuitApprentice_SC\022\020\n\010targ"
  "etid\030\001 \001(\004\022\017\n\007retcode\030\002 \001(\r\022\024\n\014quit_endt"
  "ime\030\003 \001(\r\"/\n\033MSG_Req_unQuitApprentice_CS"
  "\022\020\n\010targetid\030\001 \001(\004\"@\n\033MSG_Ret_unQuitAppr"
  "entice_SC\022\020\n\010targetid\030\001 \001(\004\022\017\n\007retcode\030\002"
  " \001(\r\"0\n\033MSG_Req_FinishApprentice_CS\022\021\n\ta"
  "pprentid\030\001 \001(\004\"A\n\033MSG_Ret_FinishApprenti"
  "ce_SC\022\017\n\007retcode\030\001 \001(\r\022\021\n\tapprentid\030\002 \001("
  "\004\"Z\n\033MSG_Ret_ApprenticeChange_SC\022*\n\nchan"
  "getype\030\001 \001(\0162\026.apprentice.ChangeType\022\017\n\007"
  "otherid\030\002 \001(\t\"f\n\035MSG_Req_OperateClientDa"
  "tas_CS\022\n\n\002op\030\001 \001(\r\022\013\n\003key\030\002 \001(\t\022\r\n\005value"
  "\030\003 \001(\t\022\017\n\007retcode\030\004 \001(\r\022\014\n\004type\030\005 \001(\r\"+\n"
  "\rClientSetInfo\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
  "(\r\"\?\n\024MassiveClientSetInfo\022\'\n\004data\030\001 \003(\013"
  "2\031.apprentice.ClientSetInfo*;\n\nChangeTyp"
  "e\022\021\n\rBE_MY_APPRENT\020\001\022\020\n\014BE_MY_MASTER\020\002\022\010"
  "\n\004QUIT\020\003"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_apprentice_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_apprentice_2eproto_sccs[41] = {
  &scc_info_ClientSetInfo_apprentice_2eproto.base,
  &scc_info_MSG_Req_AnswerTakeApprentice_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_AnswerTakeMaster_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_ApprenticeList_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_FinishApprentice_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_MasterApprenticeCount_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_MasterApprenticeInfo_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_OperateClientDatas_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_SearchApprentice_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_SearchMaster_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_StartTakeApprentice_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_StartTakeMaster_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_TakeApprentice_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_TakeMaster_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_UserApprenticeInfo_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_applyQuitApprentice_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_preQuitApprentice_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_unQuitApprentice_CS_apprentice_2eproto.base,
  &scc_info_MSG_Req_unpublishTakeMaster_CS_apprentice_2eproto.base,
  &scc_info_MSG_Ret_ApplyTakeApprentice_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_ApplyTakeMaster_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_ApprenticeChange_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_ApprenticeList_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_FinishApprentice_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_MasterApprenticeCount_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_MasterApprenticeInfo_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_SearchApprentice_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_SearchMaster_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_StartTakeApprentice_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_StartTakeMaster_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_TakeApprentice_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_TakeMaster_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_UserApprenticeInfo_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_applyQuitApprentice_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_preQuitApprentice_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_unQuitApprentice_SC_apprentice_2eproto.base,
  &scc_info_MSG_Ret_unpublishTakeMaster_SC_apprentice_2eproto.base,
  &scc_info_MassiveClientSetInfo_apprentice_2eproto.base,
  &scc_info_MasterApprenticeInfo_apprentice_2eproto.base,
  &scc_info_SearchUserInfo_apprentice_2eproto.base,
  &scc_info_UserInfo_apprentice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_apprentice_2eproto_once;
static bool descriptor_table_apprentice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_apprentice_2eproto = {
  &descriptor_table_apprentice_2eproto_initialized, descriptor_table_protodef_apprentice_2eproto, "apprentice.proto", 3328,
  &descriptor_table_apprentice_2eproto_once, descriptor_table_apprentice_2eproto_sccs, descriptor_table_apprentice_2eproto_deps, 41, 0,
  schemas, file_default_instances, TableStruct_apprentice_2eproto::offsets,
  file_level_metadata_apprentice_2eproto, 41, file_level_enum_descriptors_apprentice_2eproto, file_level_service_descriptors_apprentice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_apprentice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_apprentice_2eproto)), true);
namespace apprentice {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChangeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_apprentice_2eproto);
  return file_level_enum_descriptors_apprentice_2eproto[0];
}
bool ChangeType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void UserInfo::InitAsDefaultInstance() {
}
class UserInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<UserInfo>()._has_bits_);
  static void set_has_charid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_level(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_guildname(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_education(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_jointime(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_maxfight(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_career(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_quit_charid(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_quit_endtime(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

UserInfo::UserInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  guildname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_guildname()) {
    guildname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  ::memcpy(&charid_, &from.charid_,
    static_cast<size_t>(reinterpret_cast<char*>(&quit_endtime_) -
    reinterpret_cast<char*>(&charid_)) + sizeof(quit_endtime_));
  // @@protoc_insertion_point(copy_constructor:apprentice.UserInfo)
}

void UserInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UserInfo_apprentice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guildname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&charid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quit_endtime_) -
      reinterpret_cast<char*>(&charid_)) + sizeof(quit_endtime_));
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:apprentice.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guildname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserInfo& UserInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UserInfo_apprentice_2eproto.base);
  return *internal_default_instance();
}


void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.UserInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      guildname_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&charid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&quit_charid_) -
        reinterpret_cast<char*>(&charid_)) + sizeof(quit_charid_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&career_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&quit_endtime_) -
        reinterpret_cast<char*>(&career_)) + sizeof(quit_endtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* UserInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 charid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_charid(&has_bits);
          charid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apprentice.UserInfo.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_level(&has_bits);
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string guildname = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_guildname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apprentice.UserInfo.guildname");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 education = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_education(&has_bits);
          education_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 jointime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_jointime(&has_bits);
          jointime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 maxfight = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_maxfight(&has_bits);
          maxfight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 career = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_career(&has_bits);
          career_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 quit_charid = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_quit_charid(&has_bits);
          quit_charid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 quit_endtime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_quit_endtime(&has_bits);
          quit_endtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UserInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.UserInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 charid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_charid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apprentice.UserInfo.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional uint32 level = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_level(), target);
  }

  // optional string guildname = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guildname().data(), static_cast<int>(this->_internal_guildname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apprentice.UserInfo.guildname");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_guildname(), target);
  }

  // optional uint32 education = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_education(), target);
  }

  // optional uint32 jointime = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_jointime(), target);
  }

  // optional uint32 maxfight = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_maxfight(), target);
  }

  // optional uint32 career = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_career(), target);
  }

  // optional uint64 quit_charid = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(9, this->_internal_quit_charid(), target);
  }

  // optional uint32 quit_endtime = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_quit_endtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.UserInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string guildname = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guildname());
    }

    // optional uint64 charid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_charid());
    }

    // optional uint32 level = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_level());
    }

    // optional uint32 education = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_education());
    }

    // optional uint32 jointime = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_jointime());
    }

    // optional uint32 maxfight = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_maxfight());
    }

    // optional uint64 quit_charid = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_quit_charid());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional uint32 career = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_career());
    }

    // optional uint32 quit_endtime = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_quit_endtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UserInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.UserInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      guildname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.guildname_);
    }
    if (cached_has_bits & 0x00000004u) {
      charid_ = from.charid_;
    }
    if (cached_has_bits & 0x00000008u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000010u) {
      education_ = from.education_;
    }
    if (cached_has_bits & 0x00000020u) {
      jointime_ = from.jointime_;
    }
    if (cached_has_bits & 0x00000040u) {
      maxfight_ = from.maxfight_;
    }
    if (cached_has_bits & 0x00000080u) {
      quit_charid_ = from.quit_charid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      career_ = from.career_;
    }
    if (cached_has_bits & 0x00000200u) {
      quit_endtime_ = from.quit_endtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guildname_.Swap(&other->guildname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(charid_, other->charid_);
  swap(level_, other->level_);
  swap(education_, other->education_);
  swap(jointime_, other->jointime_);
  swap(maxfight_, other->maxfight_);
  swap(quit_charid_, other->quit_charid_);
  swap(career_, other->career_);
  swap(quit_endtime_, other->quit_endtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SearchUserInfo::InitAsDefaultInstance() {
  ::apprentice::_SearchUserInfo_default_instance_._instance.get_mutable()->data_ = const_cast< ::apprentice::UserInfo*>(
      ::apprentice::UserInfo::internal_default_instance());
}
class SearchUserInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<SearchUserInfo>()._has_bits_);
  static const ::apprentice::UserInfo& data(const SearchUserInfo* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_condition_online(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_condition_attitude(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_condition_notify(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::apprentice::UserInfo&
SearchUserInfo::_Internal::data(const SearchUserInfo* msg) {
  return *msg->data_;
}
SearchUserInfo::SearchUserInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.SearchUserInfo)
}
SearchUserInfo::SearchUserInfo(const SearchUserInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  condition_notify_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_condition_notify()) {
    condition_notify_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.condition_notify_);
  }
  if (from._internal_has_data()) {
    data_ = new ::apprentice::UserInfo(*from.data_);
  } else {
    data_ = nullptr;
  }
  ::memcpy(&condition_online_, &from.condition_online_,
    static_cast<size_t>(reinterpret_cast<char*>(&condition_attitude_) -
    reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
  // @@protoc_insertion_point(copy_constructor:apprentice.SearchUserInfo)
}

void SearchUserInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SearchUserInfo_apprentice_2eproto.base);
  condition_notify_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&condition_attitude_) -
      reinterpret_cast<char*>(&data_)) + sizeof(condition_attitude_));
}

SearchUserInfo::~SearchUserInfo() {
  // @@protoc_insertion_point(destructor:apprentice.SearchUserInfo)
  SharedDtor();
}

void SearchUserInfo::SharedDtor() {
  condition_notify_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void SearchUserInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchUserInfo& SearchUserInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SearchUserInfo_apprentice_2eproto.base);
  return *internal_default_instance();
}


void SearchUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.SearchUserInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      condition_notify_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(data_ != nullptr);
      data_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&condition_online_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&condition_attitude_) -
        reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* SearchUserInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apprentice.UserInfo data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 condition_online = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_condition_online(&has_bits);
          condition_online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 condition_attitude = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_condition_attitude(&has_bits);
          condition_attitude_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string condition_notify = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_condition_notify();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apprentice.SearchUserInfo.condition_notify");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchUserInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.SearchUserInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apprentice.UserInfo data = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::data(this), target, stream);
  }

  // optional uint32 condition_online = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_condition_online(), target);
  }

  // optional uint32 condition_attitude = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_condition_attitude(), target);
  }

  // optional string condition_notify = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_condition_notify().data(), static_cast<int>(this->_internal_condition_notify().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apprentice.SearchUserInfo.condition_notify");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_condition_notify(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.SearchUserInfo)
  return target;
}

size_t SearchUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.SearchUserInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string condition_notify = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_condition_notify());
    }

    // optional .apprentice.UserInfo data = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_);
    }

    // optional uint32 condition_online = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_condition_online());
    }

    // optional uint32 condition_attitude = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_condition_attitude());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchUserInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.SearchUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchUserInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SearchUserInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.SearchUserInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.SearchUserInfo)
    MergeFrom(*source);
  }
}

void SearchUserInfo::MergeFrom(const SearchUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.SearchUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      condition_notify_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.condition_notify_);
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_data()->::apprentice::UserInfo::MergeFrom(from._internal_data());
    }
    if (cached_has_bits & 0x00000004u) {
      condition_online_ = from.condition_online_;
    }
    if (cached_has_bits & 0x00000008u) {
      condition_attitude_ = from.condition_attitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SearchUserInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.SearchUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchUserInfo::CopyFrom(const SearchUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.SearchUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchUserInfo::IsInitialized() const {
  return true;
}

void SearchUserInfo::InternalSwap(SearchUserInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  condition_notify_.Swap(&other->condition_notify_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(condition_online_, other->condition_online_);
  swap(condition_attitude_, other->condition_attitude_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchUserInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MasterApprenticeInfo::InitAsDefaultInstance() {
  ::apprentice::_MasterApprenticeInfo_default_instance_._instance.get_mutable()->master_ = const_cast< ::apprentice::UserInfo*>(
      ::apprentice::UserInfo::internal_default_instance());
}
class MasterApprenticeInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<MasterApprenticeInfo>()._has_bits_);
  static const ::apprentice::UserInfo& master(const MasterApprenticeInfo* msg);
  static void set_has_master(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::apprentice::UserInfo&
MasterApprenticeInfo::_Internal::master(const MasterApprenticeInfo* msg) {
  return *msg->master_;
}
MasterApprenticeInfo::MasterApprenticeInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MasterApprenticeInfo)
}
MasterApprenticeInfo::MasterApprenticeInfo(const MasterApprenticeInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      apprentice_(from.apprentice_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_master()) {
    master_ = new ::apprentice::UserInfo(*from.master_);
  } else {
    master_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apprentice.MasterApprenticeInfo)
}

void MasterApprenticeInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MasterApprenticeInfo_apprentice_2eproto.base);
  master_ = nullptr;
}

MasterApprenticeInfo::~MasterApprenticeInfo() {
  // @@protoc_insertion_point(destructor:apprentice.MasterApprenticeInfo)
  SharedDtor();
}

void MasterApprenticeInfo::SharedDtor() {
  if (this != internal_default_instance()) delete master_;
}

void MasterApprenticeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MasterApprenticeInfo& MasterApprenticeInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MasterApprenticeInfo_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MasterApprenticeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MasterApprenticeInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apprentice_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(master_ != nullptr);
    master_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MasterApprenticeInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apprentice.UserInfo master = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_master(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .apprentice.UserInfo apprentice = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_apprentice(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MasterApprenticeInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MasterApprenticeInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apprentice.UserInfo master = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::master(this), target, stream);
  }

  // repeated .apprentice.UserInfo apprentice = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_apprentice_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_apprentice(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MasterApprenticeInfo)
  return target;
}

size_t MasterApprenticeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MasterApprenticeInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apprentice.UserInfo apprentice = 2;
  total_size += 1UL * this->_internal_apprentice_size();
  for (const auto& msg : this->apprentice_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .apprentice.UserInfo master = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *master_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterApprenticeInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MasterApprenticeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterApprenticeInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MasterApprenticeInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MasterApprenticeInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MasterApprenticeInfo)
    MergeFrom(*source);
  }
}

void MasterApprenticeInfo::MergeFrom(const MasterApprenticeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MasterApprenticeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apprentice_.MergeFrom(from.apprentice_);
  if (from._internal_has_master()) {
    _internal_mutable_master()->::apprentice::UserInfo::MergeFrom(from._internal_master());
  }
}

void MasterApprenticeInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MasterApprenticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterApprenticeInfo::CopyFrom(const MasterApprenticeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MasterApprenticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterApprenticeInfo::IsInitialized() const {
  return true;
}

void MasterApprenticeInfo::InternalSwap(MasterApprenticeInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  apprentice_.InternalSwap(&other->apprentice_);
  swap(master_, other->master_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MasterApprenticeInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_MasterApprenticeInfo_CS::InitAsDefaultInstance() {
}
class MSG_Req_MasterApprenticeInfo_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_MasterApprenticeInfo_CS>()._has_bits_);
};

MSG_Req_MasterApprenticeInfo_CS::MSG_Req_MasterApprenticeInfo_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_MasterApprenticeInfo_CS)
}
MSG_Req_MasterApprenticeInfo_CS::MSG_Req_MasterApprenticeInfo_CS(const MSG_Req_MasterApprenticeInfo_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_MasterApprenticeInfo_CS)
}

void MSG_Req_MasterApprenticeInfo_CS::SharedCtor() {
}

MSG_Req_MasterApprenticeInfo_CS::~MSG_Req_MasterApprenticeInfo_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_MasterApprenticeInfo_CS)
  SharedDtor();
}

void MSG_Req_MasterApprenticeInfo_CS::SharedDtor() {
}

void MSG_Req_MasterApprenticeInfo_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_MasterApprenticeInfo_CS& MSG_Req_MasterApprenticeInfo_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_MasterApprenticeInfo_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_MasterApprenticeInfo_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_MasterApprenticeInfo_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_MasterApprenticeInfo_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_MasterApprenticeInfo_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_MasterApprenticeInfo_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_MasterApprenticeInfo_CS)
  return target;
}

size_t MSG_Req_MasterApprenticeInfo_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_MasterApprenticeInfo_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_MasterApprenticeInfo_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_MasterApprenticeInfo_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_MasterApprenticeInfo_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_MasterApprenticeInfo_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_MasterApprenticeInfo_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_MasterApprenticeInfo_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_MasterApprenticeInfo_CS::MergeFrom(const MSG_Req_MasterApprenticeInfo_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_MasterApprenticeInfo_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_Req_MasterApprenticeInfo_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_MasterApprenticeInfo_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_MasterApprenticeInfo_CS::CopyFrom(const MSG_Req_MasterApprenticeInfo_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_MasterApprenticeInfo_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_MasterApprenticeInfo_CS::IsInitialized() const {
  return true;
}

void MSG_Req_MasterApprenticeInfo_CS::InternalSwap(MSG_Req_MasterApprenticeInfo_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_MasterApprenticeInfo_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_MasterApprenticeInfo_SC::InitAsDefaultInstance() {
}
class MSG_Ret_MasterApprenticeInfo_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_MasterApprenticeInfo_SC>()._has_bits_);
  static void set_has_taking_master(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_MasterApprenticeInfo_SC::MSG_Ret_MasterApprenticeInfo_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
}
MSG_Ret_MasterApprenticeInfo_SC::MSG_Ret_MasterApprenticeInfo_SC(const MSG_Ret_MasterApprenticeInfo_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taking_master_ = from.taking_master_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
}

void MSG_Ret_MasterApprenticeInfo_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_MasterApprenticeInfo_SC_apprentice_2eproto.base);
  taking_master_ = false;
}

MSG_Ret_MasterApprenticeInfo_SC::~MSG_Ret_MasterApprenticeInfo_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
  SharedDtor();
}

void MSG_Ret_MasterApprenticeInfo_SC::SharedDtor() {
}

void MSG_Ret_MasterApprenticeInfo_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_MasterApprenticeInfo_SC& MSG_Ret_MasterApprenticeInfo_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_MasterApprenticeInfo_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_MasterApprenticeInfo_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  taking_master_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_MasterApprenticeInfo_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .apprentice.MasterApprenticeInfo data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool taking_master = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_taking_master(&has_bits);
          taking_master_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_MasterApprenticeInfo_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apprentice.MasterApprenticeInfo data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool taking_master = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_taking_master(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
  return target;
}

size_t MSG_Ret_MasterApprenticeInfo_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apprentice.MasterApprenticeInfo data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional bool taking_master = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_MasterApprenticeInfo_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_MasterApprenticeInfo_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_MasterApprenticeInfo_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_MasterApprenticeInfo_SC::MergeFrom(const MSG_Ret_MasterApprenticeInfo_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from._internal_has_taking_master()) {
    _internal_set_taking_master(from._internal_taking_master());
  }
}

void MSG_Ret_MasterApprenticeInfo_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_MasterApprenticeInfo_SC::CopyFrom(const MSG_Ret_MasterApprenticeInfo_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_MasterApprenticeInfo_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_MasterApprenticeInfo_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_MasterApprenticeInfo_SC::InternalSwap(MSG_Ret_MasterApprenticeInfo_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
  swap(taking_master_, other->taking_master_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_MasterApprenticeInfo_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_ApprenticeList_CS::InitAsDefaultInstance() {
}
class MSG_Req_ApprenticeList_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_ApprenticeList_CS>()._has_bits_);
};

MSG_Req_ApprenticeList_CS::MSG_Req_ApprenticeList_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_ApprenticeList_CS)
}
MSG_Req_ApprenticeList_CS::MSG_Req_ApprenticeList_CS(const MSG_Req_ApprenticeList_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_ApprenticeList_CS)
}

void MSG_Req_ApprenticeList_CS::SharedCtor() {
}

MSG_Req_ApprenticeList_CS::~MSG_Req_ApprenticeList_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_ApprenticeList_CS)
  SharedDtor();
}

void MSG_Req_ApprenticeList_CS::SharedDtor() {
}

void MSG_Req_ApprenticeList_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_ApprenticeList_CS& MSG_Req_ApprenticeList_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_ApprenticeList_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_ApprenticeList_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_ApprenticeList_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_ApprenticeList_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_ApprenticeList_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_ApprenticeList_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_ApprenticeList_CS)
  return target;
}

size_t MSG_Req_ApprenticeList_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_ApprenticeList_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_ApprenticeList_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_ApprenticeList_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_ApprenticeList_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_ApprenticeList_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_ApprenticeList_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_ApprenticeList_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_ApprenticeList_CS::MergeFrom(const MSG_Req_ApprenticeList_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_ApprenticeList_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_Req_ApprenticeList_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_ApprenticeList_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_ApprenticeList_CS::CopyFrom(const MSG_Req_ApprenticeList_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_ApprenticeList_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_ApprenticeList_CS::IsInitialized() const {
  return true;
}

void MSG_Req_ApprenticeList_CS::InternalSwap(MSG_Req_ApprenticeList_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_ApprenticeList_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_ApprenticeList_SC::InitAsDefaultInstance() {
}
class MSG_Ret_ApprenticeList_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_ApprenticeList_SC>()._has_bits_);
  static void set_has_taking_apprentice(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_ApprenticeList_SC::MSG_Ret_ApprenticeList_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_ApprenticeList_SC)
}
MSG_Ret_ApprenticeList_SC::MSG_Ret_ApprenticeList_SC(const MSG_Ret_ApprenticeList_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taking_apprentice_ = from.taking_apprentice_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_ApprenticeList_SC)
}

void MSG_Ret_ApprenticeList_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_ApprenticeList_SC_apprentice_2eproto.base);
  taking_apprentice_ = false;
}

MSG_Ret_ApprenticeList_SC::~MSG_Ret_ApprenticeList_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_ApprenticeList_SC)
  SharedDtor();
}

void MSG_Ret_ApprenticeList_SC::SharedDtor() {
}

void MSG_Ret_ApprenticeList_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_ApprenticeList_SC& MSG_Ret_ApprenticeList_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_ApprenticeList_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_ApprenticeList_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_ApprenticeList_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  taking_apprentice_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_ApprenticeList_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .apprentice.UserInfo data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool taking_apprentice = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_taking_apprentice(&has_bits);
          taking_apprentice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_ApprenticeList_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_ApprenticeList_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apprentice.UserInfo data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool taking_apprentice = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_taking_apprentice(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_ApprenticeList_SC)
  return target;
}

size_t MSG_Ret_ApprenticeList_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_ApprenticeList_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apprentice.UserInfo data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional bool taking_apprentice = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_ApprenticeList_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_ApprenticeList_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_ApprenticeList_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_ApprenticeList_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_ApprenticeList_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_ApprenticeList_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_ApprenticeList_SC::MergeFrom(const MSG_Ret_ApprenticeList_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_ApprenticeList_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from._internal_has_taking_apprentice()) {
    _internal_set_taking_apprentice(from._internal_taking_apprentice());
  }
}

void MSG_Ret_ApprenticeList_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_ApprenticeList_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_ApprenticeList_SC::CopyFrom(const MSG_Ret_ApprenticeList_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_ApprenticeList_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_ApprenticeList_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_ApprenticeList_SC::InternalSwap(MSG_Ret_ApprenticeList_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
  swap(taking_apprentice_, other->taking_apprentice_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_ApprenticeList_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_MasterApprenticeCount_CS::InitAsDefaultInstance() {
}
class MSG_Req_MasterApprenticeCount_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_MasterApprenticeCount_CS>()._has_bits_);
};

MSG_Req_MasterApprenticeCount_CS::MSG_Req_MasterApprenticeCount_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_MasterApprenticeCount_CS)
}
MSG_Req_MasterApprenticeCount_CS::MSG_Req_MasterApprenticeCount_CS(const MSG_Req_MasterApprenticeCount_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_MasterApprenticeCount_CS)
}

void MSG_Req_MasterApprenticeCount_CS::SharedCtor() {
}

MSG_Req_MasterApprenticeCount_CS::~MSG_Req_MasterApprenticeCount_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_MasterApprenticeCount_CS)
  SharedDtor();
}

void MSG_Req_MasterApprenticeCount_CS::SharedDtor() {
}

void MSG_Req_MasterApprenticeCount_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_MasterApprenticeCount_CS& MSG_Req_MasterApprenticeCount_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_MasterApprenticeCount_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_MasterApprenticeCount_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_MasterApprenticeCount_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_MasterApprenticeCount_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_MasterApprenticeCount_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_MasterApprenticeCount_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_MasterApprenticeCount_CS)
  return target;
}

size_t MSG_Req_MasterApprenticeCount_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_MasterApprenticeCount_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_MasterApprenticeCount_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_MasterApprenticeCount_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_MasterApprenticeCount_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_MasterApprenticeCount_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_MasterApprenticeCount_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_MasterApprenticeCount_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_MasterApprenticeCount_CS::MergeFrom(const MSG_Req_MasterApprenticeCount_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_MasterApprenticeCount_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_Req_MasterApprenticeCount_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_MasterApprenticeCount_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_MasterApprenticeCount_CS::CopyFrom(const MSG_Req_MasterApprenticeCount_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_MasterApprenticeCount_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_MasterApprenticeCount_CS::IsInitialized() const {
  return true;
}

void MSG_Req_MasterApprenticeCount_CS::InternalSwap(MSG_Req_MasterApprenticeCount_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_MasterApprenticeCount_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_MasterApprenticeCount_SC::InitAsDefaultInstance() {
}
class MSG_Ret_MasterApprenticeCount_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_MasterApprenticeCount_SC>()._has_bits_);
  static void set_has_max_master_count(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cur_master_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_max_apprentice_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_cur_apprentice_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_punish_endtime(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

MSG_Ret_MasterApprenticeCount_SC::MSG_Ret_MasterApprenticeCount_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_MasterApprenticeCount_SC)
}
MSG_Ret_MasterApprenticeCount_SC::MSG_Ret_MasterApprenticeCount_SC(const MSG_Ret_MasterApprenticeCount_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_master_count_, &from.max_master_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&punish_endtime_) -
    reinterpret_cast<char*>(&max_master_count_)) + sizeof(punish_endtime_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_MasterApprenticeCount_SC)
}

void MSG_Ret_MasterApprenticeCount_SC::SharedCtor() {
  ::memset(&max_master_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&punish_endtime_) -
      reinterpret_cast<char*>(&max_master_count_)) + sizeof(punish_endtime_));
}

MSG_Ret_MasterApprenticeCount_SC::~MSG_Ret_MasterApprenticeCount_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_MasterApprenticeCount_SC)
  SharedDtor();
}

void MSG_Ret_MasterApprenticeCount_SC::SharedDtor() {
}

void MSG_Ret_MasterApprenticeCount_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_MasterApprenticeCount_SC& MSG_Ret_MasterApprenticeCount_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_MasterApprenticeCount_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_MasterApprenticeCount_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_MasterApprenticeCount_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&max_master_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&punish_endtime_) -
        reinterpret_cast<char*>(&max_master_count_)) + sizeof(punish_endtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_MasterApprenticeCount_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 max_master_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_max_master_count(&has_bits);
          max_master_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 cur_master_count = 2 [default = 0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_cur_master_count(&has_bits);
          cur_master_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 max_apprentice_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_max_apprentice_count(&has_bits);
          max_apprentice_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 cur_apprentice_count = 4 [default = 0];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_cur_apprentice_count(&has_bits);
          cur_apprentice_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 punish_endtime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_punish_endtime(&has_bits);
          punish_endtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_MasterApprenticeCount_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_MasterApprenticeCount_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 max_master_count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_max_master_count(), target);
  }

  // optional uint32 cur_master_count = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_cur_master_count(), target);
  }

  // optional uint32 max_apprentice_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_max_apprentice_count(), target);
  }

  // optional uint32 cur_apprentice_count = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_cur_apprentice_count(), target);
  }

  // optional uint32 punish_endtime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_punish_endtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_MasterApprenticeCount_SC)
  return target;
}

size_t MSG_Ret_MasterApprenticeCount_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_MasterApprenticeCount_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint32 max_master_count = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_max_master_count());
    }

    // optional uint32 cur_master_count = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_cur_master_count());
    }

    // optional uint32 max_apprentice_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_max_apprentice_count());
    }

    // optional uint32 cur_apprentice_count = 4 [default = 0];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_cur_apprentice_count());
    }

    // optional uint32 punish_endtime = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_punish_endtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_MasterApprenticeCount_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_MasterApprenticeCount_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_MasterApprenticeCount_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_MasterApprenticeCount_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_MasterApprenticeCount_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_MasterApprenticeCount_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_MasterApprenticeCount_SC::MergeFrom(const MSG_Ret_MasterApprenticeCount_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_MasterApprenticeCount_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      max_master_count_ = from.max_master_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      cur_master_count_ = from.cur_master_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      max_apprentice_count_ = from.max_apprentice_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      cur_apprentice_count_ = from.cur_apprentice_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      punish_endtime_ = from.punish_endtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_MasterApprenticeCount_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_MasterApprenticeCount_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_MasterApprenticeCount_SC::CopyFrom(const MSG_Ret_MasterApprenticeCount_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_MasterApprenticeCount_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_MasterApprenticeCount_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_MasterApprenticeCount_SC::InternalSwap(MSG_Ret_MasterApprenticeCount_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(max_master_count_, other->max_master_count_);
  swap(cur_master_count_, other->cur_master_count_);
  swap(max_apprentice_count_, other->max_apprentice_count_);
  swap(cur_apprentice_count_, other->cur_apprentice_count_);
  swap(punish_endtime_, other->punish_endtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_MasterApprenticeCount_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_TakeMaster_CS::InitAsDefaultInstance() {
}
class MSG_Req_TakeMaster_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_TakeMaster_CS>()._has_bits_);
  static void set_has_charid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_TakeMaster_CS::MSG_Req_TakeMaster_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_TakeMaster_CS)
}
MSG_Req_TakeMaster_CS::MSG_Req_TakeMaster_CS(const MSG_Req_TakeMaster_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  charid_ = from.charid_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_TakeMaster_CS)
}

void MSG_Req_TakeMaster_CS::SharedCtor() {
  charid_ = PROTOBUF_ULONGLONG(0);
}

MSG_Req_TakeMaster_CS::~MSG_Req_TakeMaster_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_TakeMaster_CS)
  SharedDtor();
}

void MSG_Req_TakeMaster_CS::SharedDtor() {
}

void MSG_Req_TakeMaster_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_TakeMaster_CS& MSG_Req_TakeMaster_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_TakeMaster_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_TakeMaster_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_TakeMaster_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_TakeMaster_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 charid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_charid(&has_bits);
          charid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_TakeMaster_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_TakeMaster_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 charid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_charid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_TakeMaster_CS)
  return target;
}

size_t MSG_Req_TakeMaster_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_TakeMaster_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 charid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_charid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_TakeMaster_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_TakeMaster_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_TakeMaster_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_TakeMaster_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_TakeMaster_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_TakeMaster_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_TakeMaster_CS::MergeFrom(const MSG_Req_TakeMaster_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_TakeMaster_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_charid()) {
    _internal_set_charid(from._internal_charid());
  }
}

void MSG_Req_TakeMaster_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_TakeMaster_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_TakeMaster_CS::CopyFrom(const MSG_Req_TakeMaster_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_TakeMaster_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_TakeMaster_CS::IsInitialized() const {
  return true;
}

void MSG_Req_TakeMaster_CS::InternalSwap(MSG_Req_TakeMaster_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(charid_, other->charid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_TakeMaster_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_ApplyTakeMaster_SC::InitAsDefaultInstance() {
  ::apprentice::_MSG_Ret_ApplyTakeMaster_SC_default_instance_._instance.get_mutable()->applyer_ = const_cast< ::apprentice::UserInfo*>(
      ::apprentice::UserInfo::internal_default_instance());
}
class MSG_Ret_ApplyTakeMaster_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_ApplyTakeMaster_SC>()._has_bits_);
  static const ::apprentice::UserInfo& applyer(const MSG_Ret_ApplyTakeMaster_SC* msg);
  static void set_has_applyer(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::apprentice::UserInfo&
MSG_Ret_ApplyTakeMaster_SC::_Internal::applyer(const MSG_Ret_ApplyTakeMaster_SC* msg) {
  return *msg->applyer_;
}
MSG_Ret_ApplyTakeMaster_SC::MSG_Ret_ApplyTakeMaster_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_ApplyTakeMaster_SC)
}
MSG_Ret_ApplyTakeMaster_SC::MSG_Ret_ApplyTakeMaster_SC(const MSG_Ret_ApplyTakeMaster_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_applyer()) {
    applyer_ = new ::apprentice::UserInfo(*from.applyer_);
  } else {
    applyer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_ApplyTakeMaster_SC)
}

void MSG_Ret_ApplyTakeMaster_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_ApplyTakeMaster_SC_apprentice_2eproto.base);
  applyer_ = nullptr;
}

MSG_Ret_ApplyTakeMaster_SC::~MSG_Ret_ApplyTakeMaster_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_ApplyTakeMaster_SC)
  SharedDtor();
}

void MSG_Ret_ApplyTakeMaster_SC::SharedDtor() {
  if (this != internal_default_instance()) delete applyer_;
}

void MSG_Ret_ApplyTakeMaster_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_ApplyTakeMaster_SC& MSG_Ret_ApplyTakeMaster_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_ApplyTakeMaster_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_ApplyTakeMaster_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_ApplyTakeMaster_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(applyer_ != nullptr);
    applyer_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_ApplyTakeMaster_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apprentice.UserInfo applyer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_applyer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_ApplyTakeMaster_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_ApplyTakeMaster_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apprentice.UserInfo applyer = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::applyer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_ApplyTakeMaster_SC)
  return target;
}

size_t MSG_Ret_ApplyTakeMaster_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_ApplyTakeMaster_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .apprentice.UserInfo applyer = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *applyer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_ApplyTakeMaster_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_ApplyTakeMaster_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_ApplyTakeMaster_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_ApplyTakeMaster_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_ApplyTakeMaster_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_ApplyTakeMaster_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_ApplyTakeMaster_SC::MergeFrom(const MSG_Ret_ApplyTakeMaster_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_ApplyTakeMaster_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_applyer()) {
    _internal_mutable_applyer()->::apprentice::UserInfo::MergeFrom(from._internal_applyer());
  }
}

void MSG_Ret_ApplyTakeMaster_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_ApplyTakeMaster_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_ApplyTakeMaster_SC::CopyFrom(const MSG_Ret_ApplyTakeMaster_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_ApplyTakeMaster_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_ApplyTakeMaster_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_ApplyTakeMaster_SC::InternalSwap(MSG_Ret_ApplyTakeMaster_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(applyer_, other->applyer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_ApplyTakeMaster_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_AnswerTakeMaster_CS::InitAsDefaultInstance() {
}
class MSG_Req_AnswerTakeMaster_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_AnswerTakeMaster_CS>()._has_bits_);
  static void set_has_agree(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_applyer(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_AnswerTakeMaster_CS::MSG_Req_AnswerTakeMaster_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_AnswerTakeMaster_CS)
}
MSG_Req_AnswerTakeMaster_CS::MSG_Req_AnswerTakeMaster_CS(const MSG_Req_AnswerTakeMaster_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&applyer_, &from.applyer_,
    static_cast<size_t>(reinterpret_cast<char*>(&agree_) -
    reinterpret_cast<char*>(&applyer_)) + sizeof(agree_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_AnswerTakeMaster_CS)
}

void MSG_Req_AnswerTakeMaster_CS::SharedCtor() {
  ::memset(&applyer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&agree_) -
      reinterpret_cast<char*>(&applyer_)) + sizeof(agree_));
}

MSG_Req_AnswerTakeMaster_CS::~MSG_Req_AnswerTakeMaster_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_AnswerTakeMaster_CS)
  SharedDtor();
}

void MSG_Req_AnswerTakeMaster_CS::SharedDtor() {
}

void MSG_Req_AnswerTakeMaster_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_AnswerTakeMaster_CS& MSG_Req_AnswerTakeMaster_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_AnswerTakeMaster_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_AnswerTakeMaster_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_AnswerTakeMaster_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&applyer_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&agree_) -
        reinterpret_cast<char*>(&applyer_)) + sizeof(agree_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_AnswerTakeMaster_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool agree = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_agree(&has_bits);
          agree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 applyer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_applyer(&has_bits);
          applyer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_AnswerTakeMaster_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_AnswerTakeMaster_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool agree = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_agree(), target);
  }

  // optional uint64 applyer = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_applyer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_AnswerTakeMaster_CS)
  return target;
}

size_t MSG_Req_AnswerTakeMaster_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_AnswerTakeMaster_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 applyer = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_applyer());
    }

    // optional bool agree = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_AnswerTakeMaster_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_AnswerTakeMaster_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_AnswerTakeMaster_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_AnswerTakeMaster_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_AnswerTakeMaster_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_AnswerTakeMaster_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_AnswerTakeMaster_CS::MergeFrom(const MSG_Req_AnswerTakeMaster_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_AnswerTakeMaster_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      applyer_ = from.applyer_;
    }
    if (cached_has_bits & 0x00000002u) {
      agree_ = from.agree_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Req_AnswerTakeMaster_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_AnswerTakeMaster_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_AnswerTakeMaster_CS::CopyFrom(const MSG_Req_AnswerTakeMaster_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_AnswerTakeMaster_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_AnswerTakeMaster_CS::IsInitialized() const {
  return true;
}

void MSG_Req_AnswerTakeMaster_CS::InternalSwap(MSG_Req_AnswerTakeMaster_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(applyer_, other->applyer_);
  swap(agree_, other->agree_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_AnswerTakeMaster_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_TakeMaster_SC::InitAsDefaultInstance() {
}
class MSG_Ret_TakeMaster_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_TakeMaster_SC>()._has_bits_);
  static void set_has_agree(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_clear(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_clear_charid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

MSG_Ret_TakeMaster_SC::MSG_Ret_TakeMaster_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_TakeMaster_SC)
}
MSG_Ret_TakeMaster_SC::MSG_Ret_TakeMaster_SC(const MSG_Ret_TakeMaster_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&agree_, &from.agree_,
    static_cast<size_t>(reinterpret_cast<char*>(&clear_) -
    reinterpret_cast<char*>(&agree_)) + sizeof(clear_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_TakeMaster_SC)
}

void MSG_Ret_TakeMaster_SC::SharedCtor() {
  ::memset(&agree_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_charid_) -
      reinterpret_cast<char*>(&agree_)) + sizeof(clear_charid_));
  clear_ = true;
}

MSG_Ret_TakeMaster_SC::~MSG_Ret_TakeMaster_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_TakeMaster_SC)
  SharedDtor();
}

void MSG_Ret_TakeMaster_SC::SharedDtor() {
}

void MSG_Ret_TakeMaster_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_TakeMaster_SC& MSG_Ret_TakeMaster_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_TakeMaster_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_TakeMaster_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_TakeMaster_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&agree_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clear_charid_) -
        reinterpret_cast<char*>(&agree_)) + sizeof(clear_charid_));
    clear_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_TakeMaster_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool agree = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_agree(&has_bits);
          agree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 retcode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool clear = 3 [default = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_clear(&has_bits);
          clear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 clear_charid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_clear_charid(&has_bits);
          clear_charid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_TakeMaster_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_TakeMaster_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool agree = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_agree(), target);
  }

  // optional uint32 retcode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_retcode(), target);
  }

  // optional bool clear = 3 [default = true];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_clear(), target);
  }

  // optional uint64 clear_charid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_clear_charid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_TakeMaster_SC)
  return target;
}

size_t MSG_Ret_TakeMaster_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_TakeMaster_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bool agree = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional uint32 retcode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

    // optional uint64 clear_charid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_clear_charid());
    }

    // optional bool clear = 3 [default = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_TakeMaster_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_TakeMaster_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_TakeMaster_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_TakeMaster_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_TakeMaster_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_TakeMaster_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_TakeMaster_SC::MergeFrom(const MSG_Ret_TakeMaster_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_TakeMaster_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      agree_ = from.agree_;
    }
    if (cached_has_bits & 0x00000002u) {
      retcode_ = from.retcode_;
    }
    if (cached_has_bits & 0x00000004u) {
      clear_charid_ = from.clear_charid_;
    }
    if (cached_has_bits & 0x00000008u) {
      clear_ = from.clear_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_TakeMaster_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_TakeMaster_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_TakeMaster_SC::CopyFrom(const MSG_Ret_TakeMaster_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_TakeMaster_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_TakeMaster_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_TakeMaster_SC::InternalSwap(MSG_Ret_TakeMaster_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(agree_, other->agree_);
  swap(retcode_, other->retcode_);
  swap(clear_charid_, other->clear_charid_);
  swap(clear_, other->clear_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_TakeMaster_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_TakeApprentice_CS::InitAsDefaultInstance() {
}
class MSG_Req_TakeApprentice_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_TakeApprentice_CS>()._has_bits_);
  static void set_has_charid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_TakeApprentice_CS::MSG_Req_TakeApprentice_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_TakeApprentice_CS)
}
MSG_Req_TakeApprentice_CS::MSG_Req_TakeApprentice_CS(const MSG_Req_TakeApprentice_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  charid_ = from.charid_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_TakeApprentice_CS)
}

void MSG_Req_TakeApprentice_CS::SharedCtor() {
  charid_ = PROTOBUF_ULONGLONG(0);
}

MSG_Req_TakeApprentice_CS::~MSG_Req_TakeApprentice_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_TakeApprentice_CS)
  SharedDtor();
}

void MSG_Req_TakeApprentice_CS::SharedDtor() {
}

void MSG_Req_TakeApprentice_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_TakeApprentice_CS& MSG_Req_TakeApprentice_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_TakeApprentice_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_TakeApprentice_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_TakeApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  charid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_TakeApprentice_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 charid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_charid(&has_bits);
          charid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_TakeApprentice_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_TakeApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 charid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_charid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_TakeApprentice_CS)
  return target;
}

size_t MSG_Req_TakeApprentice_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_TakeApprentice_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 charid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_charid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_TakeApprentice_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_TakeApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_TakeApprentice_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_TakeApprentice_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_TakeApprentice_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_TakeApprentice_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_TakeApprentice_CS::MergeFrom(const MSG_Req_TakeApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_TakeApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_charid()) {
    _internal_set_charid(from._internal_charid());
  }
}

void MSG_Req_TakeApprentice_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_TakeApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_TakeApprentice_CS::CopyFrom(const MSG_Req_TakeApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_TakeApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_TakeApprentice_CS::IsInitialized() const {
  return true;
}

void MSG_Req_TakeApprentice_CS::InternalSwap(MSG_Req_TakeApprentice_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(charid_, other->charid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_TakeApprentice_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_ApplyTakeApprentice_SC::InitAsDefaultInstance() {
  ::apprentice::_MSG_Ret_ApplyTakeApprentice_SC_default_instance_._instance.get_mutable()->applyer_ = const_cast< ::apprentice::UserInfo*>(
      ::apprentice::UserInfo::internal_default_instance());
}
class MSG_Ret_ApplyTakeApprentice_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_ApplyTakeApprentice_SC>()._has_bits_);
  static const ::apprentice::UserInfo& applyer(const MSG_Ret_ApplyTakeApprentice_SC* msg);
  static void set_has_applyer(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::apprentice::UserInfo&
MSG_Ret_ApplyTakeApprentice_SC::_Internal::applyer(const MSG_Ret_ApplyTakeApprentice_SC* msg) {
  return *msg->applyer_;
}
MSG_Ret_ApplyTakeApprentice_SC::MSG_Ret_ApplyTakeApprentice_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
}
MSG_Ret_ApplyTakeApprentice_SC::MSG_Ret_ApplyTakeApprentice_SC(const MSG_Ret_ApplyTakeApprentice_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_applyer()) {
    applyer_ = new ::apprentice::UserInfo(*from.applyer_);
  } else {
    applyer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
}

void MSG_Ret_ApplyTakeApprentice_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_ApplyTakeApprentice_SC_apprentice_2eproto.base);
  applyer_ = nullptr;
}

MSG_Ret_ApplyTakeApprentice_SC::~MSG_Ret_ApplyTakeApprentice_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
  SharedDtor();
}

void MSG_Ret_ApplyTakeApprentice_SC::SharedDtor() {
  if (this != internal_default_instance()) delete applyer_;
}

void MSG_Ret_ApplyTakeApprentice_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_ApplyTakeApprentice_SC& MSG_Ret_ApplyTakeApprentice_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_ApplyTakeApprentice_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_ApplyTakeApprentice_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(applyer_ != nullptr);
    applyer_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_ApplyTakeApprentice_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apprentice.UserInfo applyer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_applyer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_ApplyTakeApprentice_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apprentice.UserInfo applyer = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::applyer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
  return target;
}

size_t MSG_Ret_ApplyTakeApprentice_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .apprentice.UserInfo applyer = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *applyer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_ApplyTakeApprentice_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_ApplyTakeApprentice_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_ApplyTakeApprentice_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_ApplyTakeApprentice_SC::MergeFrom(const MSG_Ret_ApplyTakeApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_applyer()) {
    _internal_mutable_applyer()->::apprentice::UserInfo::MergeFrom(from._internal_applyer());
  }
}

void MSG_Ret_ApplyTakeApprentice_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_ApplyTakeApprentice_SC::CopyFrom(const MSG_Ret_ApplyTakeApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_ApplyTakeApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_ApplyTakeApprentice_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_ApplyTakeApprentice_SC::InternalSwap(MSG_Ret_ApplyTakeApprentice_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(applyer_, other->applyer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_ApplyTakeApprentice_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_AnswerTakeApprentice_CS::InitAsDefaultInstance() {
}
class MSG_Req_AnswerTakeApprentice_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_AnswerTakeApprentice_CS>()._has_bits_);
  static void set_has_agree(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_applyer(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_AnswerTakeApprentice_CS::MSG_Req_AnswerTakeApprentice_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_AnswerTakeApprentice_CS)
}
MSG_Req_AnswerTakeApprentice_CS::MSG_Req_AnswerTakeApprentice_CS(const MSG_Req_AnswerTakeApprentice_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&applyer_, &from.applyer_,
    static_cast<size_t>(reinterpret_cast<char*>(&agree_) -
    reinterpret_cast<char*>(&applyer_)) + sizeof(agree_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_AnswerTakeApprentice_CS)
}

void MSG_Req_AnswerTakeApprentice_CS::SharedCtor() {
  ::memset(&applyer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&agree_) -
      reinterpret_cast<char*>(&applyer_)) + sizeof(agree_));
}

MSG_Req_AnswerTakeApprentice_CS::~MSG_Req_AnswerTakeApprentice_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_AnswerTakeApprentice_CS)
  SharedDtor();
}

void MSG_Req_AnswerTakeApprentice_CS::SharedDtor() {
}

void MSG_Req_AnswerTakeApprentice_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_AnswerTakeApprentice_CS& MSG_Req_AnswerTakeApprentice_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_AnswerTakeApprentice_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_AnswerTakeApprentice_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_AnswerTakeApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&applyer_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&agree_) -
        reinterpret_cast<char*>(&applyer_)) + sizeof(agree_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_AnswerTakeApprentice_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool agree = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_agree(&has_bits);
          agree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 applyer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_applyer(&has_bits);
          applyer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_AnswerTakeApprentice_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_AnswerTakeApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool agree = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_agree(), target);
  }

  // optional uint64 applyer = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_applyer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_AnswerTakeApprentice_CS)
  return target;
}

size_t MSG_Req_AnswerTakeApprentice_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_AnswerTakeApprentice_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 applyer = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_applyer());
    }

    // optional bool agree = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_AnswerTakeApprentice_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_AnswerTakeApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_AnswerTakeApprentice_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_AnswerTakeApprentice_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_AnswerTakeApprentice_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_AnswerTakeApprentice_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_AnswerTakeApprentice_CS::MergeFrom(const MSG_Req_AnswerTakeApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_AnswerTakeApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      applyer_ = from.applyer_;
    }
    if (cached_has_bits & 0x00000002u) {
      agree_ = from.agree_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Req_AnswerTakeApprentice_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_AnswerTakeApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_AnswerTakeApprentice_CS::CopyFrom(const MSG_Req_AnswerTakeApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_AnswerTakeApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_AnswerTakeApprentice_CS::IsInitialized() const {
  return true;
}

void MSG_Req_AnswerTakeApprentice_CS::InternalSwap(MSG_Req_AnswerTakeApprentice_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(applyer_, other->applyer_);
  swap(agree_, other->agree_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_AnswerTakeApprentice_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_TakeApprentice_SC::InitAsDefaultInstance() {
}
class MSG_Ret_TakeApprentice_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_TakeApprentice_SC>()._has_bits_);
  static void set_has_agree(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_clear(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_clear_charid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

MSG_Ret_TakeApprentice_SC::MSG_Ret_TakeApprentice_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_TakeApprentice_SC)
}
MSG_Ret_TakeApprentice_SC::MSG_Ret_TakeApprentice_SC(const MSG_Ret_TakeApprentice_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&agree_, &from.agree_,
    static_cast<size_t>(reinterpret_cast<char*>(&clear_) -
    reinterpret_cast<char*>(&agree_)) + sizeof(clear_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_TakeApprentice_SC)
}

void MSG_Ret_TakeApprentice_SC::SharedCtor() {
  ::memset(&agree_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_charid_) -
      reinterpret_cast<char*>(&agree_)) + sizeof(clear_charid_));
  clear_ = true;
}

MSG_Ret_TakeApprentice_SC::~MSG_Ret_TakeApprentice_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_TakeApprentice_SC)
  SharedDtor();
}

void MSG_Ret_TakeApprentice_SC::SharedDtor() {
}

void MSG_Ret_TakeApprentice_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_TakeApprentice_SC& MSG_Ret_TakeApprentice_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_TakeApprentice_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_TakeApprentice_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_TakeApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&agree_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clear_charid_) -
        reinterpret_cast<char*>(&agree_)) + sizeof(clear_charid_));
    clear_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_TakeApprentice_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool agree = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_agree(&has_bits);
          agree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 retcode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool clear = 3 [default = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_clear(&has_bits);
          clear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 clear_charid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_clear_charid(&has_bits);
          clear_charid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_TakeApprentice_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_TakeApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool agree = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_agree(), target);
  }

  // optional uint32 retcode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_retcode(), target);
  }

  // optional bool clear = 3 [default = true];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_clear(), target);
  }

  // optional uint64 clear_charid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_clear_charid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_TakeApprentice_SC)
  return target;
}

size_t MSG_Ret_TakeApprentice_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_TakeApprentice_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bool agree = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional uint32 retcode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

    // optional uint64 clear_charid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_clear_charid());
    }

    // optional bool clear = 3 [default = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_TakeApprentice_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_TakeApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_TakeApprentice_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_TakeApprentice_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_TakeApprentice_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_TakeApprentice_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_TakeApprentice_SC::MergeFrom(const MSG_Ret_TakeApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_TakeApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      agree_ = from.agree_;
    }
    if (cached_has_bits & 0x00000002u) {
      retcode_ = from.retcode_;
    }
    if (cached_has_bits & 0x00000004u) {
      clear_charid_ = from.clear_charid_;
    }
    if (cached_has_bits & 0x00000008u) {
      clear_ = from.clear_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_TakeApprentice_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_TakeApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_TakeApprentice_SC::CopyFrom(const MSG_Ret_TakeApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_TakeApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_TakeApprentice_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_TakeApprentice_SC::InternalSwap(MSG_Ret_TakeApprentice_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(agree_, other->agree_);
  swap(retcode_, other->retcode_);
  swap(clear_charid_, other->clear_charid_);
  swap(clear_, other->clear_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_TakeApprentice_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_StartTakeApprentice_CS::InitAsDefaultInstance() {
}
class MSG_Req_StartTakeApprentice_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_StartTakeApprentice_CS>()._has_bits_);
  static void set_has_condition_online(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_condition_attitude(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_condition_notify(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_StartTakeApprentice_CS::MSG_Req_StartTakeApprentice_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_StartTakeApprentice_CS)
}
MSG_Req_StartTakeApprentice_CS::MSG_Req_StartTakeApprentice_CS(const MSG_Req_StartTakeApprentice_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  condition_notify_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_condition_notify()) {
    condition_notify_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.condition_notify_);
  }
  ::memcpy(&condition_online_, &from.condition_online_,
    static_cast<size_t>(reinterpret_cast<char*>(&condition_attitude_) -
    reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_StartTakeApprentice_CS)
}

void MSG_Req_StartTakeApprentice_CS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Req_StartTakeApprentice_CS_apprentice_2eproto.base);
  condition_notify_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&condition_online_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&condition_attitude_) -
      reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
}

MSG_Req_StartTakeApprentice_CS::~MSG_Req_StartTakeApprentice_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_StartTakeApprentice_CS)
  SharedDtor();
}

void MSG_Req_StartTakeApprentice_CS::SharedDtor() {
  condition_notify_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MSG_Req_StartTakeApprentice_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_StartTakeApprentice_CS& MSG_Req_StartTakeApprentice_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_StartTakeApprentice_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_StartTakeApprentice_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_StartTakeApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    condition_notify_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&condition_online_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&condition_attitude_) -
        reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_StartTakeApprentice_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 condition_online = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_condition_online(&has_bits);
          condition_online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 condition_attitude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_condition_attitude(&has_bits);
          condition_attitude_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string condition_notify = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_condition_notify();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apprentice.MSG_Req_StartTakeApprentice_CS.condition_notify");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_StartTakeApprentice_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_StartTakeApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 condition_online = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_condition_online(), target);
  }

  // optional uint32 condition_attitude = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_condition_attitude(), target);
  }

  // optional string condition_notify = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_condition_notify().data(), static_cast<int>(this->_internal_condition_notify().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apprentice.MSG_Req_StartTakeApprentice_CS.condition_notify");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_condition_notify(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_StartTakeApprentice_CS)
  return target;
}

size_t MSG_Req_StartTakeApprentice_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_StartTakeApprentice_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string condition_notify = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_condition_notify());
    }

    // optional uint32 condition_online = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_condition_online());
    }

    // optional uint32 condition_attitude = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_condition_attitude());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_StartTakeApprentice_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_StartTakeApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_StartTakeApprentice_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_StartTakeApprentice_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_StartTakeApprentice_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_StartTakeApprentice_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_StartTakeApprentice_CS::MergeFrom(const MSG_Req_StartTakeApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_StartTakeApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      condition_notify_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.condition_notify_);
    }
    if (cached_has_bits & 0x00000002u) {
      condition_online_ = from.condition_online_;
    }
    if (cached_has_bits & 0x00000004u) {
      condition_attitude_ = from.condition_attitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Req_StartTakeApprentice_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_StartTakeApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_StartTakeApprentice_CS::CopyFrom(const MSG_Req_StartTakeApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_StartTakeApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_StartTakeApprentice_CS::IsInitialized() const {
  return true;
}

void MSG_Req_StartTakeApprentice_CS::InternalSwap(MSG_Req_StartTakeApprentice_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  condition_notify_.Swap(&other->condition_notify_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(condition_online_, other->condition_online_);
  swap(condition_attitude_, other->condition_attitude_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_StartTakeApprentice_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_StartTakeApprentice_SC::InitAsDefaultInstance() {
}
class MSG_Ret_StartTakeApprentice_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_StartTakeApprentice_SC>()._has_bits_);
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_StartTakeApprentice_SC::MSG_Ret_StartTakeApprentice_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_StartTakeApprentice_SC)
}
MSG_Ret_StartTakeApprentice_SC::MSG_Ret_StartTakeApprentice_SC(const MSG_Ret_StartTakeApprentice_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_StartTakeApprentice_SC)
}

void MSG_Ret_StartTakeApprentice_SC::SharedCtor() {
  retcode_ = 0u;
}

MSG_Ret_StartTakeApprentice_SC::~MSG_Ret_StartTakeApprentice_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_StartTakeApprentice_SC)
  SharedDtor();
}

void MSG_Ret_StartTakeApprentice_SC::SharedDtor() {
}

void MSG_Ret_StartTakeApprentice_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_StartTakeApprentice_SC& MSG_Ret_StartTakeApprentice_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_StartTakeApprentice_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_StartTakeApprentice_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_StartTakeApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_StartTakeApprentice_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 retcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_StartTakeApprentice_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_StartTakeApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 retcode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_StartTakeApprentice_SC)
  return target;
}

size_t MSG_Ret_StartTakeApprentice_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_StartTakeApprentice_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 retcode = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_StartTakeApprentice_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_StartTakeApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_StartTakeApprentice_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_StartTakeApprentice_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_StartTakeApprentice_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_StartTakeApprentice_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_StartTakeApprentice_SC::MergeFrom(const MSG_Ret_StartTakeApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_StartTakeApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_retcode()) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void MSG_Ret_StartTakeApprentice_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_StartTakeApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_StartTakeApprentice_SC::CopyFrom(const MSG_Ret_StartTakeApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_StartTakeApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_StartTakeApprentice_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_StartTakeApprentice_SC::InternalSwap(MSG_Ret_StartTakeApprentice_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_StartTakeApprentice_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_StartTakeMaster_CS::InitAsDefaultInstance() {
}
class MSG_Req_StartTakeMaster_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_StartTakeMaster_CS>()._has_bits_);
  static void set_has_condition_online(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_condition_attitude(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_condition_notify(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_StartTakeMaster_CS::MSG_Req_StartTakeMaster_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_StartTakeMaster_CS)
}
MSG_Req_StartTakeMaster_CS::MSG_Req_StartTakeMaster_CS(const MSG_Req_StartTakeMaster_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  condition_notify_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_condition_notify()) {
    condition_notify_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.condition_notify_);
  }
  ::memcpy(&condition_online_, &from.condition_online_,
    static_cast<size_t>(reinterpret_cast<char*>(&condition_attitude_) -
    reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_StartTakeMaster_CS)
}

void MSG_Req_StartTakeMaster_CS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Req_StartTakeMaster_CS_apprentice_2eproto.base);
  condition_notify_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&condition_online_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&condition_attitude_) -
      reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
}

MSG_Req_StartTakeMaster_CS::~MSG_Req_StartTakeMaster_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_StartTakeMaster_CS)
  SharedDtor();
}

void MSG_Req_StartTakeMaster_CS::SharedDtor() {
  condition_notify_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MSG_Req_StartTakeMaster_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_StartTakeMaster_CS& MSG_Req_StartTakeMaster_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_StartTakeMaster_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_StartTakeMaster_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_StartTakeMaster_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    condition_notify_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&condition_online_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&condition_attitude_) -
        reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_StartTakeMaster_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 condition_online = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_condition_online(&has_bits);
          condition_online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 condition_attitude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_condition_attitude(&has_bits);
          condition_attitude_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string condition_notify = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_condition_notify();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apprentice.MSG_Req_StartTakeMaster_CS.condition_notify");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_StartTakeMaster_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_StartTakeMaster_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 condition_online = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_condition_online(), target);
  }

  // optional uint32 condition_attitude = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_condition_attitude(), target);
  }

  // optional string condition_notify = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_condition_notify().data(), static_cast<int>(this->_internal_condition_notify().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apprentice.MSG_Req_StartTakeMaster_CS.condition_notify");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_condition_notify(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_StartTakeMaster_CS)
  return target;
}

size_t MSG_Req_StartTakeMaster_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_StartTakeMaster_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string condition_notify = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_condition_notify());
    }

    // optional uint32 condition_online = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_condition_online());
    }

    // optional uint32 condition_attitude = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_condition_attitude());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_StartTakeMaster_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_StartTakeMaster_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_StartTakeMaster_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_StartTakeMaster_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_StartTakeMaster_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_StartTakeMaster_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_StartTakeMaster_CS::MergeFrom(const MSG_Req_StartTakeMaster_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_StartTakeMaster_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      condition_notify_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.condition_notify_);
    }
    if (cached_has_bits & 0x00000002u) {
      condition_online_ = from.condition_online_;
    }
    if (cached_has_bits & 0x00000004u) {
      condition_attitude_ = from.condition_attitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Req_StartTakeMaster_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_StartTakeMaster_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_StartTakeMaster_CS::CopyFrom(const MSG_Req_StartTakeMaster_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_StartTakeMaster_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_StartTakeMaster_CS::IsInitialized() const {
  return true;
}

void MSG_Req_StartTakeMaster_CS::InternalSwap(MSG_Req_StartTakeMaster_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  condition_notify_.Swap(&other->condition_notify_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(condition_online_, other->condition_online_);
  swap(condition_attitude_, other->condition_attitude_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_StartTakeMaster_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_StartTakeMaster_SC::InitAsDefaultInstance() {
}
class MSG_Ret_StartTakeMaster_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_StartTakeMaster_SC>()._has_bits_);
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_StartTakeMaster_SC::MSG_Ret_StartTakeMaster_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_StartTakeMaster_SC)
}
MSG_Ret_StartTakeMaster_SC::MSG_Ret_StartTakeMaster_SC(const MSG_Ret_StartTakeMaster_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_StartTakeMaster_SC)
}

void MSG_Ret_StartTakeMaster_SC::SharedCtor() {
  retcode_ = 0u;
}

MSG_Ret_StartTakeMaster_SC::~MSG_Ret_StartTakeMaster_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_StartTakeMaster_SC)
  SharedDtor();
}

void MSG_Ret_StartTakeMaster_SC::SharedDtor() {
}

void MSG_Ret_StartTakeMaster_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_StartTakeMaster_SC& MSG_Ret_StartTakeMaster_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_StartTakeMaster_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_StartTakeMaster_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_StartTakeMaster_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_StartTakeMaster_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 retcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_StartTakeMaster_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_StartTakeMaster_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 retcode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_StartTakeMaster_SC)
  return target;
}

size_t MSG_Ret_StartTakeMaster_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_StartTakeMaster_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 retcode = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_StartTakeMaster_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_StartTakeMaster_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_StartTakeMaster_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_StartTakeMaster_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_StartTakeMaster_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_StartTakeMaster_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_StartTakeMaster_SC::MergeFrom(const MSG_Ret_StartTakeMaster_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_StartTakeMaster_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_retcode()) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void MSG_Ret_StartTakeMaster_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_StartTakeMaster_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_StartTakeMaster_SC::CopyFrom(const MSG_Ret_StartTakeMaster_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_StartTakeMaster_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_StartTakeMaster_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_StartTakeMaster_SC::InternalSwap(MSG_Ret_StartTakeMaster_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_StartTakeMaster_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_unpublishTakeMaster_CS::InitAsDefaultInstance() {
}
class MSG_Req_unpublishTakeMaster_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_unpublishTakeMaster_CS>()._has_bits_);
  static void set_has_pub_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_unpublishTakeMaster_CS::MSG_Req_unpublishTakeMaster_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_unpublishTakeMaster_CS)
}
MSG_Req_unpublishTakeMaster_CS::MSG_Req_unpublishTakeMaster_CS(const MSG_Req_unpublishTakeMaster_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pub_type_ = from.pub_type_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_unpublishTakeMaster_CS)
}

void MSG_Req_unpublishTakeMaster_CS::SharedCtor() {
  pub_type_ = 0u;
}

MSG_Req_unpublishTakeMaster_CS::~MSG_Req_unpublishTakeMaster_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_unpublishTakeMaster_CS)
  SharedDtor();
}

void MSG_Req_unpublishTakeMaster_CS::SharedDtor() {
}

void MSG_Req_unpublishTakeMaster_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_unpublishTakeMaster_CS& MSG_Req_unpublishTakeMaster_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_unpublishTakeMaster_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_unpublishTakeMaster_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_unpublishTakeMaster_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pub_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_unpublishTakeMaster_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 pub_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_pub_type(&has_bits);
          pub_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_unpublishTakeMaster_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_unpublishTakeMaster_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pub_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_pub_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_unpublishTakeMaster_CS)
  return target;
}

size_t MSG_Req_unpublishTakeMaster_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_unpublishTakeMaster_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pub_type = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_pub_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_unpublishTakeMaster_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_unpublishTakeMaster_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_unpublishTakeMaster_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_unpublishTakeMaster_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_unpublishTakeMaster_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_unpublishTakeMaster_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_unpublishTakeMaster_CS::MergeFrom(const MSG_Req_unpublishTakeMaster_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_unpublishTakeMaster_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_pub_type()) {
    _internal_set_pub_type(from._internal_pub_type());
  }
}

void MSG_Req_unpublishTakeMaster_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_unpublishTakeMaster_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_unpublishTakeMaster_CS::CopyFrom(const MSG_Req_unpublishTakeMaster_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_unpublishTakeMaster_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_unpublishTakeMaster_CS::IsInitialized() const {
  return true;
}

void MSG_Req_unpublishTakeMaster_CS::InternalSwap(MSG_Req_unpublishTakeMaster_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pub_type_, other->pub_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_unpublishTakeMaster_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_unpublishTakeMaster_SC::InitAsDefaultInstance() {
}
class MSG_Ret_unpublishTakeMaster_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_unpublishTakeMaster_SC>()._has_bits_);
  static void set_has_pub_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_Ret_unpublishTakeMaster_SC::MSG_Ret_unpublishTakeMaster_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_unpublishTakeMaster_SC)
}
MSG_Ret_unpublishTakeMaster_SC::MSG_Ret_unpublishTakeMaster_SC(const MSG_Ret_unpublishTakeMaster_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pub_type_, &from.pub_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&pub_type_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_unpublishTakeMaster_SC)
}

void MSG_Ret_unpublishTakeMaster_SC::SharedCtor() {
  ::memset(&pub_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&pub_type_)) + sizeof(retcode_));
}

MSG_Ret_unpublishTakeMaster_SC::~MSG_Ret_unpublishTakeMaster_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_unpublishTakeMaster_SC)
  SharedDtor();
}

void MSG_Ret_unpublishTakeMaster_SC::SharedDtor() {
}

void MSG_Ret_unpublishTakeMaster_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_unpublishTakeMaster_SC& MSG_Ret_unpublishTakeMaster_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_unpublishTakeMaster_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_unpublishTakeMaster_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_unpublishTakeMaster_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&pub_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&retcode_) -
        reinterpret_cast<char*>(&pub_type_)) + sizeof(retcode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_unpublishTakeMaster_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 pub_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_pub_type(&has_bits);
          pub_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 retcode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_unpublishTakeMaster_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_unpublishTakeMaster_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pub_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_pub_type(), target);
  }

  // optional uint32 retcode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_unpublishTakeMaster_SC)
  return target;
}

size_t MSG_Ret_unpublishTakeMaster_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_unpublishTakeMaster_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 pub_type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_pub_type());
    }

    // optional uint32 retcode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_unpublishTakeMaster_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_unpublishTakeMaster_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_unpublishTakeMaster_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_unpublishTakeMaster_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_unpublishTakeMaster_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_unpublishTakeMaster_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_unpublishTakeMaster_SC::MergeFrom(const MSG_Ret_unpublishTakeMaster_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_unpublishTakeMaster_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pub_type_ = from.pub_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_unpublishTakeMaster_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_unpublishTakeMaster_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_unpublishTakeMaster_SC::CopyFrom(const MSG_Ret_unpublishTakeMaster_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_unpublishTakeMaster_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_unpublishTakeMaster_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_unpublishTakeMaster_SC::InternalSwap(MSG_Ret_unpublishTakeMaster_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pub_type_, other->pub_type_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_unpublishTakeMaster_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_SearchMaster_CS::InitAsDefaultInstance() {
}
class MSG_Req_SearchMaster_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_SearchMaster_CS>()._has_bits_);
  static void set_has_condition_online(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_condition_attitude(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_Req_SearchMaster_CS::MSG_Req_SearchMaster_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_SearchMaster_CS)
}
MSG_Req_SearchMaster_CS::MSG_Req_SearchMaster_CS(const MSG_Req_SearchMaster_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&condition_online_, &from.condition_online_,
    static_cast<size_t>(reinterpret_cast<char*>(&condition_attitude_) -
    reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_SearchMaster_CS)
}

void MSG_Req_SearchMaster_CS::SharedCtor() {
  ::memset(&condition_online_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&condition_attitude_) -
      reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
}

MSG_Req_SearchMaster_CS::~MSG_Req_SearchMaster_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_SearchMaster_CS)
  SharedDtor();
}

void MSG_Req_SearchMaster_CS::SharedDtor() {
}

void MSG_Req_SearchMaster_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_SearchMaster_CS& MSG_Req_SearchMaster_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_SearchMaster_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_SearchMaster_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_SearchMaster_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&condition_online_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&condition_attitude_) -
        reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_SearchMaster_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 condition_online = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_condition_online(&has_bits);
          condition_online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 condition_attitude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_condition_attitude(&has_bits);
          condition_attitude_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_SearchMaster_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_SearchMaster_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 condition_online = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_condition_online(), target);
  }

  // optional uint32 condition_attitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_condition_attitude(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_SearchMaster_CS)
  return target;
}

size_t MSG_Req_SearchMaster_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_SearchMaster_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 condition_online = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_condition_online());
    }

    // optional uint32 condition_attitude = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_condition_attitude());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_SearchMaster_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_SearchMaster_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_SearchMaster_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_SearchMaster_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_SearchMaster_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_SearchMaster_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_SearchMaster_CS::MergeFrom(const MSG_Req_SearchMaster_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_SearchMaster_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      condition_online_ = from.condition_online_;
    }
    if (cached_has_bits & 0x00000002u) {
      condition_attitude_ = from.condition_attitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Req_SearchMaster_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_SearchMaster_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_SearchMaster_CS::CopyFrom(const MSG_Req_SearchMaster_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_SearchMaster_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_SearchMaster_CS::IsInitialized() const {
  return true;
}

void MSG_Req_SearchMaster_CS::InternalSwap(MSG_Req_SearchMaster_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(condition_online_, other->condition_online_);
  swap(condition_attitude_, other->condition_attitude_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_SearchMaster_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_SearchMaster_SC::InitAsDefaultInstance() {
}
class MSG_Ret_SearchMaster_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_SearchMaster_SC>()._has_bits_);
};

MSG_Ret_SearchMaster_SC::MSG_Ret_SearchMaster_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_SearchMaster_SC)
}
MSG_Ret_SearchMaster_SC::MSG_Ret_SearchMaster_SC(const MSG_Ret_SearchMaster_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_SearchMaster_SC)
}

void MSG_Ret_SearchMaster_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_SearchMaster_SC_apprentice_2eproto.base);
}

MSG_Ret_SearchMaster_SC::~MSG_Ret_SearchMaster_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_SearchMaster_SC)
  SharedDtor();
}

void MSG_Ret_SearchMaster_SC::SharedDtor() {
}

void MSG_Ret_SearchMaster_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_SearchMaster_SC& MSG_Ret_SearchMaster_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_SearchMaster_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_SearchMaster_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_SearchMaster_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_SearchMaster_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .apprentice.SearchUserInfo data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_SearchMaster_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_SearchMaster_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apprentice.SearchUserInfo data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_SearchMaster_SC)
  return target;
}

size_t MSG_Ret_SearchMaster_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_SearchMaster_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apprentice.SearchUserInfo data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_SearchMaster_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_SearchMaster_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_SearchMaster_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_SearchMaster_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_SearchMaster_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_SearchMaster_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_SearchMaster_SC::MergeFrom(const MSG_Ret_SearchMaster_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_SearchMaster_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void MSG_Ret_SearchMaster_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_SearchMaster_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_SearchMaster_SC::CopyFrom(const MSG_Ret_SearchMaster_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_SearchMaster_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_SearchMaster_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_SearchMaster_SC::InternalSwap(MSG_Ret_SearchMaster_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_SearchMaster_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_SearchApprentice_CS::InitAsDefaultInstance() {
}
class MSG_Req_SearchApprentice_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_SearchApprentice_CS>()._has_bits_);
  static void set_has_condition_online(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_condition_attitude(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_Req_SearchApprentice_CS::MSG_Req_SearchApprentice_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_SearchApprentice_CS)
}
MSG_Req_SearchApprentice_CS::MSG_Req_SearchApprentice_CS(const MSG_Req_SearchApprentice_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&condition_online_, &from.condition_online_,
    static_cast<size_t>(reinterpret_cast<char*>(&condition_attitude_) -
    reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_SearchApprentice_CS)
}

void MSG_Req_SearchApprentice_CS::SharedCtor() {
  ::memset(&condition_online_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&condition_attitude_) -
      reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
}

MSG_Req_SearchApprentice_CS::~MSG_Req_SearchApprentice_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_SearchApprentice_CS)
  SharedDtor();
}

void MSG_Req_SearchApprentice_CS::SharedDtor() {
}

void MSG_Req_SearchApprentice_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_SearchApprentice_CS& MSG_Req_SearchApprentice_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_SearchApprentice_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_SearchApprentice_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_SearchApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&condition_online_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&condition_attitude_) -
        reinterpret_cast<char*>(&condition_online_)) + sizeof(condition_attitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_SearchApprentice_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 condition_online = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_condition_online(&has_bits);
          condition_online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 condition_attitude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_condition_attitude(&has_bits);
          condition_attitude_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_SearchApprentice_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_SearchApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 condition_online = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_condition_online(), target);
  }

  // optional uint32 condition_attitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_condition_attitude(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_SearchApprentice_CS)
  return target;
}

size_t MSG_Req_SearchApprentice_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_SearchApprentice_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 condition_online = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_condition_online());
    }

    // optional uint32 condition_attitude = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_condition_attitude());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_SearchApprentice_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_SearchApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_SearchApprentice_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_SearchApprentice_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_SearchApprentice_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_SearchApprentice_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_SearchApprentice_CS::MergeFrom(const MSG_Req_SearchApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_SearchApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      condition_online_ = from.condition_online_;
    }
    if (cached_has_bits & 0x00000002u) {
      condition_attitude_ = from.condition_attitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Req_SearchApprentice_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_SearchApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_SearchApprentice_CS::CopyFrom(const MSG_Req_SearchApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_SearchApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_SearchApprentice_CS::IsInitialized() const {
  return true;
}

void MSG_Req_SearchApprentice_CS::InternalSwap(MSG_Req_SearchApprentice_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(condition_online_, other->condition_online_);
  swap(condition_attitude_, other->condition_attitude_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_SearchApprentice_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_SearchApprentice_SC::InitAsDefaultInstance() {
}
class MSG_Ret_SearchApprentice_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_SearchApprentice_SC>()._has_bits_);
};

MSG_Ret_SearchApprentice_SC::MSG_Ret_SearchApprentice_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_SearchApprentice_SC)
}
MSG_Ret_SearchApprentice_SC::MSG_Ret_SearchApprentice_SC(const MSG_Ret_SearchApprentice_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_SearchApprentice_SC)
}

void MSG_Ret_SearchApprentice_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_SearchApprentice_SC_apprentice_2eproto.base);
}

MSG_Ret_SearchApprentice_SC::~MSG_Ret_SearchApprentice_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_SearchApprentice_SC)
  SharedDtor();
}

void MSG_Ret_SearchApprentice_SC::SharedDtor() {
}

void MSG_Ret_SearchApprentice_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_SearchApprentice_SC& MSG_Ret_SearchApprentice_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_SearchApprentice_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_SearchApprentice_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_SearchApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_SearchApprentice_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .apprentice.SearchUserInfo data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_SearchApprentice_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_SearchApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apprentice.SearchUserInfo data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_SearchApprentice_SC)
  return target;
}

size_t MSG_Ret_SearchApprentice_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_SearchApprentice_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apprentice.SearchUserInfo data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_SearchApprentice_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_SearchApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_SearchApprentice_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_SearchApprentice_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_SearchApprentice_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_SearchApprentice_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_SearchApprentice_SC::MergeFrom(const MSG_Ret_SearchApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_SearchApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void MSG_Ret_SearchApprentice_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_SearchApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_SearchApprentice_SC::CopyFrom(const MSG_Ret_SearchApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_SearchApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_SearchApprentice_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_SearchApprentice_SC::InternalSwap(MSG_Ret_SearchApprentice_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_SearchApprentice_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_UserApprenticeInfo_CS::InitAsDefaultInstance() {
}
class MSG_Req_UserApprenticeInfo_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_UserApprenticeInfo_CS>()._has_bits_);
  static void set_has_charid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pub_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_Req_UserApprenticeInfo_CS::MSG_Req_UserApprenticeInfo_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_UserApprenticeInfo_CS)
}
MSG_Req_UserApprenticeInfo_CS::MSG_Req_UserApprenticeInfo_CS(const MSG_Req_UserApprenticeInfo_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&charid_, &from.charid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pub_type_) -
    reinterpret_cast<char*>(&charid_)) + sizeof(pub_type_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_UserApprenticeInfo_CS)
}

void MSG_Req_UserApprenticeInfo_CS::SharedCtor() {
  ::memset(&charid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pub_type_) -
      reinterpret_cast<char*>(&charid_)) + sizeof(pub_type_));
}

MSG_Req_UserApprenticeInfo_CS::~MSG_Req_UserApprenticeInfo_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_UserApprenticeInfo_CS)
  SharedDtor();
}

void MSG_Req_UserApprenticeInfo_CS::SharedDtor() {
}

void MSG_Req_UserApprenticeInfo_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_UserApprenticeInfo_CS& MSG_Req_UserApprenticeInfo_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_UserApprenticeInfo_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_UserApprenticeInfo_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_UserApprenticeInfo_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&charid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pub_type_) -
        reinterpret_cast<char*>(&charid_)) + sizeof(pub_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_UserApprenticeInfo_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 charid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_charid(&has_bits);
          charid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 pub_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pub_type(&has_bits);
          pub_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_UserApprenticeInfo_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_UserApprenticeInfo_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 charid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_charid(), target);
  }

  // optional uint32 pub_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_pub_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_UserApprenticeInfo_CS)
  return target;
}

size_t MSG_Req_UserApprenticeInfo_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_UserApprenticeInfo_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 charid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_charid());
    }

    // optional uint32 pub_type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_pub_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_UserApprenticeInfo_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_UserApprenticeInfo_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_UserApprenticeInfo_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_UserApprenticeInfo_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_UserApprenticeInfo_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_UserApprenticeInfo_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_UserApprenticeInfo_CS::MergeFrom(const MSG_Req_UserApprenticeInfo_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_UserApprenticeInfo_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      charid_ = from.charid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pub_type_ = from.pub_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Req_UserApprenticeInfo_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_UserApprenticeInfo_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_UserApprenticeInfo_CS::CopyFrom(const MSG_Req_UserApprenticeInfo_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_UserApprenticeInfo_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_UserApprenticeInfo_CS::IsInitialized() const {
  return true;
}

void MSG_Req_UserApprenticeInfo_CS::InternalSwap(MSG_Req_UserApprenticeInfo_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(charid_, other->charid_);
  swap(pub_type_, other->pub_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_UserApprenticeInfo_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_UserApprenticeInfo_SC::InitAsDefaultInstance() {
  ::apprentice::_MSG_Ret_UserApprenticeInfo_SC_default_instance_._instance.get_mutable()->data_ = const_cast< ::apprentice::SearchUserInfo*>(
      ::apprentice::SearchUserInfo::internal_default_instance());
}
class MSG_Ret_UserApprenticeInfo_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_UserApprenticeInfo_SC>()._has_bits_);
  static const ::apprentice::SearchUserInfo& data(const MSG_Ret_UserApprenticeInfo_SC* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pub_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apprentice::SearchUserInfo&
MSG_Ret_UserApprenticeInfo_SC::_Internal::data(const MSG_Ret_UserApprenticeInfo_SC* msg) {
  return *msg->data_;
}
MSG_Ret_UserApprenticeInfo_SC::MSG_Ret_UserApprenticeInfo_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_UserApprenticeInfo_SC)
}
MSG_Ret_UserApprenticeInfo_SC::MSG_Ret_UserApprenticeInfo_SC(const MSG_Ret_UserApprenticeInfo_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::apprentice::SearchUserInfo(*from.data_);
  } else {
    data_ = nullptr;
  }
  pub_type_ = from.pub_type_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_UserApprenticeInfo_SC)
}

void MSG_Ret_UserApprenticeInfo_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_UserApprenticeInfo_SC_apprentice_2eproto.base);
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pub_type_) -
      reinterpret_cast<char*>(&data_)) + sizeof(pub_type_));
}

MSG_Ret_UserApprenticeInfo_SC::~MSG_Ret_UserApprenticeInfo_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_UserApprenticeInfo_SC)
  SharedDtor();
}

void MSG_Ret_UserApprenticeInfo_SC::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void MSG_Ret_UserApprenticeInfo_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_UserApprenticeInfo_SC& MSG_Ret_UserApprenticeInfo_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_UserApprenticeInfo_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_UserApprenticeInfo_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_UserApprenticeInfo_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(data_ != nullptr);
    data_->Clear();
  }
  pub_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_UserApprenticeInfo_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apprentice.SearchUserInfo data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 pub_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pub_type(&has_bits);
          pub_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_UserApprenticeInfo_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_UserApprenticeInfo_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apprentice.SearchUserInfo data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::data(this), target, stream);
  }

  // optional uint32 pub_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_pub_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_UserApprenticeInfo_SC)
  return target;
}

size_t MSG_Ret_UserApprenticeInfo_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_UserApprenticeInfo_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .apprentice.SearchUserInfo data = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_);
    }

    // optional uint32 pub_type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_pub_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_UserApprenticeInfo_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_UserApprenticeInfo_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_UserApprenticeInfo_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_UserApprenticeInfo_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_UserApprenticeInfo_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_UserApprenticeInfo_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_UserApprenticeInfo_SC::MergeFrom(const MSG_Ret_UserApprenticeInfo_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_UserApprenticeInfo_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_data()->::apprentice::SearchUserInfo::MergeFrom(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      pub_type_ = from.pub_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_UserApprenticeInfo_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_UserApprenticeInfo_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_UserApprenticeInfo_SC::CopyFrom(const MSG_Ret_UserApprenticeInfo_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_UserApprenticeInfo_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_UserApprenticeInfo_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_UserApprenticeInfo_SC::InternalSwap(MSG_Ret_UserApprenticeInfo_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(data_, other->data_);
  swap(pub_type_, other->pub_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_UserApprenticeInfo_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_preQuitApprentice_CS::InitAsDefaultInstance() {
}
class MSG_Req_preQuitApprentice_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_preQuitApprentice_CS>()._has_bits_);
  static void set_has_targetid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_preQuitApprentice_CS::MSG_Req_preQuitApprentice_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_preQuitApprentice_CS)
}
MSG_Req_preQuitApprentice_CS::MSG_Req_preQuitApprentice_CS(const MSG_Req_preQuitApprentice_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetid_ = from.targetid_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_preQuitApprentice_CS)
}

void MSG_Req_preQuitApprentice_CS::SharedCtor() {
  targetid_ = PROTOBUF_ULONGLONG(0);
}

MSG_Req_preQuitApprentice_CS::~MSG_Req_preQuitApprentice_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_preQuitApprentice_CS)
  SharedDtor();
}

void MSG_Req_preQuitApprentice_CS::SharedDtor() {
}

void MSG_Req_preQuitApprentice_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_preQuitApprentice_CS& MSG_Req_preQuitApprentice_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_preQuitApprentice_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_preQuitApprentice_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_preQuitApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_preQuitApprentice_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 targetid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_targetid(&has_bits);
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_preQuitApprentice_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_preQuitApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 targetid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_targetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_preQuitApprentice_CS)
  return target;
}

size_t MSG_Req_preQuitApprentice_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_preQuitApprentice_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 targetid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_targetid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_preQuitApprentice_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_preQuitApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_preQuitApprentice_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_preQuitApprentice_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_preQuitApprentice_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_preQuitApprentice_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_preQuitApprentice_CS::MergeFrom(const MSG_Req_preQuitApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_preQuitApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_targetid()) {
    _internal_set_targetid(from._internal_targetid());
  }
}

void MSG_Req_preQuitApprentice_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_preQuitApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_preQuitApprentice_CS::CopyFrom(const MSG_Req_preQuitApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_preQuitApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_preQuitApprentice_CS::IsInitialized() const {
  return true;
}

void MSG_Req_preQuitApprentice_CS::InternalSwap(MSG_Req_preQuitApprentice_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(targetid_, other->targetid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_preQuitApprentice_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_preQuitApprentice_SC::InitAsDefaultInstance() {
}
class MSG_Ret_preQuitApprentice_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_preQuitApprentice_SC>()._has_bits_);
  static void set_has_targetid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_quittime(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_offlinetime(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_punishtime(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

MSG_Ret_preQuitApprentice_SC::MSG_Ret_preQuitApprentice_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_preQuitApprentice_SC)
}
MSG_Ret_preQuitApprentice_SC::MSG_Ret_preQuitApprentice_SC(const MSG_Ret_preQuitApprentice_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&punishtime_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(punishtime_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_preQuitApprentice_SC)
}

void MSG_Ret_preQuitApprentice_SC::SharedCtor() {
  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&punishtime_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(punishtime_));
}

MSG_Ret_preQuitApprentice_SC::~MSG_Ret_preQuitApprentice_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_preQuitApprentice_SC)
  SharedDtor();
}

void MSG_Ret_preQuitApprentice_SC::SharedDtor() {
}

void MSG_Ret_preQuitApprentice_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_preQuitApprentice_SC& MSG_Ret_preQuitApprentice_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_preQuitApprentice_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_preQuitApprentice_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_preQuitApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&targetid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&punishtime_) -
        reinterpret_cast<char*>(&targetid_)) + sizeof(punishtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_preQuitApprentice_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 targetid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_targetid(&has_bits);
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 retcode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 quittime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_quittime(&has_bits);
          quittime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 offlinetime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_offlinetime(&has_bits);
          offlinetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 punishtime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_punishtime(&has_bits);
          punishtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_preQuitApprentice_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_preQuitApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 targetid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_targetid(), target);
  }

  // optional uint32 retcode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_retcode(), target);
  }

  // optional uint32 quittime = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_quittime(), target);
  }

  // optional uint32 offlinetime = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_offlinetime(), target);
  }

  // optional uint32 punishtime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_punishtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_preQuitApprentice_SC)
  return target;
}

size_t MSG_Ret_preQuitApprentice_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_preQuitApprentice_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint64 targetid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_targetid());
    }

    // optional uint32 retcode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

    // optional uint32 quittime = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_quittime());
    }

    // optional uint32 offlinetime = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_offlinetime());
    }

    // optional uint32 punishtime = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_punishtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_preQuitApprentice_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_preQuitApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_preQuitApprentice_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_preQuitApprentice_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_preQuitApprentice_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_preQuitApprentice_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_preQuitApprentice_SC::MergeFrom(const MSG_Ret_preQuitApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_preQuitApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      targetid_ = from.targetid_;
    }
    if (cached_has_bits & 0x00000002u) {
      retcode_ = from.retcode_;
    }
    if (cached_has_bits & 0x00000004u) {
      quittime_ = from.quittime_;
    }
    if (cached_has_bits & 0x00000008u) {
      offlinetime_ = from.offlinetime_;
    }
    if (cached_has_bits & 0x00000010u) {
      punishtime_ = from.punishtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_preQuitApprentice_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_preQuitApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_preQuitApprentice_SC::CopyFrom(const MSG_Ret_preQuitApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_preQuitApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_preQuitApprentice_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_preQuitApprentice_SC::InternalSwap(MSG_Ret_preQuitApprentice_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(targetid_, other->targetid_);
  swap(retcode_, other->retcode_);
  swap(quittime_, other->quittime_);
  swap(offlinetime_, other->offlinetime_);
  swap(punishtime_, other->punishtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_preQuitApprentice_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_applyQuitApprentice_CS::InitAsDefaultInstance() {
}
class MSG_Req_applyQuitApprentice_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_applyQuitApprentice_CS>()._has_bits_);
  static void set_has_targetid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_applyQuitApprentice_CS::MSG_Req_applyQuitApprentice_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_applyQuitApprentice_CS)
}
MSG_Req_applyQuitApprentice_CS::MSG_Req_applyQuitApprentice_CS(const MSG_Req_applyQuitApprentice_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetid_ = from.targetid_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_applyQuitApprentice_CS)
}

void MSG_Req_applyQuitApprentice_CS::SharedCtor() {
  targetid_ = PROTOBUF_ULONGLONG(0);
}

MSG_Req_applyQuitApprentice_CS::~MSG_Req_applyQuitApprentice_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_applyQuitApprentice_CS)
  SharedDtor();
}

void MSG_Req_applyQuitApprentice_CS::SharedDtor() {
}

void MSG_Req_applyQuitApprentice_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_applyQuitApprentice_CS& MSG_Req_applyQuitApprentice_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_applyQuitApprentice_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_applyQuitApprentice_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_applyQuitApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_applyQuitApprentice_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 targetid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_targetid(&has_bits);
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_applyQuitApprentice_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_applyQuitApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 targetid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_targetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_applyQuitApprentice_CS)
  return target;
}

size_t MSG_Req_applyQuitApprentice_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_applyQuitApprentice_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 targetid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_targetid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_applyQuitApprentice_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_applyQuitApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_applyQuitApprentice_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_applyQuitApprentice_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_applyQuitApprentice_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_applyQuitApprentice_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_applyQuitApprentice_CS::MergeFrom(const MSG_Req_applyQuitApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_applyQuitApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_targetid()) {
    _internal_set_targetid(from._internal_targetid());
  }
}

void MSG_Req_applyQuitApprentice_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_applyQuitApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_applyQuitApprentice_CS::CopyFrom(const MSG_Req_applyQuitApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_applyQuitApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_applyQuitApprentice_CS::IsInitialized() const {
  return true;
}

void MSG_Req_applyQuitApprentice_CS::InternalSwap(MSG_Req_applyQuitApprentice_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(targetid_, other->targetid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_applyQuitApprentice_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_applyQuitApprentice_SC::InitAsDefaultInstance() {
}
class MSG_Ret_applyQuitApprentice_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_applyQuitApprentice_SC>()._has_bits_);
  static void set_has_targetid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_quit_endtime(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

MSG_Ret_applyQuitApprentice_SC::MSG_Ret_applyQuitApprentice_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_applyQuitApprentice_SC)
}
MSG_Ret_applyQuitApprentice_SC::MSG_Ret_applyQuitApprentice_SC(const MSG_Ret_applyQuitApprentice_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&quit_endtime_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(quit_endtime_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_applyQuitApprentice_SC)
}

void MSG_Ret_applyQuitApprentice_SC::SharedCtor() {
  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quit_endtime_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(quit_endtime_));
}

MSG_Ret_applyQuitApprentice_SC::~MSG_Ret_applyQuitApprentice_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_applyQuitApprentice_SC)
  SharedDtor();
}

void MSG_Ret_applyQuitApprentice_SC::SharedDtor() {
}

void MSG_Ret_applyQuitApprentice_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_applyQuitApprentice_SC& MSG_Ret_applyQuitApprentice_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_applyQuitApprentice_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_applyQuitApprentice_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_applyQuitApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&targetid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&quit_endtime_) -
        reinterpret_cast<char*>(&targetid_)) + sizeof(quit_endtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_applyQuitApprentice_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 targetid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_targetid(&has_bits);
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 retcode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 quit_endtime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_quit_endtime(&has_bits);
          quit_endtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_applyQuitApprentice_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_applyQuitApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 targetid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_targetid(), target);
  }

  // optional uint32 retcode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_retcode(), target);
  }

  // optional uint32 quit_endtime = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_quit_endtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_applyQuitApprentice_SC)
  return target;
}

size_t MSG_Ret_applyQuitApprentice_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_applyQuitApprentice_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 targetid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_targetid());
    }

    // optional uint32 retcode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

    // optional uint32 quit_endtime = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_quit_endtime());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_applyQuitApprentice_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_applyQuitApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_applyQuitApprentice_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_applyQuitApprentice_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_applyQuitApprentice_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_applyQuitApprentice_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_applyQuitApprentice_SC::MergeFrom(const MSG_Ret_applyQuitApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_applyQuitApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      targetid_ = from.targetid_;
    }
    if (cached_has_bits & 0x00000002u) {
      retcode_ = from.retcode_;
    }
    if (cached_has_bits & 0x00000004u) {
      quit_endtime_ = from.quit_endtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_applyQuitApprentice_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_applyQuitApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_applyQuitApprentice_SC::CopyFrom(const MSG_Ret_applyQuitApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_applyQuitApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_applyQuitApprentice_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_applyQuitApprentice_SC::InternalSwap(MSG_Ret_applyQuitApprentice_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(targetid_, other->targetid_);
  swap(retcode_, other->retcode_);
  swap(quit_endtime_, other->quit_endtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_applyQuitApprentice_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_unQuitApprentice_CS::InitAsDefaultInstance() {
}
class MSG_Req_unQuitApprentice_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_unQuitApprentice_CS>()._has_bits_);
  static void set_has_targetid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_unQuitApprentice_CS::MSG_Req_unQuitApprentice_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_unQuitApprentice_CS)
}
MSG_Req_unQuitApprentice_CS::MSG_Req_unQuitApprentice_CS(const MSG_Req_unQuitApprentice_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetid_ = from.targetid_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_unQuitApprentice_CS)
}

void MSG_Req_unQuitApprentice_CS::SharedCtor() {
  targetid_ = PROTOBUF_ULONGLONG(0);
}

MSG_Req_unQuitApprentice_CS::~MSG_Req_unQuitApprentice_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_unQuitApprentice_CS)
  SharedDtor();
}

void MSG_Req_unQuitApprentice_CS::SharedDtor() {
}

void MSG_Req_unQuitApprentice_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_unQuitApprentice_CS& MSG_Req_unQuitApprentice_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_unQuitApprentice_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_unQuitApprentice_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_unQuitApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_unQuitApprentice_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 targetid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_targetid(&has_bits);
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_unQuitApprentice_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_unQuitApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 targetid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_targetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_unQuitApprentice_CS)
  return target;
}

size_t MSG_Req_unQuitApprentice_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_unQuitApprentice_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 targetid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_targetid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_unQuitApprentice_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_unQuitApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_unQuitApprentice_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_unQuitApprentice_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_unQuitApprentice_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_unQuitApprentice_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_unQuitApprentice_CS::MergeFrom(const MSG_Req_unQuitApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_unQuitApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_targetid()) {
    _internal_set_targetid(from._internal_targetid());
  }
}

void MSG_Req_unQuitApprentice_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_unQuitApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_unQuitApprentice_CS::CopyFrom(const MSG_Req_unQuitApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_unQuitApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_unQuitApprentice_CS::IsInitialized() const {
  return true;
}

void MSG_Req_unQuitApprentice_CS::InternalSwap(MSG_Req_unQuitApprentice_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(targetid_, other->targetid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_unQuitApprentice_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_unQuitApprentice_SC::InitAsDefaultInstance() {
}
class MSG_Ret_unQuitApprentice_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_unQuitApprentice_SC>()._has_bits_);
  static void set_has_targetid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MSG_Ret_unQuitApprentice_SC::MSG_Ret_unQuitApprentice_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_unQuitApprentice_SC)
}
MSG_Ret_unQuitApprentice_SC::MSG_Ret_unQuitApprentice_SC(const MSG_Ret_unQuitApprentice_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_unQuitApprentice_SC)
}

void MSG_Ret_unQuitApprentice_SC::SharedCtor() {
  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(retcode_));
}

MSG_Ret_unQuitApprentice_SC::~MSG_Ret_unQuitApprentice_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_unQuitApprentice_SC)
  SharedDtor();
}

void MSG_Ret_unQuitApprentice_SC::SharedDtor() {
}

void MSG_Ret_unQuitApprentice_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_unQuitApprentice_SC& MSG_Ret_unQuitApprentice_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_unQuitApprentice_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_unQuitApprentice_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_unQuitApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&targetid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&retcode_) -
        reinterpret_cast<char*>(&targetid_)) + sizeof(retcode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_unQuitApprentice_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 targetid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_targetid(&has_bits);
          targetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 retcode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_unQuitApprentice_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_unQuitApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 targetid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_targetid(), target);
  }

  // optional uint32 retcode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_unQuitApprentice_SC)
  return target;
}

size_t MSG_Ret_unQuitApprentice_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_unQuitApprentice_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 targetid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_targetid());
    }

    // optional uint32 retcode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_unQuitApprentice_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_unQuitApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_unQuitApprentice_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_unQuitApprentice_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_unQuitApprentice_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_unQuitApprentice_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_unQuitApprentice_SC::MergeFrom(const MSG_Ret_unQuitApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_unQuitApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      targetid_ = from.targetid_;
    }
    if (cached_has_bits & 0x00000002u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_unQuitApprentice_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_unQuitApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_unQuitApprentice_SC::CopyFrom(const MSG_Ret_unQuitApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_unQuitApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_unQuitApprentice_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_unQuitApprentice_SC::InternalSwap(MSG_Ret_unQuitApprentice_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(targetid_, other->targetid_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_unQuitApprentice_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_FinishApprentice_CS::InitAsDefaultInstance() {
}
class MSG_Req_FinishApprentice_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_FinishApprentice_CS>()._has_bits_);
  static void set_has_apprentid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Req_FinishApprentice_CS::MSG_Req_FinishApprentice_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_FinishApprentice_CS)
}
MSG_Req_FinishApprentice_CS::MSG_Req_FinishApprentice_CS(const MSG_Req_FinishApprentice_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apprentid_ = from.apprentid_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_FinishApprentice_CS)
}

void MSG_Req_FinishApprentice_CS::SharedCtor() {
  apprentid_ = PROTOBUF_ULONGLONG(0);
}

MSG_Req_FinishApprentice_CS::~MSG_Req_FinishApprentice_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_FinishApprentice_CS)
  SharedDtor();
}

void MSG_Req_FinishApprentice_CS::SharedDtor() {
}

void MSG_Req_FinishApprentice_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_FinishApprentice_CS& MSG_Req_FinishApprentice_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_FinishApprentice_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_FinishApprentice_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_FinishApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apprentid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_FinishApprentice_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 apprentid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_apprentid(&has_bits);
          apprentid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_FinishApprentice_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_FinishApprentice_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 apprentid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_apprentid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_FinishApprentice_CS)
  return target;
}

size_t MSG_Req_FinishApprentice_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_FinishApprentice_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 apprentid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_apprentid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_FinishApprentice_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_FinishApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_FinishApprentice_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_FinishApprentice_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_FinishApprentice_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_FinishApprentice_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_FinishApprentice_CS::MergeFrom(const MSG_Req_FinishApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_FinishApprentice_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_apprentid()) {
    _internal_set_apprentid(from._internal_apprentid());
  }
}

void MSG_Req_FinishApprentice_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_FinishApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_FinishApprentice_CS::CopyFrom(const MSG_Req_FinishApprentice_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_FinishApprentice_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_FinishApprentice_CS::IsInitialized() const {
  return true;
}

void MSG_Req_FinishApprentice_CS::InternalSwap(MSG_Req_FinishApprentice_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(apprentid_, other->apprentid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_FinishApprentice_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_FinishApprentice_SC::InitAsDefaultInstance() {
}
class MSG_Ret_FinishApprentice_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_FinishApprentice_SC>()._has_bits_);
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_apprentid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_FinishApprentice_SC::MSG_Ret_FinishApprentice_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_FinishApprentice_SC)
}
MSG_Ret_FinishApprentice_SC::MSG_Ret_FinishApprentice_SC(const MSG_Ret_FinishApprentice_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apprentid_, &from.apprentid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&apprentid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_FinishApprentice_SC)
}

void MSG_Ret_FinishApprentice_SC::SharedCtor() {
  ::memset(&apprentid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&apprentid_)) + sizeof(retcode_));
}

MSG_Ret_FinishApprentice_SC::~MSG_Ret_FinishApprentice_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_FinishApprentice_SC)
  SharedDtor();
}

void MSG_Ret_FinishApprentice_SC::SharedDtor() {
}

void MSG_Ret_FinishApprentice_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_FinishApprentice_SC& MSG_Ret_FinishApprentice_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_FinishApprentice_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_FinishApprentice_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_FinishApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&apprentid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&retcode_) -
        reinterpret_cast<char*>(&apprentid_)) + sizeof(retcode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_FinishApprentice_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 retcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 apprentid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_apprentid(&has_bits);
          apprentid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_FinishApprentice_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_FinishApprentice_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 retcode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  // optional uint64 apprentid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_apprentid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_FinishApprentice_SC)
  return target;
}

size_t MSG_Ret_FinishApprentice_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_FinishApprentice_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 apprentid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_apprentid());
    }

    // optional uint32 retcode = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_FinishApprentice_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_FinishApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_FinishApprentice_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_FinishApprentice_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_FinishApprentice_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_FinishApprentice_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_FinishApprentice_SC::MergeFrom(const MSG_Ret_FinishApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_FinishApprentice_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      apprentid_ = from.apprentid_;
    }
    if (cached_has_bits & 0x00000002u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_FinishApprentice_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_FinishApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_FinishApprentice_SC::CopyFrom(const MSG_Ret_FinishApprentice_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_FinishApprentice_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_FinishApprentice_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_FinishApprentice_SC::InternalSwap(MSG_Ret_FinishApprentice_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(apprentid_, other->apprentid_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_FinishApprentice_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Ret_ApprenticeChange_SC::InitAsDefaultInstance() {
}
class MSG_Ret_ApprenticeChange_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Ret_ApprenticeChange_SC>()._has_bits_);
  static void set_has_changetype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_otherid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_Ret_ApprenticeChange_SC::MSG_Ret_ApprenticeChange_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Ret_ApprenticeChange_SC)
}
MSG_Ret_ApprenticeChange_SC::MSG_Ret_ApprenticeChange_SC(const MSG_Ret_ApprenticeChange_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  otherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_otherid()) {
    otherid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.otherid_);
  }
  changetype_ = from.changetype_;
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Ret_ApprenticeChange_SC)
}

void MSG_Ret_ApprenticeChange_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Ret_ApprenticeChange_SC_apprentice_2eproto.base);
  otherid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  changetype_ = 1;
}

MSG_Ret_ApprenticeChange_SC::~MSG_Ret_ApprenticeChange_SC() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Ret_ApprenticeChange_SC)
  SharedDtor();
}

void MSG_Ret_ApprenticeChange_SC::SharedDtor() {
  otherid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MSG_Ret_ApprenticeChange_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Ret_ApprenticeChange_SC& MSG_Ret_ApprenticeChange_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Ret_ApprenticeChange_SC_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Ret_ApprenticeChange_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Ret_ApprenticeChange_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      otherid_.ClearNonDefaultToEmptyNoArena();
    }
    changetype_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Ret_ApprenticeChange_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apprentice.ChangeType changetype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apprentice::ChangeType_IsValid(val))) {
            _internal_set_changetype(static_cast<::apprentice::ChangeType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string otherid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_otherid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apprentice.MSG_Ret_ApprenticeChange_SC.otherid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Ret_ApprenticeChange_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Ret_ApprenticeChange_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apprentice.ChangeType changetype = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_changetype(), target);
  }

  // optional string otherid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_otherid().data(), static_cast<int>(this->_internal_otherid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apprentice.MSG_Ret_ApprenticeChange_SC.otherid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_otherid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Ret_ApprenticeChange_SC)
  return target;
}

size_t MSG_Ret_ApprenticeChange_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Ret_ApprenticeChange_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string otherid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_otherid());
    }

    // optional .apprentice.ChangeType changetype = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_changetype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Ret_ApprenticeChange_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Ret_ApprenticeChange_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Ret_ApprenticeChange_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Ret_ApprenticeChange_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Ret_ApprenticeChange_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Ret_ApprenticeChange_SC)
    MergeFrom(*source);
  }
}

void MSG_Ret_ApprenticeChange_SC::MergeFrom(const MSG_Ret_ApprenticeChange_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Ret_ApprenticeChange_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      otherid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.otherid_);
    }
    if (cached_has_bits & 0x00000002u) {
      changetype_ = from.changetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Ret_ApprenticeChange_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Ret_ApprenticeChange_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Ret_ApprenticeChange_SC::CopyFrom(const MSG_Ret_ApprenticeChange_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Ret_ApprenticeChange_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Ret_ApprenticeChange_SC::IsInitialized() const {
  return true;
}

void MSG_Ret_ApprenticeChange_SC::InternalSwap(MSG_Ret_ApprenticeChange_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  otherid_.Swap(&other->otherid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(changetype_, other->changetype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Ret_ApprenticeChange_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_Req_OperateClientDatas_CS::InitAsDefaultInstance() {
}
class MSG_Req_OperateClientDatas_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_Req_OperateClientDatas_CS>()._has_bits_);
  static void set_has_op(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_retcode(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

MSG_Req_OperateClientDatas_CS::MSG_Req_OperateClientDatas_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MSG_Req_OperateClientDatas_CS)
}
MSG_Req_OperateClientDatas_CS::MSG_Req_OperateClientDatas_CS(const MSG_Req_OperateClientDatas_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_key()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_value()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&op_, &from.op_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&op_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:apprentice.MSG_Req_OperateClientDatas_CS)
}

void MSG_Req_OperateClientDatas_CS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_Req_OperateClientDatas_CS_apprentice_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&op_)) + sizeof(type_));
}

MSG_Req_OperateClientDatas_CS::~MSG_Req_OperateClientDatas_CS() {
  // @@protoc_insertion_point(destructor:apprentice.MSG_Req_OperateClientDatas_CS)
  SharedDtor();
}

void MSG_Req_OperateClientDatas_CS::SharedDtor() {
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MSG_Req_OperateClientDatas_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_Req_OperateClientDatas_CS& MSG_Req_OperateClientDatas_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_Req_OperateClientDatas_CS_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MSG_Req_OperateClientDatas_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MSG_Req_OperateClientDatas_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&op_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&op_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_Req_OperateClientDatas_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 op = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_op(&has_bits);
          op_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apprentice.MSG_Req_OperateClientDatas_CS.key");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apprentice.MSG_Req_OperateClientDatas_CS.value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 retcode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_retcode(&has_bits);
          retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_Req_OperateClientDatas_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MSG_Req_OperateClientDatas_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 op = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_op(), target);
  }

  // optional string key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apprentice.MSG_Req_OperateClientDatas_CS.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // optional string value = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apprentice.MSG_Req_OperateClientDatas_CS.value");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_value(), target);
  }

  // optional uint32 retcode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_retcode(), target);
  }

  // optional uint32 type = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MSG_Req_OperateClientDatas_CS)
  return target;
}

size_t MSG_Req_OperateClientDatas_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MSG_Req_OperateClientDatas_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string key = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_key());
    }

    // optional string value = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_value());
    }

    // optional uint32 op = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_op());
    }

    // optional uint32 retcode = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_retcode());
    }

    // optional uint32 type = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_Req_OperateClientDatas_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MSG_Req_OperateClientDatas_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_Req_OperateClientDatas_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_Req_OperateClientDatas_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MSG_Req_OperateClientDatas_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MSG_Req_OperateClientDatas_CS)
    MergeFrom(*source);
  }
}

void MSG_Req_OperateClientDatas_CS::MergeFrom(const MSG_Req_OperateClientDatas_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MSG_Req_OperateClientDatas_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      op_ = from.op_;
    }
    if (cached_has_bits & 0x00000008u) {
      retcode_ = from.retcode_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_Req_OperateClientDatas_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MSG_Req_OperateClientDatas_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_Req_OperateClientDatas_CS::CopyFrom(const MSG_Req_OperateClientDatas_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MSG_Req_OperateClientDatas_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_Req_OperateClientDatas_CS::IsInitialized() const {
  return true;
}

void MSG_Req_OperateClientDatas_CS::InternalSwap(MSG_Req_OperateClientDatas_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_, other->op_);
  swap(retcode_, other->retcode_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_Req_OperateClientDatas_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClientSetInfo::InitAsDefaultInstance() {
}
class ClientSetInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<ClientSetInfo>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ClientSetInfo::ClientSetInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.ClientSetInfo)
}
ClientSetInfo::ClientSetInfo(const ClientSetInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_key()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:apprentice.ClientSetInfo)
}

void ClientSetInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientSetInfo_apprentice_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = 0u;
}

ClientSetInfo::~ClientSetInfo() {
  // @@protoc_insertion_point(destructor:apprentice.ClientSetInfo)
  SharedDtor();
}

void ClientSetInfo::SharedDtor() {
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientSetInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientSetInfo& ClientSetInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientSetInfo_apprentice_2eproto.base);
  return *internal_default_instance();
}


void ClientSetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.ClientSetInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  value_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ClientSetInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apprentice.ClientSetInfo.key");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_value(&has_bits);
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientSetInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.ClientSetInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apprentice.ClientSetInfo.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // optional uint32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.ClientSetInfo)
  return target;
}

size_t ClientSetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.ClientSetInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_key());
    }

    // optional uint32 value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_value());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientSetInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.ClientSetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientSetInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientSetInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.ClientSetInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.ClientSetInfo)
    MergeFrom(*source);
  }
}

void ClientSetInfo::MergeFrom(const ClientSetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.ClientSetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClientSetInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.ClientSetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientSetInfo::CopyFrom(const ClientSetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.ClientSetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientSetInfo::IsInitialized() const {
  return true;
}

void ClientSetInfo::InternalSwap(ClientSetInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientSetInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MassiveClientSetInfo::InitAsDefaultInstance() {
}
class MassiveClientSetInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<MassiveClientSetInfo>()._has_bits_);
};

MassiveClientSetInfo::MassiveClientSetInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apprentice.MassiveClientSetInfo)
}
MassiveClientSetInfo::MassiveClientSetInfo(const MassiveClientSetInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apprentice.MassiveClientSetInfo)
}

void MassiveClientSetInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MassiveClientSetInfo_apprentice_2eproto.base);
}

MassiveClientSetInfo::~MassiveClientSetInfo() {
  // @@protoc_insertion_point(destructor:apprentice.MassiveClientSetInfo)
  SharedDtor();
}

void MassiveClientSetInfo::SharedDtor() {
}

void MassiveClientSetInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MassiveClientSetInfo& MassiveClientSetInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MassiveClientSetInfo_apprentice_2eproto.base);
  return *internal_default_instance();
}


void MassiveClientSetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:apprentice.MassiveClientSetInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MassiveClientSetInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .apprentice.ClientSetInfo data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MassiveClientSetInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apprentice.MassiveClientSetInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apprentice.ClientSetInfo data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apprentice.MassiveClientSetInfo)
  return target;
}

size_t MassiveClientSetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apprentice.MassiveClientSetInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apprentice.ClientSetInfo data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MassiveClientSetInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apprentice.MassiveClientSetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MassiveClientSetInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MassiveClientSetInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apprentice.MassiveClientSetInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apprentice.MassiveClientSetInfo)
    MergeFrom(*source);
  }
}

void MassiveClientSetInfo::MergeFrom(const MassiveClientSetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apprentice.MassiveClientSetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void MassiveClientSetInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apprentice.MassiveClientSetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MassiveClientSetInfo::CopyFrom(const MassiveClientSetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apprentice.MassiveClientSetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MassiveClientSetInfo::IsInitialized() const {
  return true;
}

void MassiveClientSetInfo::InternalSwap(MassiveClientSetInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MassiveClientSetInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace apprentice
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apprentice::UserInfo* Arena::CreateMaybeMessage< ::apprentice::UserInfo >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::UserInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::SearchUserInfo* Arena::CreateMaybeMessage< ::apprentice::SearchUserInfo >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::SearchUserInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MasterApprenticeInfo* Arena::CreateMaybeMessage< ::apprentice::MasterApprenticeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MasterApprenticeInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_MasterApprenticeInfo_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_MasterApprenticeInfo_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_MasterApprenticeInfo_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_MasterApprenticeInfo_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_MasterApprenticeInfo_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_MasterApprenticeInfo_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_ApprenticeList_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_ApprenticeList_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_ApprenticeList_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_ApprenticeList_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_ApprenticeList_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_ApprenticeList_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_MasterApprenticeCount_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_MasterApprenticeCount_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_MasterApprenticeCount_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_MasterApprenticeCount_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_MasterApprenticeCount_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_MasterApprenticeCount_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_TakeMaster_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_TakeMaster_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_TakeMaster_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_ApplyTakeMaster_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_ApplyTakeMaster_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_ApplyTakeMaster_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_AnswerTakeMaster_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_AnswerTakeMaster_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_AnswerTakeMaster_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_TakeMaster_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_TakeMaster_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_TakeMaster_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_TakeApprentice_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_TakeApprentice_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_TakeApprentice_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_ApplyTakeApprentice_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_ApplyTakeApprentice_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_ApplyTakeApprentice_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_AnswerTakeApprentice_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_AnswerTakeApprentice_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_AnswerTakeApprentice_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_TakeApprentice_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_TakeApprentice_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_TakeApprentice_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_StartTakeApprentice_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_StartTakeApprentice_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_StartTakeApprentice_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_StartTakeApprentice_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_StartTakeApprentice_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_StartTakeApprentice_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_StartTakeMaster_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_StartTakeMaster_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_StartTakeMaster_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_StartTakeMaster_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_StartTakeMaster_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_StartTakeMaster_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_unpublishTakeMaster_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_unpublishTakeMaster_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_unpublishTakeMaster_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_unpublishTakeMaster_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_unpublishTakeMaster_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_unpublishTakeMaster_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_SearchMaster_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_SearchMaster_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_SearchMaster_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_SearchMaster_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_SearchMaster_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_SearchMaster_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_SearchApprentice_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_SearchApprentice_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_SearchApprentice_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_SearchApprentice_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_SearchApprentice_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_SearchApprentice_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_UserApprenticeInfo_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_UserApprenticeInfo_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_UserApprenticeInfo_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_UserApprenticeInfo_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_UserApprenticeInfo_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_UserApprenticeInfo_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_preQuitApprentice_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_preQuitApprentice_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_preQuitApprentice_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_preQuitApprentice_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_preQuitApprentice_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_preQuitApprentice_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_applyQuitApprentice_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_applyQuitApprentice_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_applyQuitApprentice_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_applyQuitApprentice_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_applyQuitApprentice_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_applyQuitApprentice_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_unQuitApprentice_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_unQuitApprentice_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_unQuitApprentice_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_unQuitApprentice_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_unQuitApprentice_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_unQuitApprentice_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_FinishApprentice_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_FinishApprentice_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_FinishApprentice_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_FinishApprentice_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_FinishApprentice_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_FinishApprentice_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Ret_ApprenticeChange_SC* Arena::CreateMaybeMessage< ::apprentice::MSG_Ret_ApprenticeChange_SC >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Ret_ApprenticeChange_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MSG_Req_OperateClientDatas_CS* Arena::CreateMaybeMessage< ::apprentice::MSG_Req_OperateClientDatas_CS >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MSG_Req_OperateClientDatas_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::ClientSetInfo* Arena::CreateMaybeMessage< ::apprentice::ClientSetInfo >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::ClientSetInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::apprentice::MassiveClientSetInfo* Arena::CreateMaybeMessage< ::apprentice::MassiveClientSetInfo >(Arena* arena) {
  return Arena::CreateInternal< ::apprentice::MassiveClientSetInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
