// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail_cmd.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mail_5fcmd_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mail_5fcmd_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "object.pb.h"
#include "hero.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mail_5fcmd_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mail_5fcmd_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mail_5fcmd_2eproto;
namespace mail {
class MSG_Req_DeleteAllMail_CS;
class MSG_Req_DeleteAllMail_CSDefaultTypeInternal;
extern MSG_Req_DeleteAllMail_CSDefaultTypeInternal _MSG_Req_DeleteAllMail_CS_default_instance_;
class MSG_Req_DeleteMail_CS;
class MSG_Req_DeleteMail_CSDefaultTypeInternal;
extern MSG_Req_DeleteMail_CSDefaultTypeInternal _MSG_Req_DeleteMail_CS_default_instance_;
class MSG_Req_GetAllAttachment_CS;
class MSG_Req_GetAllAttachment_CSDefaultTypeInternal;
extern MSG_Req_GetAllAttachment_CSDefaultTypeInternal _MSG_Req_GetAllAttachment_CS_default_instance_;
class MSG_Req_GetAttachment_CS;
class MSG_Req_GetAttachment_CSDefaultTypeInternal;
extern MSG_Req_GetAttachment_CSDefaultTypeInternal _MSG_Req_GetAttachment_CS_default_instance_;
class MSG_Req_MailList_CS;
class MSG_Req_MailList_CSDefaultTypeInternal;
extern MSG_Req_MailList_CSDefaultTypeInternal _MSG_Req_MailList_CS_default_instance_;
class MSG_Req_OpenMail_CS;
class MSG_Req_OpenMail_CSDefaultTypeInternal;
extern MSG_Req_OpenMail_CSDefaultTypeInternal _MSG_Req_OpenMail_CS_default_instance_;
class MSG_Ret_DeleteMail_SC;
class MSG_Ret_DeleteMail_SCDefaultTypeInternal;
extern MSG_Ret_DeleteMail_SCDefaultTypeInternal _MSG_Ret_DeleteMail_SC_default_instance_;
class MSG_Ret_GetAttachment_SC;
class MSG_Ret_GetAttachment_SCDefaultTypeInternal;
extern MSG_Ret_GetAttachment_SCDefaultTypeInternal _MSG_Ret_GetAttachment_SC_default_instance_;
class MSG_Ret_MailList_SC;
class MSG_Ret_MailList_SCDefaultTypeInternal;
extern MSG_Ret_MailList_SCDefaultTypeInternal _MSG_Ret_MailList_SC_default_instance_;
class MSG_Ret_RefreshMailState_SC;
class MSG_Ret_RefreshMailState_SCDefaultTypeInternal;
extern MSG_Ret_RefreshMailState_SCDefaultTypeInternal _MSG_Ret_RefreshMailState_SC_default_instance_;
class MSG_Ret_RefreshMail_SC;
class MSG_Ret_RefreshMail_SCDefaultTypeInternal;
extern MSG_Ret_RefreshMail_SCDefaultTypeInternal _MSG_Ret_RefreshMail_SC_default_instance_;
class mail_item;
class mail_itemDefaultTypeInternal;
extern mail_itemDefaultTypeInternal _mail_item_default_instance_;
}  // namespace mail
PROTOBUF_NAMESPACE_OPEN
template<> ::mail::MSG_Req_DeleteAllMail_CS* Arena::CreateMaybeMessage<::mail::MSG_Req_DeleteAllMail_CS>(Arena*);
template<> ::mail::MSG_Req_DeleteMail_CS* Arena::CreateMaybeMessage<::mail::MSG_Req_DeleteMail_CS>(Arena*);
template<> ::mail::MSG_Req_GetAllAttachment_CS* Arena::CreateMaybeMessage<::mail::MSG_Req_GetAllAttachment_CS>(Arena*);
template<> ::mail::MSG_Req_GetAttachment_CS* Arena::CreateMaybeMessage<::mail::MSG_Req_GetAttachment_CS>(Arena*);
template<> ::mail::MSG_Req_MailList_CS* Arena::CreateMaybeMessage<::mail::MSG_Req_MailList_CS>(Arena*);
template<> ::mail::MSG_Req_OpenMail_CS* Arena::CreateMaybeMessage<::mail::MSG_Req_OpenMail_CS>(Arena*);
template<> ::mail::MSG_Ret_DeleteMail_SC* Arena::CreateMaybeMessage<::mail::MSG_Ret_DeleteMail_SC>(Arena*);
template<> ::mail::MSG_Ret_GetAttachment_SC* Arena::CreateMaybeMessage<::mail::MSG_Ret_GetAttachment_SC>(Arena*);
template<> ::mail::MSG_Ret_MailList_SC* Arena::CreateMaybeMessage<::mail::MSG_Ret_MailList_SC>(Arena*);
template<> ::mail::MSG_Ret_RefreshMailState_SC* Arena::CreateMaybeMessage<::mail::MSG_Ret_RefreshMailState_SC>(Arena*);
template<> ::mail::MSG_Ret_RefreshMail_SC* Arena::CreateMaybeMessage<::mail::MSG_Ret_RefreshMail_SC>(Arena*);
template<> ::mail::mail_item* Arena::CreateMaybeMessage<::mail::mail_item>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mail {

enum MailState : int {
  MAIL_STATE_UNREAD = 1,
  MAIL_STATE_DEL = 2,
  MAIL_STATE_DELAY = 3,
  MAIL_STATE_OPEN = 4
};
bool MailState_IsValid(int value);
constexpr MailState MailState_MIN = MAIL_STATE_UNREAD;
constexpr MailState MailState_MAX = MAIL_STATE_OPEN;
constexpr int MailState_ARRAYSIZE = MailState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MailState_descriptor();
template<typename T>
inline const std::string& MailState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MailState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MailState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MailState_descriptor(), enum_t_value);
}
inline bool MailState_Parse(
    const std::string& name, MailState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MailState>(
    MailState_descriptor(), name, value);
}
enum MailAttachState : int {
  MAIL_NO_ATTACH = 0,
  MAIL_HAS_ATTACH_DRAWN = 1,
  MAIL_ATTACH_CAN_DRAW = 2
};
bool MailAttachState_IsValid(int value);
constexpr MailAttachState MailAttachState_MIN = MAIL_NO_ATTACH;
constexpr MailAttachState MailAttachState_MAX = MAIL_ATTACH_CAN_DRAW;
constexpr int MailAttachState_ARRAYSIZE = MailAttachState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MailAttachState_descriptor();
template<typename T>
inline const std::string& MailAttachState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MailAttachState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MailAttachState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MailAttachState_descriptor(), enum_t_value);
}
inline bool MailAttachState_Parse(
    const std::string& name, MailAttachState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MailAttachState>(
    MailAttachState_descriptor(), name, value);
}
// ===================================================================

class mail_item :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.mail_item) */ {
 public:
  mail_item();
  virtual ~mail_item();

  mail_item(const mail_item& from);
  mail_item(mail_item&& from) noexcept
    : mail_item() {
    *this = ::std::move(from);
  }

  inline mail_item& operator=(const mail_item& from) {
    CopyFrom(from);
    return *this;
  }
  inline mail_item& operator=(mail_item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const mail_item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const mail_item* internal_default_instance() {
    return reinterpret_cast<const mail_item*>(
               &_mail_item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(mail_item& a, mail_item& b) {
    a.Swap(&b);
  }
  inline void Swap(mail_item* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline mail_item* New() const final {
    return CreateMaybeMessage<mail_item>(nullptr);
  }

  mail_item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<mail_item>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const mail_item& from);
  void MergeFrom(const mail_item& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(mail_item* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.mail_item";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjListFieldNumber = 10,
    kHeroListFieldNumber = 11,
    kMailidFieldNumber = 1,
    kFromidFieldNumber = 2,
    kFromnameFieldNumber = 3,
    kTitleFieldNumber = 4,
    kTextFieldNumber = 5,
    kCreatetimeFieldNumber = 6,
    kDeltimeFieldNumber = 7,
    kStateFieldNumber = 8,
    kItemgotFieldNumber = 9,
  };
  // repeated .Obj.t_Object obj_list = 10;
  int obj_list_size() const;
  private:
  int _internal_obj_list_size() const;
  public:
  void clear_obj_list();
  ::Obj::t_Object* mutable_obj_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >*
      mutable_obj_list();
  private:
  const ::Obj::t_Object& _internal_obj_list(int index) const;
  ::Obj::t_Object* _internal_add_obj_list();
  public:
  const ::Obj::t_Object& obj_list(int index) const;
  ::Obj::t_Object* add_obj_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >&
      obj_list() const;

  // repeated .hero.Hero hero_list = 11;
  int hero_list_size() const;
  private:
  int _internal_hero_list_size() const;
  public:
  void clear_hero_list();
  ::hero::Hero* mutable_hero_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >*
      mutable_hero_list();
  private:
  const ::hero::Hero& _internal_hero_list(int index) const;
  ::hero::Hero* _internal_add_hero_list();
  public:
  const ::hero::Hero& hero_list(int index) const;
  ::hero::Hero* add_hero_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >&
      hero_list() const;

  // optional string mailid = 1;
  bool has_mailid() const;
  private:
  bool _internal_has_mailid() const;
  public:
  void clear_mailid();
  const std::string& mailid() const;
  void set_mailid(const std::string& value);
  void set_mailid(std::string&& value);
  void set_mailid(const char* value);
  void set_mailid(const char* value, size_t size);
  std::string* mutable_mailid();
  std::string* release_mailid();
  void set_allocated_mailid(std::string* mailid);
  private:
  const std::string& _internal_mailid() const;
  void _internal_set_mailid(const std::string& value);
  std::string* _internal_mutable_mailid();
  public:

  // optional string fromid = 2;
  bool has_fromid() const;
  private:
  bool _internal_has_fromid() const;
  public:
  void clear_fromid();
  const std::string& fromid() const;
  void set_fromid(const std::string& value);
  void set_fromid(std::string&& value);
  void set_fromid(const char* value);
  void set_fromid(const char* value, size_t size);
  std::string* mutable_fromid();
  std::string* release_fromid();
  void set_allocated_fromid(std::string* fromid);
  private:
  const std::string& _internal_fromid() const;
  void _internal_set_fromid(const std::string& value);
  std::string* _internal_mutable_fromid();
  public:

  // optional string fromname = 3;
  bool has_fromname() const;
  private:
  bool _internal_has_fromname() const;
  public:
  void clear_fromname();
  const std::string& fromname() const;
  void set_fromname(const std::string& value);
  void set_fromname(std::string&& value);
  void set_fromname(const char* value);
  void set_fromname(const char* value, size_t size);
  std::string* mutable_fromname();
  std::string* release_fromname();
  void set_allocated_fromname(std::string* fromname);
  private:
  const std::string& _internal_fromname() const;
  void _internal_set_fromname(const std::string& value);
  std::string* _internal_mutable_fromname();
  public:

  // optional string title = 4;
  bool has_title() const;
  private:
  bool _internal_has_title() const;
  public:
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // optional string text = 5;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // optional string createtime = 6;
  bool has_createtime() const;
  private:
  bool _internal_has_createtime() const;
  public:
  void clear_createtime();
  const std::string& createtime() const;
  void set_createtime(const std::string& value);
  void set_createtime(std::string&& value);
  void set_createtime(const char* value);
  void set_createtime(const char* value, size_t size);
  std::string* mutable_createtime();
  std::string* release_createtime();
  void set_allocated_createtime(std::string* createtime);
  private:
  const std::string& _internal_createtime() const;
  void _internal_set_createtime(const std::string& value);
  std::string* _internal_mutable_createtime();
  public:

  // optional string deltime = 7;
  bool has_deltime() const;
  private:
  bool _internal_has_deltime() const;
  public:
  void clear_deltime();
  const std::string& deltime() const;
  void set_deltime(const std::string& value);
  void set_deltime(std::string&& value);
  void set_deltime(const char* value);
  void set_deltime(const char* value, size_t size);
  std::string* mutable_deltime();
  std::string* release_deltime();
  void set_allocated_deltime(std::string* deltime);
  private:
  const std::string& _internal_deltime() const;
  void _internal_set_deltime(const std::string& value);
  std::string* _internal_mutable_deltime();
  public:

  // optional uint32 state = 8;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 itemgot = 9;
  bool has_itemgot() const;
  private:
  bool _internal_has_itemgot() const;
  public:
  void clear_itemgot();
  ::PROTOBUF_NAMESPACE_ID::uint32 itemgot() const;
  void set_itemgot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_itemgot() const;
  void _internal_set_itemgot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:mail.mail_item)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object > obj_list_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero > hero_list_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mailid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fromid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fromname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr createtime_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr deltime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 itemgot_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_MailList_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Req_MailList_CS) */ {
 public:
  MSG_Req_MailList_CS();
  virtual ~MSG_Req_MailList_CS();

  MSG_Req_MailList_CS(const MSG_Req_MailList_CS& from);
  MSG_Req_MailList_CS(MSG_Req_MailList_CS&& from) noexcept
    : MSG_Req_MailList_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_MailList_CS& operator=(const MSG_Req_MailList_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_MailList_CS& operator=(MSG_Req_MailList_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_MailList_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_MailList_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_MailList_CS*>(
               &_MSG_Req_MailList_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MSG_Req_MailList_CS& a, MSG_Req_MailList_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_MailList_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_MailList_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_MailList_CS>(nullptr);
  }

  MSG_Req_MailList_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_MailList_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_MailList_CS& from);
  void MergeFrom(const MSG_Req_MailList_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_MailList_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Req_MailList_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mail.MSG_Req_MailList_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_MailList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Ret_MailList_SC) */ {
 public:
  MSG_Ret_MailList_SC();
  virtual ~MSG_Ret_MailList_SC();

  MSG_Ret_MailList_SC(const MSG_Ret_MailList_SC& from);
  MSG_Ret_MailList_SC(MSG_Ret_MailList_SC&& from) noexcept
    : MSG_Ret_MailList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_MailList_SC& operator=(const MSG_Ret_MailList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_MailList_SC& operator=(MSG_Ret_MailList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_MailList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_MailList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_MailList_SC*>(
               &_MSG_Ret_MailList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MSG_Ret_MailList_SC& a, MSG_Ret_MailList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_MailList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_MailList_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_MailList_SC>(nullptr);
  }

  MSG_Ret_MailList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_MailList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_MailList_SC& from);
  void MergeFrom(const MSG_Ret_MailList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_MailList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Ret_MailList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .mail.mail_item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::mail::mail_item* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mail::mail_item >*
      mutable_items();
  private:
  const ::mail::mail_item& _internal_items(int index) const;
  ::mail::mail_item* _internal_add_items();
  public:
  const ::mail::mail_item& items(int index) const;
  ::mail::mail_item* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mail::mail_item >&
      items() const;

  // @@protoc_insertion_point(class_scope:mail.MSG_Ret_MailList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mail::mail_item > items_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_RefreshMail_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Ret_RefreshMail_SC) */ {
 public:
  MSG_Ret_RefreshMail_SC();
  virtual ~MSG_Ret_RefreshMail_SC();

  MSG_Ret_RefreshMail_SC(const MSG_Ret_RefreshMail_SC& from);
  MSG_Ret_RefreshMail_SC(MSG_Ret_RefreshMail_SC&& from) noexcept
    : MSG_Ret_RefreshMail_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_RefreshMail_SC& operator=(const MSG_Ret_RefreshMail_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_RefreshMail_SC& operator=(MSG_Ret_RefreshMail_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_RefreshMail_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_RefreshMail_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_RefreshMail_SC*>(
               &_MSG_Ret_RefreshMail_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MSG_Ret_RefreshMail_SC& a, MSG_Ret_RefreshMail_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_RefreshMail_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_RefreshMail_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_RefreshMail_SC>(nullptr);
  }

  MSG_Ret_RefreshMail_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_RefreshMail_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_RefreshMail_SC& from);
  void MergeFrom(const MSG_Ret_RefreshMail_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_RefreshMail_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Ret_RefreshMail_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
  };
  // optional .mail.mail_item item = 1;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  const ::mail::mail_item& item() const;
  ::mail::mail_item* release_item();
  ::mail::mail_item* mutable_item();
  void set_allocated_item(::mail::mail_item* item);
  private:
  const ::mail::mail_item& _internal_item() const;
  ::mail::mail_item* _internal_mutable_item();
  public:

  // @@protoc_insertion_point(class_scope:mail.MSG_Ret_RefreshMail_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::mail::mail_item* item_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_RefreshMailState_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Ret_RefreshMailState_SC) */ {
 public:
  MSG_Ret_RefreshMailState_SC();
  virtual ~MSG_Ret_RefreshMailState_SC();

  MSG_Ret_RefreshMailState_SC(const MSG_Ret_RefreshMailState_SC& from);
  MSG_Ret_RefreshMailState_SC(MSG_Ret_RefreshMailState_SC&& from) noexcept
    : MSG_Ret_RefreshMailState_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_RefreshMailState_SC& operator=(const MSG_Ret_RefreshMailState_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_RefreshMailState_SC& operator=(MSG_Ret_RefreshMailState_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_RefreshMailState_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_RefreshMailState_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_RefreshMailState_SC*>(
               &_MSG_Ret_RefreshMailState_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MSG_Ret_RefreshMailState_SC& a, MSG_Ret_RefreshMailState_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_RefreshMailState_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_RefreshMailState_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_RefreshMailState_SC>(nullptr);
  }

  MSG_Ret_RefreshMailState_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_RefreshMailState_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_RefreshMailState_SC& from);
  void MergeFrom(const MSG_Ret_RefreshMailState_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_RefreshMailState_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Ret_RefreshMailState_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMailidFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // optional uint64 mailid = 1;
  bool has_mailid() const;
  private:
  bool _internal_has_mailid() const;
  public:
  void clear_mailid();
  ::PROTOBUF_NAMESPACE_ID::uint64 mailid() const;
  void set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mailid() const;
  void _internal_set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 state = 2;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:mail.MSG_Ret_RefreshMailState_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mailid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_OpenMail_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Req_OpenMail_CS) */ {
 public:
  MSG_Req_OpenMail_CS();
  virtual ~MSG_Req_OpenMail_CS();

  MSG_Req_OpenMail_CS(const MSG_Req_OpenMail_CS& from);
  MSG_Req_OpenMail_CS(MSG_Req_OpenMail_CS&& from) noexcept
    : MSG_Req_OpenMail_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_OpenMail_CS& operator=(const MSG_Req_OpenMail_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_OpenMail_CS& operator=(MSG_Req_OpenMail_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_OpenMail_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_OpenMail_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_OpenMail_CS*>(
               &_MSG_Req_OpenMail_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MSG_Req_OpenMail_CS& a, MSG_Req_OpenMail_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_OpenMail_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_OpenMail_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_OpenMail_CS>(nullptr);
  }

  MSG_Req_OpenMail_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_OpenMail_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_OpenMail_CS& from);
  void MergeFrom(const MSG_Req_OpenMail_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_OpenMail_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Req_OpenMail_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMailidFieldNumber = 1,
  };
  // optional uint64 mailid = 1;
  bool has_mailid() const;
  private:
  bool _internal_has_mailid() const;
  public:
  void clear_mailid();
  ::PROTOBUF_NAMESPACE_ID::uint64 mailid() const;
  void set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mailid() const;
  void _internal_set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:mail.MSG_Req_OpenMail_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mailid_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GetAttachment_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Req_GetAttachment_CS) */ {
 public:
  MSG_Req_GetAttachment_CS();
  virtual ~MSG_Req_GetAttachment_CS();

  MSG_Req_GetAttachment_CS(const MSG_Req_GetAttachment_CS& from);
  MSG_Req_GetAttachment_CS(MSG_Req_GetAttachment_CS&& from) noexcept
    : MSG_Req_GetAttachment_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GetAttachment_CS& operator=(const MSG_Req_GetAttachment_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GetAttachment_CS& operator=(MSG_Req_GetAttachment_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GetAttachment_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GetAttachment_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GetAttachment_CS*>(
               &_MSG_Req_GetAttachment_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MSG_Req_GetAttachment_CS& a, MSG_Req_GetAttachment_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GetAttachment_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GetAttachment_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GetAttachment_CS>(nullptr);
  }

  MSG_Req_GetAttachment_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GetAttachment_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GetAttachment_CS& from);
  void MergeFrom(const MSG_Req_GetAttachment_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GetAttachment_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Req_GetAttachment_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMailidFieldNumber = 1,
  };
  // optional string mailid = 1;
  bool has_mailid() const;
  private:
  bool _internal_has_mailid() const;
  public:
  void clear_mailid();
  const std::string& mailid() const;
  void set_mailid(const std::string& value);
  void set_mailid(std::string&& value);
  void set_mailid(const char* value);
  void set_mailid(const char* value, size_t size);
  std::string* mutable_mailid();
  std::string* release_mailid();
  void set_allocated_mailid(std::string* mailid);
  private:
  const std::string& _internal_mailid() const;
  void _internal_set_mailid(const std::string& value);
  std::string* _internal_mutable_mailid();
  public:

  // @@protoc_insertion_point(class_scope:mail.MSG_Req_GetAttachment_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mailid_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_GetAttachment_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Ret_GetAttachment_SC) */ {
 public:
  MSG_Ret_GetAttachment_SC();
  virtual ~MSG_Ret_GetAttachment_SC();

  MSG_Ret_GetAttachment_SC(const MSG_Ret_GetAttachment_SC& from);
  MSG_Ret_GetAttachment_SC(MSG_Ret_GetAttachment_SC&& from) noexcept
    : MSG_Ret_GetAttachment_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_GetAttachment_SC& operator=(const MSG_Ret_GetAttachment_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_GetAttachment_SC& operator=(MSG_Ret_GetAttachment_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_GetAttachment_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_GetAttachment_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_GetAttachment_SC*>(
               &_MSG_Ret_GetAttachment_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_Ret_GetAttachment_SC& a, MSG_Ret_GetAttachment_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_GetAttachment_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_GetAttachment_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_GetAttachment_SC>(nullptr);
  }

  MSG_Ret_GetAttachment_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_GetAttachment_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_GetAttachment_SC& from);
  void MergeFrom(const MSG_Ret_GetAttachment_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_GetAttachment_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Ret_GetAttachment_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMailidFieldNumber = 1,
    kRetFieldNumber = 2,
  };
  // optional uint64 mailid = 1;
  bool has_mailid() const;
  private:
  bool _internal_has_mailid() const;
  public:
  void clear_mailid();
  ::PROTOBUF_NAMESPACE_ID::uint64 mailid() const;
  void set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mailid() const;
  void _internal_set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool ret = 2;
  bool has_ret() const;
  private:
  bool _internal_has_ret() const;
  public:
  void clear_ret();
  bool ret() const;
  void set_ret(bool value);
  private:
  bool _internal_ret() const;
  void _internal_set_ret(bool value);
  public:

  // @@protoc_insertion_point(class_scope:mail.MSG_Ret_GetAttachment_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mailid_;
  bool ret_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_GetAllAttachment_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Req_GetAllAttachment_CS) */ {
 public:
  MSG_Req_GetAllAttachment_CS();
  virtual ~MSG_Req_GetAllAttachment_CS();

  MSG_Req_GetAllAttachment_CS(const MSG_Req_GetAllAttachment_CS& from);
  MSG_Req_GetAllAttachment_CS(MSG_Req_GetAllAttachment_CS&& from) noexcept
    : MSG_Req_GetAllAttachment_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_GetAllAttachment_CS& operator=(const MSG_Req_GetAllAttachment_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_GetAllAttachment_CS& operator=(MSG_Req_GetAllAttachment_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_GetAllAttachment_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_GetAllAttachment_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_GetAllAttachment_CS*>(
               &_MSG_Req_GetAllAttachment_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_Req_GetAllAttachment_CS& a, MSG_Req_GetAllAttachment_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_GetAllAttachment_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_GetAllAttachment_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_GetAllAttachment_CS>(nullptr);
  }

  MSG_Req_GetAllAttachment_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_GetAllAttachment_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_GetAllAttachment_CS& from);
  void MergeFrom(const MSG_Req_GetAllAttachment_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_GetAllAttachment_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Req_GetAllAttachment_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mail.MSG_Req_GetAllAttachment_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_DeleteMail_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Req_DeleteMail_CS) */ {
 public:
  MSG_Req_DeleteMail_CS();
  virtual ~MSG_Req_DeleteMail_CS();

  MSG_Req_DeleteMail_CS(const MSG_Req_DeleteMail_CS& from);
  MSG_Req_DeleteMail_CS(MSG_Req_DeleteMail_CS&& from) noexcept
    : MSG_Req_DeleteMail_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_DeleteMail_CS& operator=(const MSG_Req_DeleteMail_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_DeleteMail_CS& operator=(MSG_Req_DeleteMail_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_DeleteMail_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_DeleteMail_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_DeleteMail_CS*>(
               &_MSG_Req_DeleteMail_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_Req_DeleteMail_CS& a, MSG_Req_DeleteMail_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_DeleteMail_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_DeleteMail_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_DeleteMail_CS>(nullptr);
  }

  MSG_Req_DeleteMail_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_DeleteMail_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_DeleteMail_CS& from);
  void MergeFrom(const MSG_Req_DeleteMail_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_DeleteMail_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Req_DeleteMail_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMailidFieldNumber = 1,
  };
  // optional uint64 mailid = 1;
  bool has_mailid() const;
  private:
  bool _internal_has_mailid() const;
  public:
  void clear_mailid();
  ::PROTOBUF_NAMESPACE_ID::uint64 mailid() const;
  void set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mailid() const;
  void _internal_set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:mail.MSG_Req_DeleteMail_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mailid_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_DeleteMail_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Ret_DeleteMail_SC) */ {
 public:
  MSG_Ret_DeleteMail_SC();
  virtual ~MSG_Ret_DeleteMail_SC();

  MSG_Ret_DeleteMail_SC(const MSG_Ret_DeleteMail_SC& from);
  MSG_Ret_DeleteMail_SC(MSG_Ret_DeleteMail_SC&& from) noexcept
    : MSG_Ret_DeleteMail_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_DeleteMail_SC& operator=(const MSG_Ret_DeleteMail_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_DeleteMail_SC& operator=(MSG_Ret_DeleteMail_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_DeleteMail_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_DeleteMail_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_DeleteMail_SC*>(
               &_MSG_Ret_DeleteMail_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MSG_Ret_DeleteMail_SC& a, MSG_Ret_DeleteMail_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_DeleteMail_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_DeleteMail_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_DeleteMail_SC>(nullptr);
  }

  MSG_Ret_DeleteMail_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_DeleteMail_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_DeleteMail_SC& from);
  void MergeFrom(const MSG_Ret_DeleteMail_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_DeleteMail_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Ret_DeleteMail_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMailidFieldNumber = 1,
    kRetFieldNumber = 2,
  };
  // repeated string mailid = 1;
  int mailid_size() const;
  private:
  int _internal_mailid_size() const;
  public:
  void clear_mailid();
  const std::string& mailid(int index) const;
  std::string* mutable_mailid(int index);
  void set_mailid(int index, const std::string& value);
  void set_mailid(int index, std::string&& value);
  void set_mailid(int index, const char* value);
  void set_mailid(int index, const char* value, size_t size);
  std::string* add_mailid();
  void add_mailid(const std::string& value);
  void add_mailid(std::string&& value);
  void add_mailid(const char* value);
  void add_mailid(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& mailid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_mailid();
  private:
  const std::string& _internal_mailid(int index) const;
  std::string* _internal_add_mailid();
  public:

  // optional bool ret = 2;
  bool has_ret() const;
  private:
  bool _internal_has_ret() const;
  public:
  void clear_ret();
  bool ret() const;
  void set_ret(bool value);
  private:
  bool _internal_ret() const;
  void _internal_set_ret(bool value);
  public:

  // @@protoc_insertion_point(class_scope:mail.MSG_Ret_DeleteMail_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> mailid_;
  bool ret_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_DeleteAllMail_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mail.MSG_Req_DeleteAllMail_CS) */ {
 public:
  MSG_Req_DeleteAllMail_CS();
  virtual ~MSG_Req_DeleteAllMail_CS();

  MSG_Req_DeleteAllMail_CS(const MSG_Req_DeleteAllMail_CS& from);
  MSG_Req_DeleteAllMail_CS(MSG_Req_DeleteAllMail_CS&& from) noexcept
    : MSG_Req_DeleteAllMail_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_DeleteAllMail_CS& operator=(const MSG_Req_DeleteAllMail_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_DeleteAllMail_CS& operator=(MSG_Req_DeleteAllMail_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_DeleteAllMail_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_DeleteAllMail_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_DeleteAllMail_CS*>(
               &_MSG_Req_DeleteAllMail_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_Req_DeleteAllMail_CS& a, MSG_Req_DeleteAllMail_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_DeleteAllMail_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_DeleteAllMail_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_DeleteAllMail_CS>(nullptr);
  }

  MSG_Req_DeleteAllMail_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_DeleteAllMail_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_DeleteAllMail_CS& from);
  void MergeFrom(const MSG_Req_DeleteAllMail_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_DeleteAllMail_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mail.MSG_Req_DeleteAllMail_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mail_5fcmd_2eproto);
    return ::descriptor_table_mail_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mail.MSG_Req_DeleteAllMail_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mail_5fcmd_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// mail_item

// optional string mailid = 1;
inline bool mail_item::_internal_has_mailid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool mail_item::has_mailid() const {
  return _internal_has_mailid();
}
inline void mail_item::clear_mailid() {
  mailid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& mail_item::mailid() const {
  // @@protoc_insertion_point(field_get:mail.mail_item.mailid)
  return _internal_mailid();
}
inline void mail_item::set_mailid(const std::string& value) {
  _internal_set_mailid(value);
  // @@protoc_insertion_point(field_set:mail.mail_item.mailid)
}
inline std::string* mail_item::mutable_mailid() {
  // @@protoc_insertion_point(field_mutable:mail.mail_item.mailid)
  return _internal_mutable_mailid();
}
inline const std::string& mail_item::_internal_mailid() const {
  return mailid_.GetNoArena();
}
inline void mail_item::_internal_set_mailid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  mailid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void mail_item::set_mailid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  mailid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mail.mail_item.mailid)
}
inline void mail_item::set_mailid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  mailid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mail.mail_item.mailid)
}
inline void mail_item::set_mailid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  mailid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mail.mail_item.mailid)
}
inline std::string* mail_item::_internal_mutable_mailid() {
  _has_bits_[0] |= 0x00000001u;
  return mailid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* mail_item::release_mailid() {
  // @@protoc_insertion_point(field_release:mail.mail_item.mailid)
  if (!_internal_has_mailid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return mailid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void mail_item::set_allocated_mailid(std::string* mailid) {
  if (mailid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mailid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mailid);
  // @@protoc_insertion_point(field_set_allocated:mail.mail_item.mailid)
}

// optional string fromid = 2;
inline bool mail_item::_internal_has_fromid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool mail_item::has_fromid() const {
  return _internal_has_fromid();
}
inline void mail_item::clear_fromid() {
  fromid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& mail_item::fromid() const {
  // @@protoc_insertion_point(field_get:mail.mail_item.fromid)
  return _internal_fromid();
}
inline void mail_item::set_fromid(const std::string& value) {
  _internal_set_fromid(value);
  // @@protoc_insertion_point(field_set:mail.mail_item.fromid)
}
inline std::string* mail_item::mutable_fromid() {
  // @@protoc_insertion_point(field_mutable:mail.mail_item.fromid)
  return _internal_mutable_fromid();
}
inline const std::string& mail_item::_internal_fromid() const {
  return fromid_.GetNoArena();
}
inline void mail_item::_internal_set_fromid(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  fromid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void mail_item::set_fromid(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  fromid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mail.mail_item.fromid)
}
inline void mail_item::set_fromid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  fromid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mail.mail_item.fromid)
}
inline void mail_item::set_fromid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  fromid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mail.mail_item.fromid)
}
inline std::string* mail_item::_internal_mutable_fromid() {
  _has_bits_[0] |= 0x00000002u;
  return fromid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* mail_item::release_fromid() {
  // @@protoc_insertion_point(field_release:mail.mail_item.fromid)
  if (!_internal_has_fromid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return fromid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void mail_item::set_allocated_fromid(std::string* fromid) {
  if (fromid != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  fromid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fromid);
  // @@protoc_insertion_point(field_set_allocated:mail.mail_item.fromid)
}

// optional string fromname = 3;
inline bool mail_item::_internal_has_fromname() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool mail_item::has_fromname() const {
  return _internal_has_fromname();
}
inline void mail_item::clear_fromname() {
  fromname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& mail_item::fromname() const {
  // @@protoc_insertion_point(field_get:mail.mail_item.fromname)
  return _internal_fromname();
}
inline void mail_item::set_fromname(const std::string& value) {
  _internal_set_fromname(value);
  // @@protoc_insertion_point(field_set:mail.mail_item.fromname)
}
inline std::string* mail_item::mutable_fromname() {
  // @@protoc_insertion_point(field_mutable:mail.mail_item.fromname)
  return _internal_mutable_fromname();
}
inline const std::string& mail_item::_internal_fromname() const {
  return fromname_.GetNoArena();
}
inline void mail_item::_internal_set_fromname(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  fromname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void mail_item::set_fromname(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  fromname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mail.mail_item.fromname)
}
inline void mail_item::set_fromname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  fromname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mail.mail_item.fromname)
}
inline void mail_item::set_fromname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  fromname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mail.mail_item.fromname)
}
inline std::string* mail_item::_internal_mutable_fromname() {
  _has_bits_[0] |= 0x00000004u;
  return fromname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* mail_item::release_fromname() {
  // @@protoc_insertion_point(field_release:mail.mail_item.fromname)
  if (!_internal_has_fromname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return fromname_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void mail_item::set_allocated_fromname(std::string* fromname) {
  if (fromname != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  fromname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fromname);
  // @@protoc_insertion_point(field_set_allocated:mail.mail_item.fromname)
}

// optional string title = 4;
inline bool mail_item::_internal_has_title() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool mail_item::has_title() const {
  return _internal_has_title();
}
inline void mail_item::clear_title() {
  title_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& mail_item::title() const {
  // @@protoc_insertion_point(field_get:mail.mail_item.title)
  return _internal_title();
}
inline void mail_item::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:mail.mail_item.title)
}
inline std::string* mail_item::mutable_title() {
  // @@protoc_insertion_point(field_mutable:mail.mail_item.title)
  return _internal_mutable_title();
}
inline const std::string& mail_item::_internal_title() const {
  return title_.GetNoArena();
}
inline void mail_item::_internal_set_title(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void mail_item::set_title(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  title_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mail.mail_item.title)
}
inline void mail_item::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mail.mail_item.title)
}
inline void mail_item::set_title(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  title_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mail.mail_item.title)
}
inline std::string* mail_item::_internal_mutable_title() {
  _has_bits_[0] |= 0x00000008u;
  return title_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* mail_item::release_title() {
  // @@protoc_insertion_point(field_release:mail.mail_item.title)
  if (!_internal_has_title()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return title_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void mail_item::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  title_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mail.mail_item.title)
}

// optional string text = 5;
inline bool mail_item::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool mail_item::has_text() const {
  return _internal_has_text();
}
inline void mail_item::clear_text() {
  text_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& mail_item::text() const {
  // @@protoc_insertion_point(field_get:mail.mail_item.text)
  return _internal_text();
}
inline void mail_item::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:mail.mail_item.text)
}
inline std::string* mail_item::mutable_text() {
  // @@protoc_insertion_point(field_mutable:mail.mail_item.text)
  return _internal_mutable_text();
}
inline const std::string& mail_item::_internal_text() const {
  return text_.GetNoArena();
}
inline void mail_item::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void mail_item::set_text(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  text_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mail.mail_item.text)
}
inline void mail_item::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mail.mail_item.text)
}
inline void mail_item::set_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  text_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mail.mail_item.text)
}
inline std::string* mail_item::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000010u;
  return text_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* mail_item::release_text() {
  // @@protoc_insertion_point(field_release:mail.mail_item.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return text_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void mail_item::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  text_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:mail.mail_item.text)
}

// optional string createtime = 6;
inline bool mail_item::_internal_has_createtime() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool mail_item::has_createtime() const {
  return _internal_has_createtime();
}
inline void mail_item::clear_createtime() {
  createtime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& mail_item::createtime() const {
  // @@protoc_insertion_point(field_get:mail.mail_item.createtime)
  return _internal_createtime();
}
inline void mail_item::set_createtime(const std::string& value) {
  _internal_set_createtime(value);
  // @@protoc_insertion_point(field_set:mail.mail_item.createtime)
}
inline std::string* mail_item::mutable_createtime() {
  // @@protoc_insertion_point(field_mutable:mail.mail_item.createtime)
  return _internal_mutable_createtime();
}
inline const std::string& mail_item::_internal_createtime() const {
  return createtime_.GetNoArena();
}
inline void mail_item::_internal_set_createtime(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  createtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void mail_item::set_createtime(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  createtime_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mail.mail_item.createtime)
}
inline void mail_item::set_createtime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  createtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mail.mail_item.createtime)
}
inline void mail_item::set_createtime(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  createtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mail.mail_item.createtime)
}
inline std::string* mail_item::_internal_mutable_createtime() {
  _has_bits_[0] |= 0x00000020u;
  return createtime_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* mail_item::release_createtime() {
  // @@protoc_insertion_point(field_release:mail.mail_item.createtime)
  if (!_internal_has_createtime()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return createtime_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void mail_item::set_allocated_createtime(std::string* createtime) {
  if (createtime != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  createtime_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), createtime);
  // @@protoc_insertion_point(field_set_allocated:mail.mail_item.createtime)
}

// optional string deltime = 7;
inline bool mail_item::_internal_has_deltime() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool mail_item::has_deltime() const {
  return _internal_has_deltime();
}
inline void mail_item::clear_deltime() {
  deltime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& mail_item::deltime() const {
  // @@protoc_insertion_point(field_get:mail.mail_item.deltime)
  return _internal_deltime();
}
inline void mail_item::set_deltime(const std::string& value) {
  _internal_set_deltime(value);
  // @@protoc_insertion_point(field_set:mail.mail_item.deltime)
}
inline std::string* mail_item::mutable_deltime() {
  // @@protoc_insertion_point(field_mutable:mail.mail_item.deltime)
  return _internal_mutable_deltime();
}
inline const std::string& mail_item::_internal_deltime() const {
  return deltime_.GetNoArena();
}
inline void mail_item::_internal_set_deltime(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  deltime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void mail_item::set_deltime(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  deltime_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mail.mail_item.deltime)
}
inline void mail_item::set_deltime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  deltime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mail.mail_item.deltime)
}
inline void mail_item::set_deltime(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  deltime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mail.mail_item.deltime)
}
inline std::string* mail_item::_internal_mutable_deltime() {
  _has_bits_[0] |= 0x00000040u;
  return deltime_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* mail_item::release_deltime() {
  // @@protoc_insertion_point(field_release:mail.mail_item.deltime)
  if (!_internal_has_deltime()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return deltime_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void mail_item::set_allocated_deltime(std::string* deltime) {
  if (deltime != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  deltime_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), deltime);
  // @@protoc_insertion_point(field_set_allocated:mail.mail_item.deltime)
}

// optional uint32 state = 8;
inline bool mail_item::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool mail_item::has_state() const {
  return _internal_has_state();
}
inline void mail_item::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 mail_item::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 mail_item::state() const {
  // @@protoc_insertion_point(field_get:mail.mail_item.state)
  return _internal_state();
}
inline void mail_item::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  state_ = value;
}
inline void mail_item::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:mail.mail_item.state)
}

// optional uint32 itemgot = 9;
inline bool mail_item::_internal_has_itemgot() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool mail_item::has_itemgot() const {
  return _internal_has_itemgot();
}
inline void mail_item::clear_itemgot() {
  itemgot_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 mail_item::_internal_itemgot() const {
  return itemgot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 mail_item::itemgot() const {
  // @@protoc_insertion_point(field_get:mail.mail_item.itemgot)
  return _internal_itemgot();
}
inline void mail_item::_internal_set_itemgot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  itemgot_ = value;
}
inline void mail_item::set_itemgot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_itemgot(value);
  // @@protoc_insertion_point(field_set:mail.mail_item.itemgot)
}

// repeated .Obj.t_Object obj_list = 10;
inline int mail_item::_internal_obj_list_size() const {
  return obj_list_.size();
}
inline int mail_item::obj_list_size() const {
  return _internal_obj_list_size();
}
inline ::Obj::t_Object* mail_item::mutable_obj_list(int index) {
  // @@protoc_insertion_point(field_mutable:mail.mail_item.obj_list)
  return obj_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >*
mail_item::mutable_obj_list() {
  // @@protoc_insertion_point(field_mutable_list:mail.mail_item.obj_list)
  return &obj_list_;
}
inline const ::Obj::t_Object& mail_item::_internal_obj_list(int index) const {
  return obj_list_.Get(index);
}
inline const ::Obj::t_Object& mail_item::obj_list(int index) const {
  // @@protoc_insertion_point(field_get:mail.mail_item.obj_list)
  return _internal_obj_list(index);
}
inline ::Obj::t_Object* mail_item::_internal_add_obj_list() {
  return obj_list_.Add();
}
inline ::Obj::t_Object* mail_item::add_obj_list() {
  // @@protoc_insertion_point(field_add:mail.mail_item.obj_list)
  return _internal_add_obj_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Obj::t_Object >&
mail_item::obj_list() const {
  // @@protoc_insertion_point(field_list:mail.mail_item.obj_list)
  return obj_list_;
}

// repeated .hero.Hero hero_list = 11;
inline int mail_item::_internal_hero_list_size() const {
  return hero_list_.size();
}
inline int mail_item::hero_list_size() const {
  return _internal_hero_list_size();
}
inline ::hero::Hero* mail_item::mutable_hero_list(int index) {
  // @@protoc_insertion_point(field_mutable:mail.mail_item.hero_list)
  return hero_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >*
mail_item::mutable_hero_list() {
  // @@protoc_insertion_point(field_mutable_list:mail.mail_item.hero_list)
  return &hero_list_;
}
inline const ::hero::Hero& mail_item::_internal_hero_list(int index) const {
  return hero_list_.Get(index);
}
inline const ::hero::Hero& mail_item::hero_list(int index) const {
  // @@protoc_insertion_point(field_get:mail.mail_item.hero_list)
  return _internal_hero_list(index);
}
inline ::hero::Hero* mail_item::_internal_add_hero_list() {
  return hero_list_.Add();
}
inline ::hero::Hero* mail_item::add_hero_list() {
  // @@protoc_insertion_point(field_add:mail.mail_item.hero_list)
  return _internal_add_hero_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero::Hero >&
mail_item::hero_list() const {
  // @@protoc_insertion_point(field_list:mail.mail_item.hero_list)
  return hero_list_;
}

// -------------------------------------------------------------------

// MSG_Req_MailList_CS

// -------------------------------------------------------------------

// MSG_Ret_MailList_SC

// repeated .mail.mail_item items = 1;
inline int MSG_Ret_MailList_SC::_internal_items_size() const {
  return items_.size();
}
inline int MSG_Ret_MailList_SC::items_size() const {
  return _internal_items_size();
}
inline void MSG_Ret_MailList_SC::clear_items() {
  items_.Clear();
}
inline ::mail::mail_item* MSG_Ret_MailList_SC::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:mail.MSG_Ret_MailList_SC.items)
  return items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mail::mail_item >*
MSG_Ret_MailList_SC::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:mail.MSG_Ret_MailList_SC.items)
  return &items_;
}
inline const ::mail::mail_item& MSG_Ret_MailList_SC::_internal_items(int index) const {
  return items_.Get(index);
}
inline const ::mail::mail_item& MSG_Ret_MailList_SC::items(int index) const {
  // @@protoc_insertion_point(field_get:mail.MSG_Ret_MailList_SC.items)
  return _internal_items(index);
}
inline ::mail::mail_item* MSG_Ret_MailList_SC::_internal_add_items() {
  return items_.Add();
}
inline ::mail::mail_item* MSG_Ret_MailList_SC::add_items() {
  // @@protoc_insertion_point(field_add:mail.MSG_Ret_MailList_SC.items)
  return _internal_add_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mail::mail_item >&
MSG_Ret_MailList_SC::items() const {
  // @@protoc_insertion_point(field_list:mail.MSG_Ret_MailList_SC.items)
  return items_;
}

// -------------------------------------------------------------------

// MSG_Ret_RefreshMail_SC

// optional .mail.mail_item item = 1;
inline bool MSG_Ret_RefreshMail_SC::_internal_has_item() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || item_ != nullptr);
  return value;
}
inline bool MSG_Ret_RefreshMail_SC::has_item() const {
  return _internal_has_item();
}
inline void MSG_Ret_RefreshMail_SC::clear_item() {
  if (item_ != nullptr) item_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::mail::mail_item& MSG_Ret_RefreshMail_SC::_internal_item() const {
  const ::mail::mail_item* p = item_;
  return p != nullptr ? *p : *reinterpret_cast<const ::mail::mail_item*>(
      &::mail::_mail_item_default_instance_);
}
inline const ::mail::mail_item& MSG_Ret_RefreshMail_SC::item() const {
  // @@protoc_insertion_point(field_get:mail.MSG_Ret_RefreshMail_SC.item)
  return _internal_item();
}
inline ::mail::mail_item* MSG_Ret_RefreshMail_SC::release_item() {
  // @@protoc_insertion_point(field_release:mail.MSG_Ret_RefreshMail_SC.item)
  _has_bits_[0] &= ~0x00000001u;
  ::mail::mail_item* temp = item_;
  item_ = nullptr;
  return temp;
}
inline ::mail::mail_item* MSG_Ret_RefreshMail_SC::_internal_mutable_item() {
  _has_bits_[0] |= 0x00000001u;
  if (item_ == nullptr) {
    auto* p = CreateMaybeMessage<::mail::mail_item>(GetArenaNoVirtual());
    item_ = p;
  }
  return item_;
}
inline ::mail::mail_item* MSG_Ret_RefreshMail_SC::mutable_item() {
  // @@protoc_insertion_point(field_mutable:mail.MSG_Ret_RefreshMail_SC.item)
  return _internal_mutable_item();
}
inline void MSG_Ret_RefreshMail_SC::set_allocated_item(::mail::mail_item* item) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete item_;
  }
  if (item) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      item = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:mail.MSG_Ret_RefreshMail_SC.item)
}

// -------------------------------------------------------------------

// MSG_Ret_RefreshMailState_SC

// optional uint64 mailid = 1;
inline bool MSG_Ret_RefreshMailState_SC::_internal_has_mailid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_RefreshMailState_SC::has_mailid() const {
  return _internal_has_mailid();
}
inline void MSG_Ret_RefreshMailState_SC::clear_mailid() {
  mailid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_RefreshMailState_SC::_internal_mailid() const {
  return mailid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_RefreshMailState_SC::mailid() const {
  // @@protoc_insertion_point(field_get:mail.MSG_Ret_RefreshMailState_SC.mailid)
  return _internal_mailid();
}
inline void MSG_Ret_RefreshMailState_SC::_internal_set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  mailid_ = value;
}
inline void MSG_Ret_RefreshMailState_SC::set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mailid(value);
  // @@protoc_insertion_point(field_set:mail.MSG_Ret_RefreshMailState_SC.mailid)
}

// optional uint32 state = 2;
inline bool MSG_Ret_RefreshMailState_SC::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_RefreshMailState_SC::has_state() const {
  return _internal_has_state();
}
inline void MSG_Ret_RefreshMailState_SC::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_RefreshMailState_SC::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_RefreshMailState_SC::state() const {
  // @@protoc_insertion_point(field_get:mail.MSG_Ret_RefreshMailState_SC.state)
  return _internal_state();
}
inline void MSG_Ret_RefreshMailState_SC::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  state_ = value;
}
inline void MSG_Ret_RefreshMailState_SC::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:mail.MSG_Ret_RefreshMailState_SC.state)
}

// -------------------------------------------------------------------

// MSG_Req_OpenMail_CS

// optional uint64 mailid = 1;
inline bool MSG_Req_OpenMail_CS::_internal_has_mailid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_OpenMail_CS::has_mailid() const {
  return _internal_has_mailid();
}
inline void MSG_Req_OpenMail_CS::clear_mailid() {
  mailid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_OpenMail_CS::_internal_mailid() const {
  return mailid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_OpenMail_CS::mailid() const {
  // @@protoc_insertion_point(field_get:mail.MSG_Req_OpenMail_CS.mailid)
  return _internal_mailid();
}
inline void MSG_Req_OpenMail_CS::_internal_set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  mailid_ = value;
}
inline void MSG_Req_OpenMail_CS::set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mailid(value);
  // @@protoc_insertion_point(field_set:mail.MSG_Req_OpenMail_CS.mailid)
}

// -------------------------------------------------------------------

// MSG_Req_GetAttachment_CS

// optional string mailid = 1;
inline bool MSG_Req_GetAttachment_CS::_internal_has_mailid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_GetAttachment_CS::has_mailid() const {
  return _internal_has_mailid();
}
inline void MSG_Req_GetAttachment_CS::clear_mailid() {
  mailid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_Req_GetAttachment_CS::mailid() const {
  // @@protoc_insertion_point(field_get:mail.MSG_Req_GetAttachment_CS.mailid)
  return _internal_mailid();
}
inline void MSG_Req_GetAttachment_CS::set_mailid(const std::string& value) {
  _internal_set_mailid(value);
  // @@protoc_insertion_point(field_set:mail.MSG_Req_GetAttachment_CS.mailid)
}
inline std::string* MSG_Req_GetAttachment_CS::mutable_mailid() {
  // @@protoc_insertion_point(field_mutable:mail.MSG_Req_GetAttachment_CS.mailid)
  return _internal_mutable_mailid();
}
inline const std::string& MSG_Req_GetAttachment_CS::_internal_mailid() const {
  return mailid_.GetNoArena();
}
inline void MSG_Req_GetAttachment_CS::_internal_set_mailid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  mailid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_Req_GetAttachment_CS::set_mailid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  mailid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mail.MSG_Req_GetAttachment_CS.mailid)
}
inline void MSG_Req_GetAttachment_CS::set_mailid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  mailid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mail.MSG_Req_GetAttachment_CS.mailid)
}
inline void MSG_Req_GetAttachment_CS::set_mailid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  mailid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mail.MSG_Req_GetAttachment_CS.mailid)
}
inline std::string* MSG_Req_GetAttachment_CS::_internal_mutable_mailid() {
  _has_bits_[0] |= 0x00000001u;
  return mailid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_Req_GetAttachment_CS::release_mailid() {
  // @@protoc_insertion_point(field_release:mail.MSG_Req_GetAttachment_CS.mailid)
  if (!_internal_has_mailid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return mailid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_Req_GetAttachment_CS::set_allocated_mailid(std::string* mailid) {
  if (mailid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mailid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mailid);
  // @@protoc_insertion_point(field_set_allocated:mail.MSG_Req_GetAttachment_CS.mailid)
}

// -------------------------------------------------------------------

// MSG_Ret_GetAttachment_SC

// optional uint64 mailid = 1;
inline bool MSG_Ret_GetAttachment_SC::_internal_has_mailid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_GetAttachment_SC::has_mailid() const {
  return _internal_has_mailid();
}
inline void MSG_Ret_GetAttachment_SC::clear_mailid() {
  mailid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_GetAttachment_SC::_internal_mailid() const {
  return mailid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Ret_GetAttachment_SC::mailid() const {
  // @@protoc_insertion_point(field_get:mail.MSG_Ret_GetAttachment_SC.mailid)
  return _internal_mailid();
}
inline void MSG_Ret_GetAttachment_SC::_internal_set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  mailid_ = value;
}
inline void MSG_Ret_GetAttachment_SC::set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mailid(value);
  // @@protoc_insertion_point(field_set:mail.MSG_Ret_GetAttachment_SC.mailid)
}

// optional bool ret = 2;
inline bool MSG_Ret_GetAttachment_SC::_internal_has_ret() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_GetAttachment_SC::has_ret() const {
  return _internal_has_ret();
}
inline void MSG_Ret_GetAttachment_SC::clear_ret() {
  ret_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool MSG_Ret_GetAttachment_SC::_internal_ret() const {
  return ret_;
}
inline bool MSG_Ret_GetAttachment_SC::ret() const {
  // @@protoc_insertion_point(field_get:mail.MSG_Ret_GetAttachment_SC.ret)
  return _internal_ret();
}
inline void MSG_Ret_GetAttachment_SC::_internal_set_ret(bool value) {
  _has_bits_[0] |= 0x00000002u;
  ret_ = value;
}
inline void MSG_Ret_GetAttachment_SC::set_ret(bool value) {
  _internal_set_ret(value);
  // @@protoc_insertion_point(field_set:mail.MSG_Ret_GetAttachment_SC.ret)
}

// -------------------------------------------------------------------

// MSG_Req_GetAllAttachment_CS

// -------------------------------------------------------------------

// MSG_Req_DeleteMail_CS

// optional uint64 mailid = 1;
inline bool MSG_Req_DeleteMail_CS::_internal_has_mailid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_DeleteMail_CS::has_mailid() const {
  return _internal_has_mailid();
}
inline void MSG_Req_DeleteMail_CS::clear_mailid() {
  mailid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_DeleteMail_CS::_internal_mailid() const {
  return mailid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_Req_DeleteMail_CS::mailid() const {
  // @@protoc_insertion_point(field_get:mail.MSG_Req_DeleteMail_CS.mailid)
  return _internal_mailid();
}
inline void MSG_Req_DeleteMail_CS::_internal_set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  mailid_ = value;
}
inline void MSG_Req_DeleteMail_CS::set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mailid(value);
  // @@protoc_insertion_point(field_set:mail.MSG_Req_DeleteMail_CS.mailid)
}

// -------------------------------------------------------------------

// MSG_Ret_DeleteMail_SC

// repeated string mailid = 1;
inline int MSG_Ret_DeleteMail_SC::_internal_mailid_size() const {
  return mailid_.size();
}
inline int MSG_Ret_DeleteMail_SC::mailid_size() const {
  return _internal_mailid_size();
}
inline void MSG_Ret_DeleteMail_SC::clear_mailid() {
  mailid_.Clear();
}
inline std::string* MSG_Ret_DeleteMail_SC::add_mailid() {
  // @@protoc_insertion_point(field_add_mutable:mail.MSG_Ret_DeleteMail_SC.mailid)
  return _internal_add_mailid();
}
inline const std::string& MSG_Ret_DeleteMail_SC::_internal_mailid(int index) const {
  return mailid_.Get(index);
}
inline const std::string& MSG_Ret_DeleteMail_SC::mailid(int index) const {
  // @@protoc_insertion_point(field_get:mail.MSG_Ret_DeleteMail_SC.mailid)
  return _internal_mailid(index);
}
inline std::string* MSG_Ret_DeleteMail_SC::mutable_mailid(int index) {
  // @@protoc_insertion_point(field_mutable:mail.MSG_Ret_DeleteMail_SC.mailid)
  return mailid_.Mutable(index);
}
inline void MSG_Ret_DeleteMail_SC::set_mailid(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:mail.MSG_Ret_DeleteMail_SC.mailid)
  mailid_.Mutable(index)->assign(value);
}
inline void MSG_Ret_DeleteMail_SC::set_mailid(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:mail.MSG_Ret_DeleteMail_SC.mailid)
  mailid_.Mutable(index)->assign(std::move(value));
}
inline void MSG_Ret_DeleteMail_SC::set_mailid(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  mailid_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:mail.MSG_Ret_DeleteMail_SC.mailid)
}
inline void MSG_Ret_DeleteMail_SC::set_mailid(int index, const char* value, size_t size) {
  mailid_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mail.MSG_Ret_DeleteMail_SC.mailid)
}
inline std::string* MSG_Ret_DeleteMail_SC::_internal_add_mailid() {
  return mailid_.Add();
}
inline void MSG_Ret_DeleteMail_SC::add_mailid(const std::string& value) {
  mailid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:mail.MSG_Ret_DeleteMail_SC.mailid)
}
inline void MSG_Ret_DeleteMail_SC::add_mailid(std::string&& value) {
  mailid_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:mail.MSG_Ret_DeleteMail_SC.mailid)
}
inline void MSG_Ret_DeleteMail_SC::add_mailid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  mailid_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:mail.MSG_Ret_DeleteMail_SC.mailid)
}
inline void MSG_Ret_DeleteMail_SC::add_mailid(const char* value, size_t size) {
  mailid_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:mail.MSG_Ret_DeleteMail_SC.mailid)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
MSG_Ret_DeleteMail_SC::mailid() const {
  // @@protoc_insertion_point(field_list:mail.MSG_Ret_DeleteMail_SC.mailid)
  return mailid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
MSG_Ret_DeleteMail_SC::mutable_mailid() {
  // @@protoc_insertion_point(field_mutable_list:mail.MSG_Ret_DeleteMail_SC.mailid)
  return &mailid_;
}

// optional bool ret = 2;
inline bool MSG_Ret_DeleteMail_SC::_internal_has_ret() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_DeleteMail_SC::has_ret() const {
  return _internal_has_ret();
}
inline void MSG_Ret_DeleteMail_SC::clear_ret() {
  ret_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_Ret_DeleteMail_SC::_internal_ret() const {
  return ret_;
}
inline bool MSG_Ret_DeleteMail_SC::ret() const {
  // @@protoc_insertion_point(field_get:mail.MSG_Ret_DeleteMail_SC.ret)
  return _internal_ret();
}
inline void MSG_Ret_DeleteMail_SC::_internal_set_ret(bool value) {
  _has_bits_[0] |= 0x00000001u;
  ret_ = value;
}
inline void MSG_Ret_DeleteMail_SC::set_ret(bool value) {
  _internal_set_ret(value);
  // @@protoc_insertion_point(field_set:mail.MSG_Ret_DeleteMail_SC.ret)
}

// -------------------------------------------------------------------

// MSG_Req_DeleteAllMail_CS

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mail

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::mail::MailState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mail::MailState>() {
  return ::mail::MailState_descriptor();
}
template <> struct is_proto_enum< ::mail::MailAttachState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mail::MailAttachState>() {
  return ::mail::MailAttachState_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mail_5fcmd_2eproto
