// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: avatar.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_avatar_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_avatar_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_avatar_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_avatar_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_avatar_2eproto;
namespace avatar {
class AvatarPair;
class AvatarPairDefaultTypeInternal;
extern AvatarPairDefaultTypeInternal _AvatarPair_default_instance_;
class MSG_ReqEquipAvatar_CS;
class MSG_ReqEquipAvatar_CSDefaultTypeInternal;
extern MSG_ReqEquipAvatar_CSDefaultTypeInternal _MSG_ReqEquipAvatar_CS_default_instance_;
class MSG_RetUserAvatars_SC;
class MSG_RetUserAvatars_SCDefaultTypeInternal;
extern MSG_RetUserAvatars_SCDefaultTypeInternal _MSG_RetUserAvatars_SC_default_instance_;
}  // namespace avatar
PROTOBUF_NAMESPACE_OPEN
template<> ::avatar::AvatarPair* Arena::CreateMaybeMessage<::avatar::AvatarPair>(Arena*);
template<> ::avatar::MSG_ReqEquipAvatar_CS* Arena::CreateMaybeMessage<::avatar::MSG_ReqEquipAvatar_CS>(Arena*);
template<> ::avatar::MSG_RetUserAvatars_SC* Arena::CreateMaybeMessage<::avatar::MSG_RetUserAvatars_SC>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace avatar {

enum AvatarPart : int {
  AVATAR_HEAD = 1,
  AVATAR_HAIR = 2,
  AVATAR_BODY = 3
};
bool AvatarPart_IsValid(int value);
constexpr AvatarPart AvatarPart_MIN = AVATAR_HEAD;
constexpr AvatarPart AvatarPart_MAX = AVATAR_BODY;
constexpr int AvatarPart_ARRAYSIZE = AvatarPart_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AvatarPart_descriptor();
template<typename T>
inline const std::string& AvatarPart_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AvatarPart>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AvatarPart_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AvatarPart_descriptor(), enum_t_value);
}
inline bool AvatarPart_Parse(
    const std::string& name, AvatarPart* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AvatarPart>(
    AvatarPart_descriptor(), name, value);
}
// ===================================================================

class AvatarPair :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:avatar.AvatarPair) */ {
 public:
  AvatarPair();
  virtual ~AvatarPair();

  AvatarPair(const AvatarPair& from);
  AvatarPair(AvatarPair&& from) noexcept
    : AvatarPair() {
    *this = ::std::move(from);
  }

  inline AvatarPair& operator=(const AvatarPair& from) {
    CopyFrom(from);
    return *this;
  }
  inline AvatarPair& operator=(AvatarPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AvatarPair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AvatarPair* internal_default_instance() {
    return reinterpret_cast<const AvatarPair*>(
               &_AvatarPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AvatarPair& a, AvatarPair& b) {
    a.Swap(&b);
  }
  inline void Swap(AvatarPair* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AvatarPair* New() const final {
    return CreateMaybeMessage<AvatarPair>(nullptr);
  }

  AvatarPair* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AvatarPair>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AvatarPair& from);
  void MergeFrom(const AvatarPair& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AvatarPair* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "avatar.AvatarPair";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_avatar_2eproto);
    return ::descriptor_table_avatar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvataridFieldNumber = 2,
    kPartFieldNumber = 1,
  };
  // optional uint32 avatarid = 2;
  bool has_avatarid() const;
  private:
  bool _internal_has_avatarid() const;
  public:
  void clear_avatarid();
  ::PROTOBUF_NAMESPACE_ID::uint32 avatarid() const;
  void set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_avatarid() const;
  void _internal_set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .avatar.AvatarPart part = 1;
  bool has_part() const;
  private:
  bool _internal_has_part() const;
  public:
  void clear_part();
  ::avatar::AvatarPart part() const;
  void set_part(::avatar::AvatarPart value);
  private:
  ::avatar::AvatarPart _internal_part() const;
  void _internal_set_part(::avatar::AvatarPart value);
  public:

  // @@protoc_insertion_point(class_scope:avatar.AvatarPair)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 avatarid_;
  int part_;
  friend struct ::TableStruct_avatar_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetUserAvatars_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:avatar.MSG_RetUserAvatars_SC) */ {
 public:
  MSG_RetUserAvatars_SC();
  virtual ~MSG_RetUserAvatars_SC();

  MSG_RetUserAvatars_SC(const MSG_RetUserAvatars_SC& from);
  MSG_RetUserAvatars_SC(MSG_RetUserAvatars_SC&& from) noexcept
    : MSG_RetUserAvatars_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetUserAvatars_SC& operator=(const MSG_RetUserAvatars_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetUserAvatars_SC& operator=(MSG_RetUserAvatars_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetUserAvatars_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetUserAvatars_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetUserAvatars_SC*>(
               &_MSG_RetUserAvatars_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MSG_RetUserAvatars_SC& a, MSG_RetUserAvatars_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetUserAvatars_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetUserAvatars_SC* New() const final {
    return CreateMaybeMessage<MSG_RetUserAvatars_SC>(nullptr);
  }

  MSG_RetUserAvatars_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetUserAvatars_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetUserAvatars_SC& from);
  void MergeFrom(const MSG_RetUserAvatars_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetUserAvatars_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "avatar.MSG_RetUserAvatars_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_avatar_2eproto);
    return ::descriptor_table_avatar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvatarsFieldNumber = 1,
    kTranSkillidFieldNumber = 3,
    kEquipIdFieldNumber = 2,
  };
  // repeated uint32 avatars = 1;
  int avatars_size() const;
  private:
  int _internal_avatars_size() const;
  public:
  void clear_avatars();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_avatars(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_avatars() const;
  void _internal_add_avatars(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_avatars();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 avatars(int index) const;
  void set_avatars(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_avatars(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      avatars() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_avatars();

  // optional uint64 tranSkillid = 3;
  bool has_transkillid() const;
  private:
  bool _internal_has_transkillid() const;
  public:
  void clear_transkillid();
  ::PROTOBUF_NAMESPACE_ID::uint64 transkillid() const;
  void set_transkillid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_transkillid() const;
  void _internal_set_transkillid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 equipId = 2;
  bool has_equipid() const;
  private:
  bool _internal_has_equipid() const;
  public:
  void clear_equipid();
  ::PROTOBUF_NAMESPACE_ID::uint32 equipid() const;
  void set_equipid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_equipid() const;
  void _internal_set_equipid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:avatar.MSG_RetUserAvatars_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > avatars_;
  ::PROTOBUF_NAMESPACE_ID::uint64 transkillid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 equipid_;
  friend struct ::TableStruct_avatar_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqEquipAvatar_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:avatar.MSG_ReqEquipAvatar_CS) */ {
 public:
  MSG_ReqEquipAvatar_CS();
  virtual ~MSG_ReqEquipAvatar_CS();

  MSG_ReqEquipAvatar_CS(const MSG_ReqEquipAvatar_CS& from);
  MSG_ReqEquipAvatar_CS(MSG_ReqEquipAvatar_CS&& from) noexcept
    : MSG_ReqEquipAvatar_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqEquipAvatar_CS& operator=(const MSG_ReqEquipAvatar_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqEquipAvatar_CS& operator=(MSG_ReqEquipAvatar_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqEquipAvatar_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqEquipAvatar_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqEquipAvatar_CS*>(
               &_MSG_ReqEquipAvatar_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MSG_ReqEquipAvatar_CS& a, MSG_ReqEquipAvatar_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqEquipAvatar_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqEquipAvatar_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqEquipAvatar_CS>(nullptr);
  }

  MSG_ReqEquipAvatar_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqEquipAvatar_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqEquipAvatar_CS& from);
  void MergeFrom(const MSG_ReqEquipAvatar_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqEquipAvatar_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "avatar.MSG_ReqEquipAvatar_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_avatar_2eproto);
    return ::descriptor_table_avatar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvatarIdFieldNumber = 1,
  };
  // optional uint32 avatarId = 1;
  bool has_avatarid() const;
  private:
  bool _internal_has_avatarid() const;
  public:
  void clear_avatarid();
  ::PROTOBUF_NAMESPACE_ID::uint32 avatarid() const;
  void set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_avatarid() const;
  void _internal_set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:avatar.MSG_ReqEquipAvatar_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 avatarid_;
  friend struct ::TableStruct_avatar_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AvatarPair

// optional .avatar.AvatarPart part = 1;
inline bool AvatarPair::_internal_has_part() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AvatarPair::has_part() const {
  return _internal_has_part();
}
inline void AvatarPair::clear_part() {
  part_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::avatar::AvatarPart AvatarPair::_internal_part() const {
  return static_cast< ::avatar::AvatarPart >(part_);
}
inline ::avatar::AvatarPart AvatarPair::part() const {
  // @@protoc_insertion_point(field_get:avatar.AvatarPair.part)
  return _internal_part();
}
inline void AvatarPair::_internal_set_part(::avatar::AvatarPart value) {
  assert(::avatar::AvatarPart_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  part_ = value;
}
inline void AvatarPair::set_part(::avatar::AvatarPart value) {
  _internal_set_part(value);
  // @@protoc_insertion_point(field_set:avatar.AvatarPair.part)
}

// optional uint32 avatarid = 2;
inline bool AvatarPair::_internal_has_avatarid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AvatarPair::has_avatarid() const {
  return _internal_has_avatarid();
}
inline void AvatarPair::clear_avatarid() {
  avatarid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AvatarPair::_internal_avatarid() const {
  return avatarid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AvatarPair::avatarid() const {
  // @@protoc_insertion_point(field_get:avatar.AvatarPair.avatarid)
  return _internal_avatarid();
}
inline void AvatarPair::_internal_set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  avatarid_ = value;
}
inline void AvatarPair::set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_avatarid(value);
  // @@protoc_insertion_point(field_set:avatar.AvatarPair.avatarid)
}

// -------------------------------------------------------------------

// MSG_RetUserAvatars_SC

// repeated uint32 avatars = 1;
inline int MSG_RetUserAvatars_SC::_internal_avatars_size() const {
  return avatars_.size();
}
inline int MSG_RetUserAvatars_SC::avatars_size() const {
  return _internal_avatars_size();
}
inline void MSG_RetUserAvatars_SC::clear_avatars() {
  avatars_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetUserAvatars_SC::_internal_avatars(int index) const {
  return avatars_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetUserAvatars_SC::avatars(int index) const {
  // @@protoc_insertion_point(field_get:avatar.MSG_RetUserAvatars_SC.avatars)
  return _internal_avatars(index);
}
inline void MSG_RetUserAvatars_SC::set_avatars(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  avatars_.Set(index, value);
  // @@protoc_insertion_point(field_set:avatar.MSG_RetUserAvatars_SC.avatars)
}
inline void MSG_RetUserAvatars_SC::_internal_add_avatars(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  avatars_.Add(value);
}
inline void MSG_RetUserAvatars_SC::add_avatars(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_avatars(value);
  // @@protoc_insertion_point(field_add:avatar.MSG_RetUserAvatars_SC.avatars)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_RetUserAvatars_SC::_internal_avatars() const {
  return avatars_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_RetUserAvatars_SC::avatars() const {
  // @@protoc_insertion_point(field_list:avatar.MSG_RetUserAvatars_SC.avatars)
  return _internal_avatars();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_RetUserAvatars_SC::_internal_mutable_avatars() {
  return &avatars_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_RetUserAvatars_SC::mutable_avatars() {
  // @@protoc_insertion_point(field_mutable_list:avatar.MSG_RetUserAvatars_SC.avatars)
  return _internal_mutable_avatars();
}

// optional uint32 equipId = 2;
inline bool MSG_RetUserAvatars_SC::_internal_has_equipid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RetUserAvatars_SC::has_equipid() const {
  return _internal_has_equipid();
}
inline void MSG_RetUserAvatars_SC::clear_equipid() {
  equipid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetUserAvatars_SC::_internal_equipid() const {
  return equipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetUserAvatars_SC::equipid() const {
  // @@protoc_insertion_point(field_get:avatar.MSG_RetUserAvatars_SC.equipId)
  return _internal_equipid();
}
inline void MSG_RetUserAvatars_SC::_internal_set_equipid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  equipid_ = value;
}
inline void MSG_RetUserAvatars_SC::set_equipid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_equipid(value);
  // @@protoc_insertion_point(field_set:avatar.MSG_RetUserAvatars_SC.equipId)
}

// optional uint64 tranSkillid = 3;
inline bool MSG_RetUserAvatars_SC::_internal_has_transkillid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetUserAvatars_SC::has_transkillid() const {
  return _internal_has_transkillid();
}
inline void MSG_RetUserAvatars_SC::clear_transkillid() {
  transkillid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_RetUserAvatars_SC::_internal_transkillid() const {
  return transkillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MSG_RetUserAvatars_SC::transkillid() const {
  // @@protoc_insertion_point(field_get:avatar.MSG_RetUserAvatars_SC.tranSkillid)
  return _internal_transkillid();
}
inline void MSG_RetUserAvatars_SC::_internal_set_transkillid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  transkillid_ = value;
}
inline void MSG_RetUserAvatars_SC::set_transkillid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_transkillid(value);
  // @@protoc_insertion_point(field_set:avatar.MSG_RetUserAvatars_SC.tranSkillid)
}

// -------------------------------------------------------------------

// MSG_ReqEquipAvatar_CS

// optional uint32 avatarId = 1;
inline bool MSG_ReqEquipAvatar_CS::_internal_has_avatarid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqEquipAvatar_CS::has_avatarid() const {
  return _internal_has_avatarid();
}
inline void MSG_ReqEquipAvatar_CS::clear_avatarid() {
  avatarid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqEquipAvatar_CS::_internal_avatarid() const {
  return avatarid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqEquipAvatar_CS::avatarid() const {
  // @@protoc_insertion_point(field_get:avatar.MSG_ReqEquipAvatar_CS.avatarId)
  return _internal_avatarid();
}
inline void MSG_ReqEquipAvatar_CS::_internal_set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  avatarid_ = value;
}
inline void MSG_ReqEquipAvatar_CS::set_avatarid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_avatarid(value);
  // @@protoc_insertion_point(field_set:avatar.MSG_ReqEquipAvatar_CS.avatarId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace avatar

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::avatar::AvatarPart> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::avatar::AvatarPart>() {
  return ::avatar::AvatarPart_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_avatar_2eproto
