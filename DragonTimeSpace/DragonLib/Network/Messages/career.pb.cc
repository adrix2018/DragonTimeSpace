// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: career.proto

#include "career.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_career_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CareerSkillInfo_career_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_career_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_careerunlockItem_career_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_career_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_lineSkillItem_career_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_magic_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExtSkillData_magic_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_magic_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SkillData_magic_5fmsg_2eproto;
namespace career {
class skillLevelItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<skillLevelItem> _instance;
} _skillLevelItem_default_instance_;
class lineSkillItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<lineSkillItem> _instance;
} _lineSkillItem_default_instance_;
class proficiencyItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<proficiencyItem> _instance;
} _proficiencyItem_default_instance_;
class careerunlockItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<careerunlockItem> _instance;
} _careerunlockItem_default_instance_;
class careerCurrentSkillDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<careerCurrentSkill> _instance;
} _careerCurrentSkill_default_instance_;
class MSG_ReqCareerSkillInfo_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqCareerSkillInfo_CS> _instance;
} _MSG_ReqCareerSkillInfo_CS_default_instance_;
class MSG_RetCareerSkillInfo_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetCareerSkillInfo_SC> _instance;
} _MSG_RetCareerSkillInfo_SC_default_instance_;
class CareerSkillInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CareerSkillInfo> _instance;
} _CareerSkillInfo_default_instance_;
class MSG_ReqRepalceSkill_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqRepalceSkill_CS> _instance;
} _MSG_ReqRepalceSkill_CS_default_instance_;
class MSG_RetReplaceSkill_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetReplaceSkill_SC> _instance;
} _MSG_RetReplaceSkill_SC_default_instance_;
class MSG_ReqUpgradeExtSkill_CSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_ReqUpgradeExtSkill_CS> _instance;
} _MSG_ReqUpgradeExtSkill_CS_default_instance_;
class MSG_RetUpgradeExtSkill_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RetUpgradeExtSkill_SC> _instance;
} _MSG_RetUpgradeExtSkill_SC_default_instance_;
class MSG_NoneChantSkill_SCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_NoneChantSkill_SC> _instance;
} _MSG_NoneChantSkill_SC_default_instance_;
}  // namespace career
static void InitDefaultsscc_info_CareerSkillInfo_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_CareerSkillInfo_default_instance_;
    new (ptr) ::career::CareerSkillInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::CareerSkillInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CareerSkillInfo_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CareerSkillInfo_career_2eproto}, {
      &scc_info_careerunlockItem_career_2eproto.base,
      &scc_info_lineSkillItem_career_2eproto.base,}};

static void InitDefaultsscc_info_MSG_NoneChantSkill_SC_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_MSG_NoneChantSkill_SC_default_instance_;
    new (ptr) ::career::MSG_NoneChantSkill_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::MSG_NoneChantSkill_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_NoneChantSkill_SC_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_NoneChantSkill_SC_career_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqCareerSkillInfo_CS_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_MSG_ReqCareerSkillInfo_CS_default_instance_;
    new (ptr) ::career::MSG_ReqCareerSkillInfo_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::MSG_ReqCareerSkillInfo_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqCareerSkillInfo_CS_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqCareerSkillInfo_CS_career_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqRepalceSkill_CS_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_MSG_ReqRepalceSkill_CS_default_instance_;
    new (ptr) ::career::MSG_ReqRepalceSkill_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::MSG_ReqRepalceSkill_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqRepalceSkill_CS_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqRepalceSkill_CS_career_2eproto}, {}};

static void InitDefaultsscc_info_MSG_ReqUpgradeExtSkill_CS_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_MSG_ReqUpgradeExtSkill_CS_default_instance_;
    new (ptr) ::career::MSG_ReqUpgradeExtSkill_CS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::MSG_ReqUpgradeExtSkill_CS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_ReqUpgradeExtSkill_CS_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_ReqUpgradeExtSkill_CS_career_2eproto}, {}};

static void InitDefaultsscc_info_MSG_RetCareerSkillInfo_SC_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_MSG_RetCareerSkillInfo_SC_default_instance_;
    new (ptr) ::career::MSG_RetCareerSkillInfo_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::MSG_RetCareerSkillInfo_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_RetCareerSkillInfo_SC_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_RetCareerSkillInfo_SC_career_2eproto}, {
      &scc_info_CareerSkillInfo_career_2eproto.base,}};

static void InitDefaultsscc_info_MSG_RetReplaceSkill_SC_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_MSG_RetReplaceSkill_SC_default_instance_;
    new (ptr) ::career::MSG_RetReplaceSkill_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::MSG_RetReplaceSkill_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_RetReplaceSkill_SC_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_RetReplaceSkill_SC_career_2eproto}, {}};

static void InitDefaultsscc_info_MSG_RetUpgradeExtSkill_SC_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_MSG_RetUpgradeExtSkill_SC_default_instance_;
    new (ptr) ::career::MSG_RetUpgradeExtSkill_SC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::MSG_RetUpgradeExtSkill_SC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_RetUpgradeExtSkill_SC_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_RetUpgradeExtSkill_SC_career_2eproto}, {}};

static void InitDefaultsscc_info_careerCurrentSkill_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_careerCurrentSkill_default_instance_;
    new (ptr) ::career::careerCurrentSkill();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::careerCurrentSkill::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_careerCurrentSkill_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_careerCurrentSkill_career_2eproto}, {
      &scc_info_lineSkillItem_career_2eproto.base,}};

static void InitDefaultsscc_info_careerunlockItem_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_careerunlockItem_default_instance_;
    new (ptr) ::career::careerunlockItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::careerunlockItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_careerunlockItem_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_careerunlockItem_career_2eproto}, {
      &scc_info_SkillData_magic_5fmsg_2eproto.base,
      &scc_info_ExtSkillData_magic_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_lineSkillItem_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_lineSkillItem_default_instance_;
    new (ptr) ::career::lineSkillItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::lineSkillItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_lineSkillItem_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_lineSkillItem_career_2eproto}, {}};

static void InitDefaultsscc_info_proficiencyItem_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_proficiencyItem_default_instance_;
    new (ptr) ::career::proficiencyItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::proficiencyItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_proficiencyItem_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_proficiencyItem_career_2eproto}, {}};

static void InitDefaultsscc_info_skillLevelItem_career_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::career::_skillLevelItem_default_instance_;
    new (ptr) ::career::skillLevelItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::career::skillLevelItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_skillLevelItem_career_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_skillLevelItem_career_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_career_2eproto[13];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_career_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_career_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_career_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::career::skillLevelItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::skillLevelItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::skillLevelItem, career_),
  PROTOBUF_FIELD_OFFSET(::career::skillLevelItem, level_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::career::lineSkillItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::lineSkillItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::lineSkillItem, line_),
  PROTOBUF_FIELD_OFFSET(::career::lineSkillItem, skill_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::career::proficiencyItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::proficiencyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::proficiencyItem, career_),
  PROTOBUF_FIELD_OFFSET(::career::proficiencyItem, proficiency_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::career::careerunlockItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::careerunlockItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::careerunlockItem, skill_),
  PROTOBUF_FIELD_OFFSET(::career::careerunlockItem, extskill_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::career::careerCurrentSkill, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::careerCurrentSkill, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::careerCurrentSkill, career_),
  PROTOBUF_FIELD_OFFSET(::career::careerCurrentSkill, item_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::career::MSG_ReqCareerSkillInfo_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::MSG_ReqCareerSkillInfo_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::MSG_RetCareerSkillInfo_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::MSG_RetCareerSkillInfo_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::MSG_RetCareerSkillInfo_SC, skillinfo_),
  0,
  PROTOBUF_FIELD_OFFSET(::career::CareerSkillInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::CareerSkillInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::CareerSkillInfo, unlockskills_),
  PROTOBUF_FIELD_OFFSET(::career::CareerSkillInfo, curskills_),
  PROTOBUF_FIELD_OFFSET(::career::CareerSkillInfo, curcareer_),
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::career::MSG_ReqRepalceSkill_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::MSG_ReqRepalceSkill_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::MSG_ReqRepalceSkill_CS, career_),
  PROTOBUF_FIELD_OFFSET(::career::MSG_ReqRepalceSkill_CS, lineid_),
  PROTOBUF_FIELD_OFFSET(::career::MSG_ReqRepalceSkill_CS, newskill_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::career::MSG_RetReplaceSkill_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::MSG_RetReplaceSkill_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::MSG_RetReplaceSkill_SC, errcode_),
  0,
  PROTOBUF_FIELD_OFFSET(::career::MSG_ReqUpgradeExtSkill_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::MSG_ReqUpgradeExtSkill_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::MSG_ReqUpgradeExtSkill_CS, extskillid_),
  0,
  PROTOBUF_FIELD_OFFSET(::career::MSG_RetUpgradeExtSkill_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::MSG_RetUpgradeExtSkill_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::MSG_RetUpgradeExtSkill_SC, errcode_),
  0,
  PROTOBUF_FIELD_OFFSET(::career::MSG_NoneChantSkill_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::career::MSG_NoneChantSkill_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::career::MSG_NoneChantSkill_SC, arrskill_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::career::skillLevelItem)},
  { 9, 16, sizeof(::career::lineSkillItem)},
  { 18, 25, sizeof(::career::proficiencyItem)},
  { 27, 34, sizeof(::career::careerunlockItem)},
  { 36, 43, sizeof(::career::careerCurrentSkill)},
  { 45, 50, sizeof(::career::MSG_ReqCareerSkillInfo_CS)},
  { 50, 56, sizeof(::career::MSG_RetCareerSkillInfo_SC)},
  { 57, 65, sizeof(::career::CareerSkillInfo)},
  { 68, 76, sizeof(::career::MSG_ReqRepalceSkill_CS)},
  { 79, 85, sizeof(::career::MSG_RetReplaceSkill_SC)},
  { 86, 92, sizeof(::career::MSG_ReqUpgradeExtSkill_CS)},
  { 93, 99, sizeof(::career::MSG_RetUpgradeExtSkill_SC)},
  { 100, 106, sizeof(::career::MSG_NoneChantSkill_SC)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_skillLevelItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_lineSkillItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_proficiencyItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_careerunlockItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_careerCurrentSkill_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_MSG_ReqCareerSkillInfo_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_MSG_RetCareerSkillInfo_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_CareerSkillInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_MSG_ReqRepalceSkill_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_MSG_RetReplaceSkill_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_MSG_ReqUpgradeExtSkill_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_MSG_RetUpgradeExtSkill_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::career::_MSG_NoneChantSkill_SC_default_instance_),
};

const char descriptor_table_protodef_career_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014career.proto\022\006career\032\017magic_msg.proto\""
  "/\n\016skillLevelItem\022\016\n\006career\030\001 \001(\r\022\r\n\005lev"
  "el\030\002 \001(\r\",\n\rlineSkillItem\022\014\n\004line\030\001 \001(\r\022"
  "\r\n\005skill\030\002 \001(\r\"6\n\017proficiencyItem\022\016\n\006car"
  "eer\030\001 \001(\r\022\023\n\013proficiency\030\002 \001(\r\"Z\n\020career"
  "unlockItem\022\037\n\005skill\030\001 \001(\0132\020.magic.SkillD"
  "ata\022%\n\010extskill\030\002 \003(\0132\023.magic.ExtSkillDa"
  "ta\"I\n\022careerCurrentSkill\022\016\n\006career\030\001 \001(\r"
  "\022#\n\004item\030\002 \003(\0132\025.career.lineSkillItem\"\033\n"
  "\031MSG_ReqCareerSkillInfo_CS\"G\n\031MSG_RetCar"
  "eerSkillInfo_SC\022*\n\tskillinfo\030\001 \001(\0132\027.car"
  "eer.CareerSkillInfo\"~\n\017CareerSkillInfo\022."
  "\n\014unlockskills\030\001 \003(\0132\030.career.careerunlo"
  "ckItem\022(\n\tcurskills\030\002 \003(\0132\025.career.lineS"
  "killItem\022\021\n\tcurcareer\030\003 \001(\r\"J\n\026MSG_ReqRe"
  "palceSkill_CS\022\016\n\006career\030\001 \001(\r\022\016\n\006lineid\030"
  "\002 \001(\r\022\020\n\010newskill\030\003 \001(\r\")\n\026MSG_RetReplac"
  "eSkill_SC\022\017\n\007errcode\030\001 \001(\r\"/\n\031MSG_ReqUpg"
  "radeExtSkill_CS\022\022\n\nextskillid\030\001 \001(\r\",\n\031M"
  "SG_RetUpgradeExtSkill_SC\022\017\n\007errcode\030\001 \001("
  "\r\")\n\025MSG_NoneChantSkill_SC\022\020\n\010arrskill\030\001"
  " \003(\r"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_career_2eproto_deps[1] = {
  &::descriptor_table_magic_5fmsg_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_career_2eproto_sccs[13] = {
  &scc_info_CareerSkillInfo_career_2eproto.base,
  &scc_info_MSG_NoneChantSkill_SC_career_2eproto.base,
  &scc_info_MSG_ReqCareerSkillInfo_CS_career_2eproto.base,
  &scc_info_MSG_ReqRepalceSkill_CS_career_2eproto.base,
  &scc_info_MSG_ReqUpgradeExtSkill_CS_career_2eproto.base,
  &scc_info_MSG_RetCareerSkillInfo_SC_career_2eproto.base,
  &scc_info_MSG_RetReplaceSkill_SC_career_2eproto.base,
  &scc_info_MSG_RetUpgradeExtSkill_SC_career_2eproto.base,
  &scc_info_careerCurrentSkill_career_2eproto.base,
  &scc_info_careerunlockItem_career_2eproto.base,
  &scc_info_lineSkillItem_career_2eproto.base,
  &scc_info_proficiencyItem_career_2eproto.base,
  &scc_info_skillLevelItem_career_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_career_2eproto_once;
static bool descriptor_table_career_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_career_2eproto = {
  &descriptor_table_career_2eproto_initialized, descriptor_table_protodef_career_2eproto, "career.proto", 844,
  &descriptor_table_career_2eproto_once, descriptor_table_career_2eproto_sccs, descriptor_table_career_2eproto_deps, 13, 1,
  schemas, file_default_instances, TableStruct_career_2eproto::offsets,
  file_level_metadata_career_2eproto, 13, file_level_enum_descriptors_career_2eproto, file_level_service_descriptors_career_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_career_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_career_2eproto)), true);
namespace career {

// ===================================================================

void skillLevelItem::InitAsDefaultInstance() {
}
class skillLevelItem::_Internal {
 public:
  using HasBits = decltype(std::declval<skillLevelItem>()._has_bits_);
  static void set_has_career(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_level(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

skillLevelItem::skillLevelItem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.skillLevelItem)
}
skillLevelItem::skillLevelItem(const skillLevelItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&career_, &from.career_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&career_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:career.skillLevelItem)
}

void skillLevelItem::SharedCtor() {
  ::memset(&career_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&career_)) + sizeof(level_));
}

skillLevelItem::~skillLevelItem() {
  // @@protoc_insertion_point(destructor:career.skillLevelItem)
  SharedDtor();
}

void skillLevelItem::SharedDtor() {
}

void skillLevelItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const skillLevelItem& skillLevelItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_skillLevelItem_career_2eproto.base);
  return *internal_default_instance();
}


void skillLevelItem::Clear() {
// @@protoc_insertion_point(message_clear_start:career.skillLevelItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&career_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&level_) -
        reinterpret_cast<char*>(&career_)) + sizeof(level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* skillLevelItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 career = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_career(&has_bits);
          career_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_level(&has_bits);
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* skillLevelItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.skillLevelItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 career = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_career(), target);
  }

  // optional uint32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.skillLevelItem)
  return target;
}

size_t skillLevelItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.skillLevelItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 career = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_career());
    }

    // optional uint32 level = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_level());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void skillLevelItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.skillLevelItem)
  GOOGLE_DCHECK_NE(&from, this);
  const skillLevelItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<skillLevelItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.skillLevelItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.skillLevelItem)
    MergeFrom(*source);
  }
}

void skillLevelItem::MergeFrom(const skillLevelItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.skillLevelItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      career_ = from.career_;
    }
    if (cached_has_bits & 0x00000002u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void skillLevelItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.skillLevelItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void skillLevelItem::CopyFrom(const skillLevelItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.skillLevelItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool skillLevelItem::IsInitialized() const {
  return true;
}

void skillLevelItem::InternalSwap(skillLevelItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(career_, other->career_);
  swap(level_, other->level_);
}

::PROTOBUF_NAMESPACE_ID::Metadata skillLevelItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void lineSkillItem::InitAsDefaultInstance() {
}
class lineSkillItem::_Internal {
 public:
  using HasBits = decltype(std::declval<lineSkillItem>()._has_bits_);
  static void set_has_line(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_skill(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

lineSkillItem::lineSkillItem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.lineSkillItem)
}
lineSkillItem::lineSkillItem(const lineSkillItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&line_, &from.line_,
    static_cast<size_t>(reinterpret_cast<char*>(&skill_) -
    reinterpret_cast<char*>(&line_)) + sizeof(skill_));
  // @@protoc_insertion_point(copy_constructor:career.lineSkillItem)
}

void lineSkillItem::SharedCtor() {
  ::memset(&line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_) -
      reinterpret_cast<char*>(&line_)) + sizeof(skill_));
}

lineSkillItem::~lineSkillItem() {
  // @@protoc_insertion_point(destructor:career.lineSkillItem)
  SharedDtor();
}

void lineSkillItem::SharedDtor() {
}

void lineSkillItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const lineSkillItem& lineSkillItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_lineSkillItem_career_2eproto.base);
  return *internal_default_instance();
}


void lineSkillItem::Clear() {
// @@protoc_insertion_point(message_clear_start:career.lineSkillItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&line_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&skill_) -
        reinterpret_cast<char*>(&line_)) + sizeof(skill_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* lineSkillItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 line = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_line(&has_bits);
          line_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 skill = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_skill(&has_bits);
          skill_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* lineSkillItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.lineSkillItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 line = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_line(), target);
  }

  // optional uint32 skill = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_skill(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.lineSkillItem)
  return target;
}

size_t lineSkillItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.lineSkillItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 line = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_line());
    }

    // optional uint32 skill = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_skill());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void lineSkillItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.lineSkillItem)
  GOOGLE_DCHECK_NE(&from, this);
  const lineSkillItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<lineSkillItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.lineSkillItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.lineSkillItem)
    MergeFrom(*source);
  }
}

void lineSkillItem::MergeFrom(const lineSkillItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.lineSkillItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      line_ = from.line_;
    }
    if (cached_has_bits & 0x00000002u) {
      skill_ = from.skill_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void lineSkillItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.lineSkillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void lineSkillItem::CopyFrom(const lineSkillItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.lineSkillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool lineSkillItem::IsInitialized() const {
  return true;
}

void lineSkillItem::InternalSwap(lineSkillItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(line_, other->line_);
  swap(skill_, other->skill_);
}

::PROTOBUF_NAMESPACE_ID::Metadata lineSkillItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void proficiencyItem::InitAsDefaultInstance() {
}
class proficiencyItem::_Internal {
 public:
  using HasBits = decltype(std::declval<proficiencyItem>()._has_bits_);
  static void set_has_career(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_proficiency(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

proficiencyItem::proficiencyItem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.proficiencyItem)
}
proficiencyItem::proficiencyItem(const proficiencyItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&career_, &from.career_,
    static_cast<size_t>(reinterpret_cast<char*>(&proficiency_) -
    reinterpret_cast<char*>(&career_)) + sizeof(proficiency_));
  // @@protoc_insertion_point(copy_constructor:career.proficiencyItem)
}

void proficiencyItem::SharedCtor() {
  ::memset(&career_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&proficiency_) -
      reinterpret_cast<char*>(&career_)) + sizeof(proficiency_));
}

proficiencyItem::~proficiencyItem() {
  // @@protoc_insertion_point(destructor:career.proficiencyItem)
  SharedDtor();
}

void proficiencyItem::SharedDtor() {
}

void proficiencyItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const proficiencyItem& proficiencyItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_proficiencyItem_career_2eproto.base);
  return *internal_default_instance();
}


void proficiencyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:career.proficiencyItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&career_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&proficiency_) -
        reinterpret_cast<char*>(&career_)) + sizeof(proficiency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* proficiencyItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 career = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_career(&has_bits);
          career_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 proficiency = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_proficiency(&has_bits);
          proficiency_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* proficiencyItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.proficiencyItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 career = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_career(), target);
  }

  // optional uint32 proficiency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_proficiency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.proficiencyItem)
  return target;
}

size_t proficiencyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.proficiencyItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 career = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_career());
    }

    // optional uint32 proficiency = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_proficiency());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void proficiencyItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.proficiencyItem)
  GOOGLE_DCHECK_NE(&from, this);
  const proficiencyItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<proficiencyItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.proficiencyItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.proficiencyItem)
    MergeFrom(*source);
  }
}

void proficiencyItem::MergeFrom(const proficiencyItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.proficiencyItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      career_ = from.career_;
    }
    if (cached_has_bits & 0x00000002u) {
      proficiency_ = from.proficiency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void proficiencyItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.proficiencyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proficiencyItem::CopyFrom(const proficiencyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.proficiencyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proficiencyItem::IsInitialized() const {
  return true;
}

void proficiencyItem::InternalSwap(proficiencyItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(career_, other->career_);
  swap(proficiency_, other->proficiency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata proficiencyItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void careerunlockItem::InitAsDefaultInstance() {
  ::career::_careerunlockItem_default_instance_._instance.get_mutable()->skill_ = const_cast< ::magic::SkillData*>(
      ::magic::SkillData::internal_default_instance());
}
class careerunlockItem::_Internal {
 public:
  using HasBits = decltype(std::declval<careerunlockItem>()._has_bits_);
  static const ::magic::SkillData& skill(const careerunlockItem* msg);
  static void set_has_skill(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::magic::SkillData&
careerunlockItem::_Internal::skill(const careerunlockItem* msg) {
  return *msg->skill_;
}
void careerunlockItem::clear_skill() {
  if (skill_ != nullptr) skill_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void careerunlockItem::clear_extskill() {
  extskill_.Clear();
}
careerunlockItem::careerunlockItem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.careerunlockItem)
}
careerunlockItem::careerunlockItem(const careerunlockItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      extskill_(from.extskill_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_skill()) {
    skill_ = new ::magic::SkillData(*from.skill_);
  } else {
    skill_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:career.careerunlockItem)
}

void careerunlockItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_careerunlockItem_career_2eproto.base);
  skill_ = nullptr;
}

careerunlockItem::~careerunlockItem() {
  // @@protoc_insertion_point(destructor:career.careerunlockItem)
  SharedDtor();
}

void careerunlockItem::SharedDtor() {
  if (this != internal_default_instance()) delete skill_;
}

void careerunlockItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const careerunlockItem& careerunlockItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_careerunlockItem_career_2eproto.base);
  return *internal_default_instance();
}


void careerunlockItem::Clear() {
// @@protoc_insertion_point(message_clear_start:career.careerunlockItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extskill_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(skill_ != nullptr);
    skill_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* careerunlockItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .magic.SkillData skill = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_skill(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .magic.ExtSkillData extskill = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_extskill(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* careerunlockItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.careerunlockItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .magic.SkillData skill = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::skill(this), target, stream);
  }

  // repeated .magic.ExtSkillData extskill = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_extskill_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_extskill(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.careerunlockItem)
  return target;
}

size_t careerunlockItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.careerunlockItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .magic.ExtSkillData extskill = 2;
  total_size += 1UL * this->_internal_extskill_size();
  for (const auto& msg : this->extskill_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .magic.SkillData skill = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *skill_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void careerunlockItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.careerunlockItem)
  GOOGLE_DCHECK_NE(&from, this);
  const careerunlockItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<careerunlockItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.careerunlockItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.careerunlockItem)
    MergeFrom(*source);
  }
}

void careerunlockItem::MergeFrom(const careerunlockItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.careerunlockItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extskill_.MergeFrom(from.extskill_);
  if (from._internal_has_skill()) {
    _internal_mutable_skill()->::magic::SkillData::MergeFrom(from._internal_skill());
  }
}

void careerunlockItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.careerunlockItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void careerunlockItem::CopyFrom(const careerunlockItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.careerunlockItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool careerunlockItem::IsInitialized() const {
  return true;
}

void careerunlockItem::InternalSwap(careerunlockItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  extskill_.InternalSwap(&other->extskill_);
  swap(skill_, other->skill_);
}

::PROTOBUF_NAMESPACE_ID::Metadata careerunlockItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void careerCurrentSkill::InitAsDefaultInstance() {
}
class careerCurrentSkill::_Internal {
 public:
  using HasBits = decltype(std::declval<careerCurrentSkill>()._has_bits_);
  static void set_has_career(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

careerCurrentSkill::careerCurrentSkill()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.careerCurrentSkill)
}
careerCurrentSkill::careerCurrentSkill(const careerCurrentSkill& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  career_ = from.career_;
  // @@protoc_insertion_point(copy_constructor:career.careerCurrentSkill)
}

void careerCurrentSkill::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_careerCurrentSkill_career_2eproto.base);
  career_ = 0u;
}

careerCurrentSkill::~careerCurrentSkill() {
  // @@protoc_insertion_point(destructor:career.careerCurrentSkill)
  SharedDtor();
}

void careerCurrentSkill::SharedDtor() {
}

void careerCurrentSkill::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const careerCurrentSkill& careerCurrentSkill::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_careerCurrentSkill_career_2eproto.base);
  return *internal_default_instance();
}


void careerCurrentSkill::Clear() {
// @@protoc_insertion_point(message_clear_start:career.careerCurrentSkill)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  career_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* careerCurrentSkill::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 career = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_career(&has_bits);
          career_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .career.lineSkillItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* careerCurrentSkill::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.careerCurrentSkill)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 career = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_career(), target);
  }

  // repeated .career.lineSkillItem item = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_item_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_item(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.careerCurrentSkill)
  return target;
}

size_t careerCurrentSkill::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.careerCurrentSkill)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .career.lineSkillItem item = 2;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->item_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 career = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_career());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void careerCurrentSkill::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.careerCurrentSkill)
  GOOGLE_DCHECK_NE(&from, this);
  const careerCurrentSkill* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<careerCurrentSkill>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.careerCurrentSkill)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.careerCurrentSkill)
    MergeFrom(*source);
  }
}

void careerCurrentSkill::MergeFrom(const careerCurrentSkill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.careerCurrentSkill)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
  if (from._internal_has_career()) {
    _internal_set_career(from._internal_career());
  }
}

void careerCurrentSkill::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.careerCurrentSkill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void careerCurrentSkill::CopyFrom(const careerCurrentSkill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.careerCurrentSkill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool careerCurrentSkill::IsInitialized() const {
  return true;
}

void careerCurrentSkill::InternalSwap(careerCurrentSkill* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_.InternalSwap(&other->item_);
  swap(career_, other->career_);
}

::PROTOBUF_NAMESPACE_ID::Metadata careerCurrentSkill::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqCareerSkillInfo_CS::InitAsDefaultInstance() {
}
class MSG_ReqCareerSkillInfo_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqCareerSkillInfo_CS>()._has_bits_);
};

MSG_ReqCareerSkillInfo_CS::MSG_ReqCareerSkillInfo_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.MSG_ReqCareerSkillInfo_CS)
}
MSG_ReqCareerSkillInfo_CS::MSG_ReqCareerSkillInfo_CS(const MSG_ReqCareerSkillInfo_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:career.MSG_ReqCareerSkillInfo_CS)
}

void MSG_ReqCareerSkillInfo_CS::SharedCtor() {
}

MSG_ReqCareerSkillInfo_CS::~MSG_ReqCareerSkillInfo_CS() {
  // @@protoc_insertion_point(destructor:career.MSG_ReqCareerSkillInfo_CS)
  SharedDtor();
}

void MSG_ReqCareerSkillInfo_CS::SharedDtor() {
}

void MSG_ReqCareerSkillInfo_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqCareerSkillInfo_CS& MSG_ReqCareerSkillInfo_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqCareerSkillInfo_CS_career_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqCareerSkillInfo_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:career.MSG_ReqCareerSkillInfo_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqCareerSkillInfo_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqCareerSkillInfo_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.MSG_ReqCareerSkillInfo_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.MSG_ReqCareerSkillInfo_CS)
  return target;
}

size_t MSG_ReqCareerSkillInfo_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.MSG_ReqCareerSkillInfo_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqCareerSkillInfo_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.MSG_ReqCareerSkillInfo_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqCareerSkillInfo_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqCareerSkillInfo_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.MSG_ReqCareerSkillInfo_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.MSG_ReqCareerSkillInfo_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqCareerSkillInfo_CS::MergeFrom(const MSG_ReqCareerSkillInfo_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.MSG_ReqCareerSkillInfo_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MSG_ReqCareerSkillInfo_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.MSG_ReqCareerSkillInfo_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqCareerSkillInfo_CS::CopyFrom(const MSG_ReqCareerSkillInfo_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.MSG_ReqCareerSkillInfo_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqCareerSkillInfo_CS::IsInitialized() const {
  return true;
}

void MSG_ReqCareerSkillInfo_CS::InternalSwap(MSG_ReqCareerSkillInfo_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqCareerSkillInfo_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetCareerSkillInfo_SC::InitAsDefaultInstance() {
  ::career::_MSG_RetCareerSkillInfo_SC_default_instance_._instance.get_mutable()->skillinfo_ = const_cast< ::career::CareerSkillInfo*>(
      ::career::CareerSkillInfo::internal_default_instance());
}
class MSG_RetCareerSkillInfo_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetCareerSkillInfo_SC>()._has_bits_);
  static const ::career::CareerSkillInfo& skillinfo(const MSG_RetCareerSkillInfo_SC* msg);
  static void set_has_skillinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::career::CareerSkillInfo&
MSG_RetCareerSkillInfo_SC::_Internal::skillinfo(const MSG_RetCareerSkillInfo_SC* msg) {
  return *msg->skillinfo_;
}
MSG_RetCareerSkillInfo_SC::MSG_RetCareerSkillInfo_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.MSG_RetCareerSkillInfo_SC)
}
MSG_RetCareerSkillInfo_SC::MSG_RetCareerSkillInfo_SC(const MSG_RetCareerSkillInfo_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_skillinfo()) {
    skillinfo_ = new ::career::CareerSkillInfo(*from.skillinfo_);
  } else {
    skillinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:career.MSG_RetCareerSkillInfo_SC)
}

void MSG_RetCareerSkillInfo_SC::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_RetCareerSkillInfo_SC_career_2eproto.base);
  skillinfo_ = nullptr;
}

MSG_RetCareerSkillInfo_SC::~MSG_RetCareerSkillInfo_SC() {
  // @@protoc_insertion_point(destructor:career.MSG_RetCareerSkillInfo_SC)
  SharedDtor();
}

void MSG_RetCareerSkillInfo_SC::SharedDtor() {
  if (this != internal_default_instance()) delete skillinfo_;
}

void MSG_RetCareerSkillInfo_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetCareerSkillInfo_SC& MSG_RetCareerSkillInfo_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetCareerSkillInfo_SC_career_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetCareerSkillInfo_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:career.MSG_RetCareerSkillInfo_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(skillinfo_ != nullptr);
    skillinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetCareerSkillInfo_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .career.CareerSkillInfo skillinfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_skillinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetCareerSkillInfo_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.MSG_RetCareerSkillInfo_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .career.CareerSkillInfo skillinfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::skillinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.MSG_RetCareerSkillInfo_SC)
  return target;
}

size_t MSG_RetCareerSkillInfo_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.MSG_RetCareerSkillInfo_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .career.CareerSkillInfo skillinfo = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *skillinfo_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetCareerSkillInfo_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.MSG_RetCareerSkillInfo_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetCareerSkillInfo_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetCareerSkillInfo_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.MSG_RetCareerSkillInfo_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.MSG_RetCareerSkillInfo_SC)
    MergeFrom(*source);
  }
}

void MSG_RetCareerSkillInfo_SC::MergeFrom(const MSG_RetCareerSkillInfo_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.MSG_RetCareerSkillInfo_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_skillinfo()) {
    _internal_mutable_skillinfo()->::career::CareerSkillInfo::MergeFrom(from._internal_skillinfo());
  }
}

void MSG_RetCareerSkillInfo_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.MSG_RetCareerSkillInfo_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetCareerSkillInfo_SC::CopyFrom(const MSG_RetCareerSkillInfo_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.MSG_RetCareerSkillInfo_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetCareerSkillInfo_SC::IsInitialized() const {
  return true;
}

void MSG_RetCareerSkillInfo_SC::InternalSwap(MSG_RetCareerSkillInfo_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(skillinfo_, other->skillinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetCareerSkillInfo_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CareerSkillInfo::InitAsDefaultInstance() {
}
class CareerSkillInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CareerSkillInfo>()._has_bits_);
  static void set_has_curcareer(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CareerSkillInfo::CareerSkillInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.CareerSkillInfo)
}
CareerSkillInfo::CareerSkillInfo(const CareerSkillInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      unlockskills_(from.unlockskills_),
      curskills_(from.curskills_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  curcareer_ = from.curcareer_;
  // @@protoc_insertion_point(copy_constructor:career.CareerSkillInfo)
}

void CareerSkillInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CareerSkillInfo_career_2eproto.base);
  curcareer_ = 0u;
}

CareerSkillInfo::~CareerSkillInfo() {
  // @@protoc_insertion_point(destructor:career.CareerSkillInfo)
  SharedDtor();
}

void CareerSkillInfo::SharedDtor() {
}

void CareerSkillInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CareerSkillInfo& CareerSkillInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CareerSkillInfo_career_2eproto.base);
  return *internal_default_instance();
}


void CareerSkillInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:career.CareerSkillInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlockskills_.Clear();
  curskills_.Clear();
  curcareer_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* CareerSkillInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .career.careerunlockItem unlockskills = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_unlockskills(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .career.lineSkillItem curskills = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_curskills(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 curcareer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_curcareer(&has_bits);
          curcareer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CareerSkillInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.CareerSkillInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .career.careerunlockItem unlockskills = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_unlockskills_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_unlockskills(i), target, stream);
  }

  // repeated .career.lineSkillItem curskills = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_curskills_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_curskills(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 curcareer = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_curcareer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.CareerSkillInfo)
  return target;
}

size_t CareerSkillInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.CareerSkillInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .career.careerunlockItem unlockskills = 1;
  total_size += 1UL * this->_internal_unlockskills_size();
  for (const auto& msg : this->unlockskills_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .career.lineSkillItem curskills = 2;
  total_size += 1UL * this->_internal_curskills_size();
  for (const auto& msg : this->curskills_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 curcareer = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_curcareer());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CareerSkillInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.CareerSkillInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CareerSkillInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CareerSkillInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.CareerSkillInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.CareerSkillInfo)
    MergeFrom(*source);
  }
}

void CareerSkillInfo::MergeFrom(const CareerSkillInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.CareerSkillInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlockskills_.MergeFrom(from.unlockskills_);
  curskills_.MergeFrom(from.curskills_);
  if (from._internal_has_curcareer()) {
    _internal_set_curcareer(from._internal_curcareer());
  }
}

void CareerSkillInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.CareerSkillInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CareerSkillInfo::CopyFrom(const CareerSkillInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.CareerSkillInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CareerSkillInfo::IsInitialized() const {
  return true;
}

void CareerSkillInfo::InternalSwap(CareerSkillInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  unlockskills_.InternalSwap(&other->unlockskills_);
  curskills_.InternalSwap(&other->curskills_);
  swap(curcareer_, other->curcareer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CareerSkillInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqRepalceSkill_CS::InitAsDefaultInstance() {
}
class MSG_ReqRepalceSkill_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqRepalceSkill_CS>()._has_bits_);
  static void set_has_career(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_lineid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_newskill(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

MSG_ReqRepalceSkill_CS::MSG_ReqRepalceSkill_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.MSG_ReqRepalceSkill_CS)
}
MSG_ReqRepalceSkill_CS::MSG_ReqRepalceSkill_CS(const MSG_ReqRepalceSkill_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&career_, &from.career_,
    static_cast<size_t>(reinterpret_cast<char*>(&newskill_) -
    reinterpret_cast<char*>(&career_)) + sizeof(newskill_));
  // @@protoc_insertion_point(copy_constructor:career.MSG_ReqRepalceSkill_CS)
}

void MSG_ReqRepalceSkill_CS::SharedCtor() {
  ::memset(&career_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newskill_) -
      reinterpret_cast<char*>(&career_)) + sizeof(newskill_));
}

MSG_ReqRepalceSkill_CS::~MSG_ReqRepalceSkill_CS() {
  // @@protoc_insertion_point(destructor:career.MSG_ReqRepalceSkill_CS)
  SharedDtor();
}

void MSG_ReqRepalceSkill_CS::SharedDtor() {
}

void MSG_ReqRepalceSkill_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqRepalceSkill_CS& MSG_ReqRepalceSkill_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqRepalceSkill_CS_career_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqRepalceSkill_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:career.MSG_ReqRepalceSkill_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&career_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&newskill_) -
        reinterpret_cast<char*>(&career_)) + sizeof(newskill_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqRepalceSkill_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 career = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_career(&has_bits);
          career_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 lineid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_lineid(&has_bits);
          lineid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 newskill = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_newskill(&has_bits);
          newskill_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqRepalceSkill_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.MSG_ReqRepalceSkill_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 career = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_career(), target);
  }

  // optional uint32 lineid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_lineid(), target);
  }

  // optional uint32 newskill = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_newskill(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.MSG_ReqRepalceSkill_CS)
  return target;
}

size_t MSG_ReqRepalceSkill_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.MSG_ReqRepalceSkill_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 career = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_career());
    }

    // optional uint32 lineid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_lineid());
    }

    // optional uint32 newskill = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_newskill());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqRepalceSkill_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.MSG_ReqRepalceSkill_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqRepalceSkill_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqRepalceSkill_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.MSG_ReqRepalceSkill_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.MSG_ReqRepalceSkill_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqRepalceSkill_CS::MergeFrom(const MSG_ReqRepalceSkill_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.MSG_ReqRepalceSkill_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      career_ = from.career_;
    }
    if (cached_has_bits & 0x00000002u) {
      lineid_ = from.lineid_;
    }
    if (cached_has_bits & 0x00000004u) {
      newskill_ = from.newskill_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MSG_ReqRepalceSkill_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.MSG_ReqRepalceSkill_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqRepalceSkill_CS::CopyFrom(const MSG_ReqRepalceSkill_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.MSG_ReqRepalceSkill_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqRepalceSkill_CS::IsInitialized() const {
  return true;
}

void MSG_ReqRepalceSkill_CS::InternalSwap(MSG_ReqRepalceSkill_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(career_, other->career_);
  swap(lineid_, other->lineid_);
  swap(newskill_, other->newskill_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqRepalceSkill_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetReplaceSkill_SC::InitAsDefaultInstance() {
}
class MSG_RetReplaceSkill_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetReplaceSkill_SC>()._has_bits_);
  static void set_has_errcode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_RetReplaceSkill_SC::MSG_RetReplaceSkill_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.MSG_RetReplaceSkill_SC)
}
MSG_RetReplaceSkill_SC::MSG_RetReplaceSkill_SC(const MSG_RetReplaceSkill_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:career.MSG_RetReplaceSkill_SC)
}

void MSG_RetReplaceSkill_SC::SharedCtor() {
  errcode_ = 0u;
}

MSG_RetReplaceSkill_SC::~MSG_RetReplaceSkill_SC() {
  // @@protoc_insertion_point(destructor:career.MSG_RetReplaceSkill_SC)
  SharedDtor();
}

void MSG_RetReplaceSkill_SC::SharedDtor() {
}

void MSG_RetReplaceSkill_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetReplaceSkill_SC& MSG_RetReplaceSkill_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetReplaceSkill_SC_career_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetReplaceSkill_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:career.MSG_RetReplaceSkill_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errcode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetReplaceSkill_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 errcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_errcode(&has_bits);
          errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetReplaceSkill_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.MSG_RetReplaceSkill_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 errcode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.MSG_RetReplaceSkill_SC)
  return target;
}

size_t MSG_RetReplaceSkill_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.MSG_RetReplaceSkill_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 errcode = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_errcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetReplaceSkill_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.MSG_RetReplaceSkill_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetReplaceSkill_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetReplaceSkill_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.MSG_RetReplaceSkill_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.MSG_RetReplaceSkill_SC)
    MergeFrom(*source);
  }
}

void MSG_RetReplaceSkill_SC::MergeFrom(const MSG_RetReplaceSkill_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.MSG_RetReplaceSkill_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_errcode()) {
    _internal_set_errcode(from._internal_errcode());
  }
}

void MSG_RetReplaceSkill_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.MSG_RetReplaceSkill_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetReplaceSkill_SC::CopyFrom(const MSG_RetReplaceSkill_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.MSG_RetReplaceSkill_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetReplaceSkill_SC::IsInitialized() const {
  return true;
}

void MSG_RetReplaceSkill_SC::InternalSwap(MSG_RetReplaceSkill_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(errcode_, other->errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetReplaceSkill_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_ReqUpgradeExtSkill_CS::InitAsDefaultInstance() {
}
class MSG_ReqUpgradeExtSkill_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_ReqUpgradeExtSkill_CS>()._has_bits_);
  static void set_has_extskillid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_ReqUpgradeExtSkill_CS::MSG_ReqUpgradeExtSkill_CS()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.MSG_ReqUpgradeExtSkill_CS)
}
MSG_ReqUpgradeExtSkill_CS::MSG_ReqUpgradeExtSkill_CS(const MSG_ReqUpgradeExtSkill_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extskillid_ = from.extskillid_;
  // @@protoc_insertion_point(copy_constructor:career.MSG_ReqUpgradeExtSkill_CS)
}

void MSG_ReqUpgradeExtSkill_CS::SharedCtor() {
  extskillid_ = 0u;
}

MSG_ReqUpgradeExtSkill_CS::~MSG_ReqUpgradeExtSkill_CS() {
  // @@protoc_insertion_point(destructor:career.MSG_ReqUpgradeExtSkill_CS)
  SharedDtor();
}

void MSG_ReqUpgradeExtSkill_CS::SharedDtor() {
}

void MSG_ReqUpgradeExtSkill_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_ReqUpgradeExtSkill_CS& MSG_ReqUpgradeExtSkill_CS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_ReqUpgradeExtSkill_CS_career_2eproto.base);
  return *internal_default_instance();
}


void MSG_ReqUpgradeExtSkill_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:career.MSG_ReqUpgradeExtSkill_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extskillid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_ReqUpgradeExtSkill_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 extskillid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_extskillid(&has_bits);
          extskillid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_ReqUpgradeExtSkill_CS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.MSG_ReqUpgradeExtSkill_CS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 extskillid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_extskillid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.MSG_ReqUpgradeExtSkill_CS)
  return target;
}

size_t MSG_ReqUpgradeExtSkill_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.MSG_ReqUpgradeExtSkill_CS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 extskillid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_extskillid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_ReqUpgradeExtSkill_CS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.MSG_ReqUpgradeExtSkill_CS)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_ReqUpgradeExtSkill_CS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_ReqUpgradeExtSkill_CS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.MSG_ReqUpgradeExtSkill_CS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.MSG_ReqUpgradeExtSkill_CS)
    MergeFrom(*source);
  }
}

void MSG_ReqUpgradeExtSkill_CS::MergeFrom(const MSG_ReqUpgradeExtSkill_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.MSG_ReqUpgradeExtSkill_CS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_extskillid()) {
    _internal_set_extskillid(from._internal_extskillid());
  }
}

void MSG_ReqUpgradeExtSkill_CS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.MSG_ReqUpgradeExtSkill_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_ReqUpgradeExtSkill_CS::CopyFrom(const MSG_ReqUpgradeExtSkill_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.MSG_ReqUpgradeExtSkill_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_ReqUpgradeExtSkill_CS::IsInitialized() const {
  return true;
}

void MSG_ReqUpgradeExtSkill_CS::InternalSwap(MSG_ReqUpgradeExtSkill_CS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(extskillid_, other->extskillid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_ReqUpgradeExtSkill_CS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RetUpgradeExtSkill_SC::InitAsDefaultInstance() {
}
class MSG_RetUpgradeExtSkill_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_RetUpgradeExtSkill_SC>()._has_bits_);
  static void set_has_errcode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MSG_RetUpgradeExtSkill_SC::MSG_RetUpgradeExtSkill_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.MSG_RetUpgradeExtSkill_SC)
}
MSG_RetUpgradeExtSkill_SC::MSG_RetUpgradeExtSkill_SC(const MSG_RetUpgradeExtSkill_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:career.MSG_RetUpgradeExtSkill_SC)
}

void MSG_RetUpgradeExtSkill_SC::SharedCtor() {
  errcode_ = 0u;
}

MSG_RetUpgradeExtSkill_SC::~MSG_RetUpgradeExtSkill_SC() {
  // @@protoc_insertion_point(destructor:career.MSG_RetUpgradeExtSkill_SC)
  SharedDtor();
}

void MSG_RetUpgradeExtSkill_SC::SharedDtor() {
}

void MSG_RetUpgradeExtSkill_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RetUpgradeExtSkill_SC& MSG_RetUpgradeExtSkill_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RetUpgradeExtSkill_SC_career_2eproto.base);
  return *internal_default_instance();
}


void MSG_RetUpgradeExtSkill_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:career.MSG_RetUpgradeExtSkill_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errcode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_RetUpgradeExtSkill_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 errcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_errcode(&has_bits);
          errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RetUpgradeExtSkill_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.MSG_RetUpgradeExtSkill_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 errcode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.MSG_RetUpgradeExtSkill_SC)
  return target;
}

size_t MSG_RetUpgradeExtSkill_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.MSG_RetUpgradeExtSkill_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 errcode = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_errcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RetUpgradeExtSkill_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.MSG_RetUpgradeExtSkill_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RetUpgradeExtSkill_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RetUpgradeExtSkill_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.MSG_RetUpgradeExtSkill_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.MSG_RetUpgradeExtSkill_SC)
    MergeFrom(*source);
  }
}

void MSG_RetUpgradeExtSkill_SC::MergeFrom(const MSG_RetUpgradeExtSkill_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.MSG_RetUpgradeExtSkill_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_errcode()) {
    _internal_set_errcode(from._internal_errcode());
  }
}

void MSG_RetUpgradeExtSkill_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.MSG_RetUpgradeExtSkill_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RetUpgradeExtSkill_SC::CopyFrom(const MSG_RetUpgradeExtSkill_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.MSG_RetUpgradeExtSkill_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RetUpgradeExtSkill_SC::IsInitialized() const {
  return true;
}

void MSG_RetUpgradeExtSkill_SC::InternalSwap(MSG_RetUpgradeExtSkill_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(errcode_, other->errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RetUpgradeExtSkill_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_NoneChantSkill_SC::InitAsDefaultInstance() {
}
class MSG_NoneChantSkill_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<MSG_NoneChantSkill_SC>()._has_bits_);
};

MSG_NoneChantSkill_SC::MSG_NoneChantSkill_SC()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:career.MSG_NoneChantSkill_SC)
}
MSG_NoneChantSkill_SC::MSG_NoneChantSkill_SC(const MSG_NoneChantSkill_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      arrskill_(from.arrskill_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:career.MSG_NoneChantSkill_SC)
}

void MSG_NoneChantSkill_SC::SharedCtor() {
}

MSG_NoneChantSkill_SC::~MSG_NoneChantSkill_SC() {
  // @@protoc_insertion_point(destructor:career.MSG_NoneChantSkill_SC)
  SharedDtor();
}

void MSG_NoneChantSkill_SC::SharedDtor() {
}

void MSG_NoneChantSkill_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_NoneChantSkill_SC& MSG_NoneChantSkill_SC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_NoneChantSkill_SC_career_2eproto.base);
  return *internal_default_instance();
}


void MSG_NoneChantSkill_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:career.MSG_NoneChantSkill_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrskill_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MSG_NoneChantSkill_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 arrskill = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_arrskill(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_arrskill(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_NoneChantSkill_SC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:career.MSG_NoneChantSkill_SC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 arrskill = 1;
  for (int i = 0, n = this->_internal_arrskill_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_arrskill(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:career.MSG_NoneChantSkill_SC)
  return target;
}

size_t MSG_NoneChantSkill_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:career.MSG_NoneChantSkill_SC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 arrskill = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->arrskill_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_arrskill_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_NoneChantSkill_SC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:career.MSG_NoneChantSkill_SC)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_NoneChantSkill_SC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_NoneChantSkill_SC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:career.MSG_NoneChantSkill_SC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:career.MSG_NoneChantSkill_SC)
    MergeFrom(*source);
  }
}

void MSG_NoneChantSkill_SC::MergeFrom(const MSG_NoneChantSkill_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:career.MSG_NoneChantSkill_SC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrskill_.MergeFrom(from.arrskill_);
}

void MSG_NoneChantSkill_SC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:career.MSG_NoneChantSkill_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_NoneChantSkill_SC::CopyFrom(const MSG_NoneChantSkill_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:career.MSG_NoneChantSkill_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_NoneChantSkill_SC::IsInitialized() const {
  return true;
}

void MSG_NoneChantSkill_SC::InternalSwap(MSG_NoneChantSkill_SC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  arrskill_.InternalSwap(&other->arrskill_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_NoneChantSkill_SC::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace career
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::career::skillLevelItem* Arena::CreateMaybeMessage< ::career::skillLevelItem >(Arena* arena) {
  return Arena::CreateInternal< ::career::skillLevelItem >(arena);
}
template<> PROTOBUF_NOINLINE ::career::lineSkillItem* Arena::CreateMaybeMessage< ::career::lineSkillItem >(Arena* arena) {
  return Arena::CreateInternal< ::career::lineSkillItem >(arena);
}
template<> PROTOBUF_NOINLINE ::career::proficiencyItem* Arena::CreateMaybeMessage< ::career::proficiencyItem >(Arena* arena) {
  return Arena::CreateInternal< ::career::proficiencyItem >(arena);
}
template<> PROTOBUF_NOINLINE ::career::careerunlockItem* Arena::CreateMaybeMessage< ::career::careerunlockItem >(Arena* arena) {
  return Arena::CreateInternal< ::career::careerunlockItem >(arena);
}
template<> PROTOBUF_NOINLINE ::career::careerCurrentSkill* Arena::CreateMaybeMessage< ::career::careerCurrentSkill >(Arena* arena) {
  return Arena::CreateInternal< ::career::careerCurrentSkill >(arena);
}
template<> PROTOBUF_NOINLINE ::career::MSG_ReqCareerSkillInfo_CS* Arena::CreateMaybeMessage< ::career::MSG_ReqCareerSkillInfo_CS >(Arena* arena) {
  return Arena::CreateInternal< ::career::MSG_ReqCareerSkillInfo_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::career::MSG_RetCareerSkillInfo_SC* Arena::CreateMaybeMessage< ::career::MSG_RetCareerSkillInfo_SC >(Arena* arena) {
  return Arena::CreateInternal< ::career::MSG_RetCareerSkillInfo_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::career::CareerSkillInfo* Arena::CreateMaybeMessage< ::career::CareerSkillInfo >(Arena* arena) {
  return Arena::CreateInternal< ::career::CareerSkillInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::career::MSG_ReqRepalceSkill_CS* Arena::CreateMaybeMessage< ::career::MSG_ReqRepalceSkill_CS >(Arena* arena) {
  return Arena::CreateInternal< ::career::MSG_ReqRepalceSkill_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::career::MSG_RetReplaceSkill_SC* Arena::CreateMaybeMessage< ::career::MSG_RetReplaceSkill_SC >(Arena* arena) {
  return Arena::CreateInternal< ::career::MSG_RetReplaceSkill_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::career::MSG_ReqUpgradeExtSkill_CS* Arena::CreateMaybeMessage< ::career::MSG_ReqUpgradeExtSkill_CS >(Arena* arena) {
  return Arena::CreateInternal< ::career::MSG_ReqUpgradeExtSkill_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::career::MSG_RetUpgradeExtSkill_SC* Arena::CreateMaybeMessage< ::career::MSG_RetUpgradeExtSkill_SC >(Arena* arena) {
  return Arena::CreateInternal< ::career::MSG_RetUpgradeExtSkill_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::career::MSG_NoneChantSkill_SC* Arena::CreateMaybeMessage< ::career::MSG_NoneChantSkill_SC >(Arena* arena) {
  return Arena::CreateInternal< ::career::MSG_NoneChantSkill_SC >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
