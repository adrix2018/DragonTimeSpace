// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: market.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_market_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_market_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "object.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_market_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_market_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[14]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_market_2eproto;
namespace market {
class Item;
class ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class MSG_ExchangeRatio_CSC;
class MSG_ExchangeRatio_CSCDefaultTypeInternal;
extern MSG_ExchangeRatio_CSCDefaultTypeInternal _MSG_ExchangeRatio_CSC_default_instance_;
class MSG_RefreshMarketItem_SC;
class MSG_RefreshMarketItem_SCDefaultTypeInternal;
extern MSG_RefreshMarketItem_SCDefaultTypeInternal _MSG_RefreshMarketItem_SC_default_instance_;
class MSG_ReqBuyMarketItem_CS;
class MSG_ReqBuyMarketItem_CSDefaultTypeInternal;
extern MSG_ReqBuyMarketItem_CSDefaultTypeInternal _MSG_ReqBuyMarketItem_CS_default_instance_;
class MSG_ReqBuySelledItem_CS;
class MSG_ReqBuySelledItem_CSDefaultTypeInternal;
extern MSG_ReqBuySelledItem_CSDefaultTypeInternal _MSG_ReqBuySelledItem_CS_default_instance_;
class MSG_ReqMarketItemList_CS;
class MSG_ReqMarketItemList_CSDefaultTypeInternal;
extern MSG_ReqMarketItemList_CSDefaultTypeInternal _MSG_ReqMarketItemList_CS_default_instance_;
class MSG_ReqSellItem_CS;
class MSG_ReqSellItem_CSDefaultTypeInternal;
extern MSG_ReqSellItem_CSDefaultTypeInternal _MSG_ReqSellItem_CS_default_instance_;
class MSG_RetBuyMarketItem_SC;
class MSG_RetBuyMarketItem_SCDefaultTypeInternal;
extern MSG_RetBuyMarketItem_SCDefaultTypeInternal _MSG_RetBuyMarketItem_SC_default_instance_;
class MSG_RetBuySelledItem_SC;
class MSG_RetBuySelledItem_SCDefaultTypeInternal;
extern MSG_RetBuySelledItem_SCDefaultTypeInternal _MSG_RetBuySelledItem_SC_default_instance_;
class MSG_RetMarketItemList_SC;
class MSG_RetMarketItemList_SCDefaultTypeInternal;
extern MSG_RetMarketItemList_SCDefaultTypeInternal _MSG_RetMarketItemList_SC_default_instance_;
class MSG_RetSellItem_SC;
class MSG_RetSellItem_SCDefaultTypeInternal;
extern MSG_RetSellItem_SCDefaultTypeInternal _MSG_RetSellItem_SC_default_instance_;
class MSG_UserSelledItemList_CSC;
class MSG_UserSelledItemList_CSCDefaultTypeInternal;
extern MSG_UserSelledItemList_CSCDefaultTypeInternal _MSG_UserSelledItemList_CSC_default_instance_;
class OneMarket;
class OneMarketDefaultTypeInternal;
extern OneMarketDefaultTypeInternal _OneMarket_default_instance_;
class SelledItem;
class SelledItemDefaultTypeInternal;
extern SelledItemDefaultTypeInternal _SelledItem_default_instance_;
}  // namespace market
PROTOBUF_NAMESPACE_OPEN
template<> ::market::Item* Arena::CreateMaybeMessage<::market::Item>(Arena*);
template<> ::market::MSG_ExchangeRatio_CSC* Arena::CreateMaybeMessage<::market::MSG_ExchangeRatio_CSC>(Arena*);
template<> ::market::MSG_RefreshMarketItem_SC* Arena::CreateMaybeMessage<::market::MSG_RefreshMarketItem_SC>(Arena*);
template<> ::market::MSG_ReqBuyMarketItem_CS* Arena::CreateMaybeMessage<::market::MSG_ReqBuyMarketItem_CS>(Arena*);
template<> ::market::MSG_ReqBuySelledItem_CS* Arena::CreateMaybeMessage<::market::MSG_ReqBuySelledItem_CS>(Arena*);
template<> ::market::MSG_ReqMarketItemList_CS* Arena::CreateMaybeMessage<::market::MSG_ReqMarketItemList_CS>(Arena*);
template<> ::market::MSG_ReqSellItem_CS* Arena::CreateMaybeMessage<::market::MSG_ReqSellItem_CS>(Arena*);
template<> ::market::MSG_RetBuyMarketItem_SC* Arena::CreateMaybeMessage<::market::MSG_RetBuyMarketItem_SC>(Arena*);
template<> ::market::MSG_RetBuySelledItem_SC* Arena::CreateMaybeMessage<::market::MSG_RetBuySelledItem_SC>(Arena*);
template<> ::market::MSG_RetMarketItemList_SC* Arena::CreateMaybeMessage<::market::MSG_RetMarketItemList_SC>(Arena*);
template<> ::market::MSG_RetSellItem_SC* Arena::CreateMaybeMessage<::market::MSG_RetSellItem_SC>(Arena*);
template<> ::market::MSG_UserSelledItemList_CSC* Arena::CreateMaybeMessage<::market::MSG_UserSelledItemList_CSC>(Arena*);
template<> ::market::OneMarket* Arena::CreateMaybeMessage<::market::OneMarket>(Arena*);
template<> ::market::SelledItem* Arena::CreateMaybeMessage<::market::SelledItem>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace market {

enum MarketType : int {
  MarketType_1 = 1,
  MarketType_2 = 2,
  MarketType_3 = 3,
  MarketType_4 = 4,
  MarketType_5 = 5,
  MarketType_6 = 6,
  MarketType_7 = 7
};
bool MarketType_IsValid(int value);
constexpr MarketType MarketType_MIN = MarketType_1;
constexpr MarketType MarketType_MAX = MarketType_7;
constexpr int MarketType_ARRAYSIZE = MarketType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MarketType_descriptor();
template<typename T>
inline const std::string& MarketType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MarketType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MarketType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MarketType_descriptor(), enum_t_value);
}
inline bool MarketType_Parse(
    const std::string& name, MarketType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MarketType>(
    MarketType_descriptor(), name, value);
}
// ===================================================================

class Item :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline Item& operator=(Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }
  inline void Swap(Item* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const final {
    return CreateMaybeMessage<Item>(nullptr);
  }

  Item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Item>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Item* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.Item";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kItemidFieldNumber = 2,
    kDiscountFieldNumber = 3,
    kCurnumFieldNumber = 4,
    kMaxnumFieldNumber = 5,
    kCostidFieldNumber = 6,
    kCostnumFieldNumber = 7,
    kBindFieldNumber = 8,
    kSkillidFieldNumber = 9,
    kSkilllvFieldNumber = 10,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 itemid = 2;
  bool has_itemid() const;
  private:
  bool _internal_has_itemid() const;
  public:
  void clear_itemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 itemid() const;
  void set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_itemid() const;
  void _internal_set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 discount = 3;
  bool has_discount() const;
  private:
  bool _internal_has_discount() const;
  public:
  void clear_discount();
  ::PROTOBUF_NAMESPACE_ID::uint32 discount() const;
  void set_discount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_discount() const;
  void _internal_set_discount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 curnum = 4;
  bool has_curnum() const;
  private:
  bool _internal_has_curnum() const;
  public:
  void clear_curnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 curnum() const;
  void set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curnum() const;
  void _internal_set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxnum = 5;
  bool has_maxnum() const;
  private:
  bool _internal_has_maxnum() const;
  public:
  void clear_maxnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxnum() const;
  void set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxnum() const;
  void _internal_set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 costid = 6;
  bool has_costid() const;
  private:
  bool _internal_has_costid() const;
  public:
  void clear_costid();
  ::PROTOBUF_NAMESPACE_ID::uint32 costid() const;
  void set_costid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_costid() const;
  void _internal_set_costid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 costnum = 7;
  bool has_costnum() const;
  private:
  bool _internal_has_costnum() const;
  public:
  void clear_costnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 costnum() const;
  void set_costnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_costnum() const;
  void _internal_set_costnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bind = 8;
  bool has_bind() const;
  private:
  bool _internal_has_bind() const;
  public:
  void clear_bind();
  ::PROTOBUF_NAMESPACE_ID::uint32 bind() const;
  void set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bind() const;
  void _internal_set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skillid = 9;
  bool has_skillid() const;
  private:
  bool _internal_has_skillid() const;
  public:
  void clear_skillid();
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid() const;
  void set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skillid() const;
  void _internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skilllv = 10;
  bool has_skilllv() const;
  private:
  bool _internal_has_skilllv() const;
  public:
  void clear_skilllv();
  ::PROTOBUF_NAMESPACE_ID::uint32 skilllv() const;
  void set_skilllv(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skilllv() const;
  void _internal_set_skilllv(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:market.Item)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 itemid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 discount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 costid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 costnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bind_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skillid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skilllv_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class OneMarket :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.OneMarket) */ {
 public:
  OneMarket();
  virtual ~OneMarket();

  OneMarket(const OneMarket& from);
  OneMarket(OneMarket&& from) noexcept
    : OneMarket() {
    *this = ::std::move(from);
  }

  inline OneMarket& operator=(const OneMarket& from) {
    CopyFrom(from);
    return *this;
  }
  inline OneMarket& operator=(OneMarket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OneMarket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OneMarket* internal_default_instance() {
    return reinterpret_cast<const OneMarket*>(
               &_OneMarket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(OneMarket& a, OneMarket& b) {
    a.Swap(&b);
  }
  inline void Swap(OneMarket* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OneMarket* New() const final {
    return CreateMaybeMessage<OneMarket>(nullptr);
  }

  OneMarket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OneMarket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OneMarket& from);
  void MergeFrom(const OneMarket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OneMarket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.OneMarket";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemlistFieldNumber = 3,
    kRefreshtimeFieldNumber = 5,
    kIdFieldNumber = 1,
    kRefreshtypeFieldNumber = 4,
    kSubtypeFieldNumber = 6,
    kTypeFieldNumber = 2,
  };
  // repeated .market.Item itemlist = 3;
  int itemlist_size() const;
  private:
  int _internal_itemlist_size() const;
  public:
  void clear_itemlist();
  ::market::Item* mutable_itemlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::Item >*
      mutable_itemlist();
  private:
  const ::market::Item& _internal_itemlist(int index) const;
  ::market::Item* _internal_add_itemlist();
  public:
  const ::market::Item& itemlist(int index) const;
  ::market::Item* add_itemlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::Item >&
      itemlist() const;

  // optional string refreshtime = 5;
  bool has_refreshtime() const;
  private:
  bool _internal_has_refreshtime() const;
  public:
  void clear_refreshtime();
  const std::string& refreshtime() const;
  void set_refreshtime(const std::string& value);
  void set_refreshtime(std::string&& value);
  void set_refreshtime(const char* value);
  void set_refreshtime(const char* value, size_t size);
  std::string* mutable_refreshtime();
  std::string* release_refreshtime();
  void set_allocated_refreshtime(std::string* refreshtime);
  private:
  const std::string& _internal_refreshtime() const;
  void _internal_set_refreshtime(const std::string& value);
  std::string* _internal_mutable_refreshtime();
  public:

  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 refreshtype = 4;
  bool has_refreshtype() const;
  private:
  bool _internal_has_refreshtype() const;
  public:
  void clear_refreshtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 refreshtype() const;
  void set_refreshtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_refreshtype() const;
  void _internal_set_refreshtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 subtype = 6;
  bool has_subtype() const;
  private:
  bool _internal_has_subtype() const;
  public:
  void clear_subtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 subtype() const;
  void set_subtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subtype() const;
  void _internal_set_subtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .market.MarketType type = 2;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::market::MarketType type() const;
  void set_type(::market::MarketType value);
  private:
  ::market::MarketType _internal_type() const;
  void _internal_set_type(::market::MarketType value);
  public:

  // @@protoc_insertion_point(class_scope:market.OneMarket)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::Item > itemlist_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr refreshtime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 refreshtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subtype_;
  int type_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqMarketItemList_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_ReqMarketItemList_CS) */ {
 public:
  MSG_ReqMarketItemList_CS();
  virtual ~MSG_ReqMarketItemList_CS();

  MSG_ReqMarketItemList_CS(const MSG_ReqMarketItemList_CS& from);
  MSG_ReqMarketItemList_CS(MSG_ReqMarketItemList_CS&& from) noexcept
    : MSG_ReqMarketItemList_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqMarketItemList_CS& operator=(const MSG_ReqMarketItemList_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqMarketItemList_CS& operator=(MSG_ReqMarketItemList_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqMarketItemList_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqMarketItemList_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqMarketItemList_CS*>(
               &_MSG_ReqMarketItemList_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MSG_ReqMarketItemList_CS& a, MSG_ReqMarketItemList_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqMarketItemList_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqMarketItemList_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqMarketItemList_CS>(nullptr);
  }

  MSG_ReqMarketItemList_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqMarketItemList_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqMarketItemList_CS& from);
  void MergeFrom(const MSG_ReqMarketItemList_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqMarketItemList_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_ReqMarketItemList_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMarketidFieldNumber = 1,
  };
  // repeated uint32 marketid = 1;
  int marketid_size() const;
  private:
  int _internal_marketid_size() const;
  public:
  void clear_marketid();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_marketid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_marketid() const;
  void _internal_add_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_marketid();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 marketid(int index) const;
  void set_marketid(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      marketid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_marketid();

  // @@protoc_insertion_point(class_scope:market.MSG_ReqMarketItemList_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > marketid_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetMarketItemList_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_RetMarketItemList_SC) */ {
 public:
  MSG_RetMarketItemList_SC();
  virtual ~MSG_RetMarketItemList_SC();

  MSG_RetMarketItemList_SC(const MSG_RetMarketItemList_SC& from);
  MSG_RetMarketItemList_SC(MSG_RetMarketItemList_SC&& from) noexcept
    : MSG_RetMarketItemList_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetMarketItemList_SC& operator=(const MSG_RetMarketItemList_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetMarketItemList_SC& operator=(MSG_RetMarketItemList_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetMarketItemList_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetMarketItemList_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetMarketItemList_SC*>(
               &_MSG_RetMarketItemList_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MSG_RetMarketItemList_SC& a, MSG_RetMarketItemList_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetMarketItemList_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetMarketItemList_SC* New() const final {
    return CreateMaybeMessage<MSG_RetMarketItemList_SC>(nullptr);
  }

  MSG_RetMarketItemList_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetMarketItemList_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetMarketItemList_SC& from);
  void MergeFrom(const MSG_RetMarketItemList_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetMarketItemList_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_RetMarketItemList_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMarketdetailFieldNumber = 1,
    kGuildskilllvFieldNumber = 2,
  };
  // repeated .market.OneMarket marketdetail = 1;
  int marketdetail_size() const;
  private:
  int _internal_marketdetail_size() const;
  public:
  void clear_marketdetail();
  ::market::OneMarket* mutable_marketdetail(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::OneMarket >*
      mutable_marketdetail();
  private:
  const ::market::OneMarket& _internal_marketdetail(int index) const;
  ::market::OneMarket* _internal_add_marketdetail();
  public:
  const ::market::OneMarket& marketdetail(int index) const;
  ::market::OneMarket* add_marketdetail();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::OneMarket >&
      marketdetail() const;

  // optional uint32 guildskilllv = 2;
  bool has_guildskilllv() const;
  private:
  bool _internal_has_guildskilllv() const;
  public:
  void clear_guildskilllv();
  ::PROTOBUF_NAMESPACE_ID::uint32 guildskilllv() const;
  void set_guildskilllv(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guildskilllv() const;
  void _internal_set_guildskilllv(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:market.MSG_RetMarketItemList_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::OneMarket > marketdetail_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guildskilllv_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqBuyMarketItem_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_ReqBuyMarketItem_CS) */ {
 public:
  MSG_ReqBuyMarketItem_CS();
  virtual ~MSG_ReqBuyMarketItem_CS();

  MSG_ReqBuyMarketItem_CS(const MSG_ReqBuyMarketItem_CS& from);
  MSG_ReqBuyMarketItem_CS(MSG_ReqBuyMarketItem_CS&& from) noexcept
    : MSG_ReqBuyMarketItem_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqBuyMarketItem_CS& operator=(const MSG_ReqBuyMarketItem_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqBuyMarketItem_CS& operator=(MSG_ReqBuyMarketItem_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqBuyMarketItem_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqBuyMarketItem_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqBuyMarketItem_CS*>(
               &_MSG_ReqBuyMarketItem_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MSG_ReqBuyMarketItem_CS& a, MSG_ReqBuyMarketItem_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqBuyMarketItem_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqBuyMarketItem_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqBuyMarketItem_CS>(nullptr);
  }

  MSG_ReqBuyMarketItem_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqBuyMarketItem_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqBuyMarketItem_CS& from);
  void MergeFrom(const MSG_ReqBuyMarketItem_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqBuyMarketItem_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_ReqBuyMarketItem_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMarketidFieldNumber = 1,
    kIdFieldNumber = 2,
    kItemidFieldNumber = 3,
    kItemnumFieldNumber = 4,
  };
  // optional uint32 marketid = 1;
  bool has_marketid() const;
  private:
  bool _internal_has_marketid() const;
  public:
  void clear_marketid();
  ::PROTOBUF_NAMESPACE_ID::uint32 marketid() const;
  void set_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_marketid() const;
  void _internal_set_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 itemid = 3;
  bool has_itemid() const;
  private:
  bool _internal_has_itemid() const;
  public:
  void clear_itemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 itemid() const;
  void set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_itemid() const;
  void _internal_set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 itemnum = 4;
  bool has_itemnum() const;
  private:
  bool _internal_has_itemnum() const;
  public:
  void clear_itemnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 itemnum() const;
  void set_itemnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_itemnum() const;
  void _internal_set_itemnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:market.MSG_ReqBuyMarketItem_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 marketid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 itemid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 itemnum_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetBuyMarketItem_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_RetBuyMarketItem_SC) */ {
 public:
  MSG_RetBuyMarketItem_SC();
  virtual ~MSG_RetBuyMarketItem_SC();

  MSG_RetBuyMarketItem_SC(const MSG_RetBuyMarketItem_SC& from);
  MSG_RetBuyMarketItem_SC(MSG_RetBuyMarketItem_SC&& from) noexcept
    : MSG_RetBuyMarketItem_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetBuyMarketItem_SC& operator=(const MSG_RetBuyMarketItem_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetBuyMarketItem_SC& operator=(MSG_RetBuyMarketItem_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetBuyMarketItem_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetBuyMarketItem_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetBuyMarketItem_SC*>(
               &_MSG_RetBuyMarketItem_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MSG_RetBuyMarketItem_SC& a, MSG_RetBuyMarketItem_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetBuyMarketItem_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetBuyMarketItem_SC* New() const final {
    return CreateMaybeMessage<MSG_RetBuyMarketItem_SC>(nullptr);
  }

  MSG_RetBuyMarketItem_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetBuyMarketItem_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetBuyMarketItem_SC& from);
  void MergeFrom(const MSG_RetBuyMarketItem_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetBuyMarketItem_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_RetBuyMarketItem_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrcodeFieldNumber = 1,
  };
  // optional uint32 errcode = 1;
  bool has_errcode() const;
  private:
  bool _internal_has_errcode() const;
  public:
  void clear_errcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode() const;
  void set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errcode() const;
  void _internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:market.MSG_RetBuyMarketItem_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errcode_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class SelledItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.SelledItem) */ {
 public:
  SelledItem();
  virtual ~SelledItem();

  SelledItem(const SelledItem& from);
  SelledItem(SelledItem&& from) noexcept
    : SelledItem() {
    *this = ::std::move(from);
  }

  inline SelledItem& operator=(const SelledItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline SelledItem& operator=(SelledItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SelledItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SelledItem* internal_default_instance() {
    return reinterpret_cast<const SelledItem*>(
               &_SelledItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SelledItem& a, SelledItem& b) {
    a.Swap(&b);
  }
  inline void Swap(SelledItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SelledItem* New() const final {
    return CreateMaybeMessage<SelledItem>(nullptr);
  }

  SelledItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SelledItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SelledItem& from);
  void MergeFrom(const SelledItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SelledItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.SelledItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
    kSelltimeFieldNumber = 2,
  };
  // optional .Obj.t_Object item = 1;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  const ::Obj::t_Object& item() const;
  ::Obj::t_Object* release_item();
  ::Obj::t_Object* mutable_item();
  void set_allocated_item(::Obj::t_Object* item);
  private:
  const ::Obj::t_Object& _internal_item() const;
  ::Obj::t_Object* _internal_mutable_item();
  public:

  // optional uint32 selltime = 2;
  bool has_selltime() const;
  private:
  bool _internal_has_selltime() const;
  public:
  void clear_selltime();
  ::PROTOBUF_NAMESPACE_ID::uint32 selltime() const;
  void set_selltime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_selltime() const;
  void _internal_set_selltime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:market.SelledItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::Obj::t_Object* item_;
  ::PROTOBUF_NAMESPACE_ID::uint32 selltime_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_UserSelledItemList_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_UserSelledItemList_CSC) */ {
 public:
  MSG_UserSelledItemList_CSC();
  virtual ~MSG_UserSelledItemList_CSC();

  MSG_UserSelledItemList_CSC(const MSG_UserSelledItemList_CSC& from);
  MSG_UserSelledItemList_CSC(MSG_UserSelledItemList_CSC&& from) noexcept
    : MSG_UserSelledItemList_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_UserSelledItemList_CSC& operator=(const MSG_UserSelledItemList_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_UserSelledItemList_CSC& operator=(MSG_UserSelledItemList_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_UserSelledItemList_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_UserSelledItemList_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_UserSelledItemList_CSC*>(
               &_MSG_UserSelledItemList_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_UserSelledItemList_CSC& a, MSG_UserSelledItemList_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_UserSelledItemList_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_UserSelledItemList_CSC* New() const final {
    return CreateMaybeMessage<MSG_UserSelledItemList_CSC>(nullptr);
  }

  MSG_UserSelledItemList_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_UserSelledItemList_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_UserSelledItemList_CSC& from);
  void MergeFrom(const MSG_UserSelledItemList_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_UserSelledItemList_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_UserSelledItemList_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjsFieldNumber = 1,
  };
  // repeated .market.SelledItem objs = 1;
  int objs_size() const;
  private:
  int _internal_objs_size() const;
  public:
  void clear_objs();
  ::market::SelledItem* mutable_objs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::SelledItem >*
      mutable_objs();
  private:
  const ::market::SelledItem& _internal_objs(int index) const;
  ::market::SelledItem* _internal_add_objs();
  public:
  const ::market::SelledItem& objs(int index) const;
  ::market::SelledItem* add_objs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::SelledItem >&
      objs() const;

  // @@protoc_insertion_point(class_scope:market.MSG_UserSelledItemList_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::SelledItem > objs_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqBuySelledItem_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_ReqBuySelledItem_CS) */ {
 public:
  MSG_ReqBuySelledItem_CS();
  virtual ~MSG_ReqBuySelledItem_CS();

  MSG_ReqBuySelledItem_CS(const MSG_ReqBuySelledItem_CS& from);
  MSG_ReqBuySelledItem_CS(MSG_ReqBuySelledItem_CS&& from) noexcept
    : MSG_ReqBuySelledItem_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqBuySelledItem_CS& operator=(const MSG_ReqBuySelledItem_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqBuySelledItem_CS& operator=(MSG_ReqBuySelledItem_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqBuySelledItem_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqBuySelledItem_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqBuySelledItem_CS*>(
               &_MSG_ReqBuySelledItem_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_ReqBuySelledItem_CS& a, MSG_ReqBuySelledItem_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqBuySelledItem_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqBuySelledItem_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqBuySelledItem_CS>(nullptr);
  }

  MSG_ReqBuySelledItem_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqBuySelledItem_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqBuySelledItem_CS& from);
  void MergeFrom(const MSG_ReqBuySelledItem_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqBuySelledItem_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_ReqBuySelledItem_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
  };
  // optional uint32 index = 1;
  bool has_index() const;
  private:
  bool _internal_has_index() const;
  public:
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:market.MSG_ReqBuySelledItem_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetBuySelledItem_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_RetBuySelledItem_SC) */ {
 public:
  MSG_RetBuySelledItem_SC();
  virtual ~MSG_RetBuySelledItem_SC();

  MSG_RetBuySelledItem_SC(const MSG_RetBuySelledItem_SC& from);
  MSG_RetBuySelledItem_SC(MSG_RetBuySelledItem_SC&& from) noexcept
    : MSG_RetBuySelledItem_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetBuySelledItem_SC& operator=(const MSG_RetBuySelledItem_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetBuySelledItem_SC& operator=(MSG_RetBuySelledItem_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetBuySelledItem_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetBuySelledItem_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetBuySelledItem_SC*>(
               &_MSG_RetBuySelledItem_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_RetBuySelledItem_SC& a, MSG_RetBuySelledItem_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetBuySelledItem_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetBuySelledItem_SC* New() const final {
    return CreateMaybeMessage<MSG_RetBuySelledItem_SC>(nullptr);
  }

  MSG_RetBuySelledItem_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetBuySelledItem_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetBuySelledItem_SC& from);
  void MergeFrom(const MSG_RetBuySelledItem_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetBuySelledItem_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_RetBuySelledItem_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:market.MSG_RetBuySelledItem_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_ReqSellItem_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_ReqSellItem_CS) */ {
 public:
  MSG_ReqSellItem_CS();
  virtual ~MSG_ReqSellItem_CS();

  MSG_ReqSellItem_CS(const MSG_ReqSellItem_CS& from);
  MSG_ReqSellItem_CS(MSG_ReqSellItem_CS&& from) noexcept
    : MSG_ReqSellItem_CS() {
    *this = ::std::move(from);
  }

  inline MSG_ReqSellItem_CS& operator=(const MSG_ReqSellItem_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ReqSellItem_CS& operator=(MSG_ReqSellItem_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ReqSellItem_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ReqSellItem_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_ReqSellItem_CS*>(
               &_MSG_ReqSellItem_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MSG_ReqSellItem_CS& a, MSG_ReqSellItem_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ReqSellItem_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ReqSellItem_CS* New() const final {
    return CreateMaybeMessage<MSG_ReqSellItem_CS>(nullptr);
  }

  MSG_ReqSellItem_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ReqSellItem_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ReqSellItem_CS& from);
  void MergeFrom(const MSG_ReqSellItem_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ReqSellItem_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_ReqSellItem_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kThisidFieldNumber = 1,
  };
  // optional string thisid = 1;
  bool has_thisid() const;
  private:
  bool _internal_has_thisid() const;
  public:
  void clear_thisid();
  const std::string& thisid() const;
  void set_thisid(const std::string& value);
  void set_thisid(std::string&& value);
  void set_thisid(const char* value);
  void set_thisid(const char* value, size_t size);
  std::string* mutable_thisid();
  std::string* release_thisid();
  void set_allocated_thisid(std::string* thisid);
  private:
  const std::string& _internal_thisid() const;
  void _internal_set_thisid(const std::string& value);
  std::string* _internal_mutable_thisid();
  public:

  // @@protoc_insertion_point(class_scope:market.MSG_ReqSellItem_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thisid_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_RetSellItem_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_RetSellItem_SC) */ {
 public:
  MSG_RetSellItem_SC();
  virtual ~MSG_RetSellItem_SC();

  MSG_RetSellItem_SC(const MSG_RetSellItem_SC& from);
  MSG_RetSellItem_SC(MSG_RetSellItem_SC&& from) noexcept
    : MSG_RetSellItem_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RetSellItem_SC& operator=(const MSG_RetSellItem_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RetSellItem_SC& operator=(MSG_RetSellItem_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RetSellItem_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RetSellItem_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RetSellItem_SC*>(
               &_MSG_RetSellItem_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_RetSellItem_SC& a, MSG_RetSellItem_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RetSellItem_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RetSellItem_SC* New() const final {
    return CreateMaybeMessage<MSG_RetSellItem_SC>(nullptr);
  }

  MSG_RetSellItem_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RetSellItem_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RetSellItem_SC& from);
  void MergeFrom(const MSG_RetSellItem_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RetSellItem_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_RetSellItem_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
  };
  // optional uint32 retcode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:market.MSG_RetSellItem_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 retcode_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_ExchangeRatio_CSC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_ExchangeRatio_CSC) */ {
 public:
  MSG_ExchangeRatio_CSC();
  virtual ~MSG_ExchangeRatio_CSC();

  MSG_ExchangeRatio_CSC(const MSG_ExchangeRatio_CSC& from);
  MSG_ExchangeRatio_CSC(MSG_ExchangeRatio_CSC&& from) noexcept
    : MSG_ExchangeRatio_CSC() {
    *this = ::std::move(from);
  }

  inline MSG_ExchangeRatio_CSC& operator=(const MSG_ExchangeRatio_CSC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_ExchangeRatio_CSC& operator=(MSG_ExchangeRatio_CSC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_ExchangeRatio_CSC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_ExchangeRatio_CSC* internal_default_instance() {
    return reinterpret_cast<const MSG_ExchangeRatio_CSC*>(
               &_MSG_ExchangeRatio_CSC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_ExchangeRatio_CSC& a, MSG_ExchangeRatio_CSC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_ExchangeRatio_CSC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_ExchangeRatio_CSC* New() const final {
    return CreateMaybeMessage<MSG_ExchangeRatio_CSC>(nullptr);
  }

  MSG_ExchangeRatio_CSC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_ExchangeRatio_CSC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_ExchangeRatio_CSC& from);
  void MergeFrom(const MSG_ExchangeRatio_CSC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_ExchangeRatio_CSC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_ExchangeRatio_CSC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTone2NationsFieldNumber = 1,
  };
  // optional uint32 tone2nations = 1;
  bool has_tone2nations() const;
  private:
  bool _internal_has_tone2nations() const;
  public:
  void clear_tone2nations();
  ::PROTOBUF_NAMESPACE_ID::uint32 tone2nations() const;
  void set_tone2nations(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tone2nations() const;
  void _internal_set_tone2nations(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:market.MSG_ExchangeRatio_CSC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tone2nations_;
  friend struct ::TableStruct_market_2eproto;
};
// -------------------------------------------------------------------

class MSG_RefreshMarketItem_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:market.MSG_RefreshMarketItem_SC) */ {
 public:
  MSG_RefreshMarketItem_SC();
  virtual ~MSG_RefreshMarketItem_SC();

  MSG_RefreshMarketItem_SC(const MSG_RefreshMarketItem_SC& from);
  MSG_RefreshMarketItem_SC(MSG_RefreshMarketItem_SC&& from) noexcept
    : MSG_RefreshMarketItem_SC() {
    *this = ::std::move(from);
  }

  inline MSG_RefreshMarketItem_SC& operator=(const MSG_RefreshMarketItem_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_RefreshMarketItem_SC& operator=(MSG_RefreshMarketItem_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_RefreshMarketItem_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_RefreshMarketItem_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_RefreshMarketItem_SC*>(
               &_MSG_RefreshMarketItem_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_RefreshMarketItem_SC& a, MSG_RefreshMarketItem_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_RefreshMarketItem_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_RefreshMarketItem_SC* New() const final {
    return CreateMaybeMessage<MSG_RefreshMarketItem_SC>(nullptr);
  }

  MSG_RefreshMarketItem_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_RefreshMarketItem_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_RefreshMarketItem_SC& from);
  void MergeFrom(const MSG_RefreshMarketItem_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_RefreshMarketItem_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "market.MSG_RefreshMarketItem_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_market_2eproto);
    return ::descriptor_table_market_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMarketidFieldNumber = 1,
    kIdFieldNumber = 2,
    kItemidFieldNumber = 3,
    kCurnumFieldNumber = 4,
    kMaxnumFieldNumber = 5,
  };
  // optional uint32 marketid = 1;
  bool has_marketid() const;
  private:
  bool _internal_has_marketid() const;
  public:
  void clear_marketid();
  ::PROTOBUF_NAMESPACE_ID::uint32 marketid() const;
  void set_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_marketid() const;
  void _internal_set_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 itemid = 3;
  bool has_itemid() const;
  private:
  bool _internal_has_itemid() const;
  public:
  void clear_itemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 itemid() const;
  void set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_itemid() const;
  void _internal_set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 curnum = 4;
  bool has_curnum() const;
  private:
  bool _internal_has_curnum() const;
  public:
  void clear_curnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 curnum() const;
  void set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curnum() const;
  void _internal_set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxnum = 5;
  bool has_maxnum() const;
  private:
  bool _internal_has_maxnum() const;
  public:
  void clear_maxnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxnum() const;
  void set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxnum() const;
  void _internal_set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:market.MSG_RefreshMarketItem_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 marketid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 itemid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxnum_;
  friend struct ::TableStruct_market_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Item

// optional uint32 id = 1;
inline bool Item::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Item::has_id() const {
  return _internal_has_id();
}
inline void Item::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::id() const {
  // @@protoc_insertion_point(field_get:market.Item.id)
  return _internal_id();
}
inline void Item::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void Item::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:market.Item.id)
}

// optional uint32 itemid = 2;
inline bool Item::_internal_has_itemid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Item::has_itemid() const {
  return _internal_has_itemid();
}
inline void Item::clear_itemid() {
  itemid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_itemid() const {
  return itemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::itemid() const {
  // @@protoc_insertion_point(field_get:market.Item.itemid)
  return _internal_itemid();
}
inline void Item::_internal_set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  itemid_ = value;
}
inline void Item::set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_itemid(value);
  // @@protoc_insertion_point(field_set:market.Item.itemid)
}

// optional uint32 discount = 3;
inline bool Item::_internal_has_discount() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Item::has_discount() const {
  return _internal_has_discount();
}
inline void Item::clear_discount() {
  discount_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_discount() const {
  return discount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::discount() const {
  // @@protoc_insertion_point(field_get:market.Item.discount)
  return _internal_discount();
}
inline void Item::_internal_set_discount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  discount_ = value;
}
inline void Item::set_discount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_discount(value);
  // @@protoc_insertion_point(field_set:market.Item.discount)
}

// optional uint32 curnum = 4;
inline bool Item::_internal_has_curnum() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool Item::has_curnum() const {
  return _internal_has_curnum();
}
inline void Item::clear_curnum() {
  curnum_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_curnum() const {
  return curnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::curnum() const {
  // @@protoc_insertion_point(field_get:market.Item.curnum)
  return _internal_curnum();
}
inline void Item::_internal_set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  curnum_ = value;
}
inline void Item::set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curnum(value);
  // @@protoc_insertion_point(field_set:market.Item.curnum)
}

// optional uint32 maxnum = 5;
inline bool Item::_internal_has_maxnum() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool Item::has_maxnum() const {
  return _internal_has_maxnum();
}
inline void Item::clear_maxnum() {
  maxnum_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_maxnum() const {
  return maxnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::maxnum() const {
  // @@protoc_insertion_point(field_get:market.Item.maxnum)
  return _internal_maxnum();
}
inline void Item::_internal_set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  maxnum_ = value;
}
inline void Item::set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxnum(value);
  // @@protoc_insertion_point(field_set:market.Item.maxnum)
}

// optional uint32 costid = 6;
inline bool Item::_internal_has_costid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool Item::has_costid() const {
  return _internal_has_costid();
}
inline void Item::clear_costid() {
  costid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_costid() const {
  return costid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::costid() const {
  // @@protoc_insertion_point(field_get:market.Item.costid)
  return _internal_costid();
}
inline void Item::_internal_set_costid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  costid_ = value;
}
inline void Item::set_costid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_costid(value);
  // @@protoc_insertion_point(field_set:market.Item.costid)
}

// optional uint32 costnum = 7;
inline bool Item::_internal_has_costnum() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool Item::has_costnum() const {
  return _internal_has_costnum();
}
inline void Item::clear_costnum() {
  costnum_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_costnum() const {
  return costnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::costnum() const {
  // @@protoc_insertion_point(field_get:market.Item.costnum)
  return _internal_costnum();
}
inline void Item::_internal_set_costnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  costnum_ = value;
}
inline void Item::set_costnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_costnum(value);
  // @@protoc_insertion_point(field_set:market.Item.costnum)
}

// optional uint32 bind = 8;
inline bool Item::_internal_has_bind() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool Item::has_bind() const {
  return _internal_has_bind();
}
inline void Item::clear_bind() {
  bind_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_bind() const {
  return bind_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::bind() const {
  // @@protoc_insertion_point(field_get:market.Item.bind)
  return _internal_bind();
}
inline void Item::_internal_set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  bind_ = value;
}
inline void Item::set_bind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bind(value);
  // @@protoc_insertion_point(field_set:market.Item.bind)
}

// optional uint32 skillid = 9;
inline bool Item::_internal_has_skillid() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool Item::has_skillid() const {
  return _internal_has_skillid();
}
inline void Item::clear_skillid() {
  skillid_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_skillid() const {
  return skillid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::skillid() const {
  // @@protoc_insertion_point(field_get:market.Item.skillid)
  return _internal_skillid();
}
inline void Item::_internal_set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  skillid_ = value;
}
inline void Item::set_skillid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skillid(value);
  // @@protoc_insertion_point(field_set:market.Item.skillid)
}

// optional uint32 skilllv = 10;
inline bool Item::_internal_has_skilllv() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool Item::has_skilllv() const {
  return _internal_has_skilllv();
}
inline void Item::clear_skilllv() {
  skilllv_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_skilllv() const {
  return skilllv_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::skilllv() const {
  // @@protoc_insertion_point(field_get:market.Item.skilllv)
  return _internal_skilllv();
}
inline void Item::_internal_set_skilllv(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  skilllv_ = value;
}
inline void Item::set_skilllv(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skilllv(value);
  // @@protoc_insertion_point(field_set:market.Item.skilllv)
}

// -------------------------------------------------------------------

// OneMarket

// optional uint32 id = 1;
inline bool OneMarket::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool OneMarket::has_id() const {
  return _internal_has_id();
}
inline void OneMarket::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OneMarket::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OneMarket::id() const {
  // @@protoc_insertion_point(field_get:market.OneMarket.id)
  return _internal_id();
}
inline void OneMarket::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void OneMarket::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:market.OneMarket.id)
}

// optional .market.MarketType type = 2;
inline bool OneMarket::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool OneMarket::has_type() const {
  return _internal_has_type();
}
inline void OneMarket::clear_type() {
  type_ = 1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::market::MarketType OneMarket::_internal_type() const {
  return static_cast< ::market::MarketType >(type_);
}
inline ::market::MarketType OneMarket::type() const {
  // @@protoc_insertion_point(field_get:market.OneMarket.type)
  return _internal_type();
}
inline void OneMarket::_internal_set_type(::market::MarketType value) {
  assert(::market::MarketType_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  type_ = value;
}
inline void OneMarket::set_type(::market::MarketType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:market.OneMarket.type)
}

// repeated .market.Item itemlist = 3;
inline int OneMarket::_internal_itemlist_size() const {
  return itemlist_.size();
}
inline int OneMarket::itemlist_size() const {
  return _internal_itemlist_size();
}
inline void OneMarket::clear_itemlist() {
  itemlist_.Clear();
}
inline ::market::Item* OneMarket::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:market.OneMarket.itemlist)
  return itemlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::Item >*
OneMarket::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:market.OneMarket.itemlist)
  return &itemlist_;
}
inline const ::market::Item& OneMarket::_internal_itemlist(int index) const {
  return itemlist_.Get(index);
}
inline const ::market::Item& OneMarket::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:market.OneMarket.itemlist)
  return _internal_itemlist(index);
}
inline ::market::Item* OneMarket::_internal_add_itemlist() {
  return itemlist_.Add();
}
inline ::market::Item* OneMarket::add_itemlist() {
  // @@protoc_insertion_point(field_add:market.OneMarket.itemlist)
  return _internal_add_itemlist();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::Item >&
OneMarket::itemlist() const {
  // @@protoc_insertion_point(field_list:market.OneMarket.itemlist)
  return itemlist_;
}

// optional uint32 refreshtype = 4;
inline bool OneMarket::_internal_has_refreshtype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool OneMarket::has_refreshtype() const {
  return _internal_has_refreshtype();
}
inline void OneMarket::clear_refreshtype() {
  refreshtype_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OneMarket::_internal_refreshtype() const {
  return refreshtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OneMarket::refreshtype() const {
  // @@protoc_insertion_point(field_get:market.OneMarket.refreshtype)
  return _internal_refreshtype();
}
inline void OneMarket::_internal_set_refreshtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  refreshtype_ = value;
}
inline void OneMarket::set_refreshtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_refreshtype(value);
  // @@protoc_insertion_point(field_set:market.OneMarket.refreshtype)
}

// optional string refreshtime = 5;
inline bool OneMarket::_internal_has_refreshtime() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool OneMarket::has_refreshtime() const {
  return _internal_has_refreshtime();
}
inline void OneMarket::clear_refreshtime() {
  refreshtime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OneMarket::refreshtime() const {
  // @@protoc_insertion_point(field_get:market.OneMarket.refreshtime)
  return _internal_refreshtime();
}
inline void OneMarket::set_refreshtime(const std::string& value) {
  _internal_set_refreshtime(value);
  // @@protoc_insertion_point(field_set:market.OneMarket.refreshtime)
}
inline std::string* OneMarket::mutable_refreshtime() {
  // @@protoc_insertion_point(field_mutable:market.OneMarket.refreshtime)
  return _internal_mutable_refreshtime();
}
inline const std::string& OneMarket::_internal_refreshtime() const {
  return refreshtime_.GetNoArena();
}
inline void OneMarket::_internal_set_refreshtime(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  refreshtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void OneMarket::set_refreshtime(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  refreshtime_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:market.OneMarket.refreshtime)
}
inline void OneMarket::set_refreshtime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  refreshtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:market.OneMarket.refreshtime)
}
inline void OneMarket::set_refreshtime(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  refreshtime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:market.OneMarket.refreshtime)
}
inline std::string* OneMarket::_internal_mutable_refreshtime() {
  _has_bits_[0] |= 0x00000001u;
  return refreshtime_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OneMarket::release_refreshtime() {
  // @@protoc_insertion_point(field_release:market.OneMarket.refreshtime)
  if (!_internal_has_refreshtime()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return refreshtime_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void OneMarket::set_allocated_refreshtime(std::string* refreshtime) {
  if (refreshtime != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  refreshtime_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), refreshtime);
  // @@protoc_insertion_point(field_set_allocated:market.OneMarket.refreshtime)
}

// optional uint32 subtype = 6;
inline bool OneMarket::_internal_has_subtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool OneMarket::has_subtype() const {
  return _internal_has_subtype();
}
inline void OneMarket::clear_subtype() {
  subtype_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OneMarket::_internal_subtype() const {
  return subtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OneMarket::subtype() const {
  // @@protoc_insertion_point(field_get:market.OneMarket.subtype)
  return _internal_subtype();
}
inline void OneMarket::_internal_set_subtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  subtype_ = value;
}
inline void OneMarket::set_subtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subtype(value);
  // @@protoc_insertion_point(field_set:market.OneMarket.subtype)
}

// -------------------------------------------------------------------

// MSG_ReqMarketItemList_CS

// repeated uint32 marketid = 1;
inline int MSG_ReqMarketItemList_CS::_internal_marketid_size() const {
  return marketid_.size();
}
inline int MSG_ReqMarketItemList_CS::marketid_size() const {
  return _internal_marketid_size();
}
inline void MSG_ReqMarketItemList_CS::clear_marketid() {
  marketid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqMarketItemList_CS::_internal_marketid(int index) const {
  return marketid_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqMarketItemList_CS::marketid(int index) const {
  // @@protoc_insertion_point(field_get:market.MSG_ReqMarketItemList_CS.marketid)
  return _internal_marketid(index);
}
inline void MSG_ReqMarketItemList_CS::set_marketid(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  marketid_.Set(index, value);
  // @@protoc_insertion_point(field_set:market.MSG_ReqMarketItemList_CS.marketid)
}
inline void MSG_ReqMarketItemList_CS::_internal_add_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  marketid_.Add(value);
}
inline void MSG_ReqMarketItemList_CS::add_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_marketid(value);
  // @@protoc_insertion_point(field_add:market.MSG_ReqMarketItemList_CS.marketid)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_ReqMarketItemList_CS::_internal_marketid() const {
  return marketid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
MSG_ReqMarketItemList_CS::marketid() const {
  // @@protoc_insertion_point(field_list:market.MSG_ReqMarketItemList_CS.marketid)
  return _internal_marketid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_ReqMarketItemList_CS::_internal_mutable_marketid() {
  return &marketid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
MSG_ReqMarketItemList_CS::mutable_marketid() {
  // @@protoc_insertion_point(field_mutable_list:market.MSG_ReqMarketItemList_CS.marketid)
  return _internal_mutable_marketid();
}

// -------------------------------------------------------------------

// MSG_RetMarketItemList_SC

// repeated .market.OneMarket marketdetail = 1;
inline int MSG_RetMarketItemList_SC::_internal_marketdetail_size() const {
  return marketdetail_.size();
}
inline int MSG_RetMarketItemList_SC::marketdetail_size() const {
  return _internal_marketdetail_size();
}
inline void MSG_RetMarketItemList_SC::clear_marketdetail() {
  marketdetail_.Clear();
}
inline ::market::OneMarket* MSG_RetMarketItemList_SC::mutable_marketdetail(int index) {
  // @@protoc_insertion_point(field_mutable:market.MSG_RetMarketItemList_SC.marketdetail)
  return marketdetail_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::OneMarket >*
MSG_RetMarketItemList_SC::mutable_marketdetail() {
  // @@protoc_insertion_point(field_mutable_list:market.MSG_RetMarketItemList_SC.marketdetail)
  return &marketdetail_;
}
inline const ::market::OneMarket& MSG_RetMarketItemList_SC::_internal_marketdetail(int index) const {
  return marketdetail_.Get(index);
}
inline const ::market::OneMarket& MSG_RetMarketItemList_SC::marketdetail(int index) const {
  // @@protoc_insertion_point(field_get:market.MSG_RetMarketItemList_SC.marketdetail)
  return _internal_marketdetail(index);
}
inline ::market::OneMarket* MSG_RetMarketItemList_SC::_internal_add_marketdetail() {
  return marketdetail_.Add();
}
inline ::market::OneMarket* MSG_RetMarketItemList_SC::add_marketdetail() {
  // @@protoc_insertion_point(field_add:market.MSG_RetMarketItemList_SC.marketdetail)
  return _internal_add_marketdetail();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::OneMarket >&
MSG_RetMarketItemList_SC::marketdetail() const {
  // @@protoc_insertion_point(field_list:market.MSG_RetMarketItemList_SC.marketdetail)
  return marketdetail_;
}

// optional uint32 guildskilllv = 2;
inline bool MSG_RetMarketItemList_SC::_internal_has_guildskilllv() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetMarketItemList_SC::has_guildskilllv() const {
  return _internal_has_guildskilllv();
}
inline void MSG_RetMarketItemList_SC::clear_guildskilllv() {
  guildskilllv_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetMarketItemList_SC::_internal_guildskilllv() const {
  return guildskilllv_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetMarketItemList_SC::guildskilllv() const {
  // @@protoc_insertion_point(field_get:market.MSG_RetMarketItemList_SC.guildskilllv)
  return _internal_guildskilllv();
}
inline void MSG_RetMarketItemList_SC::_internal_set_guildskilllv(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guildskilllv_ = value;
}
inline void MSG_RetMarketItemList_SC::set_guildskilllv(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guildskilllv(value);
  // @@protoc_insertion_point(field_set:market.MSG_RetMarketItemList_SC.guildskilllv)
}

// -------------------------------------------------------------------

// MSG_ReqBuyMarketItem_CS

// optional uint32 marketid = 1;
inline bool MSG_ReqBuyMarketItem_CS::_internal_has_marketid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqBuyMarketItem_CS::has_marketid() const {
  return _internal_has_marketid();
}
inline void MSG_ReqBuyMarketItem_CS::clear_marketid() {
  marketid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyMarketItem_CS::_internal_marketid() const {
  return marketid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyMarketItem_CS::marketid() const {
  // @@protoc_insertion_point(field_get:market.MSG_ReqBuyMarketItem_CS.marketid)
  return _internal_marketid();
}
inline void MSG_ReqBuyMarketItem_CS::_internal_set_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  marketid_ = value;
}
inline void MSG_ReqBuyMarketItem_CS::set_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_marketid(value);
  // @@protoc_insertion_point(field_set:market.MSG_ReqBuyMarketItem_CS.marketid)
}

// optional uint32 id = 2;
inline bool MSG_ReqBuyMarketItem_CS::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_ReqBuyMarketItem_CS::has_id() const {
  return _internal_has_id();
}
inline void MSG_ReqBuyMarketItem_CS::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyMarketItem_CS::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyMarketItem_CS::id() const {
  // @@protoc_insertion_point(field_get:market.MSG_ReqBuyMarketItem_CS.id)
  return _internal_id();
}
inline void MSG_ReqBuyMarketItem_CS::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void MSG_ReqBuyMarketItem_CS::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:market.MSG_ReqBuyMarketItem_CS.id)
}

// optional uint32 itemid = 3;
inline bool MSG_ReqBuyMarketItem_CS::_internal_has_itemid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_ReqBuyMarketItem_CS::has_itemid() const {
  return _internal_has_itemid();
}
inline void MSG_ReqBuyMarketItem_CS::clear_itemid() {
  itemid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyMarketItem_CS::_internal_itemid() const {
  return itemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyMarketItem_CS::itemid() const {
  // @@protoc_insertion_point(field_get:market.MSG_ReqBuyMarketItem_CS.itemid)
  return _internal_itemid();
}
inline void MSG_ReqBuyMarketItem_CS::_internal_set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  itemid_ = value;
}
inline void MSG_ReqBuyMarketItem_CS::set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_itemid(value);
  // @@protoc_insertion_point(field_set:market.MSG_ReqBuyMarketItem_CS.itemid)
}

// optional uint32 itemnum = 4;
inline bool MSG_ReqBuyMarketItem_CS::_internal_has_itemnum() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_ReqBuyMarketItem_CS::has_itemnum() const {
  return _internal_has_itemnum();
}
inline void MSG_ReqBuyMarketItem_CS::clear_itemnum() {
  itemnum_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyMarketItem_CS::_internal_itemnum() const {
  return itemnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuyMarketItem_CS::itemnum() const {
  // @@protoc_insertion_point(field_get:market.MSG_ReqBuyMarketItem_CS.itemnum)
  return _internal_itemnum();
}
inline void MSG_ReqBuyMarketItem_CS::_internal_set_itemnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  itemnum_ = value;
}
inline void MSG_ReqBuyMarketItem_CS::set_itemnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_itemnum(value);
  // @@protoc_insertion_point(field_set:market.MSG_ReqBuyMarketItem_CS.itemnum)
}

// -------------------------------------------------------------------

// MSG_RetBuyMarketItem_SC

// optional uint32 errcode = 1;
inline bool MSG_RetBuyMarketItem_SC::_internal_has_errcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetBuyMarketItem_SC::has_errcode() const {
  return _internal_has_errcode();
}
inline void MSG_RetBuyMarketItem_SC::clear_errcode() {
  errcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetBuyMarketItem_SC::_internal_errcode() const {
  return errcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetBuyMarketItem_SC::errcode() const {
  // @@protoc_insertion_point(field_get:market.MSG_RetBuyMarketItem_SC.errcode)
  return _internal_errcode();
}
inline void MSG_RetBuyMarketItem_SC::_internal_set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  errcode_ = value;
}
inline void MSG_RetBuyMarketItem_SC::set_errcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errcode(value);
  // @@protoc_insertion_point(field_set:market.MSG_RetBuyMarketItem_SC.errcode)
}

// -------------------------------------------------------------------

// SelledItem

// optional .Obj.t_Object item = 1;
inline bool SelledItem::_internal_has_item() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || item_ != nullptr);
  return value;
}
inline bool SelledItem::has_item() const {
  return _internal_has_item();
}
inline const ::Obj::t_Object& SelledItem::_internal_item() const {
  const ::Obj::t_Object* p = item_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Obj::t_Object*>(
      &::Obj::_t_Object_default_instance_);
}
inline const ::Obj::t_Object& SelledItem::item() const {
  // @@protoc_insertion_point(field_get:market.SelledItem.item)
  return _internal_item();
}
inline ::Obj::t_Object* SelledItem::release_item() {
  // @@protoc_insertion_point(field_release:market.SelledItem.item)
  _has_bits_[0] &= ~0x00000001u;
  ::Obj::t_Object* temp = item_;
  item_ = nullptr;
  return temp;
}
inline ::Obj::t_Object* SelledItem::_internal_mutable_item() {
  _has_bits_[0] |= 0x00000001u;
  if (item_ == nullptr) {
    auto* p = CreateMaybeMessage<::Obj::t_Object>(GetArenaNoVirtual());
    item_ = p;
  }
  return item_;
}
inline ::Obj::t_Object* SelledItem::mutable_item() {
  // @@protoc_insertion_point(field_mutable:market.SelledItem.item)
  return _internal_mutable_item();
}
inline void SelledItem::set_allocated_item(::Obj::t_Object* item) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(item_);
  }
  if (item) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      item = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:market.SelledItem.item)
}

// optional uint32 selltime = 2;
inline bool SelledItem::_internal_has_selltime() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SelledItem::has_selltime() const {
  return _internal_has_selltime();
}
inline void SelledItem::clear_selltime() {
  selltime_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelledItem::_internal_selltime() const {
  return selltime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SelledItem::selltime() const {
  // @@protoc_insertion_point(field_get:market.SelledItem.selltime)
  return _internal_selltime();
}
inline void SelledItem::_internal_set_selltime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  selltime_ = value;
}
inline void SelledItem::set_selltime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_selltime(value);
  // @@protoc_insertion_point(field_set:market.SelledItem.selltime)
}

// -------------------------------------------------------------------

// MSG_UserSelledItemList_CSC

// repeated .market.SelledItem objs = 1;
inline int MSG_UserSelledItemList_CSC::_internal_objs_size() const {
  return objs_.size();
}
inline int MSG_UserSelledItemList_CSC::objs_size() const {
  return _internal_objs_size();
}
inline void MSG_UserSelledItemList_CSC::clear_objs() {
  objs_.Clear();
}
inline ::market::SelledItem* MSG_UserSelledItemList_CSC::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:market.MSG_UserSelledItemList_CSC.objs)
  return objs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::SelledItem >*
MSG_UserSelledItemList_CSC::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:market.MSG_UserSelledItemList_CSC.objs)
  return &objs_;
}
inline const ::market::SelledItem& MSG_UserSelledItemList_CSC::_internal_objs(int index) const {
  return objs_.Get(index);
}
inline const ::market::SelledItem& MSG_UserSelledItemList_CSC::objs(int index) const {
  // @@protoc_insertion_point(field_get:market.MSG_UserSelledItemList_CSC.objs)
  return _internal_objs(index);
}
inline ::market::SelledItem* MSG_UserSelledItemList_CSC::_internal_add_objs() {
  return objs_.Add();
}
inline ::market::SelledItem* MSG_UserSelledItemList_CSC::add_objs() {
  // @@protoc_insertion_point(field_add:market.MSG_UserSelledItemList_CSC.objs)
  return _internal_add_objs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::market::SelledItem >&
MSG_UserSelledItemList_CSC::objs() const {
  // @@protoc_insertion_point(field_list:market.MSG_UserSelledItemList_CSC.objs)
  return objs_;
}

// -------------------------------------------------------------------

// MSG_ReqBuySelledItem_CS

// optional uint32 index = 1;
inline bool MSG_ReqBuySelledItem_CS::_internal_has_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqBuySelledItem_CS::has_index() const {
  return _internal_has_index();
}
inline void MSG_ReqBuySelledItem_CS::clear_index() {
  index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuySelledItem_CS::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ReqBuySelledItem_CS::index() const {
  // @@protoc_insertion_point(field_get:market.MSG_ReqBuySelledItem_CS.index)
  return _internal_index();
}
inline void MSG_ReqBuySelledItem_CS::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  index_ = value;
}
inline void MSG_ReqBuySelledItem_CS::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:market.MSG_ReqBuySelledItem_CS.index)
}

// -------------------------------------------------------------------

// MSG_RetBuySelledItem_SC

// optional uint32 retcode = 1;
inline bool MSG_RetBuySelledItem_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetBuySelledItem_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetBuySelledItem_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetBuySelledItem_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetBuySelledItem_SC::retcode() const {
  // @@protoc_insertion_point(field_get:market.MSG_RetBuySelledItem_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetBuySelledItem_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_RetBuySelledItem_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:market.MSG_RetBuySelledItem_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_ReqSellItem_CS

// optional string thisid = 1;
inline bool MSG_ReqSellItem_CS::_internal_has_thisid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ReqSellItem_CS::has_thisid() const {
  return _internal_has_thisid();
}
inline void MSG_ReqSellItem_CS::clear_thisid() {
  thisid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MSG_ReqSellItem_CS::thisid() const {
  // @@protoc_insertion_point(field_get:market.MSG_ReqSellItem_CS.thisid)
  return _internal_thisid();
}
inline void MSG_ReqSellItem_CS::set_thisid(const std::string& value) {
  _internal_set_thisid(value);
  // @@protoc_insertion_point(field_set:market.MSG_ReqSellItem_CS.thisid)
}
inline std::string* MSG_ReqSellItem_CS::mutable_thisid() {
  // @@protoc_insertion_point(field_mutable:market.MSG_ReqSellItem_CS.thisid)
  return _internal_mutable_thisid();
}
inline const std::string& MSG_ReqSellItem_CS::_internal_thisid() const {
  return thisid_.GetNoArena();
}
inline void MSG_ReqSellItem_CS::_internal_set_thisid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MSG_ReqSellItem_CS::set_thisid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:market.MSG_ReqSellItem_CS.thisid)
}
inline void MSG_ReqSellItem_CS::set_thisid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:market.MSG_ReqSellItem_CS.thisid)
}
inline void MSG_ReqSellItem_CS::set_thisid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  thisid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:market.MSG_ReqSellItem_CS.thisid)
}
inline std::string* MSG_ReqSellItem_CS::_internal_mutable_thisid() {
  _has_bits_[0] |= 0x00000001u;
  return thisid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MSG_ReqSellItem_CS::release_thisid() {
  // @@protoc_insertion_point(field_release:market.MSG_ReqSellItem_CS.thisid)
  if (!_internal_has_thisid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return thisid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MSG_ReqSellItem_CS::set_allocated_thisid(std::string* thisid) {
  if (thisid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  thisid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thisid);
  // @@protoc_insertion_point(field_set_allocated:market.MSG_ReqSellItem_CS.thisid)
}

// -------------------------------------------------------------------

// MSG_RetSellItem_SC

// optional uint32 retcode = 1;
inline bool MSG_RetSellItem_SC::_internal_has_retcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RetSellItem_SC::has_retcode() const {
  return _internal_has_retcode();
}
inline void MSG_RetSellItem_SC::clear_retcode() {
  retcode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSellItem_SC::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RetSellItem_SC::retcode() const {
  // @@protoc_insertion_point(field_get:market.MSG_RetSellItem_SC.retcode)
  return _internal_retcode();
}
inline void MSG_RetSellItem_SC::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  retcode_ = value;
}
inline void MSG_RetSellItem_SC::set_retcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:market.MSG_RetSellItem_SC.retcode)
}

// -------------------------------------------------------------------

// MSG_ExchangeRatio_CSC

// optional uint32 tone2nations = 1;
inline bool MSG_ExchangeRatio_CSC::_internal_has_tone2nations() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_ExchangeRatio_CSC::has_tone2nations() const {
  return _internal_has_tone2nations();
}
inline void MSG_ExchangeRatio_CSC::clear_tone2nations() {
  tone2nations_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ExchangeRatio_CSC::_internal_tone2nations() const {
  return tone2nations_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_ExchangeRatio_CSC::tone2nations() const {
  // @@protoc_insertion_point(field_get:market.MSG_ExchangeRatio_CSC.tone2nations)
  return _internal_tone2nations();
}
inline void MSG_ExchangeRatio_CSC::_internal_set_tone2nations(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  tone2nations_ = value;
}
inline void MSG_ExchangeRatio_CSC::set_tone2nations(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tone2nations(value);
  // @@protoc_insertion_point(field_set:market.MSG_ExchangeRatio_CSC.tone2nations)
}

// -------------------------------------------------------------------

// MSG_RefreshMarketItem_SC

// optional uint32 marketid = 1;
inline bool MSG_RefreshMarketItem_SC::_internal_has_marketid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_RefreshMarketItem_SC::has_marketid() const {
  return _internal_has_marketid();
}
inline void MSG_RefreshMarketItem_SC::clear_marketid() {
  marketid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RefreshMarketItem_SC::_internal_marketid() const {
  return marketid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RefreshMarketItem_SC::marketid() const {
  // @@protoc_insertion_point(field_get:market.MSG_RefreshMarketItem_SC.marketid)
  return _internal_marketid();
}
inline void MSG_RefreshMarketItem_SC::_internal_set_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  marketid_ = value;
}
inline void MSG_RefreshMarketItem_SC::set_marketid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_marketid(value);
  // @@protoc_insertion_point(field_set:market.MSG_RefreshMarketItem_SC.marketid)
}

// optional uint32 id = 2;
inline bool MSG_RefreshMarketItem_SC::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_RefreshMarketItem_SC::has_id() const {
  return _internal_has_id();
}
inline void MSG_RefreshMarketItem_SC::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RefreshMarketItem_SC::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RefreshMarketItem_SC::id() const {
  // @@protoc_insertion_point(field_get:market.MSG_RefreshMarketItem_SC.id)
  return _internal_id();
}
inline void MSG_RefreshMarketItem_SC::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void MSG_RefreshMarketItem_SC::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:market.MSG_RefreshMarketItem_SC.id)
}

// optional uint32 itemid = 3;
inline bool MSG_RefreshMarketItem_SC::_internal_has_itemid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_RefreshMarketItem_SC::has_itemid() const {
  return _internal_has_itemid();
}
inline void MSG_RefreshMarketItem_SC::clear_itemid() {
  itemid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RefreshMarketItem_SC::_internal_itemid() const {
  return itemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RefreshMarketItem_SC::itemid() const {
  // @@protoc_insertion_point(field_get:market.MSG_RefreshMarketItem_SC.itemid)
  return _internal_itemid();
}
inline void MSG_RefreshMarketItem_SC::_internal_set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  itemid_ = value;
}
inline void MSG_RefreshMarketItem_SC::set_itemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_itemid(value);
  // @@protoc_insertion_point(field_set:market.MSG_RefreshMarketItem_SC.itemid)
}

// optional uint32 curnum = 4;
inline bool MSG_RefreshMarketItem_SC::_internal_has_curnum() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_RefreshMarketItem_SC::has_curnum() const {
  return _internal_has_curnum();
}
inline void MSG_RefreshMarketItem_SC::clear_curnum() {
  curnum_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RefreshMarketItem_SC::_internal_curnum() const {
  return curnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RefreshMarketItem_SC::curnum() const {
  // @@protoc_insertion_point(field_get:market.MSG_RefreshMarketItem_SC.curnum)
  return _internal_curnum();
}
inline void MSG_RefreshMarketItem_SC::_internal_set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  curnum_ = value;
}
inline void MSG_RefreshMarketItem_SC::set_curnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curnum(value);
  // @@protoc_insertion_point(field_set:market.MSG_RefreshMarketItem_SC.curnum)
}

// optional uint32 maxnum = 5;
inline bool MSG_RefreshMarketItem_SC::_internal_has_maxnum() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_RefreshMarketItem_SC::has_maxnum() const {
  return _internal_has_maxnum();
}
inline void MSG_RefreshMarketItem_SC::clear_maxnum() {
  maxnum_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RefreshMarketItem_SC::_internal_maxnum() const {
  return maxnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_RefreshMarketItem_SC::maxnum() const {
  // @@protoc_insertion_point(field_get:market.MSG_RefreshMarketItem_SC.maxnum)
  return _internal_maxnum();
}
inline void MSG_RefreshMarketItem_SC::_internal_set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  maxnum_ = value;
}
inline void MSG_RefreshMarketItem_SC::set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxnum(value);
  // @@protoc_insertion_point(field_set:market.MSG_RefreshMarketItem_SC.maxnum)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace market

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::market::MarketType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::market::MarketType>() {
  return ::market::MarketType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_market_2eproto
