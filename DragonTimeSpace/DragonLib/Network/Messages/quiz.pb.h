// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quiz.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_quiz_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_quiz_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_quiz_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_quiz_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_quiz_2eproto;
namespace quiz {
class AnswerRewards;
class AnswerRewardsDefaultTypeInternal;
extern AnswerRewardsDefaultTypeInternal _AnswerRewards_default_instance_;
class Day7ActivityInfo;
class Day7ActivityInfoDefaultTypeInternal;
extern Day7ActivityInfoDefaultTypeInternal _Day7ActivityInfo_default_instance_;
class MSG_AnswerQuestion_CS;
class MSG_AnswerQuestion_CSDefaultTypeInternal;
extern MSG_AnswerQuestion_CSDefaultTypeInternal _MSG_AnswerQuestion_CS_default_instance_;
class MSG_Req_QuizPrivilege_CS;
class MSG_Req_QuizPrivilege_CSDefaultTypeInternal;
extern MSG_Req_QuizPrivilege_CSDefaultTypeInternal _MSG_Req_QuizPrivilege_CS_default_instance_;
class MSG_Req_RecvDay7ActivityPrize_CS;
class MSG_Req_RecvDay7ActivityPrize_CSDefaultTypeInternal;
extern MSG_Req_RecvDay7ActivityPrize_CSDefaultTypeInternal _MSG_Req_RecvDay7ActivityPrize_CS_default_instance_;
class MSG_Req_RecvSeekActivityPrize_CS;
class MSG_Req_RecvSeekActivityPrize_CSDefaultTypeInternal;
extern MSG_Req_RecvSeekActivityPrize_CSDefaultTypeInternal _MSG_Req_RecvSeekActivityPrize_CS_default_instance_;
class MSG_Req_SeekActivityInfo_CS;
class MSG_Req_SeekActivityInfo_CSDefaultTypeInternal;
extern MSG_Req_SeekActivityInfo_CSDefaultTypeInternal _MSG_Req_SeekActivityInfo_CS_default_instance_;
class MSG_Req_StartQuiz_CS;
class MSG_Req_StartQuiz_CSDefaultTypeInternal;
extern MSG_Req_StartQuiz_CSDefaultTypeInternal _MSG_Req_StartQuiz_CS_default_instance_;
class MSG_Req_UseHelpItem_CS;
class MSG_Req_UseHelpItem_CSDefaultTypeInternal;
extern MSG_Req_UseHelpItem_CSDefaultTypeInternal _MSG_Req_UseHelpItem_CS_default_instance_;
class MSG_Ret_Day7ActivityInfo_SC;
class MSG_Ret_Day7ActivityInfo_SCDefaultTypeInternal;
extern MSG_Ret_Day7ActivityInfo_SCDefaultTypeInternal _MSG_Ret_Day7ActivityInfo_SC_default_instance_;
class MSG_Ret_HelpItemEffect_SC;
class MSG_Ret_HelpItemEffect_SCDefaultTypeInternal;
extern MSG_Ret_HelpItemEffect_SCDefaultTypeInternal _MSG_Ret_HelpItemEffect_SC_default_instance_;
class MSG_Ret_QuestionResult_SC;
class MSG_Ret_QuestionResult_SCDefaultTypeInternal;
extern MSG_Ret_QuestionResult_SCDefaultTypeInternal _MSG_Ret_QuestionResult_SC_default_instance_;
class MSG_Ret_QuestionsData_SC;
class MSG_Ret_QuestionsData_SCDefaultTypeInternal;
extern MSG_Ret_QuestionsData_SCDefaultTypeInternal _MSG_Ret_QuestionsData_SC_default_instance_;
class MSG_Ret_QuizPrivilege_SC;
class MSG_Ret_QuizPrivilege_SCDefaultTypeInternal;
extern MSG_Ret_QuizPrivilege_SCDefaultTypeInternal _MSG_Ret_QuizPrivilege_SC_default_instance_;
class MSG_Ret_SeekActivityInfo_SC;
class MSG_Ret_SeekActivityInfo_SCDefaultTypeInternal;
extern MSG_Ret_SeekActivityInfo_SCDefaultTypeInternal _MSG_Ret_SeekActivityInfo_SC_default_instance_;
class QuizData;
class QuizDataDefaultTypeInternal;
extern QuizDataDefaultTypeInternal _QuizData_default_instance_;
}  // namespace quiz
PROTOBUF_NAMESPACE_OPEN
template<> ::quiz::AnswerRewards* Arena::CreateMaybeMessage<::quiz::AnswerRewards>(Arena*);
template<> ::quiz::Day7ActivityInfo* Arena::CreateMaybeMessage<::quiz::Day7ActivityInfo>(Arena*);
template<> ::quiz::MSG_AnswerQuestion_CS* Arena::CreateMaybeMessage<::quiz::MSG_AnswerQuestion_CS>(Arena*);
template<> ::quiz::MSG_Req_QuizPrivilege_CS* Arena::CreateMaybeMessage<::quiz::MSG_Req_QuizPrivilege_CS>(Arena*);
template<> ::quiz::MSG_Req_RecvDay7ActivityPrize_CS* Arena::CreateMaybeMessage<::quiz::MSG_Req_RecvDay7ActivityPrize_CS>(Arena*);
template<> ::quiz::MSG_Req_RecvSeekActivityPrize_CS* Arena::CreateMaybeMessage<::quiz::MSG_Req_RecvSeekActivityPrize_CS>(Arena*);
template<> ::quiz::MSG_Req_SeekActivityInfo_CS* Arena::CreateMaybeMessage<::quiz::MSG_Req_SeekActivityInfo_CS>(Arena*);
template<> ::quiz::MSG_Req_StartQuiz_CS* Arena::CreateMaybeMessage<::quiz::MSG_Req_StartQuiz_CS>(Arena*);
template<> ::quiz::MSG_Req_UseHelpItem_CS* Arena::CreateMaybeMessage<::quiz::MSG_Req_UseHelpItem_CS>(Arena*);
template<> ::quiz::MSG_Ret_Day7ActivityInfo_SC* Arena::CreateMaybeMessage<::quiz::MSG_Ret_Day7ActivityInfo_SC>(Arena*);
template<> ::quiz::MSG_Ret_HelpItemEffect_SC* Arena::CreateMaybeMessage<::quiz::MSG_Ret_HelpItemEffect_SC>(Arena*);
template<> ::quiz::MSG_Ret_QuestionResult_SC* Arena::CreateMaybeMessage<::quiz::MSG_Ret_QuestionResult_SC>(Arena*);
template<> ::quiz::MSG_Ret_QuestionsData_SC* Arena::CreateMaybeMessage<::quiz::MSG_Ret_QuestionsData_SC>(Arena*);
template<> ::quiz::MSG_Ret_QuizPrivilege_SC* Arena::CreateMaybeMessage<::quiz::MSG_Ret_QuizPrivilege_SC>(Arena*);
template<> ::quiz::MSG_Ret_SeekActivityInfo_SC* Arena::CreateMaybeMessage<::quiz::MSG_Ret_SeekActivityInfo_SC>(Arena*);
template<> ::quiz::QuizData* Arena::CreateMaybeMessage<::quiz::QuizData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace quiz {

enum QuizStage : int {
  QUIZ_STAGE_NULL = 0,
  QUIZ_STAGE_FIRST = 1,
  QUIZ_STAGE_SECOND = 2,
  QUIZ_STAGE_FINAL = 3,
  QUIZ_STAGE_MAX = 4
};
bool QuizStage_IsValid(int value);
constexpr QuizStage QuizStage_MIN = QUIZ_STAGE_NULL;
constexpr QuizStage QuizStage_MAX = QUIZ_STAGE_MAX;
constexpr int QuizStage_ARRAYSIZE = QuizStage_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* QuizStage_descriptor();
template<typename T>
inline const std::string& QuizStage_Name(T enum_t_value) {
  static_assert(::std::is_same<T, QuizStage>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function QuizStage_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    QuizStage_descriptor(), enum_t_value);
}
inline bool QuizStage_Parse(
    const std::string& name, QuizStage* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<QuizStage>(
    QuizStage_descriptor(), name, value);
}
enum ActivityState : int {
  ACTIVITY_STATE_UNOPEN = 0,
  ACTIVITY_STATE_OPEN = 1,
  ACTIVITY_STATE_COMPLETE = 2,
  ACTIVITY_STATE_GOTPRIZE = 3,
  ACTIVITY_STATE_UNCOMPLETE = 4
};
bool ActivityState_IsValid(int value);
constexpr ActivityState ActivityState_MIN = ACTIVITY_STATE_UNOPEN;
constexpr ActivityState ActivityState_MAX = ACTIVITY_STATE_UNCOMPLETE;
constexpr int ActivityState_ARRAYSIZE = ActivityState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ActivityState_descriptor();
template<typename T>
inline const std::string& ActivityState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ActivityState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ActivityState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ActivityState_descriptor(), enum_t_value);
}
inline bool ActivityState_Parse(
    const std::string& name, ActivityState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ActivityState>(
    ActivityState_descriptor(), name, value);
}
// ===================================================================

class QuizData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.QuizData) */ {
 public:
  QuizData();
  virtual ~QuizData();

  QuizData(const QuizData& from);
  QuizData(QuizData&& from) noexcept
    : QuizData() {
    *this = ::std::move(from);
  }

  inline QuizData& operator=(const QuizData& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuizData& operator=(QuizData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QuizData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuizData* internal_default_instance() {
    return reinterpret_cast<const QuizData*>(
               &_QuizData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QuizData& a, QuizData& b) {
    a.Swap(&b);
  }
  inline void Swap(QuizData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QuizData* New() const final {
    return CreateMaybeMessage<QuizData>(nullptr);
  }

  QuizData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QuizData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QuizData& from);
  void MergeFrom(const QuizData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuizData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.QuizData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuestionnumFieldNumber = 1,
    kQuestionidFieldNumber = 2,
    kCorrectidFieldNumber = 3,
  };
  // optional uint32 questionnum = 1;
  bool has_questionnum() const;
  private:
  bool _internal_has_questionnum() const;
  public:
  void clear_questionnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 questionnum() const;
  void set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questionnum() const;
  void _internal_set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 questionid = 2;
  bool has_questionid() const;
  private:
  bool _internal_has_questionid() const;
  public:
  void clear_questionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 questionid() const;
  void set_questionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questionid() const;
  void _internal_set_questionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 correctid = 3;
  bool has_correctid() const;
  private:
  bool _internal_has_correctid() const;
  public:
  void clear_correctid();
  ::PROTOBUF_NAMESPACE_ID::uint32 correctid() const;
  void set_correctid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_correctid() const;
  void _internal_set_correctid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.QuizData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questionnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questionid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 correctid_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class AnswerRewards :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.AnswerRewards) */ {
 public:
  AnswerRewards();
  virtual ~AnswerRewards();

  AnswerRewards(const AnswerRewards& from);
  AnswerRewards(AnswerRewards&& from) noexcept
    : AnswerRewards() {
    *this = ::std::move(from);
  }

  inline AnswerRewards& operator=(const AnswerRewards& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnswerRewards& operator=(AnswerRewards&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AnswerRewards& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnswerRewards* internal_default_instance() {
    return reinterpret_cast<const AnswerRewards*>(
               &_AnswerRewards_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AnswerRewards& a, AnswerRewards& b) {
    a.Swap(&b);
  }
  inline void Swap(AnswerRewards* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AnswerRewards* New() const final {
    return CreateMaybeMessage<AnswerRewards>(nullptr);
  }

  AnswerRewards* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AnswerRewards>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AnswerRewards& from);
  void MergeFrom(const AnswerRewards& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnswerRewards* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.AnswerRewards";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjidFieldNumber = 1,
    kObjnumFieldNumber = 2,
  };
  // optional uint32 objid = 1;
  bool has_objid() const;
  private:
  bool _internal_has_objid() const;
  public:
  void clear_objid();
  ::PROTOBUF_NAMESPACE_ID::uint32 objid() const;
  void set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_objid() const;
  void _internal_set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 objnum = 2;
  bool has_objnum() const;
  private:
  bool _internal_has_objnum() const;
  public:
  void clear_objnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 objnum() const;
  void set_objnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_objnum() const;
  void _internal_set_objnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.AnswerRewards)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 objid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 objnum_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_QuizPrivilege_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Req_QuizPrivilege_CS) */ {
 public:
  MSG_Req_QuizPrivilege_CS();
  virtual ~MSG_Req_QuizPrivilege_CS();

  MSG_Req_QuizPrivilege_CS(const MSG_Req_QuizPrivilege_CS& from);
  MSG_Req_QuizPrivilege_CS(MSG_Req_QuizPrivilege_CS&& from) noexcept
    : MSG_Req_QuizPrivilege_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_QuizPrivilege_CS& operator=(const MSG_Req_QuizPrivilege_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_QuizPrivilege_CS& operator=(MSG_Req_QuizPrivilege_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_QuizPrivilege_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_QuizPrivilege_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_QuizPrivilege_CS*>(
               &_MSG_Req_QuizPrivilege_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MSG_Req_QuizPrivilege_CS& a, MSG_Req_QuizPrivilege_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_QuizPrivilege_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_QuizPrivilege_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_QuizPrivilege_CS>(nullptr);
  }

  MSG_Req_QuizPrivilege_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_QuizPrivilege_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_QuizPrivilege_CS& from);
  void MergeFrom(const MSG_Req_QuizPrivilege_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_QuizPrivilege_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Req_QuizPrivilege_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnlycheckFieldNumber = 1,
  };
  // optional bool onlycheck = 1;
  bool has_onlycheck() const;
  private:
  bool _internal_has_onlycheck() const;
  public:
  void clear_onlycheck();
  bool onlycheck() const;
  void set_onlycheck(bool value);
  private:
  bool _internal_onlycheck() const;
  void _internal_set_onlycheck(bool value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.MSG_Req_QuizPrivilege_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool onlycheck_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_QuizPrivilege_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Ret_QuizPrivilege_SC) */ {
 public:
  MSG_Ret_QuizPrivilege_SC();
  virtual ~MSG_Ret_QuizPrivilege_SC();

  MSG_Ret_QuizPrivilege_SC(const MSG_Ret_QuizPrivilege_SC& from);
  MSG_Ret_QuizPrivilege_SC(MSG_Ret_QuizPrivilege_SC&& from) noexcept
    : MSG_Ret_QuizPrivilege_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_QuizPrivilege_SC& operator=(const MSG_Ret_QuizPrivilege_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_QuizPrivilege_SC& operator=(MSG_Ret_QuizPrivilege_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_QuizPrivilege_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_QuizPrivilege_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_QuizPrivilege_SC*>(
               &_MSG_Ret_QuizPrivilege_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MSG_Ret_QuizPrivilege_SC& a, MSG_Ret_QuizPrivilege_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_QuizPrivilege_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_QuizPrivilege_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_QuizPrivilege_SC>(nullptr);
  }

  MSG_Ret_QuizPrivilege_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_QuizPrivilege_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_QuizPrivilege_SC& from);
  void MergeFrom(const MSG_Ret_QuizPrivilege_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_QuizPrivilege_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Ret_QuizPrivilege_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStageidFieldNumber = 1,
  };
  // optional .quiz.QuizStage stageid = 1;
  bool has_stageid() const;
  private:
  bool _internal_has_stageid() const;
  public:
  void clear_stageid();
  ::quiz::QuizStage stageid() const;
  void set_stageid(::quiz::QuizStage value);
  private:
  ::quiz::QuizStage _internal_stageid() const;
  void _internal_set_stageid(::quiz::QuizStage value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.MSG_Ret_QuizPrivilege_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int stageid_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_StartQuiz_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Req_StartQuiz_CS) */ {
 public:
  MSG_Req_StartQuiz_CS();
  virtual ~MSG_Req_StartQuiz_CS();

  MSG_Req_StartQuiz_CS(const MSG_Req_StartQuiz_CS& from);
  MSG_Req_StartQuiz_CS(MSG_Req_StartQuiz_CS&& from) noexcept
    : MSG_Req_StartQuiz_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_StartQuiz_CS& operator=(const MSG_Req_StartQuiz_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_StartQuiz_CS& operator=(MSG_Req_StartQuiz_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_StartQuiz_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_StartQuiz_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_StartQuiz_CS*>(
               &_MSG_Req_StartQuiz_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MSG_Req_StartQuiz_CS& a, MSG_Req_StartQuiz_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_StartQuiz_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_StartQuiz_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_StartQuiz_CS>(nullptr);
  }

  MSG_Req_StartQuiz_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_StartQuiz_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_StartQuiz_CS& from);
  void MergeFrom(const MSG_Req_StartQuiz_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_StartQuiz_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Req_StartQuiz_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStageidFieldNumber = 1,
  };
  // optional .quiz.QuizStage stageid = 1;
  bool has_stageid() const;
  private:
  bool _internal_has_stageid() const;
  public:
  void clear_stageid();
  ::quiz::QuizStage stageid() const;
  void set_stageid(::quiz::QuizStage value);
  private:
  ::quiz::QuizStage _internal_stageid() const;
  void _internal_set_stageid(::quiz::QuizStage value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.MSG_Req_StartQuiz_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int stageid_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_QuestionsData_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Ret_QuestionsData_SC) */ {
 public:
  MSG_Ret_QuestionsData_SC();
  virtual ~MSG_Ret_QuestionsData_SC();

  MSG_Ret_QuestionsData_SC(const MSG_Ret_QuestionsData_SC& from);
  MSG_Ret_QuestionsData_SC(MSG_Ret_QuestionsData_SC&& from) noexcept
    : MSG_Ret_QuestionsData_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_QuestionsData_SC& operator=(const MSG_Ret_QuestionsData_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_QuestionsData_SC& operator=(MSG_Ret_QuestionsData_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_QuestionsData_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_QuestionsData_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_QuestionsData_SC*>(
               &_MSG_Ret_QuestionsData_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MSG_Ret_QuestionsData_SC& a, MSG_Ret_QuestionsData_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_QuestionsData_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_QuestionsData_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_QuestionsData_SC>(nullptr);
  }

  MSG_Ret_QuestionsData_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_QuestionsData_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_QuestionsData_SC& from);
  void MergeFrom(const MSG_Ret_QuestionsData_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_QuestionsData_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Ret_QuestionsData_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuizdatasFieldNumber = 2,
    kStageidFieldNumber = 1,
    kCurquestionnumFieldNumber = 3,
    kCorrectnumFieldNumber = 4,
    kRemaintimeFieldNumber = 5,
    kErroridFieldNumber = 6,
  };
  // repeated .quiz.QuizData quizdatas = 2;
  int quizdatas_size() const;
  private:
  int _internal_quizdatas_size() const;
  public:
  void clear_quizdatas();
  ::quiz::QuizData* mutable_quizdatas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::QuizData >*
      mutable_quizdatas();
  private:
  const ::quiz::QuizData& _internal_quizdatas(int index) const;
  ::quiz::QuizData* _internal_add_quizdatas();
  public:
  const ::quiz::QuizData& quizdatas(int index) const;
  ::quiz::QuizData* add_quizdatas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::QuizData >&
      quizdatas() const;

  // optional .quiz.QuizStage stageid = 1;
  bool has_stageid() const;
  private:
  bool _internal_has_stageid() const;
  public:
  void clear_stageid();
  ::quiz::QuizStage stageid() const;
  void set_stageid(::quiz::QuizStage value);
  private:
  ::quiz::QuizStage _internal_stageid() const;
  void _internal_set_stageid(::quiz::QuizStage value);
  public:

  // optional uint32 curquestionnum = 3;
  bool has_curquestionnum() const;
  private:
  bool _internal_has_curquestionnum() const;
  public:
  void clear_curquestionnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 curquestionnum() const;
  void set_curquestionnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_curquestionnum() const;
  void _internal_set_curquestionnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 correctnum = 4;
  bool has_correctnum() const;
  private:
  bool _internal_has_correctnum() const;
  public:
  void clear_correctnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 correctnum() const;
  void set_correctnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_correctnum() const;
  void _internal_set_correctnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 remaintime = 5;
  bool has_remaintime() const;
  private:
  bool _internal_has_remaintime() const;
  public:
  void clear_remaintime();
  ::PROTOBUF_NAMESPACE_ID::uint32 remaintime() const;
  void set_remaintime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_remaintime() const;
  void _internal_set_remaintime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 errorid = 6;
  bool has_errorid() const;
  private:
  bool _internal_has_errorid() const;
  public:
  void clear_errorid();
  ::PROTOBUF_NAMESPACE_ID::uint32 errorid() const;
  void set_errorid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_errorid() const;
  void _internal_set_errorid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.MSG_Ret_QuestionsData_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::QuizData > quizdatas_;
  int stageid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 curquestionnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 correctnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 remaintime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errorid_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_AnswerQuestion_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_AnswerQuestion_CS) */ {
 public:
  MSG_AnswerQuestion_CS();
  virtual ~MSG_AnswerQuestion_CS();

  MSG_AnswerQuestion_CS(const MSG_AnswerQuestion_CS& from);
  MSG_AnswerQuestion_CS(MSG_AnswerQuestion_CS&& from) noexcept
    : MSG_AnswerQuestion_CS() {
    *this = ::std::move(from);
  }

  inline MSG_AnswerQuestion_CS& operator=(const MSG_AnswerQuestion_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_AnswerQuestion_CS& operator=(MSG_AnswerQuestion_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_AnswerQuestion_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_AnswerQuestion_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_AnswerQuestion_CS*>(
               &_MSG_AnswerQuestion_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MSG_AnswerQuestion_CS& a, MSG_AnswerQuestion_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_AnswerQuestion_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_AnswerQuestion_CS* New() const final {
    return CreateMaybeMessage<MSG_AnswerQuestion_CS>(nullptr);
  }

  MSG_AnswerQuestion_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_AnswerQuestion_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_AnswerQuestion_CS& from);
  void MergeFrom(const MSG_AnswerQuestion_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_AnswerQuestion_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_AnswerQuestion_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuizdataFieldNumber = 2,
    kStageidFieldNumber = 1,
  };
  // optional .quiz.QuizData quizdata = 2;
  bool has_quizdata() const;
  private:
  bool _internal_has_quizdata() const;
  public:
  void clear_quizdata();
  const ::quiz::QuizData& quizdata() const;
  ::quiz::QuizData* release_quizdata();
  ::quiz::QuizData* mutable_quizdata();
  void set_allocated_quizdata(::quiz::QuizData* quizdata);
  private:
  const ::quiz::QuizData& _internal_quizdata() const;
  ::quiz::QuizData* _internal_mutable_quizdata();
  public:

  // optional .quiz.QuizStage stageid = 1;
  bool has_stageid() const;
  private:
  bool _internal_has_stageid() const;
  public:
  void clear_stageid();
  ::quiz::QuizStage stageid() const;
  void set_stageid(::quiz::QuizStage value);
  private:
  ::quiz::QuizStage _internal_stageid() const;
  void _internal_set_stageid(::quiz::QuizStage value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.MSG_AnswerQuestion_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::quiz::QuizData* quizdata_;
  int stageid_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_QuestionResult_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Ret_QuestionResult_SC) */ {
 public:
  MSG_Ret_QuestionResult_SC();
  virtual ~MSG_Ret_QuestionResult_SC();

  MSG_Ret_QuestionResult_SC(const MSG_Ret_QuestionResult_SC& from);
  MSG_Ret_QuestionResult_SC(MSG_Ret_QuestionResult_SC&& from) noexcept
    : MSG_Ret_QuestionResult_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_QuestionResult_SC& operator=(const MSG_Ret_QuestionResult_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_QuestionResult_SC& operator=(MSG_Ret_QuestionResult_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_QuestionResult_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_QuestionResult_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_QuestionResult_SC*>(
               &_MSG_Ret_QuestionResult_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MSG_Ret_QuestionResult_SC& a, MSG_Ret_QuestionResult_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_QuestionResult_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_QuestionResult_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_QuestionResult_SC>(nullptr);
  }

  MSG_Ret_QuestionResult_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_QuestionResult_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_QuestionResult_SC& from);
  void MergeFrom(const MSG_Ret_QuestionResult_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_QuestionResult_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Ret_QuestionResult_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRewardsFieldNumber = 3,
    kQuizdataFieldNumber = 2,
    kStageidFieldNumber = 1,
    kResultFieldNumber = 4,
  };
  // repeated .quiz.AnswerRewards rewards = 3;
  int rewards_size() const;
  private:
  int _internal_rewards_size() const;
  public:
  void clear_rewards();
  ::quiz::AnswerRewards* mutable_rewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::AnswerRewards >*
      mutable_rewards();
  private:
  const ::quiz::AnswerRewards& _internal_rewards(int index) const;
  ::quiz::AnswerRewards* _internal_add_rewards();
  public:
  const ::quiz::AnswerRewards& rewards(int index) const;
  ::quiz::AnswerRewards* add_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::AnswerRewards >&
      rewards() const;

  // optional .quiz.QuizData quizdata = 2;
  bool has_quizdata() const;
  private:
  bool _internal_has_quizdata() const;
  public:
  void clear_quizdata();
  const ::quiz::QuizData& quizdata() const;
  ::quiz::QuizData* release_quizdata();
  ::quiz::QuizData* mutable_quizdata();
  void set_allocated_quizdata(::quiz::QuizData* quizdata);
  private:
  const ::quiz::QuizData& _internal_quizdata() const;
  ::quiz::QuizData* _internal_mutable_quizdata();
  public:

  // optional .quiz.QuizStage stageid = 1;
  bool has_stageid() const;
  private:
  bool _internal_has_stageid() const;
  public:
  void clear_stageid();
  ::quiz::QuizStage stageid() const;
  void set_stageid(::quiz::QuizStage value);
  private:
  ::quiz::QuizStage _internal_stageid() const;
  void _internal_set_stageid(::quiz::QuizStage value);
  public:

  // optional bool result = 4;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.MSG_Ret_QuestionResult_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::AnswerRewards > rewards_;
  ::quiz::QuizData* quizdata_;
  int stageid_;
  bool result_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_UseHelpItem_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Req_UseHelpItem_CS) */ {
 public:
  MSG_Req_UseHelpItem_CS();
  virtual ~MSG_Req_UseHelpItem_CS();

  MSG_Req_UseHelpItem_CS(const MSG_Req_UseHelpItem_CS& from);
  MSG_Req_UseHelpItem_CS(MSG_Req_UseHelpItem_CS&& from) noexcept
    : MSG_Req_UseHelpItem_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_UseHelpItem_CS& operator=(const MSG_Req_UseHelpItem_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_UseHelpItem_CS& operator=(MSG_Req_UseHelpItem_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_UseHelpItem_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_UseHelpItem_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_UseHelpItem_CS*>(
               &_MSG_Req_UseHelpItem_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MSG_Req_UseHelpItem_CS& a, MSG_Req_UseHelpItem_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_UseHelpItem_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_UseHelpItem_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_UseHelpItem_CS>(nullptr);
  }

  MSG_Req_UseHelpItem_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_UseHelpItem_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_UseHelpItem_CS& from);
  void MergeFrom(const MSG_Req_UseHelpItem_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_UseHelpItem_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Req_UseHelpItem_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStageidFieldNumber = 1,
    kObjidFieldNumber = 2,
    kQuestionnumFieldNumber = 3,
  };
  // optional .quiz.QuizStage stageid = 1;
  bool has_stageid() const;
  private:
  bool _internal_has_stageid() const;
  public:
  void clear_stageid();
  ::quiz::QuizStage stageid() const;
  void set_stageid(::quiz::QuizStage value);
  private:
  ::quiz::QuizStage _internal_stageid() const;
  void _internal_set_stageid(::quiz::QuizStage value);
  public:

  // optional uint32 objid = 2;
  bool has_objid() const;
  private:
  bool _internal_has_objid() const;
  public:
  void clear_objid();
  ::PROTOBUF_NAMESPACE_ID::uint32 objid() const;
  void set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_objid() const;
  void _internal_set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 questionnum = 3;
  bool has_questionnum() const;
  private:
  bool _internal_has_questionnum() const;
  public:
  void clear_questionnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 questionnum() const;
  void set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questionnum() const;
  void _internal_set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.MSG_Req_UseHelpItem_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int stageid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 objid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questionnum_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_HelpItemEffect_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Ret_HelpItemEffect_SC) */ {
 public:
  MSG_Ret_HelpItemEffect_SC();
  virtual ~MSG_Ret_HelpItemEffect_SC();

  MSG_Ret_HelpItemEffect_SC(const MSG_Ret_HelpItemEffect_SC& from);
  MSG_Ret_HelpItemEffect_SC(MSG_Ret_HelpItemEffect_SC&& from) noexcept
    : MSG_Ret_HelpItemEffect_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_HelpItemEffect_SC& operator=(const MSG_Ret_HelpItemEffect_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_HelpItemEffect_SC& operator=(MSG_Ret_HelpItemEffect_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_HelpItemEffect_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_HelpItemEffect_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_HelpItemEffect_SC*>(
               &_MSG_Ret_HelpItemEffect_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MSG_Ret_HelpItemEffect_SC& a, MSG_Ret_HelpItemEffect_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_HelpItemEffect_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_HelpItemEffect_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_HelpItemEffect_SC>(nullptr);
  }

  MSG_Ret_HelpItemEffect_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_HelpItemEffect_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_HelpItemEffect_SC& from);
  void MergeFrom(const MSG_Ret_HelpItemEffect_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_HelpItemEffect_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Ret_HelpItemEffect_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStageidFieldNumber = 1,
    kObjidFieldNumber = 2,
    kQuestionnumFieldNumber = 3,
    kEffectvalueFieldNumber = 4,
  };
  // optional .quiz.QuizStage stageid = 1;
  bool has_stageid() const;
  private:
  bool _internal_has_stageid() const;
  public:
  void clear_stageid();
  ::quiz::QuizStage stageid() const;
  void set_stageid(::quiz::QuizStage value);
  private:
  ::quiz::QuizStage _internal_stageid() const;
  void _internal_set_stageid(::quiz::QuizStage value);
  public:

  // optional uint32 objid = 2;
  bool has_objid() const;
  private:
  bool _internal_has_objid() const;
  public:
  void clear_objid();
  ::PROTOBUF_NAMESPACE_ID::uint32 objid() const;
  void set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_objid() const;
  void _internal_set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 questionnum = 3;
  bool has_questionnum() const;
  private:
  bool _internal_has_questionnum() const;
  public:
  void clear_questionnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 questionnum() const;
  void set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_questionnum() const;
  void _internal_set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 effectvalue = 4;
  bool has_effectvalue() const;
  private:
  bool _internal_has_effectvalue() const;
  public:
  void clear_effectvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 effectvalue() const;
  void set_effectvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_effectvalue() const;
  void _internal_set_effectvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.MSG_Ret_HelpItemEffect_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int stageid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 objid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 questionnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 effectvalue_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class Day7ActivityInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.Day7ActivityInfo) */ {
 public:
  Day7ActivityInfo();
  virtual ~Day7ActivityInfo();

  Day7ActivityInfo(const Day7ActivityInfo& from);
  Day7ActivityInfo(Day7ActivityInfo&& from) noexcept
    : Day7ActivityInfo() {
    *this = ::std::move(from);
  }

  inline Day7ActivityInfo& operator=(const Day7ActivityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Day7ActivityInfo& operator=(Day7ActivityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Day7ActivityInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Day7ActivityInfo* internal_default_instance() {
    return reinterpret_cast<const Day7ActivityInfo*>(
               &_Day7ActivityInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(Day7ActivityInfo& a, Day7ActivityInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(Day7ActivityInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Day7ActivityInfo* New() const final {
    return CreateMaybeMessage<Day7ActivityInfo>(nullptr);
  }

  Day7ActivityInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Day7ActivityInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Day7ActivityInfo& from);
  void MergeFrom(const Day7ActivityInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Day7ActivityInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.Day7ActivityInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDayidFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // optional uint32 dayid = 1;
  bool has_dayid() const;
  private:
  bool _internal_has_dayid() const;
  public:
  void clear_dayid();
  ::PROTOBUF_NAMESPACE_ID::uint32 dayid() const;
  void set_dayid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dayid() const;
  void _internal_set_dayid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .quiz.ActivityState state = 2;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::quiz::ActivityState state() const;
  void set_state(::quiz::ActivityState value);
  private:
  ::quiz::ActivityState _internal_state() const;
  void _internal_set_state(::quiz::ActivityState value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.Day7ActivityInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dayid_;
  int state_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_Day7ActivityInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Ret_Day7ActivityInfo_SC) */ {
 public:
  MSG_Ret_Day7ActivityInfo_SC();
  virtual ~MSG_Ret_Day7ActivityInfo_SC();

  MSG_Ret_Day7ActivityInfo_SC(const MSG_Ret_Day7ActivityInfo_SC& from);
  MSG_Ret_Day7ActivityInfo_SC(MSG_Ret_Day7ActivityInfo_SC&& from) noexcept
    : MSG_Ret_Day7ActivityInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_Day7ActivityInfo_SC& operator=(const MSG_Ret_Day7ActivityInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_Day7ActivityInfo_SC& operator=(MSG_Ret_Day7ActivityInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_Day7ActivityInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_Day7ActivityInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_Day7ActivityInfo_SC*>(
               &_MSG_Ret_Day7ActivityInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MSG_Ret_Day7ActivityInfo_SC& a, MSG_Ret_Day7ActivityInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_Day7ActivityInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_Day7ActivityInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_Day7ActivityInfo_SC>(nullptr);
  }

  MSG_Ret_Day7ActivityInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_Day7ActivityInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_Day7ActivityInfo_SC& from);
  void MergeFrom(const MSG_Ret_Day7ActivityInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_Day7ActivityInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Ret_Day7ActivityInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated .quiz.Day7ActivityInfo data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::quiz::Day7ActivityInfo* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::Day7ActivityInfo >*
      mutable_data();
  private:
  const ::quiz::Day7ActivityInfo& _internal_data(int index) const;
  ::quiz::Day7ActivityInfo* _internal_add_data();
  public:
  const ::quiz::Day7ActivityInfo& data(int index) const;
  ::quiz::Day7ActivityInfo* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::Day7ActivityInfo >&
      data() const;

  // @@protoc_insertion_point(class_scope:quiz.MSG_Ret_Day7ActivityInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::Day7ActivityInfo > data_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_RecvDay7ActivityPrize_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Req_RecvDay7ActivityPrize_CS) */ {
 public:
  MSG_Req_RecvDay7ActivityPrize_CS();
  virtual ~MSG_Req_RecvDay7ActivityPrize_CS();

  MSG_Req_RecvDay7ActivityPrize_CS(const MSG_Req_RecvDay7ActivityPrize_CS& from);
  MSG_Req_RecvDay7ActivityPrize_CS(MSG_Req_RecvDay7ActivityPrize_CS&& from) noexcept
    : MSG_Req_RecvDay7ActivityPrize_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_RecvDay7ActivityPrize_CS& operator=(const MSG_Req_RecvDay7ActivityPrize_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_RecvDay7ActivityPrize_CS& operator=(MSG_Req_RecvDay7ActivityPrize_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_RecvDay7ActivityPrize_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_RecvDay7ActivityPrize_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_RecvDay7ActivityPrize_CS*>(
               &_MSG_Req_RecvDay7ActivityPrize_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MSG_Req_RecvDay7ActivityPrize_CS& a, MSG_Req_RecvDay7ActivityPrize_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_RecvDay7ActivityPrize_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_RecvDay7ActivityPrize_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_RecvDay7ActivityPrize_CS>(nullptr);
  }

  MSG_Req_RecvDay7ActivityPrize_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_RecvDay7ActivityPrize_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_RecvDay7ActivityPrize_CS& from);
  void MergeFrom(const MSG_Req_RecvDay7ActivityPrize_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_RecvDay7ActivityPrize_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Req_RecvDay7ActivityPrize_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:quiz.MSG_Req_RecvDay7ActivityPrize_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_SeekActivityInfo_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Req_SeekActivityInfo_CS) */ {
 public:
  MSG_Req_SeekActivityInfo_CS();
  virtual ~MSG_Req_SeekActivityInfo_CS();

  MSG_Req_SeekActivityInfo_CS(const MSG_Req_SeekActivityInfo_CS& from);
  MSG_Req_SeekActivityInfo_CS(MSG_Req_SeekActivityInfo_CS&& from) noexcept
    : MSG_Req_SeekActivityInfo_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_SeekActivityInfo_CS& operator=(const MSG_Req_SeekActivityInfo_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_SeekActivityInfo_CS& operator=(MSG_Req_SeekActivityInfo_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_SeekActivityInfo_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_SeekActivityInfo_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_SeekActivityInfo_CS*>(
               &_MSG_Req_SeekActivityInfo_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MSG_Req_SeekActivityInfo_CS& a, MSG_Req_SeekActivityInfo_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_SeekActivityInfo_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_SeekActivityInfo_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_SeekActivityInfo_CS>(nullptr);
  }

  MSG_Req_SeekActivityInfo_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_SeekActivityInfo_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_SeekActivityInfo_CS& from);
  void MergeFrom(const MSG_Req_SeekActivityInfo_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_SeekActivityInfo_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Req_SeekActivityInfo_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:quiz.MSG_Req_SeekActivityInfo_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Ret_SeekActivityInfo_SC :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Ret_SeekActivityInfo_SC) */ {
 public:
  MSG_Ret_SeekActivityInfo_SC();
  virtual ~MSG_Ret_SeekActivityInfo_SC();

  MSG_Ret_SeekActivityInfo_SC(const MSG_Ret_SeekActivityInfo_SC& from);
  MSG_Ret_SeekActivityInfo_SC(MSG_Ret_SeekActivityInfo_SC&& from) noexcept
    : MSG_Ret_SeekActivityInfo_SC() {
    *this = ::std::move(from);
  }

  inline MSG_Ret_SeekActivityInfo_SC& operator=(const MSG_Ret_SeekActivityInfo_SC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Ret_SeekActivityInfo_SC& operator=(MSG_Ret_SeekActivityInfo_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Ret_SeekActivityInfo_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Ret_SeekActivityInfo_SC* internal_default_instance() {
    return reinterpret_cast<const MSG_Ret_SeekActivityInfo_SC*>(
               &_MSG_Ret_SeekActivityInfo_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MSG_Ret_SeekActivityInfo_SC& a, MSG_Ret_SeekActivityInfo_SC& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Ret_SeekActivityInfo_SC* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Ret_SeekActivityInfo_SC* New() const final {
    return CreateMaybeMessage<MSG_Ret_SeekActivityInfo_SC>(nullptr);
  }

  MSG_Ret_SeekActivityInfo_SC* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Ret_SeekActivityInfo_SC>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Ret_SeekActivityInfo_SC& from);
  void MergeFrom(const MSG_Ret_SeekActivityInfo_SC& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Ret_SeekActivityInfo_SC* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Ret_SeekActivityInfo_SC";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
    kIdFieldNumber = 2,
  };
  // optional .quiz.ActivityState state = 1;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::quiz::ActivityState state() const;
  void set_state(::quiz::ActivityState value);
  private:
  ::quiz::ActivityState _internal_state() const;
  void _internal_set_state(::quiz::ActivityState value);
  public:

  // optional uint32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.MSG_Ret_SeekActivityInfo_SC)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  friend struct ::TableStruct_quiz_2eproto;
};
// -------------------------------------------------------------------

class MSG_Req_RecvSeekActivityPrize_CS :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:quiz.MSG_Req_RecvSeekActivityPrize_CS) */ {
 public:
  MSG_Req_RecvSeekActivityPrize_CS();
  virtual ~MSG_Req_RecvSeekActivityPrize_CS();

  MSG_Req_RecvSeekActivityPrize_CS(const MSG_Req_RecvSeekActivityPrize_CS& from);
  MSG_Req_RecvSeekActivityPrize_CS(MSG_Req_RecvSeekActivityPrize_CS&& from) noexcept
    : MSG_Req_RecvSeekActivityPrize_CS() {
    *this = ::std::move(from);
  }

  inline MSG_Req_RecvSeekActivityPrize_CS& operator=(const MSG_Req_RecvSeekActivityPrize_CS& from) {
    CopyFrom(from);
    return *this;
  }
  inline MSG_Req_RecvSeekActivityPrize_CS& operator=(MSG_Req_RecvSeekActivityPrize_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MSG_Req_RecvSeekActivityPrize_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MSG_Req_RecvSeekActivityPrize_CS* internal_default_instance() {
    return reinterpret_cast<const MSG_Req_RecvSeekActivityPrize_CS*>(
               &_MSG_Req_RecvSeekActivityPrize_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MSG_Req_RecvSeekActivityPrize_CS& a, MSG_Req_RecvSeekActivityPrize_CS& b) {
    a.Swap(&b);
  }
  inline void Swap(MSG_Req_RecvSeekActivityPrize_CS* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MSG_Req_RecvSeekActivityPrize_CS* New() const final {
    return CreateMaybeMessage<MSG_Req_RecvSeekActivityPrize_CS>(nullptr);
  }

  MSG_Req_RecvSeekActivityPrize_CS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MSG_Req_RecvSeekActivityPrize_CS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MSG_Req_RecvSeekActivityPrize_CS& from);
  void MergeFrom(const MSG_Req_RecvSeekActivityPrize_CS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MSG_Req_RecvSeekActivityPrize_CS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "quiz.MSG_Req_RecvSeekActivityPrize_CS";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_quiz_2eproto);
    return ::descriptor_table_quiz_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:quiz.MSG_Req_RecvSeekActivityPrize_CS)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  friend struct ::TableStruct_quiz_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QuizData

// optional uint32 questionnum = 1;
inline bool QuizData::_internal_has_questionnum() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool QuizData::has_questionnum() const {
  return _internal_has_questionnum();
}
inline void QuizData::clear_questionnum() {
  questionnum_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QuizData::_internal_questionnum() const {
  return questionnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QuizData::questionnum() const {
  // @@protoc_insertion_point(field_get:quiz.QuizData.questionnum)
  return _internal_questionnum();
}
inline void QuizData::_internal_set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  questionnum_ = value;
}
inline void QuizData::set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questionnum(value);
  // @@protoc_insertion_point(field_set:quiz.QuizData.questionnum)
}

// optional uint32 questionid = 2;
inline bool QuizData::_internal_has_questionid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool QuizData::has_questionid() const {
  return _internal_has_questionid();
}
inline void QuizData::clear_questionid() {
  questionid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QuizData::_internal_questionid() const {
  return questionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QuizData::questionid() const {
  // @@protoc_insertion_point(field_get:quiz.QuizData.questionid)
  return _internal_questionid();
}
inline void QuizData::_internal_set_questionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  questionid_ = value;
}
inline void QuizData::set_questionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questionid(value);
  // @@protoc_insertion_point(field_set:quiz.QuizData.questionid)
}

// optional uint32 correctid = 3;
inline bool QuizData::_internal_has_correctid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool QuizData::has_correctid() const {
  return _internal_has_correctid();
}
inline void QuizData::clear_correctid() {
  correctid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QuizData::_internal_correctid() const {
  return correctid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QuizData::correctid() const {
  // @@protoc_insertion_point(field_get:quiz.QuizData.correctid)
  return _internal_correctid();
}
inline void QuizData::_internal_set_correctid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  correctid_ = value;
}
inline void QuizData::set_correctid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_correctid(value);
  // @@protoc_insertion_point(field_set:quiz.QuizData.correctid)
}

// -------------------------------------------------------------------

// AnswerRewards

// optional uint32 objid = 1;
inline bool AnswerRewards::_internal_has_objid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AnswerRewards::has_objid() const {
  return _internal_has_objid();
}
inline void AnswerRewards::clear_objid() {
  objid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnswerRewards::_internal_objid() const {
  return objid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnswerRewards::objid() const {
  // @@protoc_insertion_point(field_get:quiz.AnswerRewards.objid)
  return _internal_objid();
}
inline void AnswerRewards::_internal_set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  objid_ = value;
}
inline void AnswerRewards::set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_objid(value);
  // @@protoc_insertion_point(field_set:quiz.AnswerRewards.objid)
}

// optional uint32 objnum = 2;
inline bool AnswerRewards::_internal_has_objnum() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AnswerRewards::has_objnum() const {
  return _internal_has_objnum();
}
inline void AnswerRewards::clear_objnum() {
  objnum_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnswerRewards::_internal_objnum() const {
  return objnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnswerRewards::objnum() const {
  // @@protoc_insertion_point(field_get:quiz.AnswerRewards.objnum)
  return _internal_objnum();
}
inline void AnswerRewards::_internal_set_objnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  objnum_ = value;
}
inline void AnswerRewards::set_objnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_objnum(value);
  // @@protoc_insertion_point(field_set:quiz.AnswerRewards.objnum)
}

// -------------------------------------------------------------------

// MSG_Req_QuizPrivilege_CS

// optional bool onlycheck = 1;
inline bool MSG_Req_QuizPrivilege_CS::_internal_has_onlycheck() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_QuizPrivilege_CS::has_onlycheck() const {
  return _internal_has_onlycheck();
}
inline void MSG_Req_QuizPrivilege_CS::clear_onlycheck() {
  onlycheck_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool MSG_Req_QuizPrivilege_CS::_internal_onlycheck() const {
  return onlycheck_;
}
inline bool MSG_Req_QuizPrivilege_CS::onlycheck() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Req_QuizPrivilege_CS.onlycheck)
  return _internal_onlycheck();
}
inline void MSG_Req_QuizPrivilege_CS::_internal_set_onlycheck(bool value) {
  _has_bits_[0] |= 0x00000001u;
  onlycheck_ = value;
}
inline void MSG_Req_QuizPrivilege_CS::set_onlycheck(bool value) {
  _internal_set_onlycheck(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Req_QuizPrivilege_CS.onlycheck)
}

// -------------------------------------------------------------------

// MSG_Ret_QuizPrivilege_SC

// optional .quiz.QuizStage stageid = 1;
inline bool MSG_Ret_QuizPrivilege_SC::_internal_has_stageid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_QuizPrivilege_SC::has_stageid() const {
  return _internal_has_stageid();
}
inline void MSG_Ret_QuizPrivilege_SC::clear_stageid() {
  stageid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::quiz::QuizStage MSG_Ret_QuizPrivilege_SC::_internal_stageid() const {
  return static_cast< ::quiz::QuizStage >(stageid_);
}
inline ::quiz::QuizStage MSG_Ret_QuizPrivilege_SC::stageid() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuizPrivilege_SC.stageid)
  return _internal_stageid();
}
inline void MSG_Ret_QuizPrivilege_SC::_internal_set_stageid(::quiz::QuizStage value) {
  assert(::quiz::QuizStage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  stageid_ = value;
}
inline void MSG_Ret_QuizPrivilege_SC::set_stageid(::quiz::QuizStage value) {
  _internal_set_stageid(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_QuizPrivilege_SC.stageid)
}

// -------------------------------------------------------------------

// MSG_Req_StartQuiz_CS

// optional .quiz.QuizStage stageid = 1;
inline bool MSG_Req_StartQuiz_CS::_internal_has_stageid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_StartQuiz_CS::has_stageid() const {
  return _internal_has_stageid();
}
inline void MSG_Req_StartQuiz_CS::clear_stageid() {
  stageid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::quiz::QuizStage MSG_Req_StartQuiz_CS::_internal_stageid() const {
  return static_cast< ::quiz::QuizStage >(stageid_);
}
inline ::quiz::QuizStage MSG_Req_StartQuiz_CS::stageid() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Req_StartQuiz_CS.stageid)
  return _internal_stageid();
}
inline void MSG_Req_StartQuiz_CS::_internal_set_stageid(::quiz::QuizStage value) {
  assert(::quiz::QuizStage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  stageid_ = value;
}
inline void MSG_Req_StartQuiz_CS::set_stageid(::quiz::QuizStage value) {
  _internal_set_stageid(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Req_StartQuiz_CS.stageid)
}

// -------------------------------------------------------------------

// MSG_Ret_QuestionsData_SC

// optional .quiz.QuizStage stageid = 1;
inline bool MSG_Ret_QuestionsData_SC::_internal_has_stageid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_QuestionsData_SC::has_stageid() const {
  return _internal_has_stageid();
}
inline void MSG_Ret_QuestionsData_SC::clear_stageid() {
  stageid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::quiz::QuizStage MSG_Ret_QuestionsData_SC::_internal_stageid() const {
  return static_cast< ::quiz::QuizStage >(stageid_);
}
inline ::quiz::QuizStage MSG_Ret_QuestionsData_SC::stageid() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuestionsData_SC.stageid)
  return _internal_stageid();
}
inline void MSG_Ret_QuestionsData_SC::_internal_set_stageid(::quiz::QuizStage value) {
  assert(::quiz::QuizStage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  stageid_ = value;
}
inline void MSG_Ret_QuestionsData_SC::set_stageid(::quiz::QuizStage value) {
  _internal_set_stageid(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_QuestionsData_SC.stageid)
}

// repeated .quiz.QuizData quizdatas = 2;
inline int MSG_Ret_QuestionsData_SC::_internal_quizdatas_size() const {
  return quizdatas_.size();
}
inline int MSG_Ret_QuestionsData_SC::quizdatas_size() const {
  return _internal_quizdatas_size();
}
inline void MSG_Ret_QuestionsData_SC::clear_quizdatas() {
  quizdatas_.Clear();
}
inline ::quiz::QuizData* MSG_Ret_QuestionsData_SC::mutable_quizdatas(int index) {
  // @@protoc_insertion_point(field_mutable:quiz.MSG_Ret_QuestionsData_SC.quizdatas)
  return quizdatas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::QuizData >*
MSG_Ret_QuestionsData_SC::mutable_quizdatas() {
  // @@protoc_insertion_point(field_mutable_list:quiz.MSG_Ret_QuestionsData_SC.quizdatas)
  return &quizdatas_;
}
inline const ::quiz::QuizData& MSG_Ret_QuestionsData_SC::_internal_quizdatas(int index) const {
  return quizdatas_.Get(index);
}
inline const ::quiz::QuizData& MSG_Ret_QuestionsData_SC::quizdatas(int index) const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuestionsData_SC.quizdatas)
  return _internal_quizdatas(index);
}
inline ::quiz::QuizData* MSG_Ret_QuestionsData_SC::_internal_add_quizdatas() {
  return quizdatas_.Add();
}
inline ::quiz::QuizData* MSG_Ret_QuestionsData_SC::add_quizdatas() {
  // @@protoc_insertion_point(field_add:quiz.MSG_Ret_QuestionsData_SC.quizdatas)
  return _internal_add_quizdatas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::QuizData >&
MSG_Ret_QuestionsData_SC::quizdatas() const {
  // @@protoc_insertion_point(field_list:quiz.MSG_Ret_QuestionsData_SC.quizdatas)
  return quizdatas_;
}

// optional uint32 curquestionnum = 3;
inline bool MSG_Ret_QuestionsData_SC::_internal_has_curquestionnum() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_QuestionsData_SC::has_curquestionnum() const {
  return _internal_has_curquestionnum();
}
inline void MSG_Ret_QuestionsData_SC::clear_curquestionnum() {
  curquestionnum_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestionsData_SC::_internal_curquestionnum() const {
  return curquestionnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestionsData_SC::curquestionnum() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuestionsData_SC.curquestionnum)
  return _internal_curquestionnum();
}
inline void MSG_Ret_QuestionsData_SC::_internal_set_curquestionnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  curquestionnum_ = value;
}
inline void MSG_Ret_QuestionsData_SC::set_curquestionnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_curquestionnum(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_QuestionsData_SC.curquestionnum)
}

// optional uint32 correctnum = 4;
inline bool MSG_Ret_QuestionsData_SC::_internal_has_correctnum() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_QuestionsData_SC::has_correctnum() const {
  return _internal_has_correctnum();
}
inline void MSG_Ret_QuestionsData_SC::clear_correctnum() {
  correctnum_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestionsData_SC::_internal_correctnum() const {
  return correctnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestionsData_SC::correctnum() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuestionsData_SC.correctnum)
  return _internal_correctnum();
}
inline void MSG_Ret_QuestionsData_SC::_internal_set_correctnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  correctnum_ = value;
}
inline void MSG_Ret_QuestionsData_SC::set_correctnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_correctnum(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_QuestionsData_SC.correctnum)
}

// optional uint32 remaintime = 5;
inline bool MSG_Ret_QuestionsData_SC::_internal_has_remaintime() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_QuestionsData_SC::has_remaintime() const {
  return _internal_has_remaintime();
}
inline void MSG_Ret_QuestionsData_SC::clear_remaintime() {
  remaintime_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestionsData_SC::_internal_remaintime() const {
  return remaintime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestionsData_SC::remaintime() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuestionsData_SC.remaintime)
  return _internal_remaintime();
}
inline void MSG_Ret_QuestionsData_SC::_internal_set_remaintime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  remaintime_ = value;
}
inline void MSG_Ret_QuestionsData_SC::set_remaintime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_remaintime(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_QuestionsData_SC.remaintime)
}

// optional uint32 errorid = 6;
inline bool MSG_Ret_QuestionsData_SC::_internal_has_errorid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool MSG_Ret_QuestionsData_SC::has_errorid() const {
  return _internal_has_errorid();
}
inline void MSG_Ret_QuestionsData_SC::clear_errorid() {
  errorid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestionsData_SC::_internal_errorid() const {
  return errorid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_QuestionsData_SC::errorid() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuestionsData_SC.errorid)
  return _internal_errorid();
}
inline void MSG_Ret_QuestionsData_SC::_internal_set_errorid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  errorid_ = value;
}
inline void MSG_Ret_QuestionsData_SC::set_errorid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_errorid(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_QuestionsData_SC.errorid)
}

// -------------------------------------------------------------------

// MSG_AnswerQuestion_CS

// optional .quiz.QuizStage stageid = 1;
inline bool MSG_AnswerQuestion_CS::_internal_has_stageid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_AnswerQuestion_CS::has_stageid() const {
  return _internal_has_stageid();
}
inline void MSG_AnswerQuestion_CS::clear_stageid() {
  stageid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::quiz::QuizStage MSG_AnswerQuestion_CS::_internal_stageid() const {
  return static_cast< ::quiz::QuizStage >(stageid_);
}
inline ::quiz::QuizStage MSG_AnswerQuestion_CS::stageid() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_AnswerQuestion_CS.stageid)
  return _internal_stageid();
}
inline void MSG_AnswerQuestion_CS::_internal_set_stageid(::quiz::QuizStage value) {
  assert(::quiz::QuizStage_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  stageid_ = value;
}
inline void MSG_AnswerQuestion_CS::set_stageid(::quiz::QuizStage value) {
  _internal_set_stageid(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_AnswerQuestion_CS.stageid)
}

// optional .quiz.QuizData quizdata = 2;
inline bool MSG_AnswerQuestion_CS::_internal_has_quizdata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || quizdata_ != nullptr);
  return value;
}
inline bool MSG_AnswerQuestion_CS::has_quizdata() const {
  return _internal_has_quizdata();
}
inline void MSG_AnswerQuestion_CS::clear_quizdata() {
  if (quizdata_ != nullptr) quizdata_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::quiz::QuizData& MSG_AnswerQuestion_CS::_internal_quizdata() const {
  const ::quiz::QuizData* p = quizdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::quiz::QuizData*>(
      &::quiz::_QuizData_default_instance_);
}
inline const ::quiz::QuizData& MSG_AnswerQuestion_CS::quizdata() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_AnswerQuestion_CS.quizdata)
  return _internal_quizdata();
}
inline ::quiz::QuizData* MSG_AnswerQuestion_CS::release_quizdata() {
  // @@protoc_insertion_point(field_release:quiz.MSG_AnswerQuestion_CS.quizdata)
  _has_bits_[0] &= ~0x00000001u;
  ::quiz::QuizData* temp = quizdata_;
  quizdata_ = nullptr;
  return temp;
}
inline ::quiz::QuizData* MSG_AnswerQuestion_CS::_internal_mutable_quizdata() {
  _has_bits_[0] |= 0x00000001u;
  if (quizdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::quiz::QuizData>(GetArenaNoVirtual());
    quizdata_ = p;
  }
  return quizdata_;
}
inline ::quiz::QuizData* MSG_AnswerQuestion_CS::mutable_quizdata() {
  // @@protoc_insertion_point(field_mutable:quiz.MSG_AnswerQuestion_CS.quizdata)
  return _internal_mutable_quizdata();
}
inline void MSG_AnswerQuestion_CS::set_allocated_quizdata(::quiz::QuizData* quizdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete quizdata_;
  }
  if (quizdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      quizdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quizdata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  quizdata_ = quizdata;
  // @@protoc_insertion_point(field_set_allocated:quiz.MSG_AnswerQuestion_CS.quizdata)
}

// -------------------------------------------------------------------

// MSG_Ret_QuestionResult_SC

// optional .quiz.QuizStage stageid = 1;
inline bool MSG_Ret_QuestionResult_SC::_internal_has_stageid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_QuestionResult_SC::has_stageid() const {
  return _internal_has_stageid();
}
inline void MSG_Ret_QuestionResult_SC::clear_stageid() {
  stageid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::quiz::QuizStage MSG_Ret_QuestionResult_SC::_internal_stageid() const {
  return static_cast< ::quiz::QuizStage >(stageid_);
}
inline ::quiz::QuizStage MSG_Ret_QuestionResult_SC::stageid() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuestionResult_SC.stageid)
  return _internal_stageid();
}
inline void MSG_Ret_QuestionResult_SC::_internal_set_stageid(::quiz::QuizStage value) {
  assert(::quiz::QuizStage_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  stageid_ = value;
}
inline void MSG_Ret_QuestionResult_SC::set_stageid(::quiz::QuizStage value) {
  _internal_set_stageid(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_QuestionResult_SC.stageid)
}

// optional .quiz.QuizData quizdata = 2;
inline bool MSG_Ret_QuestionResult_SC::_internal_has_quizdata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || quizdata_ != nullptr);
  return value;
}
inline bool MSG_Ret_QuestionResult_SC::has_quizdata() const {
  return _internal_has_quizdata();
}
inline void MSG_Ret_QuestionResult_SC::clear_quizdata() {
  if (quizdata_ != nullptr) quizdata_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::quiz::QuizData& MSG_Ret_QuestionResult_SC::_internal_quizdata() const {
  const ::quiz::QuizData* p = quizdata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::quiz::QuizData*>(
      &::quiz::_QuizData_default_instance_);
}
inline const ::quiz::QuizData& MSG_Ret_QuestionResult_SC::quizdata() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuestionResult_SC.quizdata)
  return _internal_quizdata();
}
inline ::quiz::QuizData* MSG_Ret_QuestionResult_SC::release_quizdata() {
  // @@protoc_insertion_point(field_release:quiz.MSG_Ret_QuestionResult_SC.quizdata)
  _has_bits_[0] &= ~0x00000001u;
  ::quiz::QuizData* temp = quizdata_;
  quizdata_ = nullptr;
  return temp;
}
inline ::quiz::QuizData* MSG_Ret_QuestionResult_SC::_internal_mutable_quizdata() {
  _has_bits_[0] |= 0x00000001u;
  if (quizdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::quiz::QuizData>(GetArenaNoVirtual());
    quizdata_ = p;
  }
  return quizdata_;
}
inline ::quiz::QuizData* MSG_Ret_QuestionResult_SC::mutable_quizdata() {
  // @@protoc_insertion_point(field_mutable:quiz.MSG_Ret_QuestionResult_SC.quizdata)
  return _internal_mutable_quizdata();
}
inline void MSG_Ret_QuestionResult_SC::set_allocated_quizdata(::quiz::QuizData* quizdata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete quizdata_;
  }
  if (quizdata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      quizdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quizdata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  quizdata_ = quizdata;
  // @@protoc_insertion_point(field_set_allocated:quiz.MSG_Ret_QuestionResult_SC.quizdata)
}

// repeated .quiz.AnswerRewards rewards = 3;
inline int MSG_Ret_QuestionResult_SC::_internal_rewards_size() const {
  return rewards_.size();
}
inline int MSG_Ret_QuestionResult_SC::rewards_size() const {
  return _internal_rewards_size();
}
inline void MSG_Ret_QuestionResult_SC::clear_rewards() {
  rewards_.Clear();
}
inline ::quiz::AnswerRewards* MSG_Ret_QuestionResult_SC::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:quiz.MSG_Ret_QuestionResult_SC.rewards)
  return rewards_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::AnswerRewards >*
MSG_Ret_QuestionResult_SC::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:quiz.MSG_Ret_QuestionResult_SC.rewards)
  return &rewards_;
}
inline const ::quiz::AnswerRewards& MSG_Ret_QuestionResult_SC::_internal_rewards(int index) const {
  return rewards_.Get(index);
}
inline const ::quiz::AnswerRewards& MSG_Ret_QuestionResult_SC::rewards(int index) const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuestionResult_SC.rewards)
  return _internal_rewards(index);
}
inline ::quiz::AnswerRewards* MSG_Ret_QuestionResult_SC::_internal_add_rewards() {
  return rewards_.Add();
}
inline ::quiz::AnswerRewards* MSG_Ret_QuestionResult_SC::add_rewards() {
  // @@protoc_insertion_point(field_add:quiz.MSG_Ret_QuestionResult_SC.rewards)
  return _internal_add_rewards();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::AnswerRewards >&
MSG_Ret_QuestionResult_SC::rewards() const {
  // @@protoc_insertion_point(field_list:quiz.MSG_Ret_QuestionResult_SC.rewards)
  return rewards_;
}

// optional bool result = 4;
inline bool MSG_Ret_QuestionResult_SC::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_QuestionResult_SC::has_result() const {
  return _internal_has_result();
}
inline void MSG_Ret_QuestionResult_SC::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool MSG_Ret_QuestionResult_SC::_internal_result() const {
  return result_;
}
inline bool MSG_Ret_QuestionResult_SC::result() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_QuestionResult_SC.result)
  return _internal_result();
}
inline void MSG_Ret_QuestionResult_SC::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000004u;
  result_ = value;
}
inline void MSG_Ret_QuestionResult_SC::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_QuestionResult_SC.result)
}

// -------------------------------------------------------------------

// MSG_Req_UseHelpItem_CS

// optional .quiz.QuizStage stageid = 1;
inline bool MSG_Req_UseHelpItem_CS::_internal_has_stageid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_UseHelpItem_CS::has_stageid() const {
  return _internal_has_stageid();
}
inline void MSG_Req_UseHelpItem_CS::clear_stageid() {
  stageid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::quiz::QuizStage MSG_Req_UseHelpItem_CS::_internal_stageid() const {
  return static_cast< ::quiz::QuizStage >(stageid_);
}
inline ::quiz::QuizStage MSG_Req_UseHelpItem_CS::stageid() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Req_UseHelpItem_CS.stageid)
  return _internal_stageid();
}
inline void MSG_Req_UseHelpItem_CS::_internal_set_stageid(::quiz::QuizStage value) {
  assert(::quiz::QuizStage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  stageid_ = value;
}
inline void MSG_Req_UseHelpItem_CS::set_stageid(::quiz::QuizStage value) {
  _internal_set_stageid(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Req_UseHelpItem_CS.stageid)
}

// optional uint32 objid = 2;
inline bool MSG_Req_UseHelpItem_CS::_internal_has_objid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Req_UseHelpItem_CS::has_objid() const {
  return _internal_has_objid();
}
inline void MSG_Req_UseHelpItem_CS::clear_objid() {
  objid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_UseHelpItem_CS::_internal_objid() const {
  return objid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_UseHelpItem_CS::objid() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Req_UseHelpItem_CS.objid)
  return _internal_objid();
}
inline void MSG_Req_UseHelpItem_CS::_internal_set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  objid_ = value;
}
inline void MSG_Req_UseHelpItem_CS::set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_objid(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Req_UseHelpItem_CS.objid)
}

// optional uint32 questionnum = 3;
inline bool MSG_Req_UseHelpItem_CS::_internal_has_questionnum() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Req_UseHelpItem_CS::has_questionnum() const {
  return _internal_has_questionnum();
}
inline void MSG_Req_UseHelpItem_CS::clear_questionnum() {
  questionnum_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_UseHelpItem_CS::_internal_questionnum() const {
  return questionnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_UseHelpItem_CS::questionnum() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Req_UseHelpItem_CS.questionnum)
  return _internal_questionnum();
}
inline void MSG_Req_UseHelpItem_CS::_internal_set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  questionnum_ = value;
}
inline void MSG_Req_UseHelpItem_CS::set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questionnum(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Req_UseHelpItem_CS.questionnum)
}

// -------------------------------------------------------------------

// MSG_Ret_HelpItemEffect_SC

// optional .quiz.QuizStage stageid = 1;
inline bool MSG_Ret_HelpItemEffect_SC::_internal_has_stageid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_HelpItemEffect_SC::has_stageid() const {
  return _internal_has_stageid();
}
inline void MSG_Ret_HelpItemEffect_SC::clear_stageid() {
  stageid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::quiz::QuizStage MSG_Ret_HelpItemEffect_SC::_internal_stageid() const {
  return static_cast< ::quiz::QuizStage >(stageid_);
}
inline ::quiz::QuizStage MSG_Ret_HelpItemEffect_SC::stageid() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_HelpItemEffect_SC.stageid)
  return _internal_stageid();
}
inline void MSG_Ret_HelpItemEffect_SC::_internal_set_stageid(::quiz::QuizStage value) {
  assert(::quiz::QuizStage_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  stageid_ = value;
}
inline void MSG_Ret_HelpItemEffect_SC::set_stageid(::quiz::QuizStage value) {
  _internal_set_stageid(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_HelpItemEffect_SC.stageid)
}

// optional uint32 objid = 2;
inline bool MSG_Ret_HelpItemEffect_SC::_internal_has_objid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_HelpItemEffect_SC::has_objid() const {
  return _internal_has_objid();
}
inline void MSG_Ret_HelpItemEffect_SC::clear_objid() {
  objid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HelpItemEffect_SC::_internal_objid() const {
  return objid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HelpItemEffect_SC::objid() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_HelpItemEffect_SC.objid)
  return _internal_objid();
}
inline void MSG_Ret_HelpItemEffect_SC::_internal_set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  objid_ = value;
}
inline void MSG_Ret_HelpItemEffect_SC::set_objid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_objid(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_HelpItemEffect_SC.objid)
}

// optional uint32 questionnum = 3;
inline bool MSG_Ret_HelpItemEffect_SC::_internal_has_questionnum() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool MSG_Ret_HelpItemEffect_SC::has_questionnum() const {
  return _internal_has_questionnum();
}
inline void MSG_Ret_HelpItemEffect_SC::clear_questionnum() {
  questionnum_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HelpItemEffect_SC::_internal_questionnum() const {
  return questionnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HelpItemEffect_SC::questionnum() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_HelpItemEffect_SC.questionnum)
  return _internal_questionnum();
}
inline void MSG_Ret_HelpItemEffect_SC::_internal_set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  questionnum_ = value;
}
inline void MSG_Ret_HelpItemEffect_SC::set_questionnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_questionnum(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_HelpItemEffect_SC.questionnum)
}

// optional uint32 effectvalue = 4;
inline bool MSG_Ret_HelpItemEffect_SC::_internal_has_effectvalue() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool MSG_Ret_HelpItemEffect_SC::has_effectvalue() const {
  return _internal_has_effectvalue();
}
inline void MSG_Ret_HelpItemEffect_SC::clear_effectvalue() {
  effectvalue_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HelpItemEffect_SC::_internal_effectvalue() const {
  return effectvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_HelpItemEffect_SC::effectvalue() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_HelpItemEffect_SC.effectvalue)
  return _internal_effectvalue();
}
inline void MSG_Ret_HelpItemEffect_SC::_internal_set_effectvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  effectvalue_ = value;
}
inline void MSG_Ret_HelpItemEffect_SC::set_effectvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_effectvalue(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_HelpItemEffect_SC.effectvalue)
}

// -------------------------------------------------------------------

// Day7ActivityInfo

// optional uint32 dayid = 1;
inline bool Day7ActivityInfo::_internal_has_dayid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Day7ActivityInfo::has_dayid() const {
  return _internal_has_dayid();
}
inline void Day7ActivityInfo::clear_dayid() {
  dayid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Day7ActivityInfo::_internal_dayid() const {
  return dayid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Day7ActivityInfo::dayid() const {
  // @@protoc_insertion_point(field_get:quiz.Day7ActivityInfo.dayid)
  return _internal_dayid();
}
inline void Day7ActivityInfo::_internal_set_dayid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  dayid_ = value;
}
inline void Day7ActivityInfo::set_dayid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dayid(value);
  // @@protoc_insertion_point(field_set:quiz.Day7ActivityInfo.dayid)
}

// optional .quiz.ActivityState state = 2;
inline bool Day7ActivityInfo::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Day7ActivityInfo::has_state() const {
  return _internal_has_state();
}
inline void Day7ActivityInfo::clear_state() {
  state_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::quiz::ActivityState Day7ActivityInfo::_internal_state() const {
  return static_cast< ::quiz::ActivityState >(state_);
}
inline ::quiz::ActivityState Day7ActivityInfo::state() const {
  // @@protoc_insertion_point(field_get:quiz.Day7ActivityInfo.state)
  return _internal_state();
}
inline void Day7ActivityInfo::_internal_set_state(::quiz::ActivityState value) {
  assert(::quiz::ActivityState_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  state_ = value;
}
inline void Day7ActivityInfo::set_state(::quiz::ActivityState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:quiz.Day7ActivityInfo.state)
}

// -------------------------------------------------------------------

// MSG_Ret_Day7ActivityInfo_SC

// repeated .quiz.Day7ActivityInfo data = 1;
inline int MSG_Ret_Day7ActivityInfo_SC::_internal_data_size() const {
  return data_.size();
}
inline int MSG_Ret_Day7ActivityInfo_SC::data_size() const {
  return _internal_data_size();
}
inline void MSG_Ret_Day7ActivityInfo_SC::clear_data() {
  data_.Clear();
}
inline ::quiz::Day7ActivityInfo* MSG_Ret_Day7ActivityInfo_SC::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:quiz.MSG_Ret_Day7ActivityInfo_SC.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::Day7ActivityInfo >*
MSG_Ret_Day7ActivityInfo_SC::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:quiz.MSG_Ret_Day7ActivityInfo_SC.data)
  return &data_;
}
inline const ::quiz::Day7ActivityInfo& MSG_Ret_Day7ActivityInfo_SC::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::quiz::Day7ActivityInfo& MSG_Ret_Day7ActivityInfo_SC::data(int index) const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_Day7ActivityInfo_SC.data)
  return _internal_data(index);
}
inline ::quiz::Day7ActivityInfo* MSG_Ret_Day7ActivityInfo_SC::_internal_add_data() {
  return data_.Add();
}
inline ::quiz::Day7ActivityInfo* MSG_Ret_Day7ActivityInfo_SC::add_data() {
  // @@protoc_insertion_point(field_add:quiz.MSG_Ret_Day7ActivityInfo_SC.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::quiz::Day7ActivityInfo >&
MSG_Ret_Day7ActivityInfo_SC::data() const {
  // @@protoc_insertion_point(field_list:quiz.MSG_Ret_Day7ActivityInfo_SC.data)
  return data_;
}

// -------------------------------------------------------------------

// MSG_Req_RecvDay7ActivityPrize_CS

// -------------------------------------------------------------------

// MSG_Req_SeekActivityInfo_CS

// -------------------------------------------------------------------

// MSG_Ret_SeekActivityInfo_SC

// optional .quiz.ActivityState state = 1;
inline bool MSG_Ret_SeekActivityInfo_SC::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Ret_SeekActivityInfo_SC::has_state() const {
  return _internal_has_state();
}
inline void MSG_Ret_SeekActivityInfo_SC::clear_state() {
  state_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::quiz::ActivityState MSG_Ret_SeekActivityInfo_SC::_internal_state() const {
  return static_cast< ::quiz::ActivityState >(state_);
}
inline ::quiz::ActivityState MSG_Ret_SeekActivityInfo_SC::state() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_SeekActivityInfo_SC.state)
  return _internal_state();
}
inline void MSG_Ret_SeekActivityInfo_SC::_internal_set_state(::quiz::ActivityState value) {
  assert(::quiz::ActivityState_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  state_ = value;
}
inline void MSG_Ret_SeekActivityInfo_SC::set_state(::quiz::ActivityState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_SeekActivityInfo_SC.state)
}

// optional uint32 id = 2;
inline bool MSG_Ret_SeekActivityInfo_SC::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool MSG_Ret_SeekActivityInfo_SC::has_id() const {
  return _internal_has_id();
}
inline void MSG_Ret_SeekActivityInfo_SC::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SeekActivityInfo_SC::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Ret_SeekActivityInfo_SC::id() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Ret_SeekActivityInfo_SC.id)
  return _internal_id();
}
inline void MSG_Ret_SeekActivityInfo_SC::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void MSG_Ret_SeekActivityInfo_SC::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Ret_SeekActivityInfo_SC.id)
}

// -------------------------------------------------------------------

// MSG_Req_RecvSeekActivityPrize_CS

// optional uint32 id = 1;
inline bool MSG_Req_RecvSeekActivityPrize_CS::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MSG_Req_RecvSeekActivityPrize_CS::has_id() const {
  return _internal_has_id();
}
inline void MSG_Req_RecvSeekActivityPrize_CS::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_RecvSeekActivityPrize_CS::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MSG_Req_RecvSeekActivityPrize_CS::id() const {
  // @@protoc_insertion_point(field_get:quiz.MSG_Req_RecvSeekActivityPrize_CS.id)
  return _internal_id();
}
inline void MSG_Req_RecvSeekActivityPrize_CS::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void MSG_Req_RecvSeekActivityPrize_CS::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:quiz.MSG_Req_RecvSeekActivityPrize_CS.id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace quiz

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::quiz::QuizStage> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::quiz::QuizStage>() {
  return ::quiz::QuizStage_descriptor();
}
template <> struct is_proto_enum< ::quiz::ActivityState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::quiz::ActivityState>() {
  return ::quiz::ActivityState_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_quiz_2eproto
