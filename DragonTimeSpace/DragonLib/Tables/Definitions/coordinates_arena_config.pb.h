// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coordinates_arena_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_coordinates_5farena_5fconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_coordinates_5farena_5fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_coordinates_5farena_5fconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_coordinates_5farena_5fconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_coordinates_5farena_5fconfig_2eproto;
namespace pb {
class coordinates_arena_config;
class coordinates_arena_configDefaultTypeInternal;
extern coordinates_arena_configDefaultTypeInternal _coordinates_arena_config_default_instance_;
class coordinates_arena_config_t_coordinates_arena_config;
class coordinates_arena_config_t_coordinates_arena_configDefaultTypeInternal;
extern coordinates_arena_config_t_coordinates_arena_configDefaultTypeInternal _coordinates_arena_config_t_coordinates_arena_config_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::coordinates_arena_config* Arena::CreateMaybeMessage<::pb::coordinates_arena_config>(Arena*);
template<> ::pb::coordinates_arena_config_t_coordinates_arena_config* Arena::CreateMaybeMessage<::pb::coordinates_arena_config_t_coordinates_arena_config>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

// ===================================================================

class coordinates_arena_config_t_coordinates_arena_config :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.coordinates_arena_config.t_coordinates_arena_config) */ {
 public:
  coordinates_arena_config_t_coordinates_arena_config();
  virtual ~coordinates_arena_config_t_coordinates_arena_config();

  coordinates_arena_config_t_coordinates_arena_config(const coordinates_arena_config_t_coordinates_arena_config& from);
  coordinates_arena_config_t_coordinates_arena_config(coordinates_arena_config_t_coordinates_arena_config&& from) noexcept
    : coordinates_arena_config_t_coordinates_arena_config() {
    *this = ::std::move(from);
  }

  inline coordinates_arena_config_t_coordinates_arena_config& operator=(const coordinates_arena_config_t_coordinates_arena_config& from) {
    CopyFrom(from);
    return *this;
  }
  inline coordinates_arena_config_t_coordinates_arena_config& operator=(coordinates_arena_config_t_coordinates_arena_config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const coordinates_arena_config_t_coordinates_arena_config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const coordinates_arena_config_t_coordinates_arena_config* internal_default_instance() {
    return reinterpret_cast<const coordinates_arena_config_t_coordinates_arena_config*>(
               &_coordinates_arena_config_t_coordinates_arena_config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(coordinates_arena_config_t_coordinates_arena_config& a, coordinates_arena_config_t_coordinates_arena_config& b) {
    a.Swap(&b);
  }
  inline void Swap(coordinates_arena_config_t_coordinates_arena_config* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline coordinates_arena_config_t_coordinates_arena_config* New() const final {
    return CreateMaybeMessage<coordinates_arena_config_t_coordinates_arena_config>(nullptr);
  }

  coordinates_arena_config_t_coordinates_arena_config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<coordinates_arena_config_t_coordinates_arena_config>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const coordinates_arena_config_t_coordinates_arena_config& from);
  void MergeFrom(const coordinates_arena_config_t_coordinates_arena_config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(coordinates_arena_config_t_coordinates_arena_config* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.coordinates_arena_config.t_coordinates_arena_config";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_coordinates_5farena_5fconfig_2eproto);
    return ::descriptor_table_coordinates_5farena_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTbxidFieldNumber = 1,
    kIdFieldNumber = 2,
    kCoordinatetypeFieldNumber = 3,
    kCoordinatexFieldNumber = 4,
    kCoordinateyFieldNumber = 5,
    kRadiusFieldNumber = 6,
    kTransgroupFieldNumber = 7,
  };
  // required uint32 tbxid = 1 [default = 0];
  bool has_tbxid() const;
  private:
  bool _internal_has_tbxid() const;
  public:
  void clear_tbxid();
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid() const;
  void set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tbxid() const;
  void _internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 id = 2 [default = 0];
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 coordinatetype = 3;
  bool has_coordinatetype() const;
  private:
  bool _internal_has_coordinatetype() const;
  public:
  void clear_coordinatetype();
  ::PROTOBUF_NAMESPACE_ID::uint32 coordinatetype() const;
  void set_coordinatetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coordinatetype() const;
  void _internal_set_coordinatetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 coordinatex = 4;
  bool has_coordinatex() const;
  private:
  bool _internal_has_coordinatex() const;
  public:
  void clear_coordinatex();
  ::PROTOBUF_NAMESPACE_ID::uint32 coordinatex() const;
  void set_coordinatex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coordinatex() const;
  void _internal_set_coordinatex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 coordinatey = 5;
  bool has_coordinatey() const;
  private:
  bool _internal_has_coordinatey() const;
  public:
  void clear_coordinatey();
  ::PROTOBUF_NAMESPACE_ID::uint32 coordinatey() const;
  void set_coordinatey(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coordinatey() const;
  void _internal_set_coordinatey(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 radius = 6;
  bool has_radius() const;
  private:
  bool _internal_has_radius() const;
  public:
  void clear_radius();
  ::PROTOBUF_NAMESPACE_ID::uint32 radius() const;
  void set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_radius() const;
  void _internal_set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 transgroup = 7;
  bool has_transgroup() const;
  private:
  bool _internal_has_transgroup() const;
  public:
  void clear_transgroup();
  ::PROTOBUF_NAMESPACE_ID::uint32 transgroup() const;
  void set_transgroup(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_transgroup() const;
  void _internal_set_transgroup(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.coordinates_arena_config.t_coordinates_arena_config)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coordinatetype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coordinatex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coordinatey_;
  ::PROTOBUF_NAMESPACE_ID::uint32 radius_;
  ::PROTOBUF_NAMESPACE_ID::uint32 transgroup_;
  friend struct ::TableStruct_coordinates_5farena_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class coordinates_arena_config :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.coordinates_arena_config) */ {
 public:
  coordinates_arena_config();
  virtual ~coordinates_arena_config();

  coordinates_arena_config(const coordinates_arena_config& from);
  coordinates_arena_config(coordinates_arena_config&& from) noexcept
    : coordinates_arena_config() {
    *this = ::std::move(from);
  }

  inline coordinates_arena_config& operator=(const coordinates_arena_config& from) {
    CopyFrom(from);
    return *this;
  }
  inline coordinates_arena_config& operator=(coordinates_arena_config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const coordinates_arena_config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const coordinates_arena_config* internal_default_instance() {
    return reinterpret_cast<const coordinates_arena_config*>(
               &_coordinates_arena_config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(coordinates_arena_config& a, coordinates_arena_config& b) {
    a.Swap(&b);
  }
  inline void Swap(coordinates_arena_config* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline coordinates_arena_config* New() const final {
    return CreateMaybeMessage<coordinates_arena_config>(nullptr);
  }

  coordinates_arena_config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<coordinates_arena_config>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const coordinates_arena_config& from);
  void MergeFrom(const coordinates_arena_config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(coordinates_arena_config* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.coordinates_arena_config";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_coordinates_5farena_5fconfig_2eproto);
    return ::descriptor_table_coordinates_5farena_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef coordinates_arena_config_t_coordinates_arena_config t_coordinates_arena_config;

  // accessors -------------------------------------------------------

  enum : int {
    kDatasFieldNumber = 1,
  };
  // repeated .pb.coordinates_arena_config.t_coordinates_arena_config datas = 1;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::pb::coordinates_arena_config_t_coordinates_arena_config* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::coordinates_arena_config_t_coordinates_arena_config >*
      mutable_datas();
  private:
  const ::pb::coordinates_arena_config_t_coordinates_arena_config& _internal_datas(int index) const;
  ::pb::coordinates_arena_config_t_coordinates_arena_config* _internal_add_datas();
  public:
  const ::pb::coordinates_arena_config_t_coordinates_arena_config& datas(int index) const;
  ::pb::coordinates_arena_config_t_coordinates_arena_config* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::coordinates_arena_config_t_coordinates_arena_config >&
      datas() const;

  // @@protoc_insertion_point(class_scope:pb.coordinates_arena_config)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::coordinates_arena_config_t_coordinates_arena_config > datas_;
  friend struct ::TableStruct_coordinates_5farena_5fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// coordinates_arena_config_t_coordinates_arena_config

// required uint32 tbxid = 1 [default = 0];
inline bool coordinates_arena_config_t_coordinates_arena_config::_internal_has_tbxid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool coordinates_arena_config_t_coordinates_arena_config::has_tbxid() const {
  return _internal_has_tbxid();
}
inline void coordinates_arena_config_t_coordinates_arena_config::clear_tbxid() {
  tbxid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::_internal_tbxid() const {
  return tbxid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::tbxid() const {
  // @@protoc_insertion_point(field_get:pb.coordinates_arena_config.t_coordinates_arena_config.tbxid)
  return _internal_tbxid();
}
inline void coordinates_arena_config_t_coordinates_arena_config::_internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  tbxid_ = value;
}
inline void coordinates_arena_config_t_coordinates_arena_config::set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tbxid(value);
  // @@protoc_insertion_point(field_set:pb.coordinates_arena_config.t_coordinates_arena_config.tbxid)
}

// required uint32 id = 2 [default = 0];
inline bool coordinates_arena_config_t_coordinates_arena_config::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool coordinates_arena_config_t_coordinates_arena_config::has_id() const {
  return _internal_has_id();
}
inline void coordinates_arena_config_t_coordinates_arena_config::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::id() const {
  // @@protoc_insertion_point(field_get:pb.coordinates_arena_config.t_coordinates_arena_config.id)
  return _internal_id();
}
inline void coordinates_arena_config_t_coordinates_arena_config::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void coordinates_arena_config_t_coordinates_arena_config::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:pb.coordinates_arena_config.t_coordinates_arena_config.id)
}

// required uint32 coordinatetype = 3;
inline bool coordinates_arena_config_t_coordinates_arena_config::_internal_has_coordinatetype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool coordinates_arena_config_t_coordinates_arena_config::has_coordinatetype() const {
  return _internal_has_coordinatetype();
}
inline void coordinates_arena_config_t_coordinates_arena_config::clear_coordinatetype() {
  coordinatetype_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::_internal_coordinatetype() const {
  return coordinatetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::coordinatetype() const {
  // @@protoc_insertion_point(field_get:pb.coordinates_arena_config.t_coordinates_arena_config.coordinatetype)
  return _internal_coordinatetype();
}
inline void coordinates_arena_config_t_coordinates_arena_config::_internal_set_coordinatetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  coordinatetype_ = value;
}
inline void coordinates_arena_config_t_coordinates_arena_config::set_coordinatetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coordinatetype(value);
  // @@protoc_insertion_point(field_set:pb.coordinates_arena_config.t_coordinates_arena_config.coordinatetype)
}

// required uint32 coordinatex = 4;
inline bool coordinates_arena_config_t_coordinates_arena_config::_internal_has_coordinatex() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool coordinates_arena_config_t_coordinates_arena_config::has_coordinatex() const {
  return _internal_has_coordinatex();
}
inline void coordinates_arena_config_t_coordinates_arena_config::clear_coordinatex() {
  coordinatex_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::_internal_coordinatex() const {
  return coordinatex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::coordinatex() const {
  // @@protoc_insertion_point(field_get:pb.coordinates_arena_config.t_coordinates_arena_config.coordinatex)
  return _internal_coordinatex();
}
inline void coordinates_arena_config_t_coordinates_arena_config::_internal_set_coordinatex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  coordinatex_ = value;
}
inline void coordinates_arena_config_t_coordinates_arena_config::set_coordinatex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coordinatex(value);
  // @@protoc_insertion_point(field_set:pb.coordinates_arena_config.t_coordinates_arena_config.coordinatex)
}

// required uint32 coordinatey = 5;
inline bool coordinates_arena_config_t_coordinates_arena_config::_internal_has_coordinatey() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool coordinates_arena_config_t_coordinates_arena_config::has_coordinatey() const {
  return _internal_has_coordinatey();
}
inline void coordinates_arena_config_t_coordinates_arena_config::clear_coordinatey() {
  coordinatey_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::_internal_coordinatey() const {
  return coordinatey_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::coordinatey() const {
  // @@protoc_insertion_point(field_get:pb.coordinates_arena_config.t_coordinates_arena_config.coordinatey)
  return _internal_coordinatey();
}
inline void coordinates_arena_config_t_coordinates_arena_config::_internal_set_coordinatey(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  coordinatey_ = value;
}
inline void coordinates_arena_config_t_coordinates_arena_config::set_coordinatey(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coordinatey(value);
  // @@protoc_insertion_point(field_set:pb.coordinates_arena_config.t_coordinates_arena_config.coordinatey)
}

// required uint32 radius = 6;
inline bool coordinates_arena_config_t_coordinates_arena_config::_internal_has_radius() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool coordinates_arena_config_t_coordinates_arena_config::has_radius() const {
  return _internal_has_radius();
}
inline void coordinates_arena_config_t_coordinates_arena_config::clear_radius() {
  radius_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::_internal_radius() const {
  return radius_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::radius() const {
  // @@protoc_insertion_point(field_get:pb.coordinates_arena_config.t_coordinates_arena_config.radius)
  return _internal_radius();
}
inline void coordinates_arena_config_t_coordinates_arena_config::_internal_set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  radius_ = value;
}
inline void coordinates_arena_config_t_coordinates_arena_config::set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:pb.coordinates_arena_config.t_coordinates_arena_config.radius)
}

// required uint32 transgroup = 7;
inline bool coordinates_arena_config_t_coordinates_arena_config::_internal_has_transgroup() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool coordinates_arena_config_t_coordinates_arena_config::has_transgroup() const {
  return _internal_has_transgroup();
}
inline void coordinates_arena_config_t_coordinates_arena_config::clear_transgroup() {
  transgroup_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::_internal_transgroup() const {
  return transgroup_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 coordinates_arena_config_t_coordinates_arena_config::transgroup() const {
  // @@protoc_insertion_point(field_get:pb.coordinates_arena_config.t_coordinates_arena_config.transgroup)
  return _internal_transgroup();
}
inline void coordinates_arena_config_t_coordinates_arena_config::_internal_set_transgroup(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  transgroup_ = value;
}
inline void coordinates_arena_config_t_coordinates_arena_config::set_transgroup(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_transgroup(value);
  // @@protoc_insertion_point(field_set:pb.coordinates_arena_config.t_coordinates_arena_config.transgroup)
}

// -------------------------------------------------------------------

// coordinates_arena_config

// repeated .pb.coordinates_arena_config.t_coordinates_arena_config datas = 1;
inline int coordinates_arena_config::_internal_datas_size() const {
  return datas_.size();
}
inline int coordinates_arena_config::datas_size() const {
  return _internal_datas_size();
}
inline void coordinates_arena_config::clear_datas() {
  datas_.Clear();
}
inline ::pb::coordinates_arena_config_t_coordinates_arena_config* coordinates_arena_config::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:pb.coordinates_arena_config.datas)
  return datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::coordinates_arena_config_t_coordinates_arena_config >*
coordinates_arena_config::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:pb.coordinates_arena_config.datas)
  return &datas_;
}
inline const ::pb::coordinates_arena_config_t_coordinates_arena_config& coordinates_arena_config::_internal_datas(int index) const {
  return datas_.Get(index);
}
inline const ::pb::coordinates_arena_config_t_coordinates_arena_config& coordinates_arena_config::datas(int index) const {
  // @@protoc_insertion_point(field_get:pb.coordinates_arena_config.datas)
  return _internal_datas(index);
}
inline ::pb::coordinates_arena_config_t_coordinates_arena_config* coordinates_arena_config::_internal_add_datas() {
  return datas_.Add();
}
inline ::pb::coordinates_arena_config_t_coordinates_arena_config* coordinates_arena_config::add_datas() {
  // @@protoc_insertion_point(field_add:pb.coordinates_arena_config.datas)
  return _internal_add_datas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::coordinates_arena_config_t_coordinates_arena_config >&
coordinates_arena_config::datas() const {
  // @@protoc_insertion_point(field_list:pb.coordinates_arena_config.datas)
  return datas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_coordinates_5farena_5fconfig_2eproto
