// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: objects.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_objects_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_objects_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_objects_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_objects_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_objects_2eproto;
namespace pb {
class objects;
class objectsDefaultTypeInternal;
extern objectsDefaultTypeInternal _objects_default_instance_;
class objects_t_objects_config;
class objects_t_objects_configDefaultTypeInternal;
extern objects_t_objects_configDefaultTypeInternal _objects_t_objects_config_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::objects* Arena::CreateMaybeMessage<::pb::objects>(Arena*);
template<> ::pb::objects_t_objects_config* Arena::CreateMaybeMessage<::pb::objects_t_objects_config>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

// ===================================================================

class objects_t_objects_config :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.objects.t_objects_config) */ {
 public:
  objects_t_objects_config();
  virtual ~objects_t_objects_config();

  objects_t_objects_config(const objects_t_objects_config& from);
  objects_t_objects_config(objects_t_objects_config&& from) noexcept
    : objects_t_objects_config() {
    *this = ::std::move(from);
  }

  inline objects_t_objects_config& operator=(const objects_t_objects_config& from) {
    CopyFrom(from);
    return *this;
  }
  inline objects_t_objects_config& operator=(objects_t_objects_config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const objects_t_objects_config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const objects_t_objects_config* internal_default_instance() {
    return reinterpret_cast<const objects_t_objects_config*>(
               &_objects_t_objects_config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(objects_t_objects_config& a, objects_t_objects_config& b) {
    a.Swap(&b);
  }
  inline void Swap(objects_t_objects_config* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline objects_t_objects_config* New() const final {
    return CreateMaybeMessage<objects_t_objects_config>(nullptr);
  }

  objects_t_objects_config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<objects_t_objects_config>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const objects_t_objects_config& from);
  void MergeFrom(const objects_t_objects_config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(objects_t_objects_config* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.objects.t_objects_config";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_objects_2eproto);
    return ::descriptor_table_objects_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kIconFieldNumber = 9,
    kAppearanceFieldNumber = 10,
    kSmallIconFieldNumber = 11,
    kLasttimeFieldNumber = 14,
    kDescFieldNumber = 15,
    kRefenceDescFieldNumber = 16,
    kTypeDescFieldNumber = 17,
    kStateLimitFieldNumber = 24,
    kRecommandpriceFieldNumber = 26,
    kTbxidFieldNumber = 1,
    kIdFieldNumber = 2,
    kTypeFieldNumber = 4,
    kSubtypeFieldNumber = 5,
    kQualityFieldNumber = 6,
    kLevelFieldNumber = 7,
    kUselevelFieldNumber = 8,
    kMaxnumFieldNumber = 12,
    kLasttypeFieldNumber = 13,
    kPromptuseFieldNumber = 18,
    kIsusebindFieldNumber = 19,
    kCdgroupFieldNumber = 20,
    kCdgrouptimeFieldNumber = 21,
    kCdtimeFieldNumber = 22,
    kSellPriceFieldNumber = 23,
    kTreasureFieldNumber = 25,
    kIsdeleteFieldNumber = 27,
  };
  // required string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // required string icon = 9;
  bool has_icon() const;
  private:
  bool _internal_has_icon() const;
  public:
  void clear_icon();
  const std::string& icon() const;
  void set_icon(const std::string& value);
  void set_icon(std::string&& value);
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  std::string* mutable_icon();
  std::string* release_icon();
  void set_allocated_icon(std::string* icon);
  private:
  const std::string& _internal_icon() const;
  void _internal_set_icon(const std::string& value);
  std::string* _internal_mutable_icon();
  public:

  // required string appearance = 10;
  bool has_appearance() const;
  private:
  bool _internal_has_appearance() const;
  public:
  void clear_appearance();
  const std::string& appearance() const;
  void set_appearance(const std::string& value);
  void set_appearance(std::string&& value);
  void set_appearance(const char* value);
  void set_appearance(const char* value, size_t size);
  std::string* mutable_appearance();
  std::string* release_appearance();
  void set_allocated_appearance(std::string* appearance);
  private:
  const std::string& _internal_appearance() const;
  void _internal_set_appearance(const std::string& value);
  std::string* _internal_mutable_appearance();
  public:

  // required string small_icon = 11;
  bool has_small_icon() const;
  private:
  bool _internal_has_small_icon() const;
  public:
  void clear_small_icon();
  const std::string& small_icon() const;
  void set_small_icon(const std::string& value);
  void set_small_icon(std::string&& value);
  void set_small_icon(const char* value);
  void set_small_icon(const char* value, size_t size);
  std::string* mutable_small_icon();
  std::string* release_small_icon();
  void set_allocated_small_icon(std::string* small_icon);
  private:
  const std::string& _internal_small_icon() const;
  void _internal_set_small_icon(const std::string& value);
  std::string* _internal_mutable_small_icon();
  public:

  // required string lasttime = 14;
  bool has_lasttime() const;
  private:
  bool _internal_has_lasttime() const;
  public:
  void clear_lasttime();
  const std::string& lasttime() const;
  void set_lasttime(const std::string& value);
  void set_lasttime(std::string&& value);
  void set_lasttime(const char* value);
  void set_lasttime(const char* value, size_t size);
  std::string* mutable_lasttime();
  std::string* release_lasttime();
  void set_allocated_lasttime(std::string* lasttime);
  private:
  const std::string& _internal_lasttime() const;
  void _internal_set_lasttime(const std::string& value);
  std::string* _internal_mutable_lasttime();
  public:

  // required string desc = 15;
  bool has_desc() const;
  private:
  bool _internal_has_desc() const;
  public:
  void clear_desc();
  const std::string& desc() const;
  void set_desc(const std::string& value);
  void set_desc(std::string&& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  std::string* mutable_desc();
  std::string* release_desc();
  void set_allocated_desc(std::string* desc);
  private:
  const std::string& _internal_desc() const;
  void _internal_set_desc(const std::string& value);
  std::string* _internal_mutable_desc();
  public:

  // required string refence_desc = 16;
  bool has_refence_desc() const;
  private:
  bool _internal_has_refence_desc() const;
  public:
  void clear_refence_desc();
  const std::string& refence_desc() const;
  void set_refence_desc(const std::string& value);
  void set_refence_desc(std::string&& value);
  void set_refence_desc(const char* value);
  void set_refence_desc(const char* value, size_t size);
  std::string* mutable_refence_desc();
  std::string* release_refence_desc();
  void set_allocated_refence_desc(std::string* refence_desc);
  private:
  const std::string& _internal_refence_desc() const;
  void _internal_set_refence_desc(const std::string& value);
  std::string* _internal_mutable_refence_desc();
  public:

  // required string type_desc = 17;
  bool has_type_desc() const;
  private:
  bool _internal_has_type_desc() const;
  public:
  void clear_type_desc();
  const std::string& type_desc() const;
  void set_type_desc(const std::string& value);
  void set_type_desc(std::string&& value);
  void set_type_desc(const char* value);
  void set_type_desc(const char* value, size_t size);
  std::string* mutable_type_desc();
  std::string* release_type_desc();
  void set_allocated_type_desc(std::string* type_desc);
  private:
  const std::string& _internal_type_desc() const;
  void _internal_set_type_desc(const std::string& value);
  std::string* _internal_mutable_type_desc();
  public:

  // required string state_limit = 24;
  bool has_state_limit() const;
  private:
  bool _internal_has_state_limit() const;
  public:
  void clear_state_limit();
  const std::string& state_limit() const;
  void set_state_limit(const std::string& value);
  void set_state_limit(std::string&& value);
  void set_state_limit(const char* value);
  void set_state_limit(const char* value, size_t size);
  std::string* mutable_state_limit();
  std::string* release_state_limit();
  void set_allocated_state_limit(std::string* state_limit);
  private:
  const std::string& _internal_state_limit() const;
  void _internal_set_state_limit(const std::string& value);
  std::string* _internal_mutable_state_limit();
  public:

  // required string recommandprice = 26;
  bool has_recommandprice() const;
  private:
  bool _internal_has_recommandprice() const;
  public:
  void clear_recommandprice();
  const std::string& recommandprice() const;
  void set_recommandprice(const std::string& value);
  void set_recommandprice(std::string&& value);
  void set_recommandprice(const char* value);
  void set_recommandprice(const char* value, size_t size);
  std::string* mutable_recommandprice();
  std::string* release_recommandprice();
  void set_allocated_recommandprice(std::string* recommandprice);
  private:
  const std::string& _internal_recommandprice() const;
  void _internal_set_recommandprice(const std::string& value);
  std::string* _internal_mutable_recommandprice();
  public:

  // required uint32 tbxid = 1 [default = 0];
  bool has_tbxid() const;
  private:
  bool _internal_has_tbxid() const;
  public:
  void clear_tbxid();
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid() const;
  void set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tbxid() const;
  void _internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 id = 2 [default = 0];
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 type = 4;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 subtype = 5;
  bool has_subtype() const;
  private:
  bool _internal_has_subtype() const;
  public:
  void clear_subtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 subtype() const;
  void set_subtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subtype() const;
  void _internal_set_subtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 quality = 6;
  bool has_quality() const;
  private:
  bool _internal_has_quality() const;
  public:
  void clear_quality();
  ::PROTOBUF_NAMESPACE_ID::uint32 quality() const;
  void set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quality() const;
  void _internal_set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 level = 7;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uselevel = 8;
  bool has_uselevel() const;
  private:
  bool _internal_has_uselevel() const;
  public:
  void clear_uselevel();
  ::PROTOBUF_NAMESPACE_ID::uint32 uselevel() const;
  void set_uselevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uselevel() const;
  void _internal_set_uselevel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 maxnum = 12;
  bool has_maxnum() const;
  private:
  bool _internal_has_maxnum() const;
  public:
  void clear_maxnum();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxnum() const;
  void set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxnum() const;
  void _internal_set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 lasttype = 13;
  bool has_lasttype() const;
  private:
  bool _internal_has_lasttype() const;
  public:
  void clear_lasttype();
  ::PROTOBUF_NAMESPACE_ID::uint32 lasttype() const;
  void set_lasttype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lasttype() const;
  void _internal_set_lasttype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 promptuse = 18;
  bool has_promptuse() const;
  private:
  bool _internal_has_promptuse() const;
  public:
  void clear_promptuse();
  ::PROTOBUF_NAMESPACE_ID::uint32 promptuse() const;
  void set_promptuse(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_promptuse() const;
  void _internal_set_promptuse(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 isusebind = 19;
  bool has_isusebind() const;
  private:
  bool _internal_has_isusebind() const;
  public:
  void clear_isusebind();
  ::PROTOBUF_NAMESPACE_ID::uint32 isusebind() const;
  void set_isusebind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_isusebind() const;
  void _internal_set_isusebind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 cdgroup = 20;
  bool has_cdgroup() const;
  private:
  bool _internal_has_cdgroup() const;
  public:
  void clear_cdgroup();
  ::PROTOBUF_NAMESPACE_ID::uint32 cdgroup() const;
  void set_cdgroup(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cdgroup() const;
  void _internal_set_cdgroup(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 cdgrouptime = 21;
  bool has_cdgrouptime() const;
  private:
  bool _internal_has_cdgrouptime() const;
  public:
  void clear_cdgrouptime();
  ::PROTOBUF_NAMESPACE_ID::uint32 cdgrouptime() const;
  void set_cdgrouptime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cdgrouptime() const;
  void _internal_set_cdgrouptime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 cdtime = 22;
  bool has_cdtime() const;
  private:
  bool _internal_has_cdtime() const;
  public:
  void clear_cdtime();
  ::PROTOBUF_NAMESPACE_ID::uint32 cdtime() const;
  void set_cdtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cdtime() const;
  void _internal_set_cdtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 sell_price = 23;
  bool has_sell_price() const;
  private:
  bool _internal_has_sell_price() const;
  public:
  void clear_sell_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 sell_price() const;
  void set_sell_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sell_price() const;
  void _internal_set_sell_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 treasure = 25;
  bool has_treasure() const;
  private:
  bool _internal_has_treasure() const;
  public:
  void clear_treasure();
  ::PROTOBUF_NAMESPACE_ID::uint32 treasure() const;
  void set_treasure(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_treasure() const;
  void _internal_set_treasure(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 isdelete = 27;
  bool has_isdelete() const;
  private:
  bool _internal_has_isdelete() const;
  public:
  void clear_isdelete();
  ::PROTOBUF_NAMESPACE_ID::uint32 isdelete() const;
  void set_isdelete(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_isdelete() const;
  void _internal_set_isdelete(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.objects.t_objects_config)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr icon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr appearance_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr small_icon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr lasttime_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr refence_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr state_limit_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr recommandprice_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quality_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uselevel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxnum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lasttype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 promptuse_;
  ::PROTOBUF_NAMESPACE_ID::uint32 isusebind_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cdgroup_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cdgrouptime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cdtime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sell_price_;
  ::PROTOBUF_NAMESPACE_ID::uint32 treasure_;
  ::PROTOBUF_NAMESPACE_ID::uint32 isdelete_;
  friend struct ::TableStruct_objects_2eproto;
};
// -------------------------------------------------------------------

class objects :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.objects) */ {
 public:
  objects();
  virtual ~objects();

  objects(const objects& from);
  objects(objects&& from) noexcept
    : objects() {
    *this = ::std::move(from);
  }

  inline objects& operator=(const objects& from) {
    CopyFrom(from);
    return *this;
  }
  inline objects& operator=(objects&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const objects& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const objects* internal_default_instance() {
    return reinterpret_cast<const objects*>(
               &_objects_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(objects& a, objects& b) {
    a.Swap(&b);
  }
  inline void Swap(objects* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline objects* New() const final {
    return CreateMaybeMessage<objects>(nullptr);
  }

  objects* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<objects>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const objects& from);
  void MergeFrom(const objects& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(objects* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.objects";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_objects_2eproto);
    return ::descriptor_table_objects_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef objects_t_objects_config t_objects_config;

  // accessors -------------------------------------------------------

  enum : int {
    kDatasFieldNumber = 1,
  };
  // repeated .pb.objects.t_objects_config datas = 1;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::pb::objects_t_objects_config* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::objects_t_objects_config >*
      mutable_datas();
  private:
  const ::pb::objects_t_objects_config& _internal_datas(int index) const;
  ::pb::objects_t_objects_config* _internal_add_datas();
  public:
  const ::pb::objects_t_objects_config& datas(int index) const;
  ::pb::objects_t_objects_config* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::objects_t_objects_config >&
      datas() const;

  // @@protoc_insertion_point(class_scope:pb.objects)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::objects_t_objects_config > datas_;
  friend struct ::TableStruct_objects_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// objects_t_objects_config

// required uint32 tbxid = 1 [default = 0];
inline bool objects_t_objects_config::_internal_has_tbxid() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_tbxid() const {
  return _internal_has_tbxid();
}
inline void objects_t_objects_config::clear_tbxid() {
  tbxid_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_tbxid() const {
  return tbxid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::tbxid() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.tbxid)
  return _internal_tbxid();
}
inline void objects_t_objects_config::_internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  tbxid_ = value;
}
inline void objects_t_objects_config::set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tbxid(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.tbxid)
}

// required uint32 id = 2 [default = 0];
inline bool objects_t_objects_config::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_id() const {
  return _internal_has_id();
}
inline void objects_t_objects_config::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::id() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.id)
  return _internal_id();
}
inline void objects_t_objects_config::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  id_ = value;
}
inline void objects_t_objects_config::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.id)
}

// required string name = 3;
inline bool objects_t_objects_config::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_name() const {
  return _internal_has_name();
}
inline void objects_t_objects_config::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& objects_t_objects_config::name() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.name)
  return _internal_name();
}
inline void objects_t_objects_config::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.name)
}
inline std::string* objects_t_objects_config::mutable_name() {
  // @@protoc_insertion_point(field_mutable:pb.objects.t_objects_config.name)
  return _internal_mutable_name();
}
inline const std::string& objects_t_objects_config::_internal_name() const {
  return name_.GetNoArena();
}
inline void objects_t_objects_config::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void objects_t_objects_config::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.objects.t_objects_config.name)
}
inline void objects_t_objects_config::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.objects.t_objects_config.name)
}
inline void objects_t_objects_config::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.objects.t_objects_config.name)
}
inline std::string* objects_t_objects_config::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* objects_t_objects_config::release_name() {
  // @@protoc_insertion_point(field_release:pb.objects.t_objects_config.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void objects_t_objects_config::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.objects.t_objects_config.name)
}

// required uint32 type = 4;
inline bool objects_t_objects_config::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_type() const {
  return _internal_has_type();
}
inline void objects_t_objects_config::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::type() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.type)
  return _internal_type();
}
inline void objects_t_objects_config::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  type_ = value;
}
inline void objects_t_objects_config::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.type)
}

// required uint32 subtype = 5;
inline bool objects_t_objects_config::_internal_has_subtype() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_subtype() const {
  return _internal_has_subtype();
}
inline void objects_t_objects_config::clear_subtype() {
  subtype_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_subtype() const {
  return subtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::subtype() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.subtype)
  return _internal_subtype();
}
inline void objects_t_objects_config::_internal_set_subtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  subtype_ = value;
}
inline void objects_t_objects_config::set_subtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subtype(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.subtype)
}

// required uint32 quality = 6;
inline bool objects_t_objects_config::_internal_has_quality() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_quality() const {
  return _internal_has_quality();
}
inline void objects_t_objects_config::clear_quality() {
  quality_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_quality() const {
  return quality_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::quality() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.quality)
  return _internal_quality();
}
inline void objects_t_objects_config::_internal_set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  quality_ = value;
}
inline void objects_t_objects_config::set_quality(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quality(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.quality)
}

// required uint32 level = 7;
inline bool objects_t_objects_config::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_level() const {
  return _internal_has_level();
}
inline void objects_t_objects_config::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::level() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.level)
  return _internal_level();
}
inline void objects_t_objects_config::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  level_ = value;
}
inline void objects_t_objects_config::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.level)
}

// required uint32 uselevel = 8;
inline bool objects_t_objects_config::_internal_has_uselevel() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_uselevel() const {
  return _internal_has_uselevel();
}
inline void objects_t_objects_config::clear_uselevel() {
  uselevel_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_uselevel() const {
  return uselevel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::uselevel() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.uselevel)
  return _internal_uselevel();
}
inline void objects_t_objects_config::_internal_set_uselevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  uselevel_ = value;
}
inline void objects_t_objects_config::set_uselevel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uselevel(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.uselevel)
}

// required string icon = 9;
inline bool objects_t_objects_config::_internal_has_icon() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_icon() const {
  return _internal_has_icon();
}
inline void objects_t_objects_config::clear_icon() {
  icon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& objects_t_objects_config::icon() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.icon)
  return _internal_icon();
}
inline void objects_t_objects_config::set_icon(const std::string& value) {
  _internal_set_icon(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.icon)
}
inline std::string* objects_t_objects_config::mutable_icon() {
  // @@protoc_insertion_point(field_mutable:pb.objects.t_objects_config.icon)
  return _internal_mutable_icon();
}
inline const std::string& objects_t_objects_config::_internal_icon() const {
  return icon_.GetNoArena();
}
inline void objects_t_objects_config::_internal_set_icon(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void objects_t_objects_config::set_icon(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.objects.t_objects_config.icon)
}
inline void objects_t_objects_config::set_icon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.objects.t_objects_config.icon)
}
inline void objects_t_objects_config::set_icon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.objects.t_objects_config.icon)
}
inline std::string* objects_t_objects_config::_internal_mutable_icon() {
  _has_bits_[0] |= 0x00000002u;
  return icon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* objects_t_objects_config::release_icon() {
  // @@protoc_insertion_point(field_release:pb.objects.t_objects_config.icon)
  if (!_internal_has_icon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return icon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void objects_t_objects_config::set_allocated_icon(std::string* icon) {
  if (icon != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  icon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:pb.objects.t_objects_config.icon)
}

// required string appearance = 10;
inline bool objects_t_objects_config::_internal_has_appearance() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_appearance() const {
  return _internal_has_appearance();
}
inline void objects_t_objects_config::clear_appearance() {
  appearance_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& objects_t_objects_config::appearance() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.appearance)
  return _internal_appearance();
}
inline void objects_t_objects_config::set_appearance(const std::string& value) {
  _internal_set_appearance(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.appearance)
}
inline std::string* objects_t_objects_config::mutable_appearance() {
  // @@protoc_insertion_point(field_mutable:pb.objects.t_objects_config.appearance)
  return _internal_mutable_appearance();
}
inline const std::string& objects_t_objects_config::_internal_appearance() const {
  return appearance_.GetNoArena();
}
inline void objects_t_objects_config::_internal_set_appearance(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  appearance_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void objects_t_objects_config::set_appearance(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  appearance_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.objects.t_objects_config.appearance)
}
inline void objects_t_objects_config::set_appearance(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  appearance_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.objects.t_objects_config.appearance)
}
inline void objects_t_objects_config::set_appearance(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  appearance_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.objects.t_objects_config.appearance)
}
inline std::string* objects_t_objects_config::_internal_mutable_appearance() {
  _has_bits_[0] |= 0x00000004u;
  return appearance_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* objects_t_objects_config::release_appearance() {
  // @@protoc_insertion_point(field_release:pb.objects.t_objects_config.appearance)
  if (!_internal_has_appearance()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return appearance_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void objects_t_objects_config::set_allocated_appearance(std::string* appearance) {
  if (appearance != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  appearance_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), appearance);
  // @@protoc_insertion_point(field_set_allocated:pb.objects.t_objects_config.appearance)
}

// required string small_icon = 11;
inline bool objects_t_objects_config::_internal_has_small_icon() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_small_icon() const {
  return _internal_has_small_icon();
}
inline void objects_t_objects_config::clear_small_icon() {
  small_icon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& objects_t_objects_config::small_icon() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.small_icon)
  return _internal_small_icon();
}
inline void objects_t_objects_config::set_small_icon(const std::string& value) {
  _internal_set_small_icon(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.small_icon)
}
inline std::string* objects_t_objects_config::mutable_small_icon() {
  // @@protoc_insertion_point(field_mutable:pb.objects.t_objects_config.small_icon)
  return _internal_mutable_small_icon();
}
inline const std::string& objects_t_objects_config::_internal_small_icon() const {
  return small_icon_.GetNoArena();
}
inline void objects_t_objects_config::_internal_set_small_icon(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  small_icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void objects_t_objects_config::set_small_icon(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  small_icon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.objects.t_objects_config.small_icon)
}
inline void objects_t_objects_config::set_small_icon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  small_icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.objects.t_objects_config.small_icon)
}
inline void objects_t_objects_config::set_small_icon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  small_icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.objects.t_objects_config.small_icon)
}
inline std::string* objects_t_objects_config::_internal_mutable_small_icon() {
  _has_bits_[0] |= 0x00000008u;
  return small_icon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* objects_t_objects_config::release_small_icon() {
  // @@protoc_insertion_point(field_release:pb.objects.t_objects_config.small_icon)
  if (!_internal_has_small_icon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return small_icon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void objects_t_objects_config::set_allocated_small_icon(std::string* small_icon) {
  if (small_icon != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  small_icon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), small_icon);
  // @@protoc_insertion_point(field_set_allocated:pb.objects.t_objects_config.small_icon)
}

// required uint32 maxnum = 12;
inline bool objects_t_objects_config::_internal_has_maxnum() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_maxnum() const {
  return _internal_has_maxnum();
}
inline void objects_t_objects_config::clear_maxnum() {
  maxnum_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_maxnum() const {
  return maxnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::maxnum() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.maxnum)
  return _internal_maxnum();
}
inline void objects_t_objects_config::_internal_set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  maxnum_ = value;
}
inline void objects_t_objects_config::set_maxnum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxnum(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.maxnum)
}

// required uint32 lasttype = 13;
inline bool objects_t_objects_config::_internal_has_lasttype() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_lasttype() const {
  return _internal_has_lasttype();
}
inline void objects_t_objects_config::clear_lasttype() {
  lasttype_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_lasttype() const {
  return lasttype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::lasttype() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.lasttype)
  return _internal_lasttype();
}
inline void objects_t_objects_config::_internal_set_lasttype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  lasttype_ = value;
}
inline void objects_t_objects_config::set_lasttype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lasttype(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.lasttype)
}

// required string lasttime = 14;
inline bool objects_t_objects_config::_internal_has_lasttime() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_lasttime() const {
  return _internal_has_lasttime();
}
inline void objects_t_objects_config::clear_lasttime() {
  lasttime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& objects_t_objects_config::lasttime() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.lasttime)
  return _internal_lasttime();
}
inline void objects_t_objects_config::set_lasttime(const std::string& value) {
  _internal_set_lasttime(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.lasttime)
}
inline std::string* objects_t_objects_config::mutable_lasttime() {
  // @@protoc_insertion_point(field_mutable:pb.objects.t_objects_config.lasttime)
  return _internal_mutable_lasttime();
}
inline const std::string& objects_t_objects_config::_internal_lasttime() const {
  return lasttime_.GetNoArena();
}
inline void objects_t_objects_config::_internal_set_lasttime(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  lasttime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void objects_t_objects_config::set_lasttime(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  lasttime_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.objects.t_objects_config.lasttime)
}
inline void objects_t_objects_config::set_lasttime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  lasttime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.objects.t_objects_config.lasttime)
}
inline void objects_t_objects_config::set_lasttime(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  lasttime_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.objects.t_objects_config.lasttime)
}
inline std::string* objects_t_objects_config::_internal_mutable_lasttime() {
  _has_bits_[0] |= 0x00000010u;
  return lasttime_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* objects_t_objects_config::release_lasttime() {
  // @@protoc_insertion_point(field_release:pb.objects.t_objects_config.lasttime)
  if (!_internal_has_lasttime()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return lasttime_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void objects_t_objects_config::set_allocated_lasttime(std::string* lasttime) {
  if (lasttime != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  lasttime_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), lasttime);
  // @@protoc_insertion_point(field_set_allocated:pb.objects.t_objects_config.lasttime)
}

// required string desc = 15;
inline bool objects_t_objects_config::_internal_has_desc() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_desc() const {
  return _internal_has_desc();
}
inline void objects_t_objects_config::clear_desc() {
  desc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& objects_t_objects_config::desc() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.desc)
  return _internal_desc();
}
inline void objects_t_objects_config::set_desc(const std::string& value) {
  _internal_set_desc(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.desc)
}
inline std::string* objects_t_objects_config::mutable_desc() {
  // @@protoc_insertion_point(field_mutable:pb.objects.t_objects_config.desc)
  return _internal_mutable_desc();
}
inline const std::string& objects_t_objects_config::_internal_desc() const {
  return desc_.GetNoArena();
}
inline void objects_t_objects_config::_internal_set_desc(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void objects_t_objects_config::set_desc(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  desc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.objects.t_objects_config.desc)
}
inline void objects_t_objects_config::set_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.objects.t_objects_config.desc)
}
inline void objects_t_objects_config::set_desc(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.objects.t_objects_config.desc)
}
inline std::string* objects_t_objects_config::_internal_mutable_desc() {
  _has_bits_[0] |= 0x00000020u;
  return desc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* objects_t_objects_config::release_desc() {
  // @@protoc_insertion_point(field_release:pb.objects.t_objects_config.desc)
  if (!_internal_has_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return desc_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void objects_t_objects_config::set_allocated_desc(std::string* desc) {
  if (desc != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  desc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:pb.objects.t_objects_config.desc)
}

// required string refence_desc = 16;
inline bool objects_t_objects_config::_internal_has_refence_desc() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_refence_desc() const {
  return _internal_has_refence_desc();
}
inline void objects_t_objects_config::clear_refence_desc() {
  refence_desc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& objects_t_objects_config::refence_desc() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.refence_desc)
  return _internal_refence_desc();
}
inline void objects_t_objects_config::set_refence_desc(const std::string& value) {
  _internal_set_refence_desc(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.refence_desc)
}
inline std::string* objects_t_objects_config::mutable_refence_desc() {
  // @@protoc_insertion_point(field_mutable:pb.objects.t_objects_config.refence_desc)
  return _internal_mutable_refence_desc();
}
inline const std::string& objects_t_objects_config::_internal_refence_desc() const {
  return refence_desc_.GetNoArena();
}
inline void objects_t_objects_config::_internal_set_refence_desc(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  refence_desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void objects_t_objects_config::set_refence_desc(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  refence_desc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.objects.t_objects_config.refence_desc)
}
inline void objects_t_objects_config::set_refence_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  refence_desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.objects.t_objects_config.refence_desc)
}
inline void objects_t_objects_config::set_refence_desc(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  refence_desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.objects.t_objects_config.refence_desc)
}
inline std::string* objects_t_objects_config::_internal_mutable_refence_desc() {
  _has_bits_[0] |= 0x00000040u;
  return refence_desc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* objects_t_objects_config::release_refence_desc() {
  // @@protoc_insertion_point(field_release:pb.objects.t_objects_config.refence_desc)
  if (!_internal_has_refence_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return refence_desc_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void objects_t_objects_config::set_allocated_refence_desc(std::string* refence_desc) {
  if (refence_desc != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  refence_desc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), refence_desc);
  // @@protoc_insertion_point(field_set_allocated:pb.objects.t_objects_config.refence_desc)
}

// required string type_desc = 17;
inline bool objects_t_objects_config::_internal_has_type_desc() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_type_desc() const {
  return _internal_has_type_desc();
}
inline void objects_t_objects_config::clear_type_desc() {
  type_desc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& objects_t_objects_config::type_desc() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.type_desc)
  return _internal_type_desc();
}
inline void objects_t_objects_config::set_type_desc(const std::string& value) {
  _internal_set_type_desc(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.type_desc)
}
inline std::string* objects_t_objects_config::mutable_type_desc() {
  // @@protoc_insertion_point(field_mutable:pb.objects.t_objects_config.type_desc)
  return _internal_mutable_type_desc();
}
inline const std::string& objects_t_objects_config::_internal_type_desc() const {
  return type_desc_.GetNoArena();
}
inline void objects_t_objects_config::_internal_set_type_desc(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  type_desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void objects_t_objects_config::set_type_desc(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  type_desc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.objects.t_objects_config.type_desc)
}
inline void objects_t_objects_config::set_type_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  type_desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.objects.t_objects_config.type_desc)
}
inline void objects_t_objects_config::set_type_desc(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  type_desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.objects.t_objects_config.type_desc)
}
inline std::string* objects_t_objects_config::_internal_mutable_type_desc() {
  _has_bits_[0] |= 0x00000080u;
  return type_desc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* objects_t_objects_config::release_type_desc() {
  // @@protoc_insertion_point(field_release:pb.objects.t_objects_config.type_desc)
  if (!_internal_has_type_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return type_desc_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void objects_t_objects_config::set_allocated_type_desc(std::string* type_desc) {
  if (type_desc != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  type_desc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type_desc);
  // @@protoc_insertion_point(field_set_allocated:pb.objects.t_objects_config.type_desc)
}

// required uint32 promptuse = 18;
inline bool objects_t_objects_config::_internal_has_promptuse() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_promptuse() const {
  return _internal_has_promptuse();
}
inline void objects_t_objects_config::clear_promptuse() {
  promptuse_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_promptuse() const {
  return promptuse_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::promptuse() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.promptuse)
  return _internal_promptuse();
}
inline void objects_t_objects_config::_internal_set_promptuse(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  promptuse_ = value;
}
inline void objects_t_objects_config::set_promptuse(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_promptuse(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.promptuse)
}

// required uint32 isusebind = 19;
inline bool objects_t_objects_config::_internal_has_isusebind() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_isusebind() const {
  return _internal_has_isusebind();
}
inline void objects_t_objects_config::clear_isusebind() {
  isusebind_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_isusebind() const {
  return isusebind_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::isusebind() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.isusebind)
  return _internal_isusebind();
}
inline void objects_t_objects_config::_internal_set_isusebind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  isusebind_ = value;
}
inline void objects_t_objects_config::set_isusebind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_isusebind(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.isusebind)
}

// required uint32 cdgroup = 20;
inline bool objects_t_objects_config::_internal_has_cdgroup() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_cdgroup() const {
  return _internal_has_cdgroup();
}
inline void objects_t_objects_config::clear_cdgroup() {
  cdgroup_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_cdgroup() const {
  return cdgroup_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::cdgroup() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.cdgroup)
  return _internal_cdgroup();
}
inline void objects_t_objects_config::_internal_set_cdgroup(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  cdgroup_ = value;
}
inline void objects_t_objects_config::set_cdgroup(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cdgroup(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.cdgroup)
}

// required uint32 cdgrouptime = 21;
inline bool objects_t_objects_config::_internal_has_cdgrouptime() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_cdgrouptime() const {
  return _internal_has_cdgrouptime();
}
inline void objects_t_objects_config::clear_cdgrouptime() {
  cdgrouptime_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_cdgrouptime() const {
  return cdgrouptime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::cdgrouptime() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.cdgrouptime)
  return _internal_cdgrouptime();
}
inline void objects_t_objects_config::_internal_set_cdgrouptime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  cdgrouptime_ = value;
}
inline void objects_t_objects_config::set_cdgrouptime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cdgrouptime(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.cdgrouptime)
}

// required uint32 cdtime = 22;
inline bool objects_t_objects_config::_internal_has_cdtime() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_cdtime() const {
  return _internal_has_cdtime();
}
inline void objects_t_objects_config::clear_cdtime() {
  cdtime_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_cdtime() const {
  return cdtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::cdtime() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.cdtime)
  return _internal_cdtime();
}
inline void objects_t_objects_config::_internal_set_cdtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  cdtime_ = value;
}
inline void objects_t_objects_config::set_cdtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cdtime(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.cdtime)
}

// required uint32 sell_price = 23;
inline bool objects_t_objects_config::_internal_has_sell_price() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_sell_price() const {
  return _internal_has_sell_price();
}
inline void objects_t_objects_config::clear_sell_price() {
  sell_price_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_sell_price() const {
  return sell_price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::sell_price() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.sell_price)
  return _internal_sell_price();
}
inline void objects_t_objects_config::_internal_set_sell_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  sell_price_ = value;
}
inline void objects_t_objects_config::set_sell_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sell_price(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.sell_price)
}

// required string state_limit = 24;
inline bool objects_t_objects_config::_internal_has_state_limit() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_state_limit() const {
  return _internal_has_state_limit();
}
inline void objects_t_objects_config::clear_state_limit() {
  state_limit_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& objects_t_objects_config::state_limit() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.state_limit)
  return _internal_state_limit();
}
inline void objects_t_objects_config::set_state_limit(const std::string& value) {
  _internal_set_state_limit(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.state_limit)
}
inline std::string* objects_t_objects_config::mutable_state_limit() {
  // @@protoc_insertion_point(field_mutable:pb.objects.t_objects_config.state_limit)
  return _internal_mutable_state_limit();
}
inline const std::string& objects_t_objects_config::_internal_state_limit() const {
  return state_limit_.GetNoArena();
}
inline void objects_t_objects_config::_internal_set_state_limit(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  state_limit_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void objects_t_objects_config::set_state_limit(std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  state_limit_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.objects.t_objects_config.state_limit)
}
inline void objects_t_objects_config::set_state_limit(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  state_limit_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.objects.t_objects_config.state_limit)
}
inline void objects_t_objects_config::set_state_limit(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000100u;
  state_limit_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.objects.t_objects_config.state_limit)
}
inline std::string* objects_t_objects_config::_internal_mutable_state_limit() {
  _has_bits_[0] |= 0x00000100u;
  return state_limit_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* objects_t_objects_config::release_state_limit() {
  // @@protoc_insertion_point(field_release:pb.objects.t_objects_config.state_limit)
  if (!_internal_has_state_limit()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return state_limit_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void objects_t_objects_config::set_allocated_state_limit(std::string* state_limit) {
  if (state_limit != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  state_limit_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), state_limit);
  // @@protoc_insertion_point(field_set_allocated:pb.objects.t_objects_config.state_limit)
}

// required uint32 treasure = 25;
inline bool objects_t_objects_config::_internal_has_treasure() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_treasure() const {
  return _internal_has_treasure();
}
inline void objects_t_objects_config::clear_treasure() {
  treasure_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_treasure() const {
  return treasure_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::treasure() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.treasure)
  return _internal_treasure();
}
inline void objects_t_objects_config::_internal_set_treasure(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  treasure_ = value;
}
inline void objects_t_objects_config::set_treasure(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_treasure(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.treasure)
}

// required string recommandprice = 26;
inline bool objects_t_objects_config::_internal_has_recommandprice() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_recommandprice() const {
  return _internal_has_recommandprice();
}
inline void objects_t_objects_config::clear_recommandprice() {
  recommandprice_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000200u;
}
inline const std::string& objects_t_objects_config::recommandprice() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.recommandprice)
  return _internal_recommandprice();
}
inline void objects_t_objects_config::set_recommandprice(const std::string& value) {
  _internal_set_recommandprice(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.recommandprice)
}
inline std::string* objects_t_objects_config::mutable_recommandprice() {
  // @@protoc_insertion_point(field_mutable:pb.objects.t_objects_config.recommandprice)
  return _internal_mutable_recommandprice();
}
inline const std::string& objects_t_objects_config::_internal_recommandprice() const {
  return recommandprice_.GetNoArena();
}
inline void objects_t_objects_config::_internal_set_recommandprice(const std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  recommandprice_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void objects_t_objects_config::set_recommandprice(std::string&& value) {
  _has_bits_[0] |= 0x00000200u;
  recommandprice_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.objects.t_objects_config.recommandprice)
}
inline void objects_t_objects_config::set_recommandprice(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000200u;
  recommandprice_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.objects.t_objects_config.recommandprice)
}
inline void objects_t_objects_config::set_recommandprice(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000200u;
  recommandprice_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.objects.t_objects_config.recommandprice)
}
inline std::string* objects_t_objects_config::_internal_mutable_recommandprice() {
  _has_bits_[0] |= 0x00000200u;
  return recommandprice_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* objects_t_objects_config::release_recommandprice() {
  // @@protoc_insertion_point(field_release:pb.objects.t_objects_config.recommandprice)
  if (!_internal_has_recommandprice()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return recommandprice_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void objects_t_objects_config::set_allocated_recommandprice(std::string* recommandprice) {
  if (recommandprice != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  recommandprice_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), recommandprice);
  // @@protoc_insertion_point(field_set_allocated:pb.objects.t_objects_config.recommandprice)
}

// required uint32 isdelete = 27;
inline bool objects_t_objects_config::_internal_has_isdelete() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool objects_t_objects_config::has_isdelete() const {
  return _internal_has_isdelete();
}
inline void objects_t_objects_config::clear_isdelete() {
  isdelete_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::_internal_isdelete() const {
  return isdelete_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 objects_t_objects_config::isdelete() const {
  // @@protoc_insertion_point(field_get:pb.objects.t_objects_config.isdelete)
  return _internal_isdelete();
}
inline void objects_t_objects_config::_internal_set_isdelete(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  isdelete_ = value;
}
inline void objects_t_objects_config::set_isdelete(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_isdelete(value);
  // @@protoc_insertion_point(field_set:pb.objects.t_objects_config.isdelete)
}

// -------------------------------------------------------------------

// objects

// repeated .pb.objects.t_objects_config datas = 1;
inline int objects::_internal_datas_size() const {
  return datas_.size();
}
inline int objects::datas_size() const {
  return _internal_datas_size();
}
inline void objects::clear_datas() {
  datas_.Clear();
}
inline ::pb::objects_t_objects_config* objects::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:pb.objects.datas)
  return datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::objects_t_objects_config >*
objects::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:pb.objects.datas)
  return &datas_;
}
inline const ::pb::objects_t_objects_config& objects::_internal_datas(int index) const {
  return datas_.Get(index);
}
inline const ::pb::objects_t_objects_config& objects::datas(int index) const {
  // @@protoc_insertion_point(field_get:pb.objects.datas)
  return _internal_datas(index);
}
inline ::pb::objects_t_objects_config* objects::_internal_add_datas() {
  return datas_.Add();
}
inline ::pb::objects_t_objects_config* objects::add_datas() {
  // @@protoc_insertion_point(field_add:pb.objects.datas)
  return _internal_add_datas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::objects_t_objects_config >&
objects::datas() const {
  // @@protoc_insertion_point(field_list:pb.objects.datas)
  return datas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_objects_2eproto
