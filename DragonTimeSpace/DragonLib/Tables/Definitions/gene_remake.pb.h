// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gene_remake.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gene_5fremake_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_gene_5fremake_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gene_5fremake_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gene_5fremake_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gene_5fremake_2eproto;
namespace pb {
class gene_remake;
class gene_remakeDefaultTypeInternal;
extern gene_remakeDefaultTypeInternal _gene_remake_default_instance_;
class gene_remake_t_gene_remake;
class gene_remake_t_gene_remakeDefaultTypeInternal;
extern gene_remake_t_gene_remakeDefaultTypeInternal _gene_remake_t_gene_remake_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::gene_remake* Arena::CreateMaybeMessage<::pb::gene_remake>(Arena*);
template<> ::pb::gene_remake_t_gene_remake* Arena::CreateMaybeMessage<::pb::gene_remake_t_gene_remake>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

// ===================================================================

class gene_remake_t_gene_remake :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.gene_remake.t_gene_remake) */ {
 public:
  gene_remake_t_gene_remake();
  virtual ~gene_remake_t_gene_remake();

  gene_remake_t_gene_remake(const gene_remake_t_gene_remake& from);
  gene_remake_t_gene_remake(gene_remake_t_gene_remake&& from) noexcept
    : gene_remake_t_gene_remake() {
    *this = ::std::move(from);
  }

  inline gene_remake_t_gene_remake& operator=(const gene_remake_t_gene_remake& from) {
    CopyFrom(from);
    return *this;
  }
  inline gene_remake_t_gene_remake& operator=(gene_remake_t_gene_remake&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const gene_remake_t_gene_remake& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gene_remake_t_gene_remake* internal_default_instance() {
    return reinterpret_cast<const gene_remake_t_gene_remake*>(
               &_gene_remake_t_gene_remake_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(gene_remake_t_gene_remake& a, gene_remake_t_gene_remake& b) {
    a.Swap(&b);
  }
  inline void Swap(gene_remake_t_gene_remake* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline gene_remake_t_gene_remake* New() const final {
    return CreateMaybeMessage<gene_remake_t_gene_remake>(nullptr);
  }

  gene_remake_t_gene_remake* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<gene_remake_t_gene_remake>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const gene_remake_t_gene_remake& from);
  void MergeFrom(const gene_remake_t_gene_remake& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gene_remake_t_gene_remake* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.gene_remake.t_gene_remake";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gene_5fremake_2eproto);
    return ::descriptor_table_gene_5fremake_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCostFieldNumber = 8,
    kStarAttributeFieldNumber = 15,
    kConsumeFieldNumber = 16,
    kTbxidFieldNumber = 1,
    kIdFieldNumber = 2,
    kTypeFieldNumber = 3,
    kLevelFieldNumber = 4,
    kMaxexpFieldNumber = 5,
    kUserLevellimitFieldNumber = 6,
    kStageCountFieldNumber = 7,
    kAddexpFieldNumber = 9,
    kPattFieldNumber = 10,
    kMattFieldNumber = 11,
    kPdefenceFieldNumber = 12,
    kMdefenceFieldNumber = 13,
    kMaxhpFieldNumber = 14,
  };
  // required string cost = 8;
  bool has_cost() const;
  private:
  bool _internal_has_cost() const;
  public:
  void clear_cost();
  const std::string& cost() const;
  void set_cost(const std::string& value);
  void set_cost(std::string&& value);
  void set_cost(const char* value);
  void set_cost(const char* value, size_t size);
  std::string* mutable_cost();
  std::string* release_cost();
  void set_allocated_cost(std::string* cost);
  private:
  const std::string& _internal_cost() const;
  void _internal_set_cost(const std::string& value);
  std::string* _internal_mutable_cost();
  public:

  // required string star_attribute = 15;
  bool has_star_attribute() const;
  private:
  bool _internal_has_star_attribute() const;
  public:
  void clear_star_attribute();
  const std::string& star_attribute() const;
  void set_star_attribute(const std::string& value);
  void set_star_attribute(std::string&& value);
  void set_star_attribute(const char* value);
  void set_star_attribute(const char* value, size_t size);
  std::string* mutable_star_attribute();
  std::string* release_star_attribute();
  void set_allocated_star_attribute(std::string* star_attribute);
  private:
  const std::string& _internal_star_attribute() const;
  void _internal_set_star_attribute(const std::string& value);
  std::string* _internal_mutable_star_attribute();
  public:

  // required string consume = 16;
  bool has_consume() const;
  private:
  bool _internal_has_consume() const;
  public:
  void clear_consume();
  const std::string& consume() const;
  void set_consume(const std::string& value);
  void set_consume(std::string&& value);
  void set_consume(const char* value);
  void set_consume(const char* value, size_t size);
  std::string* mutable_consume();
  std::string* release_consume();
  void set_allocated_consume(std::string* consume);
  private:
  const std::string& _internal_consume() const;
  void _internal_set_consume(const std::string& value);
  std::string* _internal_mutable_consume();
  public:

  // required uint32 tbxid = 1 [default = 0];
  bool has_tbxid() const;
  private:
  bool _internal_has_tbxid() const;
  public:
  void clear_tbxid();
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid() const;
  void set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tbxid() const;
  void _internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 id = 2 [default = 0];
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 type = 3;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 level = 4;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 maxexp = 5;
  bool has_maxexp() const;
  private:
  bool _internal_has_maxexp() const;
  public:
  void clear_maxexp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxexp() const;
  void set_maxexp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxexp() const;
  void _internal_set_maxexp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 user_levellimit = 6;
  bool has_user_levellimit() const;
  private:
  bool _internal_has_user_levellimit() const;
  public:
  void clear_user_levellimit();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_levellimit() const;
  void set_user_levellimit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_levellimit() const;
  void _internal_set_user_levellimit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 stage_count = 7;
  bool has_stage_count() const;
  private:
  bool _internal_has_stage_count() const;
  public:
  void clear_stage_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 stage_count() const;
  void set_stage_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stage_count() const;
  void _internal_set_stage_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 addexp = 9;
  bool has_addexp() const;
  private:
  bool _internal_has_addexp() const;
  public:
  void clear_addexp();
  ::PROTOBUF_NAMESPACE_ID::uint32 addexp() const;
  void set_addexp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_addexp() const;
  void _internal_set_addexp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 patt = 10;
  bool has_patt() const;
  private:
  bool _internal_has_patt() const;
  public:
  void clear_patt();
  ::PROTOBUF_NAMESPACE_ID::uint32 patt() const;
  void set_patt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_patt() const;
  void _internal_set_patt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 matt = 11;
  bool has_matt() const;
  private:
  bool _internal_has_matt() const;
  public:
  void clear_matt();
  ::PROTOBUF_NAMESPACE_ID::uint32 matt() const;
  void set_matt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_matt() const;
  void _internal_set_matt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 pdefence = 12;
  bool has_pdefence() const;
  private:
  bool _internal_has_pdefence() const;
  public:
  void clear_pdefence();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdefence() const;
  void set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdefence() const;
  void _internal_set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 mdefence = 13;
  bool has_mdefence() const;
  private:
  bool _internal_has_mdefence() const;
  public:
  void clear_mdefence();
  ::PROTOBUF_NAMESPACE_ID::uint32 mdefence() const;
  void set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mdefence() const;
  void _internal_set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 maxhp = 14;
  bool has_maxhp() const;
  private:
  bool _internal_has_maxhp() const;
  public:
  void clear_maxhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp() const;
  void set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxhp() const;
  void _internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.gene_remake.t_gene_remake)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cost_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr star_attribute_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr consume_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxexp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_levellimit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stage_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 addexp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 patt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 matt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdefence_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mdefence_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp_;
  friend struct ::TableStruct_gene_5fremake_2eproto;
};
// -------------------------------------------------------------------

class gene_remake :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.gene_remake) */ {
 public:
  gene_remake();
  virtual ~gene_remake();

  gene_remake(const gene_remake& from);
  gene_remake(gene_remake&& from) noexcept
    : gene_remake() {
    *this = ::std::move(from);
  }

  inline gene_remake& operator=(const gene_remake& from) {
    CopyFrom(from);
    return *this;
  }
  inline gene_remake& operator=(gene_remake&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const gene_remake& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const gene_remake* internal_default_instance() {
    return reinterpret_cast<const gene_remake*>(
               &_gene_remake_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(gene_remake& a, gene_remake& b) {
    a.Swap(&b);
  }
  inline void Swap(gene_remake* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline gene_remake* New() const final {
    return CreateMaybeMessage<gene_remake>(nullptr);
  }

  gene_remake* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<gene_remake>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const gene_remake& from);
  void MergeFrom(const gene_remake& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gene_remake* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.gene_remake";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gene_5fremake_2eproto);
    return ::descriptor_table_gene_5fremake_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef gene_remake_t_gene_remake t_gene_remake;

  // accessors -------------------------------------------------------

  enum : int {
    kDatasFieldNumber = 1,
  };
  // repeated .pb.gene_remake.t_gene_remake datas = 1;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::pb::gene_remake_t_gene_remake* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::gene_remake_t_gene_remake >*
      mutable_datas();
  private:
  const ::pb::gene_remake_t_gene_remake& _internal_datas(int index) const;
  ::pb::gene_remake_t_gene_remake* _internal_add_datas();
  public:
  const ::pb::gene_remake_t_gene_remake& datas(int index) const;
  ::pb::gene_remake_t_gene_remake* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::gene_remake_t_gene_remake >&
      datas() const;

  // @@protoc_insertion_point(class_scope:pb.gene_remake)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::gene_remake_t_gene_remake > datas_;
  friend struct ::TableStruct_gene_5fremake_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// gene_remake_t_gene_remake

// required uint32 tbxid = 1 [default = 0];
inline bool gene_remake_t_gene_remake::_internal_has_tbxid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_tbxid() const {
  return _internal_has_tbxid();
}
inline void gene_remake_t_gene_remake::clear_tbxid() {
  tbxid_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_tbxid() const {
  return tbxid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::tbxid() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.tbxid)
  return _internal_tbxid();
}
inline void gene_remake_t_gene_remake::_internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  tbxid_ = value;
}
inline void gene_remake_t_gene_remake::set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tbxid(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.tbxid)
}

// required uint32 id = 2 [default = 0];
inline bool gene_remake_t_gene_remake::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_id() const {
  return _internal_has_id();
}
inline void gene_remake_t_gene_remake::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::id() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.id)
  return _internal_id();
}
inline void gene_remake_t_gene_remake::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  id_ = value;
}
inline void gene_remake_t_gene_remake::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.id)
}

// required uint32 type = 3;
inline bool gene_remake_t_gene_remake::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_type() const {
  return _internal_has_type();
}
inline void gene_remake_t_gene_remake::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::type() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.type)
  return _internal_type();
}
inline void gene_remake_t_gene_remake::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  type_ = value;
}
inline void gene_remake_t_gene_remake::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.type)
}

// required uint32 level = 4;
inline bool gene_remake_t_gene_remake::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_level() const {
  return _internal_has_level();
}
inline void gene_remake_t_gene_remake::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::level() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.level)
  return _internal_level();
}
inline void gene_remake_t_gene_remake::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  level_ = value;
}
inline void gene_remake_t_gene_remake::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.level)
}

// required uint32 maxexp = 5;
inline bool gene_remake_t_gene_remake::_internal_has_maxexp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_maxexp() const {
  return _internal_has_maxexp();
}
inline void gene_remake_t_gene_remake::clear_maxexp() {
  maxexp_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_maxexp() const {
  return maxexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::maxexp() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.maxexp)
  return _internal_maxexp();
}
inline void gene_remake_t_gene_remake::_internal_set_maxexp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  maxexp_ = value;
}
inline void gene_remake_t_gene_remake::set_maxexp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxexp(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.maxexp)
}

// required uint32 user_levellimit = 6;
inline bool gene_remake_t_gene_remake::_internal_has_user_levellimit() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_user_levellimit() const {
  return _internal_has_user_levellimit();
}
inline void gene_remake_t_gene_remake::clear_user_levellimit() {
  user_levellimit_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_user_levellimit() const {
  return user_levellimit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::user_levellimit() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.user_levellimit)
  return _internal_user_levellimit();
}
inline void gene_remake_t_gene_remake::_internal_set_user_levellimit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  user_levellimit_ = value;
}
inline void gene_remake_t_gene_remake::set_user_levellimit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_levellimit(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.user_levellimit)
}

// required uint32 stage_count = 7;
inline bool gene_remake_t_gene_remake::_internal_has_stage_count() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_stage_count() const {
  return _internal_has_stage_count();
}
inline void gene_remake_t_gene_remake::clear_stage_count() {
  stage_count_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_stage_count() const {
  return stage_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::stage_count() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.stage_count)
  return _internal_stage_count();
}
inline void gene_remake_t_gene_remake::_internal_set_stage_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  stage_count_ = value;
}
inline void gene_remake_t_gene_remake::set_stage_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stage_count(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.stage_count)
}

// required string cost = 8;
inline bool gene_remake_t_gene_remake::_internal_has_cost() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_cost() const {
  return _internal_has_cost();
}
inline void gene_remake_t_gene_remake::clear_cost() {
  cost_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& gene_remake_t_gene_remake::cost() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.cost)
  return _internal_cost();
}
inline void gene_remake_t_gene_remake::set_cost(const std::string& value) {
  _internal_set_cost(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.cost)
}
inline std::string* gene_remake_t_gene_remake::mutable_cost() {
  // @@protoc_insertion_point(field_mutable:pb.gene_remake.t_gene_remake.cost)
  return _internal_mutable_cost();
}
inline const std::string& gene_remake_t_gene_remake::_internal_cost() const {
  return cost_.GetNoArena();
}
inline void gene_remake_t_gene_remake::_internal_set_cost(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  cost_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void gene_remake_t_gene_remake::set_cost(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  cost_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.gene_remake.t_gene_remake.cost)
}
inline void gene_remake_t_gene_remake::set_cost(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  cost_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.gene_remake.t_gene_remake.cost)
}
inline void gene_remake_t_gene_remake::set_cost(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  cost_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.gene_remake.t_gene_remake.cost)
}
inline std::string* gene_remake_t_gene_remake::_internal_mutable_cost() {
  _has_bits_[0] |= 0x00000001u;
  return cost_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* gene_remake_t_gene_remake::release_cost() {
  // @@protoc_insertion_point(field_release:pb.gene_remake.t_gene_remake.cost)
  if (!_internal_has_cost()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return cost_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void gene_remake_t_gene_remake::set_allocated_cost(std::string* cost) {
  if (cost != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cost_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cost);
  // @@protoc_insertion_point(field_set_allocated:pb.gene_remake.t_gene_remake.cost)
}

// required uint32 addexp = 9;
inline bool gene_remake_t_gene_remake::_internal_has_addexp() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_addexp() const {
  return _internal_has_addexp();
}
inline void gene_remake_t_gene_remake::clear_addexp() {
  addexp_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_addexp() const {
  return addexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::addexp() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.addexp)
  return _internal_addexp();
}
inline void gene_remake_t_gene_remake::_internal_set_addexp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  addexp_ = value;
}
inline void gene_remake_t_gene_remake::set_addexp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_addexp(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.addexp)
}

// required uint32 patt = 10;
inline bool gene_remake_t_gene_remake::_internal_has_patt() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_patt() const {
  return _internal_has_patt();
}
inline void gene_remake_t_gene_remake::clear_patt() {
  patt_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_patt() const {
  return patt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::patt() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.patt)
  return _internal_patt();
}
inline void gene_remake_t_gene_remake::_internal_set_patt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  patt_ = value;
}
inline void gene_remake_t_gene_remake::set_patt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_patt(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.patt)
}

// required uint32 matt = 11;
inline bool gene_remake_t_gene_remake::_internal_has_matt() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_matt() const {
  return _internal_has_matt();
}
inline void gene_remake_t_gene_remake::clear_matt() {
  matt_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_matt() const {
  return matt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::matt() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.matt)
  return _internal_matt();
}
inline void gene_remake_t_gene_remake::_internal_set_matt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  matt_ = value;
}
inline void gene_remake_t_gene_remake::set_matt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_matt(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.matt)
}

// required uint32 pdefence = 12;
inline bool gene_remake_t_gene_remake::_internal_has_pdefence() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_pdefence() const {
  return _internal_has_pdefence();
}
inline void gene_remake_t_gene_remake::clear_pdefence() {
  pdefence_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_pdefence() const {
  return pdefence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::pdefence() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.pdefence)
  return _internal_pdefence();
}
inline void gene_remake_t_gene_remake::_internal_set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  pdefence_ = value;
}
inline void gene_remake_t_gene_remake::set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdefence(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.pdefence)
}

// required uint32 mdefence = 13;
inline bool gene_remake_t_gene_remake::_internal_has_mdefence() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_mdefence() const {
  return _internal_has_mdefence();
}
inline void gene_remake_t_gene_remake::clear_mdefence() {
  mdefence_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_mdefence() const {
  return mdefence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::mdefence() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.mdefence)
  return _internal_mdefence();
}
inline void gene_remake_t_gene_remake::_internal_set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  mdefence_ = value;
}
inline void gene_remake_t_gene_remake::set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mdefence(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.mdefence)
}

// required uint32 maxhp = 14;
inline bool gene_remake_t_gene_remake::_internal_has_maxhp() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_maxhp() const {
  return _internal_has_maxhp();
}
inline void gene_remake_t_gene_remake::clear_maxhp() {
  maxhp_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::_internal_maxhp() const {
  return maxhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 gene_remake_t_gene_remake::maxhp() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.maxhp)
  return _internal_maxhp();
}
inline void gene_remake_t_gene_remake::_internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  maxhp_ = value;
}
inline void gene_remake_t_gene_remake::set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxhp(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.maxhp)
}

// required string star_attribute = 15;
inline bool gene_remake_t_gene_remake::_internal_has_star_attribute() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_star_attribute() const {
  return _internal_has_star_attribute();
}
inline void gene_remake_t_gene_remake::clear_star_attribute() {
  star_attribute_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& gene_remake_t_gene_remake::star_attribute() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.star_attribute)
  return _internal_star_attribute();
}
inline void gene_remake_t_gene_remake::set_star_attribute(const std::string& value) {
  _internal_set_star_attribute(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.star_attribute)
}
inline std::string* gene_remake_t_gene_remake::mutable_star_attribute() {
  // @@protoc_insertion_point(field_mutable:pb.gene_remake.t_gene_remake.star_attribute)
  return _internal_mutable_star_attribute();
}
inline const std::string& gene_remake_t_gene_remake::_internal_star_attribute() const {
  return star_attribute_.GetNoArena();
}
inline void gene_remake_t_gene_remake::_internal_set_star_attribute(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  star_attribute_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void gene_remake_t_gene_remake::set_star_attribute(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  star_attribute_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.gene_remake.t_gene_remake.star_attribute)
}
inline void gene_remake_t_gene_remake::set_star_attribute(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  star_attribute_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.gene_remake.t_gene_remake.star_attribute)
}
inline void gene_remake_t_gene_remake::set_star_attribute(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  star_attribute_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.gene_remake.t_gene_remake.star_attribute)
}
inline std::string* gene_remake_t_gene_remake::_internal_mutable_star_attribute() {
  _has_bits_[0] |= 0x00000002u;
  return star_attribute_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* gene_remake_t_gene_remake::release_star_attribute() {
  // @@protoc_insertion_point(field_release:pb.gene_remake.t_gene_remake.star_attribute)
  if (!_internal_has_star_attribute()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return star_attribute_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void gene_remake_t_gene_remake::set_allocated_star_attribute(std::string* star_attribute) {
  if (star_attribute != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  star_attribute_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), star_attribute);
  // @@protoc_insertion_point(field_set_allocated:pb.gene_remake.t_gene_remake.star_attribute)
}

// required string consume = 16;
inline bool gene_remake_t_gene_remake::_internal_has_consume() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool gene_remake_t_gene_remake::has_consume() const {
  return _internal_has_consume();
}
inline void gene_remake_t_gene_remake::clear_consume() {
  consume_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& gene_remake_t_gene_remake::consume() const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.t_gene_remake.consume)
  return _internal_consume();
}
inline void gene_remake_t_gene_remake::set_consume(const std::string& value) {
  _internal_set_consume(value);
  // @@protoc_insertion_point(field_set:pb.gene_remake.t_gene_remake.consume)
}
inline std::string* gene_remake_t_gene_remake::mutable_consume() {
  // @@protoc_insertion_point(field_mutable:pb.gene_remake.t_gene_remake.consume)
  return _internal_mutable_consume();
}
inline const std::string& gene_remake_t_gene_remake::_internal_consume() const {
  return consume_.GetNoArena();
}
inline void gene_remake_t_gene_remake::_internal_set_consume(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  consume_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void gene_remake_t_gene_remake::set_consume(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  consume_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.gene_remake.t_gene_remake.consume)
}
inline void gene_remake_t_gene_remake::set_consume(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  consume_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.gene_remake.t_gene_remake.consume)
}
inline void gene_remake_t_gene_remake::set_consume(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  consume_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.gene_remake.t_gene_remake.consume)
}
inline std::string* gene_remake_t_gene_remake::_internal_mutable_consume() {
  _has_bits_[0] |= 0x00000004u;
  return consume_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* gene_remake_t_gene_remake::release_consume() {
  // @@protoc_insertion_point(field_release:pb.gene_remake.t_gene_remake.consume)
  if (!_internal_has_consume()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return consume_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void gene_remake_t_gene_remake::set_allocated_consume(std::string* consume) {
  if (consume != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  consume_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), consume);
  // @@protoc_insertion_point(field_set_allocated:pb.gene_remake.t_gene_remake.consume)
}

// -------------------------------------------------------------------

// gene_remake

// repeated .pb.gene_remake.t_gene_remake datas = 1;
inline int gene_remake::_internal_datas_size() const {
  return datas_.size();
}
inline int gene_remake::datas_size() const {
  return _internal_datas_size();
}
inline void gene_remake::clear_datas() {
  datas_.Clear();
}
inline ::pb::gene_remake_t_gene_remake* gene_remake::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:pb.gene_remake.datas)
  return datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::gene_remake_t_gene_remake >*
gene_remake::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:pb.gene_remake.datas)
  return &datas_;
}
inline const ::pb::gene_remake_t_gene_remake& gene_remake::_internal_datas(int index) const {
  return datas_.Get(index);
}
inline const ::pb::gene_remake_t_gene_remake& gene_remake::datas(int index) const {
  // @@protoc_insertion_point(field_get:pb.gene_remake.datas)
  return _internal_datas(index);
}
inline ::pb::gene_remake_t_gene_remake* gene_remake::_internal_add_datas() {
  return datas_.Add();
}
inline ::pb::gene_remake_t_gene_remake* gene_remake::add_datas() {
  // @@protoc_insertion_point(field_add:pb.gene_remake.datas)
  return _internal_add_datas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::gene_remake_t_gene_remake >&
gene_remake::datas() const {
  // @@protoc_insertion_point(field_list:pb.gene_remake.datas)
  return datas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_gene_5fremake_2eproto
