// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: charstate.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_charstate_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_charstate_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_charstate_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_charstate_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_charstate_2eproto;
namespace pb {
class charstate;
class charstateDefaultTypeInternal;
extern charstateDefaultTypeInternal _charstate_default_instance_;
class charstate_t_charstate_config;
class charstate_t_charstate_configDefaultTypeInternal;
extern charstate_t_charstate_configDefaultTypeInternal _charstate_t_charstate_config_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::charstate* Arena::CreateMaybeMessage<::pb::charstate>(Arena*);
template<> ::pb::charstate_t_charstate_config* Arena::CreateMaybeMessage<::pb::charstate_t_charstate_config>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

// ===================================================================

class charstate_t_charstate_config :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.charstate.t_charstate_config) */ {
 public:
  charstate_t_charstate_config();
  virtual ~charstate_t_charstate_config();

  charstate_t_charstate_config(const charstate_t_charstate_config& from);
  charstate_t_charstate_config(charstate_t_charstate_config&& from) noexcept
    : charstate_t_charstate_config() {
    *this = ::std::move(from);
  }

  inline charstate_t_charstate_config& operator=(const charstate_t_charstate_config& from) {
    CopyFrom(from);
    return *this;
  }
  inline charstate_t_charstate_config& operator=(charstate_t_charstate_config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const charstate_t_charstate_config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const charstate_t_charstate_config* internal_default_instance() {
    return reinterpret_cast<const charstate_t_charstate_config*>(
               &_charstate_t_charstate_config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(charstate_t_charstate_config& a, charstate_t_charstate_config& b) {
    a.Swap(&b);
  }
  inline void Swap(charstate_t_charstate_config* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline charstate_t_charstate_config* New() const final {
    return CreateMaybeMessage<charstate_t_charstate_config>(nullptr);
  }

  charstate_t_charstate_config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<charstate_t_charstate_config>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const charstate_t_charstate_config& from);
  void MergeFrom(const charstate_t_charstate_config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(charstate_t_charstate_config* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.charstate.t_charstate_config";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_charstate_2eproto);
    return ::descriptor_table_charstate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kValueFieldNumber = 4,
    kBuffEffectFieldNumber = 16,
    kBuffIconFieldNumber = 17,
    kIntroduceFieldNumber = 20,
    kEndingEffectFieldNumber = 23,
    kTbxidFieldNumber = 1,
    kIdFieldNumber = 2,
    kBattleshowFieldNumber = 5,
    kGoodFieldNumber = 6,
    kAddtypeFieldNumber = 7,
    kReplacetypeFieldNumber = 8,
    kRemovetypeFieldNumber = 9,
    kAddlayerFieldNumber = 10,
    kResetTimeFieldNumber = 11,
    kAnimPriorityFieldNumber = 12,
    kAnimtypeFieldNumber = 13,
    kBuffAnimFieldNumber = 14,
    kRevertAnimFieldNumber = 15,
    kIconShowTypeFieldNumber = 18,
    kIconPriorityFieldNumber = 19,
    kControlTypeFieldNumber = 21,
    kBreakTypeFieldNumber = 22,
  };
  // required string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // required string value = 4;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // required string BuffEffect = 16;
  bool has_buffeffect() const;
  private:
  bool _internal_has_buffeffect() const;
  public:
  void clear_buffeffect();
  const std::string& buffeffect() const;
  void set_buffeffect(const std::string& value);
  void set_buffeffect(std::string&& value);
  void set_buffeffect(const char* value);
  void set_buffeffect(const char* value, size_t size);
  std::string* mutable_buffeffect();
  std::string* release_buffeffect();
  void set_allocated_buffeffect(std::string* buffeffect);
  private:
  const std::string& _internal_buffeffect() const;
  void _internal_set_buffeffect(const std::string& value);
  std::string* _internal_mutable_buffeffect();
  public:

  // required string BuffIcon = 17;
  bool has_bufficon() const;
  private:
  bool _internal_has_bufficon() const;
  public:
  void clear_bufficon();
  const std::string& bufficon() const;
  void set_bufficon(const std::string& value);
  void set_bufficon(std::string&& value);
  void set_bufficon(const char* value);
  void set_bufficon(const char* value, size_t size);
  std::string* mutable_bufficon();
  std::string* release_bufficon();
  void set_allocated_bufficon(std::string* bufficon);
  private:
  const std::string& _internal_bufficon() const;
  void _internal_set_bufficon(const std::string& value);
  std::string* _internal_mutable_bufficon();
  public:

  // required string introduce = 20;
  bool has_introduce() const;
  private:
  bool _internal_has_introduce() const;
  public:
  void clear_introduce();
  const std::string& introduce() const;
  void set_introduce(const std::string& value);
  void set_introduce(std::string&& value);
  void set_introduce(const char* value);
  void set_introduce(const char* value, size_t size);
  std::string* mutable_introduce();
  std::string* release_introduce();
  void set_allocated_introduce(std::string* introduce);
  private:
  const std::string& _internal_introduce() const;
  void _internal_set_introduce(const std::string& value);
  std::string* _internal_mutable_introduce();
  public:

  // required string EndingEffect = 23;
  bool has_endingeffect() const;
  private:
  bool _internal_has_endingeffect() const;
  public:
  void clear_endingeffect();
  const std::string& endingeffect() const;
  void set_endingeffect(const std::string& value);
  void set_endingeffect(std::string&& value);
  void set_endingeffect(const char* value);
  void set_endingeffect(const char* value, size_t size);
  std::string* mutable_endingeffect();
  std::string* release_endingeffect();
  void set_allocated_endingeffect(std::string* endingeffect);
  private:
  const std::string& _internal_endingeffect() const;
  void _internal_set_endingeffect(const std::string& value);
  std::string* _internal_mutable_endingeffect();
  public:

  // required uint32 tbxid = 1 [default = 0];
  bool has_tbxid() const;
  private:
  bool _internal_has_tbxid() const;
  public:
  void clear_tbxid();
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid() const;
  void set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tbxid() const;
  void _internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 id = 2 [default = 0];
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 battleshow = 5;
  bool has_battleshow() const;
  private:
  bool _internal_has_battleshow() const;
  public:
  void clear_battleshow();
  ::PROTOBUF_NAMESPACE_ID::uint32 battleshow() const;
  void set_battleshow(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_battleshow() const;
  void _internal_set_battleshow(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 good = 6;
  bool has_good() const;
  private:
  bool _internal_has_good() const;
  public:
  void clear_good();
  ::PROTOBUF_NAMESPACE_ID::uint32 good() const;
  void set_good(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_good() const;
  void _internal_set_good(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 addtype = 7;
  bool has_addtype() const;
  private:
  bool _internal_has_addtype() const;
  public:
  void clear_addtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 addtype() const;
  void set_addtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_addtype() const;
  void _internal_set_addtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 replacetype = 8;
  bool has_replacetype() const;
  private:
  bool _internal_has_replacetype() const;
  public:
  void clear_replacetype();
  ::PROTOBUF_NAMESPACE_ID::uint32 replacetype() const;
  void set_replacetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_replacetype() const;
  void _internal_set_replacetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 removetype = 9;
  bool has_removetype() const;
  private:
  bool _internal_has_removetype() const;
  public:
  void clear_removetype();
  ::PROTOBUF_NAMESPACE_ID::uint32 removetype() const;
  void set_removetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_removetype() const;
  void _internal_set_removetype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 addlayer = 10;
  bool has_addlayer() const;
  private:
  bool _internal_has_addlayer() const;
  public:
  void clear_addlayer();
  ::PROTOBUF_NAMESPACE_ID::uint32 addlayer() const;
  void set_addlayer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_addlayer() const;
  void _internal_set_addlayer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 reset_time = 11;
  bool has_reset_time() const;
  private:
  bool _internal_has_reset_time() const;
  public:
  void clear_reset_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_time() const;
  void set_reset_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reset_time() const;
  void _internal_set_reset_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 AnimPriority = 12;
  bool has_animpriority() const;
  private:
  bool _internal_has_animpriority() const;
  public:
  void clear_animpriority();
  ::PROTOBUF_NAMESPACE_ID::uint32 animpriority() const;
  void set_animpriority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_animpriority() const;
  void _internal_set_animpriority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 Animtype = 13;
  bool has_animtype() const;
  private:
  bool _internal_has_animtype() const;
  public:
  void clear_animtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 animtype() const;
  void set_animtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_animtype() const;
  void _internal_set_animtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 BuffAnim = 14;
  bool has_buffanim() const;
  private:
  bool _internal_has_buffanim() const;
  public:
  void clear_buffanim();
  ::PROTOBUF_NAMESPACE_ID::uint32 buffanim() const;
  void set_buffanim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_buffanim() const;
  void _internal_set_buffanim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 RevertAnim = 15;
  bool has_revertanim() const;
  private:
  bool _internal_has_revertanim() const;
  public:
  void clear_revertanim();
  ::PROTOBUF_NAMESPACE_ID::uint32 revertanim() const;
  void set_revertanim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_revertanim() const;
  void _internal_set_revertanim(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 IconShowType = 18;
  bool has_iconshowtype() const;
  private:
  bool _internal_has_iconshowtype() const;
  public:
  void clear_iconshowtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 iconshowtype() const;
  void set_iconshowtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_iconshowtype() const;
  void _internal_set_iconshowtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 IconPriority = 19;
  bool has_iconpriority() const;
  private:
  bool _internal_has_iconpriority() const;
  public:
  void clear_iconpriority();
  ::PROTOBUF_NAMESPACE_ID::uint32 iconpriority() const;
  void set_iconpriority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_iconpriority() const;
  void _internal_set_iconpriority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 ControlType = 21;
  bool has_controltype() const;
  private:
  bool _internal_has_controltype() const;
  public:
  void clear_controltype();
  ::PROTOBUF_NAMESPACE_ID::uint32 controltype() const;
  void set_controltype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_controltype() const;
  void _internal_set_controltype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 BreakType = 22;
  bool has_breaktype() const;
  private:
  bool _internal_has_breaktype() const;
  public:
  void clear_breaktype();
  ::PROTOBUF_NAMESPACE_ID::uint32 breaktype() const;
  void set_breaktype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_breaktype() const;
  void _internal_set_breaktype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.charstate.t_charstate_config)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buffeffect_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bufficon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr introduce_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr endingeffect_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 battleshow_;
  ::PROTOBUF_NAMESPACE_ID::uint32 good_;
  ::PROTOBUF_NAMESPACE_ID::uint32 addtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 replacetype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 removetype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 addlayer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reset_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 animpriority_;
  ::PROTOBUF_NAMESPACE_ID::uint32 animtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 buffanim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 revertanim_;
  ::PROTOBUF_NAMESPACE_ID::uint32 iconshowtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 iconpriority_;
  ::PROTOBUF_NAMESPACE_ID::uint32 controltype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 breaktype_;
  friend struct ::TableStruct_charstate_2eproto;
};
// -------------------------------------------------------------------

class charstate :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.charstate) */ {
 public:
  charstate();
  virtual ~charstate();

  charstate(const charstate& from);
  charstate(charstate&& from) noexcept
    : charstate() {
    *this = ::std::move(from);
  }

  inline charstate& operator=(const charstate& from) {
    CopyFrom(from);
    return *this;
  }
  inline charstate& operator=(charstate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const charstate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const charstate* internal_default_instance() {
    return reinterpret_cast<const charstate*>(
               &_charstate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(charstate& a, charstate& b) {
    a.Swap(&b);
  }
  inline void Swap(charstate* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline charstate* New() const final {
    return CreateMaybeMessage<charstate>(nullptr);
  }

  charstate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<charstate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const charstate& from);
  void MergeFrom(const charstate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(charstate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.charstate";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_charstate_2eproto);
    return ::descriptor_table_charstate_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef charstate_t_charstate_config t_charstate_config;

  // accessors -------------------------------------------------------

  enum : int {
    kDatasFieldNumber = 1,
  };
  // repeated .pb.charstate.t_charstate_config datas = 1;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::pb::charstate_t_charstate_config* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::charstate_t_charstate_config >*
      mutable_datas();
  private:
  const ::pb::charstate_t_charstate_config& _internal_datas(int index) const;
  ::pb::charstate_t_charstate_config* _internal_add_datas();
  public:
  const ::pb::charstate_t_charstate_config& datas(int index) const;
  ::pb::charstate_t_charstate_config* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::charstate_t_charstate_config >&
      datas() const;

  // @@protoc_insertion_point(class_scope:pb.charstate)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::charstate_t_charstate_config > datas_;
  friend struct ::TableStruct_charstate_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// charstate_t_charstate_config

// required uint32 tbxid = 1 [default = 0];
inline bool charstate_t_charstate_config::_internal_has_tbxid() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_tbxid() const {
  return _internal_has_tbxid();
}
inline void charstate_t_charstate_config::clear_tbxid() {
  tbxid_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_tbxid() const {
  return tbxid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::tbxid() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.tbxid)
  return _internal_tbxid();
}
inline void charstate_t_charstate_config::_internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  tbxid_ = value;
}
inline void charstate_t_charstate_config::set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tbxid(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.tbxid)
}

// required uint32 id = 2 [default = 0];
inline bool charstate_t_charstate_config::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_id() const {
  return _internal_has_id();
}
inline void charstate_t_charstate_config::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::id() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.id)
  return _internal_id();
}
inline void charstate_t_charstate_config::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  id_ = value;
}
inline void charstate_t_charstate_config::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.id)
}

// required string name = 3;
inline bool charstate_t_charstate_config::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_name() const {
  return _internal_has_name();
}
inline void charstate_t_charstate_config::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& charstate_t_charstate_config::name() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.name)
  return _internal_name();
}
inline void charstate_t_charstate_config::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.name)
}
inline std::string* charstate_t_charstate_config::mutable_name() {
  // @@protoc_insertion_point(field_mutable:pb.charstate.t_charstate_config.name)
  return _internal_mutable_name();
}
inline const std::string& charstate_t_charstate_config::_internal_name() const {
  return name_.GetNoArena();
}
inline void charstate_t_charstate_config::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void charstate_t_charstate_config::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.charstate.t_charstate_config.name)
}
inline void charstate_t_charstate_config::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.charstate.t_charstate_config.name)
}
inline void charstate_t_charstate_config::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.charstate.t_charstate_config.name)
}
inline std::string* charstate_t_charstate_config::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* charstate_t_charstate_config::release_name() {
  // @@protoc_insertion_point(field_release:pb.charstate.t_charstate_config.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void charstate_t_charstate_config::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.charstate.t_charstate_config.name)
}

// required string value = 4;
inline bool charstate_t_charstate_config::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_value() const {
  return _internal_has_value();
}
inline void charstate_t_charstate_config::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& charstate_t_charstate_config::value() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.value)
  return _internal_value();
}
inline void charstate_t_charstate_config::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.value)
}
inline std::string* charstate_t_charstate_config::mutable_value() {
  // @@protoc_insertion_point(field_mutable:pb.charstate.t_charstate_config.value)
  return _internal_mutable_value();
}
inline const std::string& charstate_t_charstate_config::_internal_value() const {
  return value_.GetNoArena();
}
inline void charstate_t_charstate_config::_internal_set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void charstate_t_charstate_config::set_value(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.charstate.t_charstate_config.value)
}
inline void charstate_t_charstate_config::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.charstate.t_charstate_config.value)
}
inline void charstate_t_charstate_config::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.charstate.t_charstate_config.value)
}
inline std::string* charstate_t_charstate_config::_internal_mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* charstate_t_charstate_config::release_value() {
  // @@protoc_insertion_point(field_release:pb.charstate.t_charstate_config.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void charstate_t_charstate_config::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:pb.charstate.t_charstate_config.value)
}

// required uint32 battleshow = 5;
inline bool charstate_t_charstate_config::_internal_has_battleshow() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_battleshow() const {
  return _internal_has_battleshow();
}
inline void charstate_t_charstate_config::clear_battleshow() {
  battleshow_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_battleshow() const {
  return battleshow_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::battleshow() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.battleshow)
  return _internal_battleshow();
}
inline void charstate_t_charstate_config::_internal_set_battleshow(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  battleshow_ = value;
}
inline void charstate_t_charstate_config::set_battleshow(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_battleshow(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.battleshow)
}

// required uint32 good = 6;
inline bool charstate_t_charstate_config::_internal_has_good() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_good() const {
  return _internal_has_good();
}
inline void charstate_t_charstate_config::clear_good() {
  good_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_good() const {
  return good_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::good() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.good)
  return _internal_good();
}
inline void charstate_t_charstate_config::_internal_set_good(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  good_ = value;
}
inline void charstate_t_charstate_config::set_good(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_good(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.good)
}

// required uint32 addtype = 7;
inline bool charstate_t_charstate_config::_internal_has_addtype() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_addtype() const {
  return _internal_has_addtype();
}
inline void charstate_t_charstate_config::clear_addtype() {
  addtype_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_addtype() const {
  return addtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::addtype() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.addtype)
  return _internal_addtype();
}
inline void charstate_t_charstate_config::_internal_set_addtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  addtype_ = value;
}
inline void charstate_t_charstate_config::set_addtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_addtype(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.addtype)
}

// required uint32 replacetype = 8;
inline bool charstate_t_charstate_config::_internal_has_replacetype() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_replacetype() const {
  return _internal_has_replacetype();
}
inline void charstate_t_charstate_config::clear_replacetype() {
  replacetype_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_replacetype() const {
  return replacetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::replacetype() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.replacetype)
  return _internal_replacetype();
}
inline void charstate_t_charstate_config::_internal_set_replacetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  replacetype_ = value;
}
inline void charstate_t_charstate_config::set_replacetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_replacetype(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.replacetype)
}

// required uint32 removetype = 9;
inline bool charstate_t_charstate_config::_internal_has_removetype() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_removetype() const {
  return _internal_has_removetype();
}
inline void charstate_t_charstate_config::clear_removetype() {
  removetype_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_removetype() const {
  return removetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::removetype() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.removetype)
  return _internal_removetype();
}
inline void charstate_t_charstate_config::_internal_set_removetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  removetype_ = value;
}
inline void charstate_t_charstate_config::set_removetype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_removetype(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.removetype)
}

// required uint32 addlayer = 10;
inline bool charstate_t_charstate_config::_internal_has_addlayer() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_addlayer() const {
  return _internal_has_addlayer();
}
inline void charstate_t_charstate_config::clear_addlayer() {
  addlayer_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_addlayer() const {
  return addlayer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::addlayer() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.addlayer)
  return _internal_addlayer();
}
inline void charstate_t_charstate_config::_internal_set_addlayer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  addlayer_ = value;
}
inline void charstate_t_charstate_config::set_addlayer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_addlayer(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.addlayer)
}

// required uint32 reset_time = 11;
inline bool charstate_t_charstate_config::_internal_has_reset_time() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_reset_time() const {
  return _internal_has_reset_time();
}
inline void charstate_t_charstate_config::clear_reset_time() {
  reset_time_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_reset_time() const {
  return reset_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::reset_time() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.reset_time)
  return _internal_reset_time();
}
inline void charstate_t_charstate_config::_internal_set_reset_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  reset_time_ = value;
}
inline void charstate_t_charstate_config::set_reset_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reset_time(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.reset_time)
}

// required uint32 AnimPriority = 12;
inline bool charstate_t_charstate_config::_internal_has_animpriority() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_animpriority() const {
  return _internal_has_animpriority();
}
inline void charstate_t_charstate_config::clear_animpriority() {
  animpriority_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_animpriority() const {
  return animpriority_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::animpriority() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.AnimPriority)
  return _internal_animpriority();
}
inline void charstate_t_charstate_config::_internal_set_animpriority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  animpriority_ = value;
}
inline void charstate_t_charstate_config::set_animpriority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_animpriority(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.AnimPriority)
}

// required uint32 Animtype = 13;
inline bool charstate_t_charstate_config::_internal_has_animtype() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_animtype() const {
  return _internal_has_animtype();
}
inline void charstate_t_charstate_config::clear_animtype() {
  animtype_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_animtype() const {
  return animtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::animtype() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.Animtype)
  return _internal_animtype();
}
inline void charstate_t_charstate_config::_internal_set_animtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  animtype_ = value;
}
inline void charstate_t_charstate_config::set_animtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_animtype(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.Animtype)
}

// required uint32 BuffAnim = 14;
inline bool charstate_t_charstate_config::_internal_has_buffanim() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_buffanim() const {
  return _internal_has_buffanim();
}
inline void charstate_t_charstate_config::clear_buffanim() {
  buffanim_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_buffanim() const {
  return buffanim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::buffanim() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.BuffAnim)
  return _internal_buffanim();
}
inline void charstate_t_charstate_config::_internal_set_buffanim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  buffanim_ = value;
}
inline void charstate_t_charstate_config::set_buffanim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_buffanim(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.BuffAnim)
}

// required uint32 RevertAnim = 15;
inline bool charstate_t_charstate_config::_internal_has_revertanim() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_revertanim() const {
  return _internal_has_revertanim();
}
inline void charstate_t_charstate_config::clear_revertanim() {
  revertanim_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_revertanim() const {
  return revertanim_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::revertanim() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.RevertAnim)
  return _internal_revertanim();
}
inline void charstate_t_charstate_config::_internal_set_revertanim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  revertanim_ = value;
}
inline void charstate_t_charstate_config::set_revertanim(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_revertanim(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.RevertAnim)
}

// required string BuffEffect = 16;
inline bool charstate_t_charstate_config::_internal_has_buffeffect() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_buffeffect() const {
  return _internal_has_buffeffect();
}
inline void charstate_t_charstate_config::clear_buffeffect() {
  buffeffect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& charstate_t_charstate_config::buffeffect() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.BuffEffect)
  return _internal_buffeffect();
}
inline void charstate_t_charstate_config::set_buffeffect(const std::string& value) {
  _internal_set_buffeffect(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.BuffEffect)
}
inline std::string* charstate_t_charstate_config::mutable_buffeffect() {
  // @@protoc_insertion_point(field_mutable:pb.charstate.t_charstate_config.BuffEffect)
  return _internal_mutable_buffeffect();
}
inline const std::string& charstate_t_charstate_config::_internal_buffeffect() const {
  return buffeffect_.GetNoArena();
}
inline void charstate_t_charstate_config::_internal_set_buffeffect(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  buffeffect_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void charstate_t_charstate_config::set_buffeffect(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  buffeffect_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.charstate.t_charstate_config.BuffEffect)
}
inline void charstate_t_charstate_config::set_buffeffect(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  buffeffect_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.charstate.t_charstate_config.BuffEffect)
}
inline void charstate_t_charstate_config::set_buffeffect(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  buffeffect_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.charstate.t_charstate_config.BuffEffect)
}
inline std::string* charstate_t_charstate_config::_internal_mutable_buffeffect() {
  _has_bits_[0] |= 0x00000004u;
  return buffeffect_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* charstate_t_charstate_config::release_buffeffect() {
  // @@protoc_insertion_point(field_release:pb.charstate.t_charstate_config.BuffEffect)
  if (!_internal_has_buffeffect()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return buffeffect_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void charstate_t_charstate_config::set_allocated_buffeffect(std::string* buffeffect) {
  if (buffeffect != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  buffeffect_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buffeffect);
  // @@protoc_insertion_point(field_set_allocated:pb.charstate.t_charstate_config.BuffEffect)
}

// required string BuffIcon = 17;
inline bool charstate_t_charstate_config::_internal_has_bufficon() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_bufficon() const {
  return _internal_has_bufficon();
}
inline void charstate_t_charstate_config::clear_bufficon() {
  bufficon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& charstate_t_charstate_config::bufficon() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.BuffIcon)
  return _internal_bufficon();
}
inline void charstate_t_charstate_config::set_bufficon(const std::string& value) {
  _internal_set_bufficon(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.BuffIcon)
}
inline std::string* charstate_t_charstate_config::mutable_bufficon() {
  // @@protoc_insertion_point(field_mutable:pb.charstate.t_charstate_config.BuffIcon)
  return _internal_mutable_bufficon();
}
inline const std::string& charstate_t_charstate_config::_internal_bufficon() const {
  return bufficon_.GetNoArena();
}
inline void charstate_t_charstate_config::_internal_set_bufficon(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  bufficon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void charstate_t_charstate_config::set_bufficon(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  bufficon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.charstate.t_charstate_config.BuffIcon)
}
inline void charstate_t_charstate_config::set_bufficon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  bufficon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.charstate.t_charstate_config.BuffIcon)
}
inline void charstate_t_charstate_config::set_bufficon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  bufficon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.charstate.t_charstate_config.BuffIcon)
}
inline std::string* charstate_t_charstate_config::_internal_mutable_bufficon() {
  _has_bits_[0] |= 0x00000008u;
  return bufficon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* charstate_t_charstate_config::release_bufficon() {
  // @@protoc_insertion_point(field_release:pb.charstate.t_charstate_config.BuffIcon)
  if (!_internal_has_bufficon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return bufficon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void charstate_t_charstate_config::set_allocated_bufficon(std::string* bufficon) {
  if (bufficon != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  bufficon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bufficon);
  // @@protoc_insertion_point(field_set_allocated:pb.charstate.t_charstate_config.BuffIcon)
}

// required uint32 IconShowType = 18;
inline bool charstate_t_charstate_config::_internal_has_iconshowtype() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_iconshowtype() const {
  return _internal_has_iconshowtype();
}
inline void charstate_t_charstate_config::clear_iconshowtype() {
  iconshowtype_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_iconshowtype() const {
  return iconshowtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::iconshowtype() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.IconShowType)
  return _internal_iconshowtype();
}
inline void charstate_t_charstate_config::_internal_set_iconshowtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  iconshowtype_ = value;
}
inline void charstate_t_charstate_config::set_iconshowtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_iconshowtype(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.IconShowType)
}

// required uint32 IconPriority = 19;
inline bool charstate_t_charstate_config::_internal_has_iconpriority() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_iconpriority() const {
  return _internal_has_iconpriority();
}
inline void charstate_t_charstate_config::clear_iconpriority() {
  iconpriority_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_iconpriority() const {
  return iconpriority_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::iconpriority() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.IconPriority)
  return _internal_iconpriority();
}
inline void charstate_t_charstate_config::_internal_set_iconpriority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  iconpriority_ = value;
}
inline void charstate_t_charstate_config::set_iconpriority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_iconpriority(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.IconPriority)
}

// required string introduce = 20;
inline bool charstate_t_charstate_config::_internal_has_introduce() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_introduce() const {
  return _internal_has_introduce();
}
inline void charstate_t_charstate_config::clear_introduce() {
  introduce_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& charstate_t_charstate_config::introduce() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.introduce)
  return _internal_introduce();
}
inline void charstate_t_charstate_config::set_introduce(const std::string& value) {
  _internal_set_introduce(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.introduce)
}
inline std::string* charstate_t_charstate_config::mutable_introduce() {
  // @@protoc_insertion_point(field_mutable:pb.charstate.t_charstate_config.introduce)
  return _internal_mutable_introduce();
}
inline const std::string& charstate_t_charstate_config::_internal_introduce() const {
  return introduce_.GetNoArena();
}
inline void charstate_t_charstate_config::_internal_set_introduce(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  introduce_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void charstate_t_charstate_config::set_introduce(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  introduce_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.charstate.t_charstate_config.introduce)
}
inline void charstate_t_charstate_config::set_introduce(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  introduce_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.charstate.t_charstate_config.introduce)
}
inline void charstate_t_charstate_config::set_introduce(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  introduce_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.charstate.t_charstate_config.introduce)
}
inline std::string* charstate_t_charstate_config::_internal_mutable_introduce() {
  _has_bits_[0] |= 0x00000010u;
  return introduce_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* charstate_t_charstate_config::release_introduce() {
  // @@protoc_insertion_point(field_release:pb.charstate.t_charstate_config.introduce)
  if (!_internal_has_introduce()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return introduce_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void charstate_t_charstate_config::set_allocated_introduce(std::string* introduce) {
  if (introduce != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  introduce_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), introduce);
  // @@protoc_insertion_point(field_set_allocated:pb.charstate.t_charstate_config.introduce)
}

// required uint32 ControlType = 21;
inline bool charstate_t_charstate_config::_internal_has_controltype() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_controltype() const {
  return _internal_has_controltype();
}
inline void charstate_t_charstate_config::clear_controltype() {
  controltype_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_controltype() const {
  return controltype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::controltype() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.ControlType)
  return _internal_controltype();
}
inline void charstate_t_charstate_config::_internal_set_controltype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  controltype_ = value;
}
inline void charstate_t_charstate_config::set_controltype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_controltype(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.ControlType)
}

// required uint32 BreakType = 22;
inline bool charstate_t_charstate_config::_internal_has_breaktype() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_breaktype() const {
  return _internal_has_breaktype();
}
inline void charstate_t_charstate_config::clear_breaktype() {
  breaktype_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::_internal_breaktype() const {
  return breaktype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 charstate_t_charstate_config::breaktype() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.BreakType)
  return _internal_breaktype();
}
inline void charstate_t_charstate_config::_internal_set_breaktype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  breaktype_ = value;
}
inline void charstate_t_charstate_config::set_breaktype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_breaktype(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.BreakType)
}

// required string EndingEffect = 23;
inline bool charstate_t_charstate_config::_internal_has_endingeffect() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool charstate_t_charstate_config::has_endingeffect() const {
  return _internal_has_endingeffect();
}
inline void charstate_t_charstate_config::clear_endingeffect() {
  endingeffect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& charstate_t_charstate_config::endingeffect() const {
  // @@protoc_insertion_point(field_get:pb.charstate.t_charstate_config.EndingEffect)
  return _internal_endingeffect();
}
inline void charstate_t_charstate_config::set_endingeffect(const std::string& value) {
  _internal_set_endingeffect(value);
  // @@protoc_insertion_point(field_set:pb.charstate.t_charstate_config.EndingEffect)
}
inline std::string* charstate_t_charstate_config::mutable_endingeffect() {
  // @@protoc_insertion_point(field_mutable:pb.charstate.t_charstate_config.EndingEffect)
  return _internal_mutable_endingeffect();
}
inline const std::string& charstate_t_charstate_config::_internal_endingeffect() const {
  return endingeffect_.GetNoArena();
}
inline void charstate_t_charstate_config::_internal_set_endingeffect(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  endingeffect_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void charstate_t_charstate_config::set_endingeffect(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  endingeffect_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.charstate.t_charstate_config.EndingEffect)
}
inline void charstate_t_charstate_config::set_endingeffect(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  endingeffect_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.charstate.t_charstate_config.EndingEffect)
}
inline void charstate_t_charstate_config::set_endingeffect(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  endingeffect_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.charstate.t_charstate_config.EndingEffect)
}
inline std::string* charstate_t_charstate_config::_internal_mutable_endingeffect() {
  _has_bits_[0] |= 0x00000020u;
  return endingeffect_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* charstate_t_charstate_config::release_endingeffect() {
  // @@protoc_insertion_point(field_release:pb.charstate.t_charstate_config.EndingEffect)
  if (!_internal_has_endingeffect()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return endingeffect_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void charstate_t_charstate_config::set_allocated_endingeffect(std::string* endingeffect) {
  if (endingeffect != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  endingeffect_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), endingeffect);
  // @@protoc_insertion_point(field_set_allocated:pb.charstate.t_charstate_config.EndingEffect)
}

// -------------------------------------------------------------------

// charstate

// repeated .pb.charstate.t_charstate_config datas = 1;
inline int charstate::_internal_datas_size() const {
  return datas_.size();
}
inline int charstate::datas_size() const {
  return _internal_datas_size();
}
inline void charstate::clear_datas() {
  datas_.Clear();
}
inline ::pb::charstate_t_charstate_config* charstate::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:pb.charstate.datas)
  return datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::charstate_t_charstate_config >*
charstate::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:pb.charstate.datas)
  return &datas_;
}
inline const ::pb::charstate_t_charstate_config& charstate::_internal_datas(int index) const {
  return datas_.Get(index);
}
inline const ::pb::charstate_t_charstate_config& charstate::datas(int index) const {
  // @@protoc_insertion_point(field_get:pb.charstate.datas)
  return _internal_datas(index);
}
inline ::pb::charstate_t_charstate_config* charstate::_internal_add_datas() {
  return datas_.Add();
}
inline ::pb::charstate_t_charstate_config* charstate::add_datas() {
  // @@protoc_insertion_point(field_add:pb.charstate.datas)
  return _internal_add_datas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::charstate_t_charstate_config >&
charstate::datas() const {
  // @@protoc_insertion_point(field_list:pb.charstate.datas)
  return datas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_charstate_2eproto
