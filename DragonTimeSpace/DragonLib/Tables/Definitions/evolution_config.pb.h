// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: evolution_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_evolution_5fconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_evolution_5fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_evolution_5fconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_evolution_5fconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_evolution_5fconfig_2eproto;
namespace pb {
class evolution_config;
class evolution_configDefaultTypeInternal;
extern evolution_configDefaultTypeInternal _evolution_config_default_instance_;
class evolution_config_t_evolution_config;
class evolution_config_t_evolution_configDefaultTypeInternal;
extern evolution_config_t_evolution_configDefaultTypeInternal _evolution_config_t_evolution_config_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::evolution_config* Arena::CreateMaybeMessage<::pb::evolution_config>(Arena*);
template<> ::pb::evolution_config_t_evolution_config* Arena::CreateMaybeMessage<::pb::evolution_config_t_evolution_config>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

// ===================================================================

class evolution_config_t_evolution_config :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.evolution_config.t_evolution_config) */ {
 public:
  evolution_config_t_evolution_config();
  virtual ~evolution_config_t_evolution_config();

  evolution_config_t_evolution_config(const evolution_config_t_evolution_config& from);
  evolution_config_t_evolution_config(evolution_config_t_evolution_config&& from) noexcept
    : evolution_config_t_evolution_config() {
    *this = ::std::move(from);
  }

  inline evolution_config_t_evolution_config& operator=(const evolution_config_t_evolution_config& from) {
    CopyFrom(from);
    return *this;
  }
  inline evolution_config_t_evolution_config& operator=(evolution_config_t_evolution_config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const evolution_config_t_evolution_config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const evolution_config_t_evolution_config* internal_default_instance() {
    return reinterpret_cast<const evolution_config_t_evolution_config*>(
               &_evolution_config_t_evolution_config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(evolution_config_t_evolution_config& a, evolution_config_t_evolution_config& b) {
    a.Swap(&b);
  }
  inline void Swap(evolution_config_t_evolution_config* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline evolution_config_t_evolution_config* New() const final {
    return CreateMaybeMessage<evolution_config_t_evolution_config>(nullptr);
  }

  evolution_config_t_evolution_config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<evolution_config_t_evolution_config>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const evolution_config_t_evolution_config& from);
  void MergeFrom(const evolution_config_t_evolution_config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(evolution_config_t_evolution_config* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.evolution_config.t_evolution_config";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_evolution_5fconfig_2eproto);
    return ::descriptor_table_evolution_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kIconFieldNumber = 4,
    kEvolutioncostFieldNumber = 6,
    kAddprimecardFieldNumber = 7,
    kDescFieldNumber = 8,
    kSkillidFieldNumber = 30,
    kTbxidFieldNumber = 1,
    kIdFieldNumber = 2,
    kAvatarFieldNumber = 5,
    kPdamFieldNumber = 9,
    kMdamFieldNumber = 10,
    kPdefFieldNumber = 11,
    kMdefFieldNumber = 12,
    kMaxhpFieldNumber = 13,
    kBangFieldNumber = 14,
    kBangextradamageFieldNumber = 15,
    kToughnessFieldNumber = 16,
    kToughnessreducedamageFieldNumber = 17,
    kBlockFieldNumber = 18,
    kBlockreducedamageFieldNumber = 19,
    kPenetrateFieldNumber = 20,
    kPenetrateextradamageFieldNumber = 21,
    kAccurateFieldNumber = 22,
    kAccurateextradamageFieldNumber = 23,
    kHoldFieldNumber = 24,
    kHoldreducedamageFieldNumber = 25,
    kDeflectFieldNumber = 26,
    kDeflectreducedamageFieldNumber = 27,
    kHitFieldNumber = 28,
    kMissFieldNumber = 29,
  };
  // required string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // required string icon = 4;
  bool has_icon() const;
  private:
  bool _internal_has_icon() const;
  public:
  void clear_icon();
  const std::string& icon() const;
  void set_icon(const std::string& value);
  void set_icon(std::string&& value);
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  std::string* mutable_icon();
  std::string* release_icon();
  void set_allocated_icon(std::string* icon);
  private:
  const std::string& _internal_icon() const;
  void _internal_set_icon(const std::string& value);
  std::string* _internal_mutable_icon();
  public:

  // required string evolutioncost = 6;
  bool has_evolutioncost() const;
  private:
  bool _internal_has_evolutioncost() const;
  public:
  void clear_evolutioncost();
  const std::string& evolutioncost() const;
  void set_evolutioncost(const std::string& value);
  void set_evolutioncost(std::string&& value);
  void set_evolutioncost(const char* value);
  void set_evolutioncost(const char* value, size_t size);
  std::string* mutable_evolutioncost();
  std::string* release_evolutioncost();
  void set_allocated_evolutioncost(std::string* evolutioncost);
  private:
  const std::string& _internal_evolutioncost() const;
  void _internal_set_evolutioncost(const std::string& value);
  std::string* _internal_mutable_evolutioncost();
  public:

  // required string addprimecard = 7;
  bool has_addprimecard() const;
  private:
  bool _internal_has_addprimecard() const;
  public:
  void clear_addprimecard();
  const std::string& addprimecard() const;
  void set_addprimecard(const std::string& value);
  void set_addprimecard(std::string&& value);
  void set_addprimecard(const char* value);
  void set_addprimecard(const char* value, size_t size);
  std::string* mutable_addprimecard();
  std::string* release_addprimecard();
  void set_allocated_addprimecard(std::string* addprimecard);
  private:
  const std::string& _internal_addprimecard() const;
  void _internal_set_addprimecard(const std::string& value);
  std::string* _internal_mutable_addprimecard();
  public:

  // required string desc = 8;
  bool has_desc() const;
  private:
  bool _internal_has_desc() const;
  public:
  void clear_desc();
  const std::string& desc() const;
  void set_desc(const std::string& value);
  void set_desc(std::string&& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  std::string* mutable_desc();
  std::string* release_desc();
  void set_allocated_desc(std::string* desc);
  private:
  const std::string& _internal_desc() const;
  void _internal_set_desc(const std::string& value);
  std::string* _internal_mutable_desc();
  public:

  // required string skillid = 30;
  bool has_skillid() const;
  private:
  bool _internal_has_skillid() const;
  public:
  void clear_skillid();
  const std::string& skillid() const;
  void set_skillid(const std::string& value);
  void set_skillid(std::string&& value);
  void set_skillid(const char* value);
  void set_skillid(const char* value, size_t size);
  std::string* mutable_skillid();
  std::string* release_skillid();
  void set_allocated_skillid(std::string* skillid);
  private:
  const std::string& _internal_skillid() const;
  void _internal_set_skillid(const std::string& value);
  std::string* _internal_mutable_skillid();
  public:

  // required uint32 tbxid = 1 [default = 0];
  bool has_tbxid() const;
  private:
  bool _internal_has_tbxid() const;
  public:
  void clear_tbxid();
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid() const;
  void set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tbxid() const;
  void _internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 id = 2 [default = 0];
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 avatar = 5;
  bool has_avatar() const;
  private:
  bool _internal_has_avatar() const;
  public:
  void clear_avatar();
  ::PROTOBUF_NAMESPACE_ID::uint32 avatar() const;
  void set_avatar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_avatar() const;
  void _internal_set_avatar(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 pdam = 9;
  bool has_pdam() const;
  private:
  bool _internal_has_pdam() const;
  public:
  void clear_pdam();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdam() const;
  void set_pdam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdam() const;
  void _internal_set_pdam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 mdam = 10;
  bool has_mdam() const;
  private:
  bool _internal_has_mdam() const;
  public:
  void clear_mdam();
  ::PROTOBUF_NAMESPACE_ID::uint32 mdam() const;
  void set_mdam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mdam() const;
  void _internal_set_mdam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 pdef = 11;
  bool has_pdef() const;
  private:
  bool _internal_has_pdef() const;
  public:
  void clear_pdef();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdef() const;
  void set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdef() const;
  void _internal_set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 mdef = 12;
  bool has_mdef() const;
  private:
  bool _internal_has_mdef() const;
  public:
  void clear_mdef();
  ::PROTOBUF_NAMESPACE_ID::uint32 mdef() const;
  void set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mdef() const;
  void _internal_set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 maxhp = 13;
  bool has_maxhp() const;
  private:
  bool _internal_has_maxhp() const;
  public:
  void clear_maxhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp() const;
  void set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxhp() const;
  void _internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 bang = 14;
  bool has_bang() const;
  private:
  bool _internal_has_bang() const;
  public:
  void clear_bang();
  ::PROTOBUF_NAMESPACE_ID::uint32 bang() const;
  void set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bang() const;
  void _internal_set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 bangextradamage = 15;
  bool has_bangextradamage() const;
  private:
  bool _internal_has_bangextradamage() const;
  public:
  void clear_bangextradamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 bangextradamage() const;
  void set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bangextradamage() const;
  void _internal_set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 toughness = 16;
  bool has_toughness() const;
  private:
  bool _internal_has_toughness() const;
  public:
  void clear_toughness();
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness() const;
  void set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_toughness() const;
  void _internal_set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 toughnessreducedamage = 17;
  bool has_toughnessreducedamage() const;
  private:
  bool _internal_has_toughnessreducedamage() const;
  public:
  void clear_toughnessreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 toughnessreducedamage() const;
  void set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_toughnessreducedamage() const;
  void _internal_set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 block = 18;
  bool has_block() const;
  private:
  bool _internal_has_block() const;
  public:
  void clear_block();
  ::PROTOBUF_NAMESPACE_ID::uint32 block() const;
  void set_block(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_block() const;
  void _internal_set_block(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 blockreducedamage = 19;
  bool has_blockreducedamage() const;
  private:
  bool _internal_has_blockreducedamage() const;
  public:
  void clear_blockreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 blockreducedamage() const;
  void set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blockreducedamage() const;
  void _internal_set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 penetrate = 20;
  bool has_penetrate() const;
  private:
  bool _internal_has_penetrate() const;
  public:
  void clear_penetrate();
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrate() const;
  void set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_penetrate() const;
  void _internal_set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 penetrateextradamage = 21;
  bool has_penetrateextradamage() const;
  private:
  bool _internal_has_penetrateextradamage() const;
  public:
  void clear_penetrateextradamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrateextradamage() const;
  void set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_penetrateextradamage() const;
  void _internal_set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 accurate = 22;
  bool has_accurate() const;
  private:
  bool _internal_has_accurate() const;
  public:
  void clear_accurate();
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate() const;
  void set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accurate() const;
  void _internal_set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 accurateextradamage = 23;
  bool has_accurateextradamage() const;
  private:
  bool _internal_has_accurateextradamage() const;
  public:
  void clear_accurateextradamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 accurateextradamage() const;
  void set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accurateextradamage() const;
  void _internal_set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 hold = 24;
  bool has_hold() const;
  private:
  bool _internal_has_hold() const;
  public:
  void clear_hold();
  ::PROTOBUF_NAMESPACE_ID::uint32 hold() const;
  void set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hold() const;
  void _internal_set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 holdreducedamage = 25;
  bool has_holdreducedamage() const;
  private:
  bool _internal_has_holdreducedamage() const;
  public:
  void clear_holdreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 holdreducedamage() const;
  void set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_holdreducedamage() const;
  void _internal_set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 deflect = 26;
  bool has_deflect() const;
  private:
  bool _internal_has_deflect() const;
  public:
  void clear_deflect();
  ::PROTOBUF_NAMESPACE_ID::uint32 deflect() const;
  void set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deflect() const;
  void _internal_set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 deflectreducedamage = 27;
  bool has_deflectreducedamage() const;
  private:
  bool _internal_has_deflectreducedamage() const;
  public:
  void clear_deflectreducedamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 deflectreducedamage() const;
  void set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deflectreducedamage() const;
  void _internal_set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 hit = 28;
  bool has_hit() const;
  private:
  bool _internal_has_hit() const;
  public:
  void clear_hit();
  ::PROTOBUF_NAMESPACE_ID::uint32 hit() const;
  void set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hit() const;
  void _internal_set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 miss = 29;
  bool has_miss() const;
  private:
  bool _internal_has_miss() const;
  public:
  void clear_miss();
  ::PROTOBUF_NAMESPACE_ID::uint32 miss() const;
  void set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_miss() const;
  void _internal_set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.evolution_config.t_evolution_config)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr icon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr evolutioncost_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr addprimecard_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr skillid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 avatar_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mdam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdef_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mdef_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bang_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bangextradamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness_;
  ::PROTOBUF_NAMESPACE_ID::uint32 toughnessreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 block_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blockreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrateextradamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accurateextradamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 holdreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deflect_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deflectreducedamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 miss_;
  friend struct ::TableStruct_evolution_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class evolution_config :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.evolution_config) */ {
 public:
  evolution_config();
  virtual ~evolution_config();

  evolution_config(const evolution_config& from);
  evolution_config(evolution_config&& from) noexcept
    : evolution_config() {
    *this = ::std::move(from);
  }

  inline evolution_config& operator=(const evolution_config& from) {
    CopyFrom(from);
    return *this;
  }
  inline evolution_config& operator=(evolution_config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const evolution_config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const evolution_config* internal_default_instance() {
    return reinterpret_cast<const evolution_config*>(
               &_evolution_config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(evolution_config& a, evolution_config& b) {
    a.Swap(&b);
  }
  inline void Swap(evolution_config* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline evolution_config* New() const final {
    return CreateMaybeMessage<evolution_config>(nullptr);
  }

  evolution_config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<evolution_config>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const evolution_config& from);
  void MergeFrom(const evolution_config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(evolution_config* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.evolution_config";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_evolution_5fconfig_2eproto);
    return ::descriptor_table_evolution_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef evolution_config_t_evolution_config t_evolution_config;

  // accessors -------------------------------------------------------

  enum : int {
    kDatasFieldNumber = 1,
  };
  // repeated .pb.evolution_config.t_evolution_config datas = 1;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::pb::evolution_config_t_evolution_config* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::evolution_config_t_evolution_config >*
      mutable_datas();
  private:
  const ::pb::evolution_config_t_evolution_config& _internal_datas(int index) const;
  ::pb::evolution_config_t_evolution_config* _internal_add_datas();
  public:
  const ::pb::evolution_config_t_evolution_config& datas(int index) const;
  ::pb::evolution_config_t_evolution_config* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::evolution_config_t_evolution_config >&
      datas() const;

  // @@protoc_insertion_point(class_scope:pb.evolution_config)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::evolution_config_t_evolution_config > datas_;
  friend struct ::TableStruct_evolution_5fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// evolution_config_t_evolution_config

// required uint32 tbxid = 1 [default = 0];
inline bool evolution_config_t_evolution_config::_internal_has_tbxid() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_tbxid() const {
  return _internal_has_tbxid();
}
inline void evolution_config_t_evolution_config::clear_tbxid() {
  tbxid_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_tbxid() const {
  return tbxid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::tbxid() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.tbxid)
  return _internal_tbxid();
}
inline void evolution_config_t_evolution_config::_internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  tbxid_ = value;
}
inline void evolution_config_t_evolution_config::set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tbxid(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.tbxid)
}

// required uint32 id = 2 [default = 0];
inline bool evolution_config_t_evolution_config::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_id() const {
  return _internal_has_id();
}
inline void evolution_config_t_evolution_config::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::id() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.id)
  return _internal_id();
}
inline void evolution_config_t_evolution_config::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  id_ = value;
}
inline void evolution_config_t_evolution_config::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.id)
}

// required string name = 3;
inline bool evolution_config_t_evolution_config::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_name() const {
  return _internal_has_name();
}
inline void evolution_config_t_evolution_config::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& evolution_config_t_evolution_config::name() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.name)
  return _internal_name();
}
inline void evolution_config_t_evolution_config::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.name)
}
inline std::string* evolution_config_t_evolution_config::mutable_name() {
  // @@protoc_insertion_point(field_mutable:pb.evolution_config.t_evolution_config.name)
  return _internal_mutable_name();
}
inline const std::string& evolution_config_t_evolution_config::_internal_name() const {
  return name_.GetNoArena();
}
inline void evolution_config_t_evolution_config::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void evolution_config_t_evolution_config::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.evolution_config.t_evolution_config.name)
}
inline void evolution_config_t_evolution_config::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.evolution_config.t_evolution_config.name)
}
inline void evolution_config_t_evolution_config::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.evolution_config.t_evolution_config.name)
}
inline std::string* evolution_config_t_evolution_config::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* evolution_config_t_evolution_config::release_name() {
  // @@protoc_insertion_point(field_release:pb.evolution_config.t_evolution_config.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void evolution_config_t_evolution_config::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.evolution_config.t_evolution_config.name)
}

// required string icon = 4;
inline bool evolution_config_t_evolution_config::_internal_has_icon() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_icon() const {
  return _internal_has_icon();
}
inline void evolution_config_t_evolution_config::clear_icon() {
  icon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& evolution_config_t_evolution_config::icon() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.icon)
  return _internal_icon();
}
inline void evolution_config_t_evolution_config::set_icon(const std::string& value) {
  _internal_set_icon(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.icon)
}
inline std::string* evolution_config_t_evolution_config::mutable_icon() {
  // @@protoc_insertion_point(field_mutable:pb.evolution_config.t_evolution_config.icon)
  return _internal_mutable_icon();
}
inline const std::string& evolution_config_t_evolution_config::_internal_icon() const {
  return icon_.GetNoArena();
}
inline void evolution_config_t_evolution_config::_internal_set_icon(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void evolution_config_t_evolution_config::set_icon(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.evolution_config.t_evolution_config.icon)
}
inline void evolution_config_t_evolution_config::set_icon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.evolution_config.t_evolution_config.icon)
}
inline void evolution_config_t_evolution_config::set_icon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.evolution_config.t_evolution_config.icon)
}
inline std::string* evolution_config_t_evolution_config::_internal_mutable_icon() {
  _has_bits_[0] |= 0x00000002u;
  return icon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* evolution_config_t_evolution_config::release_icon() {
  // @@protoc_insertion_point(field_release:pb.evolution_config.t_evolution_config.icon)
  if (!_internal_has_icon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return icon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void evolution_config_t_evolution_config::set_allocated_icon(std::string* icon) {
  if (icon != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  icon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:pb.evolution_config.t_evolution_config.icon)
}

// required uint32 avatar = 5;
inline bool evolution_config_t_evolution_config::_internal_has_avatar() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_avatar() const {
  return _internal_has_avatar();
}
inline void evolution_config_t_evolution_config::clear_avatar() {
  avatar_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_avatar() const {
  return avatar_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::avatar() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.avatar)
  return _internal_avatar();
}
inline void evolution_config_t_evolution_config::_internal_set_avatar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  avatar_ = value;
}
inline void evolution_config_t_evolution_config::set_avatar(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_avatar(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.avatar)
}

// required string evolutioncost = 6;
inline bool evolution_config_t_evolution_config::_internal_has_evolutioncost() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_evolutioncost() const {
  return _internal_has_evolutioncost();
}
inline void evolution_config_t_evolution_config::clear_evolutioncost() {
  evolutioncost_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& evolution_config_t_evolution_config::evolutioncost() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.evolutioncost)
  return _internal_evolutioncost();
}
inline void evolution_config_t_evolution_config::set_evolutioncost(const std::string& value) {
  _internal_set_evolutioncost(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.evolutioncost)
}
inline std::string* evolution_config_t_evolution_config::mutable_evolutioncost() {
  // @@protoc_insertion_point(field_mutable:pb.evolution_config.t_evolution_config.evolutioncost)
  return _internal_mutable_evolutioncost();
}
inline const std::string& evolution_config_t_evolution_config::_internal_evolutioncost() const {
  return evolutioncost_.GetNoArena();
}
inline void evolution_config_t_evolution_config::_internal_set_evolutioncost(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  evolutioncost_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void evolution_config_t_evolution_config::set_evolutioncost(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  evolutioncost_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.evolution_config.t_evolution_config.evolutioncost)
}
inline void evolution_config_t_evolution_config::set_evolutioncost(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  evolutioncost_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.evolution_config.t_evolution_config.evolutioncost)
}
inline void evolution_config_t_evolution_config::set_evolutioncost(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  evolutioncost_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.evolution_config.t_evolution_config.evolutioncost)
}
inline std::string* evolution_config_t_evolution_config::_internal_mutable_evolutioncost() {
  _has_bits_[0] |= 0x00000004u;
  return evolutioncost_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* evolution_config_t_evolution_config::release_evolutioncost() {
  // @@protoc_insertion_point(field_release:pb.evolution_config.t_evolution_config.evolutioncost)
  if (!_internal_has_evolutioncost()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return evolutioncost_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void evolution_config_t_evolution_config::set_allocated_evolutioncost(std::string* evolutioncost) {
  if (evolutioncost != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  evolutioncost_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), evolutioncost);
  // @@protoc_insertion_point(field_set_allocated:pb.evolution_config.t_evolution_config.evolutioncost)
}

// required string addprimecard = 7;
inline bool evolution_config_t_evolution_config::_internal_has_addprimecard() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_addprimecard() const {
  return _internal_has_addprimecard();
}
inline void evolution_config_t_evolution_config::clear_addprimecard() {
  addprimecard_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& evolution_config_t_evolution_config::addprimecard() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.addprimecard)
  return _internal_addprimecard();
}
inline void evolution_config_t_evolution_config::set_addprimecard(const std::string& value) {
  _internal_set_addprimecard(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.addprimecard)
}
inline std::string* evolution_config_t_evolution_config::mutable_addprimecard() {
  // @@protoc_insertion_point(field_mutable:pb.evolution_config.t_evolution_config.addprimecard)
  return _internal_mutable_addprimecard();
}
inline const std::string& evolution_config_t_evolution_config::_internal_addprimecard() const {
  return addprimecard_.GetNoArena();
}
inline void evolution_config_t_evolution_config::_internal_set_addprimecard(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  addprimecard_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void evolution_config_t_evolution_config::set_addprimecard(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  addprimecard_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.evolution_config.t_evolution_config.addprimecard)
}
inline void evolution_config_t_evolution_config::set_addprimecard(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  addprimecard_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.evolution_config.t_evolution_config.addprimecard)
}
inline void evolution_config_t_evolution_config::set_addprimecard(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  addprimecard_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.evolution_config.t_evolution_config.addprimecard)
}
inline std::string* evolution_config_t_evolution_config::_internal_mutable_addprimecard() {
  _has_bits_[0] |= 0x00000008u;
  return addprimecard_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* evolution_config_t_evolution_config::release_addprimecard() {
  // @@protoc_insertion_point(field_release:pb.evolution_config.t_evolution_config.addprimecard)
  if (!_internal_has_addprimecard()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return addprimecard_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void evolution_config_t_evolution_config::set_allocated_addprimecard(std::string* addprimecard) {
  if (addprimecard != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  addprimecard_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), addprimecard);
  // @@protoc_insertion_point(field_set_allocated:pb.evolution_config.t_evolution_config.addprimecard)
}

// required string desc = 8;
inline bool evolution_config_t_evolution_config::_internal_has_desc() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_desc() const {
  return _internal_has_desc();
}
inline void evolution_config_t_evolution_config::clear_desc() {
  desc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& evolution_config_t_evolution_config::desc() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.desc)
  return _internal_desc();
}
inline void evolution_config_t_evolution_config::set_desc(const std::string& value) {
  _internal_set_desc(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.desc)
}
inline std::string* evolution_config_t_evolution_config::mutable_desc() {
  // @@protoc_insertion_point(field_mutable:pb.evolution_config.t_evolution_config.desc)
  return _internal_mutable_desc();
}
inline const std::string& evolution_config_t_evolution_config::_internal_desc() const {
  return desc_.GetNoArena();
}
inline void evolution_config_t_evolution_config::_internal_set_desc(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void evolution_config_t_evolution_config::set_desc(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  desc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.evolution_config.t_evolution_config.desc)
}
inline void evolution_config_t_evolution_config::set_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.evolution_config.t_evolution_config.desc)
}
inline void evolution_config_t_evolution_config::set_desc(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  desc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.evolution_config.t_evolution_config.desc)
}
inline std::string* evolution_config_t_evolution_config::_internal_mutable_desc() {
  _has_bits_[0] |= 0x00000010u;
  return desc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* evolution_config_t_evolution_config::release_desc() {
  // @@protoc_insertion_point(field_release:pb.evolution_config.t_evolution_config.desc)
  if (!_internal_has_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return desc_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void evolution_config_t_evolution_config::set_allocated_desc(std::string* desc) {
  if (desc != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  desc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:pb.evolution_config.t_evolution_config.desc)
}

// required uint32 pdam = 9;
inline bool evolution_config_t_evolution_config::_internal_has_pdam() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_pdam() const {
  return _internal_has_pdam();
}
inline void evolution_config_t_evolution_config::clear_pdam() {
  pdam_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_pdam() const {
  return pdam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::pdam() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.pdam)
  return _internal_pdam();
}
inline void evolution_config_t_evolution_config::_internal_set_pdam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  pdam_ = value;
}
inline void evolution_config_t_evolution_config::set_pdam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdam(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.pdam)
}

// required uint32 mdam = 10;
inline bool evolution_config_t_evolution_config::_internal_has_mdam() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_mdam() const {
  return _internal_has_mdam();
}
inline void evolution_config_t_evolution_config::clear_mdam() {
  mdam_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_mdam() const {
  return mdam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::mdam() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.mdam)
  return _internal_mdam();
}
inline void evolution_config_t_evolution_config::_internal_set_mdam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  mdam_ = value;
}
inline void evolution_config_t_evolution_config::set_mdam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mdam(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.mdam)
}

// required uint32 pdef = 11;
inline bool evolution_config_t_evolution_config::_internal_has_pdef() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_pdef() const {
  return _internal_has_pdef();
}
inline void evolution_config_t_evolution_config::clear_pdef() {
  pdef_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_pdef() const {
  return pdef_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::pdef() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.pdef)
  return _internal_pdef();
}
inline void evolution_config_t_evolution_config::_internal_set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  pdef_ = value;
}
inline void evolution_config_t_evolution_config::set_pdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdef(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.pdef)
}

// required uint32 mdef = 12;
inline bool evolution_config_t_evolution_config::_internal_has_mdef() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_mdef() const {
  return _internal_has_mdef();
}
inline void evolution_config_t_evolution_config::clear_mdef() {
  mdef_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_mdef() const {
  return mdef_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::mdef() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.mdef)
  return _internal_mdef();
}
inline void evolution_config_t_evolution_config::_internal_set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  mdef_ = value;
}
inline void evolution_config_t_evolution_config::set_mdef(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mdef(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.mdef)
}

// required uint32 maxhp = 13;
inline bool evolution_config_t_evolution_config::_internal_has_maxhp() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_maxhp() const {
  return _internal_has_maxhp();
}
inline void evolution_config_t_evolution_config::clear_maxhp() {
  maxhp_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_maxhp() const {
  return maxhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::maxhp() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.maxhp)
  return _internal_maxhp();
}
inline void evolution_config_t_evolution_config::_internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  maxhp_ = value;
}
inline void evolution_config_t_evolution_config::set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxhp(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.maxhp)
}

// required uint32 bang = 14;
inline bool evolution_config_t_evolution_config::_internal_has_bang() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_bang() const {
  return _internal_has_bang();
}
inline void evolution_config_t_evolution_config::clear_bang() {
  bang_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_bang() const {
  return bang_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::bang() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.bang)
  return _internal_bang();
}
inline void evolution_config_t_evolution_config::_internal_set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  bang_ = value;
}
inline void evolution_config_t_evolution_config::set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bang(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.bang)
}

// required uint32 bangextradamage = 15;
inline bool evolution_config_t_evolution_config::_internal_has_bangextradamage() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_bangextradamage() const {
  return _internal_has_bangextradamage();
}
inline void evolution_config_t_evolution_config::clear_bangextradamage() {
  bangextradamage_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_bangextradamage() const {
  return bangextradamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::bangextradamage() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.bangextradamage)
  return _internal_bangextradamage();
}
inline void evolution_config_t_evolution_config::_internal_set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  bangextradamage_ = value;
}
inline void evolution_config_t_evolution_config::set_bangextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bangextradamage(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.bangextradamage)
}

// required uint32 toughness = 16;
inline bool evolution_config_t_evolution_config::_internal_has_toughness() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_toughness() const {
  return _internal_has_toughness();
}
inline void evolution_config_t_evolution_config::clear_toughness() {
  toughness_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_toughness() const {
  return toughness_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::toughness() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.toughness)
  return _internal_toughness();
}
inline void evolution_config_t_evolution_config::_internal_set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  toughness_ = value;
}
inline void evolution_config_t_evolution_config::set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_toughness(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.toughness)
}

// required uint32 toughnessreducedamage = 17;
inline bool evolution_config_t_evolution_config::_internal_has_toughnessreducedamage() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_toughnessreducedamage() const {
  return _internal_has_toughnessreducedamage();
}
inline void evolution_config_t_evolution_config::clear_toughnessreducedamage() {
  toughnessreducedamage_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_toughnessreducedamage() const {
  return toughnessreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::toughnessreducedamage() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.toughnessreducedamage)
  return _internal_toughnessreducedamage();
}
inline void evolution_config_t_evolution_config::_internal_set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  toughnessreducedamage_ = value;
}
inline void evolution_config_t_evolution_config::set_toughnessreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_toughnessreducedamage(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.toughnessreducedamage)
}

// required uint32 block = 18;
inline bool evolution_config_t_evolution_config::_internal_has_block() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_block() const {
  return _internal_has_block();
}
inline void evolution_config_t_evolution_config::clear_block() {
  block_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_block() const {
  return block_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::block() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.block)
  return _internal_block();
}
inline void evolution_config_t_evolution_config::_internal_set_block(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  block_ = value;
}
inline void evolution_config_t_evolution_config::set_block(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_block(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.block)
}

// required uint32 blockreducedamage = 19;
inline bool evolution_config_t_evolution_config::_internal_has_blockreducedamage() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_blockreducedamage() const {
  return _internal_has_blockreducedamage();
}
inline void evolution_config_t_evolution_config::clear_blockreducedamage() {
  blockreducedamage_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_blockreducedamage() const {
  return blockreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::blockreducedamage() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.blockreducedamage)
  return _internal_blockreducedamage();
}
inline void evolution_config_t_evolution_config::_internal_set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  blockreducedamage_ = value;
}
inline void evolution_config_t_evolution_config::set_blockreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blockreducedamage(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.blockreducedamage)
}

// required uint32 penetrate = 20;
inline bool evolution_config_t_evolution_config::_internal_has_penetrate() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_penetrate() const {
  return _internal_has_penetrate();
}
inline void evolution_config_t_evolution_config::clear_penetrate() {
  penetrate_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_penetrate() const {
  return penetrate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::penetrate() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.penetrate)
  return _internal_penetrate();
}
inline void evolution_config_t_evolution_config::_internal_set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  penetrate_ = value;
}
inline void evolution_config_t_evolution_config::set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_penetrate(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.penetrate)
}

// required uint32 penetrateextradamage = 21;
inline bool evolution_config_t_evolution_config::_internal_has_penetrateextradamage() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_penetrateextradamage() const {
  return _internal_has_penetrateextradamage();
}
inline void evolution_config_t_evolution_config::clear_penetrateextradamage() {
  penetrateextradamage_ = 0u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_penetrateextradamage() const {
  return penetrateextradamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::penetrateextradamage() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.penetrateextradamage)
  return _internal_penetrateextradamage();
}
inline void evolution_config_t_evolution_config::_internal_set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  penetrateextradamage_ = value;
}
inline void evolution_config_t_evolution_config::set_penetrateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_penetrateextradamage(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.penetrateextradamage)
}

// required uint32 accurate = 22;
inline bool evolution_config_t_evolution_config::_internal_has_accurate() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_accurate() const {
  return _internal_has_accurate();
}
inline void evolution_config_t_evolution_config::clear_accurate() {
  accurate_ = 0u;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_accurate() const {
  return accurate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::accurate() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.accurate)
  return _internal_accurate();
}
inline void evolution_config_t_evolution_config::_internal_set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00400000u;
  accurate_ = value;
}
inline void evolution_config_t_evolution_config::set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accurate(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.accurate)
}

// required uint32 accurateextradamage = 23;
inline bool evolution_config_t_evolution_config::_internal_has_accurateextradamage() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_accurateextradamage() const {
  return _internal_has_accurateextradamage();
}
inline void evolution_config_t_evolution_config::clear_accurateextradamage() {
  accurateextradamage_ = 0u;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_accurateextradamage() const {
  return accurateextradamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::accurateextradamage() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.accurateextradamage)
  return _internal_accurateextradamage();
}
inline void evolution_config_t_evolution_config::_internal_set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00800000u;
  accurateextradamage_ = value;
}
inline void evolution_config_t_evolution_config::set_accurateextradamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accurateextradamage(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.accurateextradamage)
}

// required uint32 hold = 24;
inline bool evolution_config_t_evolution_config::_internal_has_hold() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_hold() const {
  return _internal_has_hold();
}
inline void evolution_config_t_evolution_config::clear_hold() {
  hold_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_hold() const {
  return hold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::hold() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.hold)
  return _internal_hold();
}
inline void evolution_config_t_evolution_config::_internal_set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  hold_ = value;
}
inline void evolution_config_t_evolution_config::set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hold(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.hold)
}

// required uint32 holdreducedamage = 25;
inline bool evolution_config_t_evolution_config::_internal_has_holdreducedamage() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_holdreducedamage() const {
  return _internal_has_holdreducedamage();
}
inline void evolution_config_t_evolution_config::clear_holdreducedamage() {
  holdreducedamage_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_holdreducedamage() const {
  return holdreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::holdreducedamage() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.holdreducedamage)
  return _internal_holdreducedamage();
}
inline void evolution_config_t_evolution_config::_internal_set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  holdreducedamage_ = value;
}
inline void evolution_config_t_evolution_config::set_holdreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_holdreducedamage(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.holdreducedamage)
}

// required uint32 deflect = 26;
inline bool evolution_config_t_evolution_config::_internal_has_deflect() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_deflect() const {
  return _internal_has_deflect();
}
inline void evolution_config_t_evolution_config::clear_deflect() {
  deflect_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_deflect() const {
  return deflect_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::deflect() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.deflect)
  return _internal_deflect();
}
inline void evolution_config_t_evolution_config::_internal_set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  deflect_ = value;
}
inline void evolution_config_t_evolution_config::set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deflect(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.deflect)
}

// required uint32 deflectreducedamage = 27;
inline bool evolution_config_t_evolution_config::_internal_has_deflectreducedamage() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_deflectreducedamage() const {
  return _internal_has_deflectreducedamage();
}
inline void evolution_config_t_evolution_config::clear_deflectreducedamage() {
  deflectreducedamage_ = 0u;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_deflectreducedamage() const {
  return deflectreducedamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::deflectreducedamage() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.deflectreducedamage)
  return _internal_deflectreducedamage();
}
inline void evolution_config_t_evolution_config::_internal_set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x08000000u;
  deflectreducedamage_ = value;
}
inline void evolution_config_t_evolution_config::set_deflectreducedamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deflectreducedamage(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.deflectreducedamage)
}

// required uint32 hit = 28;
inline bool evolution_config_t_evolution_config::_internal_has_hit() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_hit() const {
  return _internal_has_hit();
}
inline void evolution_config_t_evolution_config::clear_hit() {
  hit_ = 0u;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_hit() const {
  return hit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::hit() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.hit)
  return _internal_hit();
}
inline void evolution_config_t_evolution_config::_internal_set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x10000000u;
  hit_ = value;
}
inline void evolution_config_t_evolution_config::set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hit(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.hit)
}

// required uint32 miss = 29;
inline bool evolution_config_t_evolution_config::_internal_has_miss() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_miss() const {
  return _internal_has_miss();
}
inline void evolution_config_t_evolution_config::clear_miss() {
  miss_ = 0u;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::_internal_miss() const {
  return miss_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 evolution_config_t_evolution_config::miss() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.miss)
  return _internal_miss();
}
inline void evolution_config_t_evolution_config::_internal_set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x20000000u;
  miss_ = value;
}
inline void evolution_config_t_evolution_config::set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_miss(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.miss)
}

// required string skillid = 30;
inline bool evolution_config_t_evolution_config::_internal_has_skillid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool evolution_config_t_evolution_config::has_skillid() const {
  return _internal_has_skillid();
}
inline void evolution_config_t_evolution_config::clear_skillid() {
  skillid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& evolution_config_t_evolution_config::skillid() const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.t_evolution_config.skillid)
  return _internal_skillid();
}
inline void evolution_config_t_evolution_config::set_skillid(const std::string& value) {
  _internal_set_skillid(value);
  // @@protoc_insertion_point(field_set:pb.evolution_config.t_evolution_config.skillid)
}
inline std::string* evolution_config_t_evolution_config::mutable_skillid() {
  // @@protoc_insertion_point(field_mutable:pb.evolution_config.t_evolution_config.skillid)
  return _internal_mutable_skillid();
}
inline const std::string& evolution_config_t_evolution_config::_internal_skillid() const {
  return skillid_.GetNoArena();
}
inline void evolution_config_t_evolution_config::_internal_set_skillid(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  skillid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void evolution_config_t_evolution_config::set_skillid(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  skillid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.evolution_config.t_evolution_config.skillid)
}
inline void evolution_config_t_evolution_config::set_skillid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  skillid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.evolution_config.t_evolution_config.skillid)
}
inline void evolution_config_t_evolution_config::set_skillid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  skillid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.evolution_config.t_evolution_config.skillid)
}
inline std::string* evolution_config_t_evolution_config::_internal_mutable_skillid() {
  _has_bits_[0] |= 0x00000020u;
  return skillid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* evolution_config_t_evolution_config::release_skillid() {
  // @@protoc_insertion_point(field_release:pb.evolution_config.t_evolution_config.skillid)
  if (!_internal_has_skillid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return skillid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void evolution_config_t_evolution_config::set_allocated_skillid(std::string* skillid) {
  if (skillid != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  skillid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), skillid);
  // @@protoc_insertion_point(field_set_allocated:pb.evolution_config.t_evolution_config.skillid)
}

// -------------------------------------------------------------------

// evolution_config

// repeated .pb.evolution_config.t_evolution_config datas = 1;
inline int evolution_config::_internal_datas_size() const {
  return datas_.size();
}
inline int evolution_config::datas_size() const {
  return _internal_datas_size();
}
inline void evolution_config::clear_datas() {
  datas_.Clear();
}
inline ::pb::evolution_config_t_evolution_config* evolution_config::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:pb.evolution_config.datas)
  return datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::evolution_config_t_evolution_config >*
evolution_config::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:pb.evolution_config.datas)
  return &datas_;
}
inline const ::pb::evolution_config_t_evolution_config& evolution_config::_internal_datas(int index) const {
  return datas_.Get(index);
}
inline const ::pb::evolution_config_t_evolution_config& evolution_config::datas(int index) const {
  // @@protoc_insertion_point(field_get:pb.evolution_config.datas)
  return _internal_datas(index);
}
inline ::pb::evolution_config_t_evolution_config* evolution_config::_internal_add_datas() {
  return datas_.Add();
}
inline ::pb::evolution_config_t_evolution_config* evolution_config::add_datas() {
  // @@protoc_insertion_point(field_add:pb.evolution_config.datas)
  return _internal_add_datas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::evolution_config_t_evolution_config >&
evolution_config::datas() const {
  // @@protoc_insertion_point(field_list:pb.evolution_config.datas)
  return datas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_evolution_5fconfig_2eproto
