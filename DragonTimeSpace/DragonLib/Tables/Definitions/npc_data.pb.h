// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: npc_data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_npc_5fdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_npc_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_npc_5fdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_npc_5fdata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_npc_5fdata_2eproto;
namespace pb {
class npc_data;
class npc_dataDefaultTypeInternal;
extern npc_dataDefaultTypeInternal _npc_data_default_instance_;
class npc_data_t_npc_config;
class npc_data_t_npc_configDefaultTypeInternal;
extern npc_data_t_npc_configDefaultTypeInternal _npc_data_t_npc_config_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::npc_data* Arena::CreateMaybeMessage<::pb::npc_data>(Arena*);
template<> ::pb::npc_data_t_npc_config* Arena::CreateMaybeMessage<::pb::npc_data_t_npc_config>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

// ===================================================================

class npc_data_t_npc_config :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.npc_data.t_npc_config) */ {
 public:
  npc_data_t_npc_config();
  virtual ~npc_data_t_npc_config();

  npc_data_t_npc_config(const npc_data_t_npc_config& from);
  npc_data_t_npc_config(npc_data_t_npc_config&& from) noexcept
    : npc_data_t_npc_config() {
    *this = ::std::move(from);
  }

  inline npc_data_t_npc_config& operator=(const npc_data_t_npc_config& from) {
    CopyFrom(from);
    return *this;
  }
  inline npc_data_t_npc_config& operator=(npc_data_t_npc_config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const npc_data_t_npc_config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const npc_data_t_npc_config* internal_default_instance() {
    return reinterpret_cast<const npc_data_t_npc_config*>(
               &_npc_data_t_npc_config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(npc_data_t_npc_config& a, npc_data_t_npc_config& b) {
    a.Swap(&b);
  }
  inline void Swap(npc_data_t_npc_config* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline npc_data_t_npc_config* New() const final {
    return CreateMaybeMessage<npc_data_t_npc_config>(nullptr);
  }

  npc_data_t_npc_config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<npc_data_t_npc_config>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const npc_data_t_npc_config& from);
  void MergeFrom(const npc_data_t_npc_config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(npc_data_t_npc_config* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.npc_data.t_npc_config";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_npc_5fdata_2eproto);
    return ::descriptor_table_npc_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kAnimatorcontrollerFieldNumber = 7,
    kModelFieldNumber = 8,
    kUimodelsizeFieldNumber = 9,
    kVisiticonFieldNumber = 11,
    kVisitbtnFieldNumber = 12,
    kBorneffectFieldNumber = 19,
    kTaskidFieldNumber = 21,
    kHeropaintingFieldNumber = 27,
    kHerostateFieldNumber = 28,
    kIconFieldNumber = 82,
    kBigiconFieldNumber = 83,
    kUIiconFieldNumber = 84,
    kModelsizeFieldNumber = 85,
    kShowConditionsFieldNumber = 86,
    kHideConditionsFieldNumber = 87,
    kEffectAppearanceFieldNumber = 88,
    kBipbindExcursionFieldNumber = 89,
    kModelposfor3DiconFieldNumber = 90,
    kModelCon4ChaFieldNumber = 95,
    kModelCon4HeroFieldNumber = 96,
    kModelCon4GuideFieldNumber = 97,
    kCapsuleColliderFieldNumber = 98,
    kFunctionFieldNumber = 99,
    kTbxidFieldNumber = 1,
    kIdFieldNumber = 2,
    kKindFieldNumber = 4,
    kLevelFieldNumber = 5,
    kDistanceFieldNumber = 6,
    kUimodelrotationFieldNumber = 10,
    kCountryidFieldNumber = 13,
    kMapinfoFieldNumber = 14,
    kShowMapFieldNumber = 15,
    kNotShowNameFieldNumber = 16,
    kBorntimeFieldNumber = 17,
    kBornactionFieldNumber = 18,
    kNotBeselectFieldNumber = 20,
    kShowShadowFieldNumber = 22,
    kBodysizeFieldNumber = 23,
    kHplayerFieldNumber = 24,
    kVolumeFieldNumber = 25,
    kAppparentvolumeFieldNumber = 26,
    kPdamageFieldNumber = 29,
    kMdamageFieldNumber = 30,
    kPdefenceFieldNumber = 31,
    kMdefenceFieldNumber = 32,
    kMaxhpFieldNumber = 33,
    kMaxmpFieldNumber = 34,
    kBangFieldNumber = 35,
    kBangextradamFieldNumber = 36,
    kToughnessFieldNumber = 37,
    kToughnessReducedamFieldNumber = 38,
    kBlockFieldNumber = 39,
    kBlockReduceDamFieldNumber = 40,
    kPenetrateFieldNumber = 41,
    kPenetrateExtraDamFieldNumber = 42,
    kAccurateFieldNumber = 43,
    kAccurateExtraDamFieldNumber = 44,
    kHoldFieldNumber = 45,
    kHoldReduceDamFieldNumber = 46,
    kDeflectFieldNumber = 47,
    kDeflectReduceDamFieldNumber = 48,
    kRealdamFieldNumber = 49,
    kRealReduceDamFieldNumber = 50,
    kHitFieldNumber = 51,
    kMissFieldNumber = 52,
    kFiremasteryFieldNumber = 53,
    kIcemasteryFieldNumber = 54,
    kLightningmasteryFieldNumber = 55,
    kBrightmasteryFieldNumber = 56,
    kDarkmasteryFieldNumber = 57,
    kFireresistFieldNumber = 58,
    kIceresistFieldNumber = 59,
    kLightningresistFieldNumber = 60,
    kBrightresistFieldNumber = 61,
    kDarkresistFieldNumber = 62,
    kFirepenFieldNumber = 63,
    kIcepenFieldNumber = 64,
    kLightningpenFieldNumber = 65,
    kBrightpenFieldNumber = 66,
    kDarkpenFieldNumber = 67,
    kBlowintFieldNumber = 68,
    kKnockintFieldNumber = 69,
    kFloatintFieldNumber = 70,
    kSuperhitintFieldNumber = 71,
    kBlowresistFieldNumber = 72,
    kKnockresistFieldNumber = 73,
    kFloatresistFieldNumber = 74,
    kSuperhitresistFieldNumber = 75,
    kBlowdectimeFieldNumber = 76,
    kKnockdectimeFieldNumber = 77,
    kFloatdectimeFieldNumber = 78,
    kSuperhitdectimeFieldNumber = 79,
    kStiffaddtimeFieldNumber = 80,
    kStiffdectimeFieldNumber = 81,
    kHatredDistanceFieldNumber = 91,
    kGuardRegionFieldNumber = 92,
    kVisitfollowFieldNumber = 93,
    kLookatFieldNumber = 94,
  };
  // required string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // required string animatorcontroller = 7;
  bool has_animatorcontroller() const;
  private:
  bool _internal_has_animatorcontroller() const;
  public:
  void clear_animatorcontroller();
  const std::string& animatorcontroller() const;
  void set_animatorcontroller(const std::string& value);
  void set_animatorcontroller(std::string&& value);
  void set_animatorcontroller(const char* value);
  void set_animatorcontroller(const char* value, size_t size);
  std::string* mutable_animatorcontroller();
  std::string* release_animatorcontroller();
  void set_allocated_animatorcontroller(std::string* animatorcontroller);
  private:
  const std::string& _internal_animatorcontroller() const;
  void _internal_set_animatorcontroller(const std::string& value);
  std::string* _internal_mutable_animatorcontroller();
  public:

  // required string model = 8;
  bool has_model() const;
  private:
  bool _internal_has_model() const;
  public:
  void clear_model();
  const std::string& model() const;
  void set_model(const std::string& value);
  void set_model(std::string&& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  std::string* mutable_model();
  std::string* release_model();
  void set_allocated_model(std::string* model);
  private:
  const std::string& _internal_model() const;
  void _internal_set_model(const std::string& value);
  std::string* _internal_mutable_model();
  public:

  // required string uimodelsize = 9;
  bool has_uimodelsize() const;
  private:
  bool _internal_has_uimodelsize() const;
  public:
  void clear_uimodelsize();
  const std::string& uimodelsize() const;
  void set_uimodelsize(const std::string& value);
  void set_uimodelsize(std::string&& value);
  void set_uimodelsize(const char* value);
  void set_uimodelsize(const char* value, size_t size);
  std::string* mutable_uimodelsize();
  std::string* release_uimodelsize();
  void set_allocated_uimodelsize(std::string* uimodelsize);
  private:
  const std::string& _internal_uimodelsize() const;
  void _internal_set_uimodelsize(const std::string& value);
  std::string* _internal_mutable_uimodelsize();
  public:

  // required string visiticon = 11;
  bool has_visiticon() const;
  private:
  bool _internal_has_visiticon() const;
  public:
  void clear_visiticon();
  const std::string& visiticon() const;
  void set_visiticon(const std::string& value);
  void set_visiticon(std::string&& value);
  void set_visiticon(const char* value);
  void set_visiticon(const char* value, size_t size);
  std::string* mutable_visiticon();
  std::string* release_visiticon();
  void set_allocated_visiticon(std::string* visiticon);
  private:
  const std::string& _internal_visiticon() const;
  void _internal_set_visiticon(const std::string& value);
  std::string* _internal_mutable_visiticon();
  public:

  // required string visitbtn = 12;
  bool has_visitbtn() const;
  private:
  bool _internal_has_visitbtn() const;
  public:
  void clear_visitbtn();
  const std::string& visitbtn() const;
  void set_visitbtn(const std::string& value);
  void set_visitbtn(std::string&& value);
  void set_visitbtn(const char* value);
  void set_visitbtn(const char* value, size_t size);
  std::string* mutable_visitbtn();
  std::string* release_visitbtn();
  void set_allocated_visitbtn(std::string* visitbtn);
  private:
  const std::string& _internal_visitbtn() const;
  void _internal_set_visitbtn(const std::string& value);
  std::string* _internal_mutable_visitbtn();
  public:

  // required string borneffect = 19;
  bool has_borneffect() const;
  private:
  bool _internal_has_borneffect() const;
  public:
  void clear_borneffect();
  const std::string& borneffect() const;
  void set_borneffect(const std::string& value);
  void set_borneffect(std::string&& value);
  void set_borneffect(const char* value);
  void set_borneffect(const char* value, size_t size);
  std::string* mutable_borneffect();
  std::string* release_borneffect();
  void set_allocated_borneffect(std::string* borneffect);
  private:
  const std::string& _internal_borneffect() const;
  void _internal_set_borneffect(const std::string& value);
  std::string* _internal_mutable_borneffect();
  public:

  // required string taskid = 21;
  bool has_taskid() const;
  private:
  bool _internal_has_taskid() const;
  public:
  void clear_taskid();
  const std::string& taskid() const;
  void set_taskid(const std::string& value);
  void set_taskid(std::string&& value);
  void set_taskid(const char* value);
  void set_taskid(const char* value, size_t size);
  std::string* mutable_taskid();
  std::string* release_taskid();
  void set_allocated_taskid(std::string* taskid);
  private:
  const std::string& _internal_taskid() const;
  void _internal_set_taskid(const std::string& value);
  std::string* _internal_mutable_taskid();
  public:

  // required string heropainting = 27;
  bool has_heropainting() const;
  private:
  bool _internal_has_heropainting() const;
  public:
  void clear_heropainting();
  const std::string& heropainting() const;
  void set_heropainting(const std::string& value);
  void set_heropainting(std::string&& value);
  void set_heropainting(const char* value);
  void set_heropainting(const char* value, size_t size);
  std::string* mutable_heropainting();
  std::string* release_heropainting();
  void set_allocated_heropainting(std::string* heropainting);
  private:
  const std::string& _internal_heropainting() const;
  void _internal_set_heropainting(const std::string& value);
  std::string* _internal_mutable_heropainting();
  public:

  // required string herostate = 28;
  bool has_herostate() const;
  private:
  bool _internal_has_herostate() const;
  public:
  void clear_herostate();
  const std::string& herostate() const;
  void set_herostate(const std::string& value);
  void set_herostate(std::string&& value);
  void set_herostate(const char* value);
  void set_herostate(const char* value, size_t size);
  std::string* mutable_herostate();
  std::string* release_herostate();
  void set_allocated_herostate(std::string* herostate);
  private:
  const std::string& _internal_herostate() const;
  void _internal_set_herostate(const std::string& value);
  std::string* _internal_mutable_herostate();
  public:

  // required string icon = 82;
  bool has_icon() const;
  private:
  bool _internal_has_icon() const;
  public:
  void clear_icon();
  const std::string& icon() const;
  void set_icon(const std::string& value);
  void set_icon(std::string&& value);
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  std::string* mutable_icon();
  std::string* release_icon();
  void set_allocated_icon(std::string* icon);
  private:
  const std::string& _internal_icon() const;
  void _internal_set_icon(const std::string& value);
  std::string* _internal_mutable_icon();
  public:

  // required string bigicon = 83;
  bool has_bigicon() const;
  private:
  bool _internal_has_bigicon() const;
  public:
  void clear_bigicon();
  const std::string& bigicon() const;
  void set_bigicon(const std::string& value);
  void set_bigicon(std::string&& value);
  void set_bigicon(const char* value);
  void set_bigicon(const char* value, size_t size);
  std::string* mutable_bigicon();
  std::string* release_bigicon();
  void set_allocated_bigicon(std::string* bigicon);
  private:
  const std::string& _internal_bigicon() const;
  void _internal_set_bigicon(const std::string& value);
  std::string* _internal_mutable_bigicon();
  public:

  // required string UIicon = 84;
  bool has_uiicon() const;
  private:
  bool _internal_has_uiicon() const;
  public:
  void clear_uiicon();
  const std::string& uiicon() const;
  void set_uiicon(const std::string& value);
  void set_uiicon(std::string&& value);
  void set_uiicon(const char* value);
  void set_uiicon(const char* value, size_t size);
  std::string* mutable_uiicon();
  std::string* release_uiicon();
  void set_allocated_uiicon(std::string* uiicon);
  private:
  const std::string& _internal_uiicon() const;
  void _internal_set_uiicon(const std::string& value);
  std::string* _internal_mutable_uiicon();
  public:

  // required string modelsize = 85;
  bool has_modelsize() const;
  private:
  bool _internal_has_modelsize() const;
  public:
  void clear_modelsize();
  const std::string& modelsize() const;
  void set_modelsize(const std::string& value);
  void set_modelsize(std::string&& value);
  void set_modelsize(const char* value);
  void set_modelsize(const char* value, size_t size);
  std::string* mutable_modelsize();
  std::string* release_modelsize();
  void set_allocated_modelsize(std::string* modelsize);
  private:
  const std::string& _internal_modelsize() const;
  void _internal_set_modelsize(const std::string& value);
  std::string* _internal_mutable_modelsize();
  public:

  // required string show_conditions = 86;
  bool has_show_conditions() const;
  private:
  bool _internal_has_show_conditions() const;
  public:
  void clear_show_conditions();
  const std::string& show_conditions() const;
  void set_show_conditions(const std::string& value);
  void set_show_conditions(std::string&& value);
  void set_show_conditions(const char* value);
  void set_show_conditions(const char* value, size_t size);
  std::string* mutable_show_conditions();
  std::string* release_show_conditions();
  void set_allocated_show_conditions(std::string* show_conditions);
  private:
  const std::string& _internal_show_conditions() const;
  void _internal_set_show_conditions(const std::string& value);
  std::string* _internal_mutable_show_conditions();
  public:

  // required string hide_conditions = 87;
  bool has_hide_conditions() const;
  private:
  bool _internal_has_hide_conditions() const;
  public:
  void clear_hide_conditions();
  const std::string& hide_conditions() const;
  void set_hide_conditions(const std::string& value);
  void set_hide_conditions(std::string&& value);
  void set_hide_conditions(const char* value);
  void set_hide_conditions(const char* value, size_t size);
  std::string* mutable_hide_conditions();
  std::string* release_hide_conditions();
  void set_allocated_hide_conditions(std::string* hide_conditions);
  private:
  const std::string& _internal_hide_conditions() const;
  void _internal_set_hide_conditions(const std::string& value);
  std::string* _internal_mutable_hide_conditions();
  public:

  // required string effect_appearance = 88;
  bool has_effect_appearance() const;
  private:
  bool _internal_has_effect_appearance() const;
  public:
  void clear_effect_appearance();
  const std::string& effect_appearance() const;
  void set_effect_appearance(const std::string& value);
  void set_effect_appearance(std::string&& value);
  void set_effect_appearance(const char* value);
  void set_effect_appearance(const char* value, size_t size);
  std::string* mutable_effect_appearance();
  std::string* release_effect_appearance();
  void set_allocated_effect_appearance(std::string* effect_appearance);
  private:
  const std::string& _internal_effect_appearance() const;
  void _internal_set_effect_appearance(const std::string& value);
  std::string* _internal_mutable_effect_appearance();
  public:

  // required string bipbind_excursion = 89;
  bool has_bipbind_excursion() const;
  private:
  bool _internal_has_bipbind_excursion() const;
  public:
  void clear_bipbind_excursion();
  const std::string& bipbind_excursion() const;
  void set_bipbind_excursion(const std::string& value);
  void set_bipbind_excursion(std::string&& value);
  void set_bipbind_excursion(const char* value);
  void set_bipbind_excursion(const char* value, size_t size);
  std::string* mutable_bipbind_excursion();
  std::string* release_bipbind_excursion();
  void set_allocated_bipbind_excursion(std::string* bipbind_excursion);
  private:
  const std::string& _internal_bipbind_excursion() const;
  void _internal_set_bipbind_excursion(const std::string& value);
  std::string* _internal_mutable_bipbind_excursion();
  public:

  // required string modelposfor3dicon = 90;
  bool has_modelposfor3dicon() const;
  private:
  bool _internal_has_modelposfor3dicon() const;
  public:
  void clear_modelposfor3dicon();
  const std::string& modelposfor3dicon() const;
  void set_modelposfor3dicon(const std::string& value);
  void set_modelposfor3dicon(std::string&& value);
  void set_modelposfor3dicon(const char* value);
  void set_modelposfor3dicon(const char* value, size_t size);
  std::string* mutable_modelposfor3dicon();
  std::string* release_modelposfor3dicon();
  void set_allocated_modelposfor3dicon(std::string* modelposfor3dicon);
  private:
  const std::string& _internal_modelposfor3dicon() const;
  void _internal_set_modelposfor3dicon(const std::string& value);
  std::string* _internal_mutable_modelposfor3dicon();
  public:

  // required string modelCon4Cha = 95;
  bool has_modelcon4cha() const;
  private:
  bool _internal_has_modelcon4cha() const;
  public:
  void clear_modelcon4cha();
  const std::string& modelcon4cha() const;
  void set_modelcon4cha(const std::string& value);
  void set_modelcon4cha(std::string&& value);
  void set_modelcon4cha(const char* value);
  void set_modelcon4cha(const char* value, size_t size);
  std::string* mutable_modelcon4cha();
  std::string* release_modelcon4cha();
  void set_allocated_modelcon4cha(std::string* modelcon4cha);
  private:
  const std::string& _internal_modelcon4cha() const;
  void _internal_set_modelcon4cha(const std::string& value);
  std::string* _internal_mutable_modelcon4cha();
  public:

  // required string modelCon4Hero = 96;
  bool has_modelcon4hero() const;
  private:
  bool _internal_has_modelcon4hero() const;
  public:
  void clear_modelcon4hero();
  const std::string& modelcon4hero() const;
  void set_modelcon4hero(const std::string& value);
  void set_modelcon4hero(std::string&& value);
  void set_modelcon4hero(const char* value);
  void set_modelcon4hero(const char* value, size_t size);
  std::string* mutable_modelcon4hero();
  std::string* release_modelcon4hero();
  void set_allocated_modelcon4hero(std::string* modelcon4hero);
  private:
  const std::string& _internal_modelcon4hero() const;
  void _internal_set_modelcon4hero(const std::string& value);
  std::string* _internal_mutable_modelcon4hero();
  public:

  // required string modelCon4Guide = 97;
  bool has_modelcon4guide() const;
  private:
  bool _internal_has_modelcon4guide() const;
  public:
  void clear_modelcon4guide();
  const std::string& modelcon4guide() const;
  void set_modelcon4guide(const std::string& value);
  void set_modelcon4guide(std::string&& value);
  void set_modelcon4guide(const char* value);
  void set_modelcon4guide(const char* value, size_t size);
  std::string* mutable_modelcon4guide();
  std::string* release_modelcon4guide();
  void set_allocated_modelcon4guide(std::string* modelcon4guide);
  private:
  const std::string& _internal_modelcon4guide() const;
  void _internal_set_modelcon4guide(const std::string& value);
  std::string* _internal_mutable_modelcon4guide();
  public:

  // required string CapsuleCollider = 98;
  bool has_capsulecollider() const;
  private:
  bool _internal_has_capsulecollider() const;
  public:
  void clear_capsulecollider();
  const std::string& capsulecollider() const;
  void set_capsulecollider(const std::string& value);
  void set_capsulecollider(std::string&& value);
  void set_capsulecollider(const char* value);
  void set_capsulecollider(const char* value, size_t size);
  std::string* mutable_capsulecollider();
  std::string* release_capsulecollider();
  void set_allocated_capsulecollider(std::string* capsulecollider);
  private:
  const std::string& _internal_capsulecollider() const;
  void _internal_set_capsulecollider(const std::string& value);
  std::string* _internal_mutable_capsulecollider();
  public:

  // required string function = 99;
  bool has_function() const;
  private:
  bool _internal_has_function() const;
  public:
  void clear_function();
  const std::string& function() const;
  void set_function(const std::string& value);
  void set_function(std::string&& value);
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  std::string* mutable_function();
  std::string* release_function();
  void set_allocated_function(std::string* function);
  private:
  const std::string& _internal_function() const;
  void _internal_set_function(const std::string& value);
  std::string* _internal_mutable_function();
  public:

  // required uint32 tbxid = 1 [default = 0];
  bool has_tbxid() const;
  private:
  bool _internal_has_tbxid() const;
  public:
  void clear_tbxid();
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid() const;
  void set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tbxid() const;
  void _internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 id = 2 [default = 0];
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 kind = 4;
  bool has_kind() const;
  private:
  bool _internal_has_kind() const;
  public:
  void clear_kind();
  ::PROTOBUF_NAMESPACE_ID::uint32 kind() const;
  void set_kind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_kind() const;
  void _internal_set_kind(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 level = 5;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 distance = 6;
  bool has_distance() const;
  private:
  bool _internal_has_distance() const;
  public:
  void clear_distance();
  ::PROTOBUF_NAMESPACE_ID::uint32 distance() const;
  void set_distance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_distance() const;
  void _internal_set_distance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 uimodelrotation = 10;
  bool has_uimodelrotation() const;
  private:
  bool _internal_has_uimodelrotation() const;
  public:
  void clear_uimodelrotation();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimodelrotation() const;
  void set_uimodelrotation(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimodelrotation() const;
  void _internal_set_uimodelrotation(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 countryid = 13;
  bool has_countryid() const;
  private:
  bool _internal_has_countryid() const;
  public:
  void clear_countryid();
  ::PROTOBUF_NAMESPACE_ID::uint32 countryid() const;
  void set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_countryid() const;
  void _internal_set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 mapinfo = 14;
  bool has_mapinfo() const;
  private:
  bool _internal_has_mapinfo() const;
  public:
  void clear_mapinfo();
  ::PROTOBUF_NAMESPACE_ID::uint32 mapinfo() const;
  void set_mapinfo(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mapinfo() const;
  void _internal_set_mapinfo(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 show_map = 15;
  bool has_show_map() const;
  private:
  bool _internal_has_show_map() const;
  public:
  void clear_show_map();
  ::PROTOBUF_NAMESPACE_ID::uint32 show_map() const;
  void set_show_map(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_show_map() const;
  void _internal_set_show_map(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 not_show_name = 16;
  bool has_not_show_name() const;
  private:
  bool _internal_has_not_show_name() const;
  public:
  void clear_not_show_name();
  ::PROTOBUF_NAMESPACE_ID::uint32 not_show_name() const;
  void set_not_show_name(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_not_show_name() const;
  void _internal_set_not_show_name(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 borntime = 17;
  bool has_borntime() const;
  private:
  bool _internal_has_borntime() const;
  public:
  void clear_borntime();
  ::PROTOBUF_NAMESPACE_ID::uint32 borntime() const;
  void set_borntime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_borntime() const;
  void _internal_set_borntime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 bornaction = 18;
  bool has_bornaction() const;
  private:
  bool _internal_has_bornaction() const;
  public:
  void clear_bornaction();
  ::PROTOBUF_NAMESPACE_ID::uint32 bornaction() const;
  void set_bornaction(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bornaction() const;
  void _internal_set_bornaction(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required bool not_beselect = 20;
  bool has_not_beselect() const;
  private:
  bool _internal_has_not_beselect() const;
  public:
  void clear_not_beselect();
  bool not_beselect() const;
  void set_not_beselect(bool value);
  private:
  bool _internal_not_beselect() const;
  void _internal_set_not_beselect(bool value);
  public:

  // required uint32 show_shadow = 22;
  bool has_show_shadow() const;
  private:
  bool _internal_has_show_shadow() const;
  public:
  void clear_show_shadow();
  ::PROTOBUF_NAMESPACE_ID::uint32 show_shadow() const;
  void set_show_shadow(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_show_shadow() const;
  void _internal_set_show_shadow(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 bodysize = 23;
  bool has_bodysize() const;
  private:
  bool _internal_has_bodysize() const;
  public:
  void clear_bodysize();
  ::PROTOBUF_NAMESPACE_ID::uint32 bodysize() const;
  void set_bodysize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bodysize() const;
  void _internal_set_bodysize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 hplayer = 24;
  bool has_hplayer() const;
  private:
  bool _internal_has_hplayer() const;
  public:
  void clear_hplayer();
  ::PROTOBUF_NAMESPACE_ID::uint32 hplayer() const;
  void set_hplayer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hplayer() const;
  void _internal_set_hplayer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 volume = 25;
  bool has_volume() const;
  private:
  bool _internal_has_volume() const;
  public:
  void clear_volume();
  ::PROTOBUF_NAMESPACE_ID::uint32 volume() const;
  void set_volume(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_volume() const;
  void _internal_set_volume(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 appparentvolume = 26;
  bool has_appparentvolume() const;
  private:
  bool _internal_has_appparentvolume() const;
  public:
  void clear_appparentvolume();
  ::PROTOBUF_NAMESPACE_ID::uint32 appparentvolume() const;
  void set_appparentvolume(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appparentvolume() const;
  void _internal_set_appparentvolume(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 pdamage = 29;
  bool has_pdamage() const;
  private:
  bool _internal_has_pdamage() const;
  public:
  void clear_pdamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdamage() const;
  void set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdamage() const;
  void _internal_set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 mdamage = 30;
  bool has_mdamage() const;
  private:
  bool _internal_has_mdamage() const;
  public:
  void clear_mdamage();
  ::PROTOBUF_NAMESPACE_ID::uint32 mdamage() const;
  void set_mdamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mdamage() const;
  void _internal_set_mdamage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 pdefence = 31;
  bool has_pdefence() const;
  private:
  bool _internal_has_pdefence() const;
  public:
  void clear_pdefence();
  ::PROTOBUF_NAMESPACE_ID::uint32 pdefence() const;
  void set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdefence() const;
  void _internal_set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 mdefence = 32;
  bool has_mdefence() const;
  private:
  bool _internal_has_mdefence() const;
  public:
  void clear_mdefence();
  ::PROTOBUF_NAMESPACE_ID::uint32 mdefence() const;
  void set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mdefence() const;
  void _internal_set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 maxhp = 33;
  bool has_maxhp() const;
  private:
  bool _internal_has_maxhp() const;
  public:
  void clear_maxhp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp() const;
  void set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxhp() const;
  void _internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 maxmp = 34;
  bool has_maxmp() const;
  private:
  bool _internal_has_maxmp() const;
  public:
  void clear_maxmp();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxmp() const;
  void set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxmp() const;
  void _internal_set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 bang = 35;
  bool has_bang() const;
  private:
  bool _internal_has_bang() const;
  public:
  void clear_bang();
  ::PROTOBUF_NAMESPACE_ID::uint32 bang() const;
  void set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bang() const;
  void _internal_set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 bangextradam = 36;
  bool has_bangextradam() const;
  private:
  bool _internal_has_bangextradam() const;
  public:
  void clear_bangextradam();
  ::PROTOBUF_NAMESPACE_ID::uint32 bangextradam() const;
  void set_bangextradam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bangextradam() const;
  void _internal_set_bangextradam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 toughness = 37;
  bool has_toughness() const;
  private:
  bool _internal_has_toughness() const;
  public:
  void clear_toughness();
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness() const;
  void set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_toughness() const;
  void _internal_set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 toughness_reducedam = 38;
  bool has_toughness_reducedam() const;
  private:
  bool _internal_has_toughness_reducedam() const;
  public:
  void clear_toughness_reducedam();
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness_reducedam() const;
  void set_toughness_reducedam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_toughness_reducedam() const;
  void _internal_set_toughness_reducedam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 block = 39;
  bool has_block() const;
  private:
  bool _internal_has_block() const;
  public:
  void clear_block();
  ::PROTOBUF_NAMESPACE_ID::uint32 block() const;
  void set_block(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_block() const;
  void _internal_set_block(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 block_reduce_dam = 40;
  bool has_block_reduce_dam() const;
  private:
  bool _internal_has_block_reduce_dam() const;
  public:
  void clear_block_reduce_dam();
  ::PROTOBUF_NAMESPACE_ID::uint32 block_reduce_dam() const;
  void set_block_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_block_reduce_dam() const;
  void _internal_set_block_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 penetrate = 41;
  bool has_penetrate() const;
  private:
  bool _internal_has_penetrate() const;
  public:
  void clear_penetrate();
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrate() const;
  void set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_penetrate() const;
  void _internal_set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 penetrate_extra_dam = 42;
  bool has_penetrate_extra_dam() const;
  private:
  bool _internal_has_penetrate_extra_dam() const;
  public:
  void clear_penetrate_extra_dam();
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrate_extra_dam() const;
  void set_penetrate_extra_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_penetrate_extra_dam() const;
  void _internal_set_penetrate_extra_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 accurate = 43;
  bool has_accurate() const;
  private:
  bool _internal_has_accurate() const;
  public:
  void clear_accurate();
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate() const;
  void set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accurate() const;
  void _internal_set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 accurate_extra_dam = 44;
  bool has_accurate_extra_dam() const;
  private:
  bool _internal_has_accurate_extra_dam() const;
  public:
  void clear_accurate_extra_dam();
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate_extra_dam() const;
  void set_accurate_extra_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accurate_extra_dam() const;
  void _internal_set_accurate_extra_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 hold = 45;
  bool has_hold() const;
  private:
  bool _internal_has_hold() const;
  public:
  void clear_hold();
  ::PROTOBUF_NAMESPACE_ID::uint32 hold() const;
  void set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hold() const;
  void _internal_set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 hold_reduce_dam = 46;
  bool has_hold_reduce_dam() const;
  private:
  bool _internal_has_hold_reduce_dam() const;
  public:
  void clear_hold_reduce_dam();
  ::PROTOBUF_NAMESPACE_ID::uint32 hold_reduce_dam() const;
  void set_hold_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hold_reduce_dam() const;
  void _internal_set_hold_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 deflect = 47;
  bool has_deflect() const;
  private:
  bool _internal_has_deflect() const;
  public:
  void clear_deflect();
  ::PROTOBUF_NAMESPACE_ID::uint32 deflect() const;
  void set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deflect() const;
  void _internal_set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 deflect_reduce_dam = 48;
  bool has_deflect_reduce_dam() const;
  private:
  bool _internal_has_deflect_reduce_dam() const;
  public:
  void clear_deflect_reduce_dam();
  ::PROTOBUF_NAMESPACE_ID::uint32 deflect_reduce_dam() const;
  void set_deflect_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deflect_reduce_dam() const;
  void _internal_set_deflect_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 realdam = 49;
  bool has_realdam() const;
  private:
  bool _internal_has_realdam() const;
  public:
  void clear_realdam();
  ::PROTOBUF_NAMESPACE_ID::uint32 realdam() const;
  void set_realdam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_realdam() const;
  void _internal_set_realdam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 real_reduce_dam = 50;
  bool has_real_reduce_dam() const;
  private:
  bool _internal_has_real_reduce_dam() const;
  public:
  void clear_real_reduce_dam();
  ::PROTOBUF_NAMESPACE_ID::uint32 real_reduce_dam() const;
  void set_real_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_real_reduce_dam() const;
  void _internal_set_real_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 hit = 51;
  bool has_hit() const;
  private:
  bool _internal_has_hit() const;
  public:
  void clear_hit();
  ::PROTOBUF_NAMESPACE_ID::uint32 hit() const;
  void set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hit() const;
  void _internal_set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 miss = 52;
  bool has_miss() const;
  private:
  bool _internal_has_miss() const;
  public:
  void clear_miss();
  ::PROTOBUF_NAMESPACE_ID::uint32 miss() const;
  void set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_miss() const;
  void _internal_set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 firemastery = 53;
  bool has_firemastery() const;
  private:
  bool _internal_has_firemastery() const;
  public:
  void clear_firemastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 firemastery() const;
  void set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_firemastery() const;
  void _internal_set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 icemastery = 54;
  bool has_icemastery() const;
  private:
  bool _internal_has_icemastery() const;
  public:
  void clear_icemastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 icemastery() const;
  void set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_icemastery() const;
  void _internal_set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 lightningmastery = 55;
  bool has_lightningmastery() const;
  private:
  bool _internal_has_lightningmastery() const;
  public:
  void clear_lightningmastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningmastery() const;
  void set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lightningmastery() const;
  void _internal_set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 brightmastery = 56;
  bool has_brightmastery() const;
  private:
  bool _internal_has_brightmastery() const;
  public:
  void clear_brightmastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 brightmastery() const;
  void set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brightmastery() const;
  void _internal_set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 darkmastery = 57;
  bool has_darkmastery() const;
  private:
  bool _internal_has_darkmastery() const;
  public:
  void clear_darkmastery();
  ::PROTOBUF_NAMESPACE_ID::uint32 darkmastery() const;
  void set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_darkmastery() const;
  void _internal_set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 fireresist = 58;
  bool has_fireresist() const;
  private:
  bool _internal_has_fireresist() const;
  public:
  void clear_fireresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 fireresist() const;
  void set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fireresist() const;
  void _internal_set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 iceresist = 59;
  bool has_iceresist() const;
  private:
  bool _internal_has_iceresist() const;
  public:
  void clear_iceresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 iceresist() const;
  void set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_iceresist() const;
  void _internal_set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 lightningresist = 60;
  bool has_lightningresist() const;
  private:
  bool _internal_has_lightningresist() const;
  public:
  void clear_lightningresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningresist() const;
  void set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lightningresist() const;
  void _internal_set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 brightresist = 61;
  bool has_brightresist() const;
  private:
  bool _internal_has_brightresist() const;
  public:
  void clear_brightresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 brightresist() const;
  void set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brightresist() const;
  void _internal_set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 darkresist = 62;
  bool has_darkresist() const;
  private:
  bool _internal_has_darkresist() const;
  public:
  void clear_darkresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 darkresist() const;
  void set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_darkresist() const;
  void _internal_set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 firepen = 63;
  bool has_firepen() const;
  private:
  bool _internal_has_firepen() const;
  public:
  void clear_firepen();
  ::PROTOBUF_NAMESPACE_ID::uint32 firepen() const;
  void set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_firepen() const;
  void _internal_set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 icepen = 64;
  bool has_icepen() const;
  private:
  bool _internal_has_icepen() const;
  public:
  void clear_icepen();
  ::PROTOBUF_NAMESPACE_ID::uint32 icepen() const;
  void set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_icepen() const;
  void _internal_set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 lightningpen = 65;
  bool has_lightningpen() const;
  private:
  bool _internal_has_lightningpen() const;
  public:
  void clear_lightningpen();
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningpen() const;
  void set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lightningpen() const;
  void _internal_set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 brightpen = 66;
  bool has_brightpen() const;
  private:
  bool _internal_has_brightpen() const;
  public:
  void clear_brightpen();
  ::PROTOBUF_NAMESPACE_ID::uint32 brightpen() const;
  void set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_brightpen() const;
  void _internal_set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 darkpen = 67;
  bool has_darkpen() const;
  private:
  bool _internal_has_darkpen() const;
  public:
  void clear_darkpen();
  ::PROTOBUF_NAMESPACE_ID::uint32 darkpen() const;
  void set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_darkpen() const;
  void _internal_set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 blowint = 68;
  bool has_blowint() const;
  private:
  bool _internal_has_blowint() const;
  public:
  void clear_blowint();
  ::PROTOBUF_NAMESPACE_ID::uint32 blowint() const;
  void set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blowint() const;
  void _internal_set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 knockint = 69;
  bool has_knockint() const;
  private:
  bool _internal_has_knockint() const;
  public:
  void clear_knockint();
  ::PROTOBUF_NAMESPACE_ID::uint32 knockint() const;
  void set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_knockint() const;
  void _internal_set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 floatint = 70;
  bool has_floatint() const;
  private:
  bool _internal_has_floatint() const;
  public:
  void clear_floatint();
  ::PROTOBUF_NAMESPACE_ID::uint32 floatint() const;
  void set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_floatint() const;
  void _internal_set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 superhitint = 71;
  bool has_superhitint() const;
  private:
  bool _internal_has_superhitint() const;
  public:
  void clear_superhitint();
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitint() const;
  void set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_superhitint() const;
  void _internal_set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 blowresist = 72;
  bool has_blowresist() const;
  private:
  bool _internal_has_blowresist() const;
  public:
  void clear_blowresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 blowresist() const;
  void set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blowresist() const;
  void _internal_set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 knockresist = 73;
  bool has_knockresist() const;
  private:
  bool _internal_has_knockresist() const;
  public:
  void clear_knockresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 knockresist() const;
  void set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_knockresist() const;
  void _internal_set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 floatresist = 74;
  bool has_floatresist() const;
  private:
  bool _internal_has_floatresist() const;
  public:
  void clear_floatresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 floatresist() const;
  void set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_floatresist() const;
  void _internal_set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 superhitresist = 75;
  bool has_superhitresist() const;
  private:
  bool _internal_has_superhitresist() const;
  public:
  void clear_superhitresist();
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitresist() const;
  void set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_superhitresist() const;
  void _internal_set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 blowdectime = 76;
  bool has_blowdectime() const;
  private:
  bool _internal_has_blowdectime() const;
  public:
  void clear_blowdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 blowdectime() const;
  void set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blowdectime() const;
  void _internal_set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 knockdectime = 77;
  bool has_knockdectime() const;
  private:
  bool _internal_has_knockdectime() const;
  public:
  void clear_knockdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 knockdectime() const;
  void set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_knockdectime() const;
  void _internal_set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 floatdectime = 78;
  bool has_floatdectime() const;
  private:
  bool _internal_has_floatdectime() const;
  public:
  void clear_floatdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 floatdectime() const;
  void set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_floatdectime() const;
  void _internal_set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 superhitdectime = 79;
  bool has_superhitdectime() const;
  private:
  bool _internal_has_superhitdectime() const;
  public:
  void clear_superhitdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitdectime() const;
  void set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_superhitdectime() const;
  void _internal_set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 stiffaddtime = 80;
  bool has_stiffaddtime() const;
  private:
  bool _internal_has_stiffaddtime() const;
  public:
  void clear_stiffaddtime();
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffaddtime() const;
  void set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stiffaddtime() const;
  void _internal_set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 stiffdectime = 81;
  bool has_stiffdectime() const;
  private:
  bool _internal_has_stiffdectime() const;
  public:
  void clear_stiffdectime();
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffdectime() const;
  void set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stiffdectime() const;
  void _internal_set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 hatred_distance = 91;
  bool has_hatred_distance() const;
  private:
  bool _internal_has_hatred_distance() const;
  public:
  void clear_hatred_distance();
  ::PROTOBUF_NAMESPACE_ID::uint32 hatred_distance() const;
  void set_hatred_distance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hatred_distance() const;
  void _internal_set_hatred_distance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 guardRegion = 92;
  bool has_guardregion() const;
  private:
  bool _internal_has_guardregion() const;
  public:
  void clear_guardregion();
  ::PROTOBUF_NAMESPACE_ID::uint32 guardregion() const;
  void set_guardregion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guardregion() const;
  void _internal_set_guardregion(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 visitfollow = 93;
  bool has_visitfollow() const;
  private:
  bool _internal_has_visitfollow() const;
  public:
  void clear_visitfollow();
  ::PROTOBUF_NAMESPACE_ID::uint32 visitfollow() const;
  void set_visitfollow(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_visitfollow() const;
  void _internal_set_visitfollow(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 lookat = 94;
  bool has_lookat() const;
  private:
  bool _internal_has_lookat() const;
  public:
  void clear_lookat();
  ::PROTOBUF_NAMESPACE_ID::uint32 lookat() const;
  void set_lookat(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lookat() const;
  void _internal_set_lookat(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.npc_data.t_npc_config)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<4> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr animatorcontroller_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr uimodelsize_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr visiticon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr visitbtn_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr borneffect_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr taskid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr heropainting_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr herostate_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr icon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bigicon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr uiicon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modelsize_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr show_conditions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hide_conditions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr effect_appearance_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bipbind_excursion_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modelposfor3dicon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modelcon4cha_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modelcon4hero_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr modelcon4guide_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr capsulecollider_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr function_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 kind_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 distance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimodelrotation_;
  ::PROTOBUF_NAMESPACE_ID::uint32 countryid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mapinfo_;
  ::PROTOBUF_NAMESPACE_ID::uint32 show_map_;
  ::PROTOBUF_NAMESPACE_ID::uint32 not_show_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 borntime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bornaction_;
  bool not_beselect_;
  ::PROTOBUF_NAMESPACE_ID::uint32 show_shadow_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bodysize_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hplayer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 volume_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appparentvolume_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mdamage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pdefence_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mdefence_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxhp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxmp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bang_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bangextradam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness_;
  ::PROTOBUF_NAMESPACE_ID::uint32 toughness_reducedam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 block_;
  ::PROTOBUF_NAMESPACE_ID::uint32 block_reduce_dam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 penetrate_extra_dam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accurate_extra_dam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hold_reduce_dam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deflect_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deflect_reduce_dam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 realdam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 real_reduce_dam_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 miss_;
  ::PROTOBUF_NAMESPACE_ID::uint32 firemastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 icemastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningmastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brightmastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 darkmastery_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fireresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 iceresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brightresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 darkresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 firepen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 icepen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lightningpen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brightpen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 darkpen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blowint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 knockint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 floatint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitint_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blowresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 knockresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 floatresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitresist_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blowdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 knockdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 floatdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 superhitdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffaddtime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stiffdectime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hatred_distance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guardregion_;
  ::PROTOBUF_NAMESPACE_ID::uint32 visitfollow_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lookat_;
  friend struct ::TableStruct_npc_5fdata_2eproto;
};
// -------------------------------------------------------------------

class npc_data :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.npc_data) */ {
 public:
  npc_data();
  virtual ~npc_data();

  npc_data(const npc_data& from);
  npc_data(npc_data&& from) noexcept
    : npc_data() {
    *this = ::std::move(from);
  }

  inline npc_data& operator=(const npc_data& from) {
    CopyFrom(from);
    return *this;
  }
  inline npc_data& operator=(npc_data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const npc_data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const npc_data* internal_default_instance() {
    return reinterpret_cast<const npc_data*>(
               &_npc_data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(npc_data& a, npc_data& b) {
    a.Swap(&b);
  }
  inline void Swap(npc_data* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline npc_data* New() const final {
    return CreateMaybeMessage<npc_data>(nullptr);
  }

  npc_data* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<npc_data>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const npc_data& from);
  void MergeFrom(const npc_data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(npc_data* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.npc_data";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_npc_5fdata_2eproto);
    return ::descriptor_table_npc_5fdata_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef npc_data_t_npc_config t_npc_config;

  // accessors -------------------------------------------------------

  enum : int {
    kDatasFieldNumber = 1,
  };
  // repeated .pb.npc_data.t_npc_config datas = 1;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::pb::npc_data_t_npc_config* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::npc_data_t_npc_config >*
      mutable_datas();
  private:
  const ::pb::npc_data_t_npc_config& _internal_datas(int index) const;
  ::pb::npc_data_t_npc_config* _internal_add_datas();
  public:
  const ::pb::npc_data_t_npc_config& datas(int index) const;
  ::pb::npc_data_t_npc_config* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::npc_data_t_npc_config >&
      datas() const;

  // @@protoc_insertion_point(class_scope:pb.npc_data)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::npc_data_t_npc_config > datas_;
  friend struct ::TableStruct_npc_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// npc_data_t_npc_config

// required uint32 tbxid = 1 [default = 0];
inline bool npc_data_t_npc_config::_internal_has_tbxid() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_tbxid() const {
  return _internal_has_tbxid();
}
inline void npc_data_t_npc_config::clear_tbxid() {
  tbxid_ = 0u;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_tbxid() const {
  return tbxid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::tbxid() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.tbxid)
  return _internal_tbxid();
}
inline void npc_data_t_npc_config::_internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x01000000u;
  tbxid_ = value;
}
inline void npc_data_t_npc_config::set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tbxid(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.tbxid)
}

// required uint32 id = 2 [default = 0];
inline bool npc_data_t_npc_config::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_id() const {
  return _internal_has_id();
}
inline void npc_data_t_npc_config::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::id() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.id)
  return _internal_id();
}
inline void npc_data_t_npc_config::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x02000000u;
  id_ = value;
}
inline void npc_data_t_npc_config::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.id)
}

// required string name = 3;
inline bool npc_data_t_npc_config::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_name() const {
  return _internal_has_name();
}
inline void npc_data_t_npc_config::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& npc_data_t_npc_config::name() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.name)
  return _internal_name();
}
inline void npc_data_t_npc_config::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.name)
}
inline std::string* npc_data_t_npc_config::mutable_name() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.name)
  return _internal_mutable_name();
}
inline const std::string& npc_data_t_npc_config::_internal_name() const {
  return name_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.name)
}
inline void npc_data_t_npc_config::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.name)
}
inline void npc_data_t_npc_config::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.name)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_name() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.name)
}

// required uint32 kind = 4;
inline bool npc_data_t_npc_config::_internal_has_kind() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_kind() const {
  return _internal_has_kind();
}
inline void npc_data_t_npc_config::clear_kind() {
  kind_ = 0u;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_kind() const {
  return kind_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::kind() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.kind)
  return _internal_kind();
}
inline void npc_data_t_npc_config::_internal_set_kind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x04000000u;
  kind_ = value;
}
inline void npc_data_t_npc_config::set_kind(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.kind)
}

// required uint32 level = 5;
inline bool npc_data_t_npc_config::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_level() const {
  return _internal_has_level();
}
inline void npc_data_t_npc_config::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::level() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.level)
  return _internal_level();
}
inline void npc_data_t_npc_config::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x08000000u;
  level_ = value;
}
inline void npc_data_t_npc_config::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.level)
}

// required uint32 distance = 6;
inline bool npc_data_t_npc_config::_internal_has_distance() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_distance() const {
  return _internal_has_distance();
}
inline void npc_data_t_npc_config::clear_distance() {
  distance_ = 0u;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_distance() const {
  return distance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::distance() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.distance)
  return _internal_distance();
}
inline void npc_data_t_npc_config::_internal_set_distance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x10000000u;
  distance_ = value;
}
inline void npc_data_t_npc_config::set_distance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.distance)
}

// required string animatorcontroller = 7;
inline bool npc_data_t_npc_config::_internal_has_animatorcontroller() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_animatorcontroller() const {
  return _internal_has_animatorcontroller();
}
inline void npc_data_t_npc_config::clear_animatorcontroller() {
  animatorcontroller_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& npc_data_t_npc_config::animatorcontroller() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.animatorcontroller)
  return _internal_animatorcontroller();
}
inline void npc_data_t_npc_config::set_animatorcontroller(const std::string& value) {
  _internal_set_animatorcontroller(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.animatorcontroller)
}
inline std::string* npc_data_t_npc_config::mutable_animatorcontroller() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.animatorcontroller)
  return _internal_mutable_animatorcontroller();
}
inline const std::string& npc_data_t_npc_config::_internal_animatorcontroller() const {
  return animatorcontroller_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_animatorcontroller(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  animatorcontroller_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_animatorcontroller(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  animatorcontroller_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.animatorcontroller)
}
inline void npc_data_t_npc_config::set_animatorcontroller(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  animatorcontroller_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.animatorcontroller)
}
inline void npc_data_t_npc_config::set_animatorcontroller(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  animatorcontroller_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.animatorcontroller)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_animatorcontroller() {
  _has_bits_[0] |= 0x00000002u;
  return animatorcontroller_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_animatorcontroller() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.animatorcontroller)
  if (!_internal_has_animatorcontroller()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return animatorcontroller_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_animatorcontroller(std::string* animatorcontroller) {
  if (animatorcontroller != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  animatorcontroller_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), animatorcontroller);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.animatorcontroller)
}

// required string model = 8;
inline bool npc_data_t_npc_config::_internal_has_model() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_model() const {
  return _internal_has_model();
}
inline void npc_data_t_npc_config::clear_model() {
  model_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& npc_data_t_npc_config::model() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.model)
  return _internal_model();
}
inline void npc_data_t_npc_config::set_model(const std::string& value) {
  _internal_set_model(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.model)
}
inline std::string* npc_data_t_npc_config::mutable_model() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.model)
  return _internal_mutable_model();
}
inline const std::string& npc_data_t_npc_config::_internal_model() const {
  return model_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_model(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  model_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_model(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  model_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.model)
}
inline void npc_data_t_npc_config::set_model(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  model_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.model)
}
inline void npc_data_t_npc_config::set_model(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  model_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.model)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_model() {
  _has_bits_[0] |= 0x00000004u;
  return model_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_model() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.model)
  if (!_internal_has_model()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return model_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_model(std::string* model) {
  if (model != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  model_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.model)
}

// required string uimodelsize = 9;
inline bool npc_data_t_npc_config::_internal_has_uimodelsize() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_uimodelsize() const {
  return _internal_has_uimodelsize();
}
inline void npc_data_t_npc_config::clear_uimodelsize() {
  uimodelsize_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& npc_data_t_npc_config::uimodelsize() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.uimodelsize)
  return _internal_uimodelsize();
}
inline void npc_data_t_npc_config::set_uimodelsize(const std::string& value) {
  _internal_set_uimodelsize(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.uimodelsize)
}
inline std::string* npc_data_t_npc_config::mutable_uimodelsize() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.uimodelsize)
  return _internal_mutable_uimodelsize();
}
inline const std::string& npc_data_t_npc_config::_internal_uimodelsize() const {
  return uimodelsize_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_uimodelsize(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  uimodelsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_uimodelsize(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  uimodelsize_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.uimodelsize)
}
inline void npc_data_t_npc_config::set_uimodelsize(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  uimodelsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.uimodelsize)
}
inline void npc_data_t_npc_config::set_uimodelsize(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  uimodelsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.uimodelsize)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_uimodelsize() {
  _has_bits_[0] |= 0x00000008u;
  return uimodelsize_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_uimodelsize() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.uimodelsize)
  if (!_internal_has_uimodelsize()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return uimodelsize_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_uimodelsize(std::string* uimodelsize) {
  if (uimodelsize != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  uimodelsize_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), uimodelsize);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.uimodelsize)
}

// required uint32 uimodelrotation = 10;
inline bool npc_data_t_npc_config::_internal_has_uimodelrotation() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_uimodelrotation() const {
  return _internal_has_uimodelrotation();
}
inline void npc_data_t_npc_config::clear_uimodelrotation() {
  uimodelrotation_ = 0u;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_uimodelrotation() const {
  return uimodelrotation_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::uimodelrotation() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.uimodelrotation)
  return _internal_uimodelrotation();
}
inline void npc_data_t_npc_config::_internal_set_uimodelrotation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x20000000u;
  uimodelrotation_ = value;
}
inline void npc_data_t_npc_config::set_uimodelrotation(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimodelrotation(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.uimodelrotation)
}

// required string visiticon = 11;
inline bool npc_data_t_npc_config::_internal_has_visiticon() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_visiticon() const {
  return _internal_has_visiticon();
}
inline void npc_data_t_npc_config::clear_visiticon() {
  visiticon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& npc_data_t_npc_config::visiticon() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.visiticon)
  return _internal_visiticon();
}
inline void npc_data_t_npc_config::set_visiticon(const std::string& value) {
  _internal_set_visiticon(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.visiticon)
}
inline std::string* npc_data_t_npc_config::mutable_visiticon() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.visiticon)
  return _internal_mutable_visiticon();
}
inline const std::string& npc_data_t_npc_config::_internal_visiticon() const {
  return visiticon_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_visiticon(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  visiticon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_visiticon(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  visiticon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.visiticon)
}
inline void npc_data_t_npc_config::set_visiticon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  visiticon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.visiticon)
}
inline void npc_data_t_npc_config::set_visiticon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  visiticon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.visiticon)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_visiticon() {
  _has_bits_[0] |= 0x00000010u;
  return visiticon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_visiticon() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.visiticon)
  if (!_internal_has_visiticon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return visiticon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_visiticon(std::string* visiticon) {
  if (visiticon != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  visiticon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), visiticon);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.visiticon)
}

// required string visitbtn = 12;
inline bool npc_data_t_npc_config::_internal_has_visitbtn() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_visitbtn() const {
  return _internal_has_visitbtn();
}
inline void npc_data_t_npc_config::clear_visitbtn() {
  visitbtn_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& npc_data_t_npc_config::visitbtn() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.visitbtn)
  return _internal_visitbtn();
}
inline void npc_data_t_npc_config::set_visitbtn(const std::string& value) {
  _internal_set_visitbtn(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.visitbtn)
}
inline std::string* npc_data_t_npc_config::mutable_visitbtn() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.visitbtn)
  return _internal_mutable_visitbtn();
}
inline const std::string& npc_data_t_npc_config::_internal_visitbtn() const {
  return visitbtn_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_visitbtn(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  visitbtn_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_visitbtn(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  visitbtn_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.visitbtn)
}
inline void npc_data_t_npc_config::set_visitbtn(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  visitbtn_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.visitbtn)
}
inline void npc_data_t_npc_config::set_visitbtn(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  visitbtn_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.visitbtn)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_visitbtn() {
  _has_bits_[0] |= 0x00000020u;
  return visitbtn_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_visitbtn() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.visitbtn)
  if (!_internal_has_visitbtn()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return visitbtn_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_visitbtn(std::string* visitbtn) {
  if (visitbtn != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  visitbtn_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), visitbtn);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.visitbtn)
}

// required uint32 countryid = 13;
inline bool npc_data_t_npc_config::_internal_has_countryid() const {
  bool value = (_has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_countryid() const {
  return _internal_has_countryid();
}
inline void npc_data_t_npc_config::clear_countryid() {
  countryid_ = 0u;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_countryid() const {
  return countryid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::countryid() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.countryid)
  return _internal_countryid();
}
inline void npc_data_t_npc_config::_internal_set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x40000000u;
  countryid_ = value;
}
inline void npc_data_t_npc_config::set_countryid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_countryid(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.countryid)
}

// required uint32 mapinfo = 14;
inline bool npc_data_t_npc_config::_internal_has_mapinfo() const {
  bool value = (_has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_mapinfo() const {
  return _internal_has_mapinfo();
}
inline void npc_data_t_npc_config::clear_mapinfo() {
  mapinfo_ = 0u;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_mapinfo() const {
  return mapinfo_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::mapinfo() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.mapinfo)
  return _internal_mapinfo();
}
inline void npc_data_t_npc_config::_internal_set_mapinfo(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x80000000u;
  mapinfo_ = value;
}
inline void npc_data_t_npc_config::set_mapinfo(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mapinfo(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.mapinfo)
}

// required uint32 show_map = 15;
inline bool npc_data_t_npc_config::_internal_has_show_map() const {
  bool value = (_has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_show_map() const {
  return _internal_has_show_map();
}
inline void npc_data_t_npc_config::clear_show_map() {
  show_map_ = 0u;
  _has_bits_[1] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_show_map() const {
  return show_map_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::show_map() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.show_map)
  return _internal_show_map();
}
inline void npc_data_t_npc_config::_internal_set_show_map(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000001u;
  show_map_ = value;
}
inline void npc_data_t_npc_config::set_show_map(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_show_map(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.show_map)
}

// required uint32 not_show_name = 16;
inline bool npc_data_t_npc_config::_internal_has_not_show_name() const {
  bool value = (_has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_not_show_name() const {
  return _internal_has_not_show_name();
}
inline void npc_data_t_npc_config::clear_not_show_name() {
  not_show_name_ = 0u;
  _has_bits_[1] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_not_show_name() const {
  return not_show_name_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::not_show_name() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.not_show_name)
  return _internal_not_show_name();
}
inline void npc_data_t_npc_config::_internal_set_not_show_name(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000002u;
  not_show_name_ = value;
}
inline void npc_data_t_npc_config::set_not_show_name(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_not_show_name(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.not_show_name)
}

// required uint32 borntime = 17;
inline bool npc_data_t_npc_config::_internal_has_borntime() const {
  bool value = (_has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_borntime() const {
  return _internal_has_borntime();
}
inline void npc_data_t_npc_config::clear_borntime() {
  borntime_ = 0u;
  _has_bits_[1] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_borntime() const {
  return borntime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::borntime() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.borntime)
  return _internal_borntime();
}
inline void npc_data_t_npc_config::_internal_set_borntime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000004u;
  borntime_ = value;
}
inline void npc_data_t_npc_config::set_borntime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_borntime(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.borntime)
}

// required uint32 bornaction = 18;
inline bool npc_data_t_npc_config::_internal_has_bornaction() const {
  bool value = (_has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_bornaction() const {
  return _internal_has_bornaction();
}
inline void npc_data_t_npc_config::clear_bornaction() {
  bornaction_ = 0u;
  _has_bits_[1] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_bornaction() const {
  return bornaction_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::bornaction() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.bornaction)
  return _internal_bornaction();
}
inline void npc_data_t_npc_config::_internal_set_bornaction(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000008u;
  bornaction_ = value;
}
inline void npc_data_t_npc_config::set_bornaction(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bornaction(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.bornaction)
}

// required string borneffect = 19;
inline bool npc_data_t_npc_config::_internal_has_borneffect() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_borneffect() const {
  return _internal_has_borneffect();
}
inline void npc_data_t_npc_config::clear_borneffect() {
  borneffect_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& npc_data_t_npc_config::borneffect() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.borneffect)
  return _internal_borneffect();
}
inline void npc_data_t_npc_config::set_borneffect(const std::string& value) {
  _internal_set_borneffect(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.borneffect)
}
inline std::string* npc_data_t_npc_config::mutable_borneffect() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.borneffect)
  return _internal_mutable_borneffect();
}
inline const std::string& npc_data_t_npc_config::_internal_borneffect() const {
  return borneffect_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_borneffect(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  borneffect_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_borneffect(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  borneffect_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.borneffect)
}
inline void npc_data_t_npc_config::set_borneffect(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  borneffect_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.borneffect)
}
inline void npc_data_t_npc_config::set_borneffect(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  borneffect_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.borneffect)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_borneffect() {
  _has_bits_[0] |= 0x00000040u;
  return borneffect_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_borneffect() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.borneffect)
  if (!_internal_has_borneffect()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return borneffect_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_borneffect(std::string* borneffect) {
  if (borneffect != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  borneffect_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), borneffect);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.borneffect)
}

// required bool not_beselect = 20;
inline bool npc_data_t_npc_config::_internal_has_not_beselect() const {
  bool value = (_has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_not_beselect() const {
  return _internal_has_not_beselect();
}
inline void npc_data_t_npc_config::clear_not_beselect() {
  not_beselect_ = false;
  _has_bits_[1] &= ~0x00000010u;
}
inline bool npc_data_t_npc_config::_internal_not_beselect() const {
  return not_beselect_;
}
inline bool npc_data_t_npc_config::not_beselect() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.not_beselect)
  return _internal_not_beselect();
}
inline void npc_data_t_npc_config::_internal_set_not_beselect(bool value) {
  _has_bits_[1] |= 0x00000010u;
  not_beselect_ = value;
}
inline void npc_data_t_npc_config::set_not_beselect(bool value) {
  _internal_set_not_beselect(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.not_beselect)
}

// required string taskid = 21;
inline bool npc_data_t_npc_config::_internal_has_taskid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_taskid() const {
  return _internal_has_taskid();
}
inline void npc_data_t_npc_config::clear_taskid() {
  taskid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& npc_data_t_npc_config::taskid() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.taskid)
  return _internal_taskid();
}
inline void npc_data_t_npc_config::set_taskid(const std::string& value) {
  _internal_set_taskid(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.taskid)
}
inline std::string* npc_data_t_npc_config::mutable_taskid() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.taskid)
  return _internal_mutable_taskid();
}
inline const std::string& npc_data_t_npc_config::_internal_taskid() const {
  return taskid_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_taskid(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  taskid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_taskid(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  taskid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.taskid)
}
inline void npc_data_t_npc_config::set_taskid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  taskid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.taskid)
}
inline void npc_data_t_npc_config::set_taskid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000080u;
  taskid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.taskid)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_taskid() {
  _has_bits_[0] |= 0x00000080u;
  return taskid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_taskid() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.taskid)
  if (!_internal_has_taskid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return taskid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_taskid(std::string* taskid) {
  if (taskid != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  taskid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), taskid);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.taskid)
}

// required uint32 show_shadow = 22;
inline bool npc_data_t_npc_config::_internal_has_show_shadow() const {
  bool value = (_has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_show_shadow() const {
  return _internal_has_show_shadow();
}
inline void npc_data_t_npc_config::clear_show_shadow() {
  show_shadow_ = 0u;
  _has_bits_[1] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_show_shadow() const {
  return show_shadow_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::show_shadow() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.show_shadow)
  return _internal_show_shadow();
}
inline void npc_data_t_npc_config::_internal_set_show_shadow(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000020u;
  show_shadow_ = value;
}
inline void npc_data_t_npc_config::set_show_shadow(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_show_shadow(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.show_shadow)
}

// required uint32 bodysize = 23;
inline bool npc_data_t_npc_config::_internal_has_bodysize() const {
  bool value = (_has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_bodysize() const {
  return _internal_has_bodysize();
}
inline void npc_data_t_npc_config::clear_bodysize() {
  bodysize_ = 0u;
  _has_bits_[1] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_bodysize() const {
  return bodysize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::bodysize() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.bodysize)
  return _internal_bodysize();
}
inline void npc_data_t_npc_config::_internal_set_bodysize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000040u;
  bodysize_ = value;
}
inline void npc_data_t_npc_config::set_bodysize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bodysize(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.bodysize)
}

// required uint32 hplayer = 24;
inline bool npc_data_t_npc_config::_internal_has_hplayer() const {
  bool value = (_has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_hplayer() const {
  return _internal_has_hplayer();
}
inline void npc_data_t_npc_config::clear_hplayer() {
  hplayer_ = 0u;
  _has_bits_[1] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_hplayer() const {
  return hplayer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::hplayer() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.hplayer)
  return _internal_hplayer();
}
inline void npc_data_t_npc_config::_internal_set_hplayer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000080u;
  hplayer_ = value;
}
inline void npc_data_t_npc_config::set_hplayer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hplayer(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.hplayer)
}

// required uint32 volume = 25;
inline bool npc_data_t_npc_config::_internal_has_volume() const {
  bool value = (_has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_volume() const {
  return _internal_has_volume();
}
inline void npc_data_t_npc_config::clear_volume() {
  volume_ = 0u;
  _has_bits_[1] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_volume() const {
  return volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::volume() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.volume)
  return _internal_volume();
}
inline void npc_data_t_npc_config::_internal_set_volume(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000100u;
  volume_ = value;
}
inline void npc_data_t_npc_config::set_volume(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.volume)
}

// required uint32 appparentvolume = 26;
inline bool npc_data_t_npc_config::_internal_has_appparentvolume() const {
  bool value = (_has_bits_[1] & 0x00000200u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_appparentvolume() const {
  return _internal_has_appparentvolume();
}
inline void npc_data_t_npc_config::clear_appparentvolume() {
  appparentvolume_ = 0u;
  _has_bits_[1] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_appparentvolume() const {
  return appparentvolume_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::appparentvolume() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.appparentvolume)
  return _internal_appparentvolume();
}
inline void npc_data_t_npc_config::_internal_set_appparentvolume(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000200u;
  appparentvolume_ = value;
}
inline void npc_data_t_npc_config::set_appparentvolume(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appparentvolume(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.appparentvolume)
}

// required string heropainting = 27;
inline bool npc_data_t_npc_config::_internal_has_heropainting() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_heropainting() const {
  return _internal_has_heropainting();
}
inline void npc_data_t_npc_config::clear_heropainting() {
  heropainting_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& npc_data_t_npc_config::heropainting() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.heropainting)
  return _internal_heropainting();
}
inline void npc_data_t_npc_config::set_heropainting(const std::string& value) {
  _internal_set_heropainting(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.heropainting)
}
inline std::string* npc_data_t_npc_config::mutable_heropainting() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.heropainting)
  return _internal_mutable_heropainting();
}
inline const std::string& npc_data_t_npc_config::_internal_heropainting() const {
  return heropainting_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_heropainting(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  heropainting_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_heropainting(std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  heropainting_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.heropainting)
}
inline void npc_data_t_npc_config::set_heropainting(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  heropainting_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.heropainting)
}
inline void npc_data_t_npc_config::set_heropainting(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000100u;
  heropainting_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.heropainting)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_heropainting() {
  _has_bits_[0] |= 0x00000100u;
  return heropainting_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_heropainting() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.heropainting)
  if (!_internal_has_heropainting()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return heropainting_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_heropainting(std::string* heropainting) {
  if (heropainting != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  heropainting_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), heropainting);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.heropainting)
}

// required string herostate = 28;
inline bool npc_data_t_npc_config::_internal_has_herostate() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_herostate() const {
  return _internal_has_herostate();
}
inline void npc_data_t_npc_config::clear_herostate() {
  herostate_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000200u;
}
inline const std::string& npc_data_t_npc_config::herostate() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.herostate)
  return _internal_herostate();
}
inline void npc_data_t_npc_config::set_herostate(const std::string& value) {
  _internal_set_herostate(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.herostate)
}
inline std::string* npc_data_t_npc_config::mutable_herostate() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.herostate)
  return _internal_mutable_herostate();
}
inline const std::string& npc_data_t_npc_config::_internal_herostate() const {
  return herostate_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_herostate(const std::string& value) {
  _has_bits_[0] |= 0x00000200u;
  herostate_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_herostate(std::string&& value) {
  _has_bits_[0] |= 0x00000200u;
  herostate_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.herostate)
}
inline void npc_data_t_npc_config::set_herostate(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000200u;
  herostate_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.herostate)
}
inline void npc_data_t_npc_config::set_herostate(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000200u;
  herostate_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.herostate)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_herostate() {
  _has_bits_[0] |= 0x00000200u;
  return herostate_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_herostate() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.herostate)
  if (!_internal_has_herostate()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000200u;
  return herostate_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_herostate(std::string* herostate) {
  if (herostate != nullptr) {
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  herostate_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), herostate);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.herostate)
}

// required uint32 pdamage = 29;
inline bool npc_data_t_npc_config::_internal_has_pdamage() const {
  bool value = (_has_bits_[1] & 0x00000400u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_pdamage() const {
  return _internal_has_pdamage();
}
inline void npc_data_t_npc_config::clear_pdamage() {
  pdamage_ = 0u;
  _has_bits_[1] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_pdamage() const {
  return pdamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::pdamage() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.pdamage)
  return _internal_pdamage();
}
inline void npc_data_t_npc_config::_internal_set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000400u;
  pdamage_ = value;
}
inline void npc_data_t_npc_config::set_pdamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdamage(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.pdamage)
}

// required uint32 mdamage = 30;
inline bool npc_data_t_npc_config::_internal_has_mdamage() const {
  bool value = (_has_bits_[1] & 0x00000800u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_mdamage() const {
  return _internal_has_mdamage();
}
inline void npc_data_t_npc_config::clear_mdamage() {
  mdamage_ = 0u;
  _has_bits_[1] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_mdamage() const {
  return mdamage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::mdamage() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.mdamage)
  return _internal_mdamage();
}
inline void npc_data_t_npc_config::_internal_set_mdamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000800u;
  mdamage_ = value;
}
inline void npc_data_t_npc_config::set_mdamage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mdamage(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.mdamage)
}

// required uint32 pdefence = 31;
inline bool npc_data_t_npc_config::_internal_has_pdefence() const {
  bool value = (_has_bits_[1] & 0x00001000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_pdefence() const {
  return _internal_has_pdefence();
}
inline void npc_data_t_npc_config::clear_pdefence() {
  pdefence_ = 0u;
  _has_bits_[1] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_pdefence() const {
  return pdefence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::pdefence() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.pdefence)
  return _internal_pdefence();
}
inline void npc_data_t_npc_config::_internal_set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00001000u;
  pdefence_ = value;
}
inline void npc_data_t_npc_config::set_pdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pdefence(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.pdefence)
}

// required uint32 mdefence = 32;
inline bool npc_data_t_npc_config::_internal_has_mdefence() const {
  bool value = (_has_bits_[1] & 0x00002000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_mdefence() const {
  return _internal_has_mdefence();
}
inline void npc_data_t_npc_config::clear_mdefence() {
  mdefence_ = 0u;
  _has_bits_[1] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_mdefence() const {
  return mdefence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::mdefence() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.mdefence)
  return _internal_mdefence();
}
inline void npc_data_t_npc_config::_internal_set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00002000u;
  mdefence_ = value;
}
inline void npc_data_t_npc_config::set_mdefence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mdefence(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.mdefence)
}

// required uint32 maxhp = 33;
inline bool npc_data_t_npc_config::_internal_has_maxhp() const {
  bool value = (_has_bits_[1] & 0x00004000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_maxhp() const {
  return _internal_has_maxhp();
}
inline void npc_data_t_npc_config::clear_maxhp() {
  maxhp_ = 0u;
  _has_bits_[1] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_maxhp() const {
  return maxhp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::maxhp() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.maxhp)
  return _internal_maxhp();
}
inline void npc_data_t_npc_config::_internal_set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00004000u;
  maxhp_ = value;
}
inline void npc_data_t_npc_config::set_maxhp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxhp(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.maxhp)
}

// required uint32 maxmp = 34;
inline bool npc_data_t_npc_config::_internal_has_maxmp() const {
  bool value = (_has_bits_[1] & 0x00008000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_maxmp() const {
  return _internal_has_maxmp();
}
inline void npc_data_t_npc_config::clear_maxmp() {
  maxmp_ = 0u;
  _has_bits_[1] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_maxmp() const {
  return maxmp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::maxmp() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.maxmp)
  return _internal_maxmp();
}
inline void npc_data_t_npc_config::_internal_set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00008000u;
  maxmp_ = value;
}
inline void npc_data_t_npc_config::set_maxmp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxmp(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.maxmp)
}

// required uint32 bang = 35;
inline bool npc_data_t_npc_config::_internal_has_bang() const {
  bool value = (_has_bits_[1] & 0x00010000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_bang() const {
  return _internal_has_bang();
}
inline void npc_data_t_npc_config::clear_bang() {
  bang_ = 0u;
  _has_bits_[1] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_bang() const {
  return bang_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::bang() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.bang)
  return _internal_bang();
}
inline void npc_data_t_npc_config::_internal_set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00010000u;
  bang_ = value;
}
inline void npc_data_t_npc_config::set_bang(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bang(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.bang)
}

// required uint32 bangextradam = 36;
inline bool npc_data_t_npc_config::_internal_has_bangextradam() const {
  bool value = (_has_bits_[1] & 0x00020000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_bangextradam() const {
  return _internal_has_bangextradam();
}
inline void npc_data_t_npc_config::clear_bangextradam() {
  bangextradam_ = 0u;
  _has_bits_[1] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_bangextradam() const {
  return bangextradam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::bangextradam() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.bangextradam)
  return _internal_bangextradam();
}
inline void npc_data_t_npc_config::_internal_set_bangextradam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00020000u;
  bangextradam_ = value;
}
inline void npc_data_t_npc_config::set_bangextradam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bangextradam(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.bangextradam)
}

// required uint32 toughness = 37;
inline bool npc_data_t_npc_config::_internal_has_toughness() const {
  bool value = (_has_bits_[1] & 0x00040000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_toughness() const {
  return _internal_has_toughness();
}
inline void npc_data_t_npc_config::clear_toughness() {
  toughness_ = 0u;
  _has_bits_[1] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_toughness() const {
  return toughness_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::toughness() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.toughness)
  return _internal_toughness();
}
inline void npc_data_t_npc_config::_internal_set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00040000u;
  toughness_ = value;
}
inline void npc_data_t_npc_config::set_toughness(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_toughness(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.toughness)
}

// required uint32 toughness_reducedam = 38;
inline bool npc_data_t_npc_config::_internal_has_toughness_reducedam() const {
  bool value = (_has_bits_[1] & 0x00080000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_toughness_reducedam() const {
  return _internal_has_toughness_reducedam();
}
inline void npc_data_t_npc_config::clear_toughness_reducedam() {
  toughness_reducedam_ = 0u;
  _has_bits_[1] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_toughness_reducedam() const {
  return toughness_reducedam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::toughness_reducedam() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.toughness_reducedam)
  return _internal_toughness_reducedam();
}
inline void npc_data_t_npc_config::_internal_set_toughness_reducedam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00080000u;
  toughness_reducedam_ = value;
}
inline void npc_data_t_npc_config::set_toughness_reducedam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_toughness_reducedam(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.toughness_reducedam)
}

// required uint32 block = 39;
inline bool npc_data_t_npc_config::_internal_has_block() const {
  bool value = (_has_bits_[1] & 0x00100000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_block() const {
  return _internal_has_block();
}
inline void npc_data_t_npc_config::clear_block() {
  block_ = 0u;
  _has_bits_[1] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_block() const {
  return block_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::block() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.block)
  return _internal_block();
}
inline void npc_data_t_npc_config::_internal_set_block(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00100000u;
  block_ = value;
}
inline void npc_data_t_npc_config::set_block(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_block(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.block)
}

// required uint32 block_reduce_dam = 40;
inline bool npc_data_t_npc_config::_internal_has_block_reduce_dam() const {
  bool value = (_has_bits_[1] & 0x00200000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_block_reduce_dam() const {
  return _internal_has_block_reduce_dam();
}
inline void npc_data_t_npc_config::clear_block_reduce_dam() {
  block_reduce_dam_ = 0u;
  _has_bits_[1] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_block_reduce_dam() const {
  return block_reduce_dam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::block_reduce_dam() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.block_reduce_dam)
  return _internal_block_reduce_dam();
}
inline void npc_data_t_npc_config::_internal_set_block_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00200000u;
  block_reduce_dam_ = value;
}
inline void npc_data_t_npc_config::set_block_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_block_reduce_dam(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.block_reduce_dam)
}

// required uint32 penetrate = 41;
inline bool npc_data_t_npc_config::_internal_has_penetrate() const {
  bool value = (_has_bits_[1] & 0x00400000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_penetrate() const {
  return _internal_has_penetrate();
}
inline void npc_data_t_npc_config::clear_penetrate() {
  penetrate_ = 0u;
  _has_bits_[1] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_penetrate() const {
  return penetrate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::penetrate() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.penetrate)
  return _internal_penetrate();
}
inline void npc_data_t_npc_config::_internal_set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00400000u;
  penetrate_ = value;
}
inline void npc_data_t_npc_config::set_penetrate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_penetrate(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.penetrate)
}

// required uint32 penetrate_extra_dam = 42;
inline bool npc_data_t_npc_config::_internal_has_penetrate_extra_dam() const {
  bool value = (_has_bits_[1] & 0x00800000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_penetrate_extra_dam() const {
  return _internal_has_penetrate_extra_dam();
}
inline void npc_data_t_npc_config::clear_penetrate_extra_dam() {
  penetrate_extra_dam_ = 0u;
  _has_bits_[1] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_penetrate_extra_dam() const {
  return penetrate_extra_dam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::penetrate_extra_dam() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.penetrate_extra_dam)
  return _internal_penetrate_extra_dam();
}
inline void npc_data_t_npc_config::_internal_set_penetrate_extra_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00800000u;
  penetrate_extra_dam_ = value;
}
inline void npc_data_t_npc_config::set_penetrate_extra_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_penetrate_extra_dam(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.penetrate_extra_dam)
}

// required uint32 accurate = 43;
inline bool npc_data_t_npc_config::_internal_has_accurate() const {
  bool value = (_has_bits_[1] & 0x01000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_accurate() const {
  return _internal_has_accurate();
}
inline void npc_data_t_npc_config::clear_accurate() {
  accurate_ = 0u;
  _has_bits_[1] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_accurate() const {
  return accurate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::accurate() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.accurate)
  return _internal_accurate();
}
inline void npc_data_t_npc_config::_internal_set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x01000000u;
  accurate_ = value;
}
inline void npc_data_t_npc_config::set_accurate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accurate(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.accurate)
}

// required uint32 accurate_extra_dam = 44;
inline bool npc_data_t_npc_config::_internal_has_accurate_extra_dam() const {
  bool value = (_has_bits_[1] & 0x02000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_accurate_extra_dam() const {
  return _internal_has_accurate_extra_dam();
}
inline void npc_data_t_npc_config::clear_accurate_extra_dam() {
  accurate_extra_dam_ = 0u;
  _has_bits_[1] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_accurate_extra_dam() const {
  return accurate_extra_dam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::accurate_extra_dam() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.accurate_extra_dam)
  return _internal_accurate_extra_dam();
}
inline void npc_data_t_npc_config::_internal_set_accurate_extra_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x02000000u;
  accurate_extra_dam_ = value;
}
inline void npc_data_t_npc_config::set_accurate_extra_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accurate_extra_dam(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.accurate_extra_dam)
}

// required uint32 hold = 45;
inline bool npc_data_t_npc_config::_internal_has_hold() const {
  bool value = (_has_bits_[1] & 0x04000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_hold() const {
  return _internal_has_hold();
}
inline void npc_data_t_npc_config::clear_hold() {
  hold_ = 0u;
  _has_bits_[1] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_hold() const {
  return hold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::hold() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.hold)
  return _internal_hold();
}
inline void npc_data_t_npc_config::_internal_set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x04000000u;
  hold_ = value;
}
inline void npc_data_t_npc_config::set_hold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hold(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.hold)
}

// required uint32 hold_reduce_dam = 46;
inline bool npc_data_t_npc_config::_internal_has_hold_reduce_dam() const {
  bool value = (_has_bits_[1] & 0x08000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_hold_reduce_dam() const {
  return _internal_has_hold_reduce_dam();
}
inline void npc_data_t_npc_config::clear_hold_reduce_dam() {
  hold_reduce_dam_ = 0u;
  _has_bits_[1] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_hold_reduce_dam() const {
  return hold_reduce_dam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::hold_reduce_dam() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.hold_reduce_dam)
  return _internal_hold_reduce_dam();
}
inline void npc_data_t_npc_config::_internal_set_hold_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x08000000u;
  hold_reduce_dam_ = value;
}
inline void npc_data_t_npc_config::set_hold_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hold_reduce_dam(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.hold_reduce_dam)
}

// required uint32 deflect = 47;
inline bool npc_data_t_npc_config::_internal_has_deflect() const {
  bool value = (_has_bits_[1] & 0x10000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_deflect() const {
  return _internal_has_deflect();
}
inline void npc_data_t_npc_config::clear_deflect() {
  deflect_ = 0u;
  _has_bits_[1] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_deflect() const {
  return deflect_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::deflect() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.deflect)
  return _internal_deflect();
}
inline void npc_data_t_npc_config::_internal_set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x10000000u;
  deflect_ = value;
}
inline void npc_data_t_npc_config::set_deflect(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deflect(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.deflect)
}

// required uint32 deflect_reduce_dam = 48;
inline bool npc_data_t_npc_config::_internal_has_deflect_reduce_dam() const {
  bool value = (_has_bits_[1] & 0x20000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_deflect_reduce_dam() const {
  return _internal_has_deflect_reduce_dam();
}
inline void npc_data_t_npc_config::clear_deflect_reduce_dam() {
  deflect_reduce_dam_ = 0u;
  _has_bits_[1] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_deflect_reduce_dam() const {
  return deflect_reduce_dam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::deflect_reduce_dam() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.deflect_reduce_dam)
  return _internal_deflect_reduce_dam();
}
inline void npc_data_t_npc_config::_internal_set_deflect_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x20000000u;
  deflect_reduce_dam_ = value;
}
inline void npc_data_t_npc_config::set_deflect_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deflect_reduce_dam(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.deflect_reduce_dam)
}

// required uint32 realdam = 49;
inline bool npc_data_t_npc_config::_internal_has_realdam() const {
  bool value = (_has_bits_[1] & 0x40000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_realdam() const {
  return _internal_has_realdam();
}
inline void npc_data_t_npc_config::clear_realdam() {
  realdam_ = 0u;
  _has_bits_[1] &= ~0x40000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_realdam() const {
  return realdam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::realdam() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.realdam)
  return _internal_realdam();
}
inline void npc_data_t_npc_config::_internal_set_realdam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x40000000u;
  realdam_ = value;
}
inline void npc_data_t_npc_config::set_realdam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_realdam(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.realdam)
}

// required uint32 real_reduce_dam = 50;
inline bool npc_data_t_npc_config::_internal_has_real_reduce_dam() const {
  bool value = (_has_bits_[1] & 0x80000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_real_reduce_dam() const {
  return _internal_has_real_reduce_dam();
}
inline void npc_data_t_npc_config::clear_real_reduce_dam() {
  real_reduce_dam_ = 0u;
  _has_bits_[1] &= ~0x80000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_real_reduce_dam() const {
  return real_reduce_dam_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::real_reduce_dam() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.real_reduce_dam)
  return _internal_real_reduce_dam();
}
inline void npc_data_t_npc_config::_internal_set_real_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x80000000u;
  real_reduce_dam_ = value;
}
inline void npc_data_t_npc_config::set_real_reduce_dam(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_real_reduce_dam(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.real_reduce_dam)
}

// required uint32 hit = 51;
inline bool npc_data_t_npc_config::_internal_has_hit() const {
  bool value = (_has_bits_[2] & 0x00000001u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_hit() const {
  return _internal_has_hit();
}
inline void npc_data_t_npc_config::clear_hit() {
  hit_ = 0u;
  _has_bits_[2] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_hit() const {
  return hit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::hit() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.hit)
  return _internal_hit();
}
inline void npc_data_t_npc_config::_internal_set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000001u;
  hit_ = value;
}
inline void npc_data_t_npc_config::set_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hit(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.hit)
}

// required uint32 miss = 52;
inline bool npc_data_t_npc_config::_internal_has_miss() const {
  bool value = (_has_bits_[2] & 0x00000002u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_miss() const {
  return _internal_has_miss();
}
inline void npc_data_t_npc_config::clear_miss() {
  miss_ = 0u;
  _has_bits_[2] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_miss() const {
  return miss_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::miss() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.miss)
  return _internal_miss();
}
inline void npc_data_t_npc_config::_internal_set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000002u;
  miss_ = value;
}
inline void npc_data_t_npc_config::set_miss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_miss(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.miss)
}

// required uint32 firemastery = 53;
inline bool npc_data_t_npc_config::_internal_has_firemastery() const {
  bool value = (_has_bits_[2] & 0x00000004u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_firemastery() const {
  return _internal_has_firemastery();
}
inline void npc_data_t_npc_config::clear_firemastery() {
  firemastery_ = 0u;
  _has_bits_[2] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_firemastery() const {
  return firemastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::firemastery() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.firemastery)
  return _internal_firemastery();
}
inline void npc_data_t_npc_config::_internal_set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000004u;
  firemastery_ = value;
}
inline void npc_data_t_npc_config::set_firemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_firemastery(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.firemastery)
}

// required uint32 icemastery = 54;
inline bool npc_data_t_npc_config::_internal_has_icemastery() const {
  bool value = (_has_bits_[2] & 0x00000008u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_icemastery() const {
  return _internal_has_icemastery();
}
inline void npc_data_t_npc_config::clear_icemastery() {
  icemastery_ = 0u;
  _has_bits_[2] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_icemastery() const {
  return icemastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::icemastery() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.icemastery)
  return _internal_icemastery();
}
inline void npc_data_t_npc_config::_internal_set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000008u;
  icemastery_ = value;
}
inline void npc_data_t_npc_config::set_icemastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_icemastery(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.icemastery)
}

// required uint32 lightningmastery = 55;
inline bool npc_data_t_npc_config::_internal_has_lightningmastery() const {
  bool value = (_has_bits_[2] & 0x00000010u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_lightningmastery() const {
  return _internal_has_lightningmastery();
}
inline void npc_data_t_npc_config::clear_lightningmastery() {
  lightningmastery_ = 0u;
  _has_bits_[2] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_lightningmastery() const {
  return lightningmastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::lightningmastery() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.lightningmastery)
  return _internal_lightningmastery();
}
inline void npc_data_t_npc_config::_internal_set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000010u;
  lightningmastery_ = value;
}
inline void npc_data_t_npc_config::set_lightningmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lightningmastery(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.lightningmastery)
}

// required uint32 brightmastery = 56;
inline bool npc_data_t_npc_config::_internal_has_brightmastery() const {
  bool value = (_has_bits_[2] & 0x00000020u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_brightmastery() const {
  return _internal_has_brightmastery();
}
inline void npc_data_t_npc_config::clear_brightmastery() {
  brightmastery_ = 0u;
  _has_bits_[2] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_brightmastery() const {
  return brightmastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::brightmastery() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.brightmastery)
  return _internal_brightmastery();
}
inline void npc_data_t_npc_config::_internal_set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000020u;
  brightmastery_ = value;
}
inline void npc_data_t_npc_config::set_brightmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brightmastery(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.brightmastery)
}

// required uint32 darkmastery = 57;
inline bool npc_data_t_npc_config::_internal_has_darkmastery() const {
  bool value = (_has_bits_[2] & 0x00000040u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_darkmastery() const {
  return _internal_has_darkmastery();
}
inline void npc_data_t_npc_config::clear_darkmastery() {
  darkmastery_ = 0u;
  _has_bits_[2] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_darkmastery() const {
  return darkmastery_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::darkmastery() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.darkmastery)
  return _internal_darkmastery();
}
inline void npc_data_t_npc_config::_internal_set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000040u;
  darkmastery_ = value;
}
inline void npc_data_t_npc_config::set_darkmastery(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_darkmastery(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.darkmastery)
}

// required uint32 fireresist = 58;
inline bool npc_data_t_npc_config::_internal_has_fireresist() const {
  bool value = (_has_bits_[2] & 0x00000080u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_fireresist() const {
  return _internal_has_fireresist();
}
inline void npc_data_t_npc_config::clear_fireresist() {
  fireresist_ = 0u;
  _has_bits_[2] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_fireresist() const {
  return fireresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::fireresist() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.fireresist)
  return _internal_fireresist();
}
inline void npc_data_t_npc_config::_internal_set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000080u;
  fireresist_ = value;
}
inline void npc_data_t_npc_config::set_fireresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fireresist(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.fireresist)
}

// required uint32 iceresist = 59;
inline bool npc_data_t_npc_config::_internal_has_iceresist() const {
  bool value = (_has_bits_[2] & 0x00000100u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_iceresist() const {
  return _internal_has_iceresist();
}
inline void npc_data_t_npc_config::clear_iceresist() {
  iceresist_ = 0u;
  _has_bits_[2] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_iceresist() const {
  return iceresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::iceresist() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.iceresist)
  return _internal_iceresist();
}
inline void npc_data_t_npc_config::_internal_set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000100u;
  iceresist_ = value;
}
inline void npc_data_t_npc_config::set_iceresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_iceresist(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.iceresist)
}

// required uint32 lightningresist = 60;
inline bool npc_data_t_npc_config::_internal_has_lightningresist() const {
  bool value = (_has_bits_[2] & 0x00000200u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_lightningresist() const {
  return _internal_has_lightningresist();
}
inline void npc_data_t_npc_config::clear_lightningresist() {
  lightningresist_ = 0u;
  _has_bits_[2] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_lightningresist() const {
  return lightningresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::lightningresist() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.lightningresist)
  return _internal_lightningresist();
}
inline void npc_data_t_npc_config::_internal_set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000200u;
  lightningresist_ = value;
}
inline void npc_data_t_npc_config::set_lightningresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lightningresist(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.lightningresist)
}

// required uint32 brightresist = 61;
inline bool npc_data_t_npc_config::_internal_has_brightresist() const {
  bool value = (_has_bits_[2] & 0x00000400u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_brightresist() const {
  return _internal_has_brightresist();
}
inline void npc_data_t_npc_config::clear_brightresist() {
  brightresist_ = 0u;
  _has_bits_[2] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_brightresist() const {
  return brightresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::brightresist() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.brightresist)
  return _internal_brightresist();
}
inline void npc_data_t_npc_config::_internal_set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000400u;
  brightresist_ = value;
}
inline void npc_data_t_npc_config::set_brightresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brightresist(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.brightresist)
}

// required uint32 darkresist = 62;
inline bool npc_data_t_npc_config::_internal_has_darkresist() const {
  bool value = (_has_bits_[2] & 0x00000800u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_darkresist() const {
  return _internal_has_darkresist();
}
inline void npc_data_t_npc_config::clear_darkresist() {
  darkresist_ = 0u;
  _has_bits_[2] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_darkresist() const {
  return darkresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::darkresist() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.darkresist)
  return _internal_darkresist();
}
inline void npc_data_t_npc_config::_internal_set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000800u;
  darkresist_ = value;
}
inline void npc_data_t_npc_config::set_darkresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_darkresist(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.darkresist)
}

// required uint32 firepen = 63;
inline bool npc_data_t_npc_config::_internal_has_firepen() const {
  bool value = (_has_bits_[2] & 0x00001000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_firepen() const {
  return _internal_has_firepen();
}
inline void npc_data_t_npc_config::clear_firepen() {
  firepen_ = 0u;
  _has_bits_[2] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_firepen() const {
  return firepen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::firepen() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.firepen)
  return _internal_firepen();
}
inline void npc_data_t_npc_config::_internal_set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00001000u;
  firepen_ = value;
}
inline void npc_data_t_npc_config::set_firepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_firepen(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.firepen)
}

// required uint32 icepen = 64;
inline bool npc_data_t_npc_config::_internal_has_icepen() const {
  bool value = (_has_bits_[2] & 0x00002000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_icepen() const {
  return _internal_has_icepen();
}
inline void npc_data_t_npc_config::clear_icepen() {
  icepen_ = 0u;
  _has_bits_[2] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_icepen() const {
  return icepen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::icepen() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.icepen)
  return _internal_icepen();
}
inline void npc_data_t_npc_config::_internal_set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00002000u;
  icepen_ = value;
}
inline void npc_data_t_npc_config::set_icepen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_icepen(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.icepen)
}

// required uint32 lightningpen = 65;
inline bool npc_data_t_npc_config::_internal_has_lightningpen() const {
  bool value = (_has_bits_[2] & 0x00004000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_lightningpen() const {
  return _internal_has_lightningpen();
}
inline void npc_data_t_npc_config::clear_lightningpen() {
  lightningpen_ = 0u;
  _has_bits_[2] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_lightningpen() const {
  return lightningpen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::lightningpen() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.lightningpen)
  return _internal_lightningpen();
}
inline void npc_data_t_npc_config::_internal_set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00004000u;
  lightningpen_ = value;
}
inline void npc_data_t_npc_config::set_lightningpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lightningpen(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.lightningpen)
}

// required uint32 brightpen = 66;
inline bool npc_data_t_npc_config::_internal_has_brightpen() const {
  bool value = (_has_bits_[2] & 0x00008000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_brightpen() const {
  return _internal_has_brightpen();
}
inline void npc_data_t_npc_config::clear_brightpen() {
  brightpen_ = 0u;
  _has_bits_[2] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_brightpen() const {
  return brightpen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::brightpen() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.brightpen)
  return _internal_brightpen();
}
inline void npc_data_t_npc_config::_internal_set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00008000u;
  brightpen_ = value;
}
inline void npc_data_t_npc_config::set_brightpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_brightpen(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.brightpen)
}

// required uint32 darkpen = 67;
inline bool npc_data_t_npc_config::_internal_has_darkpen() const {
  bool value = (_has_bits_[2] & 0x00010000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_darkpen() const {
  return _internal_has_darkpen();
}
inline void npc_data_t_npc_config::clear_darkpen() {
  darkpen_ = 0u;
  _has_bits_[2] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_darkpen() const {
  return darkpen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::darkpen() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.darkpen)
  return _internal_darkpen();
}
inline void npc_data_t_npc_config::_internal_set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00010000u;
  darkpen_ = value;
}
inline void npc_data_t_npc_config::set_darkpen(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_darkpen(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.darkpen)
}

// required uint32 blowint = 68;
inline bool npc_data_t_npc_config::_internal_has_blowint() const {
  bool value = (_has_bits_[2] & 0x00020000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_blowint() const {
  return _internal_has_blowint();
}
inline void npc_data_t_npc_config::clear_blowint() {
  blowint_ = 0u;
  _has_bits_[2] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_blowint() const {
  return blowint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::blowint() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.blowint)
  return _internal_blowint();
}
inline void npc_data_t_npc_config::_internal_set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00020000u;
  blowint_ = value;
}
inline void npc_data_t_npc_config::set_blowint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blowint(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.blowint)
}

// required uint32 knockint = 69;
inline bool npc_data_t_npc_config::_internal_has_knockint() const {
  bool value = (_has_bits_[2] & 0x00040000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_knockint() const {
  return _internal_has_knockint();
}
inline void npc_data_t_npc_config::clear_knockint() {
  knockint_ = 0u;
  _has_bits_[2] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_knockint() const {
  return knockint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::knockint() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.knockint)
  return _internal_knockint();
}
inline void npc_data_t_npc_config::_internal_set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00040000u;
  knockint_ = value;
}
inline void npc_data_t_npc_config::set_knockint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_knockint(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.knockint)
}

// required uint32 floatint = 70;
inline bool npc_data_t_npc_config::_internal_has_floatint() const {
  bool value = (_has_bits_[2] & 0x00080000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_floatint() const {
  return _internal_has_floatint();
}
inline void npc_data_t_npc_config::clear_floatint() {
  floatint_ = 0u;
  _has_bits_[2] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_floatint() const {
  return floatint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::floatint() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.floatint)
  return _internal_floatint();
}
inline void npc_data_t_npc_config::_internal_set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00080000u;
  floatint_ = value;
}
inline void npc_data_t_npc_config::set_floatint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_floatint(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.floatint)
}

// required uint32 superhitint = 71;
inline bool npc_data_t_npc_config::_internal_has_superhitint() const {
  bool value = (_has_bits_[2] & 0x00100000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_superhitint() const {
  return _internal_has_superhitint();
}
inline void npc_data_t_npc_config::clear_superhitint() {
  superhitint_ = 0u;
  _has_bits_[2] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_superhitint() const {
  return superhitint_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::superhitint() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.superhitint)
  return _internal_superhitint();
}
inline void npc_data_t_npc_config::_internal_set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00100000u;
  superhitint_ = value;
}
inline void npc_data_t_npc_config::set_superhitint(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_superhitint(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.superhitint)
}

// required uint32 blowresist = 72;
inline bool npc_data_t_npc_config::_internal_has_blowresist() const {
  bool value = (_has_bits_[2] & 0x00200000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_blowresist() const {
  return _internal_has_blowresist();
}
inline void npc_data_t_npc_config::clear_blowresist() {
  blowresist_ = 0u;
  _has_bits_[2] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_blowresist() const {
  return blowresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::blowresist() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.blowresist)
  return _internal_blowresist();
}
inline void npc_data_t_npc_config::_internal_set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00200000u;
  blowresist_ = value;
}
inline void npc_data_t_npc_config::set_blowresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blowresist(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.blowresist)
}

// required uint32 knockresist = 73;
inline bool npc_data_t_npc_config::_internal_has_knockresist() const {
  bool value = (_has_bits_[2] & 0x00400000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_knockresist() const {
  return _internal_has_knockresist();
}
inline void npc_data_t_npc_config::clear_knockresist() {
  knockresist_ = 0u;
  _has_bits_[2] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_knockresist() const {
  return knockresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::knockresist() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.knockresist)
  return _internal_knockresist();
}
inline void npc_data_t_npc_config::_internal_set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00400000u;
  knockresist_ = value;
}
inline void npc_data_t_npc_config::set_knockresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_knockresist(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.knockresist)
}

// required uint32 floatresist = 74;
inline bool npc_data_t_npc_config::_internal_has_floatresist() const {
  bool value = (_has_bits_[2] & 0x00800000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_floatresist() const {
  return _internal_has_floatresist();
}
inline void npc_data_t_npc_config::clear_floatresist() {
  floatresist_ = 0u;
  _has_bits_[2] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_floatresist() const {
  return floatresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::floatresist() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.floatresist)
  return _internal_floatresist();
}
inline void npc_data_t_npc_config::_internal_set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00800000u;
  floatresist_ = value;
}
inline void npc_data_t_npc_config::set_floatresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_floatresist(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.floatresist)
}

// required uint32 superhitresist = 75;
inline bool npc_data_t_npc_config::_internal_has_superhitresist() const {
  bool value = (_has_bits_[2] & 0x01000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_superhitresist() const {
  return _internal_has_superhitresist();
}
inline void npc_data_t_npc_config::clear_superhitresist() {
  superhitresist_ = 0u;
  _has_bits_[2] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_superhitresist() const {
  return superhitresist_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::superhitresist() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.superhitresist)
  return _internal_superhitresist();
}
inline void npc_data_t_npc_config::_internal_set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x01000000u;
  superhitresist_ = value;
}
inline void npc_data_t_npc_config::set_superhitresist(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_superhitresist(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.superhitresist)
}

// required uint32 blowdectime = 76;
inline bool npc_data_t_npc_config::_internal_has_blowdectime() const {
  bool value = (_has_bits_[2] & 0x02000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_blowdectime() const {
  return _internal_has_blowdectime();
}
inline void npc_data_t_npc_config::clear_blowdectime() {
  blowdectime_ = 0u;
  _has_bits_[2] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_blowdectime() const {
  return blowdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::blowdectime() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.blowdectime)
  return _internal_blowdectime();
}
inline void npc_data_t_npc_config::_internal_set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x02000000u;
  blowdectime_ = value;
}
inline void npc_data_t_npc_config::set_blowdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blowdectime(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.blowdectime)
}

// required uint32 knockdectime = 77;
inline bool npc_data_t_npc_config::_internal_has_knockdectime() const {
  bool value = (_has_bits_[2] & 0x04000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_knockdectime() const {
  return _internal_has_knockdectime();
}
inline void npc_data_t_npc_config::clear_knockdectime() {
  knockdectime_ = 0u;
  _has_bits_[2] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_knockdectime() const {
  return knockdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::knockdectime() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.knockdectime)
  return _internal_knockdectime();
}
inline void npc_data_t_npc_config::_internal_set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x04000000u;
  knockdectime_ = value;
}
inline void npc_data_t_npc_config::set_knockdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_knockdectime(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.knockdectime)
}

// required uint32 floatdectime = 78;
inline bool npc_data_t_npc_config::_internal_has_floatdectime() const {
  bool value = (_has_bits_[2] & 0x08000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_floatdectime() const {
  return _internal_has_floatdectime();
}
inline void npc_data_t_npc_config::clear_floatdectime() {
  floatdectime_ = 0u;
  _has_bits_[2] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_floatdectime() const {
  return floatdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::floatdectime() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.floatdectime)
  return _internal_floatdectime();
}
inline void npc_data_t_npc_config::_internal_set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x08000000u;
  floatdectime_ = value;
}
inline void npc_data_t_npc_config::set_floatdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_floatdectime(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.floatdectime)
}

// required uint32 superhitdectime = 79;
inline bool npc_data_t_npc_config::_internal_has_superhitdectime() const {
  bool value = (_has_bits_[2] & 0x10000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_superhitdectime() const {
  return _internal_has_superhitdectime();
}
inline void npc_data_t_npc_config::clear_superhitdectime() {
  superhitdectime_ = 0u;
  _has_bits_[2] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_superhitdectime() const {
  return superhitdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::superhitdectime() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.superhitdectime)
  return _internal_superhitdectime();
}
inline void npc_data_t_npc_config::_internal_set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x10000000u;
  superhitdectime_ = value;
}
inline void npc_data_t_npc_config::set_superhitdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_superhitdectime(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.superhitdectime)
}

// required uint32 stiffaddtime = 80;
inline bool npc_data_t_npc_config::_internal_has_stiffaddtime() const {
  bool value = (_has_bits_[2] & 0x20000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_stiffaddtime() const {
  return _internal_has_stiffaddtime();
}
inline void npc_data_t_npc_config::clear_stiffaddtime() {
  stiffaddtime_ = 0u;
  _has_bits_[2] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_stiffaddtime() const {
  return stiffaddtime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::stiffaddtime() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.stiffaddtime)
  return _internal_stiffaddtime();
}
inline void npc_data_t_npc_config::_internal_set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x20000000u;
  stiffaddtime_ = value;
}
inline void npc_data_t_npc_config::set_stiffaddtime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stiffaddtime(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.stiffaddtime)
}

// required uint32 stiffdectime = 81;
inline bool npc_data_t_npc_config::_internal_has_stiffdectime() const {
  bool value = (_has_bits_[2] & 0x40000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_stiffdectime() const {
  return _internal_has_stiffdectime();
}
inline void npc_data_t_npc_config::clear_stiffdectime() {
  stiffdectime_ = 0u;
  _has_bits_[2] &= ~0x40000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_stiffdectime() const {
  return stiffdectime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::stiffdectime() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.stiffdectime)
  return _internal_stiffdectime();
}
inline void npc_data_t_npc_config::_internal_set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x40000000u;
  stiffdectime_ = value;
}
inline void npc_data_t_npc_config::set_stiffdectime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stiffdectime(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.stiffdectime)
}

// required string icon = 82;
inline bool npc_data_t_npc_config::_internal_has_icon() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_icon() const {
  return _internal_has_icon();
}
inline void npc_data_t_npc_config::clear_icon() {
  icon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000400u;
}
inline const std::string& npc_data_t_npc_config::icon() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.icon)
  return _internal_icon();
}
inline void npc_data_t_npc_config::set_icon(const std::string& value) {
  _internal_set_icon(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.icon)
}
inline std::string* npc_data_t_npc_config::mutable_icon() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.icon)
  return _internal_mutable_icon();
}
inline const std::string& npc_data_t_npc_config::_internal_icon() const {
  return icon_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_icon(const std::string& value) {
  _has_bits_[0] |= 0x00000400u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_icon(std::string&& value) {
  _has_bits_[0] |= 0x00000400u;
  icon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.icon)
}
inline void npc_data_t_npc_config::set_icon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000400u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.icon)
}
inline void npc_data_t_npc_config::set_icon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000400u;
  icon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.icon)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_icon() {
  _has_bits_[0] |= 0x00000400u;
  return icon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_icon() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.icon)
  if (!_internal_has_icon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000400u;
  return icon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_icon(std::string* icon) {
  if (icon != nullptr) {
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  icon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.icon)
}

// required string bigicon = 83;
inline bool npc_data_t_npc_config::_internal_has_bigicon() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_bigicon() const {
  return _internal_has_bigicon();
}
inline void npc_data_t_npc_config::clear_bigicon() {
  bigicon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000800u;
}
inline const std::string& npc_data_t_npc_config::bigicon() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.bigicon)
  return _internal_bigicon();
}
inline void npc_data_t_npc_config::set_bigicon(const std::string& value) {
  _internal_set_bigicon(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.bigicon)
}
inline std::string* npc_data_t_npc_config::mutable_bigicon() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.bigicon)
  return _internal_mutable_bigicon();
}
inline const std::string& npc_data_t_npc_config::_internal_bigicon() const {
  return bigicon_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_bigicon(const std::string& value) {
  _has_bits_[0] |= 0x00000800u;
  bigicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_bigicon(std::string&& value) {
  _has_bits_[0] |= 0x00000800u;
  bigicon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.bigicon)
}
inline void npc_data_t_npc_config::set_bigicon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000800u;
  bigicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.bigicon)
}
inline void npc_data_t_npc_config::set_bigicon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000800u;
  bigicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.bigicon)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_bigicon() {
  _has_bits_[0] |= 0x00000800u;
  return bigicon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_bigicon() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.bigicon)
  if (!_internal_has_bigicon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000800u;
  return bigicon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_bigicon(std::string* bigicon) {
  if (bigicon != nullptr) {
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  bigicon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bigicon);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.bigicon)
}

// required string UIicon = 84;
inline bool npc_data_t_npc_config::_internal_has_uiicon() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_uiicon() const {
  return _internal_has_uiicon();
}
inline void npc_data_t_npc_config::clear_uiicon() {
  uiicon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00001000u;
}
inline const std::string& npc_data_t_npc_config::uiicon() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.UIicon)
  return _internal_uiicon();
}
inline void npc_data_t_npc_config::set_uiicon(const std::string& value) {
  _internal_set_uiicon(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.UIicon)
}
inline std::string* npc_data_t_npc_config::mutable_uiicon() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.UIicon)
  return _internal_mutable_uiicon();
}
inline const std::string& npc_data_t_npc_config::_internal_uiicon() const {
  return uiicon_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_uiicon(const std::string& value) {
  _has_bits_[0] |= 0x00001000u;
  uiicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_uiicon(std::string&& value) {
  _has_bits_[0] |= 0x00001000u;
  uiicon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.UIicon)
}
inline void npc_data_t_npc_config::set_uiicon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00001000u;
  uiicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.UIicon)
}
inline void npc_data_t_npc_config::set_uiicon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00001000u;
  uiicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.UIicon)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_uiicon() {
  _has_bits_[0] |= 0x00001000u;
  return uiicon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_uiicon() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.UIicon)
  if (!_internal_has_uiicon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00001000u;
  return uiicon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_uiicon(std::string* uiicon) {
  if (uiicon != nullptr) {
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  uiicon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), uiicon);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.UIicon)
}

// required string modelsize = 85;
inline bool npc_data_t_npc_config::_internal_has_modelsize() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_modelsize() const {
  return _internal_has_modelsize();
}
inline void npc_data_t_npc_config::clear_modelsize() {
  modelsize_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00002000u;
}
inline const std::string& npc_data_t_npc_config::modelsize() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.modelsize)
  return _internal_modelsize();
}
inline void npc_data_t_npc_config::set_modelsize(const std::string& value) {
  _internal_set_modelsize(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.modelsize)
}
inline std::string* npc_data_t_npc_config::mutable_modelsize() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.modelsize)
  return _internal_mutable_modelsize();
}
inline const std::string& npc_data_t_npc_config::_internal_modelsize() const {
  return modelsize_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_modelsize(const std::string& value) {
  _has_bits_[0] |= 0x00002000u;
  modelsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_modelsize(std::string&& value) {
  _has_bits_[0] |= 0x00002000u;
  modelsize_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.modelsize)
}
inline void npc_data_t_npc_config::set_modelsize(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00002000u;
  modelsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.modelsize)
}
inline void npc_data_t_npc_config::set_modelsize(const char* value, size_t size) {
  _has_bits_[0] |= 0x00002000u;
  modelsize_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.modelsize)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_modelsize() {
  _has_bits_[0] |= 0x00002000u;
  return modelsize_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_modelsize() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.modelsize)
  if (!_internal_has_modelsize()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00002000u;
  return modelsize_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_modelsize(std::string* modelsize) {
  if (modelsize != nullptr) {
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  modelsize_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modelsize);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.modelsize)
}

// required string show_conditions = 86;
inline bool npc_data_t_npc_config::_internal_has_show_conditions() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_show_conditions() const {
  return _internal_has_show_conditions();
}
inline void npc_data_t_npc_config::clear_show_conditions() {
  show_conditions_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00004000u;
}
inline const std::string& npc_data_t_npc_config::show_conditions() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.show_conditions)
  return _internal_show_conditions();
}
inline void npc_data_t_npc_config::set_show_conditions(const std::string& value) {
  _internal_set_show_conditions(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.show_conditions)
}
inline std::string* npc_data_t_npc_config::mutable_show_conditions() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.show_conditions)
  return _internal_mutable_show_conditions();
}
inline const std::string& npc_data_t_npc_config::_internal_show_conditions() const {
  return show_conditions_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_show_conditions(const std::string& value) {
  _has_bits_[0] |= 0x00004000u;
  show_conditions_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_show_conditions(std::string&& value) {
  _has_bits_[0] |= 0x00004000u;
  show_conditions_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.show_conditions)
}
inline void npc_data_t_npc_config::set_show_conditions(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00004000u;
  show_conditions_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.show_conditions)
}
inline void npc_data_t_npc_config::set_show_conditions(const char* value, size_t size) {
  _has_bits_[0] |= 0x00004000u;
  show_conditions_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.show_conditions)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_show_conditions() {
  _has_bits_[0] |= 0x00004000u;
  return show_conditions_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_show_conditions() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.show_conditions)
  if (!_internal_has_show_conditions()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00004000u;
  return show_conditions_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_show_conditions(std::string* show_conditions) {
  if (show_conditions != nullptr) {
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  show_conditions_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), show_conditions);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.show_conditions)
}

// required string hide_conditions = 87;
inline bool npc_data_t_npc_config::_internal_has_hide_conditions() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_hide_conditions() const {
  return _internal_has_hide_conditions();
}
inline void npc_data_t_npc_config::clear_hide_conditions() {
  hide_conditions_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00008000u;
}
inline const std::string& npc_data_t_npc_config::hide_conditions() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.hide_conditions)
  return _internal_hide_conditions();
}
inline void npc_data_t_npc_config::set_hide_conditions(const std::string& value) {
  _internal_set_hide_conditions(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.hide_conditions)
}
inline std::string* npc_data_t_npc_config::mutable_hide_conditions() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.hide_conditions)
  return _internal_mutable_hide_conditions();
}
inline const std::string& npc_data_t_npc_config::_internal_hide_conditions() const {
  return hide_conditions_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_hide_conditions(const std::string& value) {
  _has_bits_[0] |= 0x00008000u;
  hide_conditions_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_hide_conditions(std::string&& value) {
  _has_bits_[0] |= 0x00008000u;
  hide_conditions_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.hide_conditions)
}
inline void npc_data_t_npc_config::set_hide_conditions(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00008000u;
  hide_conditions_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.hide_conditions)
}
inline void npc_data_t_npc_config::set_hide_conditions(const char* value, size_t size) {
  _has_bits_[0] |= 0x00008000u;
  hide_conditions_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.hide_conditions)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_hide_conditions() {
  _has_bits_[0] |= 0x00008000u;
  return hide_conditions_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_hide_conditions() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.hide_conditions)
  if (!_internal_has_hide_conditions()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00008000u;
  return hide_conditions_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_hide_conditions(std::string* hide_conditions) {
  if (hide_conditions != nullptr) {
    _has_bits_[0] |= 0x00008000u;
  } else {
    _has_bits_[0] &= ~0x00008000u;
  }
  hide_conditions_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hide_conditions);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.hide_conditions)
}

// required string effect_appearance = 88;
inline bool npc_data_t_npc_config::_internal_has_effect_appearance() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_effect_appearance() const {
  return _internal_has_effect_appearance();
}
inline void npc_data_t_npc_config::clear_effect_appearance() {
  effect_appearance_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00010000u;
}
inline const std::string& npc_data_t_npc_config::effect_appearance() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.effect_appearance)
  return _internal_effect_appearance();
}
inline void npc_data_t_npc_config::set_effect_appearance(const std::string& value) {
  _internal_set_effect_appearance(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.effect_appearance)
}
inline std::string* npc_data_t_npc_config::mutable_effect_appearance() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.effect_appearance)
  return _internal_mutable_effect_appearance();
}
inline const std::string& npc_data_t_npc_config::_internal_effect_appearance() const {
  return effect_appearance_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_effect_appearance(const std::string& value) {
  _has_bits_[0] |= 0x00010000u;
  effect_appearance_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_effect_appearance(std::string&& value) {
  _has_bits_[0] |= 0x00010000u;
  effect_appearance_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.effect_appearance)
}
inline void npc_data_t_npc_config::set_effect_appearance(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00010000u;
  effect_appearance_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.effect_appearance)
}
inline void npc_data_t_npc_config::set_effect_appearance(const char* value, size_t size) {
  _has_bits_[0] |= 0x00010000u;
  effect_appearance_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.effect_appearance)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_effect_appearance() {
  _has_bits_[0] |= 0x00010000u;
  return effect_appearance_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_effect_appearance() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.effect_appearance)
  if (!_internal_has_effect_appearance()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00010000u;
  return effect_appearance_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_effect_appearance(std::string* effect_appearance) {
  if (effect_appearance != nullptr) {
    _has_bits_[0] |= 0x00010000u;
  } else {
    _has_bits_[0] &= ~0x00010000u;
  }
  effect_appearance_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), effect_appearance);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.effect_appearance)
}

// required string bipbind_excursion = 89;
inline bool npc_data_t_npc_config::_internal_has_bipbind_excursion() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_bipbind_excursion() const {
  return _internal_has_bipbind_excursion();
}
inline void npc_data_t_npc_config::clear_bipbind_excursion() {
  bipbind_excursion_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00020000u;
}
inline const std::string& npc_data_t_npc_config::bipbind_excursion() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.bipbind_excursion)
  return _internal_bipbind_excursion();
}
inline void npc_data_t_npc_config::set_bipbind_excursion(const std::string& value) {
  _internal_set_bipbind_excursion(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.bipbind_excursion)
}
inline std::string* npc_data_t_npc_config::mutable_bipbind_excursion() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.bipbind_excursion)
  return _internal_mutable_bipbind_excursion();
}
inline const std::string& npc_data_t_npc_config::_internal_bipbind_excursion() const {
  return bipbind_excursion_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_bipbind_excursion(const std::string& value) {
  _has_bits_[0] |= 0x00020000u;
  bipbind_excursion_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_bipbind_excursion(std::string&& value) {
  _has_bits_[0] |= 0x00020000u;
  bipbind_excursion_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.bipbind_excursion)
}
inline void npc_data_t_npc_config::set_bipbind_excursion(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00020000u;
  bipbind_excursion_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.bipbind_excursion)
}
inline void npc_data_t_npc_config::set_bipbind_excursion(const char* value, size_t size) {
  _has_bits_[0] |= 0x00020000u;
  bipbind_excursion_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.bipbind_excursion)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_bipbind_excursion() {
  _has_bits_[0] |= 0x00020000u;
  return bipbind_excursion_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_bipbind_excursion() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.bipbind_excursion)
  if (!_internal_has_bipbind_excursion()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00020000u;
  return bipbind_excursion_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_bipbind_excursion(std::string* bipbind_excursion) {
  if (bipbind_excursion != nullptr) {
    _has_bits_[0] |= 0x00020000u;
  } else {
    _has_bits_[0] &= ~0x00020000u;
  }
  bipbind_excursion_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bipbind_excursion);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.bipbind_excursion)
}

// required string modelposfor3dicon = 90;
inline bool npc_data_t_npc_config::_internal_has_modelposfor3dicon() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_modelposfor3dicon() const {
  return _internal_has_modelposfor3dicon();
}
inline void npc_data_t_npc_config::clear_modelposfor3dicon() {
  modelposfor3dicon_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00040000u;
}
inline const std::string& npc_data_t_npc_config::modelposfor3dicon() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.modelposfor3dicon)
  return _internal_modelposfor3dicon();
}
inline void npc_data_t_npc_config::set_modelposfor3dicon(const std::string& value) {
  _internal_set_modelposfor3dicon(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.modelposfor3dicon)
}
inline std::string* npc_data_t_npc_config::mutable_modelposfor3dicon() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.modelposfor3dicon)
  return _internal_mutable_modelposfor3dicon();
}
inline const std::string& npc_data_t_npc_config::_internal_modelposfor3dicon() const {
  return modelposfor3dicon_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_modelposfor3dicon(const std::string& value) {
  _has_bits_[0] |= 0x00040000u;
  modelposfor3dicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_modelposfor3dicon(std::string&& value) {
  _has_bits_[0] |= 0x00040000u;
  modelposfor3dicon_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.modelposfor3dicon)
}
inline void npc_data_t_npc_config::set_modelposfor3dicon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00040000u;
  modelposfor3dicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.modelposfor3dicon)
}
inline void npc_data_t_npc_config::set_modelposfor3dicon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00040000u;
  modelposfor3dicon_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.modelposfor3dicon)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_modelposfor3dicon() {
  _has_bits_[0] |= 0x00040000u;
  return modelposfor3dicon_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_modelposfor3dicon() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.modelposfor3dicon)
  if (!_internal_has_modelposfor3dicon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00040000u;
  return modelposfor3dicon_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_modelposfor3dicon(std::string* modelposfor3dicon) {
  if (modelposfor3dicon != nullptr) {
    _has_bits_[0] |= 0x00040000u;
  } else {
    _has_bits_[0] &= ~0x00040000u;
  }
  modelposfor3dicon_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modelposfor3dicon);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.modelposfor3dicon)
}

// required uint32 hatred_distance = 91;
inline bool npc_data_t_npc_config::_internal_has_hatred_distance() const {
  bool value = (_has_bits_[2] & 0x80000000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_hatred_distance() const {
  return _internal_has_hatred_distance();
}
inline void npc_data_t_npc_config::clear_hatred_distance() {
  hatred_distance_ = 0u;
  _has_bits_[2] &= ~0x80000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_hatred_distance() const {
  return hatred_distance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::hatred_distance() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.hatred_distance)
  return _internal_hatred_distance();
}
inline void npc_data_t_npc_config::_internal_set_hatred_distance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x80000000u;
  hatred_distance_ = value;
}
inline void npc_data_t_npc_config::set_hatred_distance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hatred_distance(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.hatred_distance)
}

// required uint32 guardRegion = 92;
inline bool npc_data_t_npc_config::_internal_has_guardregion() const {
  bool value = (_has_bits_[3] & 0x00000001u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_guardregion() const {
  return _internal_has_guardregion();
}
inline void npc_data_t_npc_config::clear_guardregion() {
  guardregion_ = 0u;
  _has_bits_[3] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_guardregion() const {
  return guardregion_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::guardregion() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.guardRegion)
  return _internal_guardregion();
}
inline void npc_data_t_npc_config::_internal_set_guardregion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[3] |= 0x00000001u;
  guardregion_ = value;
}
inline void npc_data_t_npc_config::set_guardregion(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guardregion(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.guardRegion)
}

// required uint32 visitfollow = 93;
inline bool npc_data_t_npc_config::_internal_has_visitfollow() const {
  bool value = (_has_bits_[3] & 0x00000002u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_visitfollow() const {
  return _internal_has_visitfollow();
}
inline void npc_data_t_npc_config::clear_visitfollow() {
  visitfollow_ = 0u;
  _has_bits_[3] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_visitfollow() const {
  return visitfollow_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::visitfollow() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.visitfollow)
  return _internal_visitfollow();
}
inline void npc_data_t_npc_config::_internal_set_visitfollow(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[3] |= 0x00000002u;
  visitfollow_ = value;
}
inline void npc_data_t_npc_config::set_visitfollow(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_visitfollow(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.visitfollow)
}

// required uint32 lookat = 94;
inline bool npc_data_t_npc_config::_internal_has_lookat() const {
  bool value = (_has_bits_[3] & 0x00000004u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_lookat() const {
  return _internal_has_lookat();
}
inline void npc_data_t_npc_config::clear_lookat() {
  lookat_ = 0u;
  _has_bits_[3] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::_internal_lookat() const {
  return lookat_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 npc_data_t_npc_config::lookat() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.lookat)
  return _internal_lookat();
}
inline void npc_data_t_npc_config::_internal_set_lookat(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[3] |= 0x00000004u;
  lookat_ = value;
}
inline void npc_data_t_npc_config::set_lookat(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lookat(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.lookat)
}

// required string modelCon4Cha = 95;
inline bool npc_data_t_npc_config::_internal_has_modelcon4cha() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_modelcon4cha() const {
  return _internal_has_modelcon4cha();
}
inline void npc_data_t_npc_config::clear_modelcon4cha() {
  modelcon4cha_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00080000u;
}
inline const std::string& npc_data_t_npc_config::modelcon4cha() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.modelCon4Cha)
  return _internal_modelcon4cha();
}
inline void npc_data_t_npc_config::set_modelcon4cha(const std::string& value) {
  _internal_set_modelcon4cha(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.modelCon4Cha)
}
inline std::string* npc_data_t_npc_config::mutable_modelcon4cha() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.modelCon4Cha)
  return _internal_mutable_modelcon4cha();
}
inline const std::string& npc_data_t_npc_config::_internal_modelcon4cha() const {
  return modelcon4cha_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_modelcon4cha(const std::string& value) {
  _has_bits_[0] |= 0x00080000u;
  modelcon4cha_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_modelcon4cha(std::string&& value) {
  _has_bits_[0] |= 0x00080000u;
  modelcon4cha_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.modelCon4Cha)
}
inline void npc_data_t_npc_config::set_modelcon4cha(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00080000u;
  modelcon4cha_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.modelCon4Cha)
}
inline void npc_data_t_npc_config::set_modelcon4cha(const char* value, size_t size) {
  _has_bits_[0] |= 0x00080000u;
  modelcon4cha_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.modelCon4Cha)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_modelcon4cha() {
  _has_bits_[0] |= 0x00080000u;
  return modelcon4cha_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_modelcon4cha() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.modelCon4Cha)
  if (!_internal_has_modelcon4cha()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00080000u;
  return modelcon4cha_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_modelcon4cha(std::string* modelcon4cha) {
  if (modelcon4cha != nullptr) {
    _has_bits_[0] |= 0x00080000u;
  } else {
    _has_bits_[0] &= ~0x00080000u;
  }
  modelcon4cha_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modelcon4cha);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.modelCon4Cha)
}

// required string modelCon4Hero = 96;
inline bool npc_data_t_npc_config::_internal_has_modelcon4hero() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_modelcon4hero() const {
  return _internal_has_modelcon4hero();
}
inline void npc_data_t_npc_config::clear_modelcon4hero() {
  modelcon4hero_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00100000u;
}
inline const std::string& npc_data_t_npc_config::modelcon4hero() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.modelCon4Hero)
  return _internal_modelcon4hero();
}
inline void npc_data_t_npc_config::set_modelcon4hero(const std::string& value) {
  _internal_set_modelcon4hero(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.modelCon4Hero)
}
inline std::string* npc_data_t_npc_config::mutable_modelcon4hero() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.modelCon4Hero)
  return _internal_mutable_modelcon4hero();
}
inline const std::string& npc_data_t_npc_config::_internal_modelcon4hero() const {
  return modelcon4hero_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_modelcon4hero(const std::string& value) {
  _has_bits_[0] |= 0x00100000u;
  modelcon4hero_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_modelcon4hero(std::string&& value) {
  _has_bits_[0] |= 0x00100000u;
  modelcon4hero_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.modelCon4Hero)
}
inline void npc_data_t_npc_config::set_modelcon4hero(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00100000u;
  modelcon4hero_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.modelCon4Hero)
}
inline void npc_data_t_npc_config::set_modelcon4hero(const char* value, size_t size) {
  _has_bits_[0] |= 0x00100000u;
  modelcon4hero_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.modelCon4Hero)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_modelcon4hero() {
  _has_bits_[0] |= 0x00100000u;
  return modelcon4hero_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_modelcon4hero() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.modelCon4Hero)
  if (!_internal_has_modelcon4hero()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00100000u;
  return modelcon4hero_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_modelcon4hero(std::string* modelcon4hero) {
  if (modelcon4hero != nullptr) {
    _has_bits_[0] |= 0x00100000u;
  } else {
    _has_bits_[0] &= ~0x00100000u;
  }
  modelcon4hero_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modelcon4hero);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.modelCon4Hero)
}

// required string modelCon4Guide = 97;
inline bool npc_data_t_npc_config::_internal_has_modelcon4guide() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_modelcon4guide() const {
  return _internal_has_modelcon4guide();
}
inline void npc_data_t_npc_config::clear_modelcon4guide() {
  modelcon4guide_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00200000u;
}
inline const std::string& npc_data_t_npc_config::modelcon4guide() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.modelCon4Guide)
  return _internal_modelcon4guide();
}
inline void npc_data_t_npc_config::set_modelcon4guide(const std::string& value) {
  _internal_set_modelcon4guide(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.modelCon4Guide)
}
inline std::string* npc_data_t_npc_config::mutable_modelcon4guide() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.modelCon4Guide)
  return _internal_mutable_modelcon4guide();
}
inline const std::string& npc_data_t_npc_config::_internal_modelcon4guide() const {
  return modelcon4guide_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_modelcon4guide(const std::string& value) {
  _has_bits_[0] |= 0x00200000u;
  modelcon4guide_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_modelcon4guide(std::string&& value) {
  _has_bits_[0] |= 0x00200000u;
  modelcon4guide_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.modelCon4Guide)
}
inline void npc_data_t_npc_config::set_modelcon4guide(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00200000u;
  modelcon4guide_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.modelCon4Guide)
}
inline void npc_data_t_npc_config::set_modelcon4guide(const char* value, size_t size) {
  _has_bits_[0] |= 0x00200000u;
  modelcon4guide_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.modelCon4Guide)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_modelcon4guide() {
  _has_bits_[0] |= 0x00200000u;
  return modelcon4guide_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_modelcon4guide() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.modelCon4Guide)
  if (!_internal_has_modelcon4guide()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00200000u;
  return modelcon4guide_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_modelcon4guide(std::string* modelcon4guide) {
  if (modelcon4guide != nullptr) {
    _has_bits_[0] |= 0x00200000u;
  } else {
    _has_bits_[0] &= ~0x00200000u;
  }
  modelcon4guide_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), modelcon4guide);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.modelCon4Guide)
}

// required string CapsuleCollider = 98;
inline bool npc_data_t_npc_config::_internal_has_capsulecollider() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_capsulecollider() const {
  return _internal_has_capsulecollider();
}
inline void npc_data_t_npc_config::clear_capsulecollider() {
  capsulecollider_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00400000u;
}
inline const std::string& npc_data_t_npc_config::capsulecollider() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.CapsuleCollider)
  return _internal_capsulecollider();
}
inline void npc_data_t_npc_config::set_capsulecollider(const std::string& value) {
  _internal_set_capsulecollider(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.CapsuleCollider)
}
inline std::string* npc_data_t_npc_config::mutable_capsulecollider() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.CapsuleCollider)
  return _internal_mutable_capsulecollider();
}
inline const std::string& npc_data_t_npc_config::_internal_capsulecollider() const {
  return capsulecollider_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_capsulecollider(const std::string& value) {
  _has_bits_[0] |= 0x00400000u;
  capsulecollider_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_capsulecollider(std::string&& value) {
  _has_bits_[0] |= 0x00400000u;
  capsulecollider_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.CapsuleCollider)
}
inline void npc_data_t_npc_config::set_capsulecollider(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00400000u;
  capsulecollider_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.CapsuleCollider)
}
inline void npc_data_t_npc_config::set_capsulecollider(const char* value, size_t size) {
  _has_bits_[0] |= 0x00400000u;
  capsulecollider_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.CapsuleCollider)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_capsulecollider() {
  _has_bits_[0] |= 0x00400000u;
  return capsulecollider_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_capsulecollider() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.CapsuleCollider)
  if (!_internal_has_capsulecollider()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00400000u;
  return capsulecollider_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_capsulecollider(std::string* capsulecollider) {
  if (capsulecollider != nullptr) {
    _has_bits_[0] |= 0x00400000u;
  } else {
    _has_bits_[0] &= ~0x00400000u;
  }
  capsulecollider_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), capsulecollider);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.CapsuleCollider)
}

// required string function = 99;
inline bool npc_data_t_npc_config::_internal_has_function() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool npc_data_t_npc_config::has_function() const {
  return _internal_has_function();
}
inline void npc_data_t_npc_config::clear_function() {
  function_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00800000u;
}
inline const std::string& npc_data_t_npc_config::function() const {
  // @@protoc_insertion_point(field_get:pb.npc_data.t_npc_config.function)
  return _internal_function();
}
inline void npc_data_t_npc_config::set_function(const std::string& value) {
  _internal_set_function(value);
  // @@protoc_insertion_point(field_set:pb.npc_data.t_npc_config.function)
}
inline std::string* npc_data_t_npc_config::mutable_function() {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.t_npc_config.function)
  return _internal_mutable_function();
}
inline const std::string& npc_data_t_npc_config::_internal_function() const {
  return function_.GetNoArena();
}
inline void npc_data_t_npc_config::_internal_set_function(const std::string& value) {
  _has_bits_[0] |= 0x00800000u;
  function_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void npc_data_t_npc_config::set_function(std::string&& value) {
  _has_bits_[0] |= 0x00800000u;
  function_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.npc_data.t_npc_config.function)
}
inline void npc_data_t_npc_config::set_function(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00800000u;
  function_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.npc_data.t_npc_config.function)
}
inline void npc_data_t_npc_config::set_function(const char* value, size_t size) {
  _has_bits_[0] |= 0x00800000u;
  function_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.npc_data.t_npc_config.function)
}
inline std::string* npc_data_t_npc_config::_internal_mutable_function() {
  _has_bits_[0] |= 0x00800000u;
  return function_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* npc_data_t_npc_config::release_function() {
  // @@protoc_insertion_point(field_release:pb.npc_data.t_npc_config.function)
  if (!_internal_has_function()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00800000u;
  return function_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void npc_data_t_npc_config::set_allocated_function(std::string* function) {
  if (function != nullptr) {
    _has_bits_[0] |= 0x00800000u;
  } else {
    _has_bits_[0] &= ~0x00800000u;
  }
  function_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:pb.npc_data.t_npc_config.function)
}

// -------------------------------------------------------------------

// npc_data

// repeated .pb.npc_data.t_npc_config datas = 1;
inline int npc_data::_internal_datas_size() const {
  return datas_.size();
}
inline int npc_data::datas_size() const {
  return _internal_datas_size();
}
inline void npc_data::clear_datas() {
  datas_.Clear();
}
inline ::pb::npc_data_t_npc_config* npc_data::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:pb.npc_data.datas)
  return datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::npc_data_t_npc_config >*
npc_data::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:pb.npc_data.datas)
  return &datas_;
}
inline const ::pb::npc_data_t_npc_config& npc_data::_internal_datas(int index) const {
  return datas_.Get(index);
}
inline const ::pb::npc_data_t_npc_config& npc_data::datas(int index) const {
  // @@protoc_insertion_point(field_get:pb.npc_data.datas)
  return _internal_datas(index);
}
inline ::pb::npc_data_t_npc_config* npc_data::_internal_add_datas() {
  return datas_.Add();
}
inline ::pb::npc_data_t_npc_config* npc_data::add_datas() {
  // @@protoc_insertion_point(field_add:pb.npc_data.datas)
  return _internal_add_datas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::npc_data_t_npc_config >&
npc_data::datas() const {
  // @@protoc_insertion_point(field_list:pb.npc_data.datas)
  return datas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_npc_5fdata_2eproto
