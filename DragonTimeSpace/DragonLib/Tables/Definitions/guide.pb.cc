// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guide.proto

#include "guide.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_guide_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_guide_t_guide_guide_2eproto;
namespace pb {
class guide_t_guideDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<guide_t_guide> _instance;
} _guide_t_guide_default_instance_;
class guideDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<guide> _instance;
} _guide_default_instance_;
}  // namespace pb
static void InitDefaultsscc_info_guide_guide_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_guide_default_instance_;
    new (ptr) ::pb::guide();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::guide::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_guide_guide_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_guide_guide_2eproto}, {
      &scc_info_guide_t_guide_guide_2eproto.base,}};

static void InitDefaultsscc_info_guide_t_guide_guide_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_guide_t_guide_default_instance_;
    new (ptr) ::pb::guide_t_guide();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::guide_t_guide::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_guide_t_guide_guide_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_guide_t_guide_guide_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_guide_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_guide_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_guide_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_guide_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, tbxid_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, id_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, guideid_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, triggertype_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, condition_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, hightlightcomponent_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, disappeartype_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, width_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, hight_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, guidetext_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, describe_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, needfreezetime_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, direction_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, trignpc_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, trigquest_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, triglimit_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, iffreeze_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, showbuff_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, shownpc_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, posarrow_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, posdialogue_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, pospainting_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, positionsquare_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, lasttime_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, steptime_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, stateid_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, ifbtn_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, highlighttype_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, uibond_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, uibonus_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, positionbonus_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, positionorigin_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, uinumber_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, enddistance_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, zoom_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, uiinitial_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, itemid_),
  PROTOBUF_FIELD_OFFSET(::pb::guide_t_guide, avatarid_),
  17,
  18,
  19,
  20,
  0,
  1,
  21,
  22,
  23,
  2,
  3,
  24,
  25,
  26,
  4,
  5,
  27,
  28,
  29,
  6,
  7,
  8,
  9,
  30,
  31,
  32,
  33,
  34,
  10,
  11,
  12,
  13,
  14,
  35,
  15,
  16,
  36,
  37,
  PROTOBUF_FIELD_OFFSET(::pb::guide, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::guide, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::guide, datas_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 43, sizeof(::pb::guide_t_guide)},
  { 81, 87, sizeof(::pb::guide)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_guide_t_guide_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_guide_default_instance_),
};

const char descriptor_table_protodef_guide_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013guide.proto\022\002pb\"\206\006\n\005guide\022 \n\005datas\030\001 \003"
  "(\0132\021.pb.guide.t_guide\032\332\005\n\007t_guide\022\020\n\005tbx"
  "id\030\001 \002(\r:\0010\022\r\n\002id\030\002 \002(\r:\0010\022\017\n\007guideid\030\003 "
  "\002(\r\022\023\n\013triggertype\030\004 \002(\r\022\021\n\tcondition\030\005 "
  "\002(\t\022\033\n\023hightlightcomponent\030\006 \002(\t\022\025\n\rdisa"
  "ppeartype\030\007 \002(\r\022\r\n\005width\030\010 \002(\r\022\r\n\005hight\030"
  "\t \002(\r\022\021\n\tguidetext\030\n \002(\t\022\020\n\010describe\030\013 \002"
  "(\t\022\026\n\016needfreezetime\030\014 \002(\010\022\021\n\tdirection\030"
  "\r \002(\r\022\017\n\007trignpc\030\016 \002(\r\022\021\n\ttrigquest\030\017 \002("
  "\t\022\021\n\ttriglimit\030\020 \002(\t\022\020\n\010iffreeze\030\021 \002(\r\022\020"
  "\n\010showbuff\030\022 \002(\r\022\017\n\007shownpc\030\023 \002(\r\022\020\n\010pos"
  "arrow\030\024 \002(\t\022\023\n\013posdialogue\030\025 \002(\t\022\023\n\013posp"
  "ainting\030\026 \002(\t\022\026\n\016positionsquare\030\027 \002(\t\022\020\n"
  "\010lasttime\030\030 \002(\r\022\020\n\010steptime\030\031 \002(\002\022\017\n\007sta"
  "teid\030\032 \002(\r\022\r\n\005ifbtn\030\033 \002(\r\022\025\n\rhighlightty"
  "pe\030\034 \002(\r\022\016\n\006UIbond\030\035 \002(\t\022\017\n\007UIbonus\030\036 \002("
  "\t\022\025\n\rpositionbonus\030\037 \002(\t\022\026\n\016positionorig"
  "in\030  \002(\t\022\020\n\010UInumber\030! \002(\t\022\023\n\013enddistanc"
  "e\030\" \002(\r\022\014\n\004zoom\030# \002(\t\022\021\n\tUiinitial\030$ \002(\t"
  "\022\016\n\006itemid\030% \002(\r\022\020\n\010avatarid\030& \002(\r"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_guide_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_guide_2eproto_sccs[2] = {
  &scc_info_guide_guide_2eproto.base,
  &scc_info_guide_t_guide_guide_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_guide_2eproto_once;
static bool descriptor_table_guide_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_guide_2eproto = {
  &descriptor_table_guide_2eproto_initialized, descriptor_table_protodef_guide_2eproto, "guide.proto", 794,
  &descriptor_table_guide_2eproto_once, descriptor_table_guide_2eproto_sccs, descriptor_table_guide_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_guide_2eproto::offsets,
  file_level_metadata_guide_2eproto, 2, file_level_enum_descriptors_guide_2eproto, file_level_service_descriptors_guide_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_guide_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_guide_2eproto)), true);
namespace pb {

// ===================================================================

void guide_t_guide::InitAsDefaultInstance() {
}
class guide_t_guide::_Internal {
 public:
  using HasBits = decltype(std::declval<guide_t_guide>()._has_bits_);
  static void set_has_tbxid(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_guideid(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_triggertype(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_condition(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hightlightcomponent(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_disappeartype(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_hight(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_guidetext(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_describe(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_needfreezetime(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_direction(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_trignpc(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_trigquest(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_triglimit(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_iffreeze(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_showbuff(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_shownpc(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_posarrow(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_posdialogue(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_pospainting(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_positionsquare(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_lasttime(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_steptime(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_stateid(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_ifbtn(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_highlighttype(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_uibond(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_uibonus(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_positionbonus(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_positionorigin(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_uinumber(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_enddistance(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_zoom(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_uiinitial(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_itemid(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static void set_has_avatarid(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
};

guide_t_guide::guide_t_guide()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.guide.t_guide)
}
guide_t_guide::guide_t_guide(const guide_t_guide& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  condition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_condition()) {
    condition_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.condition_);
  }
  hightlightcomponent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_hightlightcomponent()) {
    hightlightcomponent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.hightlightcomponent_);
  }
  guidetext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_guidetext()) {
    guidetext_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.guidetext_);
  }
  describe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_describe()) {
    describe_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  trigquest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_trigquest()) {
    trigquest_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.trigquest_);
  }
  triglimit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_triglimit()) {
    triglimit_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.triglimit_);
  }
  posarrow_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_posarrow()) {
    posarrow_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.posarrow_);
  }
  posdialogue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_posdialogue()) {
    posdialogue_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.posdialogue_);
  }
  pospainting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_pospainting()) {
    pospainting_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pospainting_);
  }
  positionsquare_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_positionsquare()) {
    positionsquare_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.positionsquare_);
  }
  uibond_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uibond()) {
    uibond_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uibond_);
  }
  uibonus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uibonus()) {
    uibonus_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uibonus_);
  }
  positionbonus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_positionbonus()) {
    positionbonus_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.positionbonus_);
  }
  positionorigin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_positionorigin()) {
    positionorigin_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.positionorigin_);
  }
  uinumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uinumber()) {
    uinumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uinumber_);
  }
  zoom_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_zoom()) {
    zoom_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.zoom_);
  }
  uiinitial_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_uiinitial()) {
    uiinitial_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uiinitial_);
  }
  ::memcpy(&tbxid_, &from.tbxid_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatarid_) -
    reinterpret_cast<char*>(&tbxid_)) + sizeof(avatarid_));
  // @@protoc_insertion_point(copy_constructor:pb.guide.t_guide)
}

void guide_t_guide::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_guide_t_guide_guide_2eproto.base);
  condition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hightlightcomponent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guidetext_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  describe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trigquest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  triglimit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  posarrow_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  posdialogue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pospainting_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  positionsquare_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uibond_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uibonus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  positionbonus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  positionorigin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uinumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  zoom_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uiinitial_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&tbxid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatarid_) -
      reinterpret_cast<char*>(&tbxid_)) + sizeof(avatarid_));
}

guide_t_guide::~guide_t_guide() {
  // @@protoc_insertion_point(destructor:pb.guide.t_guide)
  SharedDtor();
}

void guide_t_guide::SharedDtor() {
  condition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hightlightcomponent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guidetext_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  describe_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trigquest_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  triglimit_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  posarrow_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  posdialogue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pospainting_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  positionsquare_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uibond_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uibonus_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  positionbonus_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  positionorigin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uinumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  zoom_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uiinitial_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void guide_t_guide::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const guide_t_guide& guide_t_guide::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_guide_t_guide_guide_2eproto.base);
  return *internal_default_instance();
}


void guide_t_guide::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.guide.t_guide)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      condition_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      hightlightcomponent_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      guidetext_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      describe_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      trigquest_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      triglimit_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      posarrow_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      posdialogue_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      pospainting_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      positionsquare_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      uibond_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000800u) {
      uibonus_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00001000u) {
      positionbonus_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00002000u) {
      positionorigin_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00004000u) {
      uinumber_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00008000u) {
      zoom_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00010000u) {
    uiinitial_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00fe0000u) {
    ::memset(&tbxid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hight_) -
        reinterpret_cast<char*>(&tbxid_)) + sizeof(hight_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&needfreezetime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steptime_) -
        reinterpret_cast<char*>(&needfreezetime_)) + sizeof(steptime_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&stateid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&avatarid_) -
        reinterpret_cast<char*>(&stateid_)) + sizeof(avatarid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* guide_t_guide::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 tbxid = 1 [default = 0];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_tbxid(&_has_bits_);
          tbxid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 id = 2 [default = 0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_id(&_has_bits_);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 guideid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_guideid(&_has_bits_);
          guideid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 triggertype = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_triggertype(&_has_bits_);
          triggertype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string condition = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_condition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.condition");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string hightlightcomponent = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_hightlightcomponent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.hightlightcomponent");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 disappeartype = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_disappeartype(&_has_bits_);
          disappeartype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 width = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_width(&_has_bits_);
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 hight = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_hight(&_has_bits_);
          hight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string guidetext = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_guidetext();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.guidetext");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string describe = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_describe();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.describe");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool needfreezetime = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_needfreezetime(&_has_bits_);
          needfreezetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 direction = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_direction(&_has_bits_);
          direction_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 trignpc = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_trignpc(&_has_bits_);
          trignpc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string trigquest = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_trigquest();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.trigquest");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string triglimit = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_triglimit();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.triglimit");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 iffreeze = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_iffreeze(&_has_bits_);
          iffreeze_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 showbuff = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_showbuff(&_has_bits_);
          showbuff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 shownpc = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_shownpc(&_has_bits_);
          shownpc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string posarrow = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          auto str = _internal_mutable_posarrow();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.posarrow");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string posdialogue = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_posdialogue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.posdialogue");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string pospainting = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_pospainting();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.pospainting");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string positionsquare = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          auto str = _internal_mutable_positionsquare();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.positionsquare");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 lasttime = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          _Internal::set_has_lasttime(&_has_bits_);
          lasttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required float steptime = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 205)) {
          _Internal::set_has_steptime(&_has_bits_);
          steptime_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // required uint32 stateid = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          _Internal::set_has_stateid(&_has_bits_);
          stateid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 ifbtn = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          _Internal::set_has_ifbtn(&_has_bits_);
          ifbtn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 highlighttype = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_highlighttype(&_has_bits_);
          highlighttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string UIbond = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          auto str = _internal_mutable_uibond();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.UIbond");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string UIbonus = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_uibonus();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.UIbonus");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string positionbonus = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          auto str = _internal_mutable_positionbonus();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.positionbonus");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string positionorigin = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          auto str = _internal_mutable_positionorigin();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.positionorigin");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string UInumber = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uinumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.UInumber");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 enddistance = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_enddistance(&_has_bits_);
          enddistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string zoom = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_zoom();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.zoom");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string Uiinitial = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_uiinitial();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.guide.t_guide.Uiinitial");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 itemid = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_itemid(&_has_bits_);
          itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint32 avatarid = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_avatarid(&_has_bits_);
          avatarid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* guide_t_guide::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.guide.t_guide)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 tbxid = 1 [default = 0];
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_tbxid(), target);
  }

  // required uint32 id = 2 [default = 0];
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  // required uint32 guideid = 3;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_guideid(), target);
  }

  // required uint32 triggertype = 4;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_triggertype(), target);
  }

  // required string condition = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_condition().data(), static_cast<int>(this->_internal_condition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.condition");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_condition(), target);
  }

  // required string hightlightcomponent = 6;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_hightlightcomponent().data(), static_cast<int>(this->_internal_hightlightcomponent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.hightlightcomponent");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_hightlightcomponent(), target);
  }

  // required uint32 disappeartype = 7;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_disappeartype(), target);
  }

  // required uint32 width = 8;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_width(), target);
  }

  // required uint32 hight = 9;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_hight(), target);
  }

  // required string guidetext = 10;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guidetext().data(), static_cast<int>(this->_internal_guidetext().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.guidetext");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_guidetext(), target);
  }

  // required string describe = 11;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_describe().data(), static_cast<int>(this->_internal_describe().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.describe");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_describe(), target);
  }

  // required bool needfreezetime = 12;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_needfreezetime(), target);
  }

  // required uint32 direction = 13;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_direction(), target);
  }

  // required uint32 trignpc = 14;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_trignpc(), target);
  }

  // required string trigquest = 15;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_trigquest().data(), static_cast<int>(this->_internal_trigquest().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.trigquest");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_trigquest(), target);
  }

  // required string triglimit = 16;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_triglimit().data(), static_cast<int>(this->_internal_triglimit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.triglimit");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_triglimit(), target);
  }

  // required uint32 iffreeze = 17;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_iffreeze(), target);
  }

  // required uint32 showbuff = 18;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_showbuff(), target);
  }

  // required uint32 shownpc = 19;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(19, this->_internal_shownpc(), target);
  }

  // required string posarrow = 20;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_posarrow().data(), static_cast<int>(this->_internal_posarrow().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.posarrow");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_posarrow(), target);
  }

  // required string posdialogue = 21;
  if (cached_has_bits & 0x00000080u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_posdialogue().data(), static_cast<int>(this->_internal_posdialogue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.posdialogue");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_posdialogue(), target);
  }

  // required string pospainting = 22;
  if (cached_has_bits & 0x00000100u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_pospainting().data(), static_cast<int>(this->_internal_pospainting().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.pospainting");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_pospainting(), target);
  }

  // required string positionsquare = 23;
  if (cached_has_bits & 0x00000200u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_positionsquare().data(), static_cast<int>(this->_internal_positionsquare().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.positionsquare");
    target = stream->WriteStringMaybeAliased(
        23, this->_internal_positionsquare(), target);
  }

  // required uint32 lasttime = 24;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(24, this->_internal_lasttime(), target);
  }

  // required float steptime = 25;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(25, this->_internal_steptime(), target);
  }

  cached_has_bits = _has_bits_[1];
  // required uint32 stateid = 26;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(26, this->_internal_stateid(), target);
  }

  // required uint32 ifbtn = 27;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(27, this->_internal_ifbtn(), target);
  }

  // required uint32 highlighttype = 28;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(28, this->_internal_highlighttype(), target);
  }

  cached_has_bits = _has_bits_[0];
  // required string UIbond = 29;
  if (cached_has_bits & 0x00000400u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_uibond().data(), static_cast<int>(this->_internal_uibond().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.UIbond");
    target = stream->WriteStringMaybeAliased(
        29, this->_internal_uibond(), target);
  }

  // required string UIbonus = 30;
  if (cached_has_bits & 0x00000800u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_uibonus().data(), static_cast<int>(this->_internal_uibonus().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.UIbonus");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_uibonus(), target);
  }

  // required string positionbonus = 31;
  if (cached_has_bits & 0x00001000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_positionbonus().data(), static_cast<int>(this->_internal_positionbonus().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.positionbonus");
    target = stream->WriteStringMaybeAliased(
        31, this->_internal_positionbonus(), target);
  }

  // required string positionorigin = 32;
  if (cached_has_bits & 0x00002000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_positionorigin().data(), static_cast<int>(this->_internal_positionorigin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.positionorigin");
    target = stream->WriteStringMaybeAliased(
        32, this->_internal_positionorigin(), target);
  }

  // required string UInumber = 33;
  if (cached_has_bits & 0x00004000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_uinumber().data(), static_cast<int>(this->_internal_uinumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.UInumber");
    target = stream->WriteStringMaybeAliased(
        33, this->_internal_uinumber(), target);
  }

  cached_has_bits = _has_bits_[1];
  // required uint32 enddistance = 34;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(34, this->_internal_enddistance(), target);
  }

  cached_has_bits = _has_bits_[0];
  // required string zoom = 35;
  if (cached_has_bits & 0x00008000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_zoom().data(), static_cast<int>(this->_internal_zoom().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.zoom");
    target = stream->WriteStringMaybeAliased(
        35, this->_internal_zoom(), target);
  }

  // required string Uiinitial = 36;
  if (cached_has_bits & 0x00010000u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_uiinitial().data(), static_cast<int>(this->_internal_uiinitial().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "pb.guide.t_guide.Uiinitial");
    target = stream->WriteStringMaybeAliased(
        36, this->_internal_uiinitial(), target);
  }

  cached_has_bits = _has_bits_[1];
  // required uint32 itemid = 37;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(37, this->_internal_itemid(), target);
  }

  // required uint32 avatarid = 38;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(38, this->_internal_avatarid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.guide.t_guide)
  return target;
}

size_t guide_t_guide::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.guide.t_guide)
  size_t total_size = 0;

  if (_internal_has_condition()) {
    // required string condition = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_condition());
  }

  if (_internal_has_hightlightcomponent()) {
    // required string hightlightcomponent = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hightlightcomponent());
  }

  if (_internal_has_guidetext()) {
    // required string guidetext = 10;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_guidetext());
  }

  if (_internal_has_describe()) {
    // required string describe = 11;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_describe());
  }

  if (_internal_has_trigquest()) {
    // required string trigquest = 15;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trigquest());
  }

  if (_internal_has_triglimit()) {
    // required string triglimit = 16;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_triglimit());
  }

  if (_internal_has_posarrow()) {
    // required string posarrow = 20;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_posarrow());
  }

  if (_internal_has_posdialogue()) {
    // required string posdialogue = 21;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_posdialogue());
  }

  if (_internal_has_pospainting()) {
    // required string pospainting = 22;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pospainting());
  }

  if (_internal_has_positionsquare()) {
    // required string positionsquare = 23;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_positionsquare());
  }

  if (_internal_has_uibond()) {
    // required string UIbond = 29;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uibond());
  }

  if (_internal_has_uibonus()) {
    // required string UIbonus = 30;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uibonus());
  }

  if (_internal_has_positionbonus()) {
    // required string positionbonus = 31;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_positionbonus());
  }

  if (_internal_has_positionorigin()) {
    // required string positionorigin = 32;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_positionorigin());
  }

  if (_internal_has_uinumber()) {
    // required string UInumber = 33;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uinumber());
  }

  if (_internal_has_zoom()) {
    // required string zoom = 35;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_zoom());
  }

  if (_internal_has_uiinitial()) {
    // required string Uiinitial = 36;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uiinitial());
  }

  if (_internal_has_tbxid()) {
    // required uint32 tbxid = 1 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_tbxid());
  }

  if (_internal_has_id()) {
    // required uint32 id = 2 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (_internal_has_guideid()) {
    // required uint32 guideid = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guideid());
  }

  if (_internal_has_triggertype()) {
    // required uint32 triggertype = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_triggertype());
  }

  if (_internal_has_disappeartype()) {
    // required uint32 disappeartype = 7;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_disappeartype());
  }

  if (_internal_has_width()) {
    // required uint32 width = 8;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_width());
  }

  if (_internal_has_hight()) {
    // required uint32 hight = 9;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_hight());
  }

  if (_internal_has_needfreezetime()) {
    // required bool needfreezetime = 12;
    total_size += 1 + 1;
  }

  if (_internal_has_direction()) {
    // required uint32 direction = 13;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_direction());
  }

  if (_internal_has_trignpc()) {
    // required uint32 trignpc = 14;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_trignpc());
  }

  if (_internal_has_iffreeze()) {
    // required uint32 iffreeze = 17;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_iffreeze());
  }

  if (_internal_has_showbuff()) {
    // required uint32 showbuff = 18;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_showbuff());
  }

  if (_internal_has_shownpc()) {
    // required uint32 shownpc = 19;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_shownpc());
  }

  if (_internal_has_lasttime()) {
    // required uint32 lasttime = 24;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lasttime());
  }

  if (_internal_has_steptime()) {
    // required float steptime = 25;
    total_size += 2 + 4;
  }

  if (_internal_has_stateid()) {
    // required uint32 stateid = 26;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stateid());
  }

  if (_internal_has_ifbtn()) {
    // required uint32 ifbtn = 27;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ifbtn());
  }

  if (_internal_has_highlighttype()) {
    // required uint32 highlighttype = 28;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_highlighttype());
  }

  if (_internal_has_enddistance()) {
    // required uint32 enddistance = 34;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_enddistance());
  }

  if (_internal_has_itemid()) {
    // required uint32 itemid = 37;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_itemid());
  }

  if (_internal_has_avatarid()) {
    // required uint32 avatarid = 38;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avatarid());
  }

  return total_size;
}
size_t guide_t_guide::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.guide.t_guide)
  size_t total_size = 0;

  if ((((_has_bits_[0] & 0xffffffff) ^ 0xffffffff)
       | ((_has_bits_[1] & 0x0000003f) ^ 0x0000003f)) == 0) {  // All required fields are present.
    // required string condition = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_condition());

    // required string hightlightcomponent = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hightlightcomponent());

    // required string guidetext = 10;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_guidetext());

    // required string describe = 11;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_describe());

    // required string trigquest = 15;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trigquest());

    // required string triglimit = 16;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_triglimit());

    // required string posarrow = 20;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_posarrow());

    // required string posdialogue = 21;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_posdialogue());

    // required string pospainting = 22;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pospainting());

    // required string positionsquare = 23;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_positionsquare());

    // required string UIbond = 29;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uibond());

    // required string UIbonus = 30;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uibonus());

    // required string positionbonus = 31;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_positionbonus());

    // required string positionorigin = 32;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_positionorigin());

    // required string UInumber = 33;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uinumber());

    // required string zoom = 35;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_zoom());

    // required string Uiinitial = 36;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uiinitial());

    // required uint32 tbxid = 1 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_tbxid());

    // required uint32 id = 2 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());

    // required uint32 guideid = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guideid());

    // required uint32 triggertype = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_triggertype());

    // required uint32 disappeartype = 7;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_disappeartype());

    // required uint32 width = 8;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_width());

    // required uint32 hight = 9;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_hight());

    // required bool needfreezetime = 12;
    total_size += 1 + 1;

    // required uint32 direction = 13;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_direction());

    // required uint32 trignpc = 14;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_trignpc());

    // required uint32 iffreeze = 17;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_iffreeze());

    // required uint32 showbuff = 18;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_showbuff());

    // required uint32 shownpc = 19;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_shownpc());

    // required uint32 lasttime = 24;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lasttime());

    // required float steptime = 25;
    total_size += 2 + 4;

    // required uint32 stateid = 26;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stateid());

    // required uint32 ifbtn = 27;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ifbtn());

    // required uint32 highlighttype = 28;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_highlighttype());

    // required uint32 enddistance = 34;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_enddistance());

    // required uint32 itemid = 37;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_itemid());

    // required uint32 avatarid = 38;
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avatarid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void guide_t_guide::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.guide.t_guide)
  GOOGLE_DCHECK_NE(&from, this);
  const guide_t_guide* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<guide_t_guide>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.guide.t_guide)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.guide.t_guide)
    MergeFrom(*source);
  }
}

void guide_t_guide::MergeFrom(const guide_t_guide& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.guide.t_guide)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      condition_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.condition_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      hightlightcomponent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.hightlightcomponent_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      guidetext_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.guidetext_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      describe_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.describe_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      trigquest_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.trigquest_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      triglimit_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.triglimit_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      posarrow_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.posarrow_);
    }
    if (cached_has_bits & 0x00000080u) {
      _has_bits_[0] |= 0x00000080u;
      posdialogue_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.posdialogue_);
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _has_bits_[0] |= 0x00000100u;
      pospainting_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pospainting_);
    }
    if (cached_has_bits & 0x00000200u) {
      _has_bits_[0] |= 0x00000200u;
      positionsquare_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.positionsquare_);
    }
    if (cached_has_bits & 0x00000400u) {
      _has_bits_[0] |= 0x00000400u;
      uibond_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uibond_);
    }
    if (cached_has_bits & 0x00000800u) {
      _has_bits_[0] |= 0x00000800u;
      uibonus_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uibonus_);
    }
    if (cached_has_bits & 0x00001000u) {
      _has_bits_[0] |= 0x00001000u;
      positionbonus_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.positionbonus_);
    }
    if (cached_has_bits & 0x00002000u) {
      _has_bits_[0] |= 0x00002000u;
      positionorigin_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.positionorigin_);
    }
    if (cached_has_bits & 0x00004000u) {
      _has_bits_[0] |= 0x00004000u;
      uinumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uinumber_);
    }
    if (cached_has_bits & 0x00008000u) {
      _has_bits_[0] |= 0x00008000u;
      zoom_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.zoom_);
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _has_bits_[0] |= 0x00010000u;
      uiinitial_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uiinitial_);
    }
    if (cached_has_bits & 0x00020000u) {
      tbxid_ = from.tbxid_;
    }
    if (cached_has_bits & 0x00040000u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00080000u) {
      guideid_ = from.guideid_;
    }
    if (cached_has_bits & 0x00100000u) {
      triggertype_ = from.triggertype_;
    }
    if (cached_has_bits & 0x00200000u) {
      disappeartype_ = from.disappeartype_;
    }
    if (cached_has_bits & 0x00400000u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00800000u) {
      hight_ = from.hight_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      needfreezetime_ = from.needfreezetime_;
    }
    if (cached_has_bits & 0x02000000u) {
      direction_ = from.direction_;
    }
    if (cached_has_bits & 0x04000000u) {
      trignpc_ = from.trignpc_;
    }
    if (cached_has_bits & 0x08000000u) {
      iffreeze_ = from.iffreeze_;
    }
    if (cached_has_bits & 0x10000000u) {
      showbuff_ = from.showbuff_;
    }
    if (cached_has_bits & 0x20000000u) {
      shownpc_ = from.shownpc_;
    }
    if (cached_has_bits & 0x40000000u) {
      lasttime_ = from.lasttime_;
    }
    if (cached_has_bits & 0x80000000u) {
      steptime_ = from.steptime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      stateid_ = from.stateid_;
    }
    if (cached_has_bits & 0x00000002u) {
      ifbtn_ = from.ifbtn_;
    }
    if (cached_has_bits & 0x00000004u) {
      highlighttype_ = from.highlighttype_;
    }
    if (cached_has_bits & 0x00000008u) {
      enddistance_ = from.enddistance_;
    }
    if (cached_has_bits & 0x00000010u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000020u) {
      avatarid_ = from.avatarid_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void guide_t_guide::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.guide.t_guide)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void guide_t_guide::CopyFrom(const guide_t_guide& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.guide.t_guide)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool guide_t_guide::IsInitialized() const {
  if ((_has_bits_[0] & 0xffffffff) != 0xffffffff) return false;
  if ((_has_bits_[1] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void guide_t_guide::InternalSwap(guide_t_guide* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  condition_.Swap(&other->condition_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hightlightcomponent_.Swap(&other->hightlightcomponent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guidetext_.Swap(&other->guidetext_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  describe_.Swap(&other->describe_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trigquest_.Swap(&other->trigquest_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  triglimit_.Swap(&other->triglimit_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  posarrow_.Swap(&other->posarrow_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  posdialogue_.Swap(&other->posdialogue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pospainting_.Swap(&other->pospainting_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  positionsquare_.Swap(&other->positionsquare_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uibond_.Swap(&other->uibond_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uibonus_.Swap(&other->uibonus_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  positionbonus_.Swap(&other->positionbonus_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  positionorigin_.Swap(&other->positionorigin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uinumber_.Swap(&other->uinumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zoom_.Swap(&other->zoom_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uiinitial_.Swap(&other->uiinitial_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tbxid_, other->tbxid_);
  swap(id_, other->id_);
  swap(guideid_, other->guideid_);
  swap(triggertype_, other->triggertype_);
  swap(disappeartype_, other->disappeartype_);
  swap(width_, other->width_);
  swap(hight_, other->hight_);
  swap(needfreezetime_, other->needfreezetime_);
  swap(direction_, other->direction_);
  swap(trignpc_, other->trignpc_);
  swap(iffreeze_, other->iffreeze_);
  swap(showbuff_, other->showbuff_);
  swap(shownpc_, other->shownpc_);
  swap(lasttime_, other->lasttime_);
  swap(steptime_, other->steptime_);
  swap(stateid_, other->stateid_);
  swap(ifbtn_, other->ifbtn_);
  swap(highlighttype_, other->highlighttype_);
  swap(enddistance_, other->enddistance_);
  swap(itemid_, other->itemid_);
  swap(avatarid_, other->avatarid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata guide_t_guide::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void guide::InitAsDefaultInstance() {
}
class guide::_Internal {
 public:
  using HasBits = decltype(std::declval<guide>()._has_bits_);
};

guide::guide()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.guide)
}
guide::guide(const guide& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      datas_(from.datas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.guide)
}

void guide::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_guide_guide_2eproto.base);
}

guide::~guide() {
  // @@protoc_insertion_point(destructor:pb.guide)
  SharedDtor();
}

void guide::SharedDtor() {
}

void guide::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const guide& guide::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_guide_guide_2eproto.base);
  return *internal_default_instance();
}


void guide::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.guide)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datas_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* guide::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.guide.t_guide datas = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_datas(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* guide::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.guide)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.guide.t_guide datas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_datas_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_datas(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.guide)
  return target;
}

size_t guide::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.guide)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.guide.t_guide datas = 1;
  total_size += 1UL * this->_internal_datas_size();
  for (const auto& msg : this->datas_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void guide::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.guide)
  GOOGLE_DCHECK_NE(&from, this);
  const guide* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<guide>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.guide)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.guide)
    MergeFrom(*source);
  }
}

void guide::MergeFrom(const guide& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.guide)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  datas_.MergeFrom(from.datas_);
}

void guide::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.guide)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void guide::CopyFrom(const guide& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.guide)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool guide::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(datas_)) return false;
  return true;
}

void guide::InternalSwap(guide* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  datas_.InternalSwap(&other->datas_);
}

::PROTOBUF_NAMESPACE_ID::Metadata guide::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::guide_t_guide* Arena::CreateMaybeMessage< ::pb::guide_t_guide >(Arena* arena) {
  return Arena::CreateInternal< ::pb::guide_t_guide >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::guide* Arena::CreateMaybeMessage< ::pb::guide >(Arena* arena) {
  return Arena::CreateInternal< ::pb::guide >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
