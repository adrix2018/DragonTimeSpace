// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dialogueconfig.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dialogueconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dialogueconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dialogueconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dialogueconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dialogueconfig_2eproto;
namespace pb {
class dialogueconfig;
class dialogueconfigDefaultTypeInternal;
extern dialogueconfigDefaultTypeInternal _dialogueconfig_default_instance_;
class dialogueconfig_t_dialogue_config;
class dialogueconfig_t_dialogue_configDefaultTypeInternal;
extern dialogueconfig_t_dialogue_configDefaultTypeInternal _dialogueconfig_t_dialogue_config_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::dialogueconfig* Arena::CreateMaybeMessage<::pb::dialogueconfig>(Arena*);
template<> ::pb::dialogueconfig_t_dialogue_config* Arena::CreateMaybeMessage<::pb::dialogueconfig_t_dialogue_config>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

// ===================================================================

class dialogueconfig_t_dialogue_config :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.dialogueconfig.t_dialogue_config) */ {
 public:
  dialogueconfig_t_dialogue_config();
  virtual ~dialogueconfig_t_dialogue_config();

  dialogueconfig_t_dialogue_config(const dialogueconfig_t_dialogue_config& from);
  dialogueconfig_t_dialogue_config(dialogueconfig_t_dialogue_config&& from) noexcept
    : dialogueconfig_t_dialogue_config() {
    *this = ::std::move(from);
  }

  inline dialogueconfig_t_dialogue_config& operator=(const dialogueconfig_t_dialogue_config& from) {
    CopyFrom(from);
    return *this;
  }
  inline dialogueconfig_t_dialogue_config& operator=(dialogueconfig_t_dialogue_config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const dialogueconfig_t_dialogue_config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const dialogueconfig_t_dialogue_config* internal_default_instance() {
    return reinterpret_cast<const dialogueconfig_t_dialogue_config*>(
               &_dialogueconfig_t_dialogue_config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(dialogueconfig_t_dialogue_config& a, dialogueconfig_t_dialogue_config& b) {
    a.Swap(&b);
  }
  inline void Swap(dialogueconfig_t_dialogue_config* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline dialogueconfig_t_dialogue_config* New() const final {
    return CreateMaybeMessage<dialogueconfig_t_dialogue_config>(nullptr);
  }

  dialogueconfig_t_dialogue_config* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<dialogueconfig_t_dialogue_config>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const dialogueconfig_t_dialogue_config& from);
  void MergeFrom(const dialogueconfig_t_dialogue_config& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(dialogueconfig_t_dialogue_config* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.dialogueconfig.t_dialogue_config";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dialogueconfig_2eproto);
    return ::descriptor_table_dialogueconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDialogueFieldNumber = 3,
    kPicFieldNumber = 5,
    kNameFieldNumber = 6,
    kIconHeroIDLFieldNumber = 10,
    kIconHeroIDRFieldNumber = 11,
    kIconModelPosFieldNumber = 13,
    kTbxidFieldNumber = 1,
    kIdFieldNumber = 2,
    kGroupFieldNumber = 4,
    kCleanFieldNumber = 7,
    kActionFieldNumber = 8,
    kAutoFieldNumber = 9,
    kIsUse3DIconFieldNumber = 12,
  };
  // required string dialogue = 3;
  bool has_dialogue() const;
  private:
  bool _internal_has_dialogue() const;
  public:
  void clear_dialogue();
  const std::string& dialogue() const;
  void set_dialogue(const std::string& value);
  void set_dialogue(std::string&& value);
  void set_dialogue(const char* value);
  void set_dialogue(const char* value, size_t size);
  std::string* mutable_dialogue();
  std::string* release_dialogue();
  void set_allocated_dialogue(std::string* dialogue);
  private:
  const std::string& _internal_dialogue() const;
  void _internal_set_dialogue(const std::string& value);
  std::string* _internal_mutable_dialogue();
  public:

  // required string pic = 5;
  bool has_pic() const;
  private:
  bool _internal_has_pic() const;
  public:
  void clear_pic();
  const std::string& pic() const;
  void set_pic(const std::string& value);
  void set_pic(std::string&& value);
  void set_pic(const char* value);
  void set_pic(const char* value, size_t size);
  std::string* mutable_pic();
  std::string* release_pic();
  void set_allocated_pic(std::string* pic);
  private:
  const std::string& _internal_pic() const;
  void _internal_set_pic(const std::string& value);
  std::string* _internal_mutable_pic();
  public:

  // required string name = 6;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // required string IconHeroIDL = 10;
  bool has_iconheroidl() const;
  private:
  bool _internal_has_iconheroidl() const;
  public:
  void clear_iconheroidl();
  const std::string& iconheroidl() const;
  void set_iconheroidl(const std::string& value);
  void set_iconheroidl(std::string&& value);
  void set_iconheroidl(const char* value);
  void set_iconheroidl(const char* value, size_t size);
  std::string* mutable_iconheroidl();
  std::string* release_iconheroidl();
  void set_allocated_iconheroidl(std::string* iconheroidl);
  private:
  const std::string& _internal_iconheroidl() const;
  void _internal_set_iconheroidl(const std::string& value);
  std::string* _internal_mutable_iconheroidl();
  public:

  // required string IconHeroIDR = 11;
  bool has_iconheroidr() const;
  private:
  bool _internal_has_iconheroidr() const;
  public:
  void clear_iconheroidr();
  const std::string& iconheroidr() const;
  void set_iconheroidr(const std::string& value);
  void set_iconheroidr(std::string&& value);
  void set_iconheroidr(const char* value);
  void set_iconheroidr(const char* value, size_t size);
  std::string* mutable_iconheroidr();
  std::string* release_iconheroidr();
  void set_allocated_iconheroidr(std::string* iconheroidr);
  private:
  const std::string& _internal_iconheroidr() const;
  void _internal_set_iconheroidr(const std::string& value);
  std::string* _internal_mutable_iconheroidr();
  public:

  // required string IconModelPos = 13;
  bool has_iconmodelpos() const;
  private:
  bool _internal_has_iconmodelpos() const;
  public:
  void clear_iconmodelpos();
  const std::string& iconmodelpos() const;
  void set_iconmodelpos(const std::string& value);
  void set_iconmodelpos(std::string&& value);
  void set_iconmodelpos(const char* value);
  void set_iconmodelpos(const char* value, size_t size);
  std::string* mutable_iconmodelpos();
  std::string* release_iconmodelpos();
  void set_allocated_iconmodelpos(std::string* iconmodelpos);
  private:
  const std::string& _internal_iconmodelpos() const;
  void _internal_set_iconmodelpos(const std::string& value);
  std::string* _internal_mutable_iconmodelpos();
  public:

  // required uint32 tbxid = 1 [default = 0];
  bool has_tbxid() const;
  private:
  bool _internal_has_tbxid() const;
  public:
  void clear_tbxid();
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid() const;
  void set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tbxid() const;
  void _internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 id = 2 [default = 0];
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 group = 4;
  bool has_group() const;
  private:
  bool _internal_has_group() const;
  public:
  void clear_group();
  ::PROTOBUF_NAMESPACE_ID::uint32 group() const;
  void set_group(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_group() const;
  void _internal_set_group(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 Clean = 7;
  bool has_clean() const;
  private:
  bool _internal_has_clean() const;
  public:
  void clear_clean();
  ::PROTOBUF_NAMESPACE_ID::uint32 clean() const;
  void set_clean(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_clean() const;
  void _internal_set_clean(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 Action = 8;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  ::PROTOBUF_NAMESPACE_ID::uint32 action() const;
  void set_action(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_action() const;
  void _internal_set_action(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 Auto = 9;
  bool has_auto_() const;
  private:
  bool _internal_has_auto_() const;
  public:
  void clear_auto_();
  ::PROTOBUF_NAMESPACE_ID::uint32 auto_() const;
  void set_auto_(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_auto_() const;
  void _internal_set_auto_(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 IsUse3DIcon = 12;
  bool has_isuse3dicon() const;
  private:
  bool _internal_has_isuse3dicon() const;
  public:
  void clear_isuse3dicon();
  ::PROTOBUF_NAMESPACE_ID::uint32 isuse3dicon() const;
  void set_isuse3dicon(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_isuse3dicon() const;
  void _internal_set_isuse3dicon(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.dialogueconfig.t_dialogue_config)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dialogue_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pic_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr iconheroidl_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr iconheroidr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr iconmodelpos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tbxid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 group_;
  ::PROTOBUF_NAMESPACE_ID::uint32 clean_;
  ::PROTOBUF_NAMESPACE_ID::uint32 action_;
  ::PROTOBUF_NAMESPACE_ID::uint32 auto__;
  ::PROTOBUF_NAMESPACE_ID::uint32 isuse3dicon_;
  friend struct ::TableStruct_dialogueconfig_2eproto;
};
// -------------------------------------------------------------------

class dialogueconfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.dialogueconfig) */ {
 public:
  dialogueconfig();
  virtual ~dialogueconfig();

  dialogueconfig(const dialogueconfig& from);
  dialogueconfig(dialogueconfig&& from) noexcept
    : dialogueconfig() {
    *this = ::std::move(from);
  }

  inline dialogueconfig& operator=(const dialogueconfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline dialogueconfig& operator=(dialogueconfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const dialogueconfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const dialogueconfig* internal_default_instance() {
    return reinterpret_cast<const dialogueconfig*>(
               &_dialogueconfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(dialogueconfig& a, dialogueconfig& b) {
    a.Swap(&b);
  }
  inline void Swap(dialogueconfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline dialogueconfig* New() const final {
    return CreateMaybeMessage<dialogueconfig>(nullptr);
  }

  dialogueconfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<dialogueconfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const dialogueconfig& from);
  void MergeFrom(const dialogueconfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(dialogueconfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.dialogueconfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dialogueconfig_2eproto);
    return ::descriptor_table_dialogueconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef dialogueconfig_t_dialogue_config t_dialogue_config;

  // accessors -------------------------------------------------------

  enum : int {
    kDatasFieldNumber = 1,
  };
  // repeated .pb.dialogueconfig.t_dialogue_config datas = 1;
  int datas_size() const;
  private:
  int _internal_datas_size() const;
  public:
  void clear_datas();
  ::pb::dialogueconfig_t_dialogue_config* mutable_datas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::dialogueconfig_t_dialogue_config >*
      mutable_datas();
  private:
  const ::pb::dialogueconfig_t_dialogue_config& _internal_datas(int index) const;
  ::pb::dialogueconfig_t_dialogue_config* _internal_add_datas();
  public:
  const ::pb::dialogueconfig_t_dialogue_config& datas(int index) const;
  ::pb::dialogueconfig_t_dialogue_config* add_datas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::dialogueconfig_t_dialogue_config >&
      datas() const;

  // @@protoc_insertion_point(class_scope:pb.dialogueconfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::dialogueconfig_t_dialogue_config > datas_;
  friend struct ::TableStruct_dialogueconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// dialogueconfig_t_dialogue_config

// required uint32 tbxid = 1 [default = 0];
inline bool dialogueconfig_t_dialogue_config::_internal_has_tbxid() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_tbxid() const {
  return _internal_has_tbxid();
}
inline void dialogueconfig_t_dialogue_config::clear_tbxid() {
  tbxid_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::_internal_tbxid() const {
  return tbxid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::tbxid() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.tbxid)
  return _internal_tbxid();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  tbxid_ = value;
}
inline void dialogueconfig_t_dialogue_config::set_tbxid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tbxid(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.tbxid)
}

// required uint32 id = 2 [default = 0];
inline bool dialogueconfig_t_dialogue_config::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_id() const {
  return _internal_has_id();
}
inline void dialogueconfig_t_dialogue_config::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::id() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.id)
  return _internal_id();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  id_ = value;
}
inline void dialogueconfig_t_dialogue_config::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.id)
}

// required string dialogue = 3;
inline bool dialogueconfig_t_dialogue_config::_internal_has_dialogue() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_dialogue() const {
  return _internal_has_dialogue();
}
inline void dialogueconfig_t_dialogue_config::clear_dialogue() {
  dialogue_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& dialogueconfig_t_dialogue_config::dialogue() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.dialogue)
  return _internal_dialogue();
}
inline void dialogueconfig_t_dialogue_config::set_dialogue(const std::string& value) {
  _internal_set_dialogue(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.dialogue)
}
inline std::string* dialogueconfig_t_dialogue_config::mutable_dialogue() {
  // @@protoc_insertion_point(field_mutable:pb.dialogueconfig.t_dialogue_config.dialogue)
  return _internal_mutable_dialogue();
}
inline const std::string& dialogueconfig_t_dialogue_config::_internal_dialogue() const {
  return dialogue_.GetNoArena();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_dialogue(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  dialogue_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void dialogueconfig_t_dialogue_config::set_dialogue(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  dialogue_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.dialogueconfig.t_dialogue_config.dialogue)
}
inline void dialogueconfig_t_dialogue_config::set_dialogue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  dialogue_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.dialogueconfig.t_dialogue_config.dialogue)
}
inline void dialogueconfig_t_dialogue_config::set_dialogue(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  dialogue_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.dialogueconfig.t_dialogue_config.dialogue)
}
inline std::string* dialogueconfig_t_dialogue_config::_internal_mutable_dialogue() {
  _has_bits_[0] |= 0x00000001u;
  return dialogue_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* dialogueconfig_t_dialogue_config::release_dialogue() {
  // @@protoc_insertion_point(field_release:pb.dialogueconfig.t_dialogue_config.dialogue)
  if (!_internal_has_dialogue()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return dialogue_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void dialogueconfig_t_dialogue_config::set_allocated_dialogue(std::string* dialogue) {
  if (dialogue != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  dialogue_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dialogue);
  // @@protoc_insertion_point(field_set_allocated:pb.dialogueconfig.t_dialogue_config.dialogue)
}

// required uint32 group = 4;
inline bool dialogueconfig_t_dialogue_config::_internal_has_group() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_group() const {
  return _internal_has_group();
}
inline void dialogueconfig_t_dialogue_config::clear_group() {
  group_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::_internal_group() const {
  return group_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::group() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.group)
  return _internal_group();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_group(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  group_ = value;
}
inline void dialogueconfig_t_dialogue_config::set_group(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_group(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.group)
}

// required string pic = 5;
inline bool dialogueconfig_t_dialogue_config::_internal_has_pic() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_pic() const {
  return _internal_has_pic();
}
inline void dialogueconfig_t_dialogue_config::clear_pic() {
  pic_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& dialogueconfig_t_dialogue_config::pic() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.pic)
  return _internal_pic();
}
inline void dialogueconfig_t_dialogue_config::set_pic(const std::string& value) {
  _internal_set_pic(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.pic)
}
inline std::string* dialogueconfig_t_dialogue_config::mutable_pic() {
  // @@protoc_insertion_point(field_mutable:pb.dialogueconfig.t_dialogue_config.pic)
  return _internal_mutable_pic();
}
inline const std::string& dialogueconfig_t_dialogue_config::_internal_pic() const {
  return pic_.GetNoArena();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_pic(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  pic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void dialogueconfig_t_dialogue_config::set_pic(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  pic_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.dialogueconfig.t_dialogue_config.pic)
}
inline void dialogueconfig_t_dialogue_config::set_pic(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  pic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.dialogueconfig.t_dialogue_config.pic)
}
inline void dialogueconfig_t_dialogue_config::set_pic(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  pic_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.dialogueconfig.t_dialogue_config.pic)
}
inline std::string* dialogueconfig_t_dialogue_config::_internal_mutable_pic() {
  _has_bits_[0] |= 0x00000002u;
  return pic_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* dialogueconfig_t_dialogue_config::release_pic() {
  // @@protoc_insertion_point(field_release:pb.dialogueconfig.t_dialogue_config.pic)
  if (!_internal_has_pic()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return pic_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void dialogueconfig_t_dialogue_config::set_allocated_pic(std::string* pic) {
  if (pic != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  pic_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pic);
  // @@protoc_insertion_point(field_set_allocated:pb.dialogueconfig.t_dialogue_config.pic)
}

// required string name = 6;
inline bool dialogueconfig_t_dialogue_config::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_name() const {
  return _internal_has_name();
}
inline void dialogueconfig_t_dialogue_config::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& dialogueconfig_t_dialogue_config::name() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.name)
  return _internal_name();
}
inline void dialogueconfig_t_dialogue_config::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.name)
}
inline std::string* dialogueconfig_t_dialogue_config::mutable_name() {
  // @@protoc_insertion_point(field_mutable:pb.dialogueconfig.t_dialogue_config.name)
  return _internal_mutable_name();
}
inline const std::string& dialogueconfig_t_dialogue_config::_internal_name() const {
  return name_.GetNoArena();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void dialogueconfig_t_dialogue_config::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.dialogueconfig.t_dialogue_config.name)
}
inline void dialogueconfig_t_dialogue_config::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.dialogueconfig.t_dialogue_config.name)
}
inline void dialogueconfig_t_dialogue_config::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.dialogueconfig.t_dialogue_config.name)
}
inline std::string* dialogueconfig_t_dialogue_config::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000004u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* dialogueconfig_t_dialogue_config::release_name() {
  // @@protoc_insertion_point(field_release:pb.dialogueconfig.t_dialogue_config.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void dialogueconfig_t_dialogue_config::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.dialogueconfig.t_dialogue_config.name)
}

// required uint32 Clean = 7;
inline bool dialogueconfig_t_dialogue_config::_internal_has_clean() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_clean() const {
  return _internal_has_clean();
}
inline void dialogueconfig_t_dialogue_config::clear_clean() {
  clean_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::_internal_clean() const {
  return clean_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::clean() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.Clean)
  return _internal_clean();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_clean(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  clean_ = value;
}
inline void dialogueconfig_t_dialogue_config::set_clean(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_clean(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.Clean)
}

// required uint32 Action = 8;
inline bool dialogueconfig_t_dialogue_config::_internal_has_action() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_action() const {
  return _internal_has_action();
}
inline void dialogueconfig_t_dialogue_config::clear_action() {
  action_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::_internal_action() const {
  return action_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::action() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.Action)
  return _internal_action();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_action(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  action_ = value;
}
inline void dialogueconfig_t_dialogue_config::set_action(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.Action)
}

// required uint32 Auto = 9;
inline bool dialogueconfig_t_dialogue_config::_internal_has_auto_() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_auto_() const {
  return _internal_has_auto_();
}
inline void dialogueconfig_t_dialogue_config::clear_auto_() {
  auto__ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::_internal_auto_() const {
  return auto__;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::auto_() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.Auto)
  return _internal_auto_();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_auto_(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  auto__ = value;
}
inline void dialogueconfig_t_dialogue_config::set_auto_(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_auto_(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.Auto)
}

// required string IconHeroIDL = 10;
inline bool dialogueconfig_t_dialogue_config::_internal_has_iconheroidl() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_iconheroidl() const {
  return _internal_has_iconheroidl();
}
inline void dialogueconfig_t_dialogue_config::clear_iconheroidl() {
  iconheroidl_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& dialogueconfig_t_dialogue_config::iconheroidl() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.IconHeroIDL)
  return _internal_iconheroidl();
}
inline void dialogueconfig_t_dialogue_config::set_iconheroidl(const std::string& value) {
  _internal_set_iconheroidl(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.IconHeroIDL)
}
inline std::string* dialogueconfig_t_dialogue_config::mutable_iconheroidl() {
  // @@protoc_insertion_point(field_mutable:pb.dialogueconfig.t_dialogue_config.IconHeroIDL)
  return _internal_mutable_iconheroidl();
}
inline const std::string& dialogueconfig_t_dialogue_config::_internal_iconheroidl() const {
  return iconheroidl_.GetNoArena();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_iconheroidl(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  iconheroidl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void dialogueconfig_t_dialogue_config::set_iconheroidl(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  iconheroidl_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.dialogueconfig.t_dialogue_config.IconHeroIDL)
}
inline void dialogueconfig_t_dialogue_config::set_iconheroidl(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  iconheroidl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.dialogueconfig.t_dialogue_config.IconHeroIDL)
}
inline void dialogueconfig_t_dialogue_config::set_iconheroidl(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  iconheroidl_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.dialogueconfig.t_dialogue_config.IconHeroIDL)
}
inline std::string* dialogueconfig_t_dialogue_config::_internal_mutable_iconheroidl() {
  _has_bits_[0] |= 0x00000008u;
  return iconheroidl_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* dialogueconfig_t_dialogue_config::release_iconheroidl() {
  // @@protoc_insertion_point(field_release:pb.dialogueconfig.t_dialogue_config.IconHeroIDL)
  if (!_internal_has_iconheroidl()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return iconheroidl_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void dialogueconfig_t_dialogue_config::set_allocated_iconheroidl(std::string* iconheroidl) {
  if (iconheroidl != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  iconheroidl_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), iconheroidl);
  // @@protoc_insertion_point(field_set_allocated:pb.dialogueconfig.t_dialogue_config.IconHeroIDL)
}

// required string IconHeroIDR = 11;
inline bool dialogueconfig_t_dialogue_config::_internal_has_iconheroidr() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_iconheroidr() const {
  return _internal_has_iconheroidr();
}
inline void dialogueconfig_t_dialogue_config::clear_iconheroidr() {
  iconheroidr_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& dialogueconfig_t_dialogue_config::iconheroidr() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.IconHeroIDR)
  return _internal_iconheroidr();
}
inline void dialogueconfig_t_dialogue_config::set_iconheroidr(const std::string& value) {
  _internal_set_iconheroidr(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.IconHeroIDR)
}
inline std::string* dialogueconfig_t_dialogue_config::mutable_iconheroidr() {
  // @@protoc_insertion_point(field_mutable:pb.dialogueconfig.t_dialogue_config.IconHeroIDR)
  return _internal_mutable_iconheroidr();
}
inline const std::string& dialogueconfig_t_dialogue_config::_internal_iconheroidr() const {
  return iconheroidr_.GetNoArena();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_iconheroidr(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  iconheroidr_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void dialogueconfig_t_dialogue_config::set_iconheroidr(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  iconheroidr_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.dialogueconfig.t_dialogue_config.IconHeroIDR)
}
inline void dialogueconfig_t_dialogue_config::set_iconheroidr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  iconheroidr_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.dialogueconfig.t_dialogue_config.IconHeroIDR)
}
inline void dialogueconfig_t_dialogue_config::set_iconheroidr(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  iconheroidr_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.dialogueconfig.t_dialogue_config.IconHeroIDR)
}
inline std::string* dialogueconfig_t_dialogue_config::_internal_mutable_iconheroidr() {
  _has_bits_[0] |= 0x00000010u;
  return iconheroidr_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* dialogueconfig_t_dialogue_config::release_iconheroidr() {
  // @@protoc_insertion_point(field_release:pb.dialogueconfig.t_dialogue_config.IconHeroIDR)
  if (!_internal_has_iconheroidr()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return iconheroidr_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void dialogueconfig_t_dialogue_config::set_allocated_iconheroidr(std::string* iconheroidr) {
  if (iconheroidr != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  iconheroidr_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), iconheroidr);
  // @@protoc_insertion_point(field_set_allocated:pb.dialogueconfig.t_dialogue_config.IconHeroIDR)
}

// required uint32 IsUse3DIcon = 12;
inline bool dialogueconfig_t_dialogue_config::_internal_has_isuse3dicon() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_isuse3dicon() const {
  return _internal_has_isuse3dicon();
}
inline void dialogueconfig_t_dialogue_config::clear_isuse3dicon() {
  isuse3dicon_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::_internal_isuse3dicon() const {
  return isuse3dicon_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 dialogueconfig_t_dialogue_config::isuse3dicon() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.IsUse3DIcon)
  return _internal_isuse3dicon();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_isuse3dicon(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  isuse3dicon_ = value;
}
inline void dialogueconfig_t_dialogue_config::set_isuse3dicon(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_isuse3dicon(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.IsUse3DIcon)
}

// required string IconModelPos = 13;
inline bool dialogueconfig_t_dialogue_config::_internal_has_iconmodelpos() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool dialogueconfig_t_dialogue_config::has_iconmodelpos() const {
  return _internal_has_iconmodelpos();
}
inline void dialogueconfig_t_dialogue_config::clear_iconmodelpos() {
  iconmodelpos_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& dialogueconfig_t_dialogue_config::iconmodelpos() const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.t_dialogue_config.IconModelPos)
  return _internal_iconmodelpos();
}
inline void dialogueconfig_t_dialogue_config::set_iconmodelpos(const std::string& value) {
  _internal_set_iconmodelpos(value);
  // @@protoc_insertion_point(field_set:pb.dialogueconfig.t_dialogue_config.IconModelPos)
}
inline std::string* dialogueconfig_t_dialogue_config::mutable_iconmodelpos() {
  // @@protoc_insertion_point(field_mutable:pb.dialogueconfig.t_dialogue_config.IconModelPos)
  return _internal_mutable_iconmodelpos();
}
inline const std::string& dialogueconfig_t_dialogue_config::_internal_iconmodelpos() const {
  return iconmodelpos_.GetNoArena();
}
inline void dialogueconfig_t_dialogue_config::_internal_set_iconmodelpos(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  iconmodelpos_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void dialogueconfig_t_dialogue_config::set_iconmodelpos(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  iconmodelpos_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.dialogueconfig.t_dialogue_config.IconModelPos)
}
inline void dialogueconfig_t_dialogue_config::set_iconmodelpos(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  iconmodelpos_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.dialogueconfig.t_dialogue_config.IconModelPos)
}
inline void dialogueconfig_t_dialogue_config::set_iconmodelpos(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  iconmodelpos_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.dialogueconfig.t_dialogue_config.IconModelPos)
}
inline std::string* dialogueconfig_t_dialogue_config::_internal_mutable_iconmodelpos() {
  _has_bits_[0] |= 0x00000020u;
  return iconmodelpos_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* dialogueconfig_t_dialogue_config::release_iconmodelpos() {
  // @@protoc_insertion_point(field_release:pb.dialogueconfig.t_dialogue_config.IconModelPos)
  if (!_internal_has_iconmodelpos()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return iconmodelpos_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void dialogueconfig_t_dialogue_config::set_allocated_iconmodelpos(std::string* iconmodelpos) {
  if (iconmodelpos != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  iconmodelpos_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), iconmodelpos);
  // @@protoc_insertion_point(field_set_allocated:pb.dialogueconfig.t_dialogue_config.IconModelPos)
}

// -------------------------------------------------------------------

// dialogueconfig

// repeated .pb.dialogueconfig.t_dialogue_config datas = 1;
inline int dialogueconfig::_internal_datas_size() const {
  return datas_.size();
}
inline int dialogueconfig::datas_size() const {
  return _internal_datas_size();
}
inline void dialogueconfig::clear_datas() {
  datas_.Clear();
}
inline ::pb::dialogueconfig_t_dialogue_config* dialogueconfig::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:pb.dialogueconfig.datas)
  return datas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::dialogueconfig_t_dialogue_config >*
dialogueconfig::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:pb.dialogueconfig.datas)
  return &datas_;
}
inline const ::pb::dialogueconfig_t_dialogue_config& dialogueconfig::_internal_datas(int index) const {
  return datas_.Get(index);
}
inline const ::pb::dialogueconfig_t_dialogue_config& dialogueconfig::datas(int index) const {
  // @@protoc_insertion_point(field_get:pb.dialogueconfig.datas)
  return _internal_datas(index);
}
inline ::pb::dialogueconfig_t_dialogue_config* dialogueconfig::_internal_add_datas() {
  return datas_.Add();
}
inline ::pb::dialogueconfig_t_dialogue_config* dialogueconfig::add_datas() {
  // @@protoc_insertion_point(field_add:pb.dialogueconfig.datas)
  return _internal_add_datas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::dialogueconfig_t_dialogue_config >&
dialogueconfig::datas() const {
  // @@protoc_insertion_point(field_list:pb.dialogueconfig.datas)
  return datas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dialogueconfig_2eproto
